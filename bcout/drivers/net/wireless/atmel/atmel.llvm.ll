; ModuleID = '../bcout/drivers/net/wireless/atmel/atmel.llvm.bc'
source_filename = "drivers/net/wireless/atmel/atmel.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.anon.136 = type { i32, i32, i32, i8* }
%struct.iw_handler_def = type { i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)**, i16, i16, i16, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)**, %struct.iw_priv_args*, %struct.iw_statistics* (%struct.net_device*)* }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.135, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.anon = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.atomic64_t = type { i64 }
%struct.atomic_t = type { i32 }
%struct.iw_public_data = type { %struct.iw_spy_data*, %struct.libipw_device* }
%struct.iw_spy_data = type { i32, [8 x [6 x i8]], [8 x %struct.iw_quality], %struct.iw_quality, %struct.iw_quality, [8 x i8] }
%struct.iw_quality = type { i8, i8, i8, i8 }
%struct.libipw_device = type opaque
%struct.net_device_ops = type { {}*, void (%struct.net_device*)*, {}*, {}*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, {}*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.sk_buff = type { %union.anon.0, %union.anon.3, %union.anon.4, [48 x i8], %union.anon.5, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.7, i32, i32, i32, i16, i16, %union.anon.9, %union.anon.10, %union.anon.11, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.2 }
%union.anon.2 = type { %struct.net_device* }
%union.anon.3 = type { %struct.sock* }
%struct.sock = type opaque
%union.anon.4 = type { i64 }
%union.anon.5 = type { %struct.anon.6 }
%struct.anon.6 = type { i64, void (%struct.sk_buff*)* }
%union.anon.7 = type { i32 }
%union.anon.9 = type { i32 }
%union.anon.10 = type { i32 }
%union.anon.11 = type { i16 }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.ifreq = type { %union.anon.12, %union.anon.13 }
%union.anon.12 = type { [16 x i8] }
%union.anon.13 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type opaque
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.nlattr = type { i16, i16 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nla_policy = type opaque
%struct.neighbour = type opaque
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.15 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.15 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.16 }
%union.anon.16 = type { %struct.anon.17 }
%struct.anon.17 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type opaque
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, {}*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, {}*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, {}*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, {}*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.124 }
%union.anon.124 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.125, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.125 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.126 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.126 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.127, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.127 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.43, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.43 = type { %struct.callback_head }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.117, %struct.list_head, %struct.list_head, %union.anon.118 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.44, i8* }
%union.anon.44 = type { i64 }
%struct.lockref = type { %union.anon.115 }
%union.anon.115 = type { %struct.anon.116 }
%struct.anon.116 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.47, %union.anon.107, %struct.atomic_t, [8 x i8] }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.107 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.108, i32 }
%union.anon.108 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.100, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.63, [0 x i64] }
%struct.anon.63 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.64, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.64 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.65 }
%union.anon.65 = type { %struct.anon.66 }
%struct.anon.66 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type { %struct.kref, %struct.idr, %struct.callback_head, i32, %struct.task_struct*, %struct.kmem_cache*, i32, %struct.pid_namespace*, %struct.user_namespace*, %struct.ucounts*, i32, %struct.ns_common }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.kmem_cache = type opaque
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.72, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.73, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.74, %union.anon.78, %struct.key_restriction* }
%union.anon.72 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.73 = type { i64 }
%union.anon.74 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.75, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.75 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.78 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.proc_dir_entry = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.80, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.80 = type { %struct.anon.81 }
%struct.anon.81 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type opaque
%struct.inet_peer_base = type opaque
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.83, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.83 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.in6_addr = type { %union.anon.84 }
%union.anon.84 = type { [4 x i32] }
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type opaque
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.85 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.ipv6_devconf = type opaque
%struct.fib6_info = type opaque
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.dst_entry = type opaque
%struct.percpu_counter = type { i64 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.seg6_pernet_data = type opaque
%struct.anon.85 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.86, %union.anon.87, i32 }
%struct.request_queue = type opaque
%union.anon.86 = type { %struct.list_head }
%union.anon.87 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.88 }
%struct.anon.88 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.92 }
%struct.anon.92 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.99, i32, [12 x i8] }
%union.anon.99 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.100 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.101, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.104 }
%union.anon.101 = type { %struct.anon.102 }
%struct.anon.102 = type { i64, i64 }
%union.anon.104 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.70 }
%union.anon.70 = type { %struct.anon.71, [48 x i8] }
%struct.anon.71 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.117 = type { %struct.list_head }
%union.anon.118 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.109, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.110, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.111, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.114, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.109 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.110 = type { %struct.callback_head }
%union.anon.111 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.49 }
%union.anon.49 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.50, %union.anon.51 }
%union.anon.50 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.51 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.114 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.112 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.112 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.82 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.82 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type opaque
%struct.wireless_dev = type { %struct.wiphy*, i32, %struct.list_head, %struct.net_device*, i32, %struct.list_head, %struct.spinlock, i8, %struct.mutex, i8, i8, [6 x i8], [32 x i8], i8, i8, i8, %struct.cfg80211_conn*, %struct.cfg80211_cached_keys*, i32, i32, %struct.work_struct, [6 x i8], %struct.list_head, %struct.spinlock, %struct.cfg80211_internal_bss*, %struct.cfg80211_chan_def, %struct.cfg80211_chan_def, i8, i8, i8, i32, i32, i32, i32, i8, i8, i64, i32, %struct.anon.133, %struct.cfg80211_cqm_config*, %struct.list_head, %struct.spinlock, %struct.work_struct, i64 }
%struct.wiphy = type { [6 x i8], [6 x i8], %struct.mac_address*, %struct.ieee80211_txrx_stypes*, %struct.ieee80211_iface_combination*, i32, i16, i16, i16, i16, i32, i32, i32, [7 x i8], i32, i32, i32, i8, i8, i8, i8, i16, i16, i32, i32, i32, i32, i32*, i32, i32*, %struct.wiphy_iftype_akm_suites*, i32, i8, i8, i32, i32, i8, [32 x i8], i32, %struct.wiphy_wowlan_support*, %struct.cfg80211_wowlan*, i16, i8, i32, i32, i32, i8*, i8*, i8, %struct.wiphy_iftype_ext_capab*, i32, i8*, [5 x %struct.ieee80211_supported_band*], void (%struct.wiphy*, %struct.regulatory_request*)*, %struct.ieee80211_regdomain*, %struct.device, i8, %struct.dentry*, %struct.ieee80211_ht_cap*, %struct.ieee80211_vht_cap*, %struct.list_head, %struct.possible_net_t, %struct.iw_handler_def*, %struct.wiphy_coalesce_support*, %struct.wiphy_vendor_command*, %struct.nl80211_vendor_cmd_info*, i32, i32, i16, i8, i32, i8, i32, i32, i32, i64, i8, %struct.cfg80211_pmsr_capabilities*, %struct.anon.132, i8, [15 x i8], [0 x i8] }
%struct.mac_address = type { [6 x i8] }
%struct.ieee80211_txrx_stypes = type { i16, i16 }
%struct.ieee80211_iface_combination = type { %struct.ieee80211_iface_limit*, i32, i16, i8, i8, i8, i8, i32 }
%struct.ieee80211_iface_limit = type { i16, i16 }
%struct.wiphy_iftype_akm_suites = type { i16, i32*, i32 }
%struct.wiphy_wowlan_support = type { i32, i32, i32, i32, i32, i32, %struct.wiphy_wowlan_tcp_support* }
%struct.wiphy_wowlan_tcp_support = type { %struct.nl80211_wowlan_tcp_data_token_feature*, i32, i32, i32, i8 }
%struct.nl80211_wowlan_tcp_data_token_feature = type { i32, i32, i32 }
%struct.cfg80211_wowlan = type { i8, i8, i8, i8, i8, i8, i8, %struct.cfg80211_pkt_pattern*, %struct.cfg80211_wowlan_tcp*, i32, %struct.cfg80211_sched_scan_request* }
%struct.cfg80211_pkt_pattern = type { i8*, i8*, i32, i32 }
%struct.cfg80211_wowlan_tcp = type { %struct.socket*, i32, i32, i16, i16, [6 x i8], i32, i8*, %struct.nl80211_wowlan_tcp_data_seq, i32, i32, i8*, i8*, i32, %struct.nl80211_wowlan_tcp_data_token }
%struct.socket = type { i32, i16, i64, %struct.file*, %struct.sock*, %struct.proto_ops*, %struct.socket_wq }
%struct.proto_ops = type { i32, i32, %struct.module*, i32 (%struct.socket*)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.socket*, %struct.sockaddr*, i32, i32)*, i32 (%struct.socket*, %struct.socket*)*, i32 (%struct.socket*, %struct.socket*, i32, i1)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.file*, %struct.socket*, %struct.poll_table_struct*)*, i32 (%struct.socket*, i32, i64)*, i32 (%struct.socket*, i8*, i1, i1)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32, i32, i8*, i8, i32)*, i32 (%struct.socket*, i32, i32, i8*, i32*)*, void (%struct.seq_file*, %struct.socket*)*, i32 (%struct.socket*, %struct.msghdr*, i64)*, i32 (%struct.socket*, %struct.msghdr*, i64, i32)*, i32 (%struct.file*, %struct.socket*, %struct.vm_area_struct*)*, i64 (%struct.socket*, %struct.page*, i32, i64, i32)*, i64 (%struct.socket*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.sock*, i32)*, i32 (%struct.socket*)*, i32 (%struct.sock*, %struct.read_descriptor_t*, i32 (%struct.read_descriptor_t*, %struct.sk_buff*, i32, i64)*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, i32)* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.msghdr = type { i8*, i32, %struct.iov_iter, %union.anon.129, i8, i64, i32, %struct.kiocb* }
%union.anon.129 = type { i8* }
%struct.read_descriptor_t = type { i64, i64, %union.anon.130, i32 }
%union.anon.130 = type { i8* }
%struct.socket_wq = type { %struct.wait_queue_head, %struct.fasync_struct*, i64, %struct.callback_head }
%struct.nl80211_wowlan_tcp_data_seq = type { i32, i32, i32 }
%struct.nl80211_wowlan_tcp_data_token = type { i32, i32, [0 x i8] }
%struct.cfg80211_sched_scan_request = type { i64, %struct.cfg80211_ssid*, i32, i32, i32, i8*, i64, i32, %struct.cfg80211_match_set*, i32, i32, i32, %struct.cfg80211_sched_scan_plan*, i32, [6 x i8], [6 x i8], i8, i8, %struct.cfg80211_bss_select_adjust, %struct.wiphy*, %struct.net_device*, i64, i8, %struct.callback_head, i32, i8, %struct.list_head, [0 x %struct.ieee80211_channel*] }
%struct.cfg80211_ssid = type { [32 x i8], i8 }
%struct.cfg80211_match_set = type { %struct.cfg80211_ssid, [6 x i8], i32, [5 x i32] }
%struct.cfg80211_sched_scan_plan = type { i32, i32 }
%struct.cfg80211_bss_select_adjust = type { i32, i8 }
%struct.ieee80211_channel = type { i32, i32, i16, i16, i32, i32, i32, i32, i8, i32, i32, i32, i32, i64, i32 }
%struct.wiphy_iftype_ext_capab = type { i32, i8*, i8*, i8 }
%struct.ieee80211_supported_band = type { %struct.ieee80211_channel*, %struct.ieee80211_rate*, i32, i32, i32, %struct.ieee80211_sta_ht_cap, %struct.ieee80211_sta_vht_cap, %struct.ieee80211_sta_s1g_cap, %struct.ieee80211_edmg, i16, %struct.ieee80211_sband_iftype_data* }
%struct.ieee80211_rate = type { i32, i16, i16, i16 }
%struct.ieee80211_sta_ht_cap = type <{ i16, i8, i8, i8, %struct.ieee80211_mcs_info, i8 }>
%struct.ieee80211_mcs_info = type { [10 x i8], i16, i8, [3 x i8] }
%struct.ieee80211_sta_vht_cap = type { i8, i32, %struct.ieee80211_vht_mcs_info }
%struct.ieee80211_vht_mcs_info = type { i16, i16, i16, i16 }
%struct.ieee80211_sta_s1g_cap = type { i8, [10 x i8], [5 x i8] }
%struct.ieee80211_edmg = type { i8, i32 }
%struct.ieee80211_sband_iftype_data = type <{ i16, %struct.ieee80211_sta_he_cap, %struct.ieee80211_he_6ghz_capa, i8 }>
%struct.ieee80211_sta_he_cap = type <{ i8, %struct.ieee80211_he_cap_elem, %struct.ieee80211_he_mcs_nss_supp, [25 x i8] }>
%struct.ieee80211_he_cap_elem = type { [6 x i8], [11 x i8] }
%struct.ieee80211_he_mcs_nss_supp = type { i16, i16, i16, i16, i16, i16 }
%struct.ieee80211_he_6ghz_capa = type { i16 }
%struct.regulatory_request = type { %struct.callback_head, i32, i32, i32, [3 x i8], i32, i8, i8, i32, %struct.list_head }
%struct.ieee80211_regdomain = type { %struct.callback_head, i32, [3 x i8], i32, [0 x %struct.ieee80211_reg_rule] }
%struct.ieee80211_reg_rule = type { %struct.ieee80211_freq_range, %struct.ieee80211_power_rule, %struct.ieee80211_wmm_rule, i32, i32, i8 }
%struct.ieee80211_freq_range = type { i32, i32, i32 }
%struct.ieee80211_power_rule = type { i32, i32 }
%struct.ieee80211_wmm_rule = type { [4 x %struct.ieee80211_wmm_ac], [4 x %struct.ieee80211_wmm_ac] }
%struct.ieee80211_wmm_ac = type { i16, i16, i16, i8 }
%struct.ieee80211_ht_cap = type <{ i16, i8, %struct.ieee80211_mcs_info, i16, i32, i8 }>
%struct.ieee80211_vht_cap = type { i32, %struct.ieee80211_vht_mcs_info }
%struct.wiphy_coalesce_support = type { i32, i32, i32, i32, i32, i32 }
%struct.wiphy_vendor_command = type { %struct.nl80211_vendor_cmd_info, i32, i32 (%struct.wiphy*, %struct.wireless_dev*, i8*, i32)*, i32 (%struct.wiphy*, %struct.wireless_dev*, %struct.sk_buff*, i8*, i32, i64*)*, %struct.nla_policy*, i32 }
%struct.nl80211_vendor_cmd_info = type { i32, i32 }
%struct.cfg80211_pmsr_capabilities = type { i32, i8, %struct.anon.131 }
%struct.anon.131 = type { i32, i32, i8, i8, i8 }
%struct.anon.132 = type { i64, i64, i8 }
%struct.cfg80211_conn = type opaque
%struct.cfg80211_cached_keys = type opaque
%struct.cfg80211_internal_bss = type opaque
%struct.cfg80211_chan_def = type { %struct.ieee80211_channel*, i32, i32, i32, %struct.ieee80211_edmg, i16 }
%struct.anon.133 = type { %struct.cfg80211_ibss_params, %struct.cfg80211_connect_params, %struct.cfg80211_cached_keys*, i8*, i64, [6 x i8], [6 x i8], [32 x i8], i8, i8, i8 }
%struct.cfg80211_ibss_params = type { i8*, i8*, %struct.cfg80211_chan_def, i8*, i8, i8, i16, i32, i8, i8, i8, i8, i8, [5 x i32], %struct.ieee80211_ht_cap, %struct.ieee80211_ht_cap, %struct.key_params*, i32 }
%struct.key_params = type { i8*, i8*, i32, i32, i16, i32, i32 }
%struct.cfg80211_connect_params = type { %struct.ieee80211_channel*, %struct.ieee80211_channel*, i8*, i8*, i8*, i64, i32, i8*, i64, i8, i32, %struct.cfg80211_crypto_settings, i8*, i8, i8, i32, i32, %struct.ieee80211_ht_cap, %struct.ieee80211_ht_cap, %struct.ieee80211_vht_cap, %struct.ieee80211_vht_cap, i8, %struct.cfg80211_bss_selection, i8*, i8*, i64, i8*, i64, i16, i8*, i64, i8, %struct.ieee80211_edmg }
%struct.cfg80211_crypto_settings = type { i32, i32, i32, [5 x i32], i32, [2 x i32], i8, i16, i8, i8, i8, %struct.key_params*, i32, i8*, i8*, i8 }
%struct.cfg80211_bss_selection = type { i32, %union.anon.134 }
%union.anon.134 = type { %struct.cfg80211_bss_select_adjust }
%struct.cfg80211_cqm_config = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type opaque
%struct.spinlock = type { %union.anon.46 }
%union.anon.46 = type { %struct.raw_spinlock }
%struct.xdp_dev_bulk_queue = type opaque
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.possible_net_t = type { %struct.net* }
%union.anon.135 = type { i8* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type opaque
%struct.acpi_device_id = type opaque
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.rtnl_link_ops = type opaque
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.iw_request_info = type { i16, i16 }
%union.iwreq_data = type { %struct.iw_point }
%struct.iw_point = type { i8*, i16, i16 }
%struct.iw_priv_args = type { i32, i16, i16, [16 x i8] }
%struct.iw_statistics = type { i16, %struct.iw_quality, %struct.iw_discarded, %struct.iw_missed }
%struct.iw_discarded = type { i32, i32, i32, i32, i32 }
%struct.iw_missed = type { i32 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.anon.142 = type { i32, i8*, i8* }
%struct.atmel_private = type { i8*, i32 (i8*)*, [32 x i8], i32, i8*, i32, %struct.timer_list, %struct.net_device*, %struct.device*, %struct.iw_statistics, %struct.spinlock, %struct.spinlock, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [6 x i8], i8, i8, i8, i8, i8, i8, [4 x [40 x i8]], [4 x i32], i32, i32, i16, %struct.host_info_struct, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, [64 x %struct.bss_info], i32, i32, i32, i32, i32, [6 x i8], [6 x i8], [32 x i8], [32 x i8], i64, [2316 x i8] }
%struct.host_info_struct = type { i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [2 x i8] }
%struct.bss_info = type { i32, i32, i32, i32, i32, i32, i32, [6 x i8], [32 x i8] }
%struct.firmware = type { i64, i8*, i8* }
%struct.get_set_mib = type { i8, i8, i8, i8, [212 x i8] }
%struct.anon.141 = type { [6 x i8], [32 x i8], i8, i8, i16, i16, i16, i8, i8 }
%struct.ieee80211_hdr = type { i16, i16, [6 x i8], [6 x i8], [6 x i8], i16, [6 x i8] }
%struct.atmel_priv_ioctl = type { [32 x i8], i8*, i16 }
%struct.iwreq = type { %union.anon.137, %union.iwreq_data }
%union.anon.137 = type { [16 x i8] }
%struct.iw_param = type { i32, i8, i8, i16 }
%struct.anon.140 = type { [4 x [40 x i8]], [6 x i8], i8, i8, i8, i8, i8, i8, i32, i32, [4 x [8 x i8]] }
%struct.beacon_format = type { i64, i16, i16, i8, i8, i8, i8, i8, i8 }
%struct.auth_body = type { i16, i16, i16, i8, i8, [253 x i8] }
%struct.ass_resp_format = type { i16, i16, i16, i8, i8, [4 x i8] }
%struct.anon.138 = type { [6 x i8], [32 x i8], i8, i8, i16, i8, i8 }
%struct.ass_req_format = type { i16, i16, [6 x i8], i8, i8, [32 x i8], i8, i8, [4 x i8] }
%struct.anon.139 = type { [6 x i8], [32 x i8], i8, i8, i8, [3 x i8] }
%struct.iw_freq = type { i32, i16, i8, i8 }
%struct.iw_range = type { i32, i32, i32, i16, i8, i8, [6 x i32], i32, %struct.iw_quality, %struct.iw_quality, i8, [32 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, [8 x i16], i8, i8, i8, i16, i8, [8 x i32], i8, i8, i16, i16, i16, i32, i32, i32, i32, i16, i8, [32 x %struct.iw_freq], i32 }
%struct.iw_event = type { i16, i16, %union.iwreq_data }
%struct.iw_encode_ext = type { i32, [8 x i8], [8 x i8], %struct.sockaddr, i16, i16, [0 x i8] }
%struct.anon.143 = type { i8, i8, i8, i8, i32, i32, [4 x [13 x i8]], i8, [3 x i8] }

@__UNIQUE_ID_author332 = internal constant [26 x i8] c"atmel.author=Simon Kelley\00", section ".modinfo", align 1, !dbg !0
@__UNIQUE_ID_description333 = internal constant [77 x i8] c"atmel.description=Support for Atmel at76c50x 802.11 wireless ethernet cards.\00", section ".modinfo", align 1, !dbg !8697
@__UNIQUE_ID_file334 = internal constant [44 x i8] c"atmel.file=drivers/net/wireless/atmel/atmel\00", section ".modinfo", align 1, !dbg !8702
@__UNIQUE_ID_license335 = internal constant [18 x i8] c"atmel.license=GPL\00", section ".modinfo", align 1, !dbg !8705
@__param_str_firmware = internal constant [15 x i8] c"atmel.firmware\00", align 1, !dbg !8813
@param_ops_charp = external dso_local constant %struct.kernel_param_ops, align 8
@firmware = internal global i8* null, align 8, !dbg !8818
@__param_firmware = internal constant %struct.kernel_param { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__param_str_firmware, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_charp, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i8** @firmware to i8*) } }, section "__param", align 8, !dbg !8710
@__UNIQUE_ID_firmwaretype336 = internal constant [30 x i8] c"atmel.parmtype=firmware:charp\00", section ".modinfo", align 1, !dbg !8759
@__UNIQUE_ID_firmware337 = internal constant [38 x i8] c"atmel.firmware=atmel_at76c502-wpa.bin\00", section ".modinfo", align 1, !dbg !8764
@__UNIQUE_ID_firmware338 = internal constant [34 x i8] c"atmel.firmware=atmel_at76c502.bin\00", section ".modinfo", align 1, !dbg !8769
@__UNIQUE_ID_firmware339 = internal constant [39 x i8] c"atmel.firmware=atmel_at76c502d-wpa.bin\00", section ".modinfo", align 1, !dbg !8774
@__UNIQUE_ID_firmware340 = internal constant [35 x i8] c"atmel.firmware=atmel_at76c502d.bin\00", section ".modinfo", align 1, !dbg !8779
@__UNIQUE_ID_firmware341 = internal constant [39 x i8] c"atmel.firmware=atmel_at76c502e-wpa.bin\00", section ".modinfo", align 1, !dbg !8784
@__UNIQUE_ID_firmware342 = internal constant [35 x i8] c"atmel.firmware=atmel_at76c502e.bin\00", section ".modinfo", align 1, !dbg !8786
@__UNIQUE_ID_firmware343 = internal constant [43 x i8] c"atmel.firmware=atmel_at76c502_3com-wpa.bin\00", section ".modinfo", align 1, !dbg !8788
@__UNIQUE_ID_firmware344 = internal constant [39 x i8] c"atmel.firmware=atmel_at76c502_3com.bin\00", section ".modinfo", align 1, !dbg !8793
@__UNIQUE_ID_firmware345 = internal constant [38 x i8] c"atmel.firmware=atmel_at76c504-wpa.bin\00", section ".modinfo", align 1, !dbg !8795
@__UNIQUE_ID_firmware346 = internal constant [34 x i8] c"atmel.firmware=atmel_at76c504.bin\00", section ".modinfo", align 1, !dbg !8797
@__UNIQUE_ID_firmware347 = internal constant [43 x i8] c"atmel.firmware=atmel_at76c504_2958-wpa.bin\00", section ".modinfo", align 1, !dbg !8799
@__UNIQUE_ID_firmware348 = internal constant [39 x i8] c"atmel.firmware=atmel_at76c504_2958.bin\00", section ".modinfo", align 1, !dbg !8801
@__UNIQUE_ID_firmware349 = internal constant [44 x i8] c"atmel.firmware=atmel_at76c504a_2958-wpa.bin\00", section ".modinfo", align 1, !dbg !8803
@__UNIQUE_ID_firmware350 = internal constant [40 x i8] c"atmel.firmware=atmel_at76c504a_2958.bin\00", section ".modinfo", align 1, !dbg !8805
@__UNIQUE_ID_firmware351 = internal constant [38 x i8] c"atmel.firmware=atmel_at76c506-wpa.bin\00", section ".modinfo", align 1, !dbg !8809
@__UNIQUE_ID_firmware352 = internal constant [34 x i8] c"atmel.firmware=atmel_at76c506.bin\00", section ".modinfo", align 1, !dbg !8811
@channel_table = internal constant [8 x %struct.anon.136] [%struct.anon.136 { i32 16, i32 1, i32 11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0) }, %struct.anon.136 { i32 32, i32 1, i32 11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0) }, %struct.anon.136 { i32 48, i32 1, i32 13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0) }, %struct.anon.136 { i32 49, i32 10, i32 11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0) }, %struct.anon.136 { i32 50, i32 10, i32 13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0) }, %struct.anon.136 { i32 64, i32 14, i32 14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0) }, %struct.anon.136 { i32 65, i32 1, i32 14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0) }, %struct.anon.136 { i32 80, i32 3, i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0) }], align 16, !dbg !8820
@.str = private unnamed_addr constant [55 x i8] c"\011%s: failed to get regulatory domain: assuming MKK1.\0A\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"\013atmel: Couldn't get name!\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@atmel_handler_def = internal constant %struct.iw_handler_def { i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)** getelementptr inbounds ([55 x i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*], [55 x i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*]* @atmel_handler, i32 0, i32 0), i16 55, i16 1, i16 3, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)** getelementptr inbounds ([1 x i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*], [1 x i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*]* @atmel_private_handler, i32 0, i32 0), %struct.iw_priv_args* getelementptr inbounds ([3 x %struct.iw_priv_args], [3 x %struct.iw_priv_args]* @atmel_private_args, i32 0, i32 0), %struct.iw_statistics* (%struct.net_device*)* @atmel_get_wireless_stats }, align 8, !dbg !8841
@.str.2 = private unnamed_addr constant [43 x i8] c"\013%s: register interrupt %d failed, rc %d\0A\00", align 1
@ioport_resource = external dso_local global %struct.resource, align 8
@.str.3 = private unnamed_addr constant [9 x i8] c"atmel_cs\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"atmel_pci\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"driver/atmel\00", align 1
@.str.6 = private unnamed_addr constant [40 x i8] c"\014atmel: unable to create /proc entry.\0A\00", align 1
@.str.7 = private unnamed_addr constant [46 x i8] c"\016%s: Atmel at76c50x. Version %d.%d. MAC %pM\0A\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"USA\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"Canada\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"Europe\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"Spain\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"France\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"MKK\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"MKK1\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"Israel\00", align 1
@atmel_netdev_ops = internal constant { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* } { i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* @atmel_open, i32 (%struct.net_device*)* @atmel_close, i32 (%struct.sk_buff*, %struct.net_device*)* @start_tx, i64 (%struct.sk_buff*, %struct.net_device*, i64)* null, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*, i8*)* @atmel_set_mac_address, i32 (%struct.net_device*)* @eth_validate_addr, i32 (%struct.net_device*, %struct.ifreq*, i32)* @atmel_ioctl, i32 (%struct.net_device*, %struct.ifmap*)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.neigh_parms*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*, %struct.rtnl_link_stats64*)* null, i1 (%struct.net_device*, i32)* null, i32 (i32, %struct.net_device*, i8*)* null, %struct.net_device_stats* (%struct.net_device*)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32, i16, i8, i16)* null, i32 (%struct.net_device*, i32, i32, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)* null, i32 (%struct.net_device*, i32, %struct.nlattr**)* null, i32 (%struct.net_device*, i32, %struct.sk_buff*)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)* null, i32 (%struct.net_device*, i32, i64, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.net_device*)* null, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)* null, i64 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, %struct.neighbour*)* null, void (%struct.net_device*, %struct.neighbour*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)* null, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)* null, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, i8*, i64)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, i8* (%struct.net_device*, %struct.net_device*)* null, void (%struct.net_device*, i8*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.sk_buff*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.netdev_bpf*)* null, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)* null, i32 (%struct.net_device*, i32, i32)* null, %struct.devlink_port* (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)* null, %struct.net_device* (%struct.net_device*)* null }, align 8, !dbg !8830
@rfc1042_header = external dso_local constant [6 x i8], align 1
@__preempt_count = external dso_local global i32, section ".data", align 4
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.17 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.18 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@service_interrupt.irq_order = internal constant [8 x i8] c" \02\01\04\08\10@\80", align 1, !dbg !8832
@.str.19 = private unnamed_addr constant [30 x i8] c"\011%s: failed to contact MAC.\0A\00", align 1
@.str.20 = private unnamed_addr constant [37 x i8] c"\011%s: *** FATAL error interrupt ***\0A\00", align 1
@.str.21 = private unnamed_addr constant [29 x i8] c"\016%s: Generic_irq received.\0A\00", align 1
@atmel_basic_rates = internal global [4 x i8] c"\82\84\0B\16", align 1, !dbg !8839
@.str.22 = private unnamed_addr constant [29 x i8] c"\011%s: MIB buffer too small.\0A\00", align 1
@.str.23 = private unnamed_addr constant [24 x i8] c"Driver version:\09\09%d.%d\0A\00", align 1
@.str.24 = private unnamed_addr constant [53 x i8] c"Firmware version:\09%d.%d build %d\0AFirmware location:\09\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"on card\0A\00", align 1
@.str.26 = private unnamed_addr constant [19 x i8] c"%s loaded by host\0A\00", align 1
@.str.27 = private unnamed_addr constant [22 x i8] c"%s loaded by hotplug\0A\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"Parallel flash\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"SPI flash\0A\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"EEPROM\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"<unknown>\00", align 1
@.str.32 = private unnamed_addr constant [21 x i8] c"MAC memory type:\09%s\0A\00", align 1
@.str.33 = private unnamed_addr constant [23 x i8] c"Regulatory domain:\09%s\0A\00", align 1
@.str.34 = private unnamed_addr constant [23 x i8] c"Host CRC checking:\09%s\0A\00", align 1
@.str.35 = private unnamed_addr constant [3 x i8] c"On\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"Off\00", align 1
@.str.37 = private unnamed_addr constant [26 x i8] c"WPA-capable firmware:\09%s\0A\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"Yes\00", align 1
@.str.39 = private unnamed_addr constant [3 x i8] c"No\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"Scanning\00", align 1
@.str.41 = private unnamed_addr constant [8 x i8] c"Joining\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"Authenticating\00", align 1
@.str.43 = private unnamed_addr constant [12 x i8] c"Associating\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"Ready\00", align 1
@.str.45 = private unnamed_addr constant [14 x i8] c"Reassociating\00", align 1
@.str.46 = private unnamed_addr constant [17 x i8] c"Management error\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"Down\00", align 1
@.str.48 = private unnamed_addr constant [20 x i8] c"Current state:\09\09%s\0A\00", align 1
@atmel_handler = internal constant [55 x i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*] [i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, i8*, i8*)* @atmel_config_commit to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, i8*, i8*)* @atmel_get_name to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.iw_freq*, i8*)* @atmel_set_freq to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.iw_freq*, i8*)* @atmel_get_freq to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, i32*, i8*)* @atmel_set_mode to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, i32*, i8*)* @atmel_get_mode to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.iw_point*, i8*)* @atmel_get_range to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.sockaddr*, i8*)* @atmel_set_wap to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.sockaddr*, i8*)* @atmel_get_wap to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.iw_point*, i8*)* @atmel_set_scan to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.iw_point*, i8*)* @atmel_get_scan to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.iw_point*, i8*)* @atmel_set_essid to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.iw_point*, i8*)* @atmel_get_essid to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.iw_param*, i8*)* @atmel_set_rate to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.iw_param*, i8*)* @atmel_get_rate to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.iw_param*, i8*)* @atmel_set_rts to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.iw_param*, i8*)* @atmel_get_rts to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.iw_param*, i8*)* @atmel_set_frag to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.iw_param*, i8*)* @atmel_get_frag to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.iw_param*, i8*)* @atmel_set_retry to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.iw_param*, i8*)* @atmel_get_retry to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.iw_point*, i8*)* @atmel_set_encode to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.iw_point*, i8*)* @atmel_get_encode to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.iw_param*, i8*)* @atmel_set_power to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* bitcast (i32 (%struct.net_device*, %struct.iw_request_info*, %struct.iw_param*, i8*)* @atmel_get_power to i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*), i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* @atmel_set_auth, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* @atmel_get_auth, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* @atmel_set_encodeext, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* @atmel_get_encodeext, i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)* null], align 16, !dbg !8843
@atmel_private_handler = internal constant [1 x i32 (%struct.net_device*, %struct.iw_request_info*, %union.iwreq_data*, i8*)*] zeroinitializer, align 8, !dbg !8856
@atmel_private_args = internal constant [3 x %struct.iw_priv_args] [%struct.iw_priv_args { i32 35808, i16 6192, i16 0, [16 x i8] c"atmelfwl\00\00\00\00\00\00\00\00" }, %struct.iw_priv_args { i32 35809, i16 0, i16 18433, [16 x i8] c"atmelidifc\00\00\00\00\00\00" }, %struct.iw_priv_args { i32 35810, i16 8212, i16 0, [16 x i8] c"regdomain\00\00\00\00\00\00\00" }], align 16, !dbg !8859
@.str.49 = private unnamed_addr constant [15 x i8] c"IEEE 802.11-DS\00", align 1
@atmel_set_wap.any = internal constant [6 x i8] c"\FF\FF\FF\FF\FF\FF", align 1, !dbg !8848
@atmel_set_wap.off = internal constant [6 x i8] zeroinitializer, align 1, !dbg !8854
@mac_reader = internal global [660 x i8] c"\06\00\00\EA\04\00\00\EA\03\00\00\EA\02\00\00\EA\01\00\00\EA\00\00\00\EA\FF\FF\FF\EA\FE\FF\FF\EA\D3\00\A0\E3\00\F0!\E1\0E\04\A0\E3\00\10\A0\E3\81\11\A0\E1\00\10\81\E3\00\10\80\E5\1C\10\90\E5\10\10\C1\E3\1C\10\80\E5\01\10\A0\E3\08\10\80\E5\02\03\A0\E3\00\10\A0\E3\B0\10\C0\E1\B4\10\C0\E1\B8\10\C0\E1\BC\10\C0\E1V\DC\A0\E3!\00\00\EB\0A\00\A0\E3\1A\00\00\EB\10\00\00\EB\07\00\00\EB\02\03\A0\E3\02\14\A0\E3\B4\10\C0\E1L\10\9F\E5\BC\10\C0\E1\10\10\A0\E3\B8\10\C0\E1\FE\FF\FF\EA\00@-\E9\00 \A0\E3\02<\A0\E3\00\10\A0\E3(\00\9F\E57\00\00\EB\00@\BD\E8\1E\FF/\E1\00@-\E9\12.\A0\E3\060\A0\E3\00\10\A0\E3\02\04\A0\E3/\00\00\EB\00@\BD\E8\1E\FF/\E1\00\02\00\02\80\01\90\E0\01\00\00\0A\01\00P\E2\FC\FF\FF\EA\1E\FF/\E1\80\10\A0\E3\F3\06\A0\E3\00\10\80\E5\00\10\A0\E3\00\10\80\E5\01\10\A0\E3\04\10\80\E5\00\10\80\E5\0E4\A0\E3\1C\10\93\E5\02\1A\81\E3\1C\10\83\E5X\11\9F\E50\10\80\E5T\11\9F\E54\10\80\E58\10\80\E5<\10\80\E5\10\10\90\E5\08\00\90\E5\1E\FF/\E1\F3\16\A0\E3\08\00\91\E5\05\00\A0\E3\0C\00\81\E5\10\00\91\E5\02\00\10\E3\FC\FF\FF\0A\FF\00\A0\E3\0C\00\81\E5\10\00\91\E5\02\00\10\E3\FC\FF\FF\0A\08\00\91\E5\10\00\91\E5\01\00\10\E3\FC\FF\FF\0A\08\00\91\E5\FF\00\00\E2\1E\FF/\E10@-\E9\00P\A0\E1\03@\A0\E1\A2\02\A0\E1\08\00\00\E2\03\00\80\E2\D8\10\9F\E5\00\00\C1\E5\01 \C1\E5\E2\FF\FF\EB\01\00\10\E3\FC\FF\FF\1A\14\00\A0\E3\C4\FF\FF\EB\04 \A0\E1\05\10\A0\E1\02\00\A0\E3\01\00\00\EB0@\BD\E8\1E\FF/\E1p@-\E9\F3F\A0\E3\000\A0\E3\00\00P\E3\08\00\00\9A\8CP\9F\E5\03`\D5\E7\0C`\84\E5\10`\94\E5\02\00\16\E3\FC\FF\FF\0A\010\83\E2\00\00S\E1\F7\FF\FF:\FF0\A0\E3\0C0\84\E5\08\00\94\E5\10\00\94\E5\01\00\10\E3\FC\FF\FF\0A\08\00\94\E5\00\00\A0\E3\00\00R\E3\0B\00\00\9A\10P\94\E5\02\00\15\E3\FC\FF\FF\0A\0C0\84\E5\10P\94\E5\01\00\15\E3\FC\FF\FF\0A\08P\94\E5\01P\C1\E4\01\00\80\E2\02\00P\E1\F3\FF\FF:\C8\00\A0\E3\98\FF\FF\EBp@\BD\E8\1E\FF/\E1\01\0C\00\02\01\02\00\02\00\01\00\02", align 16, !dbg !8865
@.str.50 = private unnamed_addr constant [46 x i8] c"\011%s: MAC failed to boot MAC address reader.\0A\00", align 1
@probe_atmel_card.default_mac = internal constant [6 x i8] c"\00\04%\00\00\00", align 1, !dbg !8862
@.str.51 = private unnamed_addr constant [54 x i8] c"\011%s: *** Invalid MAC address. UPGRADE Firmware ****\0A\00", align 1
@.str.52 = private unnamed_addr constant [27 x i8] c"\011%s: MAC failed to boot.\0A\00", align 1
@.str.53 = private unnamed_addr constant [21 x i8] c"\011%s: card missing.\0A\00", align 1
@.str.54 = private unnamed_addr constant [33 x i8] c"\011%s: MAC failed to initialise.\0A\00", align 1
@.str.55 = private unnamed_addr constant [33 x i8] c"\011%s: MAC failed MR3 self-test.\0A\00", align 1
@.str.56 = private unnamed_addr constant [33 x i8] c"\011%s: MAC failed MR1 self-test.\0A\00", align 1
@reset_atmel_card.firmware_modifier = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i32 0, i32 0), i8* null], align 16, !dbg !8870
@.str.57 = private unnamed_addr constant [5 x i8] c"-wpa\00", align 1
@.str.58 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.59 = private unnamed_addr constant [63 x i8] c"\016%s: card type is unknown: assuming at76c502 firmware is OK.\0A\00", align 1
@.str.60 = private unnamed_addr constant [51 x i8] c"\016%s: if not, use the firmware= module parameter.\0A\00", align 1
@.str.61 = private unnamed_addr constant [19 x i8] c"atmel_at76c502.bin\00", align 1
@.str.62 = private unnamed_addr constant [48 x i8] c"\011%s: firmware %s is missing, cannot continue.\0A\00", align 1
@fw_table = internal global [9 x %struct.anon.142] [%struct.anon.142 { i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i32 0, i32 0) }, %struct.anon.142 { i32 2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i32 0, i32 0) }, %struct.anon.142 { i32 3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i32 0, i32 0) }, %struct.anon.142 { i32 4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i32 0, i32 0) }, %struct.anon.142 { i32 5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i32 0, i32 0) }, %struct.anon.142 { i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i32 0, i32 0) }, %struct.anon.142 { i32 7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i32 0, i32 0) }, %struct.anon.142 { i32 8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i32 0, i32 0) }, %struct.anon.142 zeroinitializer], align 16, !dbg !8873
@.str.63 = private unnamed_addr constant [8 x i8] c"%s%s.%s\00", align 1
@.str.64 = private unnamed_addr constant [45 x i8] c"\011%s: firmware %s is missing, cannot start.\0A\00", align 1
@.str.65 = private unnamed_addr constant [33 x i8] c"\016%s: cannot turn the radio on.\0A\00", align 1
@.str.66 = private unnamed_addr constant [15 x i8] c"atmel_at76c502\00", align 1
@.str.67 = private unnamed_addr constant [4 x i8] c"bin\00", align 1
@.str.68 = private unnamed_addr constant [16 x i8] c"atmel_at76c502d\00", align 1
@.str.69 = private unnamed_addr constant [16 x i8] c"atmel_at76c502e\00", align 1
@.str.70 = private unnamed_addr constant [20 x i8] c"atmel_at76c502_3com\00", align 1
@.str.71 = private unnamed_addr constant [15 x i8] c"atmel_at76c504\00", align 1
@.str.72 = private unnamed_addr constant [20 x i8] c"atmel_at76c504_2958\00", align 1
@.str.73 = private unnamed_addr constant [21 x i8] c"atmel_at76c504a_2958\00", align 1
@.str.74 = private unnamed_addr constant [15 x i8] c"atmel_at76c506\00", align 1
@llvm.used = appending global [22 x i8*] [i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__UNIQUE_ID_author332, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__UNIQUE_ID_description333, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__UNIQUE_ID_file334, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__UNIQUE_ID_license335, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_firmware to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__UNIQUE_ID_firmwaretype336, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_firmware337, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__UNIQUE_ID_firmware338, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__UNIQUE_ID_firmware339, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__UNIQUE_ID_firmware340, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__UNIQUE_ID_firmware341, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__UNIQUE_ID_firmware342, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__UNIQUE_ID_firmware343, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__UNIQUE_ID_firmware344, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_firmware345, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__UNIQUE_ID_firmware346, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__UNIQUE_ID_firmware347, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__UNIQUE_ID_firmware348, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__UNIQUE_ID_firmware349, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__UNIQUE_ID_firmware350, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_firmware351, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__UNIQUE_ID_firmware352, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @atmel_open(%struct.net_device* %dev) #0 !dbg !8890 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %i = alloca i32, align 4
  %channel = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !8891, metadata !DIExpression()), !dbg !8892
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !8893, metadata !DIExpression()), !dbg !8894
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !8895
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !8896
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !8896
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !8894
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8897, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !8899, metadata !DIExpression()), !dbg !8900
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8901, metadata !DIExpression()), !dbg !8902
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8903
  %management_timer = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 6, !dbg !8903
  %call1 = call i32 @del_timer(%struct.timer_list* %management_timer) #10, !dbg !8903
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8904
  %station_state = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %3, i32 0, i32 42, !dbg !8905
  store i32 6, i32* %station_state, align 4, !dbg !8906
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8907
  %new_SSID_size = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 75, !dbg !8909
  %5 = load i32, i32* %new_SSID_size, align 4, !dbg !8909
  %tobool = icmp ne i32 %5, 0, !dbg !8907
  br i1 %tobool, label %if.then, label %if.end, !dbg !8910

if.then:                                          ; preds = %entry
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8911
  %SSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 78, !dbg !8913
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %SSID, i64 0, i64 0, !dbg !8914
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8915
  %new_SSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %7, i32 0, i32 79, !dbg !8916
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %new_SSID, i64 0, i64 0, !dbg !8914
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8917
  %new_SSID_size3 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %8, i32 0, i32 75, !dbg !8918
  %9 = load i32, i32* %new_SSID_size3, align 4, !dbg !8918
  %conv = sext i32 %9 to i64, !dbg !8917
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay, i8* align 4 %arraydecay2, i64 %conv, i1 false), !dbg !8914
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8919
  %new_SSID_size4 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 75, !dbg !8920
  %11 = load i32, i32* %new_SSID_size4, align 4, !dbg !8920
  %12 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8921
  %SSID_size = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %12, i32 0, i32 74, !dbg !8922
  store i32 %11, i32* %SSID_size, align 8, !dbg !8923
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8924
  %new_SSID_size5 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %13, i32 0, i32 75, !dbg !8925
  store i32 0, i32* %new_SSID_size5, align 4, !dbg !8926
  br label %if.end, !dbg !8927

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8928
  %BSS_list_entries = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %14, i32 0, i32 71, !dbg !8929
  store i32 0, i32* %BSS_list_entries, align 4, !dbg !8930
  %15 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8931
  %AuthenticationRequestRetryCnt = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %15, i32 0, i32 62, !dbg !8932
  store i32 0, i32* %AuthenticationRequestRetryCnt, align 8, !dbg !8933
  %16 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8934
  %AssociationRequestRetryCnt = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %16, i32 0, i32 63, !dbg !8935
  store i32 0, i32* %AssociationRequestRetryCnt, align 4, !dbg !8936
  %17 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8937
  %ReAssociationRequestRetryCnt = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %17, i32 0, i32 64, !dbg !8938
  store i32 0, i32* %ReAssociationRequestRetryCnt, align 8, !dbg !8939
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8940
  %CurrentAuthentTransactionSeqNum = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %18, i32 0, i32 60, !dbg !8941
  store i32 1, i32* %CurrentAuthentTransactionSeqNum, align 8, !dbg !8942
  %19 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8943
  %ExpectedAuthentTransactionSeqNum = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %19, i32 0, i32 61, !dbg !8944
  store i32 2, i32* %ExpectedAuthentTransactionSeqNum, align 4, !dbg !8945
  %20 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8946
  %site_survey_state = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %20, i32 0, i32 65, !dbg !8947
  store i32 0, i32* %site_survey_state, align 4, !dbg !8948
  %21 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8949
  %station_is_associated = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %21, i32 0, i32 68, !dbg !8950
  store i32 0, i32* %station_is_associated, align 4, !dbg !8951
  %22 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !8952
  %call6 = call i32 @reset_atmel_card(%struct.net_device* %22) #10, !dbg !8953
  store i32 %call6, i32* %err, align 4, !dbg !8954
  %23 = load i32, i32* %err, align 4, !dbg !8955
  %tobool7 = icmp ne i32 %23, 0, !dbg !8955
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !8957

if.then8:                                         ; preds = %if.end
  %24 = load i32, i32* %err, align 4, !dbg !8958
  store i32 %24, i32* %retval, align 4, !dbg !8959
  br label %return, !dbg !8959

if.end9:                                          ; preds = %if.end
  %25 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8960
  %config_reg_domain = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %25, i32 0, i32 49, !dbg !8962
  %26 = load i32, i32* %config_reg_domain, align 4, !dbg !8962
  %tobool10 = icmp ne i32 %26, 0, !dbg !8960
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !8963

if.then11:                                        ; preds = %if.end9
  %27 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8964
  %config_reg_domain12 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %27, i32 0, i32 49, !dbg !8966
  %28 = load i32, i32* %config_reg_domain12, align 4, !dbg !8966
  %29 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8967
  %reg_domain = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %29, i32 0, i32 48, !dbg !8968
  store i32 %28, i32* %reg_domain, align 8, !dbg !8969
  %30 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8970
  %31 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8971
  %reg_domain13 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %31, i32 0, i32 48, !dbg !8972
  %32 = load i32, i32* %reg_domain13, align 8, !dbg !8972
  %conv14 = trunc i32 %32 to i8, !dbg !8971
  call void @atmel_set_mib8(%struct.atmel_private* %30, i8 zeroext 7, i8 zeroext 26, i8 zeroext %conv14) #10, !dbg !8973
  br label %if.end34, !dbg !8974

if.else:                                          ; preds = %if.end9
  %33 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8975
  %call15 = call zeroext i8 @atmel_get_mib8(%struct.atmel_private* %33, i8 zeroext 7, i8 zeroext 26) #10, !dbg !8977
  %conv16 = zext i8 %call15 to i32, !dbg !8977
  %34 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8978
  %reg_domain17 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %34, i32 0, i32 48, !dbg !8979
  store i32 %conv16, i32* %reg_domain17, align 8, !dbg !8980
  store i32 0, i32* %i, align 4, !dbg !8981
  br label %for.cond, !dbg !8983

for.cond:                                         ; preds = %for.inc, %if.else
  %35 = load i32, i32* %i, align 4, !dbg !8984
  %conv18 = sext i32 %35 to i64, !dbg !8984
  %cmp = icmp ult i64 %conv18, 8, !dbg !8986
  br i1 %cmp, label %for.body, label %for.end, !dbg !8987

for.body:                                         ; preds = %for.cond
  %36 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !8988
  %reg_domain20 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %36, i32 0, i32 48, !dbg !8990
  %37 = load i32, i32* %reg_domain20, align 8, !dbg !8990
  %38 = load i32, i32* %i, align 4, !dbg !8991
  %idxprom = sext i32 %38 to i64, !dbg !8992
  %arrayidx = getelementptr [8 x %struct.anon.136], [8 x %struct.anon.136]* @channel_table, i64 0, i64 %idxprom, !dbg !8992
  %reg_domain21 = getelementptr inbounds %struct.anon.136, %struct.anon.136* %arrayidx, i32 0, i32 0, !dbg !8993
  %39 = load i32, i32* %reg_domain21, align 8, !dbg !8993
  %cmp22 = icmp eq i32 %37, %39, !dbg !8994
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !8995

if.then24:                                        ; preds = %for.body
  br label %for.end, !dbg !8996

if.end25:                                         ; preds = %for.body
  br label %for.inc, !dbg !8993

for.inc:                                          ; preds = %if.end25
  %40 = load i32, i32* %i, align 4, !dbg !8997
  %inc = add i32 %40, 1, !dbg !8997
  store i32 %inc, i32* %i, align 4, !dbg !8997
  br label %for.cond, !dbg !8998, !llvm.loop !8999

for.end:                                          ; preds = %if.then24, %for.cond
  %41 = load i32, i32* %i, align 4, !dbg !9001
  %conv26 = sext i32 %41 to i64, !dbg !9001
  %cmp27 = icmp eq i64 %conv26, 8, !dbg !9003
  br i1 %cmp27, label %if.then29, label %if.end33, !dbg !9004

if.then29:                                        ; preds = %for.end
  %42 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9005
  %reg_domain30 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %42, i32 0, i32 48, !dbg !9007
  store i32 65, i32* %reg_domain30, align 8, !dbg !9008
  %43 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9009
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %43, i32 0, i32 0, !dbg !9010
  %arraydecay31 = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !9009
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i8* %arraydecay31) #11, !dbg !9011
  br label %if.end33, !dbg !9012

if.end33:                                         ; preds = %if.then29, %for.end
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then11
  %44 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9013
  %45 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9015
  %channel35 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %45, i32 0, i32 47, !dbg !9016
  %46 = load i32, i32* %channel35, align 4, !dbg !9016
  %call36 = call i32 @atmel_validate_channel(%struct.atmel_private* %44, i32 %46) #10, !dbg !9017
  store i32 %call36, i32* %channel, align 4, !dbg !9018
  %tobool37 = icmp ne i32 %call36, 0, !dbg !9018
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !9019

if.then38:                                        ; preds = %if.end34
  %47 = load i32, i32* %channel, align 4, !dbg !9020
  %48 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9021
  %channel39 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %48, i32 0, i32 47, !dbg !9022
  store i32 %47, i32* %channel39, align 4, !dbg !9023
  br label %if.end40, !dbg !9021

if.end40:                                         ; preds = %if.then38, %if.end34
  %49 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9024
  call void @atmel_scan(%struct.atmel_private* %49, i32 1) #10, !dbg !9025
  %50 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9026
  %dev41 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %50, i32 0, i32 7, !dbg !9027
  %51 = load %struct.net_device*, %struct.net_device** %dev41, align 8, !dbg !9027
  call void @atmel_set_gcr(%struct.net_device* %51, i16 zeroext 2) #10, !dbg !9028
  store i32 0, i32* %retval, align 4, !dbg !9029
  br label %return, !dbg !9029

return:                                           ; preds = %if.end40, %if.then8
  %52 = load i32, i32* %retval, align 4, !dbg !9030
  ret i32 %52, !dbg !9030
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @netdev_priv(%struct.net_device* %dev) #0 !dbg !9031 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !9034, metadata !DIExpression()), !dbg !9035
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9036
  %1 = bitcast %struct.net_device* %0 to i8*, !dbg !9037
  %add.ptr = getelementptr i8, i8* %1, i64 1984, !dbg !9038
  ret i8* %add.ptr, !dbg !9039
}

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @reset_atmel_card(%struct.net_device* %dev) #0 !dbg !8872 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %configuration = alloca i8, align 1
  %old_state = alloca i32, align 4
  %err = alloca i32, align 4
  %fw_entry = alloca %struct.firmware*, align 8
  %fw = alloca i8*, align 8
  %len = alloca i32, align 4
  %fw_index = alloca i32, align 4
  %success = alloca i32, align 4
  %i = alloca i32, align 4
  %wrqu = alloca %union.iwreq_data, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !9040, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !9042, metadata !DIExpression()), !dbg !9043
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9044
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !9045
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !9045
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !9043
  call void @llvm.dbg.declare(metadata i8* %configuration, metadata !9046, metadata !DIExpression()), !dbg !9047
  call void @llvm.dbg.declare(metadata i32* %old_state, metadata !9048, metadata !DIExpression()), !dbg !9049
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9050
  %station_state = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 42, !dbg !9051
  %3 = load i32, i32* %station_state, align 4, !dbg !9051
  store i32 %3, i32* %old_state, align 4, !dbg !9049
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9052, metadata !DIExpression()), !dbg !9053
  store i32 0, i32* %err, align 4, !dbg !9053
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9054
  %bus_type = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 12, !dbg !9056
  %5 = load i32, i32* %bus_type, align 8, !dbg !9056
  %cmp = icmp eq i32 %5, 0, !dbg !9057
  br i1 %cmp, label %if.then, label %if.end, !dbg !9058

if.then:                                          ; preds = %entry
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9059
  %dev1 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 7, !dbg !9060
  %7 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !9060
  call void @atmel_write16(%struct.net_device* %7, i16 zeroext 0, i16 zeroext 96) #10, !dbg !9061
  br label %if.end, !dbg !9061

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9062
  %dev2 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %8, i32 0, i32 7, !dbg !9063
  %9 = load %struct.net_device*, %struct.net_device** %dev2, align 8, !dbg !9063
  call void @atmel_write16(%struct.net_device* %9, i16 zeroext 0, i16 zeroext 64) #10, !dbg !9064
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9065
  %card_type = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 13, !dbg !9067
  %11 = load i32, i32* %card_type, align 4, !dbg !9067
  %cmp3 = icmp eq i32 %11, 2, !dbg !9068
  br i1 %cmp3, label %if.then4, label %if.end93, !dbg !9069

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.firmware** %fw_entry, metadata !9070, metadata !DIExpression()), !dbg !9080
  store %struct.firmware* null, %struct.firmware** %fw_entry, align 8, !dbg !9080
  call void @llvm.dbg.declare(metadata i8** %fw, metadata !9081, metadata !DIExpression()), !dbg !9082
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9083, metadata !DIExpression()), !dbg !9084
  %12 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9085
  %firmware_length = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %12, i32 0, i32 5, !dbg !9086
  %13 = load i32, i32* %firmware_length, align 8, !dbg !9086
  store i32 %13, i32* %len, align 4, !dbg !9084
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9087
  %firmware = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %14, i32 0, i32 4, !dbg !9089
  %15 = load i8*, i8** %firmware, align 8, !dbg !9089
  store i8* %15, i8** %fw, align 8, !dbg !9090
  %tobool = icmp ne i8* %15, null, !dbg !9090
  br i1 %tobool, label %if.end76, label %if.then5, !dbg !9091

if.then5:                                         ; preds = %if.then4
  %16 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9092
  %firmware_type = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %16, i32 0, i32 3, !dbg !9095
  %17 = load i32, i32* %firmware_type, align 8, !dbg !9095
  %cmp6 = icmp eq i32 %17, 0, !dbg !9096
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !9097

if.then7:                                         ; preds = %if.then5
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9098
  %firmware_id = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %18, i32 0, i32 2, !dbg !9101
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %firmware_id, i64 0, i64 0, !dbg !9098
  %call8 = call i64 @strlen(i8* %arraydecay) #10, !dbg !9102
  %cmp9 = icmp eq i64 %call8, 0, !dbg !9103
  br i1 %cmp9, label %if.then10, label %if.end19, !dbg !9104

if.then10:                                        ; preds = %if.then7
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9105
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %19, i32 0, i32 0, !dbg !9107
  %arraydecay11 = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !9105
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.59, i64 0, i64 0), i8* %arraydecay11) #11, !dbg !9108
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9109
  %name13 = getelementptr inbounds %struct.net_device, %struct.net_device* %20, i32 0, i32 0, !dbg !9110
  %arraydecay14 = getelementptr inbounds [16 x i8], [16 x i8]* %name13, i64 0, i64 0, !dbg !9109
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.60, i64 0, i64 0), i8* %arraydecay14) #11, !dbg !9111
  %21 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9112
  %firmware_id16 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %21, i32 0, i32 2, !dbg !9113
  %arraydecay17 = getelementptr inbounds [32 x i8], [32 x i8]* %firmware_id16, i64 0, i64 0, !dbg !9112
  %call18 = call i8* @strcpy(i8* %arraydecay17, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !9114
  br label %if.end19, !dbg !9115

if.end19:                                         ; preds = %if.then10, %if.then7
  %22 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9116
  %firmware_id20 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %22, i32 0, i32 2, !dbg !9117
  %arraydecay21 = getelementptr inbounds [32 x i8], [32 x i8]* %firmware_id20, i64 0, i64 0, !dbg !9116
  %23 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9118
  %sys_dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %23, i32 0, i32 8, !dbg !9119
  %24 = load %struct.device*, %struct.device** %sys_dev, align 8, !dbg !9119
  %call22 = call i32 @request_firmware(%struct.firmware** %fw_entry, i8* %arraydecay21, %struct.device* %24) #10, !dbg !9120
  store i32 %call22, i32* %err, align 4, !dbg !9121
  %25 = load i32, i32* %err, align 4, !dbg !9122
  %cmp23 = icmp ne i32 %25, 0, !dbg !9124
  br i1 %cmp23, label %if.then24, label %if.end30, !dbg !9125

if.then24:                                        ; preds = %if.end19
  %26 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9126
  %name25 = getelementptr inbounds %struct.net_device, %struct.net_device* %26, i32 0, i32 0, !dbg !9128
  %arraydecay26 = getelementptr inbounds [16 x i8], [16 x i8]* %name25, i64 0, i64 0, !dbg !9126
  %27 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9129
  %firmware_id27 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %27, i32 0, i32 2, !dbg !9130
  %arraydecay28 = getelementptr inbounds [32 x i8], [32 x i8]* %firmware_id27, i64 0, i64 0, !dbg !9129
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.62, i64 0, i64 0), i8* %arraydecay26, i8* %arraydecay28) #11, !dbg !9131
  %28 = load i32, i32* %err, align 4, !dbg !9132
  store i32 %28, i32* %retval, align 4, !dbg !9133
  br label %return, !dbg !9133

if.end30:                                         ; preds = %if.end19
  br label %if.end75, !dbg !9134

if.else:                                          ; preds = %if.then5
  call void @llvm.dbg.declare(metadata i32* %fw_index, metadata !9135, metadata !DIExpression()), !dbg !9137
  store i32 0, i32* %fw_index, align 4, !dbg !9137
  call void @llvm.dbg.declare(metadata i32* %success, metadata !9138, metadata !DIExpression()), !dbg !9139
  store i32 0, i32* %success, align 4, !dbg !9139
  br label %while.cond, !dbg !9140

while.cond:                                       ; preds = %while.body, %if.else
  %29 = load i32, i32* %fw_index, align 4, !dbg !9141
  %idxprom = sext i32 %29 to i64, !dbg !9142
  %arrayidx = getelementptr [9 x %struct.anon.142], [9 x %struct.anon.142]* @fw_table, i64 0, i64 %idxprom, !dbg !9142
  %fw_type = getelementptr inbounds %struct.anon.142, %struct.anon.142* %arrayidx, i32 0, i32 0, !dbg !9143
  %30 = load i32, i32* %fw_type, align 8, !dbg !9143
  %31 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9144
  %firmware_type31 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %31, i32 0, i32 3, !dbg !9145
  %32 = load i32, i32* %firmware_type31, align 8, !dbg !9145
  %cmp32 = icmp ne i32 %30, %32, !dbg !9146
  br i1 %cmp32, label %land.rhs, label %land.end, !dbg !9147

land.rhs:                                         ; preds = %while.cond
  %33 = load i32, i32* %fw_index, align 4, !dbg !9148
  %idxprom33 = sext i32 %33 to i64, !dbg !9149
  %arrayidx34 = getelementptr [9 x %struct.anon.142], [9 x %struct.anon.142]* @fw_table, i64 0, i64 %idxprom33, !dbg !9149
  %fw_type35 = getelementptr inbounds %struct.anon.142, %struct.anon.142* %arrayidx34, i32 0, i32 0, !dbg !9150
  %34 = load i32, i32* %fw_type35, align 8, !dbg !9150
  %cmp36 = icmp ne i32 %34, 0, !dbg !9151
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %35 = phi i1 [ false, %while.cond ], [ %cmp36, %land.rhs ], !dbg !9152
  br i1 %35, label %while.body, label %while.end, !dbg !9140

while.body:                                       ; preds = %land.end
  %36 = load i32, i32* %fw_index, align 4, !dbg !9153
  %inc = add i32 %36, 1, !dbg !9153
  store i32 %inc, i32* %fw_index, align 4, !dbg !9153
  br label %while.cond, !dbg !9140, !llvm.loop !9154

while.end:                                        ; preds = %land.end
  %37 = load i32, i32* %fw_index, align 4, !dbg !9155
  %idxprom37 = sext i32 %37 to i64, !dbg !9157
  %arrayidx38 = getelementptr [9 x %struct.anon.142], [9 x %struct.anon.142]* @fw_table, i64 0, i64 %idxprom37, !dbg !9157
  %fw_type39 = getelementptr inbounds %struct.anon.142, %struct.anon.142* %arrayidx38, i32 0, i32 0, !dbg !9158
  %38 = load i32, i32* %fw_type39, align 8, !dbg !9158
  %cmp40 = icmp ne i32 %38, 0, !dbg !9159
  br i1 %cmp40, label %if.then41, label %if.end64, !dbg !9160

if.then41:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9161, metadata !DIExpression()), !dbg !9163
  store i32 0, i32* %i, align 4, !dbg !9164
  br label %for.cond, !dbg !9166

for.cond:                                         ; preds = %for.inc, %if.then41
  %39 = load i32, i32* %i, align 4, !dbg !9167
  %idxprom42 = sext i32 %39 to i64, !dbg !9169
  %arrayidx43 = getelementptr [3 x i8*], [3 x i8*]* @reset_atmel_card.firmware_modifier, i64 0, i64 %idxprom42, !dbg !9169
  %40 = load i8*, i8** %arrayidx43, align 8, !dbg !9169
  %tobool44 = icmp ne i8* %40, null, !dbg !9170
  br i1 %tobool44, label %for.body, label %for.end, !dbg !9170

for.body:                                         ; preds = %for.cond
  %41 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9171
  %firmware_id45 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %41, i32 0, i32 2, !dbg !9173
  %arraydecay46 = getelementptr inbounds [32 x i8], [32 x i8]* %firmware_id45, i64 0, i64 0, !dbg !9171
  %42 = load i32, i32* %fw_index, align 4, !dbg !9174
  %idxprom47 = sext i32 %42 to i64, !dbg !9175
  %arrayidx48 = getelementptr [9 x %struct.anon.142], [9 x %struct.anon.142]* @fw_table, i64 0, i64 %idxprom47, !dbg !9175
  %fw_file = getelementptr inbounds %struct.anon.142, %struct.anon.142* %arrayidx48, i32 0, i32 1, !dbg !9176
  %43 = load i8*, i8** %fw_file, align 8, !dbg !9176
  %44 = load i32, i32* %i, align 4, !dbg !9177
  %idxprom49 = sext i32 %44 to i64, !dbg !9178
  %arrayidx50 = getelementptr [3 x i8*], [3 x i8*]* @reset_atmel_card.firmware_modifier, i64 0, i64 %idxprom49, !dbg !9178
  %45 = load i8*, i8** %arrayidx50, align 8, !dbg !9178
  %46 = load i32, i32* %fw_index, align 4, !dbg !9179
  %idxprom51 = sext i32 %46 to i64, !dbg !9180
  %arrayidx52 = getelementptr [9 x %struct.anon.142], [9 x %struct.anon.142]* @fw_table, i64 0, i64 %idxprom51, !dbg !9180
  %fw_file_ext = getelementptr inbounds %struct.anon.142, %struct.anon.142* %arrayidx52, i32 0, i32 2, !dbg !9181
  %47 = load i8*, i8** %fw_file_ext, align 8, !dbg !9181
  %call53 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay46, i64 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i64 0, i64 0), i8* %43, i8* %45, i8* %47) #10, !dbg !9182
  %48 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9183
  %firmware_id54 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %48, i32 0, i32 2, !dbg !9184
  %arrayidx55 = getelementptr [32 x i8], [32 x i8]* %firmware_id54, i64 0, i64 31, !dbg !9183
  store i8 0, i8* %arrayidx55, align 1, !dbg !9185
  %49 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9186
  %firmware_id56 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %49, i32 0, i32 2, !dbg !9188
  %arraydecay57 = getelementptr inbounds [32 x i8], [32 x i8]* %firmware_id56, i64 0, i64 0, !dbg !9186
  %50 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9189
  %sys_dev58 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %50, i32 0, i32 8, !dbg !9190
  %51 = load %struct.device*, %struct.device** %sys_dev58, align 8, !dbg !9190
  %call59 = call i32 @request_firmware(%struct.firmware** %fw_entry, i8* %arraydecay57, %struct.device* %51) #10, !dbg !9191
  %cmp60 = icmp eq i32 %call59, 0, !dbg !9192
  br i1 %cmp60, label %if.then61, label %if.end62, !dbg !9193

if.then61:                                        ; preds = %for.body
  store i32 1, i32* %success, align 4, !dbg !9194
  br label %for.end, !dbg !9196

if.end62:                                         ; preds = %for.body
  br label %for.inc, !dbg !9197

for.inc:                                          ; preds = %if.end62
  %52 = load i32, i32* %i, align 4, !dbg !9198
  %inc63 = add i32 %52, 1, !dbg !9198
  store i32 %inc63, i32* %i, align 4, !dbg !9198
  br label %for.cond, !dbg !9199, !llvm.loop !9200

for.end:                                          ; preds = %if.then61, %for.cond
  br label %if.end64, !dbg !9202

if.end64:                                         ; preds = %for.end, %while.end
  %53 = load i32, i32* %success, align 4, !dbg !9203
  %tobool65 = icmp ne i32 %53, 0, !dbg !9203
  br i1 %tobool65, label %if.end74, label %if.then66, !dbg !9205

if.then66:                                        ; preds = %if.end64
  %54 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9206
  %name67 = getelementptr inbounds %struct.net_device, %struct.net_device* %54, i32 0, i32 0, !dbg !9208
  %arraydecay68 = getelementptr inbounds [16 x i8], [16 x i8]* %name67, i64 0, i64 0, !dbg !9206
  %55 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9209
  %firmware_id69 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %55, i32 0, i32 2, !dbg !9210
  %arraydecay70 = getelementptr inbounds [32 x i8], [32 x i8]* %firmware_id69, i64 0, i64 0, !dbg !9209
  %call71 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.64, i64 0, i64 0), i8* %arraydecay68, i8* %arraydecay70) #11, !dbg !9211
  %56 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9212
  %firmware_id72 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %56, i32 0, i32 2, !dbg !9213
  %arrayidx73 = getelementptr [32 x i8], [32 x i8]* %firmware_id72, i64 0, i64 0, !dbg !9212
  store i8 0, i8* %arrayidx73, align 8, !dbg !9214
  store i32 -2, i32* %retval, align 4, !dbg !9215
  br label %return, !dbg !9215

if.end74:                                         ; preds = %if.end64
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.end30
  %57 = load %struct.firmware*, %struct.firmware** %fw_entry, align 8, !dbg !9216
  %data = getelementptr inbounds %struct.firmware, %struct.firmware* %57, i32 0, i32 1, !dbg !9217
  %58 = load i8*, i8** %data, align 8, !dbg !9217
  store i8* %58, i8** %fw, align 8, !dbg !9218
  %59 = load %struct.firmware*, %struct.firmware** %fw_entry, align 8, !dbg !9219
  %size = getelementptr inbounds %struct.firmware, %struct.firmware* %59, i32 0, i32 0, !dbg !9220
  %60 = load i64, i64* %size, align 8, !dbg !9220
  %conv = trunc i64 %60 to i32, !dbg !9219
  store i32 %conv, i32* %len, align 4, !dbg !9221
  br label %if.end76, !dbg !9222

if.end76:                                         ; preds = %if.end75, %if.then4
  %61 = load i32, i32* %len, align 4, !dbg !9223
  %cmp77 = icmp sle i32 %61, 24576, !dbg !9225
  br i1 %cmp77, label %if.then79, label %if.else84, !dbg !9226

if.then79:                                        ; preds = %if.end76
  %62 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9227
  %dev80 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %62, i32 0, i32 7, !dbg !9229
  %63 = load %struct.net_device*, %struct.net_device** %dev80, align 8, !dbg !9229
  call void @atmel_write16(%struct.net_device* %63, i16 zeroext 2, i16 zeroext 256) #10, !dbg !9230
  %64 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9231
  %dev81 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %64, i32 0, i32 7, !dbg !9232
  %65 = load %struct.net_device*, %struct.net_device** %dev81, align 8, !dbg !9232
  %66 = load i8*, i8** %fw, align 8, !dbg !9233
  %67 = load i32, i32* %len, align 4, !dbg !9234
  %conv82 = trunc i32 %67 to i16, !dbg !9234
  call void @atmel_copy_to_card(%struct.net_device* %65, i16 zeroext 0, i8* %66, i16 zeroext %conv82) #10, !dbg !9235
  %68 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9236
  %dev83 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %68, i32 0, i32 7, !dbg !9237
  %69 = load %struct.net_device*, %struct.net_device** %dev83, align 8, !dbg !9237
  call void @atmel_set_gcr(%struct.net_device* %69, i16 zeroext 1024) #10, !dbg !9238
  br label %if.end92, !dbg !9239

if.else84:                                        ; preds = %if.end76
  %70 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9240
  %dev85 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %70, i32 0, i32 7, !dbg !9242
  %71 = load %struct.net_device*, %struct.net_device** %dev85, align 8, !dbg !9242
  call void @atmel_set_gcr(%struct.net_device* %71, i16 zeroext 1024) #10, !dbg !9243
  %72 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9244
  %dev86 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %72, i32 0, i32 7, !dbg !9245
  %73 = load %struct.net_device*, %struct.net_device** %dev86, align 8, !dbg !9245
  call void @atmel_write16(%struct.net_device* %73, i16 zeroext 2, i16 zeroext 256) #10, !dbg !9246
  %74 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9247
  %dev87 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %74, i32 0, i32 7, !dbg !9248
  %75 = load %struct.net_device*, %struct.net_device** %dev87, align 8, !dbg !9248
  %76 = load i8*, i8** %fw, align 8, !dbg !9249
  call void @atmel_copy_to_card(%struct.net_device* %75, i16 zeroext 0, i8* %76, i16 zeroext 24576) #10, !dbg !9250
  %77 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9251
  %dev88 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %77, i32 0, i32 7, !dbg !9252
  %78 = load %struct.net_device*, %struct.net_device** %dev88, align 8, !dbg !9252
  call void @atmel_write16(%struct.net_device* %78, i16 zeroext 2, i16 zeroext 767) #10, !dbg !9253
  %79 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9254
  %dev89 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %79, i32 0, i32 7, !dbg !9255
  %80 = load %struct.net_device*, %struct.net_device** %dev89, align 8, !dbg !9255
  %81 = load i8*, i8** %fw, align 8, !dbg !9256
  %arrayidx90 = getelementptr i8, i8* %81, i64 24576, !dbg !9256
  %82 = load i32, i32* %len, align 4, !dbg !9257
  %sub = sub i32 %82, 24576, !dbg !9258
  %conv91 = trunc i32 %sub to i16, !dbg !9257
  call void @atmel_copy_to_card(%struct.net_device* %80, i16 zeroext -32768, i8* %arrayidx90, i16 zeroext %conv91) #10, !dbg !9259
  br label %if.end92

if.end92:                                         ; preds = %if.else84, %if.then79
  %83 = load %struct.firmware*, %struct.firmware** %fw_entry, align 8, !dbg !9260
  call void @release_firmware(%struct.firmware* %83) #10, !dbg !9261
  br label %if.end93, !dbg !9262

if.end93:                                         ; preds = %if.end92, %if.end
  %84 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9263
  %call94 = call i32 @atmel_wakeup_firmware(%struct.atmel_private* %84) #10, !dbg !9264
  store i32 %call94, i32* %err, align 4, !dbg !9265
  %85 = load i32, i32* %err, align 4, !dbg !9266
  %cmp95 = icmp ne i32 %85, 0, !dbg !9268
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !9269

if.then97:                                        ; preds = %if.end93
  %86 = load i32, i32* %err, align 4, !dbg !9270
  store i32 %86, i32* %retval, align 4, !dbg !9271
  br label %return, !dbg !9271

if.end98:                                         ; preds = %if.end93
  %87 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9272
  %host_info = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %87, i32 0, i32 41, !dbg !9273
  %major_version = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info, i32 0, i32 14, !dbg !9274
  %88 = load i16, i16* %major_version, align 2, !dbg !9274
  %conv99 = zext i16 %88 to i32, !dbg !9272
  %cmp100 = icmp eq i32 %conv99, 4, !dbg !9275
  %conv101 = zext i1 %cmp100 to i32, !dbg !9275
  %89 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9276
  %use_wpa = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %89, i32 0, i32 38, !dbg !9277
  store i32 %conv101, i32* %use_wpa, align 4, !dbg !9278
  %90 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9279
  %host_info102 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %90, i32 0, i32 41, !dbg !9280
  %major_version103 = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info102, i32 0, i32 14, !dbg !9281
  %91 = load i16, i16* %major_version103, align 2, !dbg !9281
  %conv104 = zext i16 %91 to i32, !dbg !9279
  %cmp105 = icmp eq i32 %conv104, 5, !dbg !9282
  %conv106 = zext i1 %cmp105 to i32, !dbg !9282
  %92 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9283
  %radio_on_broken = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %92, i32 0, i32 39, !dbg !9284
  store i32 %conv106, i32* %radio_on_broken, align 8, !dbg !9285
  %93 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9286
  %94 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9287
  %call107 = call zeroext i16 @atmel_hi(%struct.atmel_private* %94, i16 zeroext 1) #10, !dbg !9288
  call void @atmel_wmem8(%struct.atmel_private* %93, i16 zeroext %call107, i16 zeroext 255) #10, !dbg !9289
  %95 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9290
  %96 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9291
  %call108 = call zeroext i16 @atmel_tx(%struct.atmel_private* %96, i16 zeroext 8, i16 zeroext 0) #10, !dbg !9292
  call void @atmel_wmem8(%struct.atmel_private* %95, i16 zeroext %call108, i16 zeroext 0) #10, !dbg !9293
  %97 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9294
  %98 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9295
  %call109 = call zeroext i16 @atmel_tx(%struct.atmel_private* %98, i16 zeroext 0, i16 zeroext 0) #10, !dbg !9296
  call void @atmel_wmem32(%struct.atmel_private* %97, i16 zeroext %call109, i32 -2147483648) #10, !dbg !9297
  %99 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9298
  %100 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9299
  %call110 = call zeroext i16 @atmel_tx(%struct.atmel_private* %100, i16 zeroext 4, i16 zeroext 0) #10, !dbg !9300
  call void @atmel_wmem16(%struct.atmel_private* %99, i16 zeroext %call110, i16 zeroext 0) #10, !dbg !9301
  %101 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9302
  %102 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9303
  %call111 = call zeroext i16 @atmel_tx(%struct.atmel_private* %102, i16 zeroext 6, i16 zeroext 0) #10, !dbg !9304
  call void @atmel_wmem16(%struct.atmel_private* %101, i16 zeroext %call111, i16 zeroext 0) #10, !dbg !9305
  %103 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9306
  %host_info112 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %103, i32 0, i32 41, !dbg !9307
  %tx_desc_count = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info112, i32 0, i32 7, !dbg !9308
  %104 = load i16, i16* %tx_desc_count, align 2, !dbg !9308
  %105 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9309
  %tx_desc_free = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %105, i32 0, i32 19, !dbg !9310
  store i16 %104, i16* %tx_desc_free, align 2, !dbg !9311
  %106 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9312
  %tx_desc_head = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %106, i32 0, i32 20, !dbg !9313
  store i16 0, i16* %tx_desc_head, align 4, !dbg !9314
  %107 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9315
  %tx_desc_tail = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %107, i32 0, i32 21, !dbg !9316
  store i16 0, i16* %tx_desc_tail, align 2, !dbg !9317
  %108 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9318
  %tx_desc_previous = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %108, i32 0, i32 22, !dbg !9319
  store i16 0, i16* %tx_desc_previous, align 8, !dbg !9320
  %109 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9321
  %host_info113 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %109, i32 0, i32 41, !dbg !9322
  %tx_buff_size = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info113, i32 0, i32 5, !dbg !9323
  %110 = load i16, i16* %tx_buff_size, align 2, !dbg !9323
  %111 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9324
  %tx_free_mem = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %111, i32 0, i32 23, !dbg !9325
  store i16 %110, i16* %tx_free_mem, align 2, !dbg !9326
  %112 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9327
  %tx_buff_head = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %112, i32 0, i32 24, !dbg !9328
  store i16 0, i16* %tx_buff_head, align 4, !dbg !9329
  %113 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9330
  %tx_buff_tail = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %113, i32 0, i32 25, !dbg !9331
  store i16 0, i16* %tx_buff_tail, align 2, !dbg !9332
  %114 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9333
  %115 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9334
  %call114 = call zeroext i16 @atmel_hi(%struct.atmel_private* %115, i16 zeroext 28) #10, !dbg !9335
  %call115 = call zeroext i8 @atmel_rmem8(%struct.atmel_private* %114, i16 zeroext %call114) #10, !dbg !9336
  store i8 %call115, i8* %configuration, align 1, !dbg !9337
  %116 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9338
  %117 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9339
  %call116 = call zeroext i16 @atmel_hi(%struct.atmel_private* %117, i16 zeroext 28) #10, !dbg !9340
  %118 = load i8, i8* %configuration, align 1, !dbg !9341
  %conv117 = zext i8 %118 to i32, !dbg !9341
  %or = or i32 %conv117, 16, !dbg !9342
  %conv118 = trunc i32 %or to i16, !dbg !9341
  call void @atmel_wmem8(%struct.atmel_private* %116, i16 zeroext %call116, i16 zeroext %conv118) #10, !dbg !9343
  %119 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9344
  %rx_desc_head = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %119, i32 0, i32 18, !dbg !9345
  store i16 0, i16* %rx_desc_head, align 8, !dbg !9346
  %120 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9347
  %121 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9348
  %call119 = call zeroext i16 @atmel_hi(%struct.atmel_private* %121, i16 zeroext 28) #10, !dbg !9349
  %call120 = call zeroext i8 @atmel_rmem8(%struct.atmel_private* %120, i16 zeroext %call119) #10, !dbg !9350
  store i8 %call120, i8* %configuration, align 1, !dbg !9351
  %122 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9352
  %123 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9353
  %call121 = call zeroext i16 @atmel_hi(%struct.atmel_private* %123, i16 zeroext 28) #10, !dbg !9354
  %124 = load i8, i8* %configuration, align 1, !dbg !9355
  %conv122 = zext i8 %124 to i32, !dbg !9355
  %or123 = or i32 %conv122, 32, !dbg !9356
  %conv124 = trunc i32 %or123 to i16, !dbg !9355
  call void @atmel_wmem8(%struct.atmel_private* %122, i16 zeroext %call121, i16 zeroext %conv124) #10, !dbg !9357
  %125 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9358
  %radio_on_broken125 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %125, i32 0, i32 39, !dbg !9360
  %126 = load i32, i32* %radio_on_broken125, align 8, !dbg !9360
  %tobool126 = icmp ne i32 %126, 0, !dbg !9358
  br i1 %tobool126, label %if.end136, label %if.then127, !dbg !9361

if.then127:                                       ; preds = %if.end98
  %127 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9362
  %call128 = call i32 @atmel_send_command_wait(%struct.atmel_private* %127, i32 6, i8* null, i32 0) #10, !dbg !9365
  %cmp129 = icmp eq i32 %call128, 9, !dbg !9366
  br i1 %cmp129, label %if.then131, label %if.end135, !dbg !9367

if.then131:                                       ; preds = %if.then127
  %128 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9368
  %name132 = getelementptr inbounds %struct.net_device, %struct.net_device* %128, i32 0, i32 0, !dbg !9370
  %arraydecay133 = getelementptr inbounds [16 x i8], [16 x i8]* %name132, i64 0, i64 0, !dbg !9368
  %call134 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.65, i64 0, i64 0), i8* %arraydecay133) #11, !dbg !9371
  store i32 -5, i32* %retval, align 4, !dbg !9372
  br label %return, !dbg !9372

if.end135:                                        ; preds = %if.then127
  br label %if.end136, !dbg !9373

if.end136:                                        ; preds = %if.end135, %if.end98
  %129 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9374
  %130 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9375
  %auto_tx_rate = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %130, i32 0, i32 51, !dbg !9376
  %131 = load i32, i32* %auto_tx_rate, align 4, !dbg !9376
  %conv137 = trunc i32 %131 to i8, !dbg !9375
  call void @atmel_set_mib8(%struct.atmel_private* %129, i8 zeroext 1, i8 zeroext 3, i8 zeroext %conv137) #10, !dbg !9377
  %132 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9378
  call void @atmel_set_mib8(%struct.atmel_private* %132, i8 zeroext 1, i8 zeroext 6, i8 zeroext 0) #10, !dbg !9379
  %133 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9380
  %134 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9381
  %rts_threshold = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %134, i32 0, i32 52, !dbg !9382
  %135 = load i32, i32* %rts_threshold, align 8, !dbg !9382
  %conv138 = trunc i32 %135 to i16, !dbg !9381
  call void @atmel_set_mib16(%struct.atmel_private* %133, i8 zeroext 3, i8 zeroext 10, i16 zeroext %conv138) #10, !dbg !9383
  %136 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9384
  %137 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9385
  %frag_threshold = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %137, i32 0, i32 53, !dbg !9386
  %138 = load i32, i32* %frag_threshold, align 4, !dbg !9386
  %conv139 = trunc i32 %138 to i16, !dbg !9385
  call void @atmel_set_mib16(%struct.atmel_private* %136, i8 zeroext 3, i8 zeroext 8, i16 zeroext %conv139) #10, !dbg !9387
  %139 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9388
  %140 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9389
  %short_retry = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %140, i32 0, i32 55, !dbg !9390
  %141 = load i32, i32* %short_retry, align 4, !dbg !9390
  %conv140 = trunc i32 %141 to i8, !dbg !9389
  call void @atmel_set_mib8(%struct.atmel_private* %139, i8 zeroext 3, i8 zeroext 16, i8 zeroext %conv140) #10, !dbg !9391
  %142 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9392
  %143 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9393
  %long_retry = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %143, i32 0, i32 54, !dbg !9394
  %144 = load i32, i32* %long_retry, align 8, !dbg !9394
  %conv141 = trunc i32 %144 to i8, !dbg !9393
  call void @atmel_set_mib8(%struct.atmel_private* %142, i8 zeroext 3, i8 zeroext 17, i8 zeroext %conv141) #10, !dbg !9395
  %145 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9396
  %146 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9397
  %preamble = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %146, i32 0, i32 56, !dbg !9398
  %147 = load i32, i32* %preamble, align 8, !dbg !9398
  %conv142 = trunc i32 %147 to i8, !dbg !9397
  call void @atmel_set_mib8(%struct.atmel_private* %145, i8 zeroext 1, i8 zeroext 9, i8 zeroext %conv142) #10, !dbg !9399
  %148 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9400
  %149 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9401
  %dev143 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %149, i32 0, i32 7, !dbg !9402
  %150 = load %struct.net_device*, %struct.net_device** %dev143, align 8, !dbg !9402
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %150, i32 0, i32 74, !dbg !9403
  %151 = load i8*, i8** %dev_addr, align 8, !dbg !9403
  call void @atmel_set_mib(%struct.atmel_private* %148, i8 zeroext 2, i8 zeroext 0, i8* %151, i32 6) #10, !dbg !9404
  %152 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9405
  call void @atmel_set_mib8(%struct.atmel_private* %152, i8 zeroext 5, i8 zeroext 53, i8 zeroext 1) #10, !dbg !9406
  %153 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9407
  call void @atmel_set_mib16(%struct.atmel_private* %153, i8 zeroext 5, i8 zeroext 54, i16 zeroext 1) #10, !dbg !9408
  %154 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9409
  %155 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9410
  %default_beacon_period = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %155, i32 0, i32 57, !dbg !9411
  %156 = load i32, i32* %default_beacon_period, align 4, !dbg !9411
  %conv144 = trunc i32 %156 to i16, !dbg !9410
  call void @atmel_set_mib16(%struct.atmel_private* %154, i8 zeroext 5, i8 zeroext 0, i16 zeroext %conv144) #10, !dbg !9412
  %157 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9413
  call void @atmel_set_mib(%struct.atmel_private* %157, i8 zeroext 7, i8 zeroext 20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @atmel_basic_rates, i64 0, i64 0), i32 4) #10, !dbg !9414
  %158 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9415
  %159 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9416
  %wep_is_on = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %159, i32 0, i32 30, !dbg !9417
  %160 = load i8, i8* %wep_is_on, align 4, !dbg !9417
  call void @atmel_set_mib8(%struct.atmel_private* %158, i8 zeroext 5, i8 zeroext 11, i8 zeroext %160) #10, !dbg !9418
  %161 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9419
  %use_wpa145 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %161, i32 0, i32 38, !dbg !9421
  %162 = load i32, i32* %use_wpa145, align 4, !dbg !9421
  %tobool146 = icmp ne i32 %162, 0, !dbg !9419
  br i1 %tobool146, label %if.then147, label %if.else148, !dbg !9422

if.then147:                                       ; preds = %if.end136
  %163 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9423
  call void @build_wpa_mib(%struct.atmel_private* %163) #10, !dbg !9424
  br label %if.end149, !dbg !9424

if.else148:                                       ; preds = %if.end136
  %164 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9425
  call void @build_wep_mib(%struct.atmel_private* %164) #10, !dbg !9426
  br label %if.end149

if.end149:                                        ; preds = %if.else148, %if.then147
  %165 = load i32, i32* %old_state, align 4, !dbg !9427
  %cmp150 = icmp eq i32 %165, 4, !dbg !9429
  br i1 %cmp150, label %if.then152, label %if.end158, !dbg !9430

if.then152:                                       ; preds = %if.end149
  call void @llvm.dbg.declare(metadata %union.iwreq_data* %wrqu, metadata !9431, metadata !DIExpression()), !dbg !9433
  %data153 = bitcast %union.iwreq_data* %wrqu to %struct.iw_point*, !dbg !9434
  %length = getelementptr inbounds %struct.iw_point, %struct.iw_point* %data153, i32 0, i32 1, !dbg !9435
  store i16 0, i16* %length, align 8, !dbg !9436
  %data154 = bitcast %union.iwreq_data* %wrqu to %struct.iw_point*, !dbg !9437
  %flags = getelementptr inbounds %struct.iw_point, %struct.iw_point* %data154, i32 0, i32 2, !dbg !9438
  store i16 0, i16* %flags, align 2, !dbg !9439
  %ap_addr = bitcast %union.iwreq_data* %wrqu to %struct.sockaddr*, !dbg !9440
  %sa_family = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %ap_addr, i32 0, i32 0, !dbg !9441
  store i16 1, i16* %sa_family, align 8, !dbg !9442
  %ap_addr155 = bitcast %union.iwreq_data* %wrqu to %struct.sockaddr*, !dbg !9443
  %sa_data = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %ap_addr155, i32 0, i32 1, !dbg !9444
  %arraydecay156 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data, i64 0, i64 0, !dbg !9445
  call void @eth_zero_addr(i8* %arraydecay156) #10, !dbg !9446
  %166 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9447
  %dev157 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %166, i32 0, i32 7, !dbg !9448
  %167 = load %struct.net_device*, %struct.net_device** %dev157, align 8, !dbg !9448
  call void @wireless_send_event(%struct.net_device* %167, i32 35605, %union.iwreq_data* %wrqu, i8* null) #10, !dbg !9449
  br label %if.end158, !dbg !9450

if.end158:                                        ; preds = %if.then152, %if.end149
  store i32 0, i32* %retval, align 4, !dbg !9451
  br label %return, !dbg !9451

return:                                           ; preds = %if.end158, %if.then131, %if.then97, %if.then66, %if.then24
  %168 = load i32, i32* %retval, align 4, !dbg !9452
  ret i32 %168, !dbg !9452
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_set_mib8(%struct.atmel_private* %priv, i8 zeroext %type, i8 zeroext %index, i8 zeroext %data) #0 !dbg !9453 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %type.addr = alloca i8, align 1
  %index.addr = alloca i8, align 1
  %data.addr = alloca i8, align 1
  %m = alloca %struct.get_set_mib, align 1
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !9456, metadata !DIExpression()), !dbg !9457
  store i8 %type, i8* %type.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %type.addr, metadata !9458, metadata !DIExpression()), !dbg !9459
  store i8 %index, i8* %index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %index.addr, metadata !9460, metadata !DIExpression()), !dbg !9461
  store i8 %data, i8* %data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %data.addr, metadata !9462, metadata !DIExpression()), !dbg !9463
  call void @llvm.dbg.declare(metadata %struct.get_set_mib* %m, metadata !9464, metadata !DIExpression()), !dbg !9475
  %0 = load i8, i8* %type.addr, align 1, !dbg !9476
  %type1 = getelementptr inbounds %struct.get_set_mib, %struct.get_set_mib* %m, i32 0, i32 0, !dbg !9477
  store i8 %0, i8* %type1, align 1, !dbg !9478
  %size = getelementptr inbounds %struct.get_set_mib, %struct.get_set_mib* %m, i32 0, i32 1, !dbg !9479
  store i8 1, i8* %size, align 1, !dbg !9480
  %1 = load i8, i8* %index.addr, align 1, !dbg !9481
  %index2 = getelementptr inbounds %struct.get_set_mib, %struct.get_set_mib* %m, i32 0, i32 2, !dbg !9482
  store i8 %1, i8* %index2, align 1, !dbg !9483
  %2 = load i8, i8* %data.addr, align 1, !dbg !9484
  %data3 = getelementptr inbounds %struct.get_set_mib, %struct.get_set_mib* %m, i32 0, i32 4, !dbg !9485
  %arrayidx = getelementptr [212 x i8], [212 x i8]* %data3, i64 0, i64 0, !dbg !9486
  store i8 %2, i8* %arrayidx, align 1, !dbg !9487
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !9488
  %4 = bitcast %struct.get_set_mib* %m to i8*, !dbg !9489
  %call = call i32 @atmel_send_command_wait(%struct.atmel_private* %3, i32 1, i8* %4, i32 5) #10, !dbg !9490
  ret void, !dbg !9491
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @atmel_get_mib8(%struct.atmel_private* %priv, i8 zeroext %type, i8 zeroext %index) #0 !dbg !9492 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %type.addr = alloca i8, align 1
  %index.addr = alloca i8, align 1
  %m = alloca %struct.get_set_mib, align 1
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !9495, metadata !DIExpression()), !dbg !9496
  store i8 %type, i8* %type.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %type.addr, metadata !9497, metadata !DIExpression()), !dbg !9498
  store i8 %index, i8* %index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %index.addr, metadata !9499, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.declare(metadata %struct.get_set_mib* %m, metadata !9501, metadata !DIExpression()), !dbg !9502
  %0 = load i8, i8* %type.addr, align 1, !dbg !9503
  %type1 = getelementptr inbounds %struct.get_set_mib, %struct.get_set_mib* %m, i32 0, i32 0, !dbg !9504
  store i8 %0, i8* %type1, align 1, !dbg !9505
  %size = getelementptr inbounds %struct.get_set_mib, %struct.get_set_mib* %m, i32 0, i32 1, !dbg !9506
  store i8 1, i8* %size, align 1, !dbg !9507
  %1 = load i8, i8* %index.addr, align 1, !dbg !9508
  %index2 = getelementptr inbounds %struct.get_set_mib, %struct.get_set_mib* %m, i32 0, i32 2, !dbg !9509
  store i8 %1, i8* %index2, align 1, !dbg !9510
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !9511
  %3 = bitcast %struct.get_set_mib* %m to i8*, !dbg !9512
  %call = call i32 @atmel_send_command_wait(%struct.atmel_private* %2, i32 2, i8* %3, i32 5) #10, !dbg !9513
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !9514
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !9515
  %call3 = call zeroext i16 @atmel_co(%struct.atmel_private* %5, i16 zeroext 8) #10, !dbg !9516
  %call4 = call zeroext i8 @atmel_rmem8(%struct.atmel_private* %4, i16 zeroext %call3) #10, !dbg !9517
  ret i8 %call4, !dbg !9518
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_validate_channel(%struct.atmel_private* %priv, i32 %channel) #0 !dbg !9519 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.atmel_private*, align 8
  %channel.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !9522, metadata !DIExpression()), !dbg !9523
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !9524, metadata !DIExpression()), !dbg !9525
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9526, metadata !DIExpression()), !dbg !9527
  store i32 0, i32* %i, align 4, !dbg !9528
  br label %for.cond, !dbg !9530

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9531
  %conv = sext i32 %0 to i64, !dbg !9531
  %cmp = icmp ult i64 %conv, 8, !dbg !9533
  br i1 %cmp, label %for.body, label %for.end, !dbg !9534

for.body:                                         ; preds = %for.cond
  %1 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !9535
  %reg_domain = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %1, i32 0, i32 48, !dbg !9537
  %2 = load i32, i32* %reg_domain, align 8, !dbg !9537
  %3 = load i32, i32* %i, align 4, !dbg !9538
  %idxprom = sext i32 %3 to i64, !dbg !9539
  %arrayidx = getelementptr [8 x %struct.anon.136], [8 x %struct.anon.136]* @channel_table, i64 0, i64 %idxprom, !dbg !9539
  %reg_domain2 = getelementptr inbounds %struct.anon.136, %struct.anon.136* %arrayidx, i32 0, i32 0, !dbg !9540
  %4 = load i32, i32* %reg_domain2, align 8, !dbg !9540
  %cmp3 = icmp eq i32 %2, %4, !dbg !9541
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9542

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %channel.addr, align 4, !dbg !9543
  %6 = load i32, i32* %i, align 4, !dbg !9546
  %idxprom5 = sext i32 %6 to i64, !dbg !9547
  %arrayidx6 = getelementptr [8 x %struct.anon.136], [8 x %struct.anon.136]* @channel_table, i64 0, i64 %idxprom5, !dbg !9547
  %min = getelementptr inbounds %struct.anon.136, %struct.anon.136* %arrayidx6, i32 0, i32 1, !dbg !9548
  %7 = load i32, i32* %min, align 4, !dbg !9548
  %cmp7 = icmp sge i32 %5, %7, !dbg !9549
  br i1 %cmp7, label %land.lhs.true, label %if.else, !dbg !9550

land.lhs.true:                                    ; preds = %if.then
  %8 = load i32, i32* %channel.addr, align 4, !dbg !9551
  %9 = load i32, i32* %i, align 4, !dbg !9552
  %idxprom9 = sext i32 %9 to i64, !dbg !9553
  %arrayidx10 = getelementptr [8 x %struct.anon.136], [8 x %struct.anon.136]* @channel_table, i64 0, i64 %idxprom9, !dbg !9553
  %max = getelementptr inbounds %struct.anon.136, %struct.anon.136* %arrayidx10, i32 0, i32 2, !dbg !9554
  %10 = load i32, i32* %max, align 8, !dbg !9554
  %cmp11 = icmp sle i32 %8, %10, !dbg !9555
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !9556

if.then13:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !9557
  br label %return, !dbg !9557

if.else:                                          ; preds = %land.lhs.true, %if.then
  %11 = load i32, i32* %i, align 4, !dbg !9558
  %idxprom14 = sext i32 %11 to i64, !dbg !9559
  %arrayidx15 = getelementptr [8 x %struct.anon.136], [8 x %struct.anon.136]* @channel_table, i64 0, i64 %idxprom14, !dbg !9559
  %min16 = getelementptr inbounds %struct.anon.136, %struct.anon.136* %arrayidx15, i32 0, i32 1, !dbg !9560
  %12 = load i32, i32* %min16, align 4, !dbg !9560
  store i32 %12, i32* %retval, align 4, !dbg !9561
  br label %return, !dbg !9561

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9540

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !9562
  %inc = add i32 %13, 1, !dbg !9562
  store i32 %inc, i32* %i, align 4, !dbg !9562
  br label %for.cond, !dbg !9563, !llvm.loop !9564

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !9566
  br label %return, !dbg !9566

return:                                           ; preds = %for.end, %if.else, %if.then13
  %14 = load i32, i32* %retval, align 4, !dbg !9567
  ret i32 %14, !dbg !9567
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_scan(%struct.atmel_private* %priv, i32 %specific_ssid) #0 !dbg !9568 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %specific_ssid.addr = alloca i32, align 4
  %cmd = alloca %struct.anon.141, align 2
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !9571, metadata !DIExpression()), !dbg !9572
  store i32 %specific_ssid, i32* %specific_ssid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %specific_ssid.addr, metadata !9573, metadata !DIExpression()), !dbg !9574
  call void @llvm.dbg.declare(metadata %struct.anon.141* %cmd, metadata !9575, metadata !DIExpression()), !dbg !9587
  %BSSID = getelementptr inbounds %struct.anon.141, %struct.anon.141* %cmd, i32 0, i32 0, !dbg !9588
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %BSSID, i64 0, i64 0, !dbg !9589
  call void @eth_broadcast_addr(i8* %arraydecay) #10, !dbg !9590
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !9591
  %fast_scan = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 69, !dbg !9593
  %1 = load i32, i32* %fast_scan, align 8, !dbg !9593
  %tobool = icmp ne i32 %1, 0, !dbg !9591
  br i1 %tobool, label %if.then, label %if.else, !dbg !9594

if.then:                                          ; preds = %entry
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !9595
  %SSID_size = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 74, !dbg !9597
  %3 = load i32, i32* %SSID_size, align 8, !dbg !9597
  %conv = trunc i32 %3 to i8, !dbg !9595
  %SSID_size1 = getelementptr inbounds %struct.anon.141, %struct.anon.141* %cmd, i32 0, i32 8, !dbg !9598
  store i8 %conv, i8* %SSID_size1, align 1, !dbg !9599
  %SSID = getelementptr inbounds %struct.anon.141, %struct.anon.141* %cmd, i32 0, i32 1, !dbg !9600
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %SSID, i64 0, i64 0, !dbg !9601
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !9602
  %SSID3 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 78, !dbg !9603
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %SSID3, i64 0, i64 0, !dbg !9601
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !9604
  %SSID_size5 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %5, i32 0, i32 74, !dbg !9605
  %6 = load i32, i32* %SSID_size5, align 8, !dbg !9605
  %conv6 = sext i32 %6 to i64, !dbg !9604
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay2, i8* align 4 %arraydecay4, i64 %conv6, i1 false), !dbg !9601
  %min_channel_time = getelementptr inbounds %struct.anon.141, %struct.anon.141* %cmd, i32 0, i32 5, !dbg !9606
  store i16 10, i16* %min_channel_time, align 2, !dbg !9607
  %max_channel_time = getelementptr inbounds %struct.anon.141, %struct.anon.141* %cmd, i32 0, i32 6, !dbg !9608
  store i16 50, i16* %max_channel_time, align 2, !dbg !9609
  br label %if.end, !dbg !9610

if.else:                                          ; preds = %entry
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !9611
  %BSS_list_entries = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %7, i32 0, i32 71, !dbg !9613
  store i32 0, i32* %BSS_list_entries, align 4, !dbg !9614
  %SSID_size7 = getelementptr inbounds %struct.anon.141, %struct.anon.141* %cmd, i32 0, i32 8, !dbg !9615
  store i8 0, i8* %SSID_size7, align 1, !dbg !9616
  %min_channel_time8 = getelementptr inbounds %struct.anon.141, %struct.anon.141* %cmd, i32 0, i32 5, !dbg !9617
  store i16 10, i16* %min_channel_time8, align 2, !dbg !9618
  %max_channel_time9 = getelementptr inbounds %struct.anon.141, %struct.anon.141* %cmd, i32 0, i32 6, !dbg !9619
  store i16 120, i16* %max_channel_time9, align 2, !dbg !9620
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %options = getelementptr inbounds %struct.anon.141, %struct.anon.141* %cmd, i32 0, i32 7, !dbg !9621
  store i8 0, i8* %options, align 2, !dbg !9622
  %8 = load i32, i32* %specific_ssid.addr, align 4, !dbg !9623
  %tobool10 = icmp ne i32 %8, 0, !dbg !9623
  br i1 %tobool10, label %if.end15, label %if.then11, !dbg !9625

if.then11:                                        ; preds = %if.end
  %options12 = getelementptr inbounds %struct.anon.141, %struct.anon.141* %cmd, i32 0, i32 7, !dbg !9626
  %9 = load i8, i8* %options12, align 2, !dbg !9627
  %conv13 = zext i8 %9 to i32, !dbg !9627
  %or = or i32 %conv13, 128, !dbg !9627
  %conv14 = trunc i32 %or to i8, !dbg !9627
  store i8 %conv14, i8* %options12, align 2, !dbg !9627
  br label %if.end15, !dbg !9628

if.end15:                                         ; preds = %if.then11, %if.end
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !9629
  %channel = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 47, !dbg !9630
  %11 = load i32, i32* %channel, align 4, !dbg !9630
  %and = and i32 %11, 127, !dbg !9631
  %conv16 = trunc i32 %and to i8, !dbg !9632
  %channel17 = getelementptr inbounds %struct.anon.141, %struct.anon.141* %cmd, i32 0, i32 3, !dbg !9633
  store i8 %conv16, i8* %channel17, align 1, !dbg !9634
  %scan_type = getelementptr inbounds %struct.anon.141, %struct.anon.141* %cmd, i32 0, i32 2, !dbg !9635
  store i8 0, i8* %scan_type, align 2, !dbg !9636
  %12 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !9637
  %operating_mode = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %12, i32 0, i32 43, !dbg !9637
  %13 = load i32, i32* %operating_mode, align 8, !dbg !9637
  %cmp = icmp eq i32 %13, 1, !dbg !9637
  %14 = zext i1 %cmp to i64, !dbg !9637
  %cond = select i1 %cmp, i32 1, i32 2, !dbg !9637
  %conv19 = trunc i32 %cond to i16, !dbg !9637
  %BSS_type = getelementptr inbounds %struct.anon.141, %struct.anon.141* %cmd, i32 0, i32 4, !dbg !9638
  store i16 %conv19, i16* %BSS_type, align 2, !dbg !9639
  %15 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !9640
  %16 = bitcast %struct.anon.141* %cmd to i8*, !dbg !9641
  call void @atmel_send_command(%struct.atmel_private* %15, i32 3, i8* %16, i32 48) #10, !dbg !9642
  %17 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !9643
  call void @atmel_enter_state(%struct.atmel_private* %17, i32 0) #10, !dbg !9644
  ret void, !dbg !9645
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_set_gcr(%struct.net_device* %dev, i16 zeroext %mask) #0 !dbg !9646 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %mask.addr = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !9649, metadata !DIExpression()), !dbg !9650
  store i16 %mask, i16* %mask.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mask.addr, metadata !9651, metadata !DIExpression()), !dbg !9652
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9653
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 5, !dbg !9654
  %1 = load i64, i64* %base_addr, align 8, !dbg !9654
  %add = add i64 %1, 0, !dbg !9655
  %conv = trunc i64 %add to i32, !dbg !9653
  %call = call zeroext i16 @inw(i32 %conv) #10, !dbg !9656
  %conv1 = zext i16 %call to i32, !dbg !9656
  %2 = load i16, i16* %mask.addr, align 2, !dbg !9657
  %conv2 = zext i16 %2 to i32, !dbg !9657
  %or = or i32 %conv1, %conv2, !dbg !9658
  %conv3 = trunc i32 %or to i16, !dbg !9656
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9659
  %base_addr4 = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 5, !dbg !9660
  %4 = load i64, i64* %base_addr4, align 8, !dbg !9660
  %add5 = add i64 %4, 0, !dbg !9661
  %conv6 = trunc i64 %add5 to i32, !dbg !9659
  call void @outw(i16 zeroext %conv3, i32 %conv6) #10, !dbg !9662
  ret void, !dbg !9663
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.net_device* @init_atmel_card(i16 zeroext %irq, i64 %port, i32 %fw_type, %struct.device* %sys_dev, i32 (i8*)* %card_present, i8* %card) #0 !dbg !9664 {
entry:
  %lock.addr.i74 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i74, metadata !9668, metadata !DIExpression()), !dbg !9674
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9668, metadata !DIExpression()), !dbg !9677
  %retval = alloca %struct.net_device*, align 8
  %irq.addr = alloca i16, align 2
  %port.addr = alloca i64, align 8
  %fw_type.addr = alloca i32, align 4
  %sys_dev.addr = alloca %struct.device*, align 8
  %card_present.addr = alloca i32 (i8*)*, align 8
  %card.addr = alloca i8*, align 8
  %dev = alloca %struct.net_device*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %rc = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  %.compoundliteral30 = alloca %struct.spinlock, align 1
  store i16 %irq, i16* %irq.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %irq.addr, metadata !9680, metadata !DIExpression()), !dbg !9681
  store i64 %port, i64* %port.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %port.addr, metadata !9682, metadata !DIExpression()), !dbg !9683
  store i32 %fw_type, i32* %fw_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fw_type.addr, metadata !9684, metadata !DIExpression()), !dbg !9685
  store %struct.device* %sys_dev, %struct.device** %sys_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %sys_dev.addr, metadata !9686, metadata !DIExpression()), !dbg !9687
  store i32 (i8*)* %card_present, i32 (i8*)** %card_present.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*)** %card_present.addr, metadata !9688, metadata !DIExpression()), !dbg !9689
  store i8* %card, i8** %card.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %card.addr, metadata !9690, metadata !DIExpression()), !dbg !9691
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !9692, metadata !DIExpression()), !dbg !9693
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !9694, metadata !DIExpression()), !dbg !9695
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9696, metadata !DIExpression()), !dbg !9697
  %call = call %struct.net_device* @alloc_etherdev_mqs(i32 7344, i32 1, i32 1) #10, !dbg !9698
  store %struct.net_device* %call, %struct.net_device** %dev, align 8, !dbg !9699
  %0 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9700
  %tobool = icmp ne %struct.net_device* %0, null, !dbg !9700
  br i1 %tobool, label %if.end, label %if.then, !dbg !9702

if.then:                                          ; preds = %entry
  store %struct.net_device* null, %struct.net_device** %retval, align 8, !dbg !9703
  br label %return, !dbg !9703

if.end:                                           ; preds = %entry
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9704
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9706
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 0, !dbg !9707
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !9706
  %call1 = call i32 @dev_alloc_name(%struct.net_device* %1, i8* %arraydecay) #10, !dbg !9708
  %cmp = icmp slt i32 %call1, 0, !dbg !9709
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !9710

if.then2:                                         ; preds = %if.end
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0)) #11, !dbg !9711
  br label %err_out_free, !dbg !9713

if.end4:                                          ; preds = %if.end
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9714
  %call5 = call i8* @netdev_priv(%struct.net_device* %3) #10, !dbg !9715
  %4 = bitcast i8* %call5 to %struct.atmel_private*, !dbg !9715
  store %struct.atmel_private* %4, %struct.atmel_private** %priv, align 8, !dbg !9716
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9717
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9718
  %dev6 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 7, !dbg !9719
  store %struct.net_device* %5, %struct.net_device** %dev6, align 8, !dbg !9720
  %7 = load %struct.device*, %struct.device** %sys_dev.addr, align 8, !dbg !9721
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9722
  %sys_dev7 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %8, i32 0, i32 8, !dbg !9723
  store %struct.device* %7, %struct.device** %sys_dev7, align 8, !dbg !9724
  %9 = load i32 (i8*)*, i32 (i8*)** %card_present.addr, align 8, !dbg !9725
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9726
  %present_callback = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 1, !dbg !9727
  store i32 (i8*)* %9, i32 (i8*)** %present_callback, align 8, !dbg !9728
  %11 = load i8*, i8** %card.addr, align 8, !dbg !9729
  %12 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9730
  %card8 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %12, i32 0, i32 0, !dbg !9731
  store i8* %11, i8** %card8, align 8, !dbg !9732
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9733
  %firmware = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %13, i32 0, i32 4, !dbg !9734
  store i8* null, i8** %firmware, align 8, !dbg !9735
  %14 = load i32, i32* %fw_type.addr, align 4, !dbg !9736
  %15 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9737
  %firmware_type = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %15, i32 0, i32 3, !dbg !9738
  store i32 %14, i32* %firmware_type, align 8, !dbg !9739
  %16 = load i8*, i8** @firmware, align 8, !dbg !9740
  %tobool9 = icmp ne i8* %16, null, !dbg !9740
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !9742

if.then10:                                        ; preds = %if.end4
  %17 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9743
  %firmware_id = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %17, i32 0, i32 2, !dbg !9744
  %arraydecay11 = getelementptr inbounds [32 x i8], [32 x i8]* %firmware_id, i64 0, i64 0, !dbg !9743
  %18 = load i8*, i8** @firmware, align 8, !dbg !9745
  %call12 = call i64 @strlcpy(i8* %arraydecay11, i8* %18, i64 32) #10, !dbg !9746
  br label %if.end13, !dbg !9746

if.end13:                                         ; preds = %if.then10, %if.end4
  %19 = load i32 (i8*)*, i32 (i8*)** %card_present.addr, align 8, !dbg !9747
  %tobool14 = icmp ne i32 (i8*)* %19, null, !dbg !9747
  %20 = zext i1 %tobool14 to i64, !dbg !9747
  %cond = select i1 %tobool14, i32 0, i32 1, !dbg !9747
  %21 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9748
  %bus_type = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %21, i32 0, i32 12, !dbg !9749
  store i32 %cond, i32* %bus_type, align 8, !dbg !9750
  %22 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9751
  %station_state = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %22, i32 0, i32 42, !dbg !9752
  store i32 6, i32* %station_state, align 4, !dbg !9753
  %23 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9754
  %do_rx_crc = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %23, i32 0, i32 14, !dbg !9755
  store i32 0, i32* %do_rx_crc, align 8, !dbg !9756
  %24 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9757
  %bus_type15 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %24, i32 0, i32 12, !dbg !9759
  %25 = load i32, i32* %bus_type15, align 8, !dbg !9759
  %cmp16 = icmp eq i32 %25, 0, !dbg !9760
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !9761

if.then17:                                        ; preds = %if.end13
  %26 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9762
  %probe_crc = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %26, i32 0, i32 15, !dbg !9764
  store i32 1, i32* %probe_crc, align 4, !dbg !9765
  %27 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9766
  %crc_ko_cnt = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %27, i32 0, i32 17, !dbg !9767
  store i32 0, i32* %crc_ko_cnt, align 4, !dbg !9768
  %28 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9769
  %crc_ok_cnt = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %28, i32 0, i32 16, !dbg !9770
  store i32 0, i32* %crc_ok_cnt, align 8, !dbg !9771
  br label %if.end19, !dbg !9772

if.else:                                          ; preds = %if.end13
  %29 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9773
  %probe_crc18 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %29, i32 0, i32 15, !dbg !9774
  store i32 0, i32* %probe_crc18, align 4, !dbg !9775
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then17
  %30 = load volatile i64, i64* @jiffies, align 8, !dbg !9776
  %31 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9777
  %last_qual = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %31, i32 0, i32 45, !dbg !9778
  store i64 %30, i64* %last_qual, align 8, !dbg !9779
  %32 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9780
  %last_beacon_timestamp = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %32, i32 0, i32 80, !dbg !9781
  store i64 0, i64* %last_beacon_timestamp, align 8, !dbg !9782
  %33 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9783
  %frag_source = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %33, i32 0, i32 29, !dbg !9784
  %arraydecay20 = getelementptr inbounds [6 x i8], [6 x i8]* %frag_source, i64 0, i64 0, !dbg !9785
  call void @llvm.memset.p0i8.i64(i8* align 2 %arraydecay20, i8 -1, i64 6, i1 false), !dbg !9785
  %34 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9786
  %BSSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %34, i32 0, i32 77, !dbg !9787
  %arraydecay21 = getelementptr inbounds [6 x i8], [6 x i8]* %BSSID, i64 0, i64 0, !dbg !9786
  call void @eth_zero_addr(i8* %arraydecay21) #10, !dbg !9788
  %35 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9789
  %CurrentBSSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %35, i32 0, i32 76, !dbg !9790
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %CurrentBSSID, i64 0, i64 0, !dbg !9789
  store i8 -1, i8* %arrayidx, align 8, !dbg !9791
  %36 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9792
  %station_was_associated = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %36, i32 0, i32 67, !dbg !9793
  store i32 0, i32* %station_was_associated, align 8, !dbg !9794
  %37 = load volatile i64, i64* @jiffies, align 8, !dbg !9795
  %38 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9796
  %last_survey = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %38, i32 0, i32 66, !dbg !9797
  store i64 %37, i64* %last_survey, align 8, !dbg !9798
  %39 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9799
  %preamble = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %39, i32 0, i32 56, !dbg !9800
  store i32 0, i32* %preamble, align 8, !dbg !9801
  %40 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9802
  %operating_mode = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %40, i32 0, i32 43, !dbg !9803
  store i32 2, i32* %operating_mode, align 8, !dbg !9804
  %41 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9805
  %connect_to_any_BSS = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %41, i32 0, i32 73, !dbg !9806
  store i32 0, i32* %connect_to_any_BSS, align 4, !dbg !9807
  %42 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9808
  %config_reg_domain = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %42, i32 0, i32 49, !dbg !9809
  store i32 0, i32* %config_reg_domain, align 4, !dbg !9810
  %43 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9811
  %reg_domain = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %43, i32 0, i32 48, !dbg !9812
  store i32 0, i32* %reg_domain, align 8, !dbg !9813
  %44 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9814
  %tx_rate = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %44, i32 0, i32 50, !dbg !9815
  store i32 3, i32* %tx_rate, align 8, !dbg !9816
  %45 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9817
  %auto_tx_rate = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %45, i32 0, i32 51, !dbg !9818
  store i32 1, i32* %auto_tx_rate, align 4, !dbg !9819
  %46 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9820
  %channel = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %46, i32 0, i32 47, !dbg !9821
  store i32 4, i32* %channel, align 4, !dbg !9822
  %47 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9823
  %power_mode = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %47, i32 0, i32 44, !dbg !9824
  store i32 0, i32* %power_mode, align 4, !dbg !9825
  %48 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9826
  %SSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %48, i32 0, i32 78, !dbg !9827
  %arrayidx22 = getelementptr [32 x i8], [32 x i8]* %SSID, i64 0, i64 0, !dbg !9826
  store i8 0, i8* %arrayidx22, align 4, !dbg !9828
  %49 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9829
  %SSID_size = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %49, i32 0, i32 74, !dbg !9830
  store i32 0, i32* %SSID_size, align 8, !dbg !9831
  %50 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9832
  %new_SSID_size = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %50, i32 0, i32 75, !dbg !9833
  store i32 0, i32* %new_SSID_size, align 4, !dbg !9834
  %51 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9835
  %frag_threshold = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %51, i32 0, i32 53, !dbg !9836
  store i32 2346, i32* %frag_threshold, align 4, !dbg !9837
  %52 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9838
  %rts_threshold = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %52, i32 0, i32 52, !dbg !9839
  store i32 2347, i32* %rts_threshold, align 8, !dbg !9840
  %53 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9841
  %short_retry = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %53, i32 0, i32 55, !dbg !9842
  store i32 7, i32* %short_retry, align 4, !dbg !9843
  %54 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9844
  %long_retry = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %54, i32 0, i32 54, !dbg !9845
  store i32 4, i32* %long_retry, align 8, !dbg !9846
  %55 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9847
  %wep_is_on = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %55, i32 0, i32 30, !dbg !9848
  store i8 0, i8* %wep_is_on, align 4, !dbg !9849
  %56 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9850
  %default_key = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %56, i32 0, i32 31, !dbg !9851
  store i8 0, i8* %default_key, align 1, !dbg !9852
  %57 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9853
  %encryption_level = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %57, i32 0, i32 33, !dbg !9854
  store i8 0, i8* %encryption_level, align 1, !dbg !9855
  %58 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9856
  %exclude_unencrypted = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %58, i32 0, i32 32, !dbg !9857
  store i8 0, i8* %exclude_unencrypted, align 2, !dbg !9858
  %59 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9859
  %pairwise_cipher_suite = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %59, i32 0, i32 35, !dbg !9860
  store i8 0, i8* %pairwise_cipher_suite, align 1, !dbg !9861
  %60 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9862
  %group_cipher_suite = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %60, i32 0, i32 34, !dbg !9863
  store i8 0, i8* %group_cipher_suite, align 8, !dbg !9864
  %61 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9865
  %use_wpa = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %61, i32 0, i32 38, !dbg !9866
  store i32 0, i32* %use_wpa, align 4, !dbg !9867
  %62 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9868
  %wep_keys = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %62, i32 0, i32 36, !dbg !9869
  %arraydecay23 = getelementptr inbounds [4 x [40 x i8]], [4 x [40 x i8]]* %wep_keys, i64 0, i64 0, !dbg !9870
  %63 = bitcast [40 x i8]* %arraydecay23 to i8*, !dbg !9870
  call void @llvm.memset.p0i8.i64(i8* align 2 %63, i8 0, i64 160, i1 false), !dbg !9870
  %64 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9871
  %wep_key_len = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %64, i32 0, i32 37, !dbg !9872
  %arraydecay24 = getelementptr inbounds [4 x i32], [4 x i32]* %wep_key_len, i64 0, i64 0, !dbg !9873
  %65 = bitcast i32* %arraydecay24 to i8*, !dbg !9873
  call void @llvm.memset.p0i8.i64(i8* align 4 %65, i8 0, i64 16, i1 false), !dbg !9873
  %66 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9874
  %beacon_period = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %66, i32 0, i32 58, !dbg !9875
  store i32 100, i32* %beacon_period, align 8, !dbg !9876
  %67 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9877
  %default_beacon_period = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %67, i32 0, i32 57, !dbg !9878
  store i32 100, i32* %default_beacon_period, align 4, !dbg !9879
  %68 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9880
  %listen_interval = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %68, i32 0, i32 59, !dbg !9881
  store i32 1, i32* %listen_interval, align 4, !dbg !9882
  %69 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9883
  %management_timer = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %69, i32 0, i32 6, !dbg !9883
  call void @init_timer_key(%struct.timer_list* %management_timer, void (%struct.timer_list*)* @atmel_management_timer, i32 0, i8* null, %struct.lock_class_key* null) #10, !dbg !9883
  br label %do.body, !dbg !9884

do.body:                                          ; preds = %if.end19
  %70 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9885
  %irqlock = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %70, i32 0, i32 10, !dbg !9885
  store %struct.spinlock* %irqlock, %struct.spinlock** %lock.addr.i, align 8
  %71 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9886
  %72 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %71, i32 0, i32 0, !dbg !9887
  %rlock.i = bitcast %union.anon.46* %72 to %struct.raw_spinlock*, !dbg !9887
  %73 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9885
  %irqlock26 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %73, i32 0, i32 10, !dbg !9885
  %74 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !9885
  %rlock = bitcast %union.anon.46* %74 to %struct.raw_spinlock*, !dbg !9885
  %75 = bitcast %struct.spinlock* %irqlock26 to i8*, !dbg !9885
  %76 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !9885
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 1 %76, i64 0, i1 false), !dbg !9885
  br label %do.end, !dbg !9885

do.end:                                           ; preds = %do.body
  br label %do.body27, !dbg !9888

do.body27:                                        ; preds = %do.end
  %77 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9889
  %timerlock = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %77, i32 0, i32 11, !dbg !9889
  store %struct.spinlock* %timerlock, %struct.spinlock** %lock.addr.i74, align 8
  %78 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i74, align 8, !dbg !9890
  %79 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %78, i32 0, i32 0, !dbg !9891
  %rlock.i75 = bitcast %union.anon.46* %79 to %struct.raw_spinlock*, !dbg !9891
  %80 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9889
  %timerlock29 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %80, i32 0, i32 11, !dbg !9889
  %81 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral30, i32 0, i32 0, !dbg !9889
  %rlock31 = bitcast %union.anon.46* %81 to %struct.raw_spinlock*, !dbg !9889
  %82 = bitcast %struct.spinlock* %timerlock29 to i8*, !dbg !9889
  %83 = bitcast %struct.spinlock* %.compoundliteral30 to i8*, !dbg !9889
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 1 %83, i64 0, i1 false), !dbg !9889
  br label %do.end32, !dbg !9889

do.end32:                                         ; preds = %do.body27
  %84 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9892
  %netdev_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %84, i32 0, i32 32, !dbg !9893
  store %struct.net_device_ops* bitcast ({ i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }* @atmel_netdev_ops to %struct.net_device_ops*), %struct.net_device_ops** %netdev_ops, align 8, !dbg !9894
  %85 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9895
  %wireless_handlers = getelementptr inbounds %struct.net_device, %struct.net_device* %85, i32 0, i32 30, !dbg !9896
  store %struct.iw_handler_def* @atmel_handler_def, %struct.iw_handler_def** %wireless_handlers, align 8, !dbg !9897
  %86 = load i16, i16* %irq.addr, align 2, !dbg !9898
  %conv = zext i16 %86 to i32, !dbg !9898
  %87 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9899
  %irq33 = getelementptr inbounds %struct.net_device, %struct.net_device* %87, i32 0, i32 6, !dbg !9900
  store i32 %conv, i32* %irq33, align 8, !dbg !9901
  %88 = load i64, i64* %port.addr, align 8, !dbg !9902
  %89 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9903
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %89, i32 0, i32 5, !dbg !9904
  store i64 %88, i64* %base_addr, align 8, !dbg !9905
  %90 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9906
  %min_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %90, i32 0, i32 45, !dbg !9907
  store i32 68, i32* %min_mtu, align 4, !dbg !9908
  %91 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9909
  %max_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %91, i32 0, i32 46, !dbg !9910
  store i32 2312, i32* %max_mtu, align 8, !dbg !9911
  %92 = load %struct.device*, %struct.device** %sys_dev.addr, align 8, !dbg !9912
  %93 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9912
  %dev34 = getelementptr inbounds %struct.net_device, %struct.net_device* %93, i32 0, i32 106, !dbg !9912
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev34, i32 0, i32 1, !dbg !9912
  store %struct.device* %92, %struct.device** %parent, align 8, !dbg !9912
  %94 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9913
  %irq35 = getelementptr inbounds %struct.net_device, %struct.net_device* %94, i32 0, i32 6, !dbg !9915
  %95 = load i32, i32* %irq35, align 8, !dbg !9915
  %96 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9916
  %name36 = getelementptr inbounds %struct.net_device, %struct.net_device* %96, i32 0, i32 0, !dbg !9917
  %arraydecay37 = getelementptr inbounds [16 x i8], [16 x i8]* %name36, i64 0, i64 0, !dbg !9916
  %97 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9918
  %98 = bitcast %struct.net_device* %97 to i8*, !dbg !9918
  %call38 = call i32 @request_irq(i32 %95, i32 (i32, i8*)* @service_interrupt, i64 128, i8* %arraydecay37, i8* %98) #10, !dbg !9919
  store i32 %call38, i32* %rc, align 4, !dbg !9920
  %tobool39 = icmp ne i32 %call38, 0, !dbg !9920
  br i1 %tobool39, label %if.then40, label %if.end45, !dbg !9921

if.then40:                                        ; preds = %do.end32
  %99 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9922
  %name41 = getelementptr inbounds %struct.net_device, %struct.net_device* %99, i32 0, i32 0, !dbg !9924
  %arraydecay42 = getelementptr inbounds [16 x i8], [16 x i8]* %name41, i64 0, i64 0, !dbg !9922
  %100 = load i16, i16* %irq.addr, align 2, !dbg !9925
  %conv43 = zext i16 %100 to i32, !dbg !9925
  %101 = load i32, i32* %rc, align 4, !dbg !9926
  %call44 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay42, i32 %conv43, i32 %101) #11, !dbg !9927
  br label %err_out_free, !dbg !9928

if.end45:                                         ; preds = %do.end32
  %102 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9929
  %base_addr46 = getelementptr inbounds %struct.net_device, %struct.net_device* %102, i32 0, i32 5, !dbg !9929
  %103 = load i64, i64* %base_addr46, align 8, !dbg !9929
  %104 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9929
  %bus_type47 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %104, i32 0, i32 12, !dbg !9929
  %105 = load i32, i32* %bus_type47, align 8, !dbg !9929
  %cmp48 = icmp eq i32 %105, 0, !dbg !9929
  %106 = zext i1 %cmp48 to i64, !dbg !9929
  %cond50 = select i1 %cmp48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), !dbg !9929
  %call51 = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %103, i64 32, i8* %cond50, i32 0) #10, !dbg !9929
  %tobool52 = icmp ne %struct.resource* %call51, null, !dbg !9929
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !9931

if.then53:                                        ; preds = %if.end45
  br label %err_out_irq, !dbg !9932

if.end54:                                         ; preds = %if.end45
  %107 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9934
  %call55 = call i32 @register_netdev(%struct.net_device* %107) #10, !dbg !9936
  %tobool56 = icmp ne i32 %call55, 0, !dbg !9936
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !9937

if.then57:                                        ; preds = %if.end54
  br label %err_out_res, !dbg !9938

if.end58:                                         ; preds = %if.end54
  %108 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9939
  %call59 = call i32 @probe_atmel_card(%struct.net_device* %108) #10, !dbg !9941
  %tobool60 = icmp ne i32 %call59, 0, !dbg !9941
  br i1 %tobool60, label %if.end62, label %if.then61, !dbg !9942

if.then61:                                        ; preds = %if.end58
  %109 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9943
  call void @unregister_netdev(%struct.net_device* %109) #10, !dbg !9945
  br label %err_out_res, !dbg !9946

if.end62:                                         ; preds = %if.end58
  %110 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9947
  call void @netif_carrier_off(%struct.net_device* %110) #10, !dbg !9948
  %111 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !9949
  %112 = bitcast %struct.atmel_private* %111 to i8*, !dbg !9949
  %call63 = call %struct.proc_dir_entry* @proc_create_single_data(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i16 zeroext 0, %struct.proc_dir_entry* null, i32 (%struct.seq_file*, i8*)* @atmel_proc_show, i8* %112) #10, !dbg !9951
  %tobool64 = icmp ne %struct.proc_dir_entry* %call63, null, !dbg !9951
  br i1 %tobool64, label %if.end67, label %if.then65, !dbg !9952

if.then65:                                        ; preds = %if.end62
  %call66 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6, i64 0, i64 0)) #11, !dbg !9953
  br label %if.end67, !dbg !9953

if.end67:                                         ; preds = %if.then65, %if.end62
  %113 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9954
  %name68 = getelementptr inbounds %struct.net_device, %struct.net_device* %113, i32 0, i32 0, !dbg !9955
  %arraydecay69 = getelementptr inbounds [16 x i8], [16 x i8]* %name68, i64 0, i64 0, !dbg !9954
  %114 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9956
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %114, i32 0, i32 74, !dbg !9957
  %115 = load i8*, i8** %dev_addr, align 8, !dbg !9957
  %call70 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i64 0, i64 0), i8* %arraydecay69, i32 0, i32 98, i8* %115) #11, !dbg !9958
  %116 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9959
  store %struct.net_device* %116, %struct.net_device** %retval, align 8, !dbg !9960
  br label %return, !dbg !9960

err_out_res:                                      ; preds = %if.then61, %if.then57
  call void @llvm.dbg.label(metadata !9961), !dbg !9962
  %117 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9963
  %base_addr71 = getelementptr inbounds %struct.net_device, %struct.net_device* %117, i32 0, i32 5, !dbg !9963
  %118 = load i64, i64* %base_addr71, align 8, !dbg !9963
  call void @__release_region(%struct.resource* @ioport_resource, i64 %118, i64 32) #10, !dbg !9963
  br label %err_out_irq, !dbg !9963

err_out_irq:                                      ; preds = %err_out_res, %if.then53
  call void @llvm.dbg.label(metadata !9964), !dbg !9965
  %119 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9966
  %irq72 = getelementptr inbounds %struct.net_device, %struct.net_device* %119, i32 0, i32 6, !dbg !9967
  %120 = load i32, i32* %irq72, align 8, !dbg !9967
  %121 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9968
  %122 = bitcast %struct.net_device* %121 to i8*, !dbg !9968
  %call73 = call i8* @free_irq(i32 %120, i8* %122) #10, !dbg !9969
  br label %err_out_free, !dbg !9969

err_out_free:                                     ; preds = %err_out_irq, %if.then40, %if.then2
  call void @llvm.dbg.label(metadata !9970), !dbg !9971
  %123 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9972
  call void @free_netdev(%struct.net_device* %123) #10, !dbg !9973
  store %struct.net_device* null, %struct.net_device** %retval, align 8, !dbg !9974
  br label %return, !dbg !9974

return:                                           ; preds = %err_out_free, %if.end67, %if.then
  %124 = load %struct.net_device*, %struct.net_device** %retval, align 8, !dbg !9975
  ret %struct.net_device* %124, !dbg !9975
}

; Function Attrs: noredzone
declare dso_local %struct.net_device* @alloc_etherdev_mqs(i32, i32, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @dev_alloc_name(%struct.net_device*, i8*) #2

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eth_zero_addr(i8* %addr) #0 !dbg !9976 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9980, metadata !DIExpression()), !dbg !9981
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !9982
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 6, i1 false), !dbg !9983
  ret void, !dbg !9984
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_management_timer(%struct.timer_list* %t) #0 !dbg !9985 {
entry:
  %lock.addr.i70 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i70, metadata !9986, metadata !DIExpression()), !dbg !9990
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9992, metadata !DIExpression()), !dbg !9993
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9668, metadata !DIExpression()), !dbg !9994
  %t.addr = alloca %struct.timer_list*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.atmel_private*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy12 = alloca i64, align 8
  %__dummy213 = alloca i64, align 8
  %tmp16 = alloca i32, align 4
  %auth = alloca i32, align 4
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !10001, metadata !DIExpression()), !dbg !10002
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !10003, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10005, metadata !DIExpression()), !dbg !10007
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !10007
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !10007
  store i8* %1, i8** %__mptr, align 8, !dbg !10007
  br label %do.body, !dbg !10007

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10008

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10007
  %add.ptr = getelementptr i8, i8* %2, i64 -72, !dbg !10007
  %3 = bitcast i8* %add.ptr to %struct.atmel_private*, !dbg !10007
  store %struct.atmel_private* %3, %struct.atmel_private** %tmp, align 8, !dbg !10008
  %4 = load %struct.atmel_private*, %struct.atmel_private** %tmp, align 8, !dbg !10007
  store %struct.atmel_private* %4, %struct.atmel_private** %priv, align 8, !dbg !10004
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10010, metadata !DIExpression()), !dbg !10011
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10012
  %card = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %5, i32 0, i32 0, !dbg !10014
  %6 = load i8*, i8** %card, align 8, !dbg !10014
  %tobool = icmp ne i8* %6, null, !dbg !10012
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10015

land.lhs.true:                                    ; preds = %do.end
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10016
  %present_callback = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %7, i32 0, i32 1, !dbg !10017
  %8 = load i32 (i8*)*, i32 (i8*)** %present_callback, align 8, !dbg !10017
  %tobool1 = icmp ne i32 (i8*)* %8, null, !dbg !10016
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !10018

land.lhs.true2:                                   ; preds = %land.lhs.true
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10019
  %present_callback3 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %9, i32 0, i32 1, !dbg !10020
  %10 = load i32 (i8*)*, i32 (i8*)** %present_callback3, align 8, !dbg !10020
  %11 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10021
  %card4 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %11, i32 0, i32 0, !dbg !10022
  %12 = load i8*, i8** %card4, align 8, !dbg !10022
  %call = call i32 %10(i8* %12) #10, !dbg !10023
  %tobool5 = icmp ne i32 %call, 0, !dbg !10023
  br i1 %tobool5, label %if.end, label %if.then, !dbg !10024

if.then:                                          ; preds = %land.lhs.true2
  br label %return, !dbg !10025

if.end:                                           ; preds = %land.lhs.true2, %land.lhs.true, %do.end
  br label %do.body6, !dbg !10026

do.body6:                                         ; preds = %if.end
  br label %do.body7, !dbg !10027

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10028, metadata !DIExpression()), !dbg !10030
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10031, metadata !DIExpression()), !dbg !10030
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10030
  %conv = zext i1 %cmp to i32, !dbg !10030
  store i32 1, i32* %tmp8, align 4, !dbg !10030
  %13 = load i32, i32* %tmp8, align 4, !dbg !10030
  br label %do.body9, !dbg !10032

do.body9:                                         ; preds = %do.body7
  br label %do.body10, !dbg !10033

do.body10:                                        ; preds = %do.body9
  br label %do.body11, !dbg !10034

do.body11:                                        ; preds = %do.body10
  call void @llvm.dbg.declare(metadata i64* %__dummy12, metadata !10036, metadata !DIExpression()), !dbg !10039
  call void @llvm.dbg.declare(metadata i64* %__dummy213, metadata !10040, metadata !DIExpression()), !dbg !10039
  %cmp14 = icmp eq i64* %__dummy12, %__dummy213, !dbg !10039
  %conv15 = zext i1 %cmp14 to i32, !dbg !10039
  store i32 1, i32* %tmp16, align 4, !dbg !10039
  %14 = load i32, i32* %tmp16, align 4, !dbg !10039
  %call17 = call i64 @arch_local_irq_save() #10, !dbg !10041
  store i64 %call17, i64* %flags, align 8, !dbg !10041
  br label %do.end18, !dbg !10041

do.end18:                                         ; preds = %do.body11
  br label %do.end19, !dbg !10034

do.end19:                                         ; preds = %do.end18
  br label %do.body20, !dbg !10033

do.body20:                                        ; preds = %do.end19
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10042, !srcloc !10043
  br label %do.body21, !dbg !10042

do.body21:                                        ; preds = %do.body20
  %15 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10044
  %irqlock = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %15, i32 0, i32 10, !dbg !10044
  store %struct.spinlock* %irqlock, %struct.spinlock** %lock.addr.i, align 8
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10045
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !10046
  %rlock.i = bitcast %union.anon.46* %17 to %struct.raw_spinlock*, !dbg !10046
  br label %do.end23, !dbg !10044

do.end23:                                         ; preds = %do.body21
  br label %do.end24, !dbg !10042

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !10033

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !10032

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !10027

do.end27:                                         ; preds = %do.end26
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10047
  %station_state = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %18, i32 0, i32 42, !dbg !10048
  %19 = load i32, i32* %station_state, align 4, !dbg !10048
  switch i32 %19, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb43
    i32 5, label %sw.bb56
  ], !dbg !10049

sw.bb:                                            ; preds = %do.end27
  %20 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10050
  %AuthenticationRequestRetryCnt = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %20, i32 0, i32 62, !dbg !10053
  %21 = load i32, i32* %AuthenticationRequestRetryCnt, align 8, !dbg !10053
  %cmp28 = icmp sge i32 %21, 3, !dbg !10054
  br i1 %cmp28, label %if.then30, label %if.else, !dbg !10055

if.then30:                                        ; preds = %sw.bb
  %22 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10056
  call void @atmel_enter_state(%struct.atmel_private* %22, i32 7) #10, !dbg !10058
  %23 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10059
  %station_is_associated = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %23, i32 0, i32 68, !dbg !10060
  store i32 0, i32* %station_is_associated, align 4, !dbg !10061
  %24 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10062
  %AuthenticationRequestRetryCnt31 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %24, i32 0, i32 62, !dbg !10063
  store i32 0, i32* %AuthenticationRequestRetryCnt31, align 8, !dbg !10064
  %25 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10065
  call void @restart_search(%struct.atmel_private* %25) #10, !dbg !10066
  br label %if.end42, !dbg !10067

if.else:                                          ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i32* %auth, metadata !10068, metadata !DIExpression()), !dbg !10070
  store i32 0, i32* %auth, align 4, !dbg !10070
  %26 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10071
  %AuthenticationRequestRetryCnt32 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %26, i32 0, i32 62, !dbg !10072
  %27 = load i32, i32* %AuthenticationRequestRetryCnt32, align 8, !dbg !10073
  %inc = add i32 %27, 1, !dbg !10073
  store i32 %inc, i32* %AuthenticationRequestRetryCnt32, align 8, !dbg !10073
  %28 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10074
  %CurrentAuthentTransactionSeqNum = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %28, i32 0, i32 60, !dbg !10075
  store i32 1, i32* %CurrentAuthentTransactionSeqNum, align 8, !dbg !10076
  %29 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10077
  %management_timer = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %29, i32 0, i32 6, !dbg !10078
  %30 = load volatile i64, i64* @jiffies, align 8, !dbg !10079
  %add = add i64 %30, 640, !dbg !10080
  %call33 = call i32 @mod_timer(%struct.timer_list* %management_timer, i64 %add) #10, !dbg !10081
  %31 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10082
  %wep_is_on = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %31, i32 0, i32 30, !dbg !10084
  %32 = load i8, i8* %wep_is_on, align 4, !dbg !10084
  %conv34 = zext i8 %32 to i32, !dbg !10082
  %tobool35 = icmp ne i32 %conv34, 0, !dbg !10082
  br i1 %tobool35, label %land.lhs.true36, label %if.end40, !dbg !10085

land.lhs.true36:                                  ; preds = %if.else
  %33 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10086
  %exclude_unencrypted = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %33, i32 0, i32 32, !dbg !10087
  %34 = load i8, i8* %exclude_unencrypted, align 2, !dbg !10087
  %conv37 = zext i8 %34 to i32, !dbg !10086
  %tobool38 = icmp ne i32 %conv37, 0, !dbg !10086
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !10088

if.then39:                                        ; preds = %land.lhs.true36
  store i32 1, i32* %auth, align 4, !dbg !10089
  br label %if.end40, !dbg !10090

if.end40:                                         ; preds = %if.then39, %land.lhs.true36, %if.else
  %35 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10091
  %36 = load i32, i32* %auth, align 4, !dbg !10092
  %conv41 = trunc i32 %36 to i16, !dbg !10092
  call void @send_authentication_request(%struct.atmel_private* %35, i16 zeroext %conv41, i8* null, i32 0) #10, !dbg !10093
  br label %if.end42

if.end42:                                         ; preds = %if.end40, %if.then30
  br label %sw.epilog, !dbg !10094

sw.bb43:                                          ; preds = %do.end27
  %37 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10095
  %AssociationRequestRetryCnt = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %37, i32 0, i32 63, !dbg !10097
  %38 = load i32, i32* %AssociationRequestRetryCnt, align 4, !dbg !10097
  %cmp44 = icmp eq i32 %38, 3, !dbg !10098
  br i1 %cmp44, label %if.then46, label %if.else49, !dbg !10099

if.then46:                                        ; preds = %sw.bb43
  %39 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10100
  call void @atmel_enter_state(%struct.atmel_private* %39, i32 7) #10, !dbg !10102
  %40 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10103
  %station_is_associated47 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %40, i32 0, i32 68, !dbg !10104
  store i32 0, i32* %station_is_associated47, align 4, !dbg !10105
  %41 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10106
  %AssociationRequestRetryCnt48 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %41, i32 0, i32 63, !dbg !10107
  store i32 0, i32* %AssociationRequestRetryCnt48, align 4, !dbg !10108
  %42 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10109
  call void @restart_search(%struct.atmel_private* %42) #10, !dbg !10110
  br label %if.end55, !dbg !10111

if.else49:                                        ; preds = %sw.bb43
  %43 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10112
  %AssociationRequestRetryCnt50 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %43, i32 0, i32 63, !dbg !10114
  %44 = load i32, i32* %AssociationRequestRetryCnt50, align 4, !dbg !10115
  %inc51 = add i32 %44, 1, !dbg !10115
  store i32 %inc51, i32* %AssociationRequestRetryCnt50, align 4, !dbg !10115
  %45 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10116
  %management_timer52 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %45, i32 0, i32 6, !dbg !10117
  %46 = load volatile i64, i64* @jiffies, align 8, !dbg !10118
  %add53 = add i64 %46, 640, !dbg !10119
  %call54 = call i32 @mod_timer(%struct.timer_list* %management_timer52, i64 %add53) #10, !dbg !10120
  %47 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10121
  call void @send_association_request(%struct.atmel_private* %47, i32 0) #10, !dbg !10122
  br label %if.end55

if.end55:                                         ; preds = %if.else49, %if.then46
  br label %sw.epilog, !dbg !10123

sw.bb56:                                          ; preds = %do.end27
  %48 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10124
  %ReAssociationRequestRetryCnt = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %48, i32 0, i32 64, !dbg !10126
  %49 = load i32, i32* %ReAssociationRequestRetryCnt, align 8, !dbg !10126
  %cmp57 = icmp eq i32 %49, 3, !dbg !10127
  br i1 %cmp57, label %if.then59, label %if.else62, !dbg !10128

if.then59:                                        ; preds = %sw.bb56
  %50 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10129
  call void @atmel_enter_state(%struct.atmel_private* %50, i32 7) #10, !dbg !10131
  %51 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10132
  %station_is_associated60 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %51, i32 0, i32 68, !dbg !10133
  store i32 0, i32* %station_is_associated60, align 4, !dbg !10134
  %52 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10135
  %ReAssociationRequestRetryCnt61 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %52, i32 0, i32 64, !dbg !10136
  store i32 0, i32* %ReAssociationRequestRetryCnt61, align 8, !dbg !10137
  %53 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10138
  call void @restart_search(%struct.atmel_private* %53) #10, !dbg !10139
  br label %if.end68, !dbg !10140

if.else62:                                        ; preds = %sw.bb56
  %54 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10141
  %ReAssociationRequestRetryCnt63 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %54, i32 0, i32 64, !dbg !10143
  %55 = load i32, i32* %ReAssociationRequestRetryCnt63, align 8, !dbg !10144
  %inc64 = add i32 %55, 1, !dbg !10144
  store i32 %inc64, i32* %ReAssociationRequestRetryCnt63, align 8, !dbg !10144
  %56 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10145
  %management_timer65 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %56, i32 0, i32 6, !dbg !10146
  %57 = load volatile i64, i64* @jiffies, align 8, !dbg !10147
  %add66 = add i64 %57, 640, !dbg !10148
  %call67 = call i32 @mod_timer(%struct.timer_list* %management_timer65, i64 %add66) #10, !dbg !10149
  %58 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10150
  call void @send_association_request(%struct.atmel_private* %58, i32 1) #10, !dbg !10151
  br label %if.end68

if.end68:                                         ; preds = %if.else62, %if.then59
  br label %sw.epilog, !dbg !10152

sw.default:                                       ; preds = %do.end27
  br label %sw.epilog, !dbg !10153

sw.epilog:                                        ; preds = %sw.default, %if.end68, %if.end55, %if.end42
  %59 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10154
  %irqlock69 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %59, i32 0, i32 10, !dbg !10155
  %60 = load i64, i64* %flags, align 8, !dbg !10156
  store %struct.spinlock* %irqlock69, %struct.spinlock** %lock.addr.i70, align 8
  store i64 %60, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1904, metadata !10157, metadata !DIExpression()) #8, !dbg !10160
  call void @llvm.dbg.declare(metadata !1904, metadata !10161, metadata !DIExpression()) #8, !dbg !10160
  store i32 1, i32* %tmp.i, align 4, !dbg !10160
  %61 = load i32, i32* %tmp.i, align 4, !dbg !10160
  call void @llvm.dbg.declare(metadata !1904, metadata !10162, metadata !DIExpression()) #8, !dbg !10167
  call void @llvm.dbg.declare(metadata !1904, metadata !10168, metadata !DIExpression()) #8, !dbg !10167
  store i32 1, i32* %tmp8.i, align 4, !dbg !10167
  %62 = load i32, i32* %tmp8.i, align 4, !dbg !10167
  %63 = load i64, i64* %flags.addr.i, align 8, !dbg !10169
  call void @arch_local_irq_restore(i64 %63) #12, !dbg !10169
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10170, !srcloc !10172
  %64 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i70, align 8, !dbg !10173
  %65 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %64, i32 0, i32 0, !dbg !10173
  %rlock.i71 = bitcast %union.anon.46* %65 to %struct.raw_spinlock*, !dbg !10173
  br label %return, !dbg !10175

return:                                           ; preds = %sw.epilog, %if.then
  ret void, !dbg !10175
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #0 !dbg !10176 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10181, metadata !DIExpression()), !dbg !10182
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !10183, metadata !DIExpression()), !dbg !10184
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !10185, metadata !DIExpression()), !dbg !10186
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10187, metadata !DIExpression()), !dbg !10188
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !10189, metadata !DIExpression()), !dbg !10190
  %0 = load i32, i32* %irq.addr, align 4, !dbg !10191
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !10192
  %2 = load i64, i64* %flags.addr, align 8, !dbg !10193
  %3 = load i8*, i8** %name.addr, align 8, !dbg !10194
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !10195
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #10, !dbg !10196
  ret i32 %call, !dbg !10197
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @service_interrupt(i32 %irq, i8* %dev_id) #0 !dbg !8834 {
entry:
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %dev = alloca %struct.net_device*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %isr = alloca i8, align 1
  %i = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10198, metadata !DIExpression()), !dbg !10199
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !10200, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !10202, metadata !DIExpression()), !dbg !10203
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !10204
  %1 = bitcast i8* %0 to %struct.net_device*, !dbg !10205
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !10203
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !10206, metadata !DIExpression()), !dbg !10207
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10208
  %call = call i8* @netdev_priv(%struct.net_device* %2) #10, !dbg !10209
  %3 = bitcast i8* %call to %struct.atmel_private*, !dbg !10209
  store %struct.atmel_private* %3, %struct.atmel_private** %priv, align 8, !dbg !10207
  call void @llvm.dbg.declare(metadata i8* %isr, metadata !10210, metadata !DIExpression()), !dbg !10211
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10212, metadata !DIExpression()), !dbg !10213
  store i32 -1, i32* %i, align 4, !dbg !10213
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10214
  %card = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 0, !dbg !10216
  %5 = load i8*, i8** %card, align 8, !dbg !10216
  %tobool = icmp ne i8* %5, null, !dbg !10214
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10217

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10218
  %present_callback = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 1, !dbg !10219
  %7 = load i32 (i8*)*, i32 (i8*)** %present_callback, align 8, !dbg !10219
  %tobool1 = icmp ne i32 (i8*)* %7, null, !dbg !10218
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !10220

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10221
  %present_callback3 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %8, i32 0, i32 1, !dbg !10222
  %9 = load i32 (i8*)*, i32 (i8*)** %present_callback3, align 8, !dbg !10222
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10223
  %card4 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 0, !dbg !10224
  %11 = load i8*, i8** %card4, align 8, !dbg !10224
  %call5 = call i32 %9(i8* %11) #10, !dbg !10225
  %tobool6 = icmp ne i32 %call5, 0, !dbg !10225
  br i1 %tobool6, label %if.end, label %if.then, !dbg !10226

if.then:                                          ; preds = %land.lhs.true2
  store i32 1, i32* %retval, align 4, !dbg !10227
  br label %return, !dbg !10227

if.end:                                           ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %12 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10228
  %station_state = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %12, i32 0, i32 42, !dbg !10230
  %13 = load i32, i32* %station_state, align 4, !dbg !10230
  %cmp = icmp eq i32 %13, 6, !dbg !10231
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !10232

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10233
  br label %return, !dbg !10233

if.end8:                                          ; preds = %if.end
  %14 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10234
  call void @atmel_clear_gcr(%struct.net_device* %14, i16 zeroext 2) #10, !dbg !10235
  br label %while.body, !dbg !10236

while.body:                                       ; preds = %if.end8, %sw.epilog
  %15 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10237
  %call9 = call i32 @atmel_lock_mac(%struct.atmel_private* %15) #10, !dbg !10240
  %tobool10 = icmp ne i32 %call9, 0, !dbg !10240
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !10241

if.then11:                                        ; preds = %while.body
  %16 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10242
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %16, i32 0, i32 0, !dbg !10244
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !10242
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.19, i64 0, i64 0), i8* %arraydecay) #11, !dbg !10245
  store i32 1, i32* %retval, align 4, !dbg !10246
  br label %return, !dbg !10246

if.end13:                                         ; preds = %while.body
  %17 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10247
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10248
  %call14 = call zeroext i16 @atmel_hi(%struct.atmel_private* %18, i16 zeroext 0) #10, !dbg !10249
  %call15 = call zeroext i8 @atmel_rmem8(%struct.atmel_private* %17, i16 zeroext %call14) #10, !dbg !10250
  store i8 %call15, i8* %isr, align 1, !dbg !10251
  %19 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10252
  %20 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10253
  %call16 = call zeroext i16 @atmel_hi(%struct.atmel_private* %20, i16 zeroext 3) #10, !dbg !10254
  call void @atmel_wmem8(%struct.atmel_private* %19, i16 zeroext %call16, i16 zeroext 0) #10, !dbg !10255
  %21 = load i8, i8* %isr, align 1, !dbg !10256
  %tobool17 = icmp ne i8 %21, 0, !dbg !10256
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !10258

if.then18:                                        ; preds = %if.end13
  %22 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10259
  call void @atmel_set_gcr(%struct.net_device* %22, i16 zeroext 2) #10, !dbg !10261
  %23 = load i32, i32* %i, align 4, !dbg !10262
  %cmp19 = icmp eq i32 %23, -1, !dbg !10263
  %24 = zext i1 %cmp19 to i64, !dbg !10262
  %cond = select i1 %cmp19, i32 0, i32 1, !dbg !10262
  store i32 %cond, i32* %retval, align 4, !dbg !10264
  br label %return, !dbg !10264

if.end20:                                         ; preds = %if.end13
  %25 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10265
  call void @atmel_set_gcr(%struct.net_device* %25, i16 zeroext 8) #10, !dbg !10266
  store i32 0, i32* %i, align 4, !dbg !10267
  br label %for.cond, !dbg !10269

for.cond:                                         ; preds = %for.inc, %if.end20
  %26 = load i32, i32* %i, align 4, !dbg !10270
  %conv = sext i32 %26 to i64, !dbg !10270
  %cmp21 = icmp ult i64 %conv, 8, !dbg !10272
  br i1 %cmp21, label %for.body, label %for.end, !dbg !10273

for.body:                                         ; preds = %for.cond
  %27 = load i8, i8* %isr, align 1, !dbg !10274
  %conv23 = zext i8 %27 to i32, !dbg !10274
  %28 = load i32, i32* %i, align 4, !dbg !10276
  %idxprom = sext i32 %28 to i64, !dbg !10277
  %arrayidx = getelementptr [8 x i8], [8 x i8]* @service_interrupt.irq_order, i64 0, i64 %idxprom, !dbg !10277
  %29 = load i8, i8* %arrayidx, align 1, !dbg !10277
  %conv24 = zext i8 %29 to i32, !dbg !10277
  %and = and i32 %conv23, %conv24, !dbg !10278
  %tobool25 = icmp ne i32 %and, 0, !dbg !10278
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !10279

if.then26:                                        ; preds = %for.body
  br label %for.end, !dbg !10280

if.end27:                                         ; preds = %for.body
  br label %for.inc, !dbg !10281

for.inc:                                          ; preds = %if.end27
  %30 = load i32, i32* %i, align 4, !dbg !10282
  %inc = add i32 %30, 1, !dbg !10282
  store i32 %inc, i32* %i, align 4, !dbg !10282
  br label %for.cond, !dbg !10283, !llvm.loop !10284

for.end:                                          ; preds = %if.then26, %for.cond
  %31 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10286
  %call28 = call i32 @atmel_lock_mac(%struct.atmel_private* %31) #10, !dbg !10288
  %tobool29 = icmp ne i32 %call28, 0, !dbg !10288
  br i1 %tobool29, label %if.end34, label %if.then30, !dbg !10289

if.then30:                                        ; preds = %for.end
  %32 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10290
  %name31 = getelementptr inbounds %struct.net_device, %struct.net_device* %32, i32 0, i32 0, !dbg !10292
  %arraydecay32 = getelementptr inbounds [16 x i8], [16 x i8]* %name31, i64 0, i64 0, !dbg !10290
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.19, i64 0, i64 0), i8* %arraydecay32) #11, !dbg !10293
  store i32 1, i32* %retval, align 4, !dbg !10294
  br label %return, !dbg !10294

if.end34:                                         ; preds = %for.end
  %33 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10295
  %34 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10296
  %call35 = call zeroext i16 @atmel_hi(%struct.atmel_private* %34, i16 zeroext 0) #10, !dbg !10297
  %call36 = call zeroext i8 @atmel_rmem8(%struct.atmel_private* %33, i16 zeroext %call35) #10, !dbg !10298
  store i8 %call36, i8* %isr, align 1, !dbg !10299
  %35 = load i32, i32* %i, align 4, !dbg !10300
  %idxprom37 = sext i32 %35 to i64, !dbg !10301
  %arrayidx38 = getelementptr [8 x i8], [8 x i8]* @service_interrupt.irq_order, i64 0, i64 %idxprom37, !dbg !10301
  %36 = load i8, i8* %arrayidx38, align 1, !dbg !10301
  %conv39 = zext i8 %36 to i32, !dbg !10301
  %37 = load i8, i8* %isr, align 1, !dbg !10302
  %conv40 = zext i8 %37 to i32, !dbg !10302
  %xor = xor i32 %conv40, %conv39, !dbg !10302
  %conv41 = trunc i32 %xor to i8, !dbg !10302
  store i8 %conv41, i8* %isr, align 1, !dbg !10302
  %38 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10303
  %39 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10304
  %call42 = call zeroext i16 @atmel_hi(%struct.atmel_private* %39, i16 zeroext 0) #10, !dbg !10305
  %40 = load i8, i8* %isr, align 1, !dbg !10306
  %conv43 = zext i8 %40 to i16, !dbg !10306
  call void @atmel_wmem8(%struct.atmel_private* %38, i16 zeroext %call42, i16 zeroext %conv43) #10, !dbg !10307
  %41 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10308
  %42 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10309
  %call44 = call zeroext i16 @atmel_hi(%struct.atmel_private* %42, i16 zeroext 3) #10, !dbg !10310
  call void @atmel_wmem8(%struct.atmel_private* %41, i16 zeroext %call44, i16 zeroext 0) #10, !dbg !10311
  %43 = load i32, i32* %i, align 4, !dbg !10312
  %idxprom45 = sext i32 %43 to i64, !dbg !10313
  %arrayidx46 = getelementptr [8 x i8], [8 x i8]* @service_interrupt.irq_order, i64 0, i64 %idxprom45, !dbg !10313
  %44 = load i8, i8* %arrayidx46, align 1, !dbg !10313
  %conv47 = zext i8 %44 to i32, !dbg !10313
  switch i32 %conv47, label %sw.epilog [
    i32 32, label %sw.bb
    i32 4, label %sw.bb56
    i32 2, label %sw.bb58
    i32 1, label %sw.bb59
    i32 8, label %sw.bb60
    i32 16, label %sw.bb64
    i32 64, label %sw.bb65
    i32 128, label %sw.bb70
  ], !dbg !10314

sw.bb:                                            ; preds = %if.end34
  %45 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10315
  %operating_mode = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %45, i32 0, i32 43, !dbg !10318
  %46 = load i32, i32* %operating_mode, align 8, !dbg !10318
  %cmp48 = icmp eq i32 %46, 2, !dbg !10319
  br i1 %cmp48, label %land.lhs.true50, label %if.end55, !dbg !10320

land.lhs.true50:                                  ; preds = %sw.bb
  %47 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10321
  %station_state51 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %47, i32 0, i32 42, !dbg !10322
  %48 = load i32, i32* %station_state51, align 4, !dbg !10322
  %cmp52 = icmp eq i32 %48, 4, !dbg !10323
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !10324

if.then54:                                        ; preds = %land.lhs.true50
  %49 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10325
  %station_is_associated = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %49, i32 0, i32 68, !dbg !10327
  store i32 0, i32* %station_is_associated, align 4, !dbg !10328
  %50 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10329
  call void @atmel_scan(%struct.atmel_private* %50, i32 1) #10, !dbg !10330
  br label %if.end55, !dbg !10331

if.end55:                                         ; preds = %if.then54, %land.lhs.true50, %sw.bb
  br label %sw.epilog, !dbg !10332

sw.bb56:                                          ; preds = %if.end34
  %51 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10333
  %wstats = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %51, i32 0, i32 9, !dbg !10334
  %discard = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats, i32 0, i32 2, !dbg !10335
  %misc = getelementptr inbounds %struct.iw_discarded, %struct.iw_discarded* %discard, i32 0, i32 4, !dbg !10336
  %52 = load i32, i32* %misc, align 8, !dbg !10337
  %inc57 = add i32 %52, 1, !dbg !10337
  store i32 %inc57, i32* %misc, align 8, !dbg !10337
  br label %sw.bb58, !dbg !10333

sw.bb58:                                          ; preds = %if.end34, %sw.bb56
  %53 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10338
  call void @rx_done_irq(%struct.atmel_private* %53) #10, !dbg !10339
  br label %sw.epilog, !dbg !10340

sw.bb59:                                          ; preds = %if.end34
  %54 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10341
  call void @tx_done_irq(%struct.atmel_private* %54) #10, !dbg !10342
  br label %sw.epilog, !dbg !10343

sw.bb60:                                          ; preds = %if.end34
  %55 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10344
  %name61 = getelementptr inbounds %struct.net_device, %struct.net_device* %55, i32 0, i32 0, !dbg !10345
  %arraydecay62 = getelementptr inbounds [16 x i8], [16 x i8]* %name61, i64 0, i64 0, !dbg !10344
  %call63 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.20, i64 0, i64 0), i8* %arraydecay62) #11, !dbg !10346
  %56 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10347
  call void @atmel_enter_state(%struct.atmel_private* %56, i32 7) #10, !dbg !10348
  br label %sw.epilog, !dbg !10349

sw.bb64:                                          ; preds = %if.end34
  %57 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10350
  call void @atmel_command_irq(%struct.atmel_private* %57) #10, !dbg !10351
  br label %sw.epilog, !dbg !10352

sw.bb65:                                          ; preds = %if.end34
  %58 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10353
  %59 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10354
  %CurrentBSSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %59, i32 0, i32 76, !dbg !10355
  %arraydecay66 = getelementptr inbounds [6 x i8], [6 x i8]* %CurrentBSSID, i64 0, i64 0, !dbg !10354
  call void @atmel_get_mib(%struct.atmel_private* %58, i8 zeroext 5, i8 zeroext 14, i8* %arraydecay66, i32 6) #10, !dbg !10356
  %60 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10357
  %use_wpa = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %60, i32 0, i32 38, !dbg !10359
  %61 = load i32, i32* %use_wpa, align 4, !dbg !10359
  %tobool67 = icmp ne i32 %61, 0, !dbg !10357
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !10360

if.then68:                                        ; preds = %sw.bb65
  %62 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10361
  call void @build_wpa_mib(%struct.atmel_private* %62) #10, !dbg !10362
  br label %if.end69, !dbg !10362

if.end69:                                         ; preds = %if.then68, %sw.bb65
  br label %sw.epilog, !dbg !10363

sw.bb70:                                          ; preds = %if.end34
  %63 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10364
  %name71 = getelementptr inbounds %struct.net_device, %struct.net_device* %63, i32 0, i32 0, !dbg !10365
  %arraydecay72 = getelementptr inbounds [16 x i8], [16 x i8]* %name71, i64 0, i64 0, !dbg !10364
  %call73 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21, i64 0, i64 0), i8* %arraydecay72) #11, !dbg !10366
  br label %sw.epilog, !dbg !10367

sw.epilog:                                        ; preds = %if.end34, %sw.bb70, %if.end69, %sw.bb64, %sw.bb60, %sw.bb59, %sw.bb58, %if.end55
  br label %while.body, !dbg !10236, !llvm.loop !10368

return:                                           ; preds = %if.then30, %if.then18, %if.then11, %if.then7, %if.then
  %64 = load i32, i32* %retval, align 4, !dbg !10370
  ret i32 %64, !dbg !10370
}

; Function Attrs: noredzone
declare dso_local %struct.resource* @__request_region(%struct.resource*, i64, i64, i8*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @register_netdev(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @probe_atmel_card(%struct.net_device* %dev) #0 !dbg !8864 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %rc = alloca i32, align 4
  %priv = alloca %struct.atmel_private*, align 8
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10371, metadata !DIExpression()), !dbg !10372
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !10373, metadata !DIExpression()), !dbg !10374
  store i32 0, i32* %rc, align 4, !dbg !10374
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !10375, metadata !DIExpression()), !dbg !10376
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10377
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !10378
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !10378
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !10376
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10379
  %bus_type = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 12, !dbg !10381
  %3 = load i32, i32* %bus_type, align 8, !dbg !10381
  %cmp = icmp eq i32 %3, 0, !dbg !10382
  br i1 %cmp, label %if.then, label %if.end, !dbg !10383

if.then:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10384
  call void @atmel_write16(%struct.net_device* %4, i16 zeroext 0, i16 zeroext 96) #10, !dbg !10385
  br label %if.end, !dbg !10385

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10386
  call void @atmel_write16(%struct.net_device* %5, i16 zeroext 0, i16 zeroext 64) #10, !dbg !10387
  call void @msleep(i32 500) #10, !dbg !10388
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10389
  %call1 = call zeroext i16 @atmel_read16(%struct.net_device* %6, i16 zeroext 20) #10, !dbg !10391
  %conv = zext i16 %call1 to i32, !dbg !10391
  %cmp2 = icmp eq i32 %conv, 0, !dbg !10392
  br i1 %cmp2, label %if.then4, label %if.else22, !dbg !10393

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10394, metadata !DIExpression()), !dbg !10396
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10397
  %card_type = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %7, i32 0, i32 13, !dbg !10398
  store i32 2, i32* %card_type, align 4, !dbg !10399
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10400
  call void @atmel_write16(%struct.net_device* %8, i16 zeroext 2, i16 zeroext 256) #10, !dbg !10401
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10402
  call void @atmel_copy_to_card(%struct.net_device* %9, i16 zeroext 0, i8* getelementptr inbounds ([660 x i8], [660 x i8]* @mac_reader, i64 0, i64 0), i16 zeroext 660) #10, !dbg !10403
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10404
  call void @atmel_set_gcr(%struct.net_device* %10, i16 zeroext 1024) #10, !dbg !10405
  %11 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10406
  %dev5 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %11, i32 0, i32 7, !dbg !10407
  %12 = load %struct.net_device*, %struct.net_device** %dev5, align 8, !dbg !10407
  call void @atmel_clear_gcr(%struct.net_device* %12, i16 zeroext 64) #10, !dbg !10408
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10409
  call void @atmel_write16(%struct.net_device* %13, i16 zeroext 2, i16 zeroext 512) #10, !dbg !10410
  store i32 500000, i32* %i, align 4, !dbg !10411
  br label %for.cond, !dbg !10413

for.cond:                                         ; preds = %for.inc, %if.then4
  %14 = load i32, i32* %i, align 4, !dbg !10414
  %tobool = icmp ne i32 %14, 0, !dbg !10416
  br i1 %tobool, label %for.body, label %for.end, !dbg !10416

for.body:                                         ; preds = %for.cond
  %15 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10417
  %call6 = call zeroext i16 @atmel_read16(%struct.net_device* %15, i16 zeroext 22) #10, !dbg !10419
  %conv7 = zext i16 %call6 to i32, !dbg !10419
  %and = and i32 %conv7, 16, !dbg !10420
  %tobool8 = icmp ne i32 %and, 0, !dbg !10420
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !10421

if.then9:                                         ; preds = %for.body
  br label %for.end, !dbg !10422

if.end10:                                         ; preds = %for.body
  br label %for.inc, !dbg !10423

for.inc:                                          ; preds = %if.end10
  %16 = load i32, i32* %i, align 4, !dbg !10424
  %dec = add i32 %16, -1, !dbg !10424
  store i32 %dec, i32* %i, align 4, !dbg !10424
  br label %for.cond, !dbg !10425, !llvm.loop !10426

for.end:                                          ; preds = %if.then9, %for.cond
  %17 = load i32, i32* %i, align 4, !dbg !10428
  %cmp11 = icmp eq i32 %17, 0, !dbg !10430
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !10431

if.then13:                                        ; preds = %for.end
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10432
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %18, i32 0, i32 0, !dbg !10434
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !10432
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.50, i64 0, i64 0), i8* %arraydecay) #11, !dbg !10435
  br label %if.end21, !dbg !10436

if.else:                                          ; preds = %for.end
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10437
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10439
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %20, i32 0, i32 74, !dbg !10440
  %21 = load i8*, i8** %dev_addr, align 8, !dbg !10440
  %22 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10441
  %call15 = call zeroext i16 @atmel_read16(%struct.net_device* %22, i16 zeroext 20) #10, !dbg !10442
  call void @atmel_copy_to_host(%struct.net_device* %19, i8* %21, i16 zeroext %call15, i16 zeroext 6) #10, !dbg !10443
  %23 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10444
  %bus_type16 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %23, i32 0, i32 12, !dbg !10446
  %24 = load i32, i32* %bus_type16, align 8, !dbg !10446
  %cmp17 = icmp eq i32 %24, 0, !dbg !10447
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !10448

if.then19:                                        ; preds = %if.else
  %25 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10449
  call void @atmel_write16(%struct.net_device* %25, i16 zeroext 0, i16 zeroext 96) #10, !dbg !10450
  br label %if.end20, !dbg !10450

if.end20:                                         ; preds = %if.then19, %if.else
  %26 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10451
  call void @atmel_write16(%struct.net_device* %26, i16 zeroext 0, i16 zeroext 64) #10, !dbg !10452
  store i32 1, i32* %rc, align 4, !dbg !10453
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then13
  br label %if.end44, !dbg !10454

if.else22:                                        ; preds = %if.end
  %27 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10455
  %call23 = call zeroext i16 @atmel_read16(%struct.net_device* %27, i16 zeroext 24) #10, !dbg !10457
  %conv24 = zext i16 %call23 to i32, !dbg !10457
  %cmp25 = icmp eq i32 %conv24, 0, !dbg !10458
  br i1 %cmp25, label %if.then27, label %if.else30, !dbg !10459

if.then27:                                        ; preds = %if.else22
  %28 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10460
  %card_type28 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %28, i32 0, i32 13, !dbg !10462
  store i32 0, i32* %card_type28, align 4, !dbg !10463
  %29 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10464
  call void @atmel_write16(%struct.net_device* %29, i16 zeroext 2, i16 zeroext 1) #10, !dbg !10465
  %30 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10466
  %31 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10467
  %dev_addr29 = getelementptr inbounds %struct.net_device, %struct.net_device* %31, i32 0, i32 74, !dbg !10468
  %32 = load i8*, i8** %dev_addr29, align 8, !dbg !10468
  call void @atmel_copy_to_host(%struct.net_device* %30, i8* %32, i16 zeroext -16384, i16 zeroext 6) #10, !dbg !10469
  %33 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10470
  call void @atmel_write16(%struct.net_device* %33, i16 zeroext 2, i16 zeroext 512) #10, !dbg !10471
  store i32 1, i32* %rc, align 4, !dbg !10472
  br label %if.end43, !dbg !10473

if.else30:                                        ; preds = %if.else22
  %34 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10474
  %card_type31 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %34, i32 0, i32 13, !dbg !10476
  store i32 1, i32* %card_type31, align 4, !dbg !10477
  %35 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10478
  %call32 = call i32 @atmel_wakeup_firmware(%struct.atmel_private* %35) #10, !dbg !10480
  %cmp33 = icmp eq i32 %call32, 0, !dbg !10481
  br i1 %cmp33, label %if.then35, label %if.end42, !dbg !10482

if.then35:                                        ; preds = %if.else30
  %36 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10483
  %37 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10485
  %dev_addr36 = getelementptr inbounds %struct.net_device, %struct.net_device* %37, i32 0, i32 74, !dbg !10486
  %38 = load i8*, i8** %dev_addr36, align 8, !dbg !10486
  call void @atmel_get_mib(%struct.atmel_private* %36, i8 zeroext 2, i8 zeroext 0, i8* %38, i32 6) #10, !dbg !10487
  %39 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10488
  %bus_type37 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %39, i32 0, i32 12, !dbg !10490
  %40 = load i32, i32* %bus_type37, align 8, !dbg !10490
  %cmp38 = icmp eq i32 %40, 0, !dbg !10491
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !10492

if.then40:                                        ; preds = %if.then35
  %41 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10493
  call void @atmel_write16(%struct.net_device* %41, i16 zeroext 0, i16 zeroext 96) #10, !dbg !10494
  br label %if.end41, !dbg !10494

if.end41:                                         ; preds = %if.then40, %if.then35
  %42 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10495
  call void @atmel_write16(%struct.net_device* %42, i16 zeroext 0, i16 zeroext 64) #10, !dbg !10496
  store i32 1, i32* %rc, align 4, !dbg !10497
  br label %if.end42, !dbg !10498

if.end42:                                         ; preds = %if.end41, %if.else30
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then27
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end21
  %43 = load i32, i32* %rc, align 4, !dbg !10499
  %tobool45 = icmp ne i32 %43, 0, !dbg !10499
  br i1 %tobool45, label %if.then46, label %if.end57, !dbg !10501

if.then46:                                        ; preds = %if.end44
  %44 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10502
  %dev_addr47 = getelementptr inbounds %struct.net_device, %struct.net_device* %44, i32 0, i32 74, !dbg !10505
  %45 = load i8*, i8** %dev_addr47, align 8, !dbg !10505
  %arrayidx = getelementptr i8, i8* %45, i64 0, !dbg !10502
  %46 = load i8, i8* %arrayidx, align 1, !dbg !10502
  %conv48 = zext i8 %46 to i32, !dbg !10502
  %cmp49 = icmp eq i32 %conv48, 255, !dbg !10506
  br i1 %cmp49, label %if.then51, label %if.end56, !dbg !10507

if.then51:                                        ; preds = %if.then46
  %47 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10508
  %name52 = getelementptr inbounds %struct.net_device, %struct.net_device* %47, i32 0, i32 0, !dbg !10510
  %arraydecay53 = getelementptr inbounds [16 x i8], [16 x i8]* %name52, i64 0, i64 0, !dbg !10508
  %call54 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.51, i64 0, i64 0), i8* %arraydecay53) #11, !dbg !10511
  %48 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10512
  %dev_addr55 = getelementptr inbounds %struct.net_device, %struct.net_device* %48, i32 0, i32 74, !dbg !10513
  %49 = load i8*, i8** %dev_addr55, align 8, !dbg !10513
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @probe_atmel_card.default_mac, i64 0, i64 0), i64 6, i1 false), !dbg !10514
  br label %if.end56, !dbg !10515

if.end56:                                         ; preds = %if.then51, %if.then46
  br label %if.end57, !dbg !10516

if.end57:                                         ; preds = %if.end56, %if.end44
  %50 = load i32, i32* %rc, align 4, !dbg !10517
  ret i32 %50, !dbg !10518
}

; Function Attrs: noredzone
declare dso_local void @unregister_netdev(%struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local void @netif_carrier_off(%struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local %struct.proc_dir_entry* @proc_create_single_data(i8*, i16 zeroext, %struct.proc_dir_entry*, i32 (%struct.seq_file*, i8*)*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_proc_show(%struct.seq_file* %m, i8* %v) #0 !dbg !10519 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %i = alloca i32, align 4
  %s = alloca i8*, align 8
  %r = alloca i8*, align 8
  %c = alloca i8*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !10520, metadata !DIExpression()), !dbg !10521
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !10522, metadata !DIExpression()), !dbg !10523
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !10524, metadata !DIExpression()), !dbg !10525
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !10526
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %0, i32 0, i32 11, !dbg !10527
  %1 = load i8*, i8** %private, align 8, !dbg !10527
  %2 = bitcast i8* %1 to %struct.atmel_private*, !dbg !10526
  store %struct.atmel_private* %2, %struct.atmel_private** %priv, align 8, !dbg !10525
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10528, metadata !DIExpression()), !dbg !10529
  call void @llvm.dbg.declare(metadata i8** %s, metadata !10530, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.declare(metadata i8** %r, metadata !10532, metadata !DIExpression()), !dbg !10533
  call void @llvm.dbg.declare(metadata i8** %c, metadata !10534, metadata !DIExpression()), !dbg !10535
  %3 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !10536
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0), i32 0, i32 98) #10, !dbg !10537
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10538
  %station_state = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 42, !dbg !10540
  %5 = load i32, i32* %station_state, align 4, !dbg !10540
  %cmp = icmp ne i32 %5, 6, !dbg !10541
  br i1 %cmp, label %if.then, label %if.end29, !dbg !10542

if.then:                                          ; preds = %entry
  %6 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !10543
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10545
  %host_info = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %7, i32 0, i32 41, !dbg !10546
  %major_version = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info, i32 0, i32 14, !dbg !10547
  %8 = load i16, i16* %major_version, align 2, !dbg !10547
  %conv = zext i16 %8 to i32, !dbg !10545
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10548
  %host_info1 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %9, i32 0, i32 41, !dbg !10549
  %minor_version = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info1, i32 0, i32 15, !dbg !10550
  %10 = load i16, i16* %minor_version, align 2, !dbg !10550
  %conv2 = zext i16 %10 to i32, !dbg !10548
  %11 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10551
  %host_info3 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %11, i32 0, i32 41, !dbg !10552
  %build_version = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info3, i32 0, i32 12, !dbg !10553
  %12 = load i16, i16* %build_version, align 2, !dbg !10553
  %conv4 = zext i16 %12 to i32, !dbg !10551
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %6, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.24, i64 0, i64 0), i32 %conv, i32 %conv2, i32 %conv4) #10, !dbg !10554
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10555
  %card_type = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %13, i32 0, i32 13, !dbg !10557
  %14 = load i32, i32* %card_type, align 4, !dbg !10557
  %cmp5 = icmp ne i32 %14, 2, !dbg !10558
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !10559

if.then7:                                         ; preds = %if.then
  %15 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !10560
  call void @seq_puts(%struct.seq_file* %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0)) #10, !dbg !10561
  br label %if.end12, !dbg !10561

if.else:                                          ; preds = %if.then
  %16 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10562
  %firmware = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %16, i32 0, i32 4, !dbg !10564
  %17 = load i8*, i8** %firmware, align 8, !dbg !10564
  %tobool = icmp ne i8* %17, null, !dbg !10562
  br i1 %tobool, label %if.then8, label %if.else9, !dbg !10565

if.then8:                                         ; preds = %if.else
  %18 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !10566
  %19 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10567
  %firmware_id = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %19, i32 0, i32 2, !dbg !10568
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %firmware_id, i64 0, i64 0, !dbg !10567
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26, i64 0, i64 0), i8* %arraydecay) #10, !dbg !10569
  br label %if.end, !dbg !10569

if.else9:                                         ; preds = %if.else
  %20 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !10570
  %21 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10571
  %firmware_id10 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %21, i32 0, i32 2, !dbg !10572
  %arraydecay11 = getelementptr inbounds [32 x i8], [32 x i8]* %firmware_id10, i64 0, i64 0, !dbg !10571
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %20, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i64 0, i64 0), i8* %arraydecay11) #10, !dbg !10573
  br label %if.end

if.end:                                           ; preds = %if.else9, %if.then8
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then7
  %22 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10574
  %card_type13 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %22, i32 0, i32 13, !dbg !10575
  %23 = load i32, i32* %card_type13, align 4, !dbg !10575
  switch i32 %23, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb14
    i32 2, label %sw.bb15
  ], !dbg !10576

sw.bb:                                            ; preds = %if.end12
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0), i8** %c, align 8, !dbg !10577
  br label %sw.epilog, !dbg !10579

sw.bb14:                                          ; preds = %if.end12
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i8** %c, align 8, !dbg !10580
  br label %sw.epilog, !dbg !10581

sw.bb15:                                          ; preds = %if.end12
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), i8** %c, align 8, !dbg !10582
  br label %sw.epilog, !dbg !10583

sw.default:                                       ; preds = %if.end12
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0), i8** %c, align 8, !dbg !10584
  br label %sw.epilog, !dbg !10585

sw.epilog:                                        ; preds = %sw.default, %sw.bb15, %sw.bb14, %sw.bb
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0), i8** %r, align 8, !dbg !10586
  store i32 0, i32* %i, align 4, !dbg !10587
  br label %for.cond, !dbg !10589

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %24 = load i32, i32* %i, align 4, !dbg !10590
  %conv16 = sext i32 %24 to i64, !dbg !10590
  %cmp17 = icmp ult i64 %conv16, 8, !dbg !10592
  br i1 %cmp17, label %for.body, label %for.end, !dbg !10593

for.body:                                         ; preds = %for.cond
  %25 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10594
  %reg_domain = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %25, i32 0, i32 48, !dbg !10596
  %26 = load i32, i32* %reg_domain, align 8, !dbg !10596
  %27 = load i32, i32* %i, align 4, !dbg !10597
  %idxprom = sext i32 %27 to i64, !dbg !10598
  %arrayidx = getelementptr [8 x %struct.anon.136], [8 x %struct.anon.136]* @channel_table, i64 0, i64 %idxprom, !dbg !10598
  %reg_domain19 = getelementptr inbounds %struct.anon.136, %struct.anon.136* %arrayidx, i32 0, i32 0, !dbg !10599
  %28 = load i32, i32* %reg_domain19, align 8, !dbg !10599
  %cmp20 = icmp eq i32 %26, %28, !dbg !10600
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !10601

if.then22:                                        ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !10602
  %idxprom23 = sext i32 %29 to i64, !dbg !10603
  %arrayidx24 = getelementptr [8 x %struct.anon.136], [8 x %struct.anon.136]* @channel_table, i64 0, i64 %idxprom23, !dbg !10603
  %name = getelementptr inbounds %struct.anon.136, %struct.anon.136* %arrayidx24, i32 0, i32 3, !dbg !10604
  %30 = load i8*, i8** %name, align 8, !dbg !10604
  store i8* %30, i8** %r, align 8, !dbg !10605
  br label %if.end25, !dbg !10606

if.end25:                                         ; preds = %if.then22, %for.body
  br label %for.inc, !dbg !10599

for.inc:                                          ; preds = %if.end25
  %31 = load i32, i32* %i, align 4, !dbg !10607
  %inc = add i32 %31, 1, !dbg !10607
  store i32 %inc, i32* %i, align 4, !dbg !10607
  br label %for.cond, !dbg !10608, !llvm.loop !10609

for.end:                                          ; preds = %for.cond
  %32 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !10611
  %33 = load i8*, i8** %c, align 8, !dbg !10612
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %32, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32, i64 0, i64 0), i8* %33) #10, !dbg !10613
  %34 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !10614
  %35 = load i8*, i8** %r, align 8, !dbg !10615
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %34, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0), i8* %35) #10, !dbg !10616
  %36 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !10617
  %37 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10618
  %do_rx_crc = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %37, i32 0, i32 14, !dbg !10619
  %38 = load i32, i32* %do_rx_crc, align 8, !dbg !10619
  %tobool26 = icmp ne i32 %38, 0, !dbg !10618
  %39 = zext i1 %tobool26 to i64, !dbg !10618
  %cond = select i1 %tobool26, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0), !dbg !10618
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %36, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0), i8* %cond) #10, !dbg !10620
  %40 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !10621
  %41 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10622
  %use_wpa = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %41, i32 0, i32 38, !dbg !10623
  %42 = load i32, i32* %use_wpa, align 4, !dbg !10623
  %tobool27 = icmp ne i32 %42, 0, !dbg !10622
  %43 = zext i1 %tobool27 to i64, !dbg !10622
  %cond28 = select i1 %tobool27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0), !dbg !10622
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %40, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.37, i64 0, i64 0), i8* %cond28) #10, !dbg !10624
  br label %if.end29, !dbg !10625

if.end29:                                         ; preds = %for.end, %entry
  %44 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10626
  %station_state30 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %44, i32 0, i32 42, !dbg !10627
  %45 = load i32, i32* %station_state30, align 4, !dbg !10627
  switch i32 %45, label %sw.default39 [
    i32 0, label %sw.bb31
    i32 1, label %sw.bb32
    i32 2, label %sw.bb33
    i32 3, label %sw.bb34
    i32 4, label %sw.bb35
    i32 5, label %sw.bb36
    i32 7, label %sw.bb37
    i32 6, label %sw.bb38
  ], !dbg !10628

sw.bb31:                                          ; preds = %if.end29
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i64 0, i64 0), i8** %s, align 8, !dbg !10629
  br label %sw.epilog40, !dbg !10631

sw.bb32:                                          ; preds = %if.end29
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i64 0, i64 0), i8** %s, align 8, !dbg !10632
  br label %sw.epilog40, !dbg !10633

sw.bb33:                                          ; preds = %if.end29
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i64 0, i64 0), i8** %s, align 8, !dbg !10634
  br label %sw.epilog40, !dbg !10635

sw.bb34:                                          ; preds = %if.end29
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.43, i64 0, i64 0), i8** %s, align 8, !dbg !10636
  br label %sw.epilog40, !dbg !10637

sw.bb35:                                          ; preds = %if.end29
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), i8** %s, align 8, !dbg !10638
  br label %sw.epilog40, !dbg !10639

sw.bb36:                                          ; preds = %if.end29
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.45, i64 0, i64 0), i8** %s, align 8, !dbg !10640
  br label %sw.epilog40, !dbg !10641

sw.bb37:                                          ; preds = %if.end29
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.46, i64 0, i64 0), i8** %s, align 8, !dbg !10642
  br label %sw.epilog40, !dbg !10643

sw.bb38:                                          ; preds = %if.end29
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0), i8** %s, align 8, !dbg !10644
  br label %sw.epilog40, !dbg !10645

sw.default39:                                     ; preds = %if.end29
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0), i8** %s, align 8, !dbg !10646
  br label %sw.epilog40, !dbg !10647

sw.epilog40:                                      ; preds = %sw.default39, %sw.bb38, %sw.bb37, %sw.bb36, %sw.bb35, %sw.bb34, %sw.bb33, %sw.bb32, %sw.bb31
  %46 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !10648
  %47 = load i8*, i8** %s, align 8, !dbg !10649
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %46, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.48, i64 0, i64 0), i8* %47) #10, !dbg !10650
  ret i32 0, !dbg !10651
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @__release_region(%struct.resource*, i64, i64) #2

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @free_netdev(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @stop_atmel_card(%struct.net_device* %dev) #0 !dbg !10652 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10653, metadata !DIExpression()), !dbg !10654
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !10655, metadata !DIExpression()), !dbg !10656
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10657
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !10658
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !10658
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !10656
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10659
  %bus_type = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 12, !dbg !10661
  %3 = load i32, i32* %bus_type, align 8, !dbg !10661
  %cmp = icmp eq i32 %3, 0, !dbg !10662
  br i1 %cmp, label %if.then, label %if.end, !dbg !10663

if.then:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10664
  call void @atmel_write16(%struct.net_device* %4, i16 zeroext 0, i16 zeroext 96) #10, !dbg !10665
  br label %if.end, !dbg !10665

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10666
  call void @atmel_write16(%struct.net_device* %5, i16 zeroext 0, i16 zeroext 64) #10, !dbg !10667
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10668
  %management_timer = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 6, !dbg !10668
  %call1 = call i32 @del_timer(%struct.timer_list* %management_timer) #10, !dbg !10668
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10669
  call void @unregister_netdev(%struct.net_device* %7) #10, !dbg !10670
  call void @remove_proc_entry(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), %struct.proc_dir_entry* null) #10, !dbg !10671
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10672
  %irq = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 6, !dbg !10673
  %9 = load i32, i32* %irq, align 8, !dbg !10673
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10674
  %11 = bitcast %struct.net_device* %10 to i8*, !dbg !10674
  %call2 = call i8* @free_irq(i32 %9, i8* %11) #10, !dbg !10675
  %12 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10676
  %firmware = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %12, i32 0, i32 4, !dbg !10677
  %13 = load i8*, i8** %firmware, align 8, !dbg !10677
  call void @kfree(i8* %13) #10, !dbg !10678
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10679
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 5, !dbg !10679
  %15 = load i64, i64* %base_addr, align 8, !dbg !10679
  call void @__release_region(%struct.resource* @ioport_resource, i64 %15, i64 32) #10, !dbg !10679
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10680
  call void @free_netdev(%struct.net_device* %16) #10, !dbg !10681
  ret void, !dbg !10682
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_write16(%struct.net_device* %dev, i16 zeroext %offset, i16 zeroext %data) #0 !dbg !10683 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %offset.addr = alloca i16, align 2
  %data.addr = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10686, metadata !DIExpression()), !dbg !10687
  store i16 %offset, i16* %offset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %offset.addr, metadata !10688, metadata !DIExpression()), !dbg !10689
  store i16 %data, i16* %data.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %data.addr, metadata !10690, metadata !DIExpression()), !dbg !10691
  %0 = load i16, i16* %data.addr, align 2, !dbg !10692
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10693
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 5, !dbg !10694
  %2 = load i64, i64* %base_addr, align 8, !dbg !10694
  %3 = load i16, i16* %offset.addr, align 2, !dbg !10695
  %conv = zext i16 %3 to i64, !dbg !10695
  %add = add i64 %2, %conv, !dbg !10696
  %conv1 = trunc i64 %add to i32, !dbg !10693
  call void @outw(i16 zeroext %0, i32 %conv1) #10, !dbg !10697
  ret void, !dbg !10698
}

; Function Attrs: noredzone
declare dso_local void @remove_proc_entry(i8*, %struct.proc_dir_entry*) #2

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_close(%struct.net_device* %dev) #0 !dbg !10699 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %wrqu = alloca %union.iwreq_data, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10700, metadata !DIExpression()), !dbg !10701
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !10702, metadata !DIExpression()), !dbg !10703
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10704
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !10705
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !10705
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !10703
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10706
  %station_state = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 42, !dbg !10708
  %3 = load i32, i32* %station_state, align 4, !dbg !10708
  %cmp = icmp eq i32 %3, 4, !dbg !10709
  br i1 %cmp, label %if.then, label %if.end, !dbg !10710

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %union.iwreq_data* %wrqu, metadata !10711, metadata !DIExpression()), !dbg !10713
  %data = bitcast %union.iwreq_data* %wrqu to %struct.iw_point*, !dbg !10714
  %length = getelementptr inbounds %struct.iw_point, %struct.iw_point* %data, i32 0, i32 1, !dbg !10715
  store i16 0, i16* %length, align 8, !dbg !10716
  %data1 = bitcast %union.iwreq_data* %wrqu to %struct.iw_point*, !dbg !10717
  %flags = getelementptr inbounds %struct.iw_point, %struct.iw_point* %data1, i32 0, i32 2, !dbg !10718
  store i16 0, i16* %flags, align 2, !dbg !10719
  %ap_addr = bitcast %union.iwreq_data* %wrqu to %struct.sockaddr*, !dbg !10720
  %sa_family = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %ap_addr, i32 0, i32 0, !dbg !10721
  store i16 1, i16* %sa_family, align 8, !dbg !10722
  %ap_addr2 = bitcast %union.iwreq_data* %wrqu to %struct.sockaddr*, !dbg !10723
  %sa_data = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %ap_addr2, i32 0, i32 1, !dbg !10724
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data, i64 0, i64 0, !dbg !10725
  call void @eth_zero_addr(i8* %arraydecay) #10, !dbg !10726
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10727
  %dev3 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 7, !dbg !10728
  %5 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !10728
  call void @wireless_send_event(%struct.net_device* %5, i32 35605, %union.iwreq_data* %wrqu, i8* null) #10, !dbg !10729
  br label %if.end, !dbg !10730

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10731
  call void @atmel_enter_state(%struct.atmel_private* %6, i32 6) #10, !dbg !10732
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10733
  %bus_type = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %7, i32 0, i32 12, !dbg !10735
  %8 = load i32, i32* %bus_type, align 8, !dbg !10735
  %cmp4 = icmp eq i32 %8, 0, !dbg !10736
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !10737

if.then5:                                         ; preds = %if.end
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10738
  call void @atmel_write16(%struct.net_device* %9, i16 zeroext 0, i16 zeroext 96) #10, !dbg !10739
  br label %if.end6, !dbg !10739

if.end6:                                          ; preds = %if.then5, %if.end
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10740
  call void @atmel_write16(%struct.net_device* %10, i16 zeroext 0, i16 zeroext 64) #10, !dbg !10741
  ret i32 0, !dbg !10742
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @start_tx(%struct.sk_buff* %skb, %struct.net_device* %dev) #0 !dbg !10743 {
entry:
  %lock.addr.i90 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i90, metadata !9986, metadata !DIExpression()), !dbg !10744
  %flags.addr.i91 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i91, metadata !9992, metadata !DIExpression()), !dbg !10746
  %tmp.i92 = alloca i32, align 4
  %tmp8.i93 = alloca i32, align 4
  %lock.addr.i88 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i88, metadata !9986, metadata !DIExpression()), !dbg !10747
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9992, metadata !DIExpression()), !dbg !10751
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9668, metadata !DIExpression()), !dbg !10752
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %header = alloca %struct.ieee80211_hdr, align 2
  %flags = alloca i64, align 8
  %buff = alloca i16, align 2
  %frame_ctl = alloca i16, align 2
  %len = alloca i16, align 2
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy22 = alloca i64, align 8
  %__dummy223 = alloca i64, align 8
  %tmp26 = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !10759, metadata !DIExpression()), !dbg !10760
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10761, metadata !DIExpression()), !dbg !10762
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !10763, metadata !DIExpression()), !dbg !10764
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10765
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !10766
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !10766
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !10764
  call void @llvm.dbg.declare(metadata %struct.ieee80211_hdr* %header, metadata !10767, metadata !DIExpression()), !dbg !10768
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10769, metadata !DIExpression()), !dbg !10770
  call void @llvm.dbg.declare(metadata i16* %buff, metadata !10771, metadata !DIExpression()), !dbg !10772
  call void @llvm.dbg.declare(metadata i16* %frame_ctl, metadata !10773, metadata !DIExpression()), !dbg !10774
  call void @llvm.dbg.declare(metadata i16* %len, metadata !10775, metadata !DIExpression()), !dbg !10776
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10777
  %len1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 5, !dbg !10778
  %3 = load i32, i32* %len1, align 8, !dbg !10778
  %cmp = icmp ult i32 60, %3, !dbg !10779
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10780

cond.true:                                        ; preds = %entry
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10781
  %len2 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 5, !dbg !10782
  %5 = load i32, i32* %len2, align 8, !dbg !10782
  br label %cond.end, !dbg !10780

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10780

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 60, %cond.false ], !dbg !10780
  %conv = trunc i32 %cond to i16, !dbg !10780
  store i16 %conv, i16* %len, align 2, !dbg !10776
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10783
  %card = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 0, !dbg !10785
  %7 = load i8*, i8** %card, align 8, !dbg !10785
  %tobool = icmp ne i8* %7, null, !dbg !10783
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10786

land.lhs.true:                                    ; preds = %cond.end
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10787
  %present_callback = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %8, i32 0, i32 1, !dbg !10788
  %9 = load i32 (i8*)*, i32 (i8*)** %present_callback, align 8, !dbg !10788
  %tobool3 = icmp ne i32 (i8*)* %9, null, !dbg !10787
  br i1 %tobool3, label %land.lhs.true4, label %if.end, !dbg !10789

land.lhs.true4:                                   ; preds = %land.lhs.true
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10790
  %present_callback5 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 1, !dbg !10791
  %11 = load i32 (i8*)*, i32 (i8*)** %present_callback5, align 8, !dbg !10791
  %12 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10792
  %card6 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %12, i32 0, i32 0, !dbg !10793
  %13 = load i8*, i8** %card6, align 8, !dbg !10793
  %call7 = call i32 %11(i8* %13) #10, !dbg !10794
  %tobool8 = icmp ne i32 %call7, 0, !dbg !10794
  br i1 %tobool8, label %if.end, label %if.then, !dbg !10795

if.then:                                          ; preds = %land.lhs.true4
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10796
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 24, !dbg !10798
  %tx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 5, !dbg !10799
  %15 = load i64, i64* %tx_errors, align 8, !dbg !10800
  %inc = add i64 %15, 1, !dbg !10800
  store i64 %inc, i64* %tx_errors, align 8, !dbg !10800
  %16 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10801
  call void @consume_skb(%struct.sk_buff* %16) #10, !dbg !10801
  store i32 0, i32* %retval, align 4, !dbg !10802
  br label %return, !dbg !10802

if.end:                                           ; preds = %land.lhs.true4, %land.lhs.true, %cond.end
  %17 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10803
  %station_state = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %17, i32 0, i32 42, !dbg !10805
  %18 = load i32, i32* %station_state, align 4, !dbg !10805
  %cmp9 = icmp ne i32 %18, 4, !dbg !10806
  br i1 %cmp9, label %if.then11, label %if.end15, !dbg !10807

if.then11:                                        ; preds = %if.end
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10808
  %stats12 = getelementptr inbounds %struct.net_device, %struct.net_device* %19, i32 0, i32 24, !dbg !10810
  %tx_errors13 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats12, i32 0, i32 5, !dbg !10811
  %20 = load i64, i64* %tx_errors13, align 8, !dbg !10812
  %inc14 = add i64 %20, 1, !dbg !10812
  store i64 %inc14, i64* %tx_errors13, align 8, !dbg !10812
  %21 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10813
  call void @consume_skb(%struct.sk_buff* %21) #10, !dbg !10813
  store i32 0, i32* %retval, align 4, !dbg !10814
  br label %return, !dbg !10814

if.end15:                                         ; preds = %if.end
  %22 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10815
  %timerlock = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %22, i32 0, i32 11, !dbg !10816
  call void @spin_lock_bh(%struct.spinlock* %timerlock) #10, !dbg !10817
  br label %do.body, !dbg !10818

do.body:                                          ; preds = %if.end15
  br label %do.body16, !dbg !10819

do.body16:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10820, metadata !DIExpression()), !dbg !10822
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10823, metadata !DIExpression()), !dbg !10822
  %cmp17 = icmp eq i64* %__dummy, %__dummy2, !dbg !10822
  %conv18 = zext i1 %cmp17 to i32, !dbg !10822
  store i32 1, i32* %tmp, align 4, !dbg !10822
  %23 = load i32, i32* %tmp, align 4, !dbg !10822
  br label %do.body19, !dbg !10824

do.body19:                                        ; preds = %do.body16
  br label %do.body20, !dbg !10825

do.body20:                                        ; preds = %do.body19
  br label %do.body21, !dbg !10826

do.body21:                                        ; preds = %do.body20
  call void @llvm.dbg.declare(metadata i64* %__dummy22, metadata !10828, metadata !DIExpression()), !dbg !10831
  call void @llvm.dbg.declare(metadata i64* %__dummy223, metadata !10832, metadata !DIExpression()), !dbg !10831
  %cmp24 = icmp eq i64* %__dummy22, %__dummy223, !dbg !10831
  %conv25 = zext i1 %cmp24 to i32, !dbg !10831
  store i32 1, i32* %tmp26, align 4, !dbg !10831
  %24 = load i32, i32* %tmp26, align 4, !dbg !10831
  %call27 = call i64 @arch_local_irq_save() #10, !dbg !10833
  store i64 %call27, i64* %flags, align 8, !dbg !10833
  br label %do.end, !dbg !10833

do.end:                                           ; preds = %do.body21
  br label %do.end28, !dbg !10826

do.end28:                                         ; preds = %do.end
  br label %do.body29, !dbg !10825

do.body29:                                        ; preds = %do.end28
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10834, !srcloc !10835
  br label %do.body30, !dbg !10834

do.body30:                                        ; preds = %do.body29
  %25 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10836
  %irqlock = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %25, i32 0, i32 10, !dbg !10836
  store %struct.spinlock* %irqlock, %struct.spinlock** %lock.addr.i, align 8
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10837
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !10838
  %rlock.i = bitcast %union.anon.46* %27 to %struct.raw_spinlock*, !dbg !10838
  br label %do.end32, !dbg !10836

do.end32:                                         ; preds = %do.body30
  br label %do.end33, !dbg !10834

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !10825

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !10824

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !10819

do.end36:                                         ; preds = %do.end35
  %28 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10839
  %29 = load i16, i16* %len, align 2, !dbg !10840
  %conv37 = zext i16 %29 to i32, !dbg !10840
  %add = add i32 %conv37, 18, !dbg !10841
  %conv38 = trunc i32 %add to i16, !dbg !10840
  %call39 = call zeroext i16 @find_tx_buff(%struct.atmel_private* %28, i16 zeroext %conv38) #10, !dbg !10842
  store i16 %call39, i16* %buff, align 2, !dbg !10843
  %tobool40 = icmp ne i16 %call39, 0, !dbg !10843
  br i1 %tobool40, label %if.end46, label %if.then41, !dbg !10844

if.then41:                                        ; preds = %do.end36
  %30 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10845
  %stats42 = getelementptr inbounds %struct.net_device, %struct.net_device* %30, i32 0, i32 24, !dbg !10846
  %tx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats42, i32 0, i32 7, !dbg !10847
  %31 = load i64, i64* %tx_dropped, align 8, !dbg !10848
  %inc43 = add i64 %31, 1, !dbg !10848
  store i64 %inc43, i64* %tx_dropped, align 8, !dbg !10848
  %32 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10849
  %irqlock44 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %32, i32 0, i32 10, !dbg !10850
  %33 = load i64, i64* %flags, align 8, !dbg !10851
  store %struct.spinlock* %irqlock44, %struct.spinlock** %lock.addr.i88, align 8
  store i64 %33, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1904, metadata !10157, metadata !DIExpression()) #8, !dbg !10852
  call void @llvm.dbg.declare(metadata !1904, metadata !10161, metadata !DIExpression()) #8, !dbg !10852
  store i32 1, i32* %tmp.i, align 4, !dbg !10852
  %34 = load i32, i32* %tmp.i, align 4, !dbg !10852
  call void @llvm.dbg.declare(metadata !1904, metadata !10162, metadata !DIExpression()) #8, !dbg !10853
  call void @llvm.dbg.declare(metadata !1904, metadata !10168, metadata !DIExpression()) #8, !dbg !10853
  store i32 1, i32* %tmp8.i, align 4, !dbg !10853
  %35 = load i32, i32* %tmp8.i, align 4, !dbg !10853
  %36 = load i64, i64* %flags.addr.i, align 8, !dbg !10854
  call void @arch_local_irq_restore(i64 %36) #12, !dbg !10854
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10855, !srcloc !10172
  %37 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i88, align 8, !dbg !10856
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %37, i32 0, i32 0, !dbg !10856
  %rlock.i89 = bitcast %union.anon.46* %38 to %struct.raw_spinlock*, !dbg !10856
  %39 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10857
  %timerlock45 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %39, i32 0, i32 11, !dbg !10858
  call void @spin_unlock_bh(%struct.spinlock* %timerlock45) #10, !dbg !10859
  %40 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10860
  call void @netif_stop_queue(%struct.net_device* %40) #10, !dbg !10861
  store i32 16, i32* %retval, align 4, !dbg !10862
  br label %return, !dbg !10862

if.end46:                                         ; preds = %do.end36
  store i16 8, i16* %frame_ctl, align 2, !dbg !10863
  %duration_id = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 1, !dbg !10864
  store i16 0, i16* %duration_id, align 2, !dbg !10865
  %seq_ctrl = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 5, !dbg !10866
  store i16 0, i16* %seq_ctrl, align 2, !dbg !10867
  %41 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10868
  %wep_is_on = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %41, i32 0, i32 30, !dbg !10870
  %42 = load i8, i8* %wep_is_on, align 4, !dbg !10870
  %tobool47 = icmp ne i8 %42, 0, !dbg !10868
  br i1 %tobool47, label %if.then48, label %if.end51, !dbg !10871

if.then48:                                        ; preds = %if.end46
  %43 = load i16, i16* %frame_ctl, align 2, !dbg !10872
  %conv49 = zext i16 %43 to i32, !dbg !10872
  %or = or i32 %conv49, 16384, !dbg !10872
  %conv50 = trunc i32 %or to i16, !dbg !10872
  store i16 %conv50, i16* %frame_ctl, align 2, !dbg !10872
  br label %if.end51, !dbg !10873

if.end51:                                         ; preds = %if.then48, %if.end46
  %44 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10874
  %operating_mode = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %44, i32 0, i32 43, !dbg !10876
  %45 = load i32, i32* %operating_mode, align 8, !dbg !10876
  %cmp52 = icmp eq i32 %45, 1, !dbg !10877
  br i1 %cmp52, label %if.then54, label %if.else, !dbg !10878

if.then54:                                        ; preds = %if.end51
  %46 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10879
  %addr1 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 2, !dbg !10881
  %47 = bitcast [6 x i8]* %addr1 to i8*, !dbg !10882
  call void @skb_copy_from_linear_data(%struct.sk_buff* %46, i8* %47, i32 6) #10, !dbg !10883
  %addr2 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 3, !dbg !10884
  %48 = bitcast [6 x i8]* %addr2 to i8*, !dbg !10885
  %49 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10886
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %49, i32 0, i32 74, !dbg !10887
  %50 = load i8*, i8** %dev_addr, align 8, !dbg !10887
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %48, i8* align 1 %50, i64 6, i1 false), !dbg !10885
  %addr3 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 4, !dbg !10888
  %51 = bitcast [6 x i8]* %addr3 to i8*, !dbg !10889
  %52 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10890
  %BSSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %52, i32 0, i32 77, !dbg !10891
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %BSSID, i64 0, i64 0, !dbg !10889
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %51, i8* align 2 %arraydecay, i64 6, i1 false), !dbg !10889
  br label %if.end63, !dbg !10892

if.else:                                          ; preds = %if.end51
  %53 = load i16, i16* %frame_ctl, align 2, !dbg !10893
  %conv55 = zext i16 %53 to i32, !dbg !10893
  %or56 = or i32 %conv55, 256, !dbg !10893
  %conv57 = trunc i32 %or56 to i16, !dbg !10893
  store i16 %conv57, i16* %frame_ctl, align 2, !dbg !10893
  %addr158 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 2, !dbg !10895
  %54 = bitcast [6 x i8]* %addr158 to i8*, !dbg !10896
  %55 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10897
  %CurrentBSSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %55, i32 0, i32 76, !dbg !10898
  %arraydecay59 = getelementptr inbounds [6 x i8], [6 x i8]* %CurrentBSSID, i64 0, i64 0, !dbg !10896
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %54, i8* align 8 %arraydecay59, i64 6, i1 false), !dbg !10896
  %addr260 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 3, !dbg !10899
  %56 = bitcast [6 x i8]* %addr260 to i8*, !dbg !10900
  %57 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10901
  %dev_addr61 = getelementptr inbounds %struct.net_device, %struct.net_device* %57, i32 0, i32 74, !dbg !10902
  %58 = load i8*, i8** %dev_addr61, align 8, !dbg !10902
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %56, i8* align 1 %58, i64 6, i1 false), !dbg !10900
  %59 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10903
  %addr362 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 4, !dbg !10904
  %60 = bitcast [6 x i8]* %addr362 to i8*, !dbg !10905
  call void @skb_copy_from_linear_data(%struct.sk_buff* %59, i8* %60, i32 6) #10, !dbg !10906
  br label %if.end63

if.end63:                                         ; preds = %if.else, %if.then54
  %61 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10907
  %use_wpa = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %61, i32 0, i32 38, !dbg !10909
  %62 = load i32, i32* %use_wpa, align 4, !dbg !10909
  %tobool64 = icmp ne i32 %62, 0, !dbg !10907
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !10910

if.then65:                                        ; preds = %if.end63
  %addr4 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 6, !dbg !10911
  %63 = bitcast [6 x i8]* %addr4 to i8*, !dbg !10912
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %63, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @rfc1042_header, i64 0, i64 0), i64 6, i1 false), !dbg !10912
  br label %if.end66, !dbg !10912

if.end66:                                         ; preds = %if.then65, %if.end63
  %64 = load i16, i16* %frame_ctl, align 2, !dbg !10913
  %frame_control = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 0, !dbg !10914
  store i16 %64, i16* %frame_control, align 2, !dbg !10915
  %65 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10916
  %66 = load i16, i16* %buff, align 2, !dbg !10917
  %67 = bitcast %struct.ieee80211_hdr* %header to i8*, !dbg !10918
  call void @atmel_copy_to_card(%struct.net_device* %65, i16 zeroext %66, i8* %67, i16 zeroext 30) #10, !dbg !10919
  %68 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10920
  %69 = load i16, i16* %buff, align 2, !dbg !10921
  %conv67 = zext i16 %69 to i32, !dbg !10921
  %add68 = add i32 %conv67, 30, !dbg !10922
  %conv69 = trunc i32 %add68 to i16, !dbg !10921
  %70 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10923
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %70, i32 0, i32 37, !dbg !10924
  %71 = load i8*, i8** %data, align 8, !dbg !10924
  %add.ptr = getelementptr i8, i8* %71, i64 12, !dbg !10925
  %72 = load i16, i16* %len, align 2, !dbg !10926
  %conv70 = zext i16 %72 to i32, !dbg !10926
  %sub = sub i32 %conv70, 12, !dbg !10927
  %conv71 = trunc i32 %sub to i16, !dbg !10926
  call void @atmel_copy_to_card(%struct.net_device* %68, i16 zeroext %conv69, i8* %add.ptr, i16 zeroext %conv71) #10, !dbg !10928
  %73 = load i16, i16* %len, align 2, !dbg !10929
  %conv72 = zext i16 %73 to i32, !dbg !10929
  %sub73 = sub i32 %conv72, 12, !dbg !10930
  %add74 = add i32 %sub73, 30, !dbg !10931
  %74 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10932
  %tx_buff_tail = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %74, i32 0, i32 25, !dbg !10933
  %75 = load i16, i16* %tx_buff_tail, align 2, !dbg !10934
  %conv75 = zext i16 %75 to i32, !dbg !10934
  %add76 = add i32 %conv75, %add74, !dbg !10934
  %conv77 = trunc i32 %add76 to i16, !dbg !10934
  store i16 %conv77, i16* %tx_buff_tail, align 2, !dbg !10934
  %76 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10935
  %77 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10936
  %data78 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %77, i32 0, i32 37, !dbg !10937
  %78 = load i8*, i8** %data78, align 8, !dbg !10937
  %79 = load i8, i8* %78, align 1, !dbg !10938
  %conv79 = zext i8 %79 to i32, !dbg !10938
  %and = and i32 %conv79, 1, !dbg !10939
  %80 = load i16, i16* %len, align 2, !dbg !10940
  %conv80 = zext i16 %80 to i32, !dbg !10940
  %add81 = add i32 %conv80, 18, !dbg !10941
  %conv82 = trunc i32 %add81 to i16, !dbg !10940
  %81 = load i16, i16* %buff, align 2, !dbg !10942
  call void @tx_update_descriptor(%struct.atmel_private* %76, i32 %and, i16 zeroext %conv82, i16 zeroext %81, i8 zeroext 1) #10, !dbg !10943
  %82 = load i16, i16* %len, align 2, !dbg !10944
  %conv83 = zext i16 %82 to i64, !dbg !10944
  %83 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10945
  %stats84 = getelementptr inbounds %struct.net_device, %struct.net_device* %83, i32 0, i32 24, !dbg !10946
  %tx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats84, i32 0, i32 3, !dbg !10947
  %84 = load i64, i64* %tx_bytes, align 8, !dbg !10948
  %add85 = add i64 %84, %conv83, !dbg !10948
  store i64 %add85, i64* %tx_bytes, align 8, !dbg !10948
  %85 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10949
  %irqlock86 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %85, i32 0, i32 10, !dbg !10950
  %86 = load i64, i64* %flags, align 8, !dbg !10951
  store %struct.spinlock* %irqlock86, %struct.spinlock** %lock.addr.i90, align 8
  store i64 %86, i64* %flags.addr.i91, align 8
  call void @llvm.dbg.declare(metadata !1904, metadata !10157, metadata !DIExpression()) #8, !dbg !10952
  call void @llvm.dbg.declare(metadata !1904, metadata !10161, metadata !DIExpression()) #8, !dbg !10952
  store i32 1, i32* %tmp.i92, align 4, !dbg !10952
  %87 = load i32, i32* %tmp.i92, align 4, !dbg !10952
  call void @llvm.dbg.declare(metadata !1904, metadata !10162, metadata !DIExpression()) #8, !dbg !10953
  call void @llvm.dbg.declare(metadata !1904, metadata !10168, metadata !DIExpression()) #8, !dbg !10953
  store i32 1, i32* %tmp8.i93, align 4, !dbg !10953
  %88 = load i32, i32* %tmp8.i93, align 4, !dbg !10953
  %89 = load i64, i64* %flags.addr.i91, align 8, !dbg !10954
  call void @arch_local_irq_restore(i64 %89) #12, !dbg !10954
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10955, !srcloc !10172
  %90 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i90, align 8, !dbg !10956
  %91 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %90, i32 0, i32 0, !dbg !10956
  %rlock.i94 = bitcast %union.anon.46* %91 to %struct.raw_spinlock*, !dbg !10956
  %92 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !10957
  %timerlock87 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %92, i32 0, i32 11, !dbg !10958
  call void @spin_unlock_bh(%struct.spinlock* %timerlock87) #10, !dbg !10959
  %93 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10960
  call void @consume_skb(%struct.sk_buff* %93) #10, !dbg !10960
  store i32 0, i32* %retval, align 4, !dbg !10961
  br label %return, !dbg !10961

return:                                           ; preds = %if.end66, %if.then41, %if.then11, %if.then
  %94 = load i32, i32* %retval, align 4, !dbg !10962
  ret i32 %94, !dbg !10962
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_set_mac_address(%struct.net_device* %dev, i8* %p) #0 !dbg !10963 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %p.addr = alloca i8*, align 8
  %addr = alloca %struct.sockaddr*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10964, metadata !DIExpression()), !dbg !10965
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !10966, metadata !DIExpression()), !dbg !10967
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %addr, metadata !10968, metadata !DIExpression()), !dbg !10969
  %0 = load i8*, i8** %p.addr, align 8, !dbg !10970
  %1 = bitcast i8* %0 to %struct.sockaddr*, !dbg !10970
  store %struct.sockaddr* %1, %struct.sockaddr** %addr, align 8, !dbg !10969
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10971
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 74, !dbg !10972
  %3 = load i8*, i8** %dev_addr, align 8, !dbg !10972
  %4 = load %struct.sockaddr*, %struct.sockaddr** %addr, align 8, !dbg !10973
  %sa_data = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i32 0, i32 1, !dbg !10974
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data, i64 0, i64 0, !dbg !10975
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10976
  %addr_len = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 55, !dbg !10977
  %6 = load i8, i8* %addr_len, align 1, !dbg !10977
  %conv = zext i8 %6 to i64, !dbg !10976
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 2 %arraydecay, i64 %conv, i1 false), !dbg !10975
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10978
  %call = call i32 @atmel_open(%struct.net_device* %7) #10, !dbg !10979
  ret i32 %call, !dbg !10980
}

; Function Attrs: noredzone
declare dso_local i32 @eth_validate_addr(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_ioctl(%struct.net_device* %dev, %struct.ifreq* %rq, i32 %cmd) #0 !dbg !10981 {
entry:
  %retval.i.i47 = alloca i1, align 1
  %addr.addr.i.i48 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i48, metadata !10982, metadata !DIExpression()), !dbg !10987
  %bytes.addr.i.i49 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i49, metadata !10997, metadata !DIExpression()), !dbg !10998
  %is_source.addr.i.i50 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i50, metadata !10999, metadata !DIExpression()), !dbg !11000
  %sz.i.i51 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i51, metadata !11001, metadata !DIExpression()), !dbg !11002
  %__ret_warn_on.i.i52 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i52, metadata !11003, metadata !DIExpression()), !dbg !11006
  %tmp.i.i53 = alloca i64, align 8
  %to.addr.i54 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i54, metadata !11007, metadata !DIExpression()), !dbg !11008
  %from.addr.i55 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i55, metadata !11009, metadata !DIExpression()), !dbg !11010
  %n.addr.i56 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i56, metadata !11011, metadata !DIExpression()), !dbg !11012
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !10982, metadata !DIExpression()), !dbg !11013
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !10997, metadata !DIExpression()), !dbg !11017
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !10999, metadata !DIExpression()), !dbg !11018
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !11001, metadata !DIExpression()), !dbg !11019
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !11003, metadata !DIExpression()), !dbg !11020
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !11007, metadata !DIExpression()), !dbg !11021
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !11009, metadata !DIExpression()), !dbg !11022
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !11011, metadata !DIExpression()), !dbg !11023
  %dev.addr = alloca %struct.net_device*, align 8
  %rq.addr = alloca %struct.ifreq*, align 8
  %cmd.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %rc = alloca i32, align 4
  %priv = alloca %struct.atmel_private*, align 8
  %com = alloca %struct.atmel_priv_ioctl, align 8
  %wrq = alloca %struct.iwreq*, align 8
  %new_firmware = alloca i8*, align 8
  %domain = alloca [21 x i8], align 16
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11024, metadata !DIExpression()), !dbg !11025
  store %struct.ifreq* %rq, %struct.ifreq** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %rq.addr, metadata !11026, metadata !DIExpression()), !dbg !11027
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !11028, metadata !DIExpression()), !dbg !11029
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11030, metadata !DIExpression()), !dbg !11031
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11032, metadata !DIExpression()), !dbg !11033
  store i32 0, i32* %rc, align 4, !dbg !11033
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !11034, metadata !DIExpression()), !dbg !11035
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11036
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !11037
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !11037
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !11035
  call void @llvm.dbg.declare(metadata %struct.atmel_priv_ioctl* %com, metadata !11038, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.declare(metadata %struct.iwreq** %wrq, metadata !11045, metadata !DIExpression()), !dbg !11046
  %2 = load %struct.ifreq*, %struct.ifreq** %rq.addr, align 8, !dbg !11047
  %3 = bitcast %struct.ifreq* %2 to %struct.iwreq*, !dbg !11048
  store %struct.iwreq* %3, %struct.iwreq** %wrq, align 8, !dbg !11046
  call void @llvm.dbg.declare(metadata i8** %new_firmware, metadata !11049, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.declare(metadata [21 x i8]* %domain, metadata !11051, metadata !DIExpression()), !dbg !11055
  %4 = load i32, i32* %cmd.addr, align 4, !dbg !11056
  switch i32 %4, label %sw.default [
    i32 35809, label %sw.bb
    i32 35808, label %sw.bb1
    i32 35810, label %sw.bb18
  ], !dbg !11057

sw.bb:                                            ; preds = %entry
  %5 = load %struct.iwreq*, %struct.iwreq** %wrq, align 8, !dbg !11058
  %u = getelementptr inbounds %struct.iwreq, %struct.iwreq* %5, i32 0, i32 1, !dbg !11059
  %param = bitcast %union.iwreq_data* %u to %struct.iw_param*, !dbg !11060
  %value = getelementptr inbounds %struct.iw_param, %struct.iw_param* %param, i32 0, i32 0, !dbg !11061
  store i32 333831, i32* %value, align 8, !dbg !11062
  br label %sw.epilog, !dbg !11063

sw.bb1:                                           ; preds = %entry
  %6 = bitcast %struct.atmel_priv_ioctl* %com to i8*, !dbg !11064
  %7 = load %struct.ifreq*, %struct.ifreq** %rq.addr, align 8, !dbg !11065
  %ifr_ifru = getelementptr inbounds %struct.ifreq, %struct.ifreq* %7, i32 0, i32 1, !dbg !11066
  %ifru_data = bitcast %union.anon.13* %ifr_ifru to i8**, !dbg !11066
  %8 = load i8*, i8** %ifru_data, align 8, !dbg !11066
  store i8* %6, i8** %to.addr.i, align 8
  store i8* %8, i8** %from.addr.i, align 8
  store i64 48, i64* %n.addr.i, align 8
  %9 = load i8*, i8** %to.addr.i, align 8, !dbg !11067
  %10 = load i64, i64* %n.addr.i, align 8, !dbg !11067
  store i8* %9, i8** %addr.addr.i.i, align 8
  store i64 %10, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !11019
  %11 = load i32, i32* %sz.i.i, align 4, !dbg !11068
  %cmp.i.i = icmp sge i32 %11, 0, !dbg !11068
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !11068

land.rhs.i.i:                                     ; preds = %sw.bb1
  %12 = load i32, i32* %sz.i.i, align 4, !dbg !11068
  %conv.i.i = sext i32 %12 to i64, !dbg !11068
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11068
  %cmp1.i.i = icmp ult i64 %conv.i.i, %13, !dbg !11068
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %sw.bb1
  %14 = phi i1 [ false, %sw.bb1 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !11070
  %lnot.i.i = xor i1 %14, true, !dbg !11068
  %lnot.ext.i.i = zext i1 %14 to i32, !dbg !11068
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11068
  br i1 %14, label %if.then.i.i, label %if.end10.i.i, !dbg !11071

if.then.i.i:                                      ; preds = %land.end.i.i
  %15 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11072
  %16 = call i1 @llvm.is.constant.i64(i64 %15) #8, !dbg !11075
  br i1 %16, label %if.else.i.i, label %if.then5.i.i, !dbg !11076

if.then5.i.i:                                     ; preds = %if.then.i.i
  %17 = load i32, i32* %sz.i.i, align 4, !dbg !11077
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11078
  call void @copy_overflow(i32 %17, i64 %18) #12, !dbg !11079
  br label %if.end9.i.i, !dbg !11079

if.else.i.i:                                      ; preds = %if.then.i.i
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !11080
  %tobool6.i.i = trunc i8 %19 to i1, !dbg !11080
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !11082

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !11083
  br label %if.end.i.i, !dbg !11083

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !11084
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !11085
  br label %check_copy_size.exit.i, !dbg !11085

if.end10.i.i:                                     ; preds = %land.end.i.i
  %20 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11020
  %cmp11.i.i = icmp ugt i64 %20, 2147483647, !dbg !11020
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !11020
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !11020
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !11020
  %21 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11086
  %tobool17.i.i = icmp ne i32 %21, 0, !dbg !11086
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !11086
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !11086
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !11086
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !11020

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0), i32 150, i32 2307, i64 12) #8, !dbg !11088, !srcloc !11091
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #8, !dbg !11092, !srcloc !11094
  br label %if.end31.i.i, !dbg !11095

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %22 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11020
  %tobool32.i.i = icmp ne i32 %22, 0, !dbg !11020
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !11020
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !11020
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !11020
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !11086
  %23 = load i64, i64* %tmp.i.i, align 8, !dbg !11020
  %tobool38.i.i = icmp ne i64 %23, 0, !dbg !11096
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !11097

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !11098
  br label %check_copy_size.exit.i, !dbg !11098

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %24 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !11099
  %25 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11100
  %26 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !11101
  %tobool41.i.i = trunc i8 %26 to i1, !dbg !11101
  call void @check_object_size(i8* %24, i64 %25, i1 zeroext %tobool41.i.i) #12, !dbg !11102
  store i1 true, i1* %retval.i.i, align 1, !dbg !11103
  br label %check_copy_size.exit.i, !dbg !11103

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %27 = load i1, i1* %retval.i.i, align 1, !dbg !11104
  %lnot.i = xor i1 %27, true, !dbg !11067
  %lnot.ext.i = zext i1 %27 to i32, !dbg !11067
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !11067
  br i1 %27, label %if.then.i, label %copy_from_user.exit, !dbg !11105

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %28 = load i8*, i8** %to.addr.i, align 8, !dbg !11106
  %29 = load i8*, i8** %from.addr.i, align 8, !dbg !11107
  %30 = load i64, i64* %n.addr.i, align 8, !dbg !11108
  %call2.i = call i64 @_copy_from_user(i8* %28, i8* %29, i64 %30) #12, !dbg !11109
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !11110
  br label %copy_from_user.exit, !dbg !11111

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %31 = load i64, i64* %n.addr.i, align 8, !dbg !11112
  %tobool = icmp ne i64 %31, 0, !dbg !11113
  br i1 %tobool, label %if.then, label %if.end, !dbg !11114

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %rc, align 4, !dbg !11115
  br label %sw.epilog, !dbg !11117

if.end:                                           ; preds = %copy_from_user.exit
  %call3 = call zeroext i1 @capable(i32 12) #10, !dbg !11118
  br i1 %call3, label %if.end5, label %if.then4, !dbg !11120

if.then4:                                         ; preds = %if.end
  store i32 -1, i32* %rc, align 4, !dbg !11121
  br label %sw.epilog, !dbg !11123

if.end5:                                          ; preds = %if.end
  %data = getelementptr inbounds %struct.atmel_priv_ioctl, %struct.atmel_priv_ioctl* %com, i32 0, i32 1, !dbg !11124
  %32 = load i8*, i8** %data, align 8, !dbg !11124
  %len = getelementptr inbounds %struct.atmel_priv_ioctl, %struct.atmel_priv_ioctl* %com, i32 0, i32 2, !dbg !11125
  %33 = load i16, i16* %len, align 8, !dbg !11125
  %conv = zext i16 %33 to i64, !dbg !11126
  %call6 = call i8* @memdup_user(i8* %32, i64 %conv) #10, !dbg !11127
  store i8* %call6, i8** %new_firmware, align 8, !dbg !11128
  %34 = load i8*, i8** %new_firmware, align 8, !dbg !11129
  %call7 = call zeroext i1 @IS_ERR(i8* %34) #10, !dbg !11131
  br i1 %call7, label %if.then8, label %if.end11, !dbg !11132

if.then8:                                         ; preds = %if.end5
  %35 = load i8*, i8** %new_firmware, align 8, !dbg !11133
  %call9 = call i64 @PTR_ERR(i8* %35) #10, !dbg !11135
  %conv10 = trunc i64 %call9 to i32, !dbg !11135
  store i32 %conv10, i32* %rc, align 4, !dbg !11136
  br label %sw.epilog, !dbg !11137

if.end11:                                         ; preds = %if.end5
  %36 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !11138
  %firmware = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %36, i32 0, i32 4, !dbg !11139
  %37 = load i8*, i8** %firmware, align 8, !dbg !11139
  call void @kfree(i8* %37) #10, !dbg !11140
  %38 = load i8*, i8** %new_firmware, align 8, !dbg !11141
  %39 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !11142
  %firmware12 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %39, i32 0, i32 4, !dbg !11143
  store i8* %38, i8** %firmware12, align 8, !dbg !11144
  %len13 = getelementptr inbounds %struct.atmel_priv_ioctl, %struct.atmel_priv_ioctl* %com, i32 0, i32 2, !dbg !11145
  %40 = load i16, i16* %len13, align 8, !dbg !11145
  %conv14 = zext i16 %40 to i32, !dbg !11146
  %41 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !11147
  %firmware_length = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %41, i32 0, i32 5, !dbg !11148
  store i32 %conv14, i32* %firmware_length, align 8, !dbg !11149
  %42 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !11150
  %firmware_id = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %42, i32 0, i32 2, !dbg !11151
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %firmware_id, i64 0, i64 0, !dbg !11150
  %id = getelementptr inbounds %struct.atmel_priv_ioctl, %struct.atmel_priv_ioctl* %com, i32 0, i32 0, !dbg !11152
  %arraydecay15 = getelementptr inbounds [32 x i8], [32 x i8]* %id, i64 0, i64 0, !dbg !11153
  %call16 = call i8* @strncpy(i8* %arraydecay, i8* %arraydecay15, i64 31) #10, !dbg !11154
  %43 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !11155
  %firmware_id17 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %43, i32 0, i32 2, !dbg !11156
  %arrayidx = getelementptr [32 x i8], [32 x i8]* %firmware_id17, i64 0, i64 31, !dbg !11155
  store i8 0, i8* %arrayidx, align 1, !dbg !11157
  br label %sw.epilog, !dbg !11158

sw.bb18:                                          ; preds = %entry
  %arraydecay19 = getelementptr inbounds [21 x i8], [21 x i8]* %domain, i64 0, i64 0, !dbg !11159
  %44 = load %struct.ifreq*, %struct.ifreq** %rq.addr, align 8, !dbg !11160
  %ifr_ifru20 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %44, i32 0, i32 1, !dbg !11161
  %ifru_data21 = bitcast %union.anon.13* %ifr_ifru20 to i8**, !dbg !11161
  %45 = load i8*, i8** %ifru_data21, align 8, !dbg !11161
  store i8* %arraydecay19, i8** %to.addr.i54, align 8
  store i8* %45, i8** %from.addr.i55, align 8
  store i64 20, i64* %n.addr.i56, align 8
  %46 = load i8*, i8** %to.addr.i54, align 8, !dbg !11162
  %47 = load i64, i64* %n.addr.i56, align 8, !dbg !11162
  store i8* %46, i8** %addr.addr.i.i48, align 8
  store i64 %47, i64* %bytes.addr.i.i49, align 8
  store i8 0, i8* %is_source.addr.i.i50, align 1
  store i32 -1, i32* %sz.i.i51, align 4, !dbg !11002
  %48 = load i32, i32* %sz.i.i51, align 4, !dbg !11163
  %cmp.i.i57 = icmp sge i32 %48, 0, !dbg !11163
  br i1 %cmp.i.i57, label %land.rhs.i.i60, label %land.end.i.i64, !dbg !11163

land.rhs.i.i60:                                   ; preds = %sw.bb18
  %49 = load i32, i32* %sz.i.i51, align 4, !dbg !11163
  %conv.i.i58 = sext i32 %49 to i64, !dbg !11163
  %50 = load i64, i64* %bytes.addr.i.i49, align 8, !dbg !11163
  %cmp1.i.i59 = icmp ult i64 %conv.i.i58, %50, !dbg !11163
  br label %land.end.i.i64

land.end.i.i64:                                   ; preds = %land.rhs.i.i60, %sw.bb18
  %51 = phi i1 [ false, %sw.bb18 ], [ %cmp1.i.i59, %land.rhs.i.i60 ], !dbg !11164
  %lnot.i.i61 = xor i1 %51, true, !dbg !11163
  %lnot.ext.i.i62 = zext i1 %51 to i32, !dbg !11163
  %conv4.i.i63 = sext i32 %lnot.ext.i.i62 to i64, !dbg !11163
  br i1 %51, label %if.then.i.i65, label %if.end10.i.i80, !dbg !11165

if.then.i.i65:                                    ; preds = %land.end.i.i64
  %52 = load i64, i64* %bytes.addr.i.i49, align 8, !dbg !11166
  %53 = call i1 @llvm.is.constant.i64(i64 %52) #8, !dbg !11167
  br i1 %53, label %if.else.i.i68, label %if.then5.i.i66, !dbg !11168

if.then5.i.i66:                                   ; preds = %if.then.i.i65
  %54 = load i32, i32* %sz.i.i51, align 4, !dbg !11169
  %55 = load i64, i64* %bytes.addr.i.i49, align 8, !dbg !11170
  call void @copy_overflow(i32 %54, i64 %55) #12, !dbg !11171
  br label %if.end9.i.i72, !dbg !11171

if.else.i.i68:                                    ; preds = %if.then.i.i65
  %56 = load i8, i8* %is_source.addr.i.i50, align 1, !dbg !11172
  %tobool6.i.i67 = trunc i8 %56 to i1, !dbg !11172
  br i1 %tobool6.i.i67, label %if.then7.i.i69, label %if.else8.i.i70, !dbg !11173

if.then7.i.i69:                                   ; preds = %if.else.i.i68
  call void @__bad_copy_from() #12, !dbg !11174
  br label %if.end.i.i71, !dbg !11174

if.else8.i.i70:                                   ; preds = %if.else.i.i68
  call void @__bad_copy_to() #12, !dbg !11175
  br label %if.end.i.i71

if.end.i.i71:                                     ; preds = %if.else8.i.i70, %if.then7.i.i69
  br label %if.end9.i.i72

if.end9.i.i72:                                    ; preds = %if.end.i.i71, %if.then5.i.i66
  store i1 false, i1* %retval.i.i47, align 1, !dbg !11176
  br label %check_copy_size.exit.i94, !dbg !11176

if.end10.i.i80:                                   ; preds = %land.end.i.i64
  %57 = load i64, i64* %bytes.addr.i.i49, align 8, !dbg !11006
  %cmp11.i.i73 = icmp ugt i64 %57, 2147483647, !dbg !11006
  %lnot13.i.i74 = xor i1 %cmp11.i.i73, true, !dbg !11006
  %lnot.ext16.i.i75 = zext i1 %cmp11.i.i73 to i32, !dbg !11006
  store i32 %lnot.ext16.i.i75, i32* %__ret_warn_on.i.i52, align 4, !dbg !11006
  %58 = load i32, i32* %__ret_warn_on.i.i52, align 4, !dbg !11177
  %tobool17.i.i76 = icmp ne i32 %58, 0, !dbg !11177
  %lnot18.i.i77 = xor i1 %tobool17.i.i76, true, !dbg !11177
  %lnot.ext21.i.i78 = zext i1 %tobool17.i.i76 to i32, !dbg !11177
  %conv22.i.i79 = sext i32 %lnot.ext21.i.i78 to i64, !dbg !11177
  br i1 %tobool17.i.i76, label %if.then24.i.i81, label %if.end31.i.i87, !dbg !11006

if.then24.i.i81:                                  ; preds = %if.end10.i.i80
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0), i32 150, i32 2307, i64 12) #8, !dbg !11178, !srcloc !11091
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #8, !dbg !11179, !srcloc !11094
  br label %if.end31.i.i87, !dbg !11180

if.end31.i.i87:                                   ; preds = %if.then24.i.i81, %if.end10.i.i80
  %59 = load i32, i32* %__ret_warn_on.i.i52, align 4, !dbg !11006
  %tobool32.i.i82 = icmp ne i32 %59, 0, !dbg !11006
  %lnot33.i.i83 = xor i1 %tobool32.i.i82, true, !dbg !11006
  %lnot.ext36.i.i84 = zext i1 %tobool32.i.i82 to i32, !dbg !11006
  %conv37.i.i85 = sext i32 %lnot.ext36.i.i84 to i64, !dbg !11006
  store i64 %conv37.i.i85, i64* %tmp.i.i53, align 8, !dbg !11177
  %60 = load i64, i64* %tmp.i.i53, align 8, !dbg !11006
  %tobool38.i.i86 = icmp ne i64 %60, 0, !dbg !11181
  br i1 %tobool38.i.i86, label %if.then39.i.i88, label %if.end40.i.i90, !dbg !11182

if.then39.i.i88:                                  ; preds = %if.end31.i.i87
  store i1 false, i1* %retval.i.i47, align 1, !dbg !11183
  br label %check_copy_size.exit.i94, !dbg !11183

if.end40.i.i90:                                   ; preds = %if.end31.i.i87
  %61 = load i8*, i8** %addr.addr.i.i48, align 8, !dbg !11184
  %62 = load i64, i64* %bytes.addr.i.i49, align 8, !dbg !11185
  %63 = load i8, i8* %is_source.addr.i.i50, align 1, !dbg !11186
  %tobool41.i.i89 = trunc i8 %63 to i1, !dbg !11186
  call void @check_object_size(i8* %61, i64 %62, i1 zeroext %tobool41.i.i89) #12, !dbg !11187
  store i1 true, i1* %retval.i.i47, align 1, !dbg !11188
  br label %check_copy_size.exit.i94, !dbg !11188

check_copy_size.exit.i94:                         ; preds = %if.end40.i.i90, %if.then39.i.i88, %if.end9.i.i72
  %64 = load i1, i1* %retval.i.i47, align 1, !dbg !11189
  %lnot.i91 = xor i1 %64, true, !dbg !11162
  %lnot.ext.i92 = zext i1 %64 to i32, !dbg !11162
  %conv.i93 = sext i32 %lnot.ext.i92 to i64, !dbg !11162
  br i1 %64, label %if.then.i96, label %copy_from_user.exit97, !dbg !11190

if.then.i96:                                      ; preds = %check_copy_size.exit.i94
  %65 = load i8*, i8** %to.addr.i54, align 8, !dbg !11191
  %66 = load i8*, i8** %from.addr.i55, align 8, !dbg !11192
  %67 = load i64, i64* %n.addr.i56, align 8, !dbg !11193
  %call2.i95 = call i64 @_copy_from_user(i8* %65, i8* %66, i64 %67) #12, !dbg !11194
  store i64 %call2.i95, i64* %n.addr.i56, align 8, !dbg !11195
  br label %copy_from_user.exit97, !dbg !11196

copy_from_user.exit97:                            ; preds = %check_copy_size.exit.i94, %if.then.i96
  %68 = load i64, i64* %n.addr.i56, align 8, !dbg !11197
  %tobool23 = icmp ne i64 %68, 0, !dbg !11198
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !11199

if.then24:                                        ; preds = %copy_from_user.exit97
  store i32 -14, i32* %rc, align 4, !dbg !11200
  br label %sw.epilog, !dbg !11202

if.end25:                                         ; preds = %copy_from_user.exit97
  %call26 = call zeroext i1 @capable(i32 12) #10, !dbg !11203
  br i1 %call26, label %if.end28, label %if.then27, !dbg !11205

if.then27:                                        ; preds = %if.end25
  store i32 -1, i32* %rc, align 4, !dbg !11206
  br label %sw.epilog, !dbg !11208

if.end28:                                         ; preds = %if.end25
  %arrayidx29 = getelementptr [21 x i8], [21 x i8]* %domain, i64 0, i64 20, !dbg !11209
  store i8 0, i8* %arrayidx29, align 4, !dbg !11210
  store i32 -22, i32* %rc, align 4, !dbg !11211
  store i32 0, i32* %i, align 4, !dbg !11212
  br label %for.cond, !dbg !11214

for.cond:                                         ; preds = %for.inc, %if.end28
  %69 = load i32, i32* %i, align 4, !dbg !11215
  %conv30 = sext i32 %69 to i64, !dbg !11215
  %cmp = icmp ult i64 %conv30, 8, !dbg !11217
  br i1 %cmp, label %for.body, label %for.end, !dbg !11218

for.body:                                         ; preds = %for.cond
  %70 = load i32, i32* %i, align 4, !dbg !11219
  %idxprom = sext i32 %70 to i64, !dbg !11222
  %arrayidx32 = getelementptr [8 x %struct.anon.136], [8 x %struct.anon.136]* @channel_table, i64 0, i64 %idxprom, !dbg !11222
  %name = getelementptr inbounds %struct.anon.136, %struct.anon.136* %arrayidx32, i32 0, i32 3, !dbg !11223
  %71 = load i8*, i8** %name, align 8, !dbg !11223
  %arraydecay33 = getelementptr inbounds [21 x i8], [21 x i8]* %domain, i64 0, i64 0, !dbg !11224
  %call34 = call i32 @strcasecmp(i8* %71, i8* %arraydecay33) #10, !dbg !11225
  %tobool35 = icmp ne i32 %call34, 0, !dbg !11225
  br i1 %tobool35, label %if.end39, label %if.then36, !dbg !11226

if.then36:                                        ; preds = %for.body
  %72 = load i32, i32* %i, align 4, !dbg !11227
  %idxprom37 = sext i32 %72 to i64, !dbg !11229
  %arrayidx38 = getelementptr [8 x %struct.anon.136], [8 x %struct.anon.136]* @channel_table, i64 0, i64 %idxprom37, !dbg !11229
  %reg_domain = getelementptr inbounds %struct.anon.136, %struct.anon.136* %arrayidx38, i32 0, i32 0, !dbg !11230
  %73 = load i32, i32* %reg_domain, align 8, !dbg !11230
  %74 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !11231
  %config_reg_domain = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %74, i32 0, i32 49, !dbg !11232
  store i32 %73, i32* %config_reg_domain, align 4, !dbg !11233
  store i32 0, i32* %rc, align 4, !dbg !11234
  br label %if.end39, !dbg !11235

if.end39:                                         ; preds = %if.then36, %for.body
  br label %for.inc, !dbg !11236

for.inc:                                          ; preds = %if.end39
  %75 = load i32, i32* %i, align 4, !dbg !11237
  %inc = add i32 %75, 1, !dbg !11237
  store i32 %inc, i32* %i, align 4, !dbg !11237
  br label %for.cond, !dbg !11238, !llvm.loop !11239

for.end:                                          ; preds = %for.cond
  %76 = load i32, i32* %rc, align 4, !dbg !11241
  %cmp40 = icmp eq i32 %76, 0, !dbg !11243
  br i1 %cmp40, label %land.lhs.true, label %if.end46, !dbg !11244

land.lhs.true:                                    ; preds = %for.end
  %77 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !11245
  %station_state = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %77, i32 0, i32 42, !dbg !11246
  %78 = load i32, i32* %station_state, align 4, !dbg !11246
  %cmp42 = icmp ne i32 %78, 6, !dbg !11247
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !11248

if.then44:                                        ; preds = %land.lhs.true
  %79 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11249
  %call45 = call i32 @atmel_open(%struct.net_device* %79) #10, !dbg !11250
  store i32 %call45, i32* %rc, align 4, !dbg !11251
  br label %if.end46, !dbg !11252

if.end46:                                         ; preds = %if.then44, %land.lhs.true, %for.end
  br label %sw.epilog, !dbg !11253

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %rc, align 4, !dbg !11254
  br label %sw.epilog, !dbg !11255

sw.epilog:                                        ; preds = %sw.default, %if.end46, %if.then27, %if.then24, %if.end11, %if.then8, %if.then4, %if.then, %sw.bb
  %80 = load i32, i32* %rc, align 4, !dbg !11256
  ret i32 %80, !dbg !11257
}

; Function Attrs: noredzone
declare dso_local void @wireless_send_event(%struct.net_device*, i32, %union.iwreq_data*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_enter_state(%struct.atmel_private* %priv, i32 %new_state) #0 !dbg !11258 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %new_state.addr = alloca i32, align 4
  %old_state = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !11259, metadata !DIExpression()), !dbg !11260
  store i32 %new_state, i32* %new_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_state.addr, metadata !11261, metadata !DIExpression()), !dbg !11262
  call void @llvm.dbg.declare(metadata i32* %old_state, metadata !11263, metadata !DIExpression()), !dbg !11264
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11265
  %station_state = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 42, !dbg !11266
  %1 = load i32, i32* %station_state, align 4, !dbg !11266
  store i32 %1, i32* %old_state, align 4, !dbg !11264
  %2 = load i32, i32* %new_state.addr, align 4, !dbg !11267
  %3 = load i32, i32* %old_state, align 4, !dbg !11269
  %cmp = icmp eq i32 %2, %3, !dbg !11270
  br i1 %cmp, label %if.then, label %if.end, !dbg !11271

if.then:                                          ; preds = %entry
  br label %if.end13, !dbg !11272

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %new_state.addr, align 4, !dbg !11273
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11274
  %station_state1 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %5, i32 0, i32 42, !dbg !11275
  store i32 %4, i32* %station_state1, align 4, !dbg !11276
  %6 = load i32, i32* %new_state.addr, align 4, !dbg !11277
  %cmp2 = icmp eq i32 %6, 4, !dbg !11279
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !11280

if.then3:                                         ; preds = %if.end
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11281
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %7, i32 0, i32 7, !dbg !11283
  %8 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11283
  call void @netif_start_queue(%struct.net_device* %8) #10, !dbg !11284
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11285
  %dev4 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %9, i32 0, i32 7, !dbg !11286
  %10 = load %struct.net_device*, %struct.net_device** %dev4, align 8, !dbg !11286
  call void @netif_carrier_on(%struct.net_device* %10) #10, !dbg !11287
  br label %if.end5, !dbg !11288

if.end5:                                          ; preds = %if.then3, %if.end
  %11 = load i32, i32* %old_state, align 4, !dbg !11289
  %cmp6 = icmp eq i32 %11, 4, !dbg !11291
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !11292

if.then7:                                         ; preds = %if.end5
  %12 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11293
  %dev8 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %12, i32 0, i32 7, !dbg !11295
  %13 = load %struct.net_device*, %struct.net_device** %dev8, align 8, !dbg !11295
  call void @netif_carrier_off(%struct.net_device* %13) #10, !dbg !11296
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11297
  %dev9 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %14, i32 0, i32 7, !dbg !11299
  %15 = load %struct.net_device*, %struct.net_device** %dev9, align 8, !dbg !11299
  %call = call zeroext i1 @netif_running(%struct.net_device* %15) #10, !dbg !11300
  br i1 %call, label %if.then10, label %if.end12, !dbg !11301

if.then10:                                        ; preds = %if.then7
  %16 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11302
  %dev11 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %16, i32 0, i32 7, !dbg !11303
  %17 = load %struct.net_device*, %struct.net_device** %dev11, align 8, !dbg !11303
  call void @netif_stop_queue(%struct.net_device* %17) #10, !dbg !11304
  br label %if.end12, !dbg !11304

if.end12:                                         ; preds = %if.then10, %if.then7
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11305
  %last_beacon_timestamp = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %18, i32 0, i32 80, !dbg !11306
  store i64 0, i64* %last_beacon_timestamp, align 8, !dbg !11307
  br label %if.end13, !dbg !11308

if.end13:                                         ; preds = %if.then, %if.end12, %if.end5
  ret void, !dbg !11309
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_start_queue(%struct.net_device* %dev) #0 !dbg !11310 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !11311, metadata !DIExpression()), !dbg !11315
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11317, metadata !DIExpression()), !dbg !11318
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11319
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #10, !dbg !11320
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !11321
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !11322
  call void @clear_bit(i64 0, i64* %state.i) #12, !dbg !11323
  ret void, !dbg !11324
}

; Function Attrs: noredzone
declare dso_local void @netif_carrier_on(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_running(%struct.net_device* %dev) #0 !dbg !11325 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11328, metadata !DIExpression()), !dbg !11329
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11330
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !11331
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #10, !dbg !11332
  ret i1 %call, !dbg !11333
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_stop_queue(%struct.net_device* %dev) #0 !dbg !11334 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !11335, metadata !DIExpression()), !dbg !11337
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11339, metadata !DIExpression()), !dbg !11340
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11341
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #10, !dbg !11342
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !11343
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !11344
  call void @set_bit(i64 0, i64* %state.i) #12, !dbg !11345
  ret void, !dbg !11346
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %dev, i32 %index) #0 !dbg !11347 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %index.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11350, metadata !DIExpression()), !dbg !11351
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !11352, metadata !DIExpression()), !dbg !11353
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11354
  %_tx = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 86, !dbg !11355
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %_tx, align 8, !dbg !11355
  %2 = load i32, i32* %index.addr, align 4, !dbg !11356
  %idxprom = zext i32 %2 to i64, !dbg !11354
  %arrayidx = getelementptr %struct.netdev_queue, %struct.netdev_queue* %1, i64 %idxprom, !dbg !11354
  ret %struct.netdev_queue* %arrayidx, !dbg !11357
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !11358 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11364, metadata !DIExpression()), !dbg !11367
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11369, metadata !DIExpression()), !dbg !11370
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !11371, metadata !DIExpression()), !dbg !11379
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11381, metadata !DIExpression()), !dbg !11382
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11383, metadata !DIExpression()), !dbg !11384
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11385, metadata !DIExpression()), !dbg !11386
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !11387
  %1 = load i64, i64* %nr.addr, align 8, !dbg !11388
  %div = sdiv i64 %1, 64, !dbg !11388
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !11389
  %2 = bitcast i64* %add.ptr to i8*, !dbg !11387
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !11390
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11391
  %conv.i = trunc i64 %4 to i32, !dbg !11391
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !11392
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !11393
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !11393
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !11393
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11394
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !11395
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !11396
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #8, !dbg !11398
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !11399

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !11400
  %12 = bitcast i64* %11 to i8*, !dbg !11400
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !11400
  %shr.i = ashr i64 %13, 3, !dbg !11400
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !11400
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !11402
  %and.i = and i64 %14, 7, !dbg !11402
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !11402
  %shl.i = shl i32 1, %sh_prom.i, !dbg !11402
  %neg.i = xor i32 %shl.i, -1, !dbg !11403
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #8, !dbg !11404, !srcloc !11405
  br label %arch_clear_bit.exit, !dbg !11406

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !11407
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !11409
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #8, !dbg !11410, !srcloc !11411
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !11412
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !11413 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !11417, metadata !DIExpression()), !dbg !11418
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11419, metadata !DIExpression()), !dbg !11420
  ret i1 true, !dbg !11421
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !11422 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11426, metadata !DIExpression()), !dbg !11427
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11428, metadata !DIExpression()), !dbg !11429
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11430, metadata !DIExpression()), !dbg !11431
  ret void, !dbg !11432
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !11433 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !11439, metadata !DIExpression()), !dbg !11441
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !11443, metadata !DIExpression()), !dbg !11444
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !11445, metadata !DIExpression()), !dbg !11446
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11447, metadata !DIExpression()), !dbg !11449
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11451, metadata !DIExpression()), !dbg !11452
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !11453, metadata !DIExpression()), !dbg !11455
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11457, metadata !DIExpression()), !dbg !11458
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11459, metadata !DIExpression()), !dbg !11460
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11461, metadata !DIExpression()), !dbg !11462
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !11463
  %1 = load i64, i64* %nr.addr, align 8, !dbg !11464
  %div = sdiv i64 %1, 64, !dbg !11464
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !11465
  %2 = bitcast i64* %add.ptr to i8*, !dbg !11463
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !11466
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11467
  %conv.i = trunc i64 %4 to i32, !dbg !11467
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #12, !dbg !11468
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !11469
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !11469
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #12, !dbg !11469
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11470
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !11470
  br i1 %8, label %cond.true, label %cond.false, !dbg !11470

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !11470
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !11470
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !11471
  %and.i = and i64 %11, 63, !dbg !11472
  %shl.i = shl i64 1, %and.i, !dbg !11473
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !11474
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !11475
  %shr.i = ashr i64 %13, 6, !dbg !11476
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !11474
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !11474
  %and1.i = and i64 %shl.i, %14, !dbg !11477
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !11478
  %conv = zext i1 %cmp.i to i32, !dbg !11470
  br label %cond.end, !dbg !11470

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !11470
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !11470
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !11479
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !11480
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #8, !dbg !11481, !srcloc !11482
  store i8 %19, i8* %oldbit.i, align 1, !dbg !11481
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !11483
  %tobool.i = trunc i8 %20 to i1, !dbg !11483
  %conv2 = zext i1 %tobool.i to i32, !dbg !11470
  br label %cond.end, !dbg !11470

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !11470
  %tobool = icmp ne i32 %cond, 0, !dbg !11470
  ret i1 %tobool, !dbg !11484
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !11485 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !11486, metadata !DIExpression()), !dbg !11487
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11488, metadata !DIExpression()), !dbg !11489
  ret i1 true, !dbg !11490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !11491 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11492, metadata !DIExpression()), !dbg !11494
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11496, metadata !DIExpression()), !dbg !11497
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !11371, metadata !DIExpression()), !dbg !11498
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11381, metadata !DIExpression()), !dbg !11500
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11501, metadata !DIExpression()), !dbg !11502
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11503, metadata !DIExpression()), !dbg !11504
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !11505
  %1 = load i64, i64* %nr.addr, align 8, !dbg !11506
  %div = sdiv i64 %1, 64, !dbg !11506
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !11507
  %2 = bitcast i64* %add.ptr to i8*, !dbg !11505
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !11508
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11509
  %conv.i = trunc i64 %4 to i32, !dbg !11509
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !11510
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !11511
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !11511
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !11511
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11512
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !11513
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !11514
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #8, !dbg !11516
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !11517

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !11518
  %12 = bitcast i64* %11 to i8*, !dbg !11518
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !11518
  %shr.i = ashr i64 %13, 3, !dbg !11518
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !11518
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !11520
  %and.i = and i64 %14, 7, !dbg !11520
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !11520
  %shl.i = shl i32 1, %sh_prom.i, !dbg !11520
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #8, !dbg !11521, !srcloc !11522
  br label %arch_set_bit.exit, !dbg !11523

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !11524
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !11526
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #8, !dbg !11527, !srcloc !11528
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !11529
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @consume_skb(%struct.sk_buff* %skb) #0 !dbg !11530 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !11531, metadata !DIExpression()), !dbg !11532
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11533
  call void @kfree_skb(%struct.sk_buff* %0) #10, !dbg !11534
  ret void, !dbg !11535
}

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_lock_bh(%struct.spinlock* %lock) #6 !dbg !11536 {
entry:
  %val.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i.i, metadata !11539, metadata !DIExpression()), !dbg !11542
  %pao_ID__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pao_ID__.i.i, metadata !11550, metadata !DIExpression()), !dbg !11553
  %pto_val__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pto_val__.i.i, metadata !11554, metadata !DIExpression()), !dbg !11558
  %ip.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %ip.addr.i, metadata !11559, metadata !DIExpression()), !dbg !11560
  %cnt.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr.i, metadata !11561, metadata !DIExpression()), !dbg !11562
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !11563, metadata !DIExpression()), !dbg !11564
  br label %do.body, !dbg !11565

do.body:                                          ; preds = %entry
  br label %__here, !dbg !11566

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !11568), !dbg !11566
  store i64 ptrtoint (i8* blockaddress(@spin_lock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !11566
  %0 = load i64, i64* %tmp, align 8, !dbg !11566
  store i64 %0, i64* %ip.addr.i, align 8
  store i32 512, i32* %cnt.addr.i, align 4
  %1 = load i32, i32* %cnt.addr.i, align 4, !dbg !11569
  store i32 %1, i32* %val.addr.i.i, align 4
  %2 = load i32, i32* %val.addr.i.i, align 4, !dbg !11553
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #8, !dbg !11553
  br i1 %3, label %land.lhs.true.i.i, label %cond.false.i.i, !dbg !11553

land.lhs.true.i.i:                                ; preds = %__here
  %4 = load i32, i32* %val.addr.i.i, align 4, !dbg !11553
  %cmp.i.i = icmp eq i32 %4, 1, !dbg !11553
  br i1 %cmp.i.i, label %cond.true.i.i, label %lor.lhs.false.i.i, !dbg !11553

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i
  %5 = load i32, i32* %val.addr.i.i, align 4, !dbg !11553
  %cmp1.i.i = icmp eq i32 %5, -1, !dbg !11553
  br i1 %cmp1.i.i, label %cond.true.i.i, label %cond.false.i.i, !dbg !11553

cond.true.i.i:                                    ; preds = %lor.lhs.false.i.i, %land.lhs.true.i.i
  %6 = load i32, i32* %val.addr.i.i, align 4, !dbg !11553
  br label %__local_bh_disable_ip.exit, !dbg !11553

cond.false.i.i:                                   ; preds = %lor.lhs.false.i.i, %__here
  br label %__local_bh_disable_ip.exit, !dbg !11553

__local_bh_disable_ip.exit:                       ; preds = %cond.true.i.i, %cond.false.i.i
  %cond.i.i = phi i32 [ %6, %cond.true.i.i ], [ 0, %cond.false.i.i ], !dbg !11553
  store i32 %cond.i.i, i32* %pao_ID__.i.i, align 4, !dbg !11553
  %7 = load i32, i32* %val.addr.i.i, align 4, !dbg !11558
  %conv.i.i = sext i32 %7 to i64, !dbg !11558
  %and.i.i = and i64 %conv.i.i, 4294967295, !dbg !11558
  %conv3.i.i = trunc i64 %and.i.i to i32, !dbg !11558
  store i32 %conv3.i.i, i32* %pto_val__.i.i, align 4, !dbg !11558
  %8 = load i32, i32* %pto_val__.i.i, align 4, !dbg !11558
  call void asm "addl $1, $0", "=*m,ri,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count, i32 %8, i32* @__preempt_count) #8, !dbg !11558, !srcloc !11570
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11571, !srcloc !11572
  br label %do.body1, !dbg !11573

do.body1:                                         ; preds = %__local_bh_disable_ip.exit
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !11574
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !11574
  %rlock = bitcast %union.anon.46* %10 to %struct.raw_spinlock*, !dbg !11574
  br label %do.end, !dbg !11574

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !11573

do.end2:                                          ; preds = %do.end
  ret void, !dbg !11576

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !11577 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !11581, metadata !DIExpression()), !dbg !11582
  %call = call i64 @arch_local_save_flags() #10, !dbg !11583
  store i64 %call, i64* %f, align 8, !dbg !11584
  call void @arch_local_irq_disable() #10, !dbg !11585
  %0 = load i64, i64* %f, align 8, !dbg !11586
  ret i64 %0, !dbg !11587
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @find_tx_buff(%struct.atmel_private* %priv, i16 zeroext %len) #0 !dbg !11588 {
entry:
  %retval = alloca i16, align 2
  %priv.addr = alloca %struct.atmel_private*, align 8
  %len.addr = alloca i16, align 2
  %bottom_free = alloca i16, align 2
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !11591, metadata !DIExpression()), !dbg !11592
  store i16 %len, i16* %len.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %len.addr, metadata !11593, metadata !DIExpression()), !dbg !11594
  call void @llvm.dbg.declare(metadata i16* %bottom_free, metadata !11595, metadata !DIExpression()), !dbg !11596
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11597
  %host_info = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 41, !dbg !11598
  %tx_buff_size = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info, i32 0, i32 5, !dbg !11599
  %1 = load i16, i16* %tx_buff_size, align 2, !dbg !11599
  %conv = zext i16 %1 to i32, !dbg !11597
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11600
  %tx_buff_tail = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 25, !dbg !11601
  %3 = load i16, i16* %tx_buff_tail, align 2, !dbg !11601
  %conv1 = zext i16 %3 to i32, !dbg !11600
  %sub = sub i32 %conv, %conv1, !dbg !11602
  %conv2 = trunc i32 %sub to i16, !dbg !11597
  store i16 %conv2, i16* %bottom_free, align 2, !dbg !11596
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11603
  %tx_desc_free = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 19, !dbg !11605
  %5 = load i16, i16* %tx_desc_free, align 2, !dbg !11605
  %conv3 = zext i16 %5 to i32, !dbg !11603
  %cmp = icmp eq i32 %conv3, 3, !dbg !11606
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11607

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11608
  %tx_free_mem = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 23, !dbg !11609
  %7 = load i16, i16* %tx_free_mem, align 2, !dbg !11609
  %conv5 = zext i16 %7 to i32, !dbg !11608
  %8 = load i16, i16* %len.addr, align 2, !dbg !11610
  %conv6 = zext i16 %8 to i32, !dbg !11610
  %cmp7 = icmp slt i32 %conv5, %conv6, !dbg !11611
  br i1 %cmp7, label %if.then, label %if.end, !dbg !11612

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i16 0, i16* %retval, align 2, !dbg !11613
  br label %return, !dbg !11613

if.end:                                           ; preds = %lor.lhs.false
  %9 = load i16, i16* %bottom_free, align 2, !dbg !11614
  %conv9 = zext i16 %9 to i32, !dbg !11614
  %10 = load i16, i16* %len.addr, align 2, !dbg !11616
  %conv10 = zext i16 %10 to i32, !dbg !11616
  %cmp11 = icmp sge i32 %conv9, %conv10, !dbg !11617
  br i1 %cmp11, label %if.then13, label %if.end19, !dbg !11618

if.then13:                                        ; preds = %if.end
  %11 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11619
  %host_info14 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %11, i32 0, i32 41, !dbg !11620
  %tx_buff_pos = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info14, i32 0, i32 4, !dbg !11621
  %12 = load i16, i16* %tx_buff_pos, align 2, !dbg !11621
  %conv15 = zext i16 %12 to i32, !dbg !11619
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11622
  %tx_buff_tail16 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %13, i32 0, i32 25, !dbg !11623
  %14 = load i16, i16* %tx_buff_tail16, align 2, !dbg !11623
  %conv17 = zext i16 %14 to i32, !dbg !11622
  %add = add i32 %conv15, %conv17, !dbg !11624
  %conv18 = trunc i32 %add to i16, !dbg !11619
  store i16 %conv18, i16* %retval, align 2, !dbg !11625
  br label %return, !dbg !11625

if.end19:                                         ; preds = %if.end
  %15 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11626
  %tx_free_mem20 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %15, i32 0, i32 23, !dbg !11628
  %16 = load i16, i16* %tx_free_mem20, align 2, !dbg !11628
  %conv21 = zext i16 %16 to i32, !dbg !11626
  %17 = load i16, i16* %bottom_free, align 2, !dbg !11629
  %conv22 = zext i16 %17 to i32, !dbg !11629
  %sub23 = sub i32 %conv21, %conv22, !dbg !11630
  %18 = load i16, i16* %len.addr, align 2, !dbg !11631
  %conv24 = zext i16 %18 to i32, !dbg !11631
  %cmp25 = icmp sge i32 %sub23, %conv24, !dbg !11632
  br i1 %cmp25, label %if.then27, label %if.end31, !dbg !11633

if.then27:                                        ; preds = %if.end19
  %19 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11634
  %tx_buff_tail28 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %19, i32 0, i32 25, !dbg !11636
  store i16 0, i16* %tx_buff_tail28, align 2, !dbg !11637
  %20 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11638
  %host_info29 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %20, i32 0, i32 41, !dbg !11639
  %tx_buff_pos30 = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info29, i32 0, i32 4, !dbg !11640
  %21 = load i16, i16* %tx_buff_pos30, align 2, !dbg !11640
  store i16 %21, i16* %retval, align 2, !dbg !11641
  br label %return, !dbg !11641

if.end31:                                         ; preds = %if.end19
  store i16 0, i16* %retval, align 2, !dbg !11642
  br label %return, !dbg !11642

return:                                           ; preds = %if.end31, %if.then27, %if.then13, %if.then
  %22 = load i16, i16* %retval, align 2, !dbg !11643
  ret i16 %22, !dbg !11643
}

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_unlock_bh(%struct.spinlock* %lock) #6 !dbg !11644 {
entry:
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !11645, metadata !DIExpression()), !dbg !11646
  br label %do.body, !dbg !11647

do.body:                                          ; preds = %entry
  br label %__here, !dbg !11648

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !11651), !dbg !11648
  store i64 ptrtoint (i8* blockaddress(@spin_unlock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !11648
  %0 = load i64, i64* %tmp, align 8, !dbg !11648
  call void @__local_bh_enable_ip(i64 %0, i32 512) #10, !dbg !11652
  br label %do.body1, !dbg !11652

do.body1:                                         ; preds = %__here
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !11653
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !11653
  %rlock = bitcast %union.anon.46* %2 to %struct.raw_spinlock*, !dbg !11653
  br label %do.end, !dbg !11653

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !11652

do.end2:                                          ; preds = %do.end
  ret void, !dbg !11655

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_copy_from_linear_data(%struct.sk_buff* %skb, i8* %to, i32 %len) #0 !dbg !11656 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %to.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !11659, metadata !DIExpression()), !dbg !11660
  store i8* %to, i8** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !11661, metadata !DIExpression()), !dbg !11662
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !11663, metadata !DIExpression()), !dbg !11664
  %0 = load i8*, i8** %to.addr, align 8, !dbg !11665
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11666
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !11667
  %2 = load i8*, i8** %data, align 8, !dbg !11667
  %3 = load i32, i32* %len.addr, align 4, !dbg !11668
  %conv = zext i32 %3 to i64, !dbg !11668
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %2, i64 %conv, i1 false), !dbg !11669
  ret void, !dbg !11670
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_copy_to_card(%struct.net_device* %dev, i16 zeroext %dest, i8* %src, i16 zeroext %len) #0 !dbg !11671 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %dest.addr = alloca i16, align 2
  %src.addr = alloca i8*, align 8
  %len.addr = alloca i16, align 2
  %i = alloca i32, align 4
  %lb = alloca i8, align 1
  %hb = alloca i8, align 1
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11674, metadata !DIExpression()), !dbg !11675
  store i16 %dest, i16* %dest.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %dest.addr, metadata !11676, metadata !DIExpression()), !dbg !11677
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !11678, metadata !DIExpression()), !dbg !11679
  store i16 %len, i16* %len.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %len.addr, metadata !11680, metadata !DIExpression()), !dbg !11681
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11682, metadata !DIExpression()), !dbg !11683
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11684
  %1 = load i16, i16* %dest.addr, align 2, !dbg !11685
  call void @atmel_writeAR(%struct.net_device* %0, i16 zeroext %1) #10, !dbg !11686
  %2 = load i16, i16* %dest.addr, align 2, !dbg !11687
  %conv = zext i16 %2 to i32, !dbg !11687
  %rem = srem i32 %conv, 2, !dbg !11689
  %tobool = icmp ne i32 %rem, 0, !dbg !11689
  br i1 %tobool, label %if.then, label %if.end, !dbg !11690

if.then:                                          ; preds = %entry
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11691
  %4 = load i8*, i8** %src.addr, align 8, !dbg !11693
  %5 = load i8, i8* %4, align 1, !dbg !11694
  call void @atmel_write8(%struct.net_device* %3, i16 zeroext 8, i8 zeroext %5) #10, !dbg !11695
  %6 = load i8*, i8** %src.addr, align 8, !dbg !11696
  %incdec.ptr = getelementptr i8, i8* %6, i32 1, !dbg !11696
  store i8* %incdec.ptr, i8** %src.addr, align 8, !dbg !11696
  %7 = load i16, i16* %len.addr, align 2, !dbg !11697
  %dec = add i16 %7, -1, !dbg !11697
  store i16 %dec, i16* %len.addr, align 2, !dbg !11697
  br label %if.end, !dbg !11698

if.end:                                           ; preds = %if.then, %entry
  %8 = load i16, i16* %len.addr, align 2, !dbg !11699
  %conv1 = zext i16 %8 to i32, !dbg !11699
  store i32 %conv1, i32* %i, align 4, !dbg !11701
  br label %for.cond, !dbg !11702

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !11703
  %cmp = icmp sgt i32 %9, 1, !dbg !11705
  br i1 %cmp, label %for.body, label %for.end, !dbg !11706

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %lb, metadata !11707, metadata !DIExpression()), !dbg !11709
  %10 = load i8*, i8** %src.addr, align 8, !dbg !11710
  %incdec.ptr3 = getelementptr i8, i8* %10, i32 1, !dbg !11710
  store i8* %incdec.ptr3, i8** %src.addr, align 8, !dbg !11710
  %11 = load i8, i8* %10, align 1, !dbg !11711
  store i8 %11, i8* %lb, align 1, !dbg !11709
  call void @llvm.dbg.declare(metadata i8* %hb, metadata !11712, metadata !DIExpression()), !dbg !11713
  %12 = load i8*, i8** %src.addr, align 8, !dbg !11714
  %incdec.ptr4 = getelementptr i8, i8* %12, i32 1, !dbg !11714
  store i8* %incdec.ptr4, i8** %src.addr, align 8, !dbg !11714
  %13 = load i8, i8* %12, align 1, !dbg !11715
  store i8 %13, i8* %hb, align 1, !dbg !11713
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11716
  %15 = load i8, i8* %lb, align 1, !dbg !11717
  %conv5 = zext i8 %15 to i32, !dbg !11717
  %16 = load i8, i8* %hb, align 1, !dbg !11718
  %conv6 = zext i8 %16 to i32, !dbg !11718
  %shl = shl i32 %conv6, 8, !dbg !11719
  %or = or i32 %conv5, %shl, !dbg !11720
  %conv7 = trunc i32 %or to i16, !dbg !11717
  call void @atmel_write16(%struct.net_device* %14, i16 zeroext 8, i16 zeroext %conv7) #10, !dbg !11721
  br label %for.inc, !dbg !11722

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !11723
  %sub = sub i32 %17, 2, !dbg !11723
  store i32 %sub, i32* %i, align 4, !dbg !11723
  br label %for.cond, !dbg !11724, !llvm.loop !11725

for.end:                                          ; preds = %for.cond
  %18 = load i32, i32* %i, align 4, !dbg !11727
  %tobool8 = icmp ne i32 %18, 0, !dbg !11727
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !11729

if.then9:                                         ; preds = %for.end
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11730
  %20 = load i8*, i8** %src.addr, align 8, !dbg !11731
  %21 = load i8, i8* %20, align 1, !dbg !11732
  call void @atmel_write8(%struct.net_device* %19, i16 zeroext 8, i8 zeroext %21) #10, !dbg !11733
  br label %if.end10, !dbg !11733

if.end10:                                         ; preds = %if.then9, %for.end
  ret void, !dbg !11734
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tx_update_descriptor(%struct.atmel_private* %priv, i32 %is_bcast, i16 zeroext %len, i16 zeroext %buff, i8 zeroext %type) #0 !dbg !11735 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %is_bcast.addr = alloca i32, align 4
  %len.addr = alloca i16, align 2
  %buff.addr = alloca i16, align 2
  %type.addr = alloca i8, align 1
  %cipher_type = alloca i32, align 4
  %cipher_length = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !11738, metadata !DIExpression()), !dbg !11739
  store i32 %is_bcast, i32* %is_bcast.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_bcast.addr, metadata !11740, metadata !DIExpression()), !dbg !11741
  store i16 %len, i16* %len.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %len.addr, metadata !11742, metadata !DIExpression()), !dbg !11743
  store i16 %buff, i16* %buff.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %buff.addr, metadata !11744, metadata !DIExpression()), !dbg !11745
  store i8 %type, i8* %type.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %type.addr, metadata !11746, metadata !DIExpression()), !dbg !11747
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11748
  %1 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11749
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11750
  %tx_desc_tail = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 21, !dbg !11751
  %3 = load i16, i16* %tx_desc_tail, align 2, !dbg !11751
  %call = call zeroext i16 @atmel_tx(%struct.atmel_private* %1, i16 zeroext 4, i16 zeroext %3) #10, !dbg !11752
  %4 = load i16, i16* %buff.addr, align 2, !dbg !11753
  call void @atmel_wmem16(%struct.atmel_private* %0, i16 zeroext %call, i16 zeroext %4) #10, !dbg !11754
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11755
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11756
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11757
  %tx_desc_tail1 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %7, i32 0, i32 21, !dbg !11758
  %8 = load i16, i16* %tx_desc_tail1, align 2, !dbg !11758
  %call2 = call zeroext i16 @atmel_tx(%struct.atmel_private* %6, i16 zeroext 6, i16 zeroext %8) #10, !dbg !11759
  %9 = load i16, i16* %len.addr, align 2, !dbg !11760
  call void @atmel_wmem16(%struct.atmel_private* %5, i16 zeroext %call2, i16 zeroext %9) #10, !dbg !11761
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11762
  %use_wpa = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 38, !dbg !11764
  %11 = load i32, i32* %use_wpa, align 4, !dbg !11764
  %tobool = icmp ne i32 %11, 0, !dbg !11762
  br i1 %tobool, label %if.end, label %if.then, !dbg !11765

if.then:                                          ; preds = %entry
  %12 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11766
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11767
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11768
  %tx_desc_tail3 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %14, i32 0, i32 21, !dbg !11769
  %15 = load i16, i16* %tx_desc_tail3, align 2, !dbg !11769
  %call4 = call zeroext i16 @atmel_tx(%struct.atmel_private* %13, i16 zeroext 18, i16 zeroext %15) #10, !dbg !11770
  %16 = load i16, i16* %len.addr, align 2, !dbg !11771
  call void @atmel_wmem16(%struct.atmel_private* %12, i16 zeroext %call4, i16 zeroext %16) #10, !dbg !11772
  br label %if.end, !dbg !11772

if.end:                                           ; preds = %if.then, %entry
  %17 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11773
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11774
  %19 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11775
  %tx_desc_tail5 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %19, i32 0, i32 21, !dbg !11776
  %20 = load i16, i16* %tx_desc_tail5, align 2, !dbg !11776
  %call6 = call zeroext i16 @atmel_tx(%struct.atmel_private* %18, i16 zeroext 17, i16 zeroext %20) #10, !dbg !11777
  %21 = load i8, i8* %type.addr, align 1, !dbg !11778
  %conv = zext i8 %21 to i16, !dbg !11778
  call void @atmel_wmem8(%struct.atmel_private* %17, i16 zeroext %call6, i16 zeroext %conv) #10, !dbg !11779
  %22 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11780
  %23 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11781
  %24 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11782
  %tx_desc_tail7 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %24, i32 0, i32 21, !dbg !11783
  %25 = load i16, i16* %tx_desc_tail7, align 2, !dbg !11783
  %call8 = call zeroext i16 @atmel_tx(%struct.atmel_private* %23, i16 zeroext 11, i16 zeroext %25) #10, !dbg !11784
  %26 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11785
  %tx_rate = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %26, i32 0, i32 50, !dbg !11786
  %27 = load i32, i32* %tx_rate, align 8, !dbg !11786
  %conv9 = trunc i32 %27 to i16, !dbg !11785
  call void @atmel_wmem8(%struct.atmel_private* %22, i16 zeroext %call8, i16 zeroext %conv9) #10, !dbg !11787
  %28 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11788
  %29 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11789
  %30 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11790
  %tx_desc_tail10 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %30, i32 0, i32 21, !dbg !11791
  %31 = load i16, i16* %tx_desc_tail10, align 2, !dbg !11791
  %call11 = call zeroext i16 @atmel_tx(%struct.atmel_private* %29, i16 zeroext 10, i16 zeroext %31) #10, !dbg !11792
  call void @atmel_wmem8(%struct.atmel_private* %28, i16 zeroext %call11, i16 zeroext 0) #10, !dbg !11793
  %32 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11794
  %use_wpa12 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %32, i32 0, i32 38, !dbg !11796
  %33 = load i32, i32* %use_wpa12, align 4, !dbg !11796
  %tobool13 = icmp ne i32 %33, 0, !dbg !11794
  br i1 %tobool13, label %if.then14, label %if.end78, !dbg !11797

if.then14:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %cipher_type, metadata !11798, metadata !DIExpression()), !dbg !11800
  call void @llvm.dbg.declare(metadata i32* %cipher_length, metadata !11801, metadata !DIExpression()), !dbg !11802
  %34 = load i32, i32* %is_bcast.addr, align 4, !dbg !11803
  %tobool15 = icmp ne i32 %34, 0, !dbg !11803
  br i1 %tobool15, label %if.then16, label %if.else41, !dbg !11805

if.then16:                                        ; preds = %if.then14
  %35 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11806
  %group_cipher_suite = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %35, i32 0, i32 34, !dbg !11808
  %36 = load i8, i8* %group_cipher_suite, align 8, !dbg !11808
  %conv17 = zext i8 %36 to i32, !dbg !11806
  store i32 %conv17, i32* %cipher_type, align 4, !dbg !11809
  %37 = load i32, i32* %cipher_type, align 4, !dbg !11810
  %cmp = icmp eq i32 %37, 1, !dbg !11812
  br i1 %cmp, label %if.then21, label %lor.lhs.false, !dbg !11813

lor.lhs.false:                                    ; preds = %if.then16
  %38 = load i32, i32* %cipher_type, align 4, !dbg !11814
  %cmp19 = icmp eq i32 %38, 5, !dbg !11815
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !11816

if.then21:                                        ; preds = %lor.lhs.false, %if.then16
  store i32 8, i32* %cipher_length, align 4, !dbg !11817
  br label %if.end40, !dbg !11818

if.else:                                          ; preds = %lor.lhs.false
  %39 = load i32, i32* %cipher_type, align 4, !dbg !11819
  %cmp22 = icmp eq i32 %39, 2, !dbg !11821
  br i1 %cmp22, label %if.then24, label %if.else25, !dbg !11822

if.then24:                                        ; preds = %if.else
  store i32 12, i32* %cipher_length, align 4, !dbg !11823
  br label %if.end39, !dbg !11824

if.else25:                                        ; preds = %if.else
  %40 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11825
  %pairwise_cipher_suite = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %40, i32 0, i32 35, !dbg !11827
  %41 = load i8, i8* %pairwise_cipher_suite, align 1, !dbg !11827
  %conv26 = zext i8 %41 to i32, !dbg !11825
  %cmp27 = icmp eq i32 %conv26, 1, !dbg !11828
  br i1 %cmp27, label %if.then34, label %lor.lhs.false29, !dbg !11829

lor.lhs.false29:                                  ; preds = %if.else25
  %42 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11830
  %pairwise_cipher_suite30 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %42, i32 0, i32 35, !dbg !11831
  %43 = load i8, i8* %pairwise_cipher_suite30, align 1, !dbg !11831
  %conv31 = zext i8 %43 to i32, !dbg !11830
  %cmp32 = icmp eq i32 %conv31, 5, !dbg !11832
  br i1 %cmp32, label %if.then34, label %if.else37, !dbg !11833

if.then34:                                        ; preds = %lor.lhs.false29, %if.else25
  %44 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11834
  %pairwise_cipher_suite35 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %44, i32 0, i32 35, !dbg !11836
  %45 = load i8, i8* %pairwise_cipher_suite35, align 1, !dbg !11836
  %conv36 = zext i8 %45 to i32, !dbg !11834
  store i32 %conv36, i32* %cipher_type, align 4, !dbg !11837
  store i32 8, i32* %cipher_length, align 4, !dbg !11838
  br label %if.end38, !dbg !11839

if.else37:                                        ; preds = %lor.lhs.false29
  store i32 0, i32* %cipher_type, align 4, !dbg !11840
  store i32 0, i32* %cipher_length, align 4, !dbg !11842
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.then34
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then24
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then21
  br label %if.end71, !dbg !11843

if.else41:                                        ; preds = %if.then14
  %46 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11844
  %pairwise_cipher_suite42 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %46, i32 0, i32 35, !dbg !11846
  %47 = load i8, i8* %pairwise_cipher_suite42, align 1, !dbg !11846
  %conv43 = zext i8 %47 to i32, !dbg !11844
  store i32 %conv43, i32* %cipher_type, align 4, !dbg !11847
  %48 = load i32, i32* %cipher_type, align 4, !dbg !11848
  %cmp44 = icmp eq i32 %48, 1, !dbg !11850
  br i1 %cmp44, label %if.then49, label %lor.lhs.false46, !dbg !11851

lor.lhs.false46:                                  ; preds = %if.else41
  %49 = load i32, i32* %cipher_type, align 4, !dbg !11852
  %cmp47 = icmp eq i32 %49, 5, !dbg !11853
  br i1 %cmp47, label %if.then49, label %if.else50, !dbg !11854

if.then49:                                        ; preds = %lor.lhs.false46, %if.else41
  store i32 8, i32* %cipher_length, align 4, !dbg !11855
  br label %if.end70, !dbg !11856

if.else50:                                        ; preds = %lor.lhs.false46
  %50 = load i32, i32* %cipher_type, align 4, !dbg !11857
  %cmp51 = icmp eq i32 %50, 2, !dbg !11859
  br i1 %cmp51, label %if.then53, label %if.else54, !dbg !11860

if.then53:                                        ; preds = %if.else50
  store i32 12, i32* %cipher_length, align 4, !dbg !11861
  br label %if.end69, !dbg !11862

if.else54:                                        ; preds = %if.else50
  %51 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11863
  %group_cipher_suite55 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %51, i32 0, i32 34, !dbg !11865
  %52 = load i8, i8* %group_cipher_suite55, align 8, !dbg !11865
  %conv56 = zext i8 %52 to i32, !dbg !11863
  %cmp57 = icmp eq i32 %conv56, 1, !dbg !11866
  br i1 %cmp57, label %if.then64, label %lor.lhs.false59, !dbg !11867

lor.lhs.false59:                                  ; preds = %if.else54
  %53 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11868
  %group_cipher_suite60 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %53, i32 0, i32 34, !dbg !11869
  %54 = load i8, i8* %group_cipher_suite60, align 8, !dbg !11869
  %conv61 = zext i8 %54 to i32, !dbg !11868
  %cmp62 = icmp eq i32 %conv61, 5, !dbg !11870
  br i1 %cmp62, label %if.then64, label %if.else67, !dbg !11871

if.then64:                                        ; preds = %lor.lhs.false59, %if.else54
  %55 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11872
  %group_cipher_suite65 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %55, i32 0, i32 34, !dbg !11874
  %56 = load i8, i8* %group_cipher_suite65, align 8, !dbg !11874
  %conv66 = zext i8 %56 to i32, !dbg !11872
  store i32 %conv66, i32* %cipher_type, align 4, !dbg !11875
  store i32 8, i32* %cipher_length, align 4, !dbg !11876
  br label %if.end68, !dbg !11877

if.else67:                                        ; preds = %lor.lhs.false59
  store i32 0, i32* %cipher_type, align 4, !dbg !11878
  store i32 0, i32* %cipher_length, align 4, !dbg !11880
  br label %if.end68

if.end68:                                         ; preds = %if.else67, %if.then64
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then53
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then49
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.end40
  %57 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11881
  %58 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11882
  %59 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11883
  %tx_desc_tail72 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %59, i32 0, i32 21, !dbg !11884
  %60 = load i16, i16* %tx_desc_tail72, align 2, !dbg !11884
  %call73 = call zeroext i16 @atmel_tx(%struct.atmel_private* %58, i16 zeroext 13, i16 zeroext %60) #10, !dbg !11885
  %61 = load i32, i32* %cipher_type, align 4, !dbg !11886
  %conv74 = trunc i32 %61 to i16, !dbg !11886
  call void @atmel_wmem8(%struct.atmel_private* %57, i16 zeroext %call73, i16 zeroext %conv74) #10, !dbg !11887
  %62 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11888
  %63 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11889
  %64 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11890
  %tx_desc_tail75 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %64, i32 0, i32 21, !dbg !11891
  %65 = load i16, i16* %tx_desc_tail75, align 2, !dbg !11891
  %call76 = call zeroext i16 @atmel_tx(%struct.atmel_private* %63, i16 zeroext 14, i16 zeroext %65) #10, !dbg !11892
  %66 = load i32, i32* %cipher_length, align 4, !dbg !11893
  %conv77 = trunc i32 %66 to i16, !dbg !11893
  call void @atmel_wmem8(%struct.atmel_private* %62, i16 zeroext %call76, i16 zeroext %conv77) #10, !dbg !11894
  br label %if.end78, !dbg !11895

if.end78:                                         ; preds = %if.end71, %if.end
  %67 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11896
  %68 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11897
  %69 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11898
  %tx_desc_tail79 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %69, i32 0, i32 21, !dbg !11899
  %70 = load i16, i16* %tx_desc_tail79, align 2, !dbg !11899
  %call80 = call zeroext i16 @atmel_tx(%struct.atmel_private* %68, i16 zeroext 0, i16 zeroext %70) #10, !dbg !11900
  call void @atmel_wmem32(%struct.atmel_private* %67, i16 zeroext %call80, i32 -2147483648) #10, !dbg !11901
  %71 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11902
  %72 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11903
  %73 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11904
  %tx_desc_tail81 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %73, i32 0, i32 21, !dbg !11905
  %74 = load i16, i16* %tx_desc_tail81, align 2, !dbg !11905
  %call82 = call zeroext i16 @atmel_tx(%struct.atmel_private* %72, i16 zeroext 8, i16 zeroext %74) #10, !dbg !11906
  call void @atmel_wmem8(%struct.atmel_private* %71, i16 zeroext %call82, i16 zeroext 128) #10, !dbg !11907
  %75 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11908
  %tx_desc_previous = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %75, i32 0, i32 22, !dbg !11910
  %76 = load i16, i16* %tx_desc_previous, align 8, !dbg !11910
  %conv83 = zext i16 %76 to i32, !dbg !11908
  %77 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11911
  %tx_desc_tail84 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %77, i32 0, i32 21, !dbg !11912
  %78 = load i16, i16* %tx_desc_tail84, align 2, !dbg !11912
  %conv85 = zext i16 %78 to i32, !dbg !11911
  %cmp86 = icmp ne i32 %conv83, %conv85, !dbg !11913
  br i1 %cmp86, label %if.then88, label %if.end91, !dbg !11914

if.then88:                                        ; preds = %if.end78
  %79 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11915
  %80 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11916
  %81 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11917
  %tx_desc_previous89 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %81, i32 0, i32 22, !dbg !11918
  %82 = load i16, i16* %tx_desc_previous89, align 8, !dbg !11918
  %call90 = call zeroext i16 @atmel_tx(%struct.atmel_private* %80, i16 zeroext 0, i16 zeroext %82) #10, !dbg !11919
  call void @atmel_wmem32(%struct.atmel_private* %79, i16 zeroext %call90, i32 0) #10, !dbg !11920
  br label %if.end91, !dbg !11920

if.end91:                                         ; preds = %if.then88, %if.end78
  %83 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11921
  %tx_desc_tail92 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %83, i32 0, i32 21, !dbg !11922
  %84 = load i16, i16* %tx_desc_tail92, align 2, !dbg !11922
  %85 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11923
  %tx_desc_previous93 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %85, i32 0, i32 22, !dbg !11924
  store i16 %84, i16* %tx_desc_previous93, align 8, !dbg !11925
  %86 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11926
  %tx_desc_tail94 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %86, i32 0, i32 21, !dbg !11928
  %87 = load i16, i16* %tx_desc_tail94, align 2, !dbg !11928
  %conv95 = zext i16 %87 to i32, !dbg !11926
  %88 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11929
  %host_info = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %88, i32 0, i32 41, !dbg !11930
  %tx_desc_count = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info, i32 0, i32 7, !dbg !11931
  %89 = load i16, i16* %tx_desc_count, align 2, !dbg !11931
  %conv96 = zext i16 %89 to i32, !dbg !11929
  %sub = sub i32 %conv96, 1, !dbg !11932
  %cmp97 = icmp slt i32 %conv95, %sub, !dbg !11933
  br i1 %cmp97, label %if.then99, label %if.else101, !dbg !11934

if.then99:                                        ; preds = %if.end91
  %90 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11935
  %tx_desc_tail100 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %90, i32 0, i32 21, !dbg !11936
  %91 = load i16, i16* %tx_desc_tail100, align 2, !dbg !11937
  %inc = add i16 %91, 1, !dbg !11937
  store i16 %inc, i16* %tx_desc_tail100, align 2, !dbg !11937
  br label %if.end103, !dbg !11935

if.else101:                                       ; preds = %if.end91
  %92 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11938
  %tx_desc_tail102 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %92, i32 0, i32 21, !dbg !11939
  store i16 0, i16* %tx_desc_tail102, align 2, !dbg !11940
  br label %if.end103

if.end103:                                        ; preds = %if.else101, %if.then99
  %93 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11941
  %tx_desc_free = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %93, i32 0, i32 19, !dbg !11942
  %94 = load i16, i16* %tx_desc_free, align 2, !dbg !11943
  %dec = add i16 %94, -1, !dbg !11943
  store i16 %dec, i16* %tx_desc_free, align 2, !dbg !11943
  %95 = load i16, i16* %len.addr, align 2, !dbg !11944
  %conv104 = zext i16 %95 to i32, !dbg !11944
  %96 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !11945
  %tx_free_mem = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %96, i32 0, i32 23, !dbg !11946
  %97 = load i16, i16* %tx_free_mem, align 2, !dbg !11947
  %conv105 = zext i16 %97 to i32, !dbg !11947
  %sub106 = sub i32 %conv105, %conv104, !dbg !11947
  %conv107 = trunc i32 %sub106 to i16, !dbg !11947
  store i16 %conv107, i16* %tx_free_mem, align 2, !dbg !11947
  ret void, !dbg !11948
}

; Function Attrs: noredzone
declare dso_local void @kfree_skb(%struct.sk_buff*) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !11949 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !11950, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11953, metadata !DIExpression()), !dbg !11952
  %0 = load i64, i64* %__edi, align 8, !dbg !11952
  store i64 %0, i64* %__edi, align 8, !dbg !11952
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11954, metadata !DIExpression()), !dbg !11952
  %1 = load i64, i64* %__esi, align 8, !dbg !11952
  store i64 %1, i64* %__esi, align 8, !dbg !11952
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11955, metadata !DIExpression()), !dbg !11952
  %2 = load i64, i64* %__edx, align 8, !dbg !11952
  store i64 %2, i64* %__edx, align 8, !dbg !11952
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11956, metadata !DIExpression()), !dbg !11952
  %3 = load i64, i64* %__ecx, align 8, !dbg !11952
  store i64 %3, i64* %__ecx, align 8, !dbg !11952
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11957, metadata !DIExpression()), !dbg !11952
  %4 = load i64, i64* %__eax, align 8, !dbg !11952
  store i64 %4, i64* %__eax, align 8, !dbg !11952
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !11952
  %6 = call i64 @llvm.read_register.i64(metadata !8884), !dbg !11958
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #8, !dbg !11958, !srcloc !11961
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !11958
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !11958
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11958
  call void @llvm.write_register.i64(metadata !8884, i64 %asmresult1), !dbg !11958
  %8 = load i64, i64* %__eax, align 8, !dbg !11958
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !11962, metadata !DIExpression()), !dbg !11964
  store i64 -1, i64* %__mask, align 8, !dbg !11964
  %9 = load i64, i64* %__mask, align 8, !dbg !11964
  store i64 %9, i64* %tmp, align 8, !dbg !11964
  %10 = load i64, i64* %tmp, align 8, !dbg !11964
  %and = and i64 %8, %10, !dbg !11958
  store i64 %and, i64* %__ret, align 8, !dbg !11958
  %11 = load i64, i64* %__ret, align 8, !dbg !11952
  store i64 %11, i64* %tmp2, align 8, !dbg !11965
  %12 = load i64, i64* %tmp2, align 8, !dbg !11952
  ret i64 %12, !dbg !11966
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !11967 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11968, metadata !DIExpression()), !dbg !11970
  %0 = load i64, i64* %__edi, align 8, !dbg !11970
  store i64 %0, i64* %__edi, align 8, !dbg !11970
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11971, metadata !DIExpression()), !dbg !11970
  %1 = load i64, i64* %__esi, align 8, !dbg !11970
  store i64 %1, i64* %__esi, align 8, !dbg !11970
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11972, metadata !DIExpression()), !dbg !11970
  %2 = load i64, i64* %__edx, align 8, !dbg !11970
  store i64 %2, i64* %__edx, align 8, !dbg !11970
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11973, metadata !DIExpression()), !dbg !11970
  %3 = load i64, i64* %__ecx, align 8, !dbg !11970
  store i64 %3, i64* %__ecx, align 8, !dbg !11970
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11974, metadata !DIExpression()), !dbg !11970
  %4 = load i64, i64* %__eax, align 8, !dbg !11970
  store i64 %4, i64* %__eax, align 8, !dbg !11970
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !11970
  %6 = call i64 @llvm.read_register.i64(metadata !8884), !dbg !11970
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #8, !dbg !11970, !srcloc !11975
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !11970
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !11970
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11970
  call void @llvm.write_register.i64(metadata !8884, i64 %asmresult1), !dbg !11970
  ret void, !dbg !11976
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #7

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !11977 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !11980, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11982, metadata !DIExpression()), !dbg !11984
  %0 = load i64, i64* %__edi, align 8, !dbg !11984
  store i64 %0, i64* %__edi, align 8, !dbg !11984
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11985, metadata !DIExpression()), !dbg !11984
  %1 = load i64, i64* %__esi, align 8, !dbg !11984
  store i64 %1, i64* %__esi, align 8, !dbg !11984
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11986, metadata !DIExpression()), !dbg !11984
  %2 = load i64, i64* %__edx, align 8, !dbg !11984
  store i64 %2, i64* %__edx, align 8, !dbg !11984
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11987, metadata !DIExpression()), !dbg !11984
  %3 = load i64, i64* %__ecx, align 8, !dbg !11984
  store i64 %3, i64* %__ecx, align 8, !dbg !11984
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11988, metadata !DIExpression()), !dbg !11984
  %4 = load i64, i64* %__eax, align 8, !dbg !11984
  store i64 %4, i64* %__eax, align 8, !dbg !11984
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !11984
  %6 = call i64 @llvm.read_register.i64(metadata !8884), !dbg !11984
  %7 = load i64, i64* %f.addr, align 8, !dbg !11984
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #8, !dbg !11984, !srcloc !11989
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !11984
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !11984
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11984
  call void @llvm.write_register.i64(metadata !8884, i64 %asmresult1), !dbg !11984
  ret void, !dbg !11990
}

; Function Attrs: noredzone
declare dso_local void @__local_bh_enable_ip(i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_writeAR(%struct.net_device* %dev, i16 zeroext %data) #0 !dbg !11991 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %data.addr = alloca i16, align 2
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11992, metadata !DIExpression()), !dbg !11993
  store i16 %data, i16* %data.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %data.addr, metadata !11994, metadata !DIExpression()), !dbg !11995
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11996, metadata !DIExpression()), !dbg !11997
  %0 = load i16, i16* %data.addr, align 2, !dbg !11998
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11999
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 5, !dbg !12000
  %2 = load i64, i64* %base_addr, align 8, !dbg !12000
  %add = add i64 %2, 4, !dbg !12001
  %conv = trunc i64 %add to i32, !dbg !11999
  call void @outw(i16 zeroext %0, i32 %conv) #10, !dbg !12002
  store i32 0, i32* %i, align 4, !dbg !12003
  br label %for.cond, !dbg !12005

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i16, i16* %data.addr, align 2, !dbg !12006
  %conv1 = zext i16 %3 to i32, !dbg !12006
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12008
  %base_addr2 = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 5, !dbg !12009
  %5 = load i64, i64* %base_addr2, align 8, !dbg !12009
  %add3 = add i64 %5, 4, !dbg !12010
  %conv4 = trunc i64 %add3 to i32, !dbg !12008
  %call = call zeroext i16 @inw(i32 %conv4) #10, !dbg !12011
  %conv5 = zext i16 %call to i32, !dbg !12011
  %cmp = icmp ne i32 %conv1, %conv5, !dbg !12012
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12013

land.rhs:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !12014
  %cmp7 = icmp slt i32 %6, 10, !dbg !12015
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %7 = phi i1 [ false, %for.cond ], [ %cmp7, %land.rhs ], !dbg !12016
  br i1 %7, label %for.body, label %for.end, !dbg !12017

for.body:                                         ; preds = %land.end
  %8 = load i16, i16* %data.addr, align 2, !dbg !12018
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12019
  %base_addr9 = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 5, !dbg !12020
  %10 = load i64, i64* %base_addr9, align 8, !dbg !12020
  %add10 = add i64 %10, 4, !dbg !12021
  %conv11 = trunc i64 %add10 to i32, !dbg !12019
  call void @outw(i16 zeroext %8, i32 %conv11) #10, !dbg !12022
  br label %for.inc, !dbg !12022

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !12023
  %inc = add i32 %11, 1, !dbg !12023
  store i32 %inc, i32* %i, align 4, !dbg !12023
  br label %for.cond, !dbg !12024, !llvm.loop !12025

for.end:                                          ; preds = %land.end
  ret void, !dbg !12027
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_write8(%struct.net_device* %dev, i16 zeroext %offset, i8 zeroext %data) #0 !dbg !12028 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %offset.addr = alloca i16, align 2
  %data.addr = alloca i8, align 1
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12031, metadata !DIExpression()), !dbg !12032
  store i16 %offset, i16* %offset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %offset.addr, metadata !12033, metadata !DIExpression()), !dbg !12034
  store i8 %data, i8* %data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %data.addr, metadata !12035, metadata !DIExpression()), !dbg !12036
  %0 = load i8, i8* %data.addr, align 1, !dbg !12037
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12038
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 5, !dbg !12039
  %2 = load i64, i64* %base_addr, align 8, !dbg !12039
  %3 = load i16, i16* %offset.addr, align 2, !dbg !12040
  %conv = zext i16 %3 to i64, !dbg !12040
  %add = add i64 %2, %conv, !dbg !12041
  %conv1 = trunc i64 %add to i32, !dbg !12038
  call void @outb(i8 zeroext %0, i32 %conv1) #10, !dbg !12042
  ret void, !dbg !12043
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outw(i16 zeroext %value, i32 %port) #0 !dbg !12044 {
entry:
  %value.addr = alloca i16, align 2
  %port.addr = alloca i32, align 4
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !12048, metadata !DIExpression()), !dbg !12049
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12050, metadata !DIExpression()), !dbg !12049
  %0 = load i16, i16* %value.addr, align 2, !dbg !12049
  %1 = load i32, i32* %port.addr, align 4, !dbg !12049
  call void asm sideeffect "outw ${0:w}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i16 %0, i32 %1) #8, !dbg !12049, !srcloc !12051
  ret void, !dbg !12049
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @inw(i32 %port) #0 !dbg !12052 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i16, align 2
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12055, metadata !DIExpression()), !dbg !12056
  call void @llvm.dbg.declare(metadata i16* %value, metadata !12057, metadata !DIExpression()), !dbg !12056
  %0 = load i32, i32* %port.addr, align 4, !dbg !12056
  %1 = call i16 asm sideeffect "inw ${1:w}, ${0:w}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #8, !dbg !12056, !srcloc !12058
  store i16 %1, i16* %value, align 2, !dbg !12056
  %2 = load i16, i16* %value, align 2, !dbg !12056
  ret i16 %2, !dbg !12056
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outb(i8 zeroext %value, i32 %port) #0 !dbg !12059 {
entry:
  %value.addr = alloca i8, align 1
  %port.addr = alloca i32, align 4
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !12062, metadata !DIExpression()), !dbg !12063
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12064, metadata !DIExpression()), !dbg !12063
  %0 = load i8, i8* %value.addr, align 1, !dbg !12063
  %1 = load i32, i32* %port.addr, align 4, !dbg !12063
  call void asm sideeffect "outb ${0:b}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i8 %0, i32 %1) #8, !dbg !12063, !srcloc !12065
  ret void, !dbg !12063
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_wmem16(%struct.atmel_private* %priv, i16 zeroext %pos, i16 zeroext %data) #0 !dbg !12066 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %pos.addr = alloca i16, align 2
  %data.addr = alloca i16, align 2
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !12067, metadata !DIExpression()), !dbg !12068
  store i16 %pos, i16* %pos.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pos.addr, metadata !12069, metadata !DIExpression()), !dbg !12070
  store i16 %data, i16* %data.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %data.addr, metadata !12071, metadata !DIExpression()), !dbg !12072
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12073
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 7, !dbg !12074
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12074
  %2 = load i16, i16* %pos.addr, align 2, !dbg !12075
  call void @atmel_writeAR(%struct.net_device* %1, i16 zeroext %2) #10, !dbg !12076
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12077
  %dev1 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %3, i32 0, i32 7, !dbg !12078
  %4 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !12078
  %5 = load i16, i16* %data.addr, align 2, !dbg !12079
  call void @atmel_write16(%struct.net_device* %4, i16 zeroext 8, i16 zeroext %5) #10, !dbg !12080
  ret void, !dbg !12081
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @atmel_tx(%struct.atmel_private* %priv, i16 zeroext %offset, i16 zeroext %desc) #0 !dbg !12082 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %offset.addr = alloca i16, align 2
  %desc.addr = alloca i16, align 2
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !12085, metadata !DIExpression()), !dbg !12086
  store i16 %offset, i16* %offset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %offset.addr, metadata !12087, metadata !DIExpression()), !dbg !12088
  store i16 %desc, i16* %desc.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %desc.addr, metadata !12089, metadata !DIExpression()), !dbg !12090
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12091
  %host_info = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 41, !dbg !12092
  %tx_desc_pos = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info, i32 0, i32 6, !dbg !12093
  %1 = load i16, i16* %tx_desc_pos, align 2, !dbg !12093
  %conv = zext i16 %1 to i64, !dbg !12091
  %2 = load i16, i16* %desc.addr, align 2, !dbg !12094
  %conv1 = zext i16 %2 to i64, !dbg !12094
  %mul = mul i64 20, %conv1, !dbg !12095
  %add = add i64 %conv, %mul, !dbg !12096
  %3 = load i16, i16* %offset.addr, align 2, !dbg !12097
  %conv2 = zext i16 %3 to i64, !dbg !12097
  %add3 = add i64 %add, %conv2, !dbg !12098
  %conv4 = trunc i64 %add3 to i16, !dbg !12091
  ret i16 %conv4, !dbg !12099
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_wmem8(%struct.atmel_private* %priv, i16 zeroext %pos, i16 zeroext %data) #0 !dbg !12100 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %pos.addr = alloca i16, align 2
  %data.addr = alloca i16, align 2
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !12101, metadata !DIExpression()), !dbg !12102
  store i16 %pos, i16* %pos.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pos.addr, metadata !12103, metadata !DIExpression()), !dbg !12104
  store i16 %data, i16* %data.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %data.addr, metadata !12105, metadata !DIExpression()), !dbg !12106
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12107
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 7, !dbg !12108
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12108
  %2 = load i16, i16* %pos.addr, align 2, !dbg !12109
  call void @atmel_writeAR(%struct.net_device* %1, i16 zeroext %2) #10, !dbg !12110
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12111
  %dev1 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %3, i32 0, i32 7, !dbg !12112
  %4 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !12112
  %5 = load i16, i16* %data.addr, align 2, !dbg !12113
  %conv = trunc i16 %5 to i8, !dbg !12113
  call void @atmel_write8(%struct.net_device* %4, i16 zeroext 8, i8 zeroext %conv) #10, !dbg !12114
  ret void, !dbg !12115
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_wmem32(%struct.atmel_private* %priv, i16 zeroext %pos, i32 %data) #0 !dbg !12116 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %pos.addr = alloca i16, align 2
  %data.addr = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !12119, metadata !DIExpression()), !dbg !12120
  store i16 %pos, i16* %pos.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pos.addr, metadata !12121, metadata !DIExpression()), !dbg !12122
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !12123, metadata !DIExpression()), !dbg !12124
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12125
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 7, !dbg !12126
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12126
  %2 = load i16, i16* %pos.addr, align 2, !dbg !12127
  call void @atmel_writeAR(%struct.net_device* %1, i16 zeroext %2) #10, !dbg !12128
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12129
  %dev1 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %3, i32 0, i32 7, !dbg !12130
  %4 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !12130
  %5 = load i32, i32* %data.addr, align 4, !dbg !12131
  %conv = trunc i32 %5 to i16, !dbg !12131
  call void @atmel_write16(%struct.net_device* %4, i16 zeroext 8, i16 zeroext %conv) #10, !dbg !12132
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12133
  %dev2 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 7, !dbg !12134
  %7 = load %struct.net_device*, %struct.net_device** %dev2, align 8, !dbg !12134
  %8 = load i32, i32* %data.addr, align 4, !dbg !12135
  %shr = lshr i32 %8, 16, !dbg !12136
  %conv3 = trunc i32 %shr to i16, !dbg !12135
  call void @atmel_write16(%struct.net_device* %7, i16 zeroext 8, i16 zeroext %conv3) #10, !dbg !12137
  ret void, !dbg !12138
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @capable(i32) #2

; Function Attrs: noredzone
declare dso_local i8* @memdup_user(i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !12139 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12143, metadata !DIExpression()), !dbg !12144
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !12145
  %1 = ptrtoint i8* %0 to i64, !dbg !12145
  %2 = inttoptr i64 %1 to i8*, !dbg !12145
  %3 = ptrtoint i8* %2 to i64, !dbg !12145
  %cmp = icmp uge i64 %3, -4095, !dbg !12145
  %lnot = xor i1 %cmp, true, !dbg !12145
  %lnot1 = xor i1 %lnot, true, !dbg !12145
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12145
  %conv = sext i32 %lnot.ext to i64, !dbg !12145
  %tobool = icmp ne i64 %conv, 0, !dbg !12145
  ret i1 %tobool, !dbg !12146
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !12147 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12150, metadata !DIExpression()), !dbg !12151
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !12152
  %1 = ptrtoint i8* %0 to i64, !dbg !12153
  ret i64 %1, !dbg !12154
}

; Function Attrs: noredzone
declare dso_local i8* @strncpy(i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @strcasecmp(i8*, i8*) #2

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #0 !dbg !12155 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12158, metadata !DIExpression()), !dbg !12159
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12160, metadata !DIExpression()), !dbg !12161
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !12162, metadata !DIExpression()), !dbg !12164
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !12164
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !12165
  %tobool = icmp ne i32 %0, 0, !dbg !12165
  %lnot = xor i1 %tobool, true, !dbg !12165
  %lnot1 = xor i1 %lnot, true, !dbg !12165
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12165
  %conv = sext i32 %lnot.ext to i64, !dbg !12165
  %tobool2 = icmp ne i64 %conv, 0, !dbg !12165
  br i1 %tobool2, label %if.then, label %if.end, !dbg !12164

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !12165

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !12167

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !12169

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !12167
  %2 = load i64, i64* %count.addr, align 8, !dbg !12167
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0), i32 %1, i64 %2) #10, !dbg !12167
  br label %do.body4, !dbg !12167

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !12171

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !12173

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !12171

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0), i32 134, i32 2313, i64 12) #8, !dbg !12175, !srcloc !12177
  br label %do.end8, !dbg !12175

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #8, !dbg !12178, !srcloc !12180
  br label %do.body9, !dbg !12171

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !12181

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !12171

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !12167

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !12183

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !12167

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !12167

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !12164
  %tobool15 = icmp ne i32 %3, 0, !dbg !12164
  %lnot16 = xor i1 %tobool15, true, !dbg !12164
  %lnot18 = xor i1 %lnot16, true, !dbg !12164
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !12164
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !12164
  store i64 %conv20, i64* %tmp, align 8, !dbg !12165
  %4 = load i64, i64* %tmp, align 8, !dbg !12164
  ret void, !dbg !12185
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #2

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #0 !dbg !12186 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12189, metadata !DIExpression()), !dbg !12190
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12191, metadata !DIExpression()), !dbg !12192
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !12193, metadata !DIExpression()), !dbg !12194
  ret void, !dbg !12195
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_clear_gcr(%struct.net_device* %dev, i16 zeroext %mask) #0 !dbg !12196 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %mask.addr = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12197, metadata !DIExpression()), !dbg !12198
  store i16 %mask, i16* %mask.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mask.addr, metadata !12199, metadata !DIExpression()), !dbg !12200
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12201
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 5, !dbg !12202
  %1 = load i64, i64* %base_addr, align 8, !dbg !12202
  %add = add i64 %1, 0, !dbg !12203
  %conv = trunc i64 %add to i32, !dbg !12201
  %call = call zeroext i16 @inw(i32 %conv) #10, !dbg !12204
  %conv1 = zext i16 %call to i32, !dbg !12204
  %2 = load i16, i16* %mask.addr, align 2, !dbg !12205
  %conv2 = zext i16 %2 to i32, !dbg !12205
  %neg = xor i32 %conv2, -1, !dbg !12206
  %and = and i32 %conv1, %neg, !dbg !12207
  %conv3 = trunc i32 %and to i16, !dbg !12204
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12208
  %base_addr4 = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 5, !dbg !12209
  %4 = load i64, i64* %base_addr4, align 8, !dbg !12209
  %add5 = add i64 %4, 0, !dbg !12210
  %conv6 = trunc i64 %add5 to i32, !dbg !12208
  call void @outw(i16 zeroext %conv3, i32 %conv6) #10, !dbg !12211
  ret void, !dbg !12212
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_lock_mac(%struct.atmel_private* %priv) #0 !dbg !12213 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.atmel_private*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !12216, metadata !DIExpression()), !dbg !12217
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12218, metadata !DIExpression()), !dbg !12219
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12220, metadata !DIExpression()), !dbg !12221
  store i32 20, i32* %j, align 4, !dbg !12221
  br label %retry, !dbg !12222

retry:                                            ; preds = %if.end15, %entry
  call void @llvm.dbg.label(metadata !12223), !dbg !12224
  store i32 5000, i32* %i, align 4, !dbg !12225
  br label %for.cond, !dbg !12227

for.cond:                                         ; preds = %for.inc, %retry
  %0 = load i32, i32* %i, align 4, !dbg !12228
  %tobool = icmp ne i32 %0, 0, !dbg !12230
  br i1 %tobool, label %for.body, label %for.end, !dbg !12230

for.body:                                         ; preds = %for.cond
  %1 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12231
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12234
  %call = call zeroext i16 @atmel_hi(%struct.atmel_private* %2, i16 zeroext 2) #10, !dbg !12235
  %call1 = call zeroext i8 @atmel_rmem8(%struct.atmel_private* %1, i16 zeroext %call) #10, !dbg !12236
  %tobool2 = icmp ne i8 %call1, 0, !dbg !12236
  br i1 %tobool2, label %if.end, label %if.then, !dbg !12237

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !12238

if.end:                                           ; preds = %for.body
  call void @__const_udelay(i64 85900) #10, !dbg !12239
  br label %for.inc, !dbg !12244

for.inc:                                          ; preds = %if.end
  %3 = load i32, i32* %i, align 4, !dbg !12245
  %dec = add i32 %3, -1, !dbg !12245
  store i32 %dec, i32* %i, align 4, !dbg !12245
  br label %for.cond, !dbg !12246, !llvm.loop !12247

for.end:                                          ; preds = %if.then, %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !12249
  %tobool3 = icmp ne i32 %4, 0, !dbg !12249
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !12251

if.then4:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !12252
  br label %return, !dbg !12252

if.end5:                                          ; preds = %for.end
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12253
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12254
  %call6 = call zeroext i16 @atmel_hi(%struct.atmel_private* %6, i16 zeroext 3) #10, !dbg !12255
  call void @atmel_wmem8(%struct.atmel_private* %5, i16 zeroext %call6, i16 zeroext 1) #10, !dbg !12256
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12257
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12259
  %call7 = call zeroext i16 @atmel_hi(%struct.atmel_private* %8, i16 zeroext 2) #10, !dbg !12260
  %call8 = call zeroext i8 @atmel_rmem8(%struct.atmel_private* %7, i16 zeroext %call7) #10, !dbg !12261
  %tobool9 = icmp ne i8 %call8, 0, !dbg !12261
  br i1 %tobool9, label %if.then10, label %if.end16, !dbg !12262

if.then10:                                        ; preds = %if.end5
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12263
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12265
  %call11 = call zeroext i16 @atmel_hi(%struct.atmel_private* %10, i16 zeroext 3) #10, !dbg !12266
  call void @atmel_wmem8(%struct.atmel_private* %9, i16 zeroext %call11, i16 zeroext 0) #10, !dbg !12267
  %11 = load i32, i32* %j, align 4, !dbg !12268
  %dec12 = add i32 %11, -1, !dbg !12268
  store i32 %dec12, i32* %j, align 4, !dbg !12268
  %tobool13 = icmp ne i32 %11, 0, !dbg !12268
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !12270

if.then14:                                        ; preds = %if.then10
  store i32 0, i32* %retval, align 4, !dbg !12271
  br label %return, !dbg !12271

if.end15:                                         ; preds = %if.then10
  br label %retry, !dbg !12272

if.end16:                                         ; preds = %if.end5
  store i32 1, i32* %retval, align 4, !dbg !12273
  br label %return, !dbg !12273

return:                                           ; preds = %if.end16, %if.then14, %if.then4
  %12 = load i32, i32* %retval, align 4, !dbg !12274
  ret i32 %12, !dbg !12274
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @atmel_rmem8(%struct.atmel_private* %priv, i16 zeroext %pos) #0 !dbg !12275 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %pos.addr = alloca i16, align 2
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !12278, metadata !DIExpression()), !dbg !12279
  store i16 %pos, i16* %pos.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pos.addr, metadata !12280, metadata !DIExpression()), !dbg !12281
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12282
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 7, !dbg !12283
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12283
  %2 = load i16, i16* %pos.addr, align 2, !dbg !12284
  call void @atmel_writeAR(%struct.net_device* %1, i16 zeroext %2) #10, !dbg !12285
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12286
  %dev1 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %3, i32 0, i32 7, !dbg !12287
  %4 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !12287
  %call = call zeroext i8 @atmel_read8(%struct.net_device* %4, i16 zeroext 8) #10, !dbg !12288
  ret i8 %call, !dbg !12289
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @atmel_hi(%struct.atmel_private* %priv, i16 zeroext %offset) #0 !dbg !12290 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %offset.addr = alloca i16, align 2
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !12291, metadata !DIExpression()), !dbg !12292
  store i16 %offset, i16* %offset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %offset.addr, metadata !12293, metadata !DIExpression()), !dbg !12294
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12295
  %host_info_base = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 40, !dbg !12296
  %1 = load i16, i16* %host_info_base, align 4, !dbg !12296
  %conv = zext i16 %1 to i32, !dbg !12295
  %2 = load i16, i16* %offset.addr, align 2, !dbg !12297
  %conv1 = zext i16 %2 to i32, !dbg !12297
  %add = add i32 %conv, %conv1, !dbg !12298
  %conv2 = trunc i32 %add to i16, !dbg !12295
  ret i16 %conv2, !dbg !12299
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rx_done_irq(%struct.atmel_private* %priv) #0 !dbg !12300 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %i = alloca i32, align 4
  %header = alloca %struct.ieee80211_hdr, align 2
  %msdu_size = alloca i16, align 2
  %rx_packet_loc = alloca i16, align 2
  %frame_ctl = alloca i16, align 2
  %seq_control = alloca i16, align 2
  %status = alloca i8, align 1
  %crc = alloca i32, align 4
  %more_fragments = alloca i32, align 4
  %packet_fragment_no = alloca i8, align 1
  %packet_sequence_no = alloca i16, align 2
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !12303, metadata !DIExpression()), !dbg !12304
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12305, metadata !DIExpression()), !dbg !12306
  call void @llvm.dbg.declare(metadata %struct.ieee80211_hdr* %header, metadata !12307, metadata !DIExpression()), !dbg !12308
  store i32 0, i32* %i, align 4, !dbg !12309
  br label %for.cond, !dbg !12311

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12312
  %1 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12314
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12315
  %rx_desc_head = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 18, !dbg !12316
  %3 = load i16, i16* %rx_desc_head, align 8, !dbg !12316
  %call = call zeroext i16 @atmel_rx(%struct.atmel_private* %1, i16 zeroext 8, i16 zeroext %3) #10, !dbg !12317
  %call1 = call zeroext i8 @atmel_rmem8(%struct.atmel_private* %0, i16 zeroext %call) #10, !dbg !12318
  %conv = zext i8 %call1 to i32, !dbg !12318
  %cmp = icmp eq i32 %conv, 128, !dbg !12319
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12320

land.rhs:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !12321
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12322
  %host_info = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %5, i32 0, i32 41, !dbg !12323
  %rx_desc_count = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info, i32 0, i32 11, !dbg !12324
  %6 = load i16, i16* %rx_desc_count, align 2, !dbg !12324
  %conv3 = zext i16 %6 to i32, !dbg !12322
  %cmp4 = icmp slt i32 %4, %conv3, !dbg !12325
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %7 = phi i1 [ false, %for.cond ], [ %cmp4, %land.rhs ], !dbg !12326
  br i1 %7, label %for.body, label %for.end, !dbg !12327

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata i16* %msdu_size, metadata !12328, metadata !DIExpression()), !dbg !12330
  call void @llvm.dbg.declare(metadata i16* %rx_packet_loc, metadata !12331, metadata !DIExpression()), !dbg !12332
  call void @llvm.dbg.declare(metadata i16* %frame_ctl, metadata !12333, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.declare(metadata i16* %seq_control, metadata !12335, metadata !DIExpression()), !dbg !12336
  call void @llvm.dbg.declare(metadata i8* %status, metadata !12337, metadata !DIExpression()), !dbg !12338
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12339
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12340
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12341
  %rx_desc_head6 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 18, !dbg !12342
  %11 = load i16, i16* %rx_desc_head6, align 8, !dbg !12342
  %call7 = call zeroext i16 @atmel_rx(%struct.atmel_private* %9, i16 zeroext 9, i16 zeroext %11) #10, !dbg !12343
  %call8 = call zeroext i8 @atmel_rmem8(%struct.atmel_private* %8, i16 zeroext %call7) #10, !dbg !12344
  store i8 %call8, i8* %status, align 1, !dbg !12338
  call void @llvm.dbg.declare(metadata i32* %crc, metadata !12345, metadata !DIExpression()), !dbg !12346
  store i32 -1, i32* %crc, align 4, !dbg !12346
  %12 = load i8, i8* %status, align 1, !dbg !12347
  %conv9 = zext i8 %12 to i32, !dbg !12347
  %cmp10 = icmp ne i32 %conv9, 0, !dbg !12349
  br i1 %cmp10, label %if.then, label %if.end17, !dbg !12350

if.then:                                          ; preds = %for.body
  %13 = load i8, i8* %status, align 1, !dbg !12351
  %conv12 = zext i8 %13 to i32, !dbg !12351
  %cmp13 = icmp eq i32 %conv12, 193, !dbg !12354
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !12355

if.then15:                                        ; preds = %if.then
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12356
  %wstats = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %14, i32 0, i32 9, !dbg !12357
  %discard = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats, i32 0, i32 2, !dbg !12358
  %nwid = getelementptr inbounds %struct.iw_discarded, %struct.iw_discarded* %discard, i32 0, i32 0, !dbg !12359
  %15 = load i32, i32* %nwid, align 8, !dbg !12360
  %inc = add i32 %15, 1, !dbg !12360
  store i32 %inc, i32* %nwid, align 8, !dbg !12360
  br label %if.end, !dbg !12356

if.else:                                          ; preds = %if.then
  %16 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12361
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %16, i32 0, i32 7, !dbg !12362
  %17 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12362
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %17, i32 0, i32 24, !dbg !12363
  %rx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 4, !dbg !12364
  %18 = load i64, i64* %rx_errors, align 8, !dbg !12365
  %inc16 = add i64 %18, 1, !dbg !12365
  store i64 %inc16, i64* %rx_errors, align 8, !dbg !12365
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then15
  br label %next, !dbg !12366

if.end17:                                         ; preds = %for.body
  %19 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12367
  %20 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12368
  %21 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12369
  %rx_desc_head18 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %21, i32 0, i32 18, !dbg !12370
  %22 = load i16, i16* %rx_desc_head18, align 8, !dbg !12370
  %call19 = call zeroext i16 @atmel_rx(%struct.atmel_private* %20, i16 zeroext 6, i16 zeroext %22) #10, !dbg !12371
  %call20 = call zeroext i16 @atmel_rmem16(%struct.atmel_private* %19, i16 zeroext %call19) #10, !dbg !12372
  store i16 %call20, i16* %msdu_size, align 2, !dbg !12373
  %23 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12374
  %24 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12375
  %25 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12376
  %rx_desc_head21 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %25, i32 0, i32 18, !dbg !12377
  %26 = load i16, i16* %rx_desc_head21, align 8, !dbg !12377
  %call22 = call zeroext i16 @atmel_rx(%struct.atmel_private* %24, i16 zeroext 4, i16 zeroext %26) #10, !dbg !12378
  %call23 = call zeroext i16 @atmel_rmem16(%struct.atmel_private* %23, i16 zeroext %call22) #10, !dbg !12379
  store i16 %call23, i16* %rx_packet_loc, align 2, !dbg !12380
  %27 = load i16, i16* %msdu_size, align 2, !dbg !12381
  %conv24 = zext i16 %27 to i32, !dbg !12381
  %cmp25 = icmp slt i32 %conv24, 30, !dbg !12383
  br i1 %cmp25, label %if.then27, label %if.end32, !dbg !12384

if.then27:                                        ; preds = %if.end17
  %28 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12385
  %dev28 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %28, i32 0, i32 7, !dbg !12387
  %29 = load %struct.net_device*, %struct.net_device** %dev28, align 8, !dbg !12387
  %stats29 = getelementptr inbounds %struct.net_device, %struct.net_device* %29, i32 0, i32 24, !dbg !12388
  %rx_errors30 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats29, i32 0, i32 4, !dbg !12389
  %30 = load i64, i64* %rx_errors30, align 8, !dbg !12390
  %inc31 = add i64 %30, 1, !dbg !12390
  store i64 %inc31, i64* %rx_errors30, align 8, !dbg !12390
  br label %next, !dbg !12391

if.end32:                                         ; preds = %if.end17
  %31 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12392
  %dev33 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %31, i32 0, i32 7, !dbg !12393
  %32 = load %struct.net_device*, %struct.net_device** %dev33, align 8, !dbg !12393
  %33 = bitcast %struct.ieee80211_hdr* %header to i8*, !dbg !12394
  %34 = load i16, i16* %rx_packet_loc, align 2, !dbg !12395
  call void @atmel_copy_to_host(%struct.net_device* %32, i8* %33, i16 zeroext %34, i16 zeroext 24) #10, !dbg !12396
  %frame_control = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 0, !dbg !12397
  %35 = load i16, i16* %frame_control, align 2, !dbg !12397
  store i16 %35, i16* %frame_ctl, align 2, !dbg !12398
  %seq_ctrl = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 5, !dbg !12399
  %36 = load i16, i16* %seq_ctrl, align 2, !dbg !12399
  store i16 %36, i16* %seq_control, align 2, !dbg !12400
  %37 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12401
  %probe_crc = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %37, i32 0, i32 15, !dbg !12403
  %38 = load i32, i32* %probe_crc, align 4, !dbg !12403
  %tobool = icmp ne i32 %38, 0, !dbg !12401
  br i1 %tobool, label %if.then34, label %if.end65, !dbg !12404

if.then34:                                        ; preds = %if.end32
  %39 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12405
  %wep_is_on = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %39, i32 0, i32 30, !dbg !12408
  %40 = load i8, i8* %wep_is_on, align 4, !dbg !12408
  %tobool35 = icmp ne i8 %40, 0, !dbg !12405
  br i1 %tobool35, label %lor.lhs.false, label %if.then38, !dbg !12409

lor.lhs.false:                                    ; preds = %if.then34
  %41 = load i16, i16* %frame_ctl, align 2, !dbg !12410
  %conv36 = zext i16 %41 to i32, !dbg !12410
  %and = and i32 %conv36, 16384, !dbg !12411
  %tobool37 = icmp ne i32 %and, 0, !dbg !12411
  br i1 %tobool37, label %if.else40, label %if.then38, !dbg !12412

if.then38:                                        ; preds = %lor.lhs.false, %if.then34
  %42 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12413
  %43 = load i16, i16* %rx_packet_loc, align 2, !dbg !12415
  %44 = load i16, i16* %msdu_size, align 2, !dbg !12416
  %call39 = call i32 @probe_crc(%struct.atmel_private* %42, i16 zeroext %43, i16 zeroext %44) #10, !dbg !12417
  %45 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12418
  %do_rx_crc = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %45, i32 0, i32 14, !dbg !12419
  store i32 %call39, i32* %do_rx_crc, align 8, !dbg !12420
  br label %if.end47, !dbg !12421

if.else40:                                        ; preds = %lor.lhs.false
  %46 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12422
  %47 = load i16, i16* %rx_packet_loc, align 2, !dbg !12424
  %conv41 = zext i16 %47 to i32, !dbg !12424
  %add = add i32 %conv41, 24, !dbg !12425
  %conv42 = trunc i32 %add to i16, !dbg !12424
  %48 = load i16, i16* %msdu_size, align 2, !dbg !12426
  %conv43 = zext i16 %48 to i32, !dbg !12426
  %sub = sub i32 %conv43, 24, !dbg !12427
  %conv44 = trunc i32 %sub to i16, !dbg !12426
  %call45 = call i32 @probe_crc(%struct.atmel_private* %46, i16 zeroext %conv42, i16 zeroext %conv44) #10, !dbg !12428
  %49 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12429
  %do_rx_crc46 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %49, i32 0, i32 14, !dbg !12430
  store i32 %call45, i32* %do_rx_crc46, align 8, !dbg !12431
  br label %if.end47

if.end47:                                         ; preds = %if.else40, %if.then38
  %50 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12432
  %do_rx_crc48 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %50, i32 0, i32 14, !dbg !12434
  %51 = load i32, i32* %do_rx_crc48, align 8, !dbg !12434
  %tobool49 = icmp ne i32 %51, 0, !dbg !12432
  br i1 %tobool49, label %if.then50, label %if.else57, !dbg !12435

if.then50:                                        ; preds = %if.end47
  %52 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12436
  %crc_ok_cnt = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %52, i32 0, i32 16, !dbg !12439
  %53 = load i32, i32* %crc_ok_cnt, align 8, !dbg !12440
  %inc51 = add i32 %53, 1, !dbg !12440
  store i32 %inc51, i32* %crc_ok_cnt, align 8, !dbg !12440
  %cmp52 = icmp sgt i32 %53, 5, !dbg !12441
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !12442

if.then54:                                        ; preds = %if.then50
  %54 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12443
  %probe_crc55 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %54, i32 0, i32 15, !dbg !12444
  store i32 0, i32* %probe_crc55, align 4, !dbg !12445
  br label %if.end56, !dbg !12443

if.end56:                                         ; preds = %if.then54, %if.then50
  br label %if.end64, !dbg !12446

if.else57:                                        ; preds = %if.end47
  %55 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12447
  %crc_ko_cnt = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %55, i32 0, i32 17, !dbg !12450
  %56 = load i32, i32* %crc_ko_cnt, align 4, !dbg !12451
  %inc58 = add i32 %56, 1, !dbg !12451
  store i32 %inc58, i32* %crc_ko_cnt, align 4, !dbg !12451
  %cmp59 = icmp sgt i32 %56, 5, !dbg !12452
  br i1 %cmp59, label %if.then61, label %if.end63, !dbg !12453

if.then61:                                        ; preds = %if.else57
  %57 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12454
  %probe_crc62 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %57, i32 0, i32 15, !dbg !12455
  store i32 0, i32* %probe_crc62, align 4, !dbg !12456
  br label %if.end63, !dbg !12454

if.end63:                                         ; preds = %if.then61, %if.else57
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end56
  br label %if.end65, !dbg !12457

if.end65:                                         ; preds = %if.end64, %if.end32
  %58 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12458
  %do_rx_crc66 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %58, i32 0, i32 14, !dbg !12460
  %59 = load i32, i32* %do_rx_crc66, align 8, !dbg !12460
  %tobool67 = icmp ne i32 %59, 0, !dbg !12458
  br i1 %tobool67, label %land.lhs.true, label %if.end76, !dbg !12461

land.lhs.true:                                    ; preds = %if.end65
  %60 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12462
  %wep_is_on68 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %60, i32 0, i32 30, !dbg !12463
  %61 = load i8, i8* %wep_is_on68, align 4, !dbg !12463
  %tobool69 = icmp ne i8 %61, 0, !dbg !12462
  br i1 %tobool69, label %lor.lhs.false70, label %if.then74, !dbg !12464

lor.lhs.false70:                                  ; preds = %land.lhs.true
  %62 = load i16, i16* %frame_ctl, align 2, !dbg !12465
  %conv71 = zext i16 %62 to i32, !dbg !12465
  %and72 = and i32 %conv71, 16384, !dbg !12466
  %tobool73 = icmp ne i32 %and72, 0, !dbg !12466
  br i1 %tobool73, label %if.end76, label %if.then74, !dbg !12467

if.then74:                                        ; preds = %lor.lhs.false70, %land.lhs.true
  %63 = bitcast %struct.ieee80211_hdr* %header to i8*, !dbg !12468
  %call75 = call i32 @crc32_le(i32 -1, i8* %63, i64 24) #13, !dbg !12470
  store i32 %call75, i32* %crc, align 4, !dbg !12471
  br label %if.end76, !dbg !12472

if.end76:                                         ; preds = %if.then74, %lor.lhs.false70, %if.end65
  %64 = load i16, i16* %msdu_size, align 2, !dbg !12473
  %conv77 = zext i16 %64 to i32, !dbg !12473
  %sub78 = sub i32 %conv77, 24, !dbg !12473
  %conv79 = trunc i32 %sub78 to i16, !dbg !12473
  store i16 %conv79, i16* %msdu_size, align 2, !dbg !12473
  %65 = load i16, i16* %frame_ctl, align 2, !dbg !12474
  %conv80 = zext i16 %65 to i32, !dbg !12474
  %and81 = and i32 %conv80, 12, !dbg !12476
  %cmp82 = icmp eq i32 %and81, 8, !dbg !12477
  br i1 %cmp82, label %if.then84, label %if.end101, !dbg !12478

if.then84:                                        ; preds = %if.end76
  call void @llvm.dbg.declare(metadata i32* %more_fragments, metadata !12479, metadata !DIExpression()), !dbg !12481
  %66 = load i16, i16* %frame_ctl, align 2, !dbg !12482
  %conv85 = zext i16 %66 to i32, !dbg !12482
  %and86 = and i32 %conv85, 1024, !dbg !12483
  store i32 %and86, i32* %more_fragments, align 4, !dbg !12481
  call void @llvm.dbg.declare(metadata i8* %packet_fragment_no, metadata !12484, metadata !DIExpression()), !dbg !12485
  %67 = load i16, i16* %seq_control, align 2, !dbg !12486
  %conv87 = zext i16 %67 to i32, !dbg !12486
  %and88 = and i32 %conv87, 15, !dbg !12487
  %conv89 = trunc i32 %and88 to i8, !dbg !12486
  store i8 %conv89, i8* %packet_fragment_no, align 1, !dbg !12485
  call void @llvm.dbg.declare(metadata i16* %packet_sequence_no, metadata !12488, metadata !DIExpression()), !dbg !12489
  %68 = load i16, i16* %seq_control, align 2, !dbg !12490
  %conv90 = zext i16 %68 to i32, !dbg !12490
  %and91 = and i32 %conv90, 65520, !dbg !12491
  %shr = ashr i32 %and91, 4, !dbg !12492
  %conv92 = trunc i32 %shr to i16, !dbg !12493
  store i16 %conv92, i16* %packet_sequence_no, align 2, !dbg !12489
  %69 = load i32, i32* %more_fragments, align 4, !dbg !12494
  %tobool93 = icmp ne i32 %69, 0, !dbg !12494
  br i1 %tobool93, label %if.else99, label %land.lhs.true94, !dbg !12496

land.lhs.true94:                                  ; preds = %if.then84
  %70 = load i8, i8* %packet_fragment_no, align 1, !dbg !12497
  %conv95 = zext i8 %70 to i32, !dbg !12497
  %cmp96 = icmp eq i32 %conv95, 0, !dbg !12498
  br i1 %cmp96, label %if.then98, label %if.else99, !dbg !12499

if.then98:                                        ; preds = %land.lhs.true94
  %71 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12500
  %72 = load i16, i16* %msdu_size, align 2, !dbg !12502
  %73 = load i16, i16* %rx_packet_loc, align 2, !dbg !12503
  %74 = load i32, i32* %crc, align 4, !dbg !12504
  call void @fast_rx_path(%struct.atmel_private* %71, %struct.ieee80211_hdr* %header, i16 zeroext %72, i16 zeroext %73, i32 %74) #10, !dbg !12505
  br label %if.end100, !dbg !12506

if.else99:                                        ; preds = %land.lhs.true94, %if.then84
  %75 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12507
  %76 = load i16, i16* %msdu_size, align 2, !dbg !12509
  %77 = load i16, i16* %rx_packet_loc, align 2, !dbg !12510
  %78 = load i32, i32* %crc, align 4, !dbg !12511
  %79 = load i16, i16* %packet_sequence_no, align 2, !dbg !12512
  %80 = load i8, i8* %packet_fragment_no, align 1, !dbg !12513
  %81 = load i32, i32* %more_fragments, align 4, !dbg !12514
  call void @frag_rx_path(%struct.atmel_private* %75, %struct.ieee80211_hdr* %header, i16 zeroext %76, i16 zeroext %77, i32 %78, i16 zeroext %79, i8 zeroext %80, i32 %81) #10, !dbg !12515
  br label %if.end100

if.end100:                                        ; preds = %if.else99, %if.then98
  br label %if.end101, !dbg !12516

if.end101:                                        ; preds = %if.end100, %if.end76
  %82 = load i16, i16* %frame_ctl, align 2, !dbg !12517
  %conv102 = zext i16 %82 to i32, !dbg !12517
  %and103 = and i32 %conv102, 12, !dbg !12519
  %cmp104 = icmp eq i32 %and103, 0, !dbg !12520
  br i1 %cmp104, label %if.then106, label %if.end132, !dbg !12521

if.then106:                                       ; preds = %if.end101
  %83 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12522
  %dev107 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %83, i32 0, i32 7, !dbg !12524
  %84 = load %struct.net_device*, %struct.net_device** %dev107, align 8, !dbg !12524
  %85 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12525
  %rx_buf = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %85, i32 0, i32 81, !dbg !12526
  %86 = bitcast [2316 x i8]* %rx_buf to i8*, !dbg !12527
  %87 = load i16, i16* %rx_packet_loc, align 2, !dbg !12528
  %conv108 = zext i16 %87 to i32, !dbg !12528
  %add109 = add i32 %conv108, 24, !dbg !12529
  %conv110 = trunc i32 %add109 to i16, !dbg !12528
  %88 = load i16, i16* %msdu_size, align 2, !dbg !12530
  call void @atmel_copy_to_host(%struct.net_device* %84, i8* %86, i16 zeroext %conv110, i16 zeroext %88) #10, !dbg !12531
  %89 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12532
  %frag_source = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %89, i32 0, i32 29, !dbg !12533
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %frag_source, i64 0, i64 0, !dbg !12532
  call void @eth_broadcast_addr(i8* %arraydecay) #10, !dbg !12534
  %90 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12535
  %do_rx_crc111 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %90, i32 0, i32 14, !dbg !12537
  %91 = load i32, i32* %do_rx_crc111, align 8, !dbg !12537
  %tobool112 = icmp ne i32 %91, 0, !dbg !12535
  br i1 %tobool112, label %if.then113, label %if.end128, !dbg !12538

if.then113:                                       ; preds = %if.then106
  %92 = load i16, i16* %msdu_size, align 2, !dbg !12539
  %conv114 = zext i16 %92 to i32, !dbg !12539
  %sub115 = sub i32 %conv114, 4, !dbg !12539
  %conv116 = trunc i32 %sub115 to i16, !dbg !12539
  store i16 %conv116, i16* %msdu_size, align 2, !dbg !12539
  %93 = load i32, i32* %crc, align 4, !dbg !12541
  %94 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12542
  %rx_buf117 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %94, i32 0, i32 81, !dbg !12543
  %95 = bitcast [2316 x i8]* %rx_buf117 to i8*, !dbg !12544
  %96 = load i16, i16* %msdu_size, align 2, !dbg !12545
  %conv118 = zext i16 %96 to i64, !dbg !12545
  %call119 = call i32 @crc32_le(i32 %93, i8* %95, i64 %conv118) #13, !dbg !12546
  store i32 %call119, i32* %crc, align 4, !dbg !12547
  %97 = load i32, i32* %crc, align 4, !dbg !12548
  %xor = xor i32 %97, -1, !dbg !12550
  %98 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12551
  %rx_buf120 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %98, i32 0, i32 81, !dbg !12552
  %99 = load i16, i16* %msdu_size, align 2, !dbg !12553
  %idxprom = zext i16 %99 to i64, !dbg !12551
  %arrayidx = getelementptr [2316 x i8], [2316 x i8]* %rx_buf120, i64 0, i64 %idxprom, !dbg !12551
  %100 = bitcast i8* %arrayidx to i32*, !dbg !12554
  %101 = load i32, i32* %100, align 1, !dbg !12554
  %cmp121 = icmp ne i32 %xor, %101, !dbg !12555
  br i1 %cmp121, label %if.then123, label %if.end127, !dbg !12556

if.then123:                                       ; preds = %if.then113
  %102 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12557
  %dev124 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %102, i32 0, i32 7, !dbg !12559
  %103 = load %struct.net_device*, %struct.net_device** %dev124, align 8, !dbg !12559
  %stats125 = getelementptr inbounds %struct.net_device, %struct.net_device* %103, i32 0, i32 24, !dbg !12560
  %rx_crc_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats125, i32 0, i32 12, !dbg !12561
  %104 = load i64, i64* %rx_crc_errors, align 8, !dbg !12562
  %inc126 = add i64 %104, 1, !dbg !12562
  store i64 %inc126, i64* %rx_crc_errors, align 8, !dbg !12562
  br label %next, !dbg !12563

if.end127:                                        ; preds = %if.then113
  br label %if.end128, !dbg !12564

if.end128:                                        ; preds = %if.end127, %if.then106
  %105 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12565
  %106 = load i16, i16* %msdu_size, align 2, !dbg !12566
  %107 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12567
  %108 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12568
  %109 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12569
  %rx_desc_head129 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %109, i32 0, i32 18, !dbg !12570
  %110 = load i16, i16* %rx_desc_head129, align 8, !dbg !12570
  %call130 = call zeroext i16 @atmel_rx(%struct.atmel_private* %108, i16 zeroext 11, i16 zeroext %110) #10, !dbg !12571
  %call131 = call zeroext i8 @atmel_rmem8(%struct.atmel_private* %107, i16 zeroext %call130) #10, !dbg !12572
  call void @atmel_management_frame(%struct.atmel_private* %105, %struct.ieee80211_hdr* %header, i16 zeroext %106, i8 zeroext %call131) #10, !dbg !12573
  br label %if.end132, !dbg !12574

if.end132:                                        ; preds = %if.end128, %if.end101
  br label %next, !dbg !12575

next:                                             ; preds = %if.end132, %if.then123, %if.then27, %if.end
  call void @llvm.dbg.label(metadata !12576), !dbg !12577
  %111 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12578
  %112 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12579
  %113 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12580
  %rx_desc_head133 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %113, i32 0, i32 18, !dbg !12581
  %114 = load i16, i16* %rx_desc_head133, align 8, !dbg !12581
  %call134 = call zeroext i16 @atmel_rx(%struct.atmel_private* %112, i16 zeroext 8, i16 zeroext %114) #10, !dbg !12582
  call void @atmel_wmem8(%struct.atmel_private* %111, i16 zeroext %call134, i16 zeroext 64) #10, !dbg !12583
  %115 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12584
  %rx_desc_head135 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %115, i32 0, i32 18, !dbg !12586
  %116 = load i16, i16* %rx_desc_head135, align 8, !dbg !12586
  %conv136 = zext i16 %116 to i32, !dbg !12584
  %117 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12587
  %host_info137 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %117, i32 0, i32 41, !dbg !12588
  %rx_desc_count138 = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info137, i32 0, i32 11, !dbg !12589
  %118 = load i16, i16* %rx_desc_count138, align 2, !dbg !12589
  %conv139 = zext i16 %118 to i32, !dbg !12587
  %sub140 = sub i32 %conv139, 1, !dbg !12590
  %cmp141 = icmp slt i32 %conv136, %sub140, !dbg !12591
  br i1 %cmp141, label %if.then143, label %if.else146, !dbg !12592

if.then143:                                       ; preds = %next
  %119 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12593
  %rx_desc_head144 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %119, i32 0, i32 18, !dbg !12594
  %120 = load i16, i16* %rx_desc_head144, align 8, !dbg !12595
  %inc145 = add i16 %120, 1, !dbg !12595
  store i16 %inc145, i16* %rx_desc_head144, align 8, !dbg !12595
  br label %if.end148, !dbg !12593

if.else146:                                       ; preds = %next
  %121 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12596
  %rx_desc_head147 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %121, i32 0, i32 18, !dbg !12597
  store i16 0, i16* %rx_desc_head147, align 8, !dbg !12598
  br label %if.end148

if.end148:                                        ; preds = %if.else146, %if.then143
  br label %for.inc, !dbg !12599

for.inc:                                          ; preds = %if.end148
  %122 = load i32, i32* %i, align 4, !dbg !12600
  %inc149 = add i32 %122, 1, !dbg !12600
  store i32 %inc149, i32* %i, align 4, !dbg !12600
  br label %for.cond, !dbg !12601, !llvm.loop !12602

for.end:                                          ; preds = %land.end
  ret void, !dbg !12604
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tx_done_irq(%struct.atmel_private* %priv) #0 !dbg !12605 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %i = alloca i32, align 4
  %status = alloca i8, align 1
  %msdu_size = alloca i16, align 2
  %type = alloca i8, align 1
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !12606, metadata !DIExpression()), !dbg !12607
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12608, metadata !DIExpression()), !dbg !12609
  store i32 0, i32* %i, align 4, !dbg !12610
  br label %for.cond, !dbg !12612

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12613
  %1 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12615
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12616
  %tx_desc_head = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 20, !dbg !12617
  %3 = load i16, i16* %tx_desc_head, align 4, !dbg !12617
  %call = call zeroext i16 @atmel_tx(%struct.atmel_private* %1, i16 zeroext 8, i16 zeroext %3) #10, !dbg !12618
  %call1 = call zeroext i8 @atmel_rmem8(%struct.atmel_private* %0, i16 zeroext %call) #10, !dbg !12619
  %conv = zext i8 %call1 to i32, !dbg !12619
  %cmp = icmp eq i32 %conv, 64, !dbg !12620
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12621

land.rhs:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !12622
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12623
  %host_info = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %5, i32 0, i32 41, !dbg !12624
  %tx_desc_count = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info, i32 0, i32 7, !dbg !12625
  %6 = load i16, i16* %tx_desc_count, align 2, !dbg !12625
  %conv3 = zext i16 %6 to i32, !dbg !12623
  %cmp4 = icmp slt i32 %4, %conv3, !dbg !12626
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %7 = phi i1 [ false, %for.cond ], [ %cmp4, %land.rhs ], !dbg !12627
  br i1 %7, label %for.body, label %for.end, !dbg !12628

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8* %status, metadata !12629, metadata !DIExpression()), !dbg !12631
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12632
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12633
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12634
  %tx_desc_head6 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 20, !dbg !12635
  %11 = load i16, i16* %tx_desc_head6, align 4, !dbg !12635
  %call7 = call zeroext i16 @atmel_tx(%struct.atmel_private* %9, i16 zeroext 9, i16 zeroext %11) #10, !dbg !12636
  %call8 = call zeroext i8 @atmel_rmem8(%struct.atmel_private* %8, i16 zeroext %call7) #10, !dbg !12637
  store i8 %call8, i8* %status, align 1, !dbg !12631
  call void @llvm.dbg.declare(metadata i16* %msdu_size, metadata !12638, metadata !DIExpression()), !dbg !12639
  %12 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12640
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12641
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12642
  %tx_desc_head9 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %14, i32 0, i32 20, !dbg !12643
  %15 = load i16, i16* %tx_desc_head9, align 4, !dbg !12643
  %call10 = call zeroext i16 @atmel_tx(%struct.atmel_private* %13, i16 zeroext 6, i16 zeroext %15) #10, !dbg !12644
  %call11 = call zeroext i16 @atmel_rmem16(%struct.atmel_private* %12, i16 zeroext %call10) #10, !dbg !12645
  store i16 %call11, i16* %msdu_size, align 2, !dbg !12639
  call void @llvm.dbg.declare(metadata i8* %type, metadata !12646, metadata !DIExpression()), !dbg !12647
  %16 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12648
  %17 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12649
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12650
  %tx_desc_head12 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %18, i32 0, i32 20, !dbg !12651
  %19 = load i16, i16* %tx_desc_head12, align 4, !dbg !12651
  %call13 = call zeroext i16 @atmel_tx(%struct.atmel_private* %17, i16 zeroext 17, i16 zeroext %19) #10, !dbg !12652
  %call14 = call zeroext i8 @atmel_rmem8(%struct.atmel_private* %16, i16 zeroext %call13) #10, !dbg !12653
  store i8 %call14, i8* %type, align 1, !dbg !12647
  %20 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12654
  %21 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12655
  %22 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12656
  %tx_desc_head15 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %22, i32 0, i32 20, !dbg !12657
  %23 = load i16, i16* %tx_desc_head15, align 4, !dbg !12657
  %call16 = call zeroext i16 @atmel_tx(%struct.atmel_private* %21, i16 zeroext 8, i16 zeroext %23) #10, !dbg !12658
  call void @atmel_wmem8(%struct.atmel_private* %20, i16 zeroext %call16, i16 zeroext 0) #10, !dbg !12659
  %24 = load i16, i16* %msdu_size, align 2, !dbg !12660
  %conv17 = zext i16 %24 to i32, !dbg !12660
  %25 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12661
  %tx_free_mem = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %25, i32 0, i32 23, !dbg !12662
  %26 = load i16, i16* %tx_free_mem, align 2, !dbg !12663
  %conv18 = zext i16 %26 to i32, !dbg !12663
  %add = add i32 %conv18, %conv17, !dbg !12663
  %conv19 = trunc i32 %add to i16, !dbg !12663
  store i16 %conv19, i16* %tx_free_mem, align 2, !dbg !12663
  %27 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12664
  %tx_desc_free = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %27, i32 0, i32 19, !dbg !12665
  %28 = load i16, i16* %tx_desc_free, align 2, !dbg !12666
  %inc = add i16 %28, 1, !dbg !12666
  store i16 %inc, i16* %tx_desc_free, align 2, !dbg !12666
  %29 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12667
  %tx_buff_head = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %29, i32 0, i32 24, !dbg !12669
  %30 = load i16, i16* %tx_buff_head, align 4, !dbg !12669
  %conv20 = zext i16 %30 to i32, !dbg !12667
  %31 = load i16, i16* %msdu_size, align 2, !dbg !12670
  %conv21 = zext i16 %31 to i32, !dbg !12670
  %add22 = add i32 %conv20, %conv21, !dbg !12671
  %32 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12672
  %host_info23 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %32, i32 0, i32 41, !dbg !12673
  %tx_buff_pos = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info23, i32 0, i32 4, !dbg !12674
  %33 = load i16, i16* %tx_buff_pos, align 2, !dbg !12674
  %conv24 = zext i16 %33 to i32, !dbg !12672
  %34 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12675
  %host_info25 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %34, i32 0, i32 41, !dbg !12676
  %tx_buff_size = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info25, i32 0, i32 5, !dbg !12677
  %35 = load i16, i16* %tx_buff_size, align 2, !dbg !12677
  %conv26 = zext i16 %35 to i32, !dbg !12675
  %add27 = add i32 %conv24, %conv26, !dbg !12678
  %cmp28 = icmp sgt i32 %add22, %add27, !dbg !12679
  br i1 %cmp28, label %if.then, label %if.else, !dbg !12680

if.then:                                          ; preds = %for.body
  %36 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12681
  %tx_buff_head30 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %36, i32 0, i32 24, !dbg !12682
  store i16 0, i16* %tx_buff_head30, align 4, !dbg !12683
  br label %if.end, !dbg !12681

if.else:                                          ; preds = %for.body
  %37 = load i16, i16* %msdu_size, align 2, !dbg !12684
  %conv31 = zext i16 %37 to i32, !dbg !12684
  %38 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12685
  %tx_buff_head32 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %38, i32 0, i32 24, !dbg !12686
  %39 = load i16, i16* %tx_buff_head32, align 4, !dbg !12687
  %conv33 = zext i16 %39 to i32, !dbg !12687
  %add34 = add i32 %conv33, %conv31, !dbg !12687
  %conv35 = trunc i32 %add34 to i16, !dbg !12687
  store i16 %conv35, i16* %tx_buff_head32, align 4, !dbg !12687
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %40 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12688
  %tx_desc_head36 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %40, i32 0, i32 20, !dbg !12690
  %41 = load i16, i16* %tx_desc_head36, align 4, !dbg !12690
  %conv37 = zext i16 %41 to i32, !dbg !12688
  %42 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12691
  %host_info38 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %42, i32 0, i32 41, !dbg !12692
  %tx_desc_count39 = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info38, i32 0, i32 7, !dbg !12693
  %43 = load i16, i16* %tx_desc_count39, align 2, !dbg !12693
  %conv40 = zext i16 %43 to i32, !dbg !12691
  %sub = sub i32 %conv40, 1, !dbg !12694
  %cmp41 = icmp slt i32 %conv37, %sub, !dbg !12695
  br i1 %cmp41, label %if.then43, label %if.else46, !dbg !12696

if.then43:                                        ; preds = %if.end
  %44 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12697
  %tx_desc_head44 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %44, i32 0, i32 20, !dbg !12698
  %45 = load i16, i16* %tx_desc_head44, align 4, !dbg !12699
  %inc45 = add i16 %45, 1, !dbg !12699
  store i16 %inc45, i16* %tx_desc_head44, align 4, !dbg !12699
  br label %if.end48, !dbg !12697

if.else46:                                        ; preds = %if.end
  %46 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12700
  %tx_desc_head47 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %46, i32 0, i32 20, !dbg !12701
  store i16 0, i16* %tx_desc_head47, align 4, !dbg !12702
  br label %if.end48

if.end48:                                         ; preds = %if.else46, %if.then43
  %47 = load i8, i8* %type, align 1, !dbg !12703
  %conv49 = zext i8 %47 to i32, !dbg !12703
  %cmp50 = icmp eq i32 %conv49, 1, !dbg !12705
  br i1 %cmp50, label %if.then52, label %if.end64, !dbg !12706

if.then52:                                        ; preds = %if.end48
  %48 = load i8, i8* %status, align 1, !dbg !12707
  %conv53 = zext i8 %48 to i32, !dbg !12707
  %cmp54 = icmp eq i32 %conv53, 0, !dbg !12710
  br i1 %cmp54, label %if.then56, label %if.else58, !dbg !12711

if.then56:                                        ; preds = %if.then52
  %49 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12712
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %49, i32 0, i32 7, !dbg !12713
  %50 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12713
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %50, i32 0, i32 24, !dbg !12714
  %tx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 1, !dbg !12715
  %51 = load i64, i64* %tx_packets, align 8, !dbg !12716
  %inc57 = add i64 %51, 1, !dbg !12716
  store i64 %inc57, i64* %tx_packets, align 8, !dbg !12716
  br label %if.end62, !dbg !12712

if.else58:                                        ; preds = %if.then52
  %52 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12717
  %dev59 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %52, i32 0, i32 7, !dbg !12718
  %53 = load %struct.net_device*, %struct.net_device** %dev59, align 8, !dbg !12718
  %stats60 = getelementptr inbounds %struct.net_device, %struct.net_device* %53, i32 0, i32 24, !dbg !12719
  %tx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats60, i32 0, i32 5, !dbg !12720
  %54 = load i64, i64* %tx_errors, align 8, !dbg !12721
  %inc61 = add i64 %54, 1, !dbg !12721
  store i64 %inc61, i64* %tx_errors, align 8, !dbg !12721
  br label %if.end62

if.end62:                                         ; preds = %if.else58, %if.then56
  %55 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12722
  %dev63 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %55, i32 0, i32 7, !dbg !12723
  %56 = load %struct.net_device*, %struct.net_device** %dev63, align 8, !dbg !12723
  call void @netif_wake_queue(%struct.net_device* %56) #10, !dbg !12724
  br label %if.end64, !dbg !12725

if.end64:                                         ; preds = %if.end62, %if.end48
  br label %for.inc, !dbg !12726

for.inc:                                          ; preds = %if.end64
  %57 = load i32, i32* %i, align 4, !dbg !12727
  %inc65 = add i32 %57, 1, !dbg !12727
  store i32 %inc65, i32* %i, align 4, !dbg !12727
  br label %for.cond, !dbg !12728, !llvm.loop !12729

for.end:                                          ; preds = %land.end
  ret void, !dbg !12731
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_command_irq(%struct.atmel_private* %priv) #0 !dbg !12732 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %status = alloca i8, align 1
  %command = alloca i8, align 1
  %fast_scan = alloca i32, align 4
  %wrqu = alloca %union.iwreq_data, align 8
  %bss_index = alloca i32, align 4
  %notify_scan_complete = alloca i32, align 4
  %auth = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !12733, metadata !DIExpression()), !dbg !12734
  call void @llvm.dbg.declare(metadata i8* %status, metadata !12735, metadata !DIExpression()), !dbg !12736
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12737
  %1 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12738
  %call = call zeroext i16 @atmel_co(%struct.atmel_private* %1, i16 zeroext 1) #10, !dbg !12739
  %call1 = call zeroext i8 @atmel_rmem8(%struct.atmel_private* %0, i16 zeroext %call) #10, !dbg !12740
  store i8 %call1, i8* %status, align 1, !dbg !12736
  call void @llvm.dbg.declare(metadata i8* %command, metadata !12741, metadata !DIExpression()), !dbg !12742
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12743
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12744
  %call2 = call zeroext i16 @atmel_co(%struct.atmel_private* %3, i16 zeroext 0) #10, !dbg !12745
  %call3 = call zeroext i8 @atmel_rmem8(%struct.atmel_private* %2, i16 zeroext %call2) #10, !dbg !12746
  store i8 %call3, i8* %command, align 1, !dbg !12742
  call void @llvm.dbg.declare(metadata i32* %fast_scan, metadata !12747, metadata !DIExpression()), !dbg !12748
  call void @llvm.dbg.declare(metadata %union.iwreq_data* %wrqu, metadata !12749, metadata !DIExpression()), !dbg !12750
  %4 = load i8, i8* %status, align 1, !dbg !12751
  %conv = zext i8 %4 to i32, !dbg !12751
  %cmp = icmp eq i32 %conv, 0, !dbg !12753
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12754

lor.lhs.false:                                    ; preds = %entry
  %5 = load i8, i8* %status, align 1, !dbg !12755
  %conv5 = zext i8 %5 to i32, !dbg !12755
  %cmp6 = icmp eq i32 %conv5, 8, !dbg !12756
  br i1 %cmp6, label %if.then, label %if.end, !dbg !12757

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %sw.epilog, !dbg !12758

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i8, i8* %command, align 1, !dbg !12759
  %conv8 = zext i8 %6 to i32, !dbg !12759
  switch i32 %conv8, label %sw.epilog [
    i32 5, label %sw.bb
    i32 3, label %sw.bb14
    i32 11, label %sw.bb40
    i32 4, label %sw.bb58
  ], !dbg !12760

sw.bb:                                            ; preds = %if.end
  %7 = load i8, i8* %status, align 1, !dbg !12761
  %conv9 = zext i8 %7 to i32, !dbg !12761
  %cmp10 = icmp eq i32 %conv9, 1, !dbg !12764
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !12765

if.then12:                                        ; preds = %sw.bb
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12766
  %station_is_associated = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %8, i32 0, i32 68, !dbg !12768
  %9 = load i32, i32* %station_is_associated, align 4, !dbg !12768
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12769
  %station_was_associated = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 67, !dbg !12770
  store i32 %9, i32* %station_was_associated, align 8, !dbg !12771
  %11 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12772
  %12 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12773
  %CurrentBSSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %12, i32 0, i32 76, !dbg !12774
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %CurrentBSSID, i64 0, i64 0, !dbg !12773
  call void @atmel_get_mib(%struct.atmel_private* %11, i8 zeroext 5, i8 zeroext 14, i8* %arraydecay, i32 6) #10, !dbg !12775
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12776
  call void @atmel_enter_state(%struct.atmel_private* %13, i32 4) #10, !dbg !12777
  br label %if.end13, !dbg !12778

if.end13:                                         ; preds = %if.then12, %sw.bb
  br label %sw.epilog, !dbg !12779

sw.bb14:                                          ; preds = %if.end
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12780
  %fast_scan15 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %14, i32 0, i32 69, !dbg !12781
  %15 = load i32, i32* %fast_scan15, align 8, !dbg !12781
  store i32 %15, i32* %fast_scan, align 4, !dbg !12782
  %16 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12783
  %fast_scan16 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %16, i32 0, i32 69, !dbg !12784
  store i32 0, i32* %fast_scan16, align 8, !dbg !12785
  %17 = load i8, i8* %status, align 1, !dbg !12786
  %conv17 = zext i8 %17 to i32, !dbg !12786
  %cmp18 = icmp ne i32 %conv17, 1, !dbg !12788
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !12789

if.then20:                                        ; preds = %sw.bb14
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12790
  call void @atmel_scan(%struct.atmel_private* %18, i32 1) #10, !dbg !12792
  br label %if.end39, !dbg !12793

if.else:                                          ; preds = %sw.bb14
  call void @llvm.dbg.declare(metadata i32* %bss_index, metadata !12794, metadata !DIExpression()), !dbg !12796
  %19 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12797
  %call21 = call i32 @retrieve_bss(%struct.atmel_private* %19) #10, !dbg !12798
  store i32 %call21, i32* %bss_index, align 4, !dbg !12796
  call void @llvm.dbg.declare(metadata i32* %notify_scan_complete, metadata !12799, metadata !DIExpression()), !dbg !12800
  store i32 1, i32* %notify_scan_complete, align 4, !dbg !12800
  %20 = load i32, i32* %bss_index, align 4, !dbg !12801
  %cmp22 = icmp ne i32 %20, -1, !dbg !12803
  br i1 %cmp22, label %if.then24, label %if.else25, !dbg !12804

if.then24:                                        ; preds = %if.else
  %21 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12805
  %22 = load i32, i32* %bss_index, align 4, !dbg !12807
  call void @atmel_join_bss(%struct.atmel_private* %21, i32 %22) #10, !dbg !12808
  br label %if.end34, !dbg !12809

if.else25:                                        ; preds = %if.else
  %23 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12810
  %operating_mode = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %23, i32 0, i32 43, !dbg !12812
  %24 = load i32, i32* %operating_mode, align 8, !dbg !12812
  %cmp26 = icmp eq i32 %24, 1, !dbg !12813
  br i1 %cmp26, label %land.lhs.true, label %if.else31, !dbg !12814

land.lhs.true:                                    ; preds = %if.else25
  %25 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12815
  %SSID_size = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %25, i32 0, i32 74, !dbg !12816
  %26 = load i32, i32* %SSID_size, align 8, !dbg !12816
  %cmp28 = icmp ne i32 %26, 0, !dbg !12817
  br i1 %cmp28, label %if.then30, label %if.else31, !dbg !12818

if.then30:                                        ; preds = %land.lhs.true
  %27 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12819
  call void @start(%struct.atmel_private* %27, i32 1) #10, !dbg !12821
  br label %if.end33, !dbg !12822

if.else31:                                        ; preds = %land.lhs.true, %if.else25
  %28 = load i32, i32* %fast_scan, align 4, !dbg !12823
  %tobool = icmp ne i32 %28, 0, !dbg !12825
  %lnot = xor i1 %tobool, true, !dbg !12825
  %lnot.ext = zext i1 %lnot to i32, !dbg !12825
  %29 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12826
  %fast_scan32 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %29, i32 0, i32 69, !dbg !12827
  store i32 %lnot.ext, i32* %fast_scan32, align 8, !dbg !12828
  %30 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12829
  call void @atmel_scan(%struct.atmel_private* %30, i32 1) #10, !dbg !12830
  store i32 0, i32* %notify_scan_complete, align 4, !dbg !12831
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.then30
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then24
  %31 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12832
  %site_survey_state = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %31, i32 0, i32 65, !dbg !12833
  store i32 2, i32* %site_survey_state, align 4, !dbg !12834
  %32 = load i32, i32* %notify_scan_complete, align 4, !dbg !12835
  %tobool35 = icmp ne i32 %32, 0, !dbg !12835
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !12837

if.then36:                                        ; preds = %if.end34
  %data = bitcast %union.iwreq_data* %wrqu to %struct.iw_point*, !dbg !12838
  %length = getelementptr inbounds %struct.iw_point, %struct.iw_point* %data, i32 0, i32 1, !dbg !12840
  store i16 0, i16* %length, align 8, !dbg !12841
  %data37 = bitcast %union.iwreq_data* %wrqu to %struct.iw_point*, !dbg !12842
  %flags = getelementptr inbounds %struct.iw_point, %struct.iw_point* %data37, i32 0, i32 2, !dbg !12843
  store i16 0, i16* %flags, align 2, !dbg !12844
  %33 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12845
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %33, i32 0, i32 7, !dbg !12846
  %34 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12846
  call void @wireless_send_event(%struct.net_device* %34, i32 35609, %union.iwreq_data* %wrqu, i8* null) #10, !dbg !12847
  br label %if.end38, !dbg !12848

if.end38:                                         ; preds = %if.then36, %if.end34
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then20
  br label %sw.epilog, !dbg !12849

sw.bb40:                                          ; preds = %if.end
  %35 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12850
  %fast_scan41 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %35, i32 0, i32 69, !dbg !12851
  store i32 0, i32* %fast_scan41, align 8, !dbg !12852
  %36 = load i8, i8* %status, align 1, !dbg !12853
  %conv42 = zext i8 %36 to i32, !dbg !12853
  %cmp43 = icmp ne i32 %conv42, 1, !dbg !12855
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !12856

if.then45:                                        ; preds = %sw.bb40
  br label %sw.epilog, !dbg !12857

if.end46:                                         ; preds = %sw.bb40
  %37 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12858
  %site_survey_state47 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %37, i32 0, i32 65, !dbg !12859
  store i32 2, i32* %site_survey_state47, align 4, !dbg !12860
  %38 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12861
  %station_is_associated48 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %38, i32 0, i32 68, !dbg !12863
  %39 = load i32, i32* %station_is_associated48, align 4, !dbg !12863
  %tobool49 = icmp ne i32 %39, 0, !dbg !12861
  br i1 %tobool49, label %if.then50, label %if.else56, !dbg !12864

if.then50:                                        ; preds = %if.end46
  %40 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12865
  call void @atmel_enter_state(%struct.atmel_private* %40, i32 4) #10, !dbg !12867
  %data51 = bitcast %union.iwreq_data* %wrqu to %struct.iw_point*, !dbg !12868
  %length52 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %data51, i32 0, i32 1, !dbg !12869
  store i16 0, i16* %length52, align 8, !dbg !12870
  %data53 = bitcast %union.iwreq_data* %wrqu to %struct.iw_point*, !dbg !12871
  %flags54 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %data53, i32 0, i32 2, !dbg !12872
  store i16 0, i16* %flags54, align 2, !dbg !12873
  %41 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12874
  %dev55 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %41, i32 0, i32 7, !dbg !12875
  %42 = load %struct.net_device*, %struct.net_device** %dev55, align 8, !dbg !12875
  call void @wireless_send_event(%struct.net_device* %42, i32 35609, %union.iwreq_data* %wrqu, i8* null) #10, !dbg !12876
  br label %if.end57, !dbg !12877

if.else56:                                        ; preds = %if.end46
  %43 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12878
  call void @atmel_scan(%struct.atmel_private* %43, i32 1) #10, !dbg !12880
  br label %if.end57

if.end57:                                         ; preds = %if.else56, %if.then50
  br label %sw.epilog, !dbg !12881

sw.bb58:                                          ; preds = %if.end
  %44 = load i8, i8* %status, align 1, !dbg !12882
  %conv59 = zext i8 %44 to i32, !dbg !12882
  %cmp60 = icmp eq i32 %conv59, 1, !dbg !12884
  br i1 %cmp60, label %if.then62, label %if.end80, !dbg !12885

if.then62:                                        ; preds = %sw.bb58
  %45 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12886
  %operating_mode63 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %45, i32 0, i32 43, !dbg !12889
  %46 = load i32, i32* %operating_mode63, align 8, !dbg !12889
  %cmp64 = icmp eq i32 %46, 1, !dbg !12890
  br i1 %cmp64, label %if.then66, label %if.else69, !dbg !12891

if.then66:                                        ; preds = %if.then62
  %47 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12892
  %station_is_associated67 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %47, i32 0, i32 68, !dbg !12894
  %48 = load i32, i32* %station_is_associated67, align 4, !dbg !12894
  %49 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12895
  %station_was_associated68 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %49, i32 0, i32 67, !dbg !12896
  store i32 %48, i32* %station_was_associated68, align 8, !dbg !12897
  %50 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12898
  call void @atmel_enter_state(%struct.atmel_private* %50, i32 4) #10, !dbg !12899
  br label %if.end79, !dbg !12900

if.else69:                                        ; preds = %if.then62
  call void @llvm.dbg.declare(metadata i32* %auth, metadata !12901, metadata !DIExpression()), !dbg !12903
  store i32 0, i32* %auth, align 4, !dbg !12903
  %51 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12904
  %AuthenticationRequestRetryCnt = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %51, i32 0, i32 62, !dbg !12905
  store i32 0, i32* %AuthenticationRequestRetryCnt, align 8, !dbg !12906
  %52 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12907
  call void @atmel_enter_state(%struct.atmel_private* %52, i32 2) #10, !dbg !12908
  %53 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12909
  %management_timer = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %53, i32 0, i32 6, !dbg !12910
  %54 = load volatile i64, i64* @jiffies, align 8, !dbg !12911
  %add = add i64 %54, 640, !dbg !12912
  %call70 = call i32 @mod_timer(%struct.timer_list* %management_timer, i64 %add) #10, !dbg !12913
  %55 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12914
  %CurrentAuthentTransactionSeqNum = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %55, i32 0, i32 60, !dbg !12915
  store i32 1, i32* %CurrentAuthentTransactionSeqNum, align 8, !dbg !12916
  %56 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12917
  %wep_is_on = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %56, i32 0, i32 30, !dbg !12919
  %57 = load i8, i8* %wep_is_on, align 4, !dbg !12919
  %conv71 = zext i8 %57 to i32, !dbg !12917
  %tobool72 = icmp ne i32 %conv71, 0, !dbg !12917
  br i1 %tobool72, label %land.lhs.true73, label %if.end77, !dbg !12920

land.lhs.true73:                                  ; preds = %if.else69
  %58 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12921
  %exclude_unencrypted = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %58, i32 0, i32 32, !dbg !12922
  %59 = load i8, i8* %exclude_unencrypted, align 2, !dbg !12922
  %conv74 = zext i8 %59 to i32, !dbg !12921
  %tobool75 = icmp ne i32 %conv74, 0, !dbg !12921
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !12923

if.then76:                                        ; preds = %land.lhs.true73
  store i32 1, i32* %auth, align 4, !dbg !12924
  br label %if.end77, !dbg !12925

if.end77:                                         ; preds = %if.then76, %land.lhs.true73, %if.else69
  %60 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12926
  %61 = load i32, i32* %auth, align 4, !dbg !12927
  %conv78 = trunc i32 %61 to i16, !dbg !12927
  call void @send_authentication_request(%struct.atmel_private* %60, i16 zeroext %conv78, i8* null, i32 0) #10, !dbg !12928
  br label %if.end79

if.end79:                                         ; preds = %if.end77, %if.then66
  br label %sw.epilog, !dbg !12929

if.end80:                                         ; preds = %sw.bb58
  %62 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12930
  call void @atmel_scan(%struct.atmel_private* %62, i32 1) #10, !dbg !12931
  br label %sw.epilog, !dbg !12932

sw.epilog:                                        ; preds = %if.then, %if.then45, %if.end79, %if.end80, %if.end, %if.end57, %if.end39, %if.end13
  ret void, !dbg !12933
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_get_mib(%struct.atmel_private* %priv, i8 zeroext %type, i8 zeroext %index, i8* %data, i32 %data_len) #0 !dbg !12934 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %type.addr = alloca i8, align 1
  %index.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  %data_len.addr = alloca i32, align 4
  %m = alloca %struct.get_set_mib, align 1
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !12937, metadata !DIExpression()), !dbg !12938
  store i8 %type, i8* %type.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %type.addr, metadata !12939, metadata !DIExpression()), !dbg !12940
  store i8 %index, i8* %index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %index.addr, metadata !12941, metadata !DIExpression()), !dbg !12942
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12943, metadata !DIExpression()), !dbg !12944
  store i32 %data_len, i32* %data_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_len.addr, metadata !12945, metadata !DIExpression()), !dbg !12946
  call void @llvm.dbg.declare(metadata %struct.get_set_mib* %m, metadata !12947, metadata !DIExpression()), !dbg !12948
  %0 = load i8, i8* %type.addr, align 1, !dbg !12949
  %type1 = getelementptr inbounds %struct.get_set_mib, %struct.get_set_mib* %m, i32 0, i32 0, !dbg !12950
  store i8 %0, i8* %type1, align 1, !dbg !12951
  %1 = load i32, i32* %data_len.addr, align 4, !dbg !12952
  %conv = trunc i32 %1 to i8, !dbg !12952
  %size = getelementptr inbounds %struct.get_set_mib, %struct.get_set_mib* %m, i32 0, i32 1, !dbg !12953
  store i8 %conv, i8* %size, align 1, !dbg !12954
  %2 = load i8, i8* %index.addr, align 1, !dbg !12955
  %index2 = getelementptr inbounds %struct.get_set_mib, %struct.get_set_mib* %m, i32 0, i32 2, !dbg !12956
  store i8 %2, i8* %index2, align 1, !dbg !12957
  %3 = load i32, i32* %data_len.addr, align 4, !dbg !12958
  %cmp = icmp sgt i32 %3, 212, !dbg !12960
  br i1 %cmp, label %if.then, label %if.end, !dbg !12961

if.then:                                          ; preds = %entry
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12962
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 7, !dbg !12963
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12963
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 0, !dbg !12964
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !12962
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay) #11, !dbg !12965
  br label %if.end, !dbg !12965

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12966
  %7 = bitcast %struct.get_set_mib* %m to i8*, !dbg !12967
  %8 = load i32, i32* %data_len.addr, align 4, !dbg !12968
  %add = add i32 4, %8, !dbg !12969
  %call4 = call i32 @atmel_send_command_wait(%struct.atmel_private* %6, i32 2, i8* %7, i32 %add) #10, !dbg !12970
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12971
  %dev5 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %9, i32 0, i32 7, !dbg !12972
  %10 = load %struct.net_device*, %struct.net_device** %dev5, align 8, !dbg !12972
  %11 = load i8*, i8** %data.addr, align 8, !dbg !12973
  %12 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !12974
  %call6 = call zeroext i16 @atmel_co(%struct.atmel_private* %12, i16 zeroext 8) #10, !dbg !12975
  %13 = load i32, i32* %data_len.addr, align 4, !dbg !12976
  %conv7 = trunc i32 %13 to i16, !dbg !12976
  call void @atmel_copy_to_host(%struct.net_device* %10, i8* %11, i16 zeroext %call6, i16 zeroext %conv7) #10, !dbg !12977
  ret void, !dbg !12978
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @build_wpa_mib(%struct.atmel_private* %priv) #0 !dbg !12979 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %mib = alloca %struct.anon.140, align 4
  %i = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !12980, metadata !DIExpression()), !dbg !12981
  call void @llvm.dbg.declare(metadata %struct.anon.140* %mib, metadata !12982, metadata !DIExpression()), !dbg !12998
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12999, metadata !DIExpression()), !dbg !13000
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13001
  %wep_is_on = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 30, !dbg !13002
  %1 = load i8, i8* %wep_is_on, align 4, !dbg !13002
  %wep_is_on1 = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 2, !dbg !13003
  store i8 %1, i8* %wep_is_on1, align 2, !dbg !13004
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13005
  %exclude_unencrypted = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 32, !dbg !13006
  %3 = load i8, i8* %exclude_unencrypted, align 2, !dbg !13006
  %exclude_unencrypted2 = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 5, !dbg !13007
  store i8 %3, i8* %exclude_unencrypted2, align 1, !dbg !13008
  %receiver_address = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 1, !dbg !13009
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %receiver_address, i64 0, i64 0, !dbg !13010
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13011
  %CurrentBSSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 76, !dbg !13012
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %CurrentBSSID, i64 0, i64 0, !dbg !13010
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay, i8* align 8 %arraydecay3, i64 6, i1 false), !dbg !13010
  %cipher_default_key_value = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 0, !dbg !13013
  %arraydecay4 = getelementptr inbounds [4 x [40 x i8]], [4 x [40 x i8]]* %cipher_default_key_value, i64 0, i64 0, !dbg !13014
  %5 = bitcast [40 x i8]* %arraydecay4 to i8*, !dbg !13014
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 160, i1 false), !dbg !13014
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13015
  %wep_is_on5 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 30, !dbg !13017
  %7 = load i8, i8* %wep_is_on5, align 4, !dbg !13017
  %tobool = icmp ne i8 %7, 0, !dbg !13015
  br i1 %tobool, label %if.then, label %if.end65, !dbg !13018

if.then:                                          ; preds = %entry
  %key_RSC = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 10, !dbg !13019
  %arraydecay6 = getelementptr inbounds [4 x [8 x i8]], [4 x [8 x i8]]* %key_RSC, i64 0, i64 0, !dbg !13021
  %8 = bitcast [8 x i8]* %arraydecay6 to i8*, !dbg !13021
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 32, i1 false), !dbg !13021
  %group_key = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 4, !dbg !13022
  store i8 -1, i8* %group_key, align 4, !dbg !13023
  %default_key = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 3, !dbg !13024
  store i8 -1, i8* %default_key, align 1, !dbg !13025
  store i32 0, i32* %i, align 4, !dbg !13026
  br label %for.cond, !dbg !13028

for.cond:                                         ; preds = %for.inc, %if.then
  %9 = load i32, i32* %i, align 4, !dbg !13029
  %cmp = icmp slt i32 %9, 4, !dbg !13031
  br i1 %cmp, label %for.body, label %for.end, !dbg !13032

for.body:                                         ; preds = %for.cond
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13033
  %wep_key_len = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 37, !dbg !13036
  %11 = load i32, i32* %i, align 4, !dbg !13037
  %idxprom = sext i32 %11 to i64, !dbg !13033
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %wep_key_len, i64 0, i64 %idxprom, !dbg !13033
  %12 = load i32, i32* %arrayidx, align 4, !dbg !13033
  %cmp7 = icmp sgt i32 %12, 0, !dbg !13038
  br i1 %cmp7, label %if.then8, label %if.end42, !dbg !13039

if.then8:                                         ; preds = %for.body
  %cipher_default_key_value9 = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 0, !dbg !13040
  %13 = load i32, i32* %i, align 4, !dbg !13042
  %idxprom10 = sext i32 %13 to i64, !dbg !13043
  %arrayidx11 = getelementptr [4 x [40 x i8]], [4 x [40 x i8]]* %cipher_default_key_value9, i64 0, i64 %idxprom10, !dbg !13043
  %arraydecay12 = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx11, i64 0, i64 0, !dbg !13044
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13045
  %wep_keys = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %14, i32 0, i32 36, !dbg !13046
  %15 = load i32, i32* %i, align 4, !dbg !13047
  %idxprom13 = sext i32 %15 to i64, !dbg !13045
  %arrayidx14 = getelementptr [4 x [40 x i8]], [4 x [40 x i8]]* %wep_keys, i64 0, i64 %idxprom13, !dbg !13045
  %arraydecay15 = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx14, i64 0, i64 0, !dbg !13044
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay12, i8* align 2 %arraydecay15, i64 40, i1 false), !dbg !13044
  %16 = load i32, i32* %i, align 4, !dbg !13048
  %17 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13050
  %default_key16 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %17, i32 0, i32 31, !dbg !13051
  %18 = load i8, i8* %default_key16, align 1, !dbg !13051
  %conv = zext i8 %18 to i32, !dbg !13050
  %cmp17 = icmp eq i32 %16, %conv, !dbg !13052
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !13053

if.then19:                                        ; preds = %if.then8
  %19 = load i32, i32* %i, align 4, !dbg !13054
  %conv20 = trunc i32 %19 to i8, !dbg !13054
  %default_key21 = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 3, !dbg !13056
  store i8 %conv20, i8* %default_key21, align 1, !dbg !13057
  %cipher_default_key_value22 = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 0, !dbg !13058
  %20 = load i32, i32* %i, align 4, !dbg !13059
  %idxprom23 = sext i32 %20 to i64, !dbg !13060
  %arrayidx24 = getelementptr [4 x [40 x i8]], [4 x [40 x i8]]* %cipher_default_key_value22, i64 0, i64 %idxprom23, !dbg !13060
  %arrayidx25 = getelementptr [40 x i8], [40 x i8]* %arrayidx24, i64 0, i64 39, !dbg !13060
  store i8 7, i8* %arrayidx25, align 1, !dbg !13061
  %21 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13062
  %pairwise_cipher_suite = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %21, i32 0, i32 35, !dbg !13063
  %22 = load i8, i8* %pairwise_cipher_suite, align 1, !dbg !13063
  %cipher_default_key_value26 = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 0, !dbg !13064
  %23 = load i32, i32* %i, align 4, !dbg !13065
  %idxprom27 = sext i32 %23 to i64, !dbg !13066
  %arrayidx28 = getelementptr [4 x [40 x i8]], [4 x [40 x i8]]* %cipher_default_key_value26, i64 0, i64 %idxprom27, !dbg !13066
  %arrayidx29 = getelementptr [40 x i8], [40 x i8]* %arrayidx28, i64 0, i64 38, !dbg !13066
  store i8 %22, i8* %arrayidx29, align 2, !dbg !13067
  br label %if.end, !dbg !13068

if.else:                                          ; preds = %if.then8
  %24 = load i32, i32* %i, align 4, !dbg !13069
  %conv30 = trunc i32 %24 to i8, !dbg !13069
  %group_key31 = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 4, !dbg !13071
  store i8 %conv30, i8* %group_key31, align 4, !dbg !13072
  %25 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13073
  %pairwise_cipher_suite32 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %25, i32 0, i32 35, !dbg !13074
  %26 = load i8, i8* %pairwise_cipher_suite32, align 1, !dbg !13074
  %27 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13075
  %group_cipher_suite = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %27, i32 0, i32 34, !dbg !13076
  store i8 %26, i8* %group_cipher_suite, align 8, !dbg !13077
  %cipher_default_key_value33 = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 0, !dbg !13078
  %28 = load i32, i32* %i, align 4, !dbg !13079
  %idxprom34 = sext i32 %28 to i64, !dbg !13080
  %arrayidx35 = getelementptr [4 x [40 x i8]], [4 x [40 x i8]]* %cipher_default_key_value33, i64 0, i64 %idxprom34, !dbg !13080
  %arrayidx36 = getelementptr [40 x i8], [40 x i8]* %arrayidx35, i64 0, i64 39, !dbg !13080
  store i8 1, i8* %arrayidx36, align 1, !dbg !13081
  %29 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13082
  %group_cipher_suite37 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %29, i32 0, i32 34, !dbg !13083
  %30 = load i8, i8* %group_cipher_suite37, align 8, !dbg !13083
  %cipher_default_key_value38 = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 0, !dbg !13084
  %31 = load i32, i32* %i, align 4, !dbg !13085
  %idxprom39 = sext i32 %31 to i64, !dbg !13086
  %arrayidx40 = getelementptr [4 x [40 x i8]], [4 x [40 x i8]]* %cipher_default_key_value38, i64 0, i64 %idxprom39, !dbg !13086
  %arrayidx41 = getelementptr [40 x i8], [40 x i8]* %arrayidx40, i64 0, i64 38, !dbg !13086
  store i8 %30, i8* %arrayidx41, align 2, !dbg !13087
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then19
  br label %if.end42, !dbg !13088

if.end42:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !13089

for.inc:                                          ; preds = %if.end42
  %32 = load i32, i32* %i, align 4, !dbg !13090
  %inc = add i32 %32, 1, !dbg !13090
  store i32 %inc, i32* %i, align 4, !dbg !13090
  br label %for.cond, !dbg !13091, !llvm.loop !13092

for.end:                                          ; preds = %for.cond
  %default_key43 = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 3, !dbg !13094
  %33 = load i8, i8* %default_key43, align 1, !dbg !13094
  %conv44 = zext i8 %33 to i32, !dbg !13096
  %cmp45 = icmp eq i32 %conv44, 255, !dbg !13097
  br i1 %cmp45, label %if.then47, label %if.end56, !dbg !13098

if.then47:                                        ; preds = %for.end
  %group_key48 = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 4, !dbg !13099
  %34 = load i8, i8* %group_key48, align 4, !dbg !13099
  %conv49 = zext i8 %34 to i32, !dbg !13100
  %cmp50 = icmp ne i32 %conv49, 255, !dbg !13101
  br i1 %cmp50, label %cond.true, label %cond.false, !dbg !13100

cond.true:                                        ; preds = %if.then47
  %group_key52 = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 4, !dbg !13102
  %35 = load i8, i8* %group_key52, align 4, !dbg !13102
  %conv53 = zext i8 %35 to i32, !dbg !13103
  br label %cond.end, !dbg !13100

cond.false:                                       ; preds = %if.then47
  br label %cond.end, !dbg !13100

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv53, %cond.true ], [ 0, %cond.false ], !dbg !13100
  %conv54 = trunc i32 %cond to i8, !dbg !13100
  %default_key55 = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 3, !dbg !13104
  store i8 %conv54, i8* %default_key55, align 1, !dbg !13105
  br label %if.end56, !dbg !13106

if.end56:                                         ; preds = %cond.end, %for.end
  %group_key57 = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 4, !dbg !13107
  %36 = load i8, i8* %group_key57, align 4, !dbg !13107
  %conv58 = zext i8 %36 to i32, !dbg !13109
  %cmp59 = icmp eq i32 %conv58, 255, !dbg !13110
  br i1 %cmp59, label %if.then61, label %if.end64, !dbg !13111

if.then61:                                        ; preds = %if.end56
  %default_key62 = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 3, !dbg !13112
  %37 = load i8, i8* %default_key62, align 1, !dbg !13112
  %group_key63 = getelementptr inbounds %struct.anon.140, %struct.anon.140* %mib, i32 0, i32 4, !dbg !13113
  store i8 %37, i8* %group_key63, align 4, !dbg !13114
  br label %if.end64, !dbg !13115

if.end64:                                         ; preds = %if.then61, %if.end56
  br label %if.end65, !dbg !13116

if.end65:                                         ; preds = %if.end64, %entry
  %38 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13117
  %39 = bitcast %struct.anon.140* %mib to i8*, !dbg !13118
  call void @atmel_set_mib(%struct.atmel_private* %38, i8 zeroext 6, i8 zeroext 0, i8* %39, i32 212) #10, !dbg !13119
  ret void, !dbg !13120
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @atmel_read8(%struct.net_device* %dev, i16 zeroext %offset) #0 !dbg !13121 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %offset.addr = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13124, metadata !DIExpression()), !dbg !13125
  store i16 %offset, i16* %offset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %offset.addr, metadata !13126, metadata !DIExpression()), !dbg !13127
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13128
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 5, !dbg !13129
  %1 = load i64, i64* %base_addr, align 8, !dbg !13129
  %2 = load i16, i16* %offset.addr, align 2, !dbg !13130
  %conv = zext i16 %2 to i64, !dbg !13130
  %add = add i64 %1, %conv, !dbg !13131
  %conv1 = trunc i64 %add to i32, !dbg !13128
  %call = call zeroext i8 @inb(i32 %conv1) #10, !dbg !13132
  ret i8 %call, !dbg !13133
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @inb(i32 %port) #0 !dbg !13134 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i8, align 1
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !13137, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.declare(metadata i8* %value, metadata !13139, metadata !DIExpression()), !dbg !13138
  %0 = load i32, i32* %port.addr, align 4, !dbg !13138
  %1 = call i8 asm sideeffect "inb ${1:w}, ${0:b}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #8, !dbg !13138, !srcloc !13140
  store i8 %1, i8* %value, align 1, !dbg !13138
  %2 = load i8, i8* %value, align 1, !dbg !13138
  ret i8 %2, !dbg !13138
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @atmel_rx(%struct.atmel_private* %priv, i16 zeroext %offset, i16 zeroext %desc) #0 !dbg !13141 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %offset.addr = alloca i16, align 2
  %desc.addr = alloca i16, align 2
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !13142, metadata !DIExpression()), !dbg !13143
  store i16 %offset, i16* %offset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %offset.addr, metadata !13144, metadata !DIExpression()), !dbg !13145
  store i16 %desc, i16* %desc.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %desc.addr, metadata !13146, metadata !DIExpression()), !dbg !13147
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13148
  %host_info = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 41, !dbg !13149
  %rx_desc_pos = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info, i32 0, i32 10, !dbg !13150
  %1 = load i16, i16* %rx_desc_pos, align 2, !dbg !13150
  %conv = zext i16 %1 to i64, !dbg !13148
  %2 = load i16, i16* %desc.addr, align 2, !dbg !13151
  %conv1 = zext i16 %2 to i64, !dbg !13151
  %mul = mul i64 20, %conv1, !dbg !13152
  %add = add i64 %conv, %mul, !dbg !13153
  %3 = load i16, i16* %offset.addr, align 2, !dbg !13154
  %conv2 = zext i16 %3 to i64, !dbg !13154
  %add3 = add i64 %add, %conv2, !dbg !13155
  %conv4 = trunc i64 %add3 to i16, !dbg !13148
  ret i16 %conv4, !dbg !13156
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @atmel_rmem16(%struct.atmel_private* %priv, i16 zeroext %pos) #0 !dbg !13157 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %pos.addr = alloca i16, align 2
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !13158, metadata !DIExpression()), !dbg !13159
  store i16 %pos, i16* %pos.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pos.addr, metadata !13160, metadata !DIExpression()), !dbg !13161
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13162
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 7, !dbg !13163
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13163
  %2 = load i16, i16* %pos.addr, align 2, !dbg !13164
  call void @atmel_writeAR(%struct.net_device* %1, i16 zeroext %2) #10, !dbg !13165
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13166
  %dev1 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %3, i32 0, i32 7, !dbg !13167
  %4 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !13167
  %call = call zeroext i16 @atmel_read16(%struct.net_device* %4, i16 zeroext 8) #10, !dbg !13168
  ret i16 %call, !dbg !13169
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_copy_to_host(%struct.net_device* %dev, i8* %dest, i16 zeroext %src, i16 zeroext %len) #0 !dbg !13170 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %dest.addr = alloca i8*, align 8
  %src.addr = alloca i16, align 2
  %len.addr = alloca i16, align 2
  %i = alloca i32, align 4
  %hw = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13173, metadata !DIExpression()), !dbg !13174
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !13175, metadata !DIExpression()), !dbg !13176
  store i16 %src, i16* %src.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %src.addr, metadata !13177, metadata !DIExpression()), !dbg !13178
  store i16 %len, i16* %len.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %len.addr, metadata !13179, metadata !DIExpression()), !dbg !13180
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13181, metadata !DIExpression()), !dbg !13182
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13183
  %1 = load i16, i16* %src.addr, align 2, !dbg !13184
  call void @atmel_writeAR(%struct.net_device* %0, i16 zeroext %1) #10, !dbg !13185
  %2 = load i16, i16* %src.addr, align 2, !dbg !13186
  %conv = zext i16 %2 to i32, !dbg !13186
  %rem = srem i32 %conv, 2, !dbg !13188
  %tobool = icmp ne i32 %rem, 0, !dbg !13188
  br i1 %tobool, label %if.then, label %if.end, !dbg !13189

if.then:                                          ; preds = %entry
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13190
  %call = call zeroext i8 @atmel_read8(%struct.net_device* %3, i16 zeroext 8) #10, !dbg !13192
  %4 = load i8*, i8** %dest.addr, align 8, !dbg !13193
  store i8 %call, i8* %4, align 1, !dbg !13194
  %5 = load i8*, i8** %dest.addr, align 8, !dbg !13195
  %incdec.ptr = getelementptr i8, i8* %5, i32 1, !dbg !13195
  store i8* %incdec.ptr, i8** %dest.addr, align 8, !dbg !13195
  %6 = load i16, i16* %len.addr, align 2, !dbg !13196
  %dec = add i16 %6, -1, !dbg !13196
  store i16 %dec, i16* %len.addr, align 2, !dbg !13196
  br label %if.end, !dbg !13197

if.end:                                           ; preds = %if.then, %entry
  %7 = load i16, i16* %len.addr, align 2, !dbg !13198
  %conv1 = zext i16 %7 to i32, !dbg !13198
  store i32 %conv1, i32* %i, align 4, !dbg !13200
  br label %for.cond, !dbg !13201

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !13202
  %cmp = icmp sgt i32 %8, 1, !dbg !13204
  br i1 %cmp, label %for.body, label %for.end, !dbg !13205

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %hw, metadata !13206, metadata !DIExpression()), !dbg !13208
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13209
  %call3 = call zeroext i16 @atmel_read16(%struct.net_device* %9, i16 zeroext 8) #10, !dbg !13210
  store i16 %call3, i16* %hw, align 2, !dbg !13208
  %10 = load i16, i16* %hw, align 2, !dbg !13211
  %conv4 = trunc i16 %10 to i8, !dbg !13211
  %11 = load i8*, i8** %dest.addr, align 8, !dbg !13212
  %incdec.ptr5 = getelementptr i8, i8* %11, i32 1, !dbg !13212
  store i8* %incdec.ptr5, i8** %dest.addr, align 8, !dbg !13212
  store i8 %conv4, i8* %11, align 1, !dbg !13213
  %12 = load i16, i16* %hw, align 2, !dbg !13214
  %conv6 = zext i16 %12 to i32, !dbg !13214
  %shr = ashr i32 %conv6, 8, !dbg !13215
  %conv7 = trunc i32 %shr to i8, !dbg !13214
  %13 = load i8*, i8** %dest.addr, align 8, !dbg !13216
  %incdec.ptr8 = getelementptr i8, i8* %13, i32 1, !dbg !13216
  store i8* %incdec.ptr8, i8** %dest.addr, align 8, !dbg !13216
  store i8 %conv7, i8* %13, align 1, !dbg !13217
  br label %for.inc, !dbg !13218

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !13219
  %sub = sub i32 %14, 2, !dbg !13219
  store i32 %sub, i32* %i, align 4, !dbg !13219
  br label %for.cond, !dbg !13220, !llvm.loop !13221

for.end:                                          ; preds = %for.cond
  %15 = load i32, i32* %i, align 4, !dbg !13223
  %tobool9 = icmp ne i32 %15, 0, !dbg !13223
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !13225

if.then10:                                        ; preds = %for.end
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13226
  %call11 = call zeroext i8 @atmel_read8(%struct.net_device* %16, i16 zeroext 8) #10, !dbg !13227
  %17 = load i8*, i8** %dest.addr, align 8, !dbg !13228
  store i8 %call11, i8* %17, align 1, !dbg !13229
  br label %if.end12, !dbg !13230

if.end12:                                         ; preds = %if.then10, %for.end
  ret void, !dbg !13231
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @probe_crc(%struct.atmel_private* %priv, i16 zeroext %packet_loc, i16 zeroext %msdu_size) #0 !dbg !13232 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.atmel_private*, align 8
  %packet_loc.addr = alloca i16, align 2
  %msdu_size.addr = alloca i16, align 2
  %i = alloca i32, align 4
  %netcrc = alloca i32, align 4
  %crc = alloca i32, align 4
  %octet = alloca i8, align 1
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !13235, metadata !DIExpression()), !dbg !13236
  store i16 %packet_loc, i16* %packet_loc.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %packet_loc.addr, metadata !13237, metadata !DIExpression()), !dbg !13238
  store i16 %msdu_size, i16* %msdu_size.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %msdu_size.addr, metadata !13239, metadata !DIExpression()), !dbg !13240
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13241, metadata !DIExpression()), !dbg !13242
  %0 = load i16, i16* %msdu_size.addr, align 2, !dbg !13243
  %conv = zext i16 %0 to i32, !dbg !13243
  %sub = sub i32 %conv, 4, !dbg !13244
  store i32 %sub, i32* %i, align 4, !dbg !13242
  call void @llvm.dbg.declare(metadata i32* %netcrc, metadata !13245, metadata !DIExpression()), !dbg !13246
  call void @llvm.dbg.declare(metadata i32* %crc, metadata !13247, metadata !DIExpression()), !dbg !13248
  store i32 -1, i32* %crc, align 4, !dbg !13248
  %1 = load i16, i16* %msdu_size.addr, align 2, !dbg !13249
  %conv1 = zext i16 %1 to i32, !dbg !13249
  %cmp = icmp slt i32 %conv1, 4, !dbg !13251
  br i1 %cmp, label %if.then, label %if.end, !dbg !13252

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13253
  br label %return, !dbg !13253

if.end:                                           ; preds = %entry
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13254
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 7, !dbg !13255
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13255
  %4 = bitcast i32* %netcrc to i8*, !dbg !13256
  %5 = load i16, i16* %packet_loc.addr, align 2, !dbg !13257
  %conv3 = zext i16 %5 to i32, !dbg !13257
  %6 = load i32, i32* %i, align 4, !dbg !13258
  %add = add i32 %conv3, %6, !dbg !13259
  %conv4 = trunc i32 %add to i16, !dbg !13257
  call void @atmel_copy_to_host(%struct.net_device* %3, i8* %4, i16 zeroext %conv4, i16 zeroext 4) #10, !dbg !13260
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13261
  %dev5 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %7, i32 0, i32 7, !dbg !13262
  %8 = load %struct.net_device*, %struct.net_device** %dev5, align 8, !dbg !13262
  %9 = load i16, i16* %packet_loc.addr, align 2, !dbg !13263
  call void @atmel_writeAR(%struct.net_device* %8, i16 zeroext %9) #10, !dbg !13264
  br label %while.cond, !dbg !13265

while.cond:                                       ; preds = %while.body, %if.end
  %10 = load i32, i32* %i, align 4, !dbg !13266
  %dec = add i32 %10, -1, !dbg !13266
  store i32 %dec, i32* %i, align 4, !dbg !13266
  %tobool = icmp ne i32 %10, 0, !dbg !13265
  br i1 %tobool, label %while.body, label %while.end, !dbg !13265

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %octet, metadata !13267, metadata !DIExpression()), !dbg !13269
  %11 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13270
  %dev6 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %11, i32 0, i32 7, !dbg !13271
  %12 = load %struct.net_device*, %struct.net_device** %dev6, align 8, !dbg !13271
  %call = call zeroext i8 @atmel_read8(%struct.net_device* %12, i16 zeroext 8) #10, !dbg !13272
  store i8 %call, i8* %octet, align 1, !dbg !13269
  %13 = load i32, i32* %crc, align 4, !dbg !13273
  %call7 = call i32 @crc32_le(i32 %13, i8* %octet, i64 1) #13, !dbg !13274
  store i32 %call7, i32* %crc, align 4, !dbg !13275
  br label %while.cond, !dbg !13265, !llvm.loop !13276

while.end:                                        ; preds = %while.cond
  %14 = load i32, i32* %crc, align 4, !dbg !13278
  %xor = xor i32 %14, -1, !dbg !13279
  %15 = load i32, i32* %netcrc, align 4, !dbg !13280
  %cmp8 = icmp eq i32 %xor, %15, !dbg !13281
  %conv9 = zext i1 %cmp8 to i32, !dbg !13281
  store i32 %conv9, i32* %retval, align 4, !dbg !13282
  br label %return, !dbg !13282

return:                                           ; preds = %while.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !13283
  ret i32 %16, !dbg !13283
}

; Function Attrs: noredzone nounwind readonly
declare dso_local i32 @crc32_le(i32, i8*, i64) #9

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fast_rx_path(%struct.atmel_private* %priv, %struct.ieee80211_hdr* %header, i16 zeroext %msdu_size, i16 zeroext %rx_packet_loc, i32 %crc) #0 !dbg !13284 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %header.addr = alloca %struct.ieee80211_hdr*, align 8
  %msdu_size.addr = alloca i16, align 2
  %rx_packet_loc.addr = alloca i16, align 2
  %crc.addr = alloca i32, align 4
  %mac4 = alloca [6 x i8], align 1
  %skb = alloca %struct.sk_buff*, align 8
  %skbp = alloca i8*, align 8
  %netcrc = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !13287, metadata !DIExpression()), !dbg !13288
  store %struct.ieee80211_hdr* %header, %struct.ieee80211_hdr** %header.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ieee80211_hdr** %header.addr, metadata !13289, metadata !DIExpression()), !dbg !13290
  store i16 %msdu_size, i16* %msdu_size.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %msdu_size.addr, metadata !13291, metadata !DIExpression()), !dbg !13292
  store i16 %rx_packet_loc, i16* %rx_packet_loc.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %rx_packet_loc.addr, metadata !13293, metadata !DIExpression()), !dbg !13294
  store i32 %crc, i32* %crc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %crc.addr, metadata !13295, metadata !DIExpression()), !dbg !13296
  call void @llvm.dbg.declare(metadata [6 x i8]* %mac4, metadata !13297, metadata !DIExpression()), !dbg !13298
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !13299, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.declare(metadata i8** %skbp, metadata !13301, metadata !DIExpression()), !dbg !13302
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13303
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 7, !dbg !13304
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13304
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %mac4, i64 0, i64 0, !dbg !13305
  %2 = load i16, i16* %rx_packet_loc.addr, align 2, !dbg !13306
  %conv = zext i16 %2 to i32, !dbg !13306
  %add = add i32 %conv, 24, !dbg !13307
  %conv1 = trunc i32 %add to i16, !dbg !13306
  call void @atmel_copy_to_host(%struct.net_device* %1, i8* %arraydecay, i16 zeroext %conv1, i16 zeroext 6) #10, !dbg !13308
  %3 = load i16, i16* %msdu_size.addr, align 2, !dbg !13309
  %conv2 = zext i16 %3 to i32, !dbg !13309
  %sub = sub i32 %conv2, 6, !dbg !13309
  %conv3 = trunc i32 %sub to i16, !dbg !13309
  store i16 %conv3, i16* %msdu_size.addr, align 2, !dbg !13309
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13310
  %do_rx_crc = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 14, !dbg !13312
  %5 = load i32, i32* %do_rx_crc, align 8, !dbg !13312
  %tobool = icmp ne i32 %5, 0, !dbg !13310
  br i1 %tobool, label %if.then, label %if.end, !dbg !13313

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %crc.addr, align 4, !dbg !13314
  %arraydecay4 = getelementptr inbounds [6 x i8], [6 x i8]* %mac4, i64 0, i64 0, !dbg !13316
  %call = call i32 @crc32_le(i32 %6, i8* %arraydecay4, i64 6) #13, !dbg !13317
  store i32 %call, i32* %crc.addr, align 4, !dbg !13318
  %7 = load i16, i16* %msdu_size.addr, align 2, !dbg !13319
  %conv5 = zext i16 %7 to i32, !dbg !13319
  %sub6 = sub i32 %conv5, 4, !dbg !13319
  %conv7 = trunc i32 %sub6 to i16, !dbg !13319
  store i16 %conv7, i16* %msdu_size.addr, align 2, !dbg !13319
  br label %if.end, !dbg !13320

if.end:                                           ; preds = %if.then, %entry
  %8 = load i16, i16* %msdu_size.addr, align 2, !dbg !13321
  %conv8 = zext i16 %8 to i32, !dbg !13321
  %add9 = add i32 %conv8, 14, !dbg !13323
  %call10 = call %struct.sk_buff* @dev_alloc_skb(i32 %add9) #10, !dbg !13324
  store %struct.sk_buff* %call10, %struct.sk_buff** %skb, align 8, !dbg !13325
  %tobool11 = icmp ne %struct.sk_buff* %call10, null, !dbg !13325
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !13326

if.then12:                                        ; preds = %if.end
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13327
  %dev13 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %9, i32 0, i32 7, !dbg !13329
  %10 = load %struct.net_device*, %struct.net_device** %dev13, align 8, !dbg !13329
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %10, i32 0, i32 24, !dbg !13330
  %rx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 6, !dbg !13331
  %11 = load i64, i64* %rx_dropped, align 8, !dbg !13332
  %inc = add i64 %11, 1, !dbg !13332
  store i64 %inc, i64* %rx_dropped, align 8, !dbg !13332
  br label %return, !dbg !13333

if.end14:                                         ; preds = %if.end
  %12 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13334
  call void @skb_reserve(%struct.sk_buff* %12, i32 2) #10, !dbg !13335
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13336
  %14 = load i16, i16* %msdu_size.addr, align 2, !dbg !13337
  %conv15 = zext i16 %14 to i32, !dbg !13337
  %add16 = add i32 %conv15, 12, !dbg !13338
  %call17 = call i8* @skb_put(%struct.sk_buff* %13, i32 %add16) #10, !dbg !13339
  store i8* %call17, i8** %skbp, align 8, !dbg !13340
  %15 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13341
  %dev18 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %15, i32 0, i32 7, !dbg !13342
  %16 = load %struct.net_device*, %struct.net_device** %dev18, align 8, !dbg !13342
  %17 = load i8*, i8** %skbp, align 8, !dbg !13343
  %add.ptr = getelementptr i8, i8* %17, i64 12, !dbg !13344
  %18 = load i16, i16* %rx_packet_loc.addr, align 2, !dbg !13345
  %conv19 = zext i16 %18 to i32, !dbg !13345
  %add20 = add i32 %conv19, 30, !dbg !13346
  %conv21 = trunc i32 %add20 to i16, !dbg !13345
  %19 = load i16, i16* %msdu_size.addr, align 2, !dbg !13347
  call void @atmel_copy_to_host(%struct.net_device* %16, i8* %add.ptr, i16 zeroext %conv21, i16 zeroext %19) #10, !dbg !13348
  %20 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13349
  %do_rx_crc22 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %20, i32 0, i32 14, !dbg !13351
  %21 = load i32, i32* %do_rx_crc22, align 8, !dbg !13351
  %tobool23 = icmp ne i32 %21, 0, !dbg !13349
  br i1 %tobool23, label %if.then24, label %if.end40, !dbg !13352

if.then24:                                        ; preds = %if.end14
  call void @llvm.dbg.declare(metadata i32* %netcrc, metadata !13353, metadata !DIExpression()), !dbg !13355
  %22 = load i32, i32* %crc.addr, align 4, !dbg !13356
  %23 = load i8*, i8** %skbp, align 8, !dbg !13357
  %add.ptr25 = getelementptr i8, i8* %23, i64 12, !dbg !13358
  %24 = load i16, i16* %msdu_size.addr, align 2, !dbg !13359
  %conv26 = zext i16 %24 to i64, !dbg !13359
  %call27 = call i32 @crc32_le(i32 %22, i8* %add.ptr25, i64 %conv26) #13, !dbg !13360
  store i32 %call27, i32* %crc.addr, align 4, !dbg !13361
  %25 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13362
  %dev28 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %25, i32 0, i32 7, !dbg !13363
  %26 = load %struct.net_device*, %struct.net_device** %dev28, align 8, !dbg !13363
  %27 = bitcast i32* %netcrc to i8*, !dbg !13364
  %28 = load i16, i16* %rx_packet_loc.addr, align 2, !dbg !13365
  %conv29 = zext i16 %28 to i32, !dbg !13365
  %add30 = add i32 %conv29, 30, !dbg !13366
  %29 = load i16, i16* %msdu_size.addr, align 2, !dbg !13367
  %conv31 = zext i16 %29 to i32, !dbg !13367
  %add32 = add i32 %add30, %conv31, !dbg !13368
  %conv33 = trunc i32 %add32 to i16, !dbg !13365
  call void @atmel_copy_to_host(%struct.net_device* %26, i8* %27, i16 zeroext %conv33, i16 zeroext 4) #10, !dbg !13369
  %30 = load i32, i32* %crc.addr, align 4, !dbg !13370
  %xor = xor i32 %30, -1, !dbg !13372
  %31 = load i32, i32* %netcrc, align 4, !dbg !13373
  %cmp = icmp ne i32 %xor, %31, !dbg !13374
  br i1 %cmp, label %if.then35, label %if.end39, !dbg !13375

if.then35:                                        ; preds = %if.then24
  %32 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13376
  %dev36 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %32, i32 0, i32 7, !dbg !13378
  %33 = load %struct.net_device*, %struct.net_device** %dev36, align 8, !dbg !13378
  %stats37 = getelementptr inbounds %struct.net_device, %struct.net_device* %33, i32 0, i32 24, !dbg !13379
  %rx_crc_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats37, i32 0, i32 12, !dbg !13380
  %34 = load i64, i64* %rx_crc_errors, align 8, !dbg !13381
  %inc38 = add i64 %34, 1, !dbg !13381
  store i64 %inc38, i64* %rx_crc_errors, align 8, !dbg !13381
  %35 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13382
  call void @consume_skb(%struct.sk_buff* %35) #10, !dbg !13382
  br label %return, !dbg !13383

if.end39:                                         ; preds = %if.then24
  br label %if.end40, !dbg !13384

if.end40:                                         ; preds = %if.end39, %if.end14
  %36 = load i8*, i8** %skbp, align 8, !dbg !13385
  %37 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !13386
  %addr1 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %37, i32 0, i32 2, !dbg !13387
  %arraydecay41 = getelementptr inbounds [6 x i8], [6 x i8]* %addr1, i64 0, i64 0, !dbg !13388
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 2 %arraydecay41, i64 6, i1 false), !dbg !13388
  %38 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !13389
  %frame_control = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %38, i32 0, i32 0, !dbg !13389
  %39 = load i16, i16* %frame_control, align 2, !dbg !13389
  %conv42 = zext i16 %39 to i32, !dbg !13389
  %and = and i32 %conv42, 512, !dbg !13391
  %tobool43 = icmp ne i32 %and, 0, !dbg !13391
  br i1 %tobool43, label %if.then44, label %if.else, !dbg !13392

if.then44:                                        ; preds = %if.end40
  %40 = load i8*, i8** %skbp, align 8, !dbg !13393
  %arrayidx = getelementptr i8, i8* %40, i64 6, !dbg !13393
  %41 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !13394
  %addr3 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %41, i32 0, i32 4, !dbg !13395
  %arraydecay45 = getelementptr inbounds [6 x i8], [6 x i8]* %addr3, i64 0, i64 0, !dbg !13396
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx, i8* align 2 %arraydecay45, i64 6, i1 false), !dbg !13396
  br label %if.end48, !dbg !13396

if.else:                                          ; preds = %if.end40
  %42 = load i8*, i8** %skbp, align 8, !dbg !13397
  %arrayidx46 = getelementptr i8, i8* %42, i64 6, !dbg !13397
  %43 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !13398
  %addr2 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %43, i32 0, i32 3, !dbg !13399
  %arraydecay47 = getelementptr inbounds [6 x i8], [6 x i8]* %addr2, i64 0, i64 0, !dbg !13400
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx46, i8* align 2 %arraydecay47, i64 6, i1 false), !dbg !13400
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.then44
  %44 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13401
  %45 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13402
  %dev49 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %45, i32 0, i32 7, !dbg !13403
  %46 = load %struct.net_device*, %struct.net_device** %dev49, align 8, !dbg !13403
  %call50 = call zeroext i16 @eth_type_trans(%struct.sk_buff* %44, %struct.net_device* %46) #10, !dbg !13404
  %47 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13405
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %47, i32 0, i32 29, !dbg !13406
  store i16 %call50, i16* %protocol, align 8, !dbg !13407
  %48 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13408
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %48, i32 0, i32 14, !dbg !13409
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !13410
  %bf.clear = and i16 %bf.load, -97, !dbg !13410
  store i16 %bf.clear, i16* %ip_summed, align 8, !dbg !13410
  %49 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13411
  %call51 = call i32 @netif_rx(%struct.sk_buff* %49) #10, !dbg !13412
  %50 = load i16, i16* %msdu_size.addr, align 2, !dbg !13413
  %conv52 = zext i16 %50 to i32, !dbg !13413
  %add53 = add i32 12, %conv52, !dbg !13414
  %conv54 = sext i32 %add53 to i64, !dbg !13415
  %51 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13416
  %dev55 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %51, i32 0, i32 7, !dbg !13417
  %52 = load %struct.net_device*, %struct.net_device** %dev55, align 8, !dbg !13417
  %stats56 = getelementptr inbounds %struct.net_device, %struct.net_device* %52, i32 0, i32 24, !dbg !13418
  %rx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats56, i32 0, i32 2, !dbg !13419
  %53 = load i64, i64* %rx_bytes, align 8, !dbg !13420
  %add57 = add i64 %53, %conv54, !dbg !13420
  store i64 %add57, i64* %rx_bytes, align 8, !dbg !13420
  %54 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13421
  %dev58 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %54, i32 0, i32 7, !dbg !13422
  %55 = load %struct.net_device*, %struct.net_device** %dev58, align 8, !dbg !13422
  %stats59 = getelementptr inbounds %struct.net_device, %struct.net_device* %55, i32 0, i32 24, !dbg !13423
  %rx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats59, i32 0, i32 0, !dbg !13424
  %56 = load i64, i64* %rx_packets, align 8, !dbg !13425
  %inc60 = add i64 %56, 1, !dbg !13425
  store i64 %inc60, i64* %rx_packets, align 8, !dbg !13425
  br label %return, !dbg !13426

return:                                           ; preds = %if.end48, %if.then35, %if.then12
  ret void, !dbg !13426
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @frag_rx_path(%struct.atmel_private* %priv, %struct.ieee80211_hdr* %header, i16 zeroext %msdu_size, i16 zeroext %rx_packet_loc, i32 %crc, i16 zeroext %seq_no, i8 zeroext %frag_no, i32 %more_frags) #0 !dbg !13427 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %header.addr = alloca %struct.ieee80211_hdr*, align 8
  %msdu_size.addr = alloca i16, align 2
  %rx_packet_loc.addr = alloca i16, align 2
  %crc.addr = alloca i32, align 4
  %seq_no.addr = alloca i16, align 2
  %frag_no.addr = alloca i8, align 1
  %more_frags.addr = alloca i32, align 4
  %mac4 = alloca [6 x i8], align 1
  %source = alloca [6 x i8], align 1
  %skb = alloca %struct.sk_buff*, align 8
  %netcrc = alloca i32, align 4
  %netcrc84 = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !13430, metadata !DIExpression()), !dbg !13431
  store %struct.ieee80211_hdr* %header, %struct.ieee80211_hdr** %header.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ieee80211_hdr** %header.addr, metadata !13432, metadata !DIExpression()), !dbg !13433
  store i16 %msdu_size, i16* %msdu_size.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %msdu_size.addr, metadata !13434, metadata !DIExpression()), !dbg !13435
  store i16 %rx_packet_loc, i16* %rx_packet_loc.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %rx_packet_loc.addr, metadata !13436, metadata !DIExpression()), !dbg !13437
  store i32 %crc, i32* %crc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %crc.addr, metadata !13438, metadata !DIExpression()), !dbg !13439
  store i16 %seq_no, i16* %seq_no.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %seq_no.addr, metadata !13440, metadata !DIExpression()), !dbg !13441
  store i8 %frag_no, i8* %frag_no.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %frag_no.addr, metadata !13442, metadata !DIExpression()), !dbg !13443
  store i32 %more_frags, i32* %more_frags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %more_frags.addr, metadata !13444, metadata !DIExpression()), !dbg !13445
  call void @llvm.dbg.declare(metadata [6 x i8]* %mac4, metadata !13446, metadata !DIExpression()), !dbg !13447
  call void @llvm.dbg.declare(metadata [6 x i8]* %source, metadata !13448, metadata !DIExpression()), !dbg !13449
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !13450, metadata !DIExpression()), !dbg !13451
  %0 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !13452
  %frame_control = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %0, i32 0, i32 0, !dbg !13452
  %1 = load i16, i16* %frame_control, align 2, !dbg !13452
  %conv = zext i16 %1 to i32, !dbg !13452
  %and = and i32 %conv, 512, !dbg !13454
  %tobool = icmp ne i32 %and, 0, !dbg !13454
  br i1 %tobool, label %if.then, label %if.else, !dbg !13455

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %source, i64 0, i64 0, !dbg !13456
  %2 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !13457
  %addr3 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %2, i32 0, i32 4, !dbg !13458
  %arraydecay1 = getelementptr inbounds [6 x i8], [6 x i8]* %addr3, i64 0, i64 0, !dbg !13456
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 2 %arraydecay1, i64 6, i1 false), !dbg !13456
  br label %if.end, !dbg !13456

if.else:                                          ; preds = %entry
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %source, i64 0, i64 0, !dbg !13459
  %3 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !13460
  %addr2 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %3, i32 0, i32 3, !dbg !13461
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %addr2, i64 0, i64 0, !dbg !13459
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay2, i8* align 2 %arraydecay3, i64 6, i1 false), !dbg !13459
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load i16, i16* %rx_packet_loc.addr, align 2, !dbg !13462
  %conv4 = zext i16 %4 to i32, !dbg !13462
  %add = add i32 %conv4, 24, !dbg !13462
  %conv5 = trunc i32 %add to i16, !dbg !13462
  store i16 %conv5, i16* %rx_packet_loc.addr, align 2, !dbg !13462
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13463
  %do_rx_crc = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %5, i32 0, i32 14, !dbg !13465
  %6 = load i32, i32* %do_rx_crc, align 8, !dbg !13465
  %tobool6 = icmp ne i32 %6, 0, !dbg !13463
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !13466

if.then7:                                         ; preds = %if.end
  %7 = load i16, i16* %msdu_size.addr, align 2, !dbg !13467
  %conv8 = zext i16 %7 to i32, !dbg !13467
  %sub = sub i32 %conv8, 4, !dbg !13467
  %conv9 = trunc i32 %sub to i16, !dbg !13467
  store i16 %conv9, i16* %msdu_size.addr, align 2, !dbg !13467
  br label %if.end10, !dbg !13468

if.end10:                                         ; preds = %if.then7, %if.end
  %8 = load i8, i8* %frag_no.addr, align 1, !dbg !13469
  %conv11 = zext i8 %8 to i32, !dbg !13469
  %cmp = icmp eq i32 %conv11, 0, !dbg !13471
  br i1 %cmp, label %if.then13, label %if.else56, !dbg !13472

if.then13:                                        ; preds = %if.end10
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13473
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %9, i32 0, i32 7, !dbg !13475
  %10 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13475
  %arraydecay14 = getelementptr inbounds [6 x i8], [6 x i8]* %mac4, i64 0, i64 0, !dbg !13476
  %11 = load i16, i16* %rx_packet_loc.addr, align 2, !dbg !13477
  call void @atmel_copy_to_host(%struct.net_device* %10, i8* %arraydecay14, i16 zeroext %11, i16 zeroext 6) #10, !dbg !13478
  %12 = load i16, i16* %msdu_size.addr, align 2, !dbg !13479
  %conv15 = zext i16 %12 to i32, !dbg !13479
  %sub16 = sub i32 %conv15, 6, !dbg !13479
  %conv17 = trunc i32 %sub16 to i16, !dbg !13479
  store i16 %conv17, i16* %msdu_size.addr, align 2, !dbg !13479
  %13 = load i16, i16* %rx_packet_loc.addr, align 2, !dbg !13480
  %conv18 = zext i16 %13 to i32, !dbg !13480
  %add19 = add i32 %conv18, 6, !dbg !13480
  %conv20 = trunc i32 %add19 to i16, !dbg !13480
  store i16 %conv20, i16* %rx_packet_loc.addr, align 2, !dbg !13480
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13481
  %do_rx_crc21 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %14, i32 0, i32 14, !dbg !13483
  %15 = load i32, i32* %do_rx_crc21, align 8, !dbg !13483
  %tobool22 = icmp ne i32 %15, 0, !dbg !13481
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !13484

if.then23:                                        ; preds = %if.then13
  %16 = load i32, i32* %crc.addr, align 4, !dbg !13485
  %arraydecay24 = getelementptr inbounds [6 x i8], [6 x i8]* %mac4, i64 0, i64 0, !dbg !13486
  %call = call i32 @crc32_le(i32 %16, i8* %arraydecay24, i64 6) #13, !dbg !13487
  store i32 %call, i32* %crc.addr, align 4, !dbg !13488
  br label %if.end25, !dbg !13489

if.end25:                                         ; preds = %if.then23, %if.then13
  %17 = load i16, i16* %seq_no.addr, align 2, !dbg !13490
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13491
  %frag_seq = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %18, i32 0, i32 26, !dbg !13492
  store i16 %17, i16* %frag_seq, align 8, !dbg !13493
  %19 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13494
  %frag_no26 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %19, i32 0, i32 28, !dbg !13495
  store i16 1, i16* %frag_no26, align 4, !dbg !13496
  %20 = load i16, i16* %msdu_size.addr, align 2, !dbg !13497
  %21 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13498
  %frag_len = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %21, i32 0, i32 27, !dbg !13499
  store i16 %20, i16* %frag_len, align 2, !dbg !13500
  %22 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13501
  %frag_source = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %22, i32 0, i32 29, !dbg !13502
  %arraydecay27 = getelementptr inbounds [6 x i8], [6 x i8]* %frag_source, i64 0, i64 0, !dbg !13503
  %arraydecay28 = getelementptr inbounds [6 x i8], [6 x i8]* %source, i64 0, i64 0, !dbg !13503
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay27, i8* align 1 %arraydecay28, i64 6, i1 false), !dbg !13503
  %23 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13504
  %rx_buf = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %23, i32 0, i32 81, !dbg !13505
  %arrayidx = getelementptr [2316 x i8], [2316 x i8]* %rx_buf, i64 0, i64 6, !dbg !13504
  %arraydecay29 = getelementptr inbounds [6 x i8], [6 x i8]* %source, i64 0, i64 0, !dbg !13506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arrayidx, i8* align 1 %arraydecay29, i64 6, i1 false), !dbg !13506
  %24 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13507
  %rx_buf30 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %24, i32 0, i32 81, !dbg !13508
  %arraydecay31 = getelementptr inbounds [2316 x i8], [2316 x i8]* %rx_buf30, i64 0, i64 0, !dbg !13509
  %25 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !13510
  %addr1 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %25, i32 0, i32 2, !dbg !13511
  %arraydecay32 = getelementptr inbounds [6 x i8], [6 x i8]* %addr1, i64 0, i64 0, !dbg !13509
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay31, i8* align 2 %arraydecay32, i64 6, i1 false), !dbg !13509
  %26 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13512
  %dev33 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %26, i32 0, i32 7, !dbg !13513
  %27 = load %struct.net_device*, %struct.net_device** %dev33, align 8, !dbg !13513
  %28 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13514
  %rx_buf34 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %28, i32 0, i32 81, !dbg !13515
  %arrayidx35 = getelementptr [2316 x i8], [2316 x i8]* %rx_buf34, i64 0, i64 12, !dbg !13514
  %29 = load i16, i16* %rx_packet_loc.addr, align 2, !dbg !13516
  %30 = load i16, i16* %msdu_size.addr, align 2, !dbg !13517
  call void @atmel_copy_to_host(%struct.net_device* %27, i8* %arrayidx35, i16 zeroext %29, i16 zeroext %30) #10, !dbg !13518
  %31 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13519
  %do_rx_crc36 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %31, i32 0, i32 14, !dbg !13521
  %32 = load i32, i32* %do_rx_crc36, align 8, !dbg !13521
  %tobool37 = icmp ne i32 %32, 0, !dbg !13519
  br i1 %tobool37, label %if.then38, label %if.end55, !dbg !13522

if.then38:                                        ; preds = %if.end25
  call void @llvm.dbg.declare(metadata i32* %netcrc, metadata !13523, metadata !DIExpression()), !dbg !13525
  %33 = load i32, i32* %crc.addr, align 4, !dbg !13526
  %34 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13527
  %rx_buf39 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %34, i32 0, i32 81, !dbg !13528
  %arrayidx40 = getelementptr [2316 x i8], [2316 x i8]* %rx_buf39, i64 0, i64 12, !dbg !13527
  %35 = load i16, i16* %msdu_size.addr, align 2, !dbg !13529
  %conv41 = zext i16 %35 to i64, !dbg !13529
  %call42 = call i32 @crc32_le(i32 %33, i8* %arrayidx40, i64 %conv41) #13, !dbg !13530
  store i32 %call42, i32* %crc.addr, align 4, !dbg !13531
  %36 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13532
  %dev43 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %36, i32 0, i32 7, !dbg !13533
  %37 = load %struct.net_device*, %struct.net_device** %dev43, align 8, !dbg !13533
  %38 = bitcast i32* %netcrc to i8*, !dbg !13534
  %39 = load i16, i16* %rx_packet_loc.addr, align 2, !dbg !13535
  %conv44 = zext i16 %39 to i32, !dbg !13535
  %40 = load i16, i16* %msdu_size.addr, align 2, !dbg !13536
  %conv45 = zext i16 %40 to i32, !dbg !13536
  %add46 = add i32 %conv44, %conv45, !dbg !13537
  %conv47 = trunc i32 %add46 to i16, !dbg !13535
  call void @atmel_copy_to_host(%struct.net_device* %37, i8* %38, i16 zeroext %conv47, i16 zeroext 4) #10, !dbg !13538
  %41 = load i32, i32* %crc.addr, align 4, !dbg !13539
  %xor = xor i32 %41, -1, !dbg !13541
  %42 = load i32, i32* %netcrc, align 4, !dbg !13542
  %cmp48 = icmp ne i32 %xor, %42, !dbg !13543
  br i1 %cmp48, label %if.then50, label %if.end54, !dbg !13544

if.then50:                                        ; preds = %if.then38
  %43 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13545
  %dev51 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %43, i32 0, i32 7, !dbg !13547
  %44 = load %struct.net_device*, %struct.net_device** %dev51, align 8, !dbg !13547
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %44, i32 0, i32 24, !dbg !13548
  %rx_crc_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 12, !dbg !13549
  %45 = load i64, i64* %rx_crc_errors, align 8, !dbg !13550
  %inc = add i64 %45, 1, !dbg !13550
  store i64 %inc, i64* %rx_crc_errors, align 8, !dbg !13550
  %46 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13551
  %frag_source52 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %46, i32 0, i32 29, !dbg !13552
  %arraydecay53 = getelementptr inbounds [6 x i8], [6 x i8]* %frag_source52, i64 0, i64 0, !dbg !13551
  call void @eth_broadcast_addr(i8* %arraydecay53) #10, !dbg !13553
  br label %if.end54, !dbg !13554

if.end54:                                         ; preds = %if.then50, %if.then38
  br label %if.end55, !dbg !13555

if.end55:                                         ; preds = %if.end54, %if.end25
  br label %if.end155, !dbg !13556

if.else56:                                        ; preds = %if.end10
  %47 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13557
  %frag_no57 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %47, i32 0, i32 28, !dbg !13559
  %48 = load i16, i16* %frag_no57, align 4, !dbg !13559
  %conv58 = zext i16 %48 to i32, !dbg !13557
  %49 = load i8, i8* %frag_no.addr, align 1, !dbg !13560
  %conv59 = zext i8 %49 to i32, !dbg !13560
  %cmp60 = icmp eq i32 %conv58, %conv59, !dbg !13561
  br i1 %cmp60, label %land.lhs.true, label %if.else152, !dbg !13562

land.lhs.true:                                    ; preds = %if.else56
  %50 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13563
  %frag_seq62 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %50, i32 0, i32 26, !dbg !13564
  %51 = load i16, i16* %frag_seq62, align 8, !dbg !13564
  %conv63 = zext i16 %51 to i32, !dbg !13563
  %52 = load i16, i16* %seq_no.addr, align 2, !dbg !13565
  %conv64 = zext i16 %52 to i32, !dbg !13565
  %cmp65 = icmp eq i32 %conv63, %conv64, !dbg !13566
  br i1 %cmp65, label %land.lhs.true67, label %if.else152, !dbg !13567

land.lhs.true67:                                  ; preds = %land.lhs.true
  %53 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13568
  %frag_source68 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %53, i32 0, i32 29, !dbg !13569
  %arraydecay69 = getelementptr inbounds [6 x i8], [6 x i8]* %frag_source68, i64 0, i64 0, !dbg !13568
  %arraydecay70 = getelementptr inbounds [6 x i8], [6 x i8]* %source, i64 0, i64 0, !dbg !13570
  %call71 = call i32 @memcmp(i8* %arraydecay69, i8* %arraydecay70, i64 6) #10, !dbg !13571
  %cmp72 = icmp eq i32 %call71, 0, !dbg !13572
  br i1 %cmp72, label %if.then74, label %if.else152, !dbg !13573

if.then74:                                        ; preds = %land.lhs.true67
  %54 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13574
  %dev75 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %54, i32 0, i32 7, !dbg !13576
  %55 = load %struct.net_device*, %struct.net_device** %dev75, align 8, !dbg !13576
  %56 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13577
  %rx_buf76 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %56, i32 0, i32 81, !dbg !13578
  %57 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13579
  %frag_len77 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %57, i32 0, i32 27, !dbg !13580
  %58 = load i16, i16* %frag_len77, align 2, !dbg !13580
  %conv78 = zext i16 %58 to i32, !dbg !13579
  %add79 = add i32 12, %conv78, !dbg !13581
  %idxprom = sext i32 %add79 to i64, !dbg !13577
  %arrayidx80 = getelementptr [2316 x i8], [2316 x i8]* %rx_buf76, i64 0, i64 %idxprom, !dbg !13577
  %59 = load i16, i16* %rx_packet_loc.addr, align 2, !dbg !13582
  %60 = load i16, i16* %msdu_size.addr, align 2, !dbg !13583
  call void @atmel_copy_to_host(%struct.net_device* %55, i8* %arrayidx80, i16 zeroext %59, i16 zeroext %60) #10, !dbg !13584
  %61 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13585
  %do_rx_crc81 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %61, i32 0, i32 14, !dbg !13587
  %62 = load i32, i32* %do_rx_crc81, align 8, !dbg !13587
  %tobool82 = icmp ne i32 %62, 0, !dbg !13585
  br i1 %tobool82, label %if.then83, label %if.end109, !dbg !13588

if.then83:                                        ; preds = %if.then74
  call void @llvm.dbg.declare(metadata i32* %netcrc84, metadata !13589, metadata !DIExpression()), !dbg !13591
  %63 = load i32, i32* %crc.addr, align 4, !dbg !13592
  %64 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13593
  %rx_buf85 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %64, i32 0, i32 81, !dbg !13594
  %65 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13595
  %frag_len86 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %65, i32 0, i32 27, !dbg !13596
  %66 = load i16, i16* %frag_len86, align 2, !dbg !13596
  %conv87 = zext i16 %66 to i32, !dbg !13595
  %add88 = add i32 12, %conv87, !dbg !13597
  %idxprom89 = sext i32 %add88 to i64, !dbg !13593
  %arrayidx90 = getelementptr [2316 x i8], [2316 x i8]* %rx_buf85, i64 0, i64 %idxprom89, !dbg !13593
  %67 = load i16, i16* %msdu_size.addr, align 2, !dbg !13598
  %conv91 = zext i16 %67 to i64, !dbg !13598
  %call92 = call i32 @crc32_le(i32 %63, i8* %arrayidx90, i64 %conv91) #13, !dbg !13599
  store i32 %call92, i32* %crc.addr, align 4, !dbg !13600
  %68 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13601
  %dev93 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %68, i32 0, i32 7, !dbg !13602
  %69 = load %struct.net_device*, %struct.net_device** %dev93, align 8, !dbg !13602
  %70 = bitcast i32* %netcrc84 to i8*, !dbg !13603
  %71 = load i16, i16* %rx_packet_loc.addr, align 2, !dbg !13604
  %conv94 = zext i16 %71 to i32, !dbg !13604
  %72 = load i16, i16* %msdu_size.addr, align 2, !dbg !13605
  %conv95 = zext i16 %72 to i32, !dbg !13605
  %add96 = add i32 %conv94, %conv95, !dbg !13606
  %conv97 = trunc i32 %add96 to i16, !dbg !13604
  call void @atmel_copy_to_host(%struct.net_device* %69, i8* %70, i16 zeroext %conv97, i16 zeroext 4) #10, !dbg !13607
  %73 = load i32, i32* %crc.addr, align 4, !dbg !13608
  %xor98 = xor i32 %73, -1, !dbg !13610
  %74 = load i32, i32* %netcrc84, align 4, !dbg !13611
  %cmp99 = icmp ne i32 %xor98, %74, !dbg !13612
  br i1 %cmp99, label %if.then101, label %if.end108, !dbg !13613

if.then101:                                       ; preds = %if.then83
  %75 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13614
  %dev102 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %75, i32 0, i32 7, !dbg !13616
  %76 = load %struct.net_device*, %struct.net_device** %dev102, align 8, !dbg !13616
  %stats103 = getelementptr inbounds %struct.net_device, %struct.net_device* %76, i32 0, i32 24, !dbg !13617
  %rx_crc_errors104 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats103, i32 0, i32 12, !dbg !13618
  %77 = load i64, i64* %rx_crc_errors104, align 8, !dbg !13619
  %inc105 = add i64 %77, 1, !dbg !13619
  store i64 %inc105, i64* %rx_crc_errors104, align 8, !dbg !13619
  %78 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13620
  %frag_source106 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %78, i32 0, i32 29, !dbg !13621
  %arraydecay107 = getelementptr inbounds [6 x i8], [6 x i8]* %frag_source106, i64 0, i64 0, !dbg !13620
  call void @eth_broadcast_addr(i8* %arraydecay107) #10, !dbg !13622
  store i32 1, i32* %more_frags.addr, align 4, !dbg !13623
  br label %if.end108, !dbg !13624

if.end108:                                        ; preds = %if.then101, %if.then83
  br label %if.end109, !dbg !13625

if.end109:                                        ; preds = %if.end108, %if.then74
  %79 = load i16, i16* %msdu_size.addr, align 2, !dbg !13626
  %conv110 = zext i16 %79 to i32, !dbg !13626
  %80 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13627
  %frag_len111 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %80, i32 0, i32 27, !dbg !13628
  %81 = load i16, i16* %frag_len111, align 2, !dbg !13629
  %conv112 = zext i16 %81 to i32, !dbg !13629
  %add113 = add i32 %conv112, %conv110, !dbg !13629
  %conv114 = trunc i32 %add113 to i16, !dbg !13629
  store i16 %conv114, i16* %frag_len111, align 2, !dbg !13629
  %82 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13630
  %frag_no115 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %82, i32 0, i32 28, !dbg !13631
  %83 = load i16, i16* %frag_no115, align 4, !dbg !13632
  %inc116 = add i16 %83, 1, !dbg !13632
  store i16 %inc116, i16* %frag_no115, align 4, !dbg !13632
  %84 = load i32, i32* %more_frags.addr, align 4, !dbg !13633
  %tobool117 = icmp ne i32 %84, 0, !dbg !13633
  br i1 %tobool117, label %if.end151, label %if.then118, !dbg !13635

if.then118:                                       ; preds = %if.end109
  %85 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13636
  %frag_source119 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %85, i32 0, i32 29, !dbg !13638
  %arraydecay120 = getelementptr inbounds [6 x i8], [6 x i8]* %frag_source119, i64 0, i64 0, !dbg !13636
  call void @eth_broadcast_addr(i8* %arraydecay120) #10, !dbg !13639
  %86 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13640
  %frag_len121 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %86, i32 0, i32 27, !dbg !13642
  %87 = load i16, i16* %frag_len121, align 2, !dbg !13642
  %conv122 = zext i16 %87 to i32, !dbg !13640
  %add123 = add i32 %conv122, 14, !dbg !13643
  %call124 = call %struct.sk_buff* @dev_alloc_skb(i32 %add123) #10, !dbg !13644
  store %struct.sk_buff* %call124, %struct.sk_buff** %skb, align 8, !dbg !13645
  %tobool125 = icmp ne %struct.sk_buff* %call124, null, !dbg !13645
  br i1 %tobool125, label %if.else130, label %if.then126, !dbg !13646

if.then126:                                       ; preds = %if.then118
  %88 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13647
  %dev127 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %88, i32 0, i32 7, !dbg !13649
  %89 = load %struct.net_device*, %struct.net_device** %dev127, align 8, !dbg !13649
  %stats128 = getelementptr inbounds %struct.net_device, %struct.net_device* %89, i32 0, i32 24, !dbg !13650
  %rx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats128, i32 0, i32 6, !dbg !13651
  %90 = load i64, i64* %rx_dropped, align 8, !dbg !13652
  %inc129 = add i64 %90, 1, !dbg !13652
  store i64 %inc129, i64* %rx_dropped, align 8, !dbg !13652
  br label %if.end150, !dbg !13653

if.else130:                                       ; preds = %if.then118
  %91 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13654
  call void @skb_reserve(%struct.sk_buff* %91, i32 2) #10, !dbg !13656
  %92 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13657
  %93 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13658
  %rx_buf131 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %93, i32 0, i32 81, !dbg !13659
  %arraydecay132 = getelementptr inbounds [2316 x i8], [2316 x i8]* %rx_buf131, i64 0, i64 0, !dbg !13658
  %94 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13660
  %frag_len133 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %94, i32 0, i32 27, !dbg !13661
  %95 = load i16, i16* %frag_len133, align 2, !dbg !13661
  %conv134 = zext i16 %95 to i32, !dbg !13660
  %add135 = add i32 %conv134, 12, !dbg !13662
  %call136 = call i8* @skb_put_data(%struct.sk_buff* %92, i8* %arraydecay132, i32 %add135) #10, !dbg !13663
  %96 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13664
  %97 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13665
  %dev137 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %97, i32 0, i32 7, !dbg !13666
  %98 = load %struct.net_device*, %struct.net_device** %dev137, align 8, !dbg !13666
  %call138 = call zeroext i16 @eth_type_trans(%struct.sk_buff* %96, %struct.net_device* %98) #10, !dbg !13667
  %99 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13668
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %99, i32 0, i32 29, !dbg !13669
  store i16 %call138, i16* %protocol, align 8, !dbg !13670
  %100 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13671
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %100, i32 0, i32 14, !dbg !13672
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !13673
  %bf.clear = and i16 %bf.load, -97, !dbg !13673
  store i16 %bf.clear, i16* %ip_summed, align 8, !dbg !13673
  %101 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13674
  %call139 = call i32 @netif_rx(%struct.sk_buff* %101) #10, !dbg !13675
  %102 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13676
  %frag_len140 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %102, i32 0, i32 27, !dbg !13677
  %103 = load i16, i16* %frag_len140, align 2, !dbg !13677
  %conv141 = zext i16 %103 to i32, !dbg !13676
  %add142 = add i32 %conv141, 12, !dbg !13678
  %conv143 = sext i32 %add142 to i64, !dbg !13676
  %104 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13679
  %dev144 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %104, i32 0, i32 7, !dbg !13680
  %105 = load %struct.net_device*, %struct.net_device** %dev144, align 8, !dbg !13680
  %stats145 = getelementptr inbounds %struct.net_device, %struct.net_device* %105, i32 0, i32 24, !dbg !13681
  %rx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats145, i32 0, i32 2, !dbg !13682
  %106 = load i64, i64* %rx_bytes, align 8, !dbg !13683
  %add146 = add i64 %106, %conv143, !dbg !13683
  store i64 %add146, i64* %rx_bytes, align 8, !dbg !13683
  %107 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13684
  %dev147 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %107, i32 0, i32 7, !dbg !13685
  %108 = load %struct.net_device*, %struct.net_device** %dev147, align 8, !dbg !13685
  %stats148 = getelementptr inbounds %struct.net_device, %struct.net_device* %108, i32 0, i32 24, !dbg !13686
  %rx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats148, i32 0, i32 0, !dbg !13687
  %109 = load i64, i64* %rx_packets, align 8, !dbg !13688
  %inc149 = add i64 %109, 1, !dbg !13688
  store i64 %inc149, i64* %rx_packets, align 8, !dbg !13688
  br label %if.end150

if.end150:                                        ; preds = %if.else130, %if.then126
  br label %if.end151, !dbg !13689

if.end151:                                        ; preds = %if.end150, %if.end109
  br label %if.end154, !dbg !13690

if.else152:                                       ; preds = %land.lhs.true67, %land.lhs.true, %if.else56
  %110 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13691
  %wstats = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %110, i32 0, i32 9, !dbg !13692
  %discard = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats, i32 0, i32 2, !dbg !13693
  %fragment = getelementptr inbounds %struct.iw_discarded, %struct.iw_discarded* %discard, i32 0, i32 2, !dbg !13694
  %111 = load i32, i32* %fragment, align 8, !dbg !13695
  %inc153 = add i32 %111, 1, !dbg !13695
  store i32 %inc153, i32* %fragment, align 8, !dbg !13695
  br label %if.end154

if.end154:                                        ; preds = %if.else152, %if.end151
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.end55
  ret void, !dbg !13696
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eth_broadcast_addr(i8* %addr) #0 !dbg !13697 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !13698, metadata !DIExpression()), !dbg !13699
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !13700
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 -1, i64 6, i1 false), !dbg !13701
  ret void, !dbg !13702
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_management_frame(%struct.atmel_private* %priv, %struct.ieee80211_hdr* %header, i16 zeroext %frame_len, i8 zeroext %rssi) #0 !dbg !8584 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %header.addr = alloca %struct.ieee80211_hdr*, align 8
  %frame_len.addr = alloca i16, align 2
  %rssi.addr = alloca i8, align 1
  %subtype = alloca i16, align 2
  %beacon = alloca %struct.beacon_format*, align 8
  %channel = alloca i8, align 1
  %rates_length = alloca i8, align 1
  %ssid_length = alloca i8, align 1
  %timestamp = alloca i64, align 8
  %beacon_interval = alloca i16, align 2
  %capability = alloca i16, align 2
  %beaconp = alloca i8*, align 8
  %beacon_delay = alloca i32, align 4
  %beacons = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !13703, metadata !DIExpression()), !dbg !13704
  store %struct.ieee80211_hdr* %header, %struct.ieee80211_hdr** %header.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ieee80211_hdr** %header.addr, metadata !13705, metadata !DIExpression()), !dbg !13706
  store i16 %frame_len, i16* %frame_len.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %frame_len.addr, metadata !13707, metadata !DIExpression()), !dbg !13708
  store i8 %rssi, i8* %rssi.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rssi.addr, metadata !13709, metadata !DIExpression()), !dbg !13710
  call void @llvm.dbg.declare(metadata i16* %subtype, metadata !13711, metadata !DIExpression()), !dbg !13712
  %0 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !13713
  %frame_control = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %0, i32 0, i32 0, !dbg !13713
  %1 = load i16, i16* %frame_control, align 2, !dbg !13713
  %conv = zext i16 %1 to i32, !dbg !13713
  %and = and i32 %conv, 240, !dbg !13714
  %conv1 = trunc i32 %and to i16, !dbg !13713
  store i16 %conv1, i16* %subtype, align 2, !dbg !13715
  %2 = load i16, i16* %subtype, align 2, !dbg !13716
  %conv2 = zext i16 %2 to i32, !dbg !13716
  switch i32 %conv2, label %sw.epilog [
    i32 128, label %sw.bb
    i32 80, label %sw.bb
    i32 176, label %sw.bb65
    i32 16, label %sw.bb71
    i32 48, label %sw.bb71
    i32 160, label %sw.bb81
    i32 192, label %sw.bb91
  ], !dbg !13717

sw.bb:                                            ; preds = %entry, %entry
  call void @llvm.dbg.declare(metadata %struct.beacon_format** %beacon, metadata !13718, metadata !DIExpression()), !dbg !13721
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13722
  %rx_buf = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %3, i32 0, i32 81, !dbg !13723
  %arraydecay = getelementptr inbounds [2316 x i8], [2316 x i8]* %rx_buf, i64 0, i64 0, !dbg !13722
  %4 = bitcast i8* %arraydecay to %struct.beacon_format*, !dbg !13724
  store %struct.beacon_format* %4, %struct.beacon_format** %beacon, align 8, !dbg !13721
  call void @llvm.dbg.declare(metadata i8* %channel, metadata !13725, metadata !DIExpression()), !dbg !13726
  call void @llvm.dbg.declare(metadata i8* %rates_length, metadata !13727, metadata !DIExpression()), !dbg !13728
  call void @llvm.dbg.declare(metadata i8* %ssid_length, metadata !13729, metadata !DIExpression()), !dbg !13730
  call void @llvm.dbg.declare(metadata i64* %timestamp, metadata !13731, metadata !DIExpression()), !dbg !13732
  %5 = load %struct.beacon_format*, %struct.beacon_format** %beacon, align 8, !dbg !13733
  %timestamp3 = getelementptr inbounds %struct.beacon_format, %struct.beacon_format* %5, i32 0, i32 0, !dbg !13733
  %6 = load i64, i64* %timestamp3, align 8, !dbg !13733
  store i64 %6, i64* %timestamp, align 8, !dbg !13732
  call void @llvm.dbg.declare(metadata i16* %beacon_interval, metadata !13734, metadata !DIExpression()), !dbg !13735
  %7 = load %struct.beacon_format*, %struct.beacon_format** %beacon, align 8, !dbg !13736
  %interval = getelementptr inbounds %struct.beacon_format, %struct.beacon_format* %7, i32 0, i32 1, !dbg !13736
  %8 = load i16, i16* %interval, align 8, !dbg !13736
  store i16 %8, i16* %beacon_interval, align 2, !dbg !13735
  call void @llvm.dbg.declare(metadata i16* %capability, metadata !13737, metadata !DIExpression()), !dbg !13738
  %9 = load %struct.beacon_format*, %struct.beacon_format** %beacon, align 8, !dbg !13739
  %capability4 = getelementptr inbounds %struct.beacon_format, %struct.beacon_format* %9, i32 0, i32 2, !dbg !13739
  %10 = load i16, i16* %capability4, align 2, !dbg !13739
  store i16 %10, i16* %capability, align 2, !dbg !13738
  call void @llvm.dbg.declare(metadata i8** %beaconp, metadata !13740, metadata !DIExpression()), !dbg !13741
  %11 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13742
  %rx_buf5 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %11, i32 0, i32 81, !dbg !13743
  %arraydecay6 = getelementptr inbounds [2316 x i8], [2316 x i8]* %rx_buf5, i64 0, i64 0, !dbg !13742
  store i8* %arraydecay6, i8** %beaconp, align 8, !dbg !13741
  %12 = load %struct.beacon_format*, %struct.beacon_format** %beacon, align 8, !dbg !13744
  %ssid_length7 = getelementptr inbounds %struct.beacon_format, %struct.beacon_format* %12, i32 0, i32 4, !dbg !13745
  %13 = load i8, i8* %ssid_length7, align 1, !dbg !13745
  store i8 %13, i8* %ssid_length, align 1, !dbg !13746
  %14 = load i16, i16* %frame_len.addr, align 2, !dbg !13747
  %conv8 = zext i16 %14 to i32, !dbg !13747
  %cmp = icmp slt i32 %conv8, 14, !dbg !13749
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13750

lor.lhs.false:                                    ; preds = %sw.bb
  %15 = load i16, i16* %frame_len.addr, align 2, !dbg !13751
  %conv10 = zext i16 %15 to i32, !dbg !13751
  %16 = load i8, i8* %ssid_length, align 1, !dbg !13752
  %conv11 = zext i8 %16 to i32, !dbg !13752
  %add = add i32 %conv11, 15, !dbg !13753
  %cmp12 = icmp slt i32 %conv10, %add, !dbg !13754
  br i1 %cmp12, label %if.then, label %if.end, !dbg !13755

if.then:                                          ; preds = %lor.lhs.false, %sw.bb
  br label %sw.epilog, !dbg !13756

if.end:                                           ; preds = %lor.lhs.false
  %17 = load i8*, i8** %beaconp, align 8, !dbg !13757
  %18 = load %struct.beacon_format*, %struct.beacon_format** %beacon, align 8, !dbg !13758
  %ssid_length14 = getelementptr inbounds %struct.beacon_format, %struct.beacon_format* %18, i32 0, i32 4, !dbg !13759
  %19 = load i8, i8* %ssid_length14, align 1, !dbg !13759
  %conv15 = zext i8 %19 to i32, !dbg !13758
  %add16 = add i32 %conv15, 15, !dbg !13760
  %idxprom = sext i32 %add16 to i64, !dbg !13757
  %arrayidx = getelementptr i8, i8* %17, i64 %idxprom, !dbg !13757
  %20 = load i8, i8* %arrayidx, align 1, !dbg !13757
  store i8 %20, i8* %rates_length, align 1, !dbg !13761
  %21 = load i16, i16* %frame_len.addr, align 2, !dbg !13762
  %conv17 = zext i16 %21 to i32, !dbg !13762
  %22 = load i8, i8* %ssid_length, align 1, !dbg !13764
  %conv18 = zext i8 %22 to i32, !dbg !13764
  %23 = load i8, i8* %rates_length, align 1, !dbg !13765
  %conv19 = zext i8 %23 to i32, !dbg !13765
  %add20 = add i32 %conv18, %conv19, !dbg !13766
  %add21 = add i32 %add20, 18, !dbg !13767
  %cmp22 = icmp slt i32 %conv17, %add21, !dbg !13768
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !13769

if.then24:                                        ; preds = %if.end
  br label %sw.epilog, !dbg !13770

if.end25:                                         ; preds = %if.end
  %24 = load i8, i8* %ssid_length, align 1, !dbg !13771
  %conv26 = zext i8 %24 to i32, !dbg !13771
  %cmp27 = icmp sgt i32 %conv26, 32, !dbg !13773
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !13774

if.then29:                                        ; preds = %if.end25
  br label %sw.epilog, !dbg !13775

if.end30:                                         ; preds = %if.end25
  %25 = load i8*, i8** %beaconp, align 8, !dbg !13776
  %26 = load i8, i8* %ssid_length, align 1, !dbg !13777
  %conv31 = zext i8 %26 to i32, !dbg !13777
  %27 = load i8, i8* %rates_length, align 1, !dbg !13778
  %conv32 = zext i8 %27 to i32, !dbg !13778
  %add33 = add i32 %conv31, %conv32, !dbg !13779
  %add34 = add i32 %add33, 18, !dbg !13780
  %idxprom35 = sext i32 %add34 to i64, !dbg !13776
  %arrayidx36 = getelementptr i8, i8* %25, i64 %idxprom35, !dbg !13776
  %28 = load i8, i8* %arrayidx36, align 1, !dbg !13776
  store i8 %28, i8* %channel, align 1, !dbg !13781
  %29 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13782
  %station_state = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %29, i32 0, i32 42, !dbg !13784
  %30 = load i32, i32* %station_state, align 4, !dbg !13784
  %cmp37 = icmp eq i32 %30, 4, !dbg !13785
  br i1 %cmp37, label %if.then39, label %if.end56, !dbg !13786

if.then39:                                        ; preds = %if.end30
  %31 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13787
  %32 = load i8, i8* %rssi.addr, align 1, !dbg !13789
  call void @smooth_rssi(%struct.atmel_private* %31, i8 zeroext %32) #10, !dbg !13790
  %33 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13791
  %34 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !13793
  %call = call i32 @is_frame_from_current_bss(%struct.atmel_private* %33, %struct.ieee80211_hdr* %34) #10, !dbg !13794
  %tobool = icmp ne i32 %call, 0, !dbg !13794
  br i1 %tobool, label %if.then40, label %if.end55, !dbg !13795

if.then40:                                        ; preds = %if.then39
  %35 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13796
  %beacons_this_sec = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %35, i32 0, i32 46, !dbg !13798
  %36 = load i32, i32* %beacons_this_sec, align 8, !dbg !13799
  %inc = add i32 %36, 1, !dbg !13799
  store i32 %inc, i32* %beacons_this_sec, align 8, !dbg !13799
  %37 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13800
  call void @atmel_smooth_qual(%struct.atmel_private* %37) #10, !dbg !13801
  %38 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13802
  %last_beacon_timestamp = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %38, i32 0, i32 80, !dbg !13804
  %39 = load i64, i64* %last_beacon_timestamp, align 8, !dbg !13804
  %tobool41 = icmp ne i64 %39, 0, !dbg !13802
  br i1 %tobool41, label %if.then42, label %if.end53, !dbg !13805

if.then42:                                        ; preds = %if.then40
  call void @llvm.dbg.declare(metadata i32* %beacon_delay, metadata !13806, metadata !DIExpression()), !dbg !13808
  %40 = load i64, i64* %timestamp, align 8, !dbg !13809
  %41 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13810
  %last_beacon_timestamp43 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %41, i32 0, i32 80, !dbg !13811
  %42 = load i64, i64* %last_beacon_timestamp43, align 8, !dbg !13811
  %sub = sub i64 %40, %42, !dbg !13812
  %conv44 = trunc i64 %sub to i32, !dbg !13809
  store i32 %conv44, i32* %beacon_delay, align 4, !dbg !13808
  call void @llvm.dbg.declare(metadata i32* %beacons, metadata !13813, metadata !DIExpression()), !dbg !13814
  %43 = load i32, i32* %beacon_delay, align 4, !dbg !13815
  %44 = load i16, i16* %beacon_interval, align 2, !dbg !13816
  %conv45 = zext i16 %44 to i32, !dbg !13816
  %mul = mul i32 %conv45, 1000, !dbg !13817
  %div = udiv i32 %43, %mul, !dbg !13818
  store i32 %div, i32* %beacons, align 4, !dbg !13814
  %45 = load i32, i32* %beacons, align 4, !dbg !13819
  %cmp46 = icmp sgt i32 %45, 1, !dbg !13821
  br i1 %cmp46, label %if.then48, label %if.end52, !dbg !13822

if.then48:                                        ; preds = %if.then42
  %46 = load i32, i32* %beacons, align 4, !dbg !13823
  %sub49 = sub i32 %46, 1, !dbg !13824
  %47 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13825
  %wstats = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %47, i32 0, i32 9, !dbg !13826
  %miss = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats, i32 0, i32 3, !dbg !13827
  %beacon50 = getelementptr inbounds %struct.iw_missed, %struct.iw_missed* %miss, i32 0, i32 0, !dbg !13828
  %48 = load i32, i32* %beacon50, align 4, !dbg !13829
  %add51 = add i32 %48, %sub49, !dbg !13829
  store i32 %add51, i32* %beacon50, align 4, !dbg !13829
  br label %if.end52, !dbg !13825

if.end52:                                         ; preds = %if.then48, %if.then42
  br label %if.end53, !dbg !13830

if.end53:                                         ; preds = %if.end52, %if.then40
  %49 = load i64, i64* %timestamp, align 8, !dbg !13831
  %50 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13832
  %last_beacon_timestamp54 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %50, i32 0, i32 80, !dbg !13833
  store i64 %49, i64* %last_beacon_timestamp54, align 8, !dbg !13834
  %51 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13835
  %52 = load i16, i16* %capability, align 2, !dbg !13836
  %53 = load i8, i8* %channel, align 1, !dbg !13837
  call void @handle_beacon_probe(%struct.atmel_private* %51, i16 zeroext %52, i8 zeroext %53) #10, !dbg !13838
  br label %if.end55, !dbg !13839

if.end55:                                         ; preds = %if.end53, %if.then39
  br label %if.end56, !dbg !13840

if.end56:                                         ; preds = %if.end55, %if.end30
  %54 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13841
  %station_state57 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %54, i32 0, i32 42, !dbg !13843
  %55 = load i32, i32* %station_state57, align 4, !dbg !13843
  %cmp58 = icmp eq i32 %55, 0, !dbg !13844
  br i1 %cmp58, label %if.then60, label %if.end64, !dbg !13845

if.then60:                                        ; preds = %if.end56
  %56 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13846
  %57 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !13847
  %58 = load i16, i16* %capability, align 2, !dbg !13848
  %59 = load i16, i16* %beacon_interval, align 2, !dbg !13849
  %60 = load i8, i8* %channel, align 1, !dbg !13850
  %61 = load i8, i8* %rssi.addr, align 1, !dbg !13851
  %62 = load i8, i8* %ssid_length, align 1, !dbg !13852
  %63 = load %struct.beacon_format*, %struct.beacon_format** %beacon, align 8, !dbg !13853
  %rates_el_id = getelementptr inbounds %struct.beacon_format, %struct.beacon_format* %63, i32 0, i32 5, !dbg !13854
  %64 = load i16, i16* %subtype, align 2, !dbg !13855
  %conv61 = zext i16 %64 to i32, !dbg !13855
  %cmp62 = icmp eq i32 %conv61, 128, !dbg !13856
  %conv63 = zext i1 %cmp62 to i32, !dbg !13856
  call void @store_bss_info(%struct.atmel_private* %56, %struct.ieee80211_hdr* %57, i16 zeroext %58, i16 zeroext %59, i8 zeroext %60, i8 zeroext %61, i8 zeroext %62, i8* %rates_el_id, i32 %conv63) #10, !dbg !13857
  br label %if.end64, !dbg !13857

if.end64:                                         ; preds = %if.then60, %if.end56
  br label %sw.epilog, !dbg !13858

sw.bb65:                                          ; preds = %entry
  %65 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13859
  %station_state66 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %65, i32 0, i32 42, !dbg !13861
  %66 = load i32, i32* %station_state66, align 4, !dbg !13861
  %cmp67 = icmp eq i32 %66, 2, !dbg !13862
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !13863

if.then69:                                        ; preds = %sw.bb65
  %67 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13864
  %68 = load i16, i16* %frame_len.addr, align 2, !dbg !13865
  call void @authenticate(%struct.atmel_private* %67, i16 zeroext %68) #10, !dbg !13866
  br label %if.end70, !dbg !13866

if.end70:                                         ; preds = %if.then69, %sw.bb65
  br label %sw.epilog, !dbg !13867

sw.bb71:                                          ; preds = %entry, %entry
  %69 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13868
  %station_state72 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %69, i32 0, i32 42, !dbg !13870
  %70 = load i32, i32* %station_state72, align 4, !dbg !13870
  %cmp73 = icmp eq i32 %70, 3, !dbg !13871
  br i1 %cmp73, label %if.then79, label %lor.lhs.false75, !dbg !13872

lor.lhs.false75:                                  ; preds = %sw.bb71
  %71 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13873
  %station_state76 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %71, i32 0, i32 42, !dbg !13874
  %72 = load i32, i32* %station_state76, align 4, !dbg !13874
  %cmp77 = icmp eq i32 %72, 5, !dbg !13875
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !13876

if.then79:                                        ; preds = %lor.lhs.false75, %sw.bb71
  %73 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13877
  %74 = load i16, i16* %frame_len.addr, align 2, !dbg !13878
  %75 = load i16, i16* %subtype, align 2, !dbg !13879
  call void @associate(%struct.atmel_private* %73, i16 zeroext %74, i16 zeroext %75) #10, !dbg !13880
  br label %if.end80, !dbg !13880

if.end80:                                         ; preds = %if.then79, %lor.lhs.false75
  br label %sw.epilog, !dbg !13881

sw.bb81:                                          ; preds = %entry
  %76 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13882
  %station_is_associated = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %76, i32 0, i32 68, !dbg !13884
  %77 = load i32, i32* %station_is_associated, align 4, !dbg !13884
  %tobool82 = icmp ne i32 %77, 0, !dbg !13882
  br i1 %tobool82, label %land.lhs.true, label %if.end90, !dbg !13885

land.lhs.true:                                    ; preds = %sw.bb81
  %78 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13886
  %operating_mode = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %78, i32 0, i32 43, !dbg !13887
  %79 = load i32, i32* %operating_mode, align 8, !dbg !13887
  %cmp83 = icmp eq i32 %79, 2, !dbg !13888
  br i1 %cmp83, label %land.lhs.true85, label %if.end90, !dbg !13889

land.lhs.true85:                                  ; preds = %land.lhs.true
  %80 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13890
  %81 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !13891
  %call86 = call i32 @is_frame_from_current_bss(%struct.atmel_private* %80, %struct.ieee80211_hdr* %81) #10, !dbg !13892
  %tobool87 = icmp ne i32 %call86, 0, !dbg !13892
  br i1 %tobool87, label %if.then88, label %if.end90, !dbg !13893

if.then88:                                        ; preds = %land.lhs.true85
  %82 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13894
  %station_was_associated = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %82, i32 0, i32 67, !dbg !13896
  store i32 0, i32* %station_was_associated, align 8, !dbg !13897
  %83 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13898
  %station_is_associated89 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %83, i32 0, i32 68, !dbg !13899
  store i32 0, i32* %station_is_associated89, align 4, !dbg !13900
  %84 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13901
  call void @atmel_enter_state(%struct.atmel_private* %84, i32 1) #10, !dbg !13902
  %85 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13903
  call void @join(%struct.atmel_private* %85, i32 2) #10, !dbg !13904
  br label %if.end90, !dbg !13905

if.end90:                                         ; preds = %if.then88, %land.lhs.true85, %land.lhs.true, %sw.bb81
  br label %sw.epilog, !dbg !13906

sw.bb91:                                          ; preds = %entry
  %86 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13907
  %operating_mode92 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %86, i32 0, i32 43, !dbg !13909
  %87 = load i32, i32* %operating_mode92, align 8, !dbg !13909
  %cmp93 = icmp eq i32 %87, 2, !dbg !13910
  br i1 %cmp93, label %land.lhs.true95, label %if.end100, !dbg !13911

land.lhs.true95:                                  ; preds = %sw.bb91
  %88 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13912
  %89 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !13913
  %call96 = call i32 @is_frame_from_current_bss(%struct.atmel_private* %88, %struct.ieee80211_hdr* %89) #10, !dbg !13914
  %tobool97 = icmp ne i32 %call96, 0, !dbg !13914
  br i1 %tobool97, label %if.then98, label %if.end100, !dbg !13915

if.then98:                                        ; preds = %land.lhs.true95
  %90 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13916
  %station_was_associated99 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %90, i32 0, i32 67, !dbg !13918
  store i32 0, i32* %station_was_associated99, align 8, !dbg !13919
  %91 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13920
  call void @atmel_enter_state(%struct.atmel_private* %91, i32 1) #10, !dbg !13921
  %92 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !13922
  call void @join(%struct.atmel_private* %92, i32 2) #10, !dbg !13923
  br label %if.end100, !dbg !13924

if.end100:                                        ; preds = %if.then98, %land.lhs.true95, %sw.bb91
  br label %sw.epilog, !dbg !13925

sw.epilog:                                        ; preds = %if.then, %if.then24, %if.then29, %entry, %if.end100, %if.end90, %if.end80, %if.end70, %if.end64
  ret void, !dbg !13926
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @atmel_read16(%struct.net_device* %dev, i16 zeroext %offset) #0 !dbg !13927 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %offset.addr = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13930, metadata !DIExpression()), !dbg !13931
  store i16 %offset, i16* %offset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %offset.addr, metadata !13932, metadata !DIExpression()), !dbg !13933
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13934
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 5, !dbg !13935
  %1 = load i64, i64* %base_addr, align 8, !dbg !13935
  %2 = load i16, i16* %offset.addr, align 2, !dbg !13936
  %conv = zext i16 %2 to i64, !dbg !13936
  %add = add i64 %1, %conv, !dbg !13937
  %conv1 = trunc i64 %add to i32, !dbg !13934
  %call = call zeroext i16 @inw(i32 %conv1) #10, !dbg !13938
  ret i16 %call, !dbg !13939
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @dev_alloc_skb(i32 %length) #0 !dbg !13940 {
entry:
  %length.addr = alloca i32, align 4
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !13943, metadata !DIExpression()), !dbg !13944
  %0 = load i32, i32* %length.addr, align 4, !dbg !13945
  %call = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* null, i32 %0) #10, !dbg !13946
  ret %struct.sk_buff* %call, !dbg !13947
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_reserve(%struct.sk_buff* %skb, i32 %len) #0 !dbg !13948 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13951, metadata !DIExpression()), !dbg !13952
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !13953, metadata !DIExpression()), !dbg !13954
  %0 = load i32, i32* %len.addr, align 4, !dbg !13955
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13956
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !13957
  %2 = load i8*, i8** %data, align 8, !dbg !13958
  %idx.ext = sext i32 %0 to i64, !dbg !13958
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !13958
  store i8* %add.ptr, i8** %data, align 8, !dbg !13958
  %3 = load i32, i32* %len.addr, align 4, !dbg !13959
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13960
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 34, !dbg !13961
  %5 = load i32, i32* %tail, align 8, !dbg !13962
  %add = add i32 %5, %3, !dbg !13962
  store i32 %add, i32* %tail, align 8, !dbg !13962
  ret void, !dbg !13963
}

; Function Attrs: noredzone
declare dso_local i8* @skb_put(%struct.sk_buff*, i32) #2

; Function Attrs: noredzone
declare dso_local zeroext i16 @eth_type_trans(%struct.sk_buff*, %struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local i32 @netif_rx(%struct.sk_buff*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %dev, i32 %length) #0 !dbg !13964 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %length.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13967, metadata !DIExpression()), !dbg !13968
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !13969, metadata !DIExpression()), !dbg !13970
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13971
  %1 = load i32, i32* %length.addr, align 4, !dbg !13972
  %call = call %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device* %0, i32 %1, i32 2592) #10, !dbg !13973
  ret %struct.sk_buff* %call, !dbg !13974
}

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_put_data(%struct.sk_buff* %skb, i8* %data, i32 %len) #0 !dbg !13975 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %data.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %tmp = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13978, metadata !DIExpression()), !dbg !13979
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !13980, metadata !DIExpression()), !dbg !13981
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !13982, metadata !DIExpression()), !dbg !13983
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !13984, metadata !DIExpression()), !dbg !13985
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13986
  %1 = load i32, i32* %len.addr, align 4, !dbg !13987
  %call = call i8* @skb_put(%struct.sk_buff* %0, i32 %1) #10, !dbg !13988
  store i8* %call, i8** %tmp, align 8, !dbg !13985
  %2 = load i8*, i8** %tmp, align 8, !dbg !13989
  %3 = load i8*, i8** %data.addr, align 8, !dbg !13990
  %4 = load i32, i32* %len.addr, align 4, !dbg !13991
  %conv = zext i32 %4 to i64, !dbg !13991
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 %conv, i1 false), !dbg !13992
  %5 = load i8*, i8** %tmp, align 8, !dbg !13993
  ret i8* %5, !dbg !13994
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @smooth_rssi(%struct.atmel_private* %priv, i8 zeroext %rssi) #0 !dbg !13995 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %rssi.addr = alloca i8, align 1
  %old = alloca i8, align 1
  %max_rssi = alloca i8, align 1
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !13998, metadata !DIExpression()), !dbg !13999
  store i8 %rssi, i8* %rssi.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rssi.addr, metadata !14000, metadata !DIExpression()), !dbg !14001
  call void @llvm.dbg.declare(metadata i8* %old, metadata !14002, metadata !DIExpression()), !dbg !14003
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14004
  %wstats = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 9, !dbg !14005
  %qual = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats, i32 0, i32 1, !dbg !14006
  %level = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual, i32 0, i32 1, !dbg !14007
  %1 = load i8, i8* %level, align 1, !dbg !14007
  store i8 %1, i8* %old, align 1, !dbg !14003
  call void @llvm.dbg.declare(metadata i8* %max_rssi, metadata !14008, metadata !DIExpression()), !dbg !14009
  store i8 42, i8* %max_rssi, align 1, !dbg !14009
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14010
  %firmware_type = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 3, !dbg !14011
  %3 = load i32, i32* %firmware_type, align 8, !dbg !14011
  switch i32 %3, label %sw.default [
    i32 3, label %sw.bb
  ], !dbg !14012

sw.bb:                                            ; preds = %entry
  store i8 63, i8* %max_rssi, align 1, !dbg !14013
  br label %sw.epilog, !dbg !14015

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !14016

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %4 = load i8, i8* %rssi.addr, align 1, !dbg !14017
  %conv = zext i8 %4 to i32, !dbg !14017
  %mul = mul i32 %conv, 100, !dbg !14018
  %5 = load i8, i8* %max_rssi, align 1, !dbg !14019
  %conv1 = zext i8 %5 to i32, !dbg !14019
  %div = sdiv i32 %mul, %conv1, !dbg !14020
  %conv2 = trunc i32 %div to i8, !dbg !14017
  store i8 %conv2, i8* %rssi.addr, align 1, !dbg !14021
  %6 = load i8, i8* %rssi.addr, align 1, !dbg !14022
  %conv3 = zext i8 %6 to i32, !dbg !14022
  %7 = load i8, i8* %old, align 1, !dbg !14024
  %conv4 = zext i8 %7 to i32, !dbg !14024
  %add = add i32 %conv3, %conv4, !dbg !14025
  %rem = srem i32 %add, 2, !dbg !14026
  %tobool = icmp ne i32 %rem, 0, !dbg !14026
  br i1 %tobool, label %if.then, label %if.else, !dbg !14027

if.then:                                          ; preds = %sw.epilog
  %8 = load i8, i8* %rssi.addr, align 1, !dbg !14028
  %conv5 = zext i8 %8 to i32, !dbg !14028
  %9 = load i8, i8* %old, align 1, !dbg !14029
  %conv6 = zext i8 %9 to i32, !dbg !14029
  %add7 = add i32 %conv5, %conv6, !dbg !14030
  %div8 = sdiv i32 %add7, 2, !dbg !14031
  %add9 = add i32 %div8, 1, !dbg !14032
  %conv10 = trunc i32 %add9 to i8, !dbg !14033
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14034
  %wstats11 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 9, !dbg !14035
  %qual12 = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats11, i32 0, i32 1, !dbg !14036
  %level13 = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual12, i32 0, i32 1, !dbg !14037
  store i8 %conv10, i8* %level13, align 1, !dbg !14038
  br label %if.end, !dbg !14034

if.else:                                          ; preds = %sw.epilog
  %11 = load i8, i8* %rssi.addr, align 1, !dbg !14039
  %conv14 = zext i8 %11 to i32, !dbg !14039
  %12 = load i8, i8* %old, align 1, !dbg !14040
  %conv15 = zext i8 %12 to i32, !dbg !14040
  %add16 = add i32 %conv14, %conv15, !dbg !14041
  %div17 = sdiv i32 %add16, 2, !dbg !14042
  %conv18 = trunc i32 %div17 to i8, !dbg !14043
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14044
  %wstats19 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %13, i32 0, i32 9, !dbg !14045
  %qual20 = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats19, i32 0, i32 1, !dbg !14046
  %level21 = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual20, i32 0, i32 1, !dbg !14047
  store i8 %conv18, i8* %level21, align 1, !dbg !14048
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14049
  %wstats22 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %14, i32 0, i32 9, !dbg !14050
  %qual23 = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats22, i32 0, i32 1, !dbg !14051
  %updated = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual23, i32 0, i32 3, !dbg !14052
  %15 = load i8, i8* %updated, align 1, !dbg !14053
  %conv24 = zext i8 %15 to i32, !dbg !14053
  %or = or i32 %conv24, 2, !dbg !14053
  %conv25 = trunc i32 %or to i8, !dbg !14053
  store i8 %conv25, i8* %updated, align 1, !dbg !14053
  %16 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14054
  %wstats26 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %16, i32 0, i32 9, !dbg !14055
  %qual27 = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats26, i32 0, i32 1, !dbg !14056
  %updated28 = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual27, i32 0, i32 3, !dbg !14057
  %17 = load i8, i8* %updated28, align 1, !dbg !14058
  %conv29 = zext i8 %17 to i32, !dbg !14058
  %and = and i32 %conv29, -33, !dbg !14058
  %conv30 = trunc i32 %and to i8, !dbg !14058
  store i8 %conv30, i8* %updated28, align 1, !dbg !14058
  ret void, !dbg !14059
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @is_frame_from_current_bss(%struct.atmel_private* %priv, %struct.ieee80211_hdr* %header) #0 !dbg !14060 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.atmel_private*, align 8
  %header.addr = alloca %struct.ieee80211_hdr*, align 8
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !14063, metadata !DIExpression()), !dbg !14064
  store %struct.ieee80211_hdr* %header, %struct.ieee80211_hdr** %header.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ieee80211_hdr** %header.addr, metadata !14065, metadata !DIExpression()), !dbg !14066
  %0 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !14067
  %frame_control = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %0, i32 0, i32 0, !dbg !14067
  %1 = load i16, i16* %frame_control, align 2, !dbg !14067
  %conv = zext i16 %1 to i32, !dbg !14067
  %and = and i32 %conv, 512, !dbg !14069
  %tobool = icmp ne i32 %and, 0, !dbg !14069
  br i1 %tobool, label %if.then, label %if.else, !dbg !14070

if.then:                                          ; preds = %entry
  %2 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !14071
  %addr3 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %2, i32 0, i32 4, !dbg !14072
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %addr3, i64 0, i64 0, !dbg !14071
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14073
  %CurrentBSSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %3, i32 0, i32 76, !dbg !14074
  %arraydecay1 = getelementptr inbounds [6 x i8], [6 x i8]* %CurrentBSSID, i64 0, i64 0, !dbg !14073
  %call = call i32 @memcmp(i8* %arraydecay, i8* %arraydecay1, i64 6) #10, !dbg !14075
  %cmp = icmp eq i32 %call, 0, !dbg !14076
  %conv2 = zext i1 %cmp to i32, !dbg !14076
  store i32 %conv2, i32* %retval, align 4, !dbg !14077
  br label %return, !dbg !14077

if.else:                                          ; preds = %entry
  %4 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !14078
  %addr2 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %4, i32 0, i32 3, !dbg !14079
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %addr2, i64 0, i64 0, !dbg !14078
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14080
  %CurrentBSSID4 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %5, i32 0, i32 76, !dbg !14081
  %arraydecay5 = getelementptr inbounds [6 x i8], [6 x i8]* %CurrentBSSID4, i64 0, i64 0, !dbg !14080
  %call6 = call i32 @memcmp(i8* %arraydecay3, i8* %arraydecay5, i64 6) #10, !dbg !14082
  %cmp7 = icmp eq i32 %call6, 0, !dbg !14083
  %conv8 = zext i1 %cmp7 to i32, !dbg !14083
  store i32 %conv8, i32* %retval, align 4, !dbg !14084
  br label %return, !dbg !14084

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !14085
  ret i32 %6, !dbg !14085
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_smooth_qual(%struct.atmel_private* %priv) #0 !dbg !14086 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %time_diff = alloca i64, align 8
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !14087, metadata !DIExpression()), !dbg !14088
  call void @llvm.dbg.declare(metadata i64* %time_diff, metadata !14089, metadata !DIExpression()), !dbg !14090
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !14091
  %1 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14092
  %last_qual = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %1, i32 0, i32 45, !dbg !14093
  %2 = load i64, i64* %last_qual, align 8, !dbg !14093
  %sub = sub i64 %0, %2, !dbg !14094
  %div = udiv i64 %sub, 250, !dbg !14095
  store i64 %div, i64* %time_diff, align 8, !dbg !14090
  br label %while.cond, !dbg !14096

while.cond:                                       ; preds = %while.body, %entry
  %3 = load i64, i64* %time_diff, align 8, !dbg !14097
  %dec = add i64 %3, -1, !dbg !14097
  store i64 %dec, i64* %time_diff, align 8, !dbg !14097
  %tobool = icmp ne i64 %3, 0, !dbg !14096
  br i1 %tobool, label %while.body, label %while.end, !dbg !14096

while.body:                                       ; preds = %while.cond
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14098
  %last_qual1 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 45, !dbg !14100
  %5 = load i64, i64* %last_qual1, align 8, !dbg !14101
  %add = add i64 %5, 250, !dbg !14101
  store i64 %add, i64* %last_qual1, align 8, !dbg !14101
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14102
  %wstats = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 9, !dbg !14103
  %qual = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats, i32 0, i32 1, !dbg !14104
  %qual2 = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual, i32 0, i32 0, !dbg !14105
  %7 = load i8, i8* %qual2, align 2, !dbg !14105
  %conv = zext i8 %7 to i32, !dbg !14102
  %div3 = sdiv i32 %conv, 2, !dbg !14106
  %conv4 = trunc i32 %div3 to i8, !dbg !14102
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14107
  %wstats5 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %8, i32 0, i32 9, !dbg !14108
  %qual6 = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats5, i32 0, i32 1, !dbg !14109
  %qual7 = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual6, i32 0, i32 0, !dbg !14110
  store i8 %conv4, i8* %qual7, align 2, !dbg !14111
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14112
  %beacons_this_sec = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %9, i32 0, i32 46, !dbg !14113
  %10 = load i32, i32* %beacons_this_sec, align 8, !dbg !14113
  %11 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14114
  %beacon_period = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %11, i32 0, i32 58, !dbg !14115
  %12 = load i32, i32* %beacon_period, align 8, !dbg !14115
  %mul = mul i32 %10, %12, !dbg !14116
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14117
  %wstats8 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %13, i32 0, i32 9, !dbg !14118
  %qual9 = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats8, i32 0, i32 1, !dbg !14119
  %level = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual9, i32 0, i32 1, !dbg !14120
  %14 = load i8, i8* %level, align 1, !dbg !14120
  %conv10 = zext i8 %14 to i32, !dbg !14117
  %add11 = add i32 %conv10, 100, !dbg !14121
  %mul12 = mul i32 %mul, %add11, !dbg !14122
  %div13 = sdiv i32 %mul12, 4000, !dbg !14123
  %15 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14124
  %wstats14 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %15, i32 0, i32 9, !dbg !14125
  %qual15 = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats14, i32 0, i32 1, !dbg !14126
  %qual16 = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual15, i32 0, i32 0, !dbg !14127
  %16 = load i8, i8* %qual16, align 2, !dbg !14128
  %conv17 = zext i8 %16 to i32, !dbg !14128
  %add18 = add i32 %conv17, %div13, !dbg !14128
  %conv19 = trunc i32 %add18 to i8, !dbg !14128
  store i8 %conv19, i8* %qual16, align 2, !dbg !14128
  %17 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14129
  %beacons_this_sec20 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %17, i32 0, i32 46, !dbg !14130
  store i32 0, i32* %beacons_this_sec20, align 8, !dbg !14131
  br label %while.cond, !dbg !14096, !llvm.loop !14132

while.end:                                        ; preds = %while.cond
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14134
  %wstats21 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %18, i32 0, i32 9, !dbg !14135
  %qual22 = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats21, i32 0, i32 1, !dbg !14136
  %updated = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual22, i32 0, i32 3, !dbg !14137
  %19 = load i8, i8* %updated, align 1, !dbg !14138
  %conv23 = zext i8 %19 to i32, !dbg !14138
  %or = or i32 %conv23, 1, !dbg !14138
  %conv24 = trunc i32 %or to i8, !dbg !14138
  store i8 %conv24, i8* %updated, align 1, !dbg !14138
  %20 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14139
  %wstats25 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %20, i32 0, i32 9, !dbg !14140
  %qual26 = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats25, i32 0, i32 1, !dbg !14141
  %updated27 = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual26, i32 0, i32 3, !dbg !14142
  %21 = load i8, i8* %updated27, align 1, !dbg !14143
  %conv28 = zext i8 %21 to i32, !dbg !14143
  %and = and i32 %conv28, -17, !dbg !14143
  %conv29 = trunc i32 %and to i8, !dbg !14143
  store i8 %conv29, i8* %updated27, align 1, !dbg !14143
  ret void, !dbg !14144
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @handle_beacon_probe(%struct.atmel_private* %priv, i16 zeroext %capability, i8 zeroext %channel) #0 !dbg !14145 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %capability.addr = alloca i16, align 2
  %channel.addr = alloca i8, align 1
  %rejoin = alloca i32, align 4
  %new = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !14148, metadata !DIExpression()), !dbg !14149
  store i16 %capability, i16* %capability.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %capability.addr, metadata !14150, metadata !DIExpression()), !dbg !14151
  store i8 %channel, i8* %channel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %channel.addr, metadata !14152, metadata !DIExpression()), !dbg !14153
  call void @llvm.dbg.declare(metadata i32* %rejoin, metadata !14154, metadata !DIExpression()), !dbg !14155
  store i32 0, i32* %rejoin, align 4, !dbg !14155
  call void @llvm.dbg.declare(metadata i32* %new, metadata !14156, metadata !DIExpression()), !dbg !14157
  %0 = load i16, i16* %capability.addr, align 2, !dbg !14158
  %conv = zext i16 %0 to i32, !dbg !14158
  %and = and i32 %conv, 32, !dbg !14159
  %tobool = icmp ne i32 %and, 0, !dbg !14158
  %1 = zext i1 %tobool to i64, !dbg !14158
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !14158
  store i32 %cond, i32* %new, align 4, !dbg !14157
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14160
  %preamble = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 56, !dbg !14162
  %3 = load i32, i32* %preamble, align 8, !dbg !14162
  %4 = load i32, i32* %new, align 4, !dbg !14163
  %cmp = icmp ne i32 %3, %4, !dbg !14164
  br i1 %cmp, label %if.then, label %if.end, !dbg !14165

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %new, align 4, !dbg !14166
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14168
  %preamble2 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 56, !dbg !14169
  store i32 %5, i32* %preamble2, align 8, !dbg !14170
  store i32 1, i32* %rejoin, align 4, !dbg !14171
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14172
  %8 = load i32, i32* %new, align 4, !dbg !14173
  %conv3 = trunc i32 %8 to i8, !dbg !14173
  call void @atmel_set_mib8(%struct.atmel_private* %7, i8 zeroext 1, i8 zeroext 9, i8 zeroext %conv3) #10, !dbg !14174
  br label %if.end, !dbg !14175

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14176
  %channel4 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %9, i32 0, i32 47, !dbg !14178
  %10 = load i32, i32* %channel4, align 4, !dbg !14178
  %11 = load i8, i8* %channel.addr, align 1, !dbg !14179
  %conv5 = zext i8 %11 to i32, !dbg !14179
  %cmp6 = icmp ne i32 %10, %conv5, !dbg !14180
  br i1 %cmp6, label %if.then8, label %if.end11, !dbg !14181

if.then8:                                         ; preds = %if.end
  %12 = load i8, i8* %channel.addr, align 1, !dbg !14182
  %conv9 = zext i8 %12 to i32, !dbg !14182
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14184
  %channel10 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %13, i32 0, i32 47, !dbg !14185
  store i32 %conv9, i32* %channel10, align 4, !dbg !14186
  store i32 1, i32* %rejoin, align 4, !dbg !14187
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14188
  %15 = load i8, i8* %channel.addr, align 1, !dbg !14189
  call void @atmel_set_mib8(%struct.atmel_private* %14, i8 zeroext 7, i8 zeroext 14, i8 zeroext %15) #10, !dbg !14190
  br label %if.end11, !dbg !14191

if.end11:                                         ; preds = %if.then8, %if.end
  %16 = load i32, i32* %rejoin, align 4, !dbg !14192
  %tobool12 = icmp ne i32 %16, 0, !dbg !14192
  br i1 %tobool12, label %if.then13, label %if.end18, !dbg !14194

if.then13:                                        ; preds = %if.end11
  %17 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14195
  %station_is_associated = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %17, i32 0, i32 68, !dbg !14197
  store i32 0, i32* %station_is_associated, align 4, !dbg !14198
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14199
  call void @atmel_enter_state(%struct.atmel_private* %18, i32 1) #10, !dbg !14200
  %19 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14201
  %operating_mode = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %19, i32 0, i32 43, !dbg !14203
  %20 = load i32, i32* %operating_mode, align 8, !dbg !14203
  %cmp14 = icmp eq i32 %20, 2, !dbg !14204
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !14205

if.then16:                                        ; preds = %if.then13
  %21 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14206
  call void @join(%struct.atmel_private* %21, i32 2) #10, !dbg !14207
  br label %if.end17, !dbg !14207

if.else:                                          ; preds = %if.then13
  %22 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14208
  call void @join(%struct.atmel_private* %22, i32 1) #10, !dbg !14209
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then16
  br label %if.end18, !dbg !14210

if.end18:                                         ; preds = %if.end17, %if.end11
  ret void, !dbg !14211
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @store_bss_info(%struct.atmel_private* %priv, %struct.ieee80211_hdr* %header, i16 zeroext %capability, i16 zeroext %beacon_period, i8 zeroext %channel, i8 zeroext %rssi, i8 zeroext %ssid_len, i8* %ssid, i32 %is_beacon) #0 !dbg !14212 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %header.addr = alloca %struct.ieee80211_hdr*, align 8
  %capability.addr = alloca i16, align 2
  %beacon_period.addr = alloca i16, align 2
  %channel.addr = alloca i8, align 1
  %rssi.addr = alloca i8, align 1
  %ssid_len.addr = alloca i8, align 1
  %ssid.addr = alloca i8*, align 8
  %is_beacon.addr = alloca i32, align 4
  %bss = alloca i8*, align 8
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !14215, metadata !DIExpression()), !dbg !14216
  store %struct.ieee80211_hdr* %header, %struct.ieee80211_hdr** %header.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ieee80211_hdr** %header.addr, metadata !14217, metadata !DIExpression()), !dbg !14218
  store i16 %capability, i16* %capability.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %capability.addr, metadata !14219, metadata !DIExpression()), !dbg !14220
  store i16 %beacon_period, i16* %beacon_period.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %beacon_period.addr, metadata !14221, metadata !DIExpression()), !dbg !14222
  store i8 %channel, i8* %channel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %channel.addr, metadata !14223, metadata !DIExpression()), !dbg !14224
  store i8 %rssi, i8* %rssi.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rssi.addr, metadata !14225, metadata !DIExpression()), !dbg !14226
  store i8 %ssid_len, i8* %ssid_len.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ssid_len.addr, metadata !14227, metadata !DIExpression()), !dbg !14228
  store i8* %ssid, i8** %ssid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ssid.addr, metadata !14229, metadata !DIExpression()), !dbg !14230
  store i32 %is_beacon, i32* %is_beacon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_beacon.addr, metadata !14231, metadata !DIExpression()), !dbg !14232
  call void @llvm.dbg.declare(metadata i8** %bss, metadata !14233, metadata !DIExpression()), !dbg !14234
  %0 = load i16, i16* %capability.addr, align 2, !dbg !14235
  %conv = zext i16 %0 to i32, !dbg !14235
  %and = and i32 %conv, 1, !dbg !14236
  %tobool = icmp ne i32 %and, 0, !dbg !14236
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14235

cond.true:                                        ; preds = %entry
  %1 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !14237
  %addr2 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %1, i32 0, i32 3, !dbg !14238
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %addr2, i64 0, i64 0, !dbg !14237
  br label %cond.end, !dbg !14235

cond.false:                                       ; preds = %entry
  %2 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !14239
  %addr3 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %2, i32 0, i32 4, !dbg !14240
  %arraydecay1 = getelementptr inbounds [6 x i8], [6 x i8]* %addr3, i64 0, i64 0, !dbg !14239
  br label %cond.end, !dbg !14235

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay, %cond.true ], [ %arraydecay1, %cond.false ], !dbg !14235
  store i8* %cond, i8** %bss, align 8, !dbg !14234
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14241, metadata !DIExpression()), !dbg !14242
  call void @llvm.dbg.declare(metadata i32* %index, metadata !14243, metadata !DIExpression()), !dbg !14244
  store i32 -1, i32* %index, align 4, !dbg !14245
  store i32 0, i32* %i, align 4, !dbg !14247
  br label %for.cond, !dbg !14248

for.cond:                                         ; preds = %for.inc, %cond.end
  %3 = load i32, i32* %i, align 4, !dbg !14249
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14251
  %BSS_list_entries = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 71, !dbg !14252
  %5 = load i32, i32* %BSS_list_entries, align 4, !dbg !14252
  %cmp = icmp slt i32 %3, %5, !dbg !14253
  br i1 %cmp, label %for.body, label %for.end, !dbg !14254

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %bss, align 8, !dbg !14255
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14257
  %BSSinfo = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %7, i32 0, i32 70, !dbg !14258
  %8 = load i32, i32* %i, align 4, !dbg !14259
  %idxprom = sext i32 %8 to i64, !dbg !14257
  %arrayidx = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo, i64 0, i64 %idxprom, !dbg !14257
  %BSSID = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx, i32 0, i32 7, !dbg !14260
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %BSSID, i64 0, i64 0, !dbg !14257
  %call = call i32 @memcmp(i8* %6, i8* %arraydecay3, i64 6) #10, !dbg !14261
  %cmp4 = icmp eq i32 %call, 0, !dbg !14262
  br i1 %cmp4, label %if.then, label %if.end, !dbg !14263

if.then:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !14264
  store i32 %9, i32* %index, align 4, !dbg !14265
  br label %if.end, !dbg !14266

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !14267

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !dbg !14268
  %inc = add i32 %10, 1, !dbg !14268
  store i32 %inc, i32* %i, align 4, !dbg !14268
  br label %for.cond, !dbg !14269, !llvm.loop !14270

for.end:                                          ; preds = %for.cond
  %11 = load i32, i32* %index, align 4, !dbg !14272
  %cmp6 = icmp eq i32 %11, -1, !dbg !14274
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !14275

if.then8:                                         ; preds = %for.end
  %12 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14276
  %BSS_list_entries9 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %12, i32 0, i32 71, !dbg !14279
  %13 = load i32, i32* %BSS_list_entries9, align 4, !dbg !14279
  %cmp10 = icmp eq i32 %13, 64, !dbg !14280
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !14281

if.then12:                                        ; preds = %if.then8
  br label %return, !dbg !14282

if.end13:                                         ; preds = %if.then8
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14283
  %BSS_list_entries14 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %14, i32 0, i32 71, !dbg !14284
  %15 = load i32, i32* %BSS_list_entries14, align 4, !dbg !14285
  %inc15 = add i32 %15, 1, !dbg !14285
  store i32 %inc15, i32* %BSS_list_entries14, align 4, !dbg !14285
  store i32 %15, i32* %index, align 4, !dbg !14286
  %16 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14287
  %BSSinfo16 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %16, i32 0, i32 70, !dbg !14288
  %17 = load i32, i32* %index, align 4, !dbg !14289
  %idxprom17 = sext i32 %17 to i64, !dbg !14287
  %arrayidx18 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo16, i64 0, i64 %idxprom17, !dbg !14287
  %BSSID19 = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx18, i32 0, i32 7, !dbg !14290
  %arraydecay20 = getelementptr inbounds [6 x i8], [6 x i8]* %BSSID19, i64 0, i64 0, !dbg !14291
  %18 = load i8*, i8** %bss, align 8, !dbg !14292
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay20, i8* align 1 %18, i64 6, i1 false), !dbg !14291
  %19 = load i8, i8* %rssi.addr, align 1, !dbg !14293
  %conv21 = zext i8 %19 to i32, !dbg !14293
  %20 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14294
  %BSSinfo22 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %20, i32 0, i32 70, !dbg !14295
  %21 = load i32, i32* %index, align 4, !dbg !14296
  %idxprom23 = sext i32 %21 to i64, !dbg !14294
  %arrayidx24 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo22, i64 0, i64 %idxprom23, !dbg !14294
  %RSSI = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx24, i32 0, i32 2, !dbg !14297
  store i32 %conv21, i32* %RSSI, align 4, !dbg !14298
  br label %if.end42, !dbg !14299

if.else:                                          ; preds = %for.end
  %22 = load i8, i8* %rssi.addr, align 1, !dbg !14300
  %conv25 = zext i8 %22 to i32, !dbg !14300
  %23 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14303
  %BSSinfo26 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %23, i32 0, i32 70, !dbg !14304
  %24 = load i32, i32* %index, align 4, !dbg !14305
  %idxprom27 = sext i32 %24 to i64, !dbg !14303
  %arrayidx28 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo26, i64 0, i64 %idxprom27, !dbg !14303
  %RSSI29 = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx28, i32 0, i32 2, !dbg !14306
  %25 = load i32, i32* %RSSI29, align 4, !dbg !14306
  %cmp30 = icmp sgt i32 %conv25, %25, !dbg !14307
  br i1 %cmp30, label %if.then32, label %if.end38, !dbg !14308

if.then32:                                        ; preds = %if.else
  %26 = load i8, i8* %rssi.addr, align 1, !dbg !14309
  %conv33 = zext i8 %26 to i32, !dbg !14309
  %27 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14310
  %BSSinfo34 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %27, i32 0, i32 70, !dbg !14311
  %28 = load i32, i32* %index, align 4, !dbg !14312
  %idxprom35 = sext i32 %28 to i64, !dbg !14310
  %arrayidx36 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo34, i64 0, i64 %idxprom35, !dbg !14310
  %RSSI37 = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx36, i32 0, i32 2, !dbg !14313
  store i32 %conv33, i32* %RSSI37, align 4, !dbg !14314
  br label %if.end38, !dbg !14310

if.end38:                                         ; preds = %if.then32, %if.else
  %29 = load i32, i32* %is_beacon.addr, align 4, !dbg !14315
  %tobool39 = icmp ne i32 %29, 0, !dbg !14315
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !14317

if.then40:                                        ; preds = %if.end38
  br label %return, !dbg !14318

if.end41:                                         ; preds = %if.end38
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end13
  %30 = load i8, i8* %channel.addr, align 1, !dbg !14319
  %conv43 = zext i8 %30 to i32, !dbg !14319
  %31 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14320
  %BSSinfo44 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %31, i32 0, i32 70, !dbg !14321
  %32 = load i32, i32* %index, align 4, !dbg !14322
  %idxprom45 = sext i32 %32 to i64, !dbg !14320
  %arrayidx46 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo44, i64 0, i64 %idxprom45, !dbg !14320
  %channel47 = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx46, i32 0, i32 0, !dbg !14323
  store i32 %conv43, i32* %channel47, align 4, !dbg !14324
  %33 = load i16, i16* %beacon_period.addr, align 2, !dbg !14325
  %conv48 = zext i16 %33 to i32, !dbg !14325
  %34 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14326
  %BSSinfo49 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %34, i32 0, i32 70, !dbg !14327
  %35 = load i32, i32* %index, align 4, !dbg !14328
  %idxprom50 = sext i32 %35 to i64, !dbg !14326
  %arrayidx51 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo49, i64 0, i64 %idxprom50, !dbg !14326
  %beacon_period52 = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx51, i32 0, i32 5, !dbg !14329
  store i32 %conv48, i32* %beacon_period52, align 4, !dbg !14330
  %36 = load i16, i16* %capability.addr, align 2, !dbg !14331
  %conv53 = zext i16 %36 to i32, !dbg !14331
  %and54 = and i32 %conv53, 16, !dbg !14332
  %37 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14333
  %BSSinfo55 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %37, i32 0, i32 70, !dbg !14334
  %38 = load i32, i32* %index, align 4, !dbg !14335
  %idxprom56 = sext i32 %38 to i64, !dbg !14333
  %arrayidx57 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo55, i64 0, i64 %idxprom56, !dbg !14333
  %UsingWEP = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx57, i32 0, i32 3, !dbg !14336
  store i32 %and54, i32* %UsingWEP, align 4, !dbg !14337
  %39 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14338
  %BSSinfo58 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %39, i32 0, i32 70, !dbg !14339
  %40 = load i32, i32* %index, align 4, !dbg !14340
  %idxprom59 = sext i32 %40 to i64, !dbg !14338
  %arrayidx60 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo58, i64 0, i64 %idxprom59, !dbg !14338
  %SSID = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx60, i32 0, i32 8, !dbg !14341
  %arraydecay61 = getelementptr inbounds [32 x i8], [32 x i8]* %SSID, i64 0, i64 0, !dbg !14342
  %41 = load i8*, i8** %ssid.addr, align 8, !dbg !14343
  %42 = load i8, i8* %ssid_len.addr, align 1, !dbg !14344
  %conv62 = zext i8 %42 to i64, !dbg !14344
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay61, i8* align 1 %41, i64 %conv62, i1 false), !dbg !14342
  %43 = load i8, i8* %ssid_len.addr, align 1, !dbg !14345
  %conv63 = zext i8 %43 to i32, !dbg !14345
  %44 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14346
  %BSSinfo64 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %44, i32 0, i32 70, !dbg !14347
  %45 = load i32, i32* %index, align 4, !dbg !14348
  %idxprom65 = sext i32 %45 to i64, !dbg !14346
  %arrayidx66 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo64, i64 0, i64 %idxprom65, !dbg !14346
  %SSIDsize = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx66, i32 0, i32 1, !dbg !14349
  store i32 %conv63, i32* %SSIDsize, align 4, !dbg !14350
  %46 = load i16, i16* %capability.addr, align 2, !dbg !14351
  %conv67 = zext i16 %46 to i32, !dbg !14351
  %and68 = and i32 %conv67, 2, !dbg !14353
  %tobool69 = icmp ne i32 %and68, 0, !dbg !14353
  br i1 %tobool69, label %if.then70, label %if.else74, !dbg !14354

if.then70:                                        ; preds = %if.end42
  %47 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14355
  %BSSinfo71 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %47, i32 0, i32 70, !dbg !14356
  %48 = load i32, i32* %index, align 4, !dbg !14357
  %idxprom72 = sext i32 %48 to i64, !dbg !14355
  %arrayidx73 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo71, i64 0, i64 %idxprom72, !dbg !14355
  %BSStype = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx73, i32 0, i32 6, !dbg !14358
  store i32 1, i32* %BSStype, align 4, !dbg !14359
  br label %if.end84, !dbg !14355

if.else74:                                        ; preds = %if.end42
  %49 = load i16, i16* %capability.addr, align 2, !dbg !14360
  %conv75 = zext i16 %49 to i32, !dbg !14360
  %and76 = and i32 %conv75, 1, !dbg !14362
  %tobool77 = icmp ne i32 %and76, 0, !dbg !14362
  br i1 %tobool77, label %if.then78, label %if.end83, !dbg !14363

if.then78:                                        ; preds = %if.else74
  %50 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14364
  %BSSinfo79 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %50, i32 0, i32 70, !dbg !14365
  %51 = load i32, i32* %index, align 4, !dbg !14366
  %idxprom80 = sext i32 %51 to i64, !dbg !14364
  %arrayidx81 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo79, i64 0, i64 %idxprom80, !dbg !14364
  %BSStype82 = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx81, i32 0, i32 6, !dbg !14367
  store i32 2, i32* %BSStype82, align 4, !dbg !14368
  br label %if.end83, !dbg !14364

if.end83:                                         ; preds = %if.then78, %if.else74
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.then70
  %52 = load i16, i16* %capability.addr, align 2, !dbg !14369
  %conv85 = zext i16 %52 to i32, !dbg !14369
  %and86 = and i32 %conv85, 32, !dbg !14370
  %tobool87 = icmp ne i32 %and86, 0, !dbg !14369
  %53 = zext i1 %tobool87 to i64, !dbg !14369
  %cond88 = select i1 %tobool87, i32 1, i32 0, !dbg !14369
  %54 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14371
  %BSSinfo89 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %54, i32 0, i32 70, !dbg !14372
  %55 = load i32, i32* %index, align 4, !dbg !14373
  %idxprom90 = sext i32 %55 to i64, !dbg !14371
  %arrayidx91 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo89, i64 0, i64 %idxprom90, !dbg !14371
  %preamble = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx91, i32 0, i32 4, !dbg !14374
  store i32 %cond88, i32* %preamble, align 4, !dbg !14375
  br label %return, !dbg !14376

return:                                           ; preds = %if.end84, %if.then40, %if.then12
  ret void, !dbg !14376
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @authenticate(%struct.atmel_private* %priv, i16 zeroext %frame_len) #0 !dbg !14377 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %frame_len.addr = alloca i16, align 2
  %auth = alloca %struct.auth_body*, align 8
  %status = alloca i16, align 2
  %trans_seq_no = alloca i16, align 2
  %system = alloca i16, align 2
  %should_associate = alloca i32, align 4
  %bss_index = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !14380, metadata !DIExpression()), !dbg !14381
  store i16 %frame_len, i16* %frame_len.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %frame_len.addr, metadata !14382, metadata !DIExpression()), !dbg !14383
  call void @llvm.dbg.declare(metadata %struct.auth_body** %auth, metadata !14384, metadata !DIExpression()), !dbg !14385
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14386
  %rx_buf = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 81, !dbg !14387
  %arraydecay = getelementptr inbounds [2316 x i8], [2316 x i8]* %rx_buf, i64 0, i64 0, !dbg !14386
  %1 = bitcast i8* %arraydecay to %struct.auth_body*, !dbg !14388
  store %struct.auth_body* %1, %struct.auth_body** %auth, align 8, !dbg !14385
  call void @llvm.dbg.declare(metadata i16* %status, metadata !14389, metadata !DIExpression()), !dbg !14390
  %2 = load %struct.auth_body*, %struct.auth_body** %auth, align 8, !dbg !14391
  %status1 = getelementptr inbounds %struct.auth_body, %struct.auth_body* %2, i32 0, i32 2, !dbg !14391
  %3 = load i16, i16* %status1, align 2, !dbg !14391
  store i16 %3, i16* %status, align 2, !dbg !14390
  call void @llvm.dbg.declare(metadata i16* %trans_seq_no, metadata !14392, metadata !DIExpression()), !dbg !14393
  %4 = load %struct.auth_body*, %struct.auth_body** %auth, align 8, !dbg !14394
  %trans_seq = getelementptr inbounds %struct.auth_body, %struct.auth_body* %4, i32 0, i32 1, !dbg !14394
  %5 = load i16, i16* %trans_seq, align 2, !dbg !14394
  store i16 %5, i16* %trans_seq_no, align 2, !dbg !14393
  call void @llvm.dbg.declare(metadata i16* %system, metadata !14395, metadata !DIExpression()), !dbg !14396
  %6 = load %struct.auth_body*, %struct.auth_body** %auth, align 8, !dbg !14397
  %alg = getelementptr inbounds %struct.auth_body, %struct.auth_body* %6, i32 0, i32 0, !dbg !14397
  %7 = load i16, i16* %alg, align 2, !dbg !14397
  store i16 %7, i16* %system, align 2, !dbg !14396
  %8 = load i16, i16* %status, align 2, !dbg !14398
  %conv = zext i16 %8 to i32, !dbg !14398
  %cmp = icmp eq i32 %conv, 0, !dbg !14400
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14401

land.lhs.true:                                    ; preds = %entry
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14402
  %wep_is_on = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %9, i32 0, i32 30, !dbg !14403
  %10 = load i8, i8* %wep_is_on, align 4, !dbg !14403
  %tobool = icmp ne i8 %10, 0, !dbg !14402
  br i1 %tobool, label %if.end, label %if.then, !dbg !14404

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14405
  %station_was_associated = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %11, i32 0, i32 67, !dbg !14408
  %12 = load i32, i32* %station_was_associated, align 8, !dbg !14408
  %tobool3 = icmp ne i32 %12, 0, !dbg !14405
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !14409

if.then4:                                         ; preds = %if.then
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14410
  call void @atmel_enter_state(%struct.atmel_private* %13, i32 5) #10, !dbg !14412
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14413
  call void @send_association_request(%struct.atmel_private* %14, i32 1) #10, !dbg !14414
  br label %return, !dbg !14415

if.else:                                          ; preds = %if.then
  %15 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14416
  call void @atmel_enter_state(%struct.atmel_private* %15, i32 3) #10, !dbg !14418
  %16 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14419
  call void @send_association_request(%struct.atmel_private* %16, i32 0) #10, !dbg !14420
  br label %return, !dbg !14421

if.end:                                           ; preds = %land.lhs.true, %entry
  %17 = load i16, i16* %status, align 2, !dbg !14422
  %conv5 = zext i16 %17 to i32, !dbg !14422
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !14424
  br i1 %cmp6, label %land.lhs.true8, label %if.end58, !dbg !14425

land.lhs.true8:                                   ; preds = %if.end
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14426
  %wep_is_on9 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %18, i32 0, i32 30, !dbg !14427
  %19 = load i8, i8* %wep_is_on9, align 4, !dbg !14427
  %conv10 = zext i8 %19 to i32, !dbg !14426
  %tobool11 = icmp ne i32 %conv10, 0, !dbg !14426
  br i1 %tobool11, label %if.then12, label %if.end58, !dbg !14428

if.then12:                                        ; preds = %land.lhs.true8
  call void @llvm.dbg.declare(metadata i32* %should_associate, metadata !14429, metadata !DIExpression()), !dbg !14431
  store i32 0, i32* %should_associate, align 4, !dbg !14431
  %20 = load i16, i16* %trans_seq_no, align 2, !dbg !14432
  %conv13 = zext i16 %20 to i32, !dbg !14432
  %21 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14434
  %ExpectedAuthentTransactionSeqNum = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %21, i32 0, i32 61, !dbg !14435
  %22 = load i32, i32* %ExpectedAuthentTransactionSeqNum, align 4, !dbg !14435
  %cmp14 = icmp ne i32 %conv13, %22, !dbg !14436
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !14437

if.then16:                                        ; preds = %if.then12
  br label %return, !dbg !14438

if.end17:                                         ; preds = %if.then12
  %23 = load i16, i16* %system, align 2, !dbg !14439
  %conv18 = zext i16 %23 to i32, !dbg !14439
  %cmp19 = icmp eq i32 %conv18, 0, !dbg !14441
  br i1 %cmp19, label %if.then21, label %if.else27, !dbg !14442

if.then21:                                        ; preds = %if.end17
  %24 = load i16, i16* %trans_seq_no, align 2, !dbg !14443
  %conv22 = zext i16 %24 to i32, !dbg !14443
  %cmp23 = icmp eq i32 %conv22, 2, !dbg !14446
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !14447

if.then25:                                        ; preds = %if.then21
  store i32 1, i32* %should_associate, align 4, !dbg !14448
  br label %if.end26, !dbg !14450

if.end26:                                         ; preds = %if.then25, %if.then21
  br label %if.end50, !dbg !14451

if.else27:                                        ; preds = %if.end17
  %25 = load i16, i16* %system, align 2, !dbg !14452
  %conv28 = zext i16 %25 to i32, !dbg !14452
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !14454
  br i1 %cmp29, label %if.then31, label %if.end49, !dbg !14455

if.then31:                                        ; preds = %if.else27
  %26 = load i16, i16* %trans_seq_no, align 2, !dbg !14456
  %conv32 = zext i16 %26 to i32, !dbg !14456
  %cmp33 = icmp eq i32 %conv32, 2, !dbg !14459
  br i1 %cmp33, label %land.lhs.true35, label %if.else42, !dbg !14460

land.lhs.true35:                                  ; preds = %if.then31
  %27 = load %struct.auth_body*, %struct.auth_body** %auth, align 8, !dbg !14461
  %el_id = getelementptr inbounds %struct.auth_body, %struct.auth_body* %27, i32 0, i32 3, !dbg !14462
  %28 = load i8, i8* %el_id, align 2, !dbg !14462
  %conv36 = zext i8 %28 to i32, !dbg !14461
  %cmp37 = icmp eq i32 %conv36, 16, !dbg !14463
  br i1 %cmp37, label %if.then39, label %if.else42, !dbg !14464

if.then39:                                        ; preds = %land.lhs.true35
  %29 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14465
  %30 = load i16, i16* %system, align 2, !dbg !14467
  %31 = load %struct.auth_body*, %struct.auth_body** %auth, align 8, !dbg !14468
  %chall_text = getelementptr inbounds %struct.auth_body, %struct.auth_body* %31, i32 0, i32 5, !dbg !14469
  %arraydecay40 = getelementptr inbounds [253 x i8], [253 x i8]* %chall_text, i64 0, i64 0, !dbg !14468
  %32 = load %struct.auth_body*, %struct.auth_body** %auth, align 8, !dbg !14470
  %chall_text_len = getelementptr inbounds %struct.auth_body, %struct.auth_body* %32, i32 0, i32 4, !dbg !14471
  %33 = load i8, i8* %chall_text_len, align 1, !dbg !14471
  %conv41 = zext i8 %33 to i32, !dbg !14470
  call void @send_authentication_request(%struct.atmel_private* %29, i16 zeroext %30, i8* %arraydecay40, i32 %conv41) #10, !dbg !14472
  br label %return, !dbg !14473

if.else42:                                        ; preds = %land.lhs.true35, %if.then31
  %34 = load i16, i16* %trans_seq_no, align 2, !dbg !14474
  %conv43 = zext i16 %34 to i32, !dbg !14474
  %cmp44 = icmp eq i32 %conv43, 4, !dbg !14476
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !14477

if.then46:                                        ; preds = %if.else42
  store i32 1, i32* %should_associate, align 4, !dbg !14478
  br label %if.end47, !dbg !14480

if.end47:                                         ; preds = %if.then46, %if.else42
  br label %if.end48

if.end48:                                         ; preds = %if.end47
  br label %if.end49, !dbg !14481

if.end49:                                         ; preds = %if.end48, %if.else27
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end26
  %35 = load i32, i32* %should_associate, align 4, !dbg !14482
  %tobool51 = icmp ne i32 %35, 0, !dbg !14482
  br i1 %tobool51, label %if.then52, label %if.end57, !dbg !14484

if.then52:                                        ; preds = %if.end50
  %36 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14485
  %station_was_associated53 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %36, i32 0, i32 67, !dbg !14488
  %37 = load i32, i32* %station_was_associated53, align 8, !dbg !14488
  %tobool54 = icmp ne i32 %37, 0, !dbg !14485
  br i1 %tobool54, label %if.then55, label %if.else56, !dbg !14489

if.then55:                                        ; preds = %if.then52
  %38 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14490
  call void @atmel_enter_state(%struct.atmel_private* %38, i32 5) #10, !dbg !14492
  %39 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14493
  call void @send_association_request(%struct.atmel_private* %39, i32 1) #10, !dbg !14494
  br label %return, !dbg !14495

if.else56:                                        ; preds = %if.then52
  %40 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14496
  call void @atmel_enter_state(%struct.atmel_private* %40, i32 3) #10, !dbg !14498
  %41 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14499
  call void @send_association_request(%struct.atmel_private* %41, i32 0) #10, !dbg !14500
  br label %return, !dbg !14501

if.end57:                                         ; preds = %if.end50
  br label %if.end58, !dbg !14502

if.end58:                                         ; preds = %if.end57, %land.lhs.true8, %if.end
  %42 = load i16, i16* %status, align 2, !dbg !14503
  %conv59 = zext i16 %42 to i32, !dbg !14503
  %cmp60 = icmp eq i32 %conv59, 13, !dbg !14505
  br i1 %cmp60, label %if.then62, label %if.end88, !dbg !14506

if.then62:                                        ; preds = %if.end58
  %43 = load i16, i16* %system, align 2, !dbg !14507
  %conv63 = zext i16 %43 to i32, !dbg !14507
  %cmp64 = icmp eq i32 %conv63, 0, !dbg !14510
  br i1 %cmp64, label %if.then66, label %if.else67, !dbg !14511

if.then66:                                        ; preds = %if.then62
  %44 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14512
  %CurrentAuthentTransactionSeqNum = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %44, i32 0, i32 60, !dbg !14514
  store i32 1, i32* %CurrentAuthentTransactionSeqNum, align 8, !dbg !14515
  %45 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14516
  %exclude_unencrypted = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %45, i32 0, i32 32, !dbg !14517
  store i8 1, i8* %exclude_unencrypted, align 2, !dbg !14518
  %46 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14519
  call void @send_authentication_request(%struct.atmel_private* %46, i16 zeroext 1, i8* null, i32 0) #10, !dbg !14520
  br label %return, !dbg !14521

if.else67:                                        ; preds = %if.then62
  %47 = load i16, i16* %system, align 2, !dbg !14522
  %conv68 = zext i16 %47 to i32, !dbg !14522
  %cmp69 = icmp eq i32 %conv68, 1, !dbg !14524
  br i1 %cmp69, label %land.lhs.true71, label %if.else78, !dbg !14525

land.lhs.true71:                                  ; preds = %if.else67
  %48 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14526
  %wep_is_on72 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %48, i32 0, i32 30, !dbg !14527
  %49 = load i8, i8* %wep_is_on72, align 4, !dbg !14527
  %conv73 = zext i8 %49 to i32, !dbg !14526
  %tobool74 = icmp ne i32 %conv73, 0, !dbg !14526
  br i1 %tobool74, label %if.then75, label %if.else78, !dbg !14528

if.then75:                                        ; preds = %land.lhs.true71
  %50 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14529
  %CurrentAuthentTransactionSeqNum76 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %50, i32 0, i32 60, !dbg !14531
  store i32 1, i32* %CurrentAuthentTransactionSeqNum76, align 8, !dbg !14532
  %51 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14533
  %exclude_unencrypted77 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %51, i32 0, i32 32, !dbg !14534
  store i8 0, i8* %exclude_unencrypted77, align 2, !dbg !14535
  %52 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14536
  call void @send_authentication_request(%struct.atmel_private* %52, i16 zeroext 0, i8* null, i32 0) #10, !dbg !14537
  br label %return, !dbg !14538

if.else78:                                        ; preds = %land.lhs.true71, %if.else67
  %53 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14539
  %connect_to_any_BSS = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %53, i32 0, i32 73, !dbg !14541
  %54 = load i32, i32* %connect_to_any_BSS, align 4, !dbg !14541
  %tobool79 = icmp ne i32 %54, 0, !dbg !14539
  br i1 %tobool79, label %if.then80, label %if.end85, !dbg !14542

if.then80:                                        ; preds = %if.else78
  call void @llvm.dbg.declare(metadata i32* %bss_index, metadata !14543, metadata !DIExpression()), !dbg !14545
  %55 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14546
  %BSSinfo = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %55, i32 0, i32 70, !dbg !14547
  %56 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14548
  %current_BSS = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %56, i32 0, i32 72, !dbg !14549
  %57 = load i32, i32* %current_BSS, align 8, !dbg !14549
  %idxprom = sext i32 %57 to i64, !dbg !14546
  %arrayidx = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo, i64 0, i64 %idxprom, !dbg !14546
  %channel = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx, i32 0, i32 0, !dbg !14550
  %58 = load i32, i32* %channel, align 4, !dbg !14551
  %or = or i32 %58, 128, !dbg !14551
  store i32 %or, i32* %channel, align 4, !dbg !14551
  %59 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14552
  %call = call i32 @retrieve_bss(%struct.atmel_private* %59) #10, !dbg !14554
  store i32 %call, i32* %bss_index, align 4, !dbg !14555
  %cmp81 = icmp ne i32 %call, -1, !dbg !14556
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !14557

if.then83:                                        ; preds = %if.then80
  %60 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14558
  %61 = load i32, i32* %bss_index, align 4, !dbg !14560
  call void @atmel_join_bss(%struct.atmel_private* %60, i32 %61) #10, !dbg !14561
  br label %return, !dbg !14562

if.end84:                                         ; preds = %if.then80
  br label %if.end85, !dbg !14563

if.end85:                                         ; preds = %if.end84, %if.else78
  br label %if.end86

if.end86:                                         ; preds = %if.end85
  br label %if.end87

if.end87:                                         ; preds = %if.end86
  br label %if.end88, !dbg !14564

if.end88:                                         ; preds = %if.end87, %if.end58
  %62 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14565
  %AuthenticationRequestRetryCnt = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %62, i32 0, i32 62, !dbg !14566
  store i32 0, i32* %AuthenticationRequestRetryCnt, align 8, !dbg !14567
  %63 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14568
  call void @atmel_enter_state(%struct.atmel_private* %63, i32 7) #10, !dbg !14569
  %64 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14570
  %station_is_associated = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %64, i32 0, i32 68, !dbg !14571
  store i32 0, i32* %station_is_associated, align 4, !dbg !14572
  br label %return, !dbg !14573

return:                                           ; preds = %if.end88, %if.then83, %if.then75, %if.then66, %if.else56, %if.then55, %if.then39, %if.then16, %if.else, %if.then4
  ret void, !dbg !14573
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @associate(%struct.atmel_private* %priv, i16 zeroext %frame_len, i16 zeroext %subtype) #0 !dbg !8623 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %frame_len.addr = alloca i16, align 2
  %subtype.addr = alloca i16, align 2
  %ass_resp = alloca %struct.ass_resp_format*, align 8
  %status = alloca i16, align 2
  %ass_id = alloca i16, align 2
  %rates_len = alloca i16, align 2
  %wrqu = alloca %union.iwreq_data, align 8
  %bss_index = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !14574, metadata !DIExpression()), !dbg !14575
  store i16 %frame_len, i16* %frame_len.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %frame_len.addr, metadata !14576, metadata !DIExpression()), !dbg !14577
  store i16 %subtype, i16* %subtype.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %subtype.addr, metadata !14578, metadata !DIExpression()), !dbg !14579
  call void @llvm.dbg.declare(metadata %struct.ass_resp_format** %ass_resp, metadata !14580, metadata !DIExpression()), !dbg !14581
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14582
  %rx_buf = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 81, !dbg !14583
  %arraydecay = getelementptr inbounds [2316 x i8], [2316 x i8]* %rx_buf, i64 0, i64 0, !dbg !14582
  %1 = bitcast i8* %arraydecay to %struct.ass_resp_format*, !dbg !14584
  store %struct.ass_resp_format* %1, %struct.ass_resp_format** %ass_resp, align 8, !dbg !14581
  call void @llvm.dbg.declare(metadata i16* %status, metadata !14585, metadata !DIExpression()), !dbg !14586
  %2 = load %struct.ass_resp_format*, %struct.ass_resp_format** %ass_resp, align 8, !dbg !14587
  %status1 = getelementptr inbounds %struct.ass_resp_format, %struct.ass_resp_format* %2, i32 0, i32 1, !dbg !14587
  %3 = load i16, i16* %status1, align 2, !dbg !14587
  store i16 %3, i16* %status, align 2, !dbg !14586
  call void @llvm.dbg.declare(metadata i16* %ass_id, metadata !14588, metadata !DIExpression()), !dbg !14589
  %4 = load %struct.ass_resp_format*, %struct.ass_resp_format** %ass_resp, align 8, !dbg !14590
  %ass_id2 = getelementptr inbounds %struct.ass_resp_format, %struct.ass_resp_format* %4, i32 0, i32 2, !dbg !14590
  %5 = load i16, i16* %ass_id2, align 2, !dbg !14590
  store i16 %5, i16* %ass_id, align 2, !dbg !14589
  call void @llvm.dbg.declare(metadata i16* %rates_len, metadata !14591, metadata !DIExpression()), !dbg !14592
  %6 = load %struct.ass_resp_format*, %struct.ass_resp_format** %ass_resp, align 8, !dbg !14593
  %length = getelementptr inbounds %struct.ass_resp_format, %struct.ass_resp_format* %6, i32 0, i32 4, !dbg !14594
  %7 = load i8, i8* %length, align 1, !dbg !14594
  %conv = zext i8 %7 to i32, !dbg !14593
  %cmp = icmp sgt i32 %conv, 4, !dbg !14595
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14593

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !14593

cond.false:                                       ; preds = %entry
  %8 = load %struct.ass_resp_format*, %struct.ass_resp_format** %ass_resp, align 8, !dbg !14596
  %length4 = getelementptr inbounds %struct.ass_resp_format, %struct.ass_resp_format* %8, i32 0, i32 4, !dbg !14597
  %9 = load i8, i8* %length4, align 1, !dbg !14597
  %conv5 = zext i8 %9 to i32, !dbg !14596
  br label %cond.end, !dbg !14593

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 4, %cond.true ], [ %conv5, %cond.false ], !dbg !14593
  %conv6 = trunc i32 %cond to i16, !dbg !14593
  store i16 %conv6, i16* %rates_len, align 2, !dbg !14592
  call void @llvm.dbg.declare(metadata %union.iwreq_data* %wrqu, metadata !14598, metadata !DIExpression()), !dbg !14599
  %10 = load i16, i16* %frame_len.addr, align 2, !dbg !14600
  %conv7 = zext i16 %10 to i32, !dbg !14600
  %11 = load i16, i16* %rates_len, align 2, !dbg !14602
  %conv8 = zext i16 %11 to i32, !dbg !14602
  %add = add i32 8, %conv8, !dbg !14603
  %cmp9 = icmp slt i32 %conv7, %add, !dbg !14604
  br i1 %cmp9, label %if.then, label %if.end, !dbg !14605

if.then:                                          ; preds = %cond.end
  br label %if.end83, !dbg !14606

if.end:                                           ; preds = %cond.end
  %12 = load i16, i16* %status, align 2, !dbg !14607
  %conv11 = zext i16 %12 to i32, !dbg !14607
  %cmp12 = icmp eq i32 %conv11, 0, !dbg !14609
  br i1 %cmp12, label %if.then14, label %if.end35, !dbg !14610

if.then14:                                        ; preds = %if.end
  %13 = load i16, i16* %subtype.addr, align 2, !dbg !14611
  %conv15 = zext i16 %13 to i32, !dbg !14611
  %cmp16 = icmp eq i32 %conv15, 16, !dbg !14614
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !14615

if.then18:                                        ; preds = %if.then14
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14616
  %AssociationRequestRetryCnt = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %14, i32 0, i32 63, !dbg !14617
  store i32 0, i32* %AssociationRequestRetryCnt, align 4, !dbg !14618
  br label %if.end19, !dbg !14616

if.else:                                          ; preds = %if.then14
  %15 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14619
  %ReAssociationRequestRetryCnt = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %15, i32 0, i32 64, !dbg !14620
  store i32 0, i32* %ReAssociationRequestRetryCnt, align 8, !dbg !14621
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then18
  %16 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14622
  %17 = load i16, i16* %ass_id, align 2, !dbg !14623
  %conv20 = zext i16 %17 to i32, !dbg !14623
  %and = and i32 %conv20, 16383, !dbg !14624
  %conv21 = trunc i32 %and to i16, !dbg !14623
  call void @atmel_set_mib16(%struct.atmel_private* %16, i8 zeroext 5, i8 zeroext 6, i16 zeroext %conv21) #10, !dbg !14625
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14626
  %19 = load %struct.ass_resp_format*, %struct.ass_resp_format** %ass_resp, align 8, !dbg !14627
  %rates = getelementptr inbounds %struct.ass_resp_format, %struct.ass_resp_format* %19, i32 0, i32 5, !dbg !14628
  %arraydecay22 = getelementptr inbounds [4 x i8], [4 x i8]* %rates, i64 0, i64 0, !dbg !14627
  %20 = load i16, i16* %rates_len, align 2, !dbg !14629
  %conv23 = zext i16 %20 to i32, !dbg !14629
  call void @atmel_set_mib(%struct.atmel_private* %18, i8 zeroext 7, i8 zeroext 20, i8* %arraydecay22, i32 %conv23) #10, !dbg !14630
  %21 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14631
  %power_mode = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %21, i32 0, i32 44, !dbg !14633
  %22 = load i32, i32* %power_mode, align 4, !dbg !14633
  %cmp24 = icmp eq i32 %22, 0, !dbg !14634
  br i1 %cmp24, label %if.then26, label %if.else27, !dbg !14635

if.then26:                                        ; preds = %if.end19
  %23 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14636
  %listen_interval = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %23, i32 0, i32 59, !dbg !14638
  store i32 1, i32* %listen_interval, align 4, !dbg !14639
  %24 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14640
  call void @atmel_set_mib8(%struct.atmel_private* %24, i8 zeroext 5, i8 zeroext 53, i8 zeroext 1) #10, !dbg !14641
  %25 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14642
  call void @atmel_set_mib16(%struct.atmel_private* %25, i8 zeroext 5, i8 zeroext 54, i16 zeroext 1) #10, !dbg !14643
  br label %if.end29, !dbg !14644

if.else27:                                        ; preds = %if.end19
  %26 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14645
  %listen_interval28 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %26, i32 0, i32 59, !dbg !14647
  store i32 2, i32* %listen_interval28, align 4, !dbg !14648
  %27 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14649
  call void @atmel_set_mib8(%struct.atmel_private* %27, i8 zeroext 5, i8 zeroext 53, i8 zeroext 2) #10, !dbg !14650
  %28 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14651
  call void @atmel_set_mib16(%struct.atmel_private* %28, i8 zeroext 5, i8 zeroext 54, i16 zeroext 2) #10, !dbg !14652
  br label %if.end29

if.end29:                                         ; preds = %if.else27, %if.then26
  %29 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14653
  %station_is_associated = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %29, i32 0, i32 68, !dbg !14654
  store i32 1, i32* %station_is_associated, align 4, !dbg !14655
  %30 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14656
  %station_was_associated = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %30, i32 0, i32 67, !dbg !14657
  store i32 1, i32* %station_was_associated, align 8, !dbg !14658
  %31 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14659
  call void @atmel_enter_state(%struct.atmel_private* %31, i32 4) #10, !dbg !14660
  %data = bitcast %union.iwreq_data* %wrqu to %struct.iw_point*, !dbg !14661
  %length30 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %data, i32 0, i32 1, !dbg !14662
  store i16 0, i16* %length30, align 8, !dbg !14663
  %data31 = bitcast %union.iwreq_data* %wrqu to %struct.iw_point*, !dbg !14664
  %flags = getelementptr inbounds %struct.iw_point, %struct.iw_point* %data31, i32 0, i32 2, !dbg !14665
  store i16 0, i16* %flags, align 2, !dbg !14666
  %ap_addr = bitcast %union.iwreq_data* %wrqu to %struct.sockaddr*, !dbg !14667
  %sa_data = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %ap_addr, i32 0, i32 1, !dbg !14668
  %arraydecay32 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data, i64 0, i64 0, !dbg !14669
  %32 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14670
  %CurrentBSSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %32, i32 0, i32 76, !dbg !14671
  %arraydecay33 = getelementptr inbounds [6 x i8], [6 x i8]* %CurrentBSSID, i64 0, i64 0, !dbg !14669
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay32, i8* align 8 %arraydecay33, i64 6, i1 false), !dbg !14669
  %ap_addr34 = bitcast %union.iwreq_data* %wrqu to %struct.sockaddr*, !dbg !14672
  %sa_family = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %ap_addr34, i32 0, i32 0, !dbg !14673
  store i16 1, i16* %sa_family, align 8, !dbg !14674
  %33 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14675
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %33, i32 0, i32 7, !dbg !14676
  %34 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !14676
  call void @wireless_send_event(%struct.net_device* %34, i32 35605, %union.iwreq_data* %wrqu, i8* null) #10, !dbg !14677
  br label %if.end83, !dbg !14678

if.end35:                                         ; preds = %if.end
  %35 = load i16, i16* %subtype.addr, align 2, !dbg !14679
  %conv36 = zext i16 %35 to i32, !dbg !14679
  %cmp37 = icmp eq i32 %conv36, 16, !dbg !14681
  br i1 %cmp37, label %land.lhs.true, label %if.end53, !dbg !14682

land.lhs.true:                                    ; preds = %if.end35
  %36 = load i16, i16* %status, align 2, !dbg !14683
  %conv39 = zext i16 %36 to i32, !dbg !14683
  %cmp40 = icmp ne i32 %conv39, 18, !dbg !14684
  br i1 %cmp40, label %land.lhs.true42, label %if.end53, !dbg !14685

land.lhs.true42:                                  ; preds = %land.lhs.true
  %37 = load i16, i16* %status, align 2, !dbg !14686
  %conv43 = zext i16 %37 to i32, !dbg !14686
  %cmp44 = icmp ne i32 %conv43, 10, !dbg !14687
  br i1 %cmp44, label %land.lhs.true46, label %if.end53, !dbg !14688

land.lhs.true46:                                  ; preds = %land.lhs.true42
  %38 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14689
  %AssociationRequestRetryCnt47 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %38, i32 0, i32 63, !dbg !14690
  %39 = load i32, i32* %AssociationRequestRetryCnt47, align 4, !dbg !14690
  %cmp48 = icmp slt i32 %39, 3, !dbg !14691
  br i1 %cmp48, label %if.then50, label %if.end53, !dbg !14692

if.then50:                                        ; preds = %land.lhs.true46
  %40 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14693
  %management_timer = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %40, i32 0, i32 6, !dbg !14695
  %41 = load volatile i64, i64* @jiffies, align 8, !dbg !14696
  %add51 = add i64 %41, 640, !dbg !14697
  %call = call i32 @mod_timer(%struct.timer_list* %management_timer, i64 %add51) #10, !dbg !14698
  %42 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14699
  %AssociationRequestRetryCnt52 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %42, i32 0, i32 63, !dbg !14700
  %43 = load i32, i32* %AssociationRequestRetryCnt52, align 4, !dbg !14701
  %inc = add i32 %43, 1, !dbg !14701
  store i32 %inc, i32* %AssociationRequestRetryCnt52, align 4, !dbg !14701
  %44 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14702
  call void @send_association_request(%struct.atmel_private* %44, i32 0) #10, !dbg !14703
  br label %if.end83, !dbg !14704

if.end53:                                         ; preds = %land.lhs.true46, %land.lhs.true42, %land.lhs.true, %if.end35
  %45 = load i16, i16* %subtype.addr, align 2, !dbg !14705
  %conv54 = zext i16 %45 to i32, !dbg !14705
  %cmp55 = icmp eq i32 %conv54, 48, !dbg !14707
  br i1 %cmp55, label %land.lhs.true57, label %if.end75, !dbg !14708

land.lhs.true57:                                  ; preds = %if.end53
  %46 = load i16, i16* %status, align 2, !dbg !14709
  %conv58 = zext i16 %46 to i32, !dbg !14709
  %cmp59 = icmp ne i32 %conv58, 18, !dbg !14710
  br i1 %cmp59, label %land.lhs.true61, label %if.end75, !dbg !14711

land.lhs.true61:                                  ; preds = %land.lhs.true57
  %47 = load i16, i16* %status, align 2, !dbg !14712
  %conv62 = zext i16 %47 to i32, !dbg !14712
  %cmp63 = icmp ne i32 %conv62, 10, !dbg !14713
  br i1 %cmp63, label %land.lhs.true65, label %if.end75, !dbg !14714

land.lhs.true65:                                  ; preds = %land.lhs.true61
  %48 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14715
  %ReAssociationRequestRetryCnt66 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %48, i32 0, i32 64, !dbg !14716
  %49 = load i32, i32* %ReAssociationRequestRetryCnt66, align 8, !dbg !14716
  %cmp67 = icmp slt i32 %49, 3, !dbg !14717
  br i1 %cmp67, label %if.then69, label %if.end75, !dbg !14718

if.then69:                                        ; preds = %land.lhs.true65
  %50 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14719
  %management_timer70 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %50, i32 0, i32 6, !dbg !14721
  %51 = load volatile i64, i64* @jiffies, align 8, !dbg !14722
  %add71 = add i64 %51, 640, !dbg !14723
  %call72 = call i32 @mod_timer(%struct.timer_list* %management_timer70, i64 %add71) #10, !dbg !14724
  %52 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14725
  %ReAssociationRequestRetryCnt73 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %52, i32 0, i32 64, !dbg !14726
  %53 = load i32, i32* %ReAssociationRequestRetryCnt73, align 8, !dbg !14727
  %inc74 = add i32 %53, 1, !dbg !14727
  store i32 %inc74, i32* %ReAssociationRequestRetryCnt73, align 8, !dbg !14727
  %54 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14728
  call void @send_association_request(%struct.atmel_private* %54, i32 1) #10, !dbg !14729
  br label %if.end83, !dbg !14730

if.end75:                                         ; preds = %land.lhs.true65, %land.lhs.true61, %land.lhs.true57, %if.end53
  %55 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14731
  call void @atmel_enter_state(%struct.atmel_private* %55, i32 7) #10, !dbg !14732
  %56 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14733
  %station_is_associated76 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %56, i32 0, i32 68, !dbg !14734
  store i32 0, i32* %station_is_associated76, align 4, !dbg !14735
  %57 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14736
  %connect_to_any_BSS = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %57, i32 0, i32 73, !dbg !14738
  %58 = load i32, i32* %connect_to_any_BSS, align 4, !dbg !14738
  %tobool = icmp ne i32 %58, 0, !dbg !14736
  br i1 %tobool, label %if.then77, label %if.end83, !dbg !14739

if.then77:                                        ; preds = %if.end75
  call void @llvm.dbg.declare(metadata i32* %bss_index, metadata !14740, metadata !DIExpression()), !dbg !14742
  %59 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14743
  %BSSinfo = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %59, i32 0, i32 70, !dbg !14744
  %60 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14745
  %current_BSS = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %60, i32 0, i32 72, !dbg !14746
  %61 = load i32, i32* %current_BSS, align 8, !dbg !14746
  %idxprom = sext i32 %61 to i64, !dbg !14743
  %arrayidx = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo, i64 0, i64 %idxprom, !dbg !14743
  %channel = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx, i32 0, i32 0, !dbg !14747
  %62 = load i32, i32* %channel, align 4, !dbg !14748
  %or = or i32 %62, 128, !dbg !14748
  store i32 %or, i32* %channel, align 4, !dbg !14748
  %63 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14749
  %call78 = call i32 @retrieve_bss(%struct.atmel_private* %63) #10, !dbg !14751
  store i32 %call78, i32* %bss_index, align 4, !dbg !14752
  %cmp79 = icmp ne i32 %call78, -1, !dbg !14753
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !14754

if.then81:                                        ; preds = %if.then77
  %64 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14755
  %65 = load i32, i32* %bss_index, align 4, !dbg !14756
  call void @atmel_join_bss(%struct.atmel_private* %64, i32 %65) #10, !dbg !14757
  br label %if.end82, !dbg !14757

if.end82:                                         ; preds = %if.then81, %if.then77
  br label %if.end83, !dbg !14758

if.end83:                                         ; preds = %if.then, %if.end29, %if.then50, %if.then69, %if.end82, %if.end75
  ret void, !dbg !14759
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @join(%struct.atmel_private* %priv, i32 %type) #0 !dbg !14760 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %type.addr = alloca i32, align 4
  %cmd = alloca %struct.anon.138, align 2
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !14761, metadata !DIExpression()), !dbg !14762
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !14763, metadata !DIExpression()), !dbg !14764
  call void @llvm.dbg.declare(metadata %struct.anon.138* %cmd, metadata !14765, metadata !DIExpression()), !dbg !14775
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14776
  %SSID_size = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 74, !dbg !14777
  %1 = load i32, i32* %SSID_size, align 8, !dbg !14777
  %conv = trunc i32 %1 to i8, !dbg !14776
  %SSID_size1 = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd, i32 0, i32 5, !dbg !14778
  store i8 %conv, i8* %SSID_size1, align 2, !dbg !14779
  %SSID = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd, i32 0, i32 1, !dbg !14780
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %SSID, i64 0, i64 0, !dbg !14781
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14782
  %SSID2 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 78, !dbg !14783
  %arraydecay3 = getelementptr inbounds [32 x i8], [32 x i8]* %SSID2, i64 0, i64 0, !dbg !14781
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14784
  %SSID_size4 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %3, i32 0, i32 74, !dbg !14785
  %4 = load i32, i32* %SSID_size4, align 8, !dbg !14785
  %conv5 = sext i32 %4 to i64, !dbg !14784
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay, i8* align 4 %arraydecay3, i64 %conv5, i1 false), !dbg !14781
  %BSSID = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd, i32 0, i32 0, !dbg !14786
  %arraydecay6 = getelementptr inbounds [6 x i8], [6 x i8]* %BSSID, i64 0, i64 0, !dbg !14787
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14788
  %CurrentBSSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %5, i32 0, i32 76, !dbg !14789
  %arraydecay7 = getelementptr inbounds [6 x i8], [6 x i8]* %CurrentBSSID, i64 0, i64 0, !dbg !14787
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay6, i8* align 8 %arraydecay7, i64 6, i1 false), !dbg !14787
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14790
  %channel = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 47, !dbg !14791
  %7 = load i32, i32* %channel, align 4, !dbg !14791
  %and = and i32 %7, 127, !dbg !14792
  %conv8 = trunc i32 %and to i8, !dbg !14793
  %channel9 = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd, i32 0, i32 3, !dbg !14794
  store i8 %conv8, i8* %channel9, align 1, !dbg !14795
  %8 = load i32, i32* %type.addr, align 4, !dbg !14796
  %conv10 = trunc i32 %8 to i8, !dbg !14796
  %BSS_type = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd, i32 0, i32 2, !dbg !14797
  store i8 %conv10, i8* %BSS_type, align 2, !dbg !14798
  %timeout = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd, i32 0, i32 4, !dbg !14799
  store i16 2000, i16* %timeout, align 2, !dbg !14800
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14801
  %10 = bitcast %struct.anon.138* %cmd to i8*, !dbg !14802
  call void @atmel_send_command(%struct.atmel_private* %9, i32 4, i8* %10, i32 44) #10, !dbg !14803
  ret void, !dbg !14804
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @send_association_request(%struct.atmel_private* %priv, i32 %is_reassoc) #0 !dbg !14805 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %is_reassoc.addr = alloca i32, align 4
  %ssid_el_p = alloca i8*, align 8
  %bodysize = alloca i32, align 4
  %header = alloca %struct.ieee80211_hdr, align 2
  %body = alloca %struct.ass_req_format, align 2
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !14806, metadata !DIExpression()), !dbg !14807
  store i32 %is_reassoc, i32* %is_reassoc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_reassoc.addr, metadata !14808, metadata !DIExpression()), !dbg !14809
  call void @llvm.dbg.declare(metadata i8** %ssid_el_p, metadata !14810, metadata !DIExpression()), !dbg !14811
  call void @llvm.dbg.declare(metadata i32* %bodysize, metadata !14812, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.declare(metadata %struct.ieee80211_hdr* %header, metadata !14814, metadata !DIExpression()), !dbg !14815
  call void @llvm.dbg.declare(metadata %struct.ass_req_format* %body, metadata !14816, metadata !DIExpression()), !dbg !14828
  %0 = load i32, i32* %is_reassoc.addr, align 4, !dbg !14829
  %tobool = icmp ne i32 %0, 0, !dbg !14829
  %1 = zext i1 %tobool to i64, !dbg !14829
  %cond = select i1 %tobool, i32 32, i32 0, !dbg !14829
  %or = or i32 0, %cond, !dbg !14829
  %conv = trunc i32 %or to i16, !dbg !14829
  %frame_control = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 0, !dbg !14830
  store i16 %conv, i16* %frame_control, align 2, !dbg !14831
  %duration_id = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 1, !dbg !14832
  store i16 -32768, i16* %duration_id, align 2, !dbg !14833
  %seq_ctrl = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 5, !dbg !14834
  store i16 0, i16* %seq_ctrl, align 2, !dbg !14835
  %addr1 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 2, !dbg !14836
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %addr1, i64 0, i64 0, !dbg !14837
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14838
  %CurrentBSSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 76, !dbg !14839
  %arraydecay1 = getelementptr inbounds [6 x i8], [6 x i8]* %CurrentBSSID, i64 0, i64 0, !dbg !14837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay, i8* align 8 %arraydecay1, i64 6, i1 false), !dbg !14837
  %addr2 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 3, !dbg !14840
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %addr2, i64 0, i64 0, !dbg !14841
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14842
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %3, i32 0, i32 7, !dbg !14843
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !14843
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 74, !dbg !14844
  %5 = load i8*, i8** %dev_addr, align 8, !dbg !14844
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay2, i8* align 1 %5, i64 6, i1 false), !dbg !14841
  %addr3 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 4, !dbg !14845
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %addr3, i64 0, i64 0, !dbg !14846
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14847
  %CurrentBSSID4 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 76, !dbg !14848
  %arraydecay5 = getelementptr inbounds [6 x i8], [6 x i8]* %CurrentBSSID4, i64 0, i64 0, !dbg !14846
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay3, i8* align 8 %arraydecay5, i64 6, i1 false), !dbg !14846
  %capability = getelementptr inbounds %struct.ass_req_format, %struct.ass_req_format* %body, i32 0, i32 0, !dbg !14849
  store i16 1, i16* %capability, align 2, !dbg !14850
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14851
  %wep_is_on = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %7, i32 0, i32 30, !dbg !14853
  %8 = load i8, i8* %wep_is_on, align 4, !dbg !14853
  %tobool6 = icmp ne i8 %8, 0, !dbg !14851
  br i1 %tobool6, label %if.then, label %if.end, !dbg !14854

if.then:                                          ; preds = %entry
  %capability7 = getelementptr inbounds %struct.ass_req_format, %struct.ass_req_format* %body, i32 0, i32 0, !dbg !14855
  %9 = load i16, i16* %capability7, align 2, !dbg !14856
  %conv8 = zext i16 %9 to i32, !dbg !14856
  %or9 = or i32 %conv8, 16, !dbg !14856
  %conv10 = trunc i32 %or9 to i16, !dbg !14856
  store i16 %conv10, i16* %capability7, align 2, !dbg !14856
  br label %if.end, !dbg !14857

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14858
  %preamble = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 56, !dbg !14860
  %11 = load i32, i32* %preamble, align 8, !dbg !14860
  %cmp = icmp eq i32 %11, 1, !dbg !14861
  br i1 %cmp, label %if.then12, label %if.end17, !dbg !14862

if.then12:                                        ; preds = %if.end
  %capability13 = getelementptr inbounds %struct.ass_req_format, %struct.ass_req_format* %body, i32 0, i32 0, !dbg !14863
  %12 = load i16, i16* %capability13, align 2, !dbg !14864
  %conv14 = zext i16 %12 to i32, !dbg !14864
  %or15 = or i32 %conv14, 32, !dbg !14864
  %conv16 = trunc i32 %or15 to i16, !dbg !14864
  store i16 %conv16, i16* %capability13, align 2, !dbg !14864
  br label %if.end17, !dbg !14865

if.end17:                                         ; preds = %if.then12, %if.end
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14866
  %listen_interval = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %13, i32 0, i32 59, !dbg !14866
  %14 = load i32, i32* %listen_interval, align 4, !dbg !14866
  %15 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14866
  %beacon_period = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %15, i32 0, i32 58, !dbg !14866
  %16 = load i32, i32* %beacon_period, align 8, !dbg !14866
  %mul = mul i32 %14, %16, !dbg !14866
  %conv18 = trunc i32 %mul to i16, !dbg !14866
  %listen_interval19 = getelementptr inbounds %struct.ass_req_format, %struct.ass_req_format* %body, i32 0, i32 1, !dbg !14867
  store i16 %conv18, i16* %listen_interval19, align 2, !dbg !14868
  %17 = load i32, i32* %is_reassoc.addr, align 4, !dbg !14869
  %tobool20 = icmp ne i32 %17, 0, !dbg !14869
  br i1 %tobool20, label %if.then21, label %if.else, !dbg !14871

if.then21:                                        ; preds = %if.end17
  %ap = getelementptr inbounds %struct.ass_req_format, %struct.ass_req_format* %body, i32 0, i32 2, !dbg !14872
  %arraydecay22 = getelementptr inbounds [6 x i8], [6 x i8]* %ap, i64 0, i64 0, !dbg !14874
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14875
  %CurrentBSSID23 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %18, i32 0, i32 76, !dbg !14876
  %arraydecay24 = getelementptr inbounds [6 x i8], [6 x i8]* %CurrentBSSID23, i64 0, i64 0, !dbg !14874
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay22, i8* align 8 %arraydecay24, i64 6, i1 false), !dbg !14874
  %ssid_el_id = getelementptr inbounds %struct.ass_req_format, %struct.ass_req_format* %body, i32 0, i32 3, !dbg !14877
  store i8* %ssid_el_id, i8** %ssid_el_p, align 8, !dbg !14878
  %19 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14879
  %SSID_size = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %19, i32 0, i32 74, !dbg !14880
  %20 = load i32, i32* %SSID_size, align 8, !dbg !14880
  %add = add i32 18, %20, !dbg !14881
  store i32 %add, i32* %bodysize, align 4, !dbg !14882
  br label %if.end28, !dbg !14883

if.else:                                          ; preds = %if.end17
  %ap25 = getelementptr inbounds %struct.ass_req_format, %struct.ass_req_format* %body, i32 0, i32 2, !dbg !14884
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %ap25, i64 0, i64 0, !dbg !14886
  store i8* %arrayidx, i8** %ssid_el_p, align 8, !dbg !14887
  %21 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14888
  %SSID_size26 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %21, i32 0, i32 74, !dbg !14889
  %22 = load i32, i32* %SSID_size26, align 8, !dbg !14889
  %add27 = add i32 12, %22, !dbg !14890
  store i32 %add27, i32* %bodysize, align 4, !dbg !14891
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then21
  %23 = load i8*, i8** %ssid_el_p, align 8, !dbg !14892
  %arrayidx29 = getelementptr i8, i8* %23, i64 0, !dbg !14892
  store i8 0, i8* %arrayidx29, align 1, !dbg !14893
  %24 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14894
  %SSID_size30 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %24, i32 0, i32 74, !dbg !14895
  %25 = load i32, i32* %SSID_size30, align 8, !dbg !14895
  %conv31 = trunc i32 %25 to i8, !dbg !14894
  %26 = load i8*, i8** %ssid_el_p, align 8, !dbg !14896
  %arrayidx32 = getelementptr i8, i8* %26, i64 1, !dbg !14896
  store i8 %conv31, i8* %arrayidx32, align 1, !dbg !14897
  %27 = load i8*, i8** %ssid_el_p, align 8, !dbg !14898
  %add.ptr = getelementptr i8, i8* %27, i64 2, !dbg !14899
  %28 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14900
  %SSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %28, i32 0, i32 78, !dbg !14901
  %arraydecay33 = getelementptr inbounds [32 x i8], [32 x i8]* %SSID, i64 0, i64 0, !dbg !14902
  %29 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14903
  %SSID_size34 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %29, i32 0, i32 74, !dbg !14904
  %30 = load i32, i32* %SSID_size34, align 8, !dbg !14904
  %conv35 = sext i32 %30 to i64, !dbg !14903
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 4 %arraydecay33, i64 %conv35, i1 false), !dbg !14902
  %31 = load i8*, i8** %ssid_el_p, align 8, !dbg !14905
  %32 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14906
  %SSID_size36 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %32, i32 0, i32 74, !dbg !14907
  %33 = load i32, i32* %SSID_size36, align 8, !dbg !14907
  %add37 = add i32 2, %33, !dbg !14908
  %idxprom = sext i32 %add37 to i64, !dbg !14905
  %arrayidx38 = getelementptr i8, i8* %31, i64 %idxprom, !dbg !14905
  store i8 1, i8* %arrayidx38, align 1, !dbg !14909
  %34 = load i8*, i8** %ssid_el_p, align 8, !dbg !14910
  %35 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14911
  %SSID_size39 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %35, i32 0, i32 74, !dbg !14912
  %36 = load i32, i32* %SSID_size39, align 8, !dbg !14912
  %add40 = add i32 3, %36, !dbg !14913
  %idxprom41 = sext i32 %add40 to i64, !dbg !14910
  %arrayidx42 = getelementptr i8, i8* %34, i64 %idxprom41, !dbg !14910
  store i8 4, i8* %arrayidx42, align 1, !dbg !14914
  %37 = load i8*, i8** %ssid_el_p, align 8, !dbg !14915
  %add.ptr43 = getelementptr i8, i8* %37, i64 4, !dbg !14916
  %38 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14917
  %SSID_size44 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %38, i32 0, i32 74, !dbg !14918
  %39 = load i32, i32* %SSID_size44, align 8, !dbg !14918
  %idx.ext = sext i32 %39 to i64, !dbg !14919
  %add.ptr45 = getelementptr i8, i8* %add.ptr43, i64 %idx.ext, !dbg !14919
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr45, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @atmel_basic_rates, i64 0, i64 0), i64 4, i1 false), !dbg !14920
  %40 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14921
  %41 = bitcast %struct.ass_req_format* %body to i8*, !dbg !14922
  %42 = load i32, i32* %bodysize, align 4, !dbg !14923
  call void @atmel_transmit_management_frame(%struct.atmel_private* %40, %struct.ieee80211_hdr* %header, i8* %41, i32 %42) #10, !dbg !14924
  ret void, !dbg !14925
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @send_authentication_request(%struct.atmel_private* %priv, i16 zeroext %system, i8* %challenge, i32 %challenge_len) #0 !dbg !14926 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %system.addr = alloca i16, align 2
  %challenge.addr = alloca i8*, align 8
  %challenge_len.addr = alloca i32, align 4
  %header = alloca %struct.ieee80211_hdr, align 2
  %auth = alloca %struct.auth_body, align 2
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !14929, metadata !DIExpression()), !dbg !14930
  store i16 %system, i16* %system.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %system.addr, metadata !14931, metadata !DIExpression()), !dbg !14932
  store i8* %challenge, i8** %challenge.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %challenge.addr, metadata !14933, metadata !DIExpression()), !dbg !14934
  store i32 %challenge_len, i32* %challenge_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %challenge_len.addr, metadata !14935, metadata !DIExpression()), !dbg !14936
  call void @llvm.dbg.declare(metadata %struct.ieee80211_hdr* %header, metadata !14937, metadata !DIExpression()), !dbg !14938
  call void @llvm.dbg.declare(metadata %struct.auth_body* %auth, metadata !14939, metadata !DIExpression()), !dbg !14940
  %frame_control = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 0, !dbg !14941
  store i16 176, i16* %frame_control, align 2, !dbg !14942
  %duration_id = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 1, !dbg !14943
  store i16 -32768, i16* %duration_id, align 2, !dbg !14944
  %seq_ctrl = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 5, !dbg !14945
  store i16 0, i16* %seq_ctrl, align 2, !dbg !14946
  %addr1 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 2, !dbg !14947
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %addr1, i64 0, i64 0, !dbg !14948
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14949
  %CurrentBSSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 76, !dbg !14950
  %arraydecay1 = getelementptr inbounds [6 x i8], [6 x i8]* %CurrentBSSID, i64 0, i64 0, !dbg !14948
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay, i8* align 8 %arraydecay1, i64 6, i1 false), !dbg !14948
  %addr2 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 3, !dbg !14951
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %addr2, i64 0, i64 0, !dbg !14952
  %1 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14953
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %1, i32 0, i32 7, !dbg !14954
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !14954
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 74, !dbg !14955
  %3 = load i8*, i8** %dev_addr, align 8, !dbg !14955
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay2, i8* align 1 %3, i64 6, i1 false), !dbg !14952
  %addr3 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 4, !dbg !14956
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %addr3, i64 0, i64 0, !dbg !14957
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14958
  %CurrentBSSID4 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 76, !dbg !14959
  %arraydecay5 = getelementptr inbounds [6 x i8], [6 x i8]* %CurrentBSSID4, i64 0, i64 0, !dbg !14957
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay3, i8* align 8 %arraydecay5, i64 6, i1 false), !dbg !14957
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14960
  %wep_is_on = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %5, i32 0, i32 30, !dbg !14962
  %6 = load i8, i8* %wep_is_on, align 4, !dbg !14962
  %conv = zext i8 %6 to i32, !dbg !14960
  %tobool = icmp ne i32 %conv, 0, !dbg !14960
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !14963

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14964
  %CurrentAuthentTransactionSeqNum = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %7, i32 0, i32 60, !dbg !14965
  %8 = load i32, i32* %CurrentAuthentTransactionSeqNum, align 8, !dbg !14965
  %cmp = icmp ne i32 %8, 1, !dbg !14966
  br i1 %cmp, label %if.then, label %if.end, !dbg !14967

if.then:                                          ; preds = %land.lhs.true
  %frame_control7 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %header, i32 0, i32 0, !dbg !14968
  %9 = load i16, i16* %frame_control7, align 2, !dbg !14969
  %conv8 = zext i16 %9 to i32, !dbg !14969
  %or = or i32 %conv8, 16384, !dbg !14969
  %conv9 = trunc i32 %or to i16, !dbg !14969
  store i16 %conv9, i16* %frame_control7, align 2, !dbg !14969
  br label %if.end, !dbg !14970

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load i16, i16* %system.addr, align 2, !dbg !14971
  %alg = getelementptr inbounds %struct.auth_body, %struct.auth_body* %auth, i32 0, i32 0, !dbg !14972
  store i16 %10, i16* %alg, align 2, !dbg !14973
  %status = getelementptr inbounds %struct.auth_body, %struct.auth_body* %auth, i32 0, i32 2, !dbg !14974
  store i16 0, i16* %status, align 2, !dbg !14975
  %11 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14976
  %CurrentAuthentTransactionSeqNum10 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %11, i32 0, i32 60, !dbg !14976
  %12 = load i32, i32* %CurrentAuthentTransactionSeqNum10, align 8, !dbg !14976
  %conv11 = trunc i32 %12 to i16, !dbg !14976
  %trans_seq = getelementptr inbounds %struct.auth_body, %struct.auth_body* %auth, i32 0, i32 1, !dbg !14977
  store i16 %conv11, i16* %trans_seq, align 2, !dbg !14978
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14979
  %CurrentAuthentTransactionSeqNum12 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %13, i32 0, i32 60, !dbg !14980
  %14 = load i32, i32* %CurrentAuthentTransactionSeqNum12, align 8, !dbg !14980
  %add = add i32 %14, 1, !dbg !14981
  %15 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14982
  %ExpectedAuthentTransactionSeqNum = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %15, i32 0, i32 61, !dbg !14983
  store i32 %add, i32* %ExpectedAuthentTransactionSeqNum, align 4, !dbg !14984
  %16 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !14985
  %CurrentAuthentTransactionSeqNum13 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %16, i32 0, i32 60, !dbg !14986
  %17 = load i32, i32* %CurrentAuthentTransactionSeqNum13, align 8, !dbg !14987
  %add14 = add i32 %17, 2, !dbg !14987
  store i32 %add14, i32* %CurrentAuthentTransactionSeqNum13, align 8, !dbg !14987
  %18 = load i32, i32* %challenge_len.addr, align 4, !dbg !14988
  %cmp15 = icmp ne i32 %18, 0, !dbg !14990
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !14991

if.then17:                                        ; preds = %if.end
  %el_id = getelementptr inbounds %struct.auth_body, %struct.auth_body* %auth, i32 0, i32 3, !dbg !14992
  store i8 16, i8* %el_id, align 2, !dbg !14994
  %19 = load i32, i32* %challenge_len.addr, align 4, !dbg !14995
  %conv18 = trunc i32 %19 to i8, !dbg !14995
  %chall_text_len = getelementptr inbounds %struct.auth_body, %struct.auth_body* %auth, i32 0, i32 4, !dbg !14996
  store i8 %conv18, i8* %chall_text_len, align 1, !dbg !14997
  %chall_text = getelementptr inbounds %struct.auth_body, %struct.auth_body* %auth, i32 0, i32 5, !dbg !14998
  %arraydecay19 = getelementptr inbounds [253 x i8], [253 x i8]* %chall_text, i64 0, i64 0, !dbg !14999
  %20 = load i8*, i8** %challenge.addr, align 8, !dbg !15000
  %21 = load i32, i32* %challenge_len.addr, align 4, !dbg !15001
  %conv20 = sext i32 %21 to i64, !dbg !15001
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay19, i8* align 1 %20, i64 %conv20, i1 false), !dbg !14999
  %22 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15002
  %23 = bitcast %struct.auth_body* %auth to i8*, !dbg !15003
  %24 = load i32, i32* %challenge_len.addr, align 4, !dbg !15004
  %add21 = add i32 8, %24, !dbg !15005
  call void @atmel_transmit_management_frame(%struct.atmel_private* %22, %struct.ieee80211_hdr* %header, i8* %23, i32 %add21) #10, !dbg !15006
  br label %if.end22, !dbg !15007

if.else:                                          ; preds = %if.end
  %25 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15008
  %26 = bitcast %struct.auth_body* %auth to i8*, !dbg !15010
  call void @atmel_transmit_management_frame(%struct.atmel_private* %25, %struct.ieee80211_hdr* %header, i8* %26, i32 6) #10, !dbg !15011
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then17
  ret void, !dbg !15012
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @retrieve_bss(%struct.atmel_private* %priv) #0 !dbg !15013 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.atmel_private*, align 8
  %i = alloca i32, align 4
  %max_rssi = alloca i32, align 4
  %max_index = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !15014, metadata !DIExpression()), !dbg !15015
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15016, metadata !DIExpression()), !dbg !15017
  call void @llvm.dbg.declare(metadata i32* %max_rssi, metadata !15018, metadata !DIExpression()), !dbg !15019
  store i32 -128, i32* %max_rssi, align 4, !dbg !15019
  call void @llvm.dbg.declare(metadata i32* %max_index, metadata !15020, metadata !DIExpression()), !dbg !15021
  store i32 -1, i32* %max_index, align 4, !dbg !15021
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15022
  %BSS_list_entries = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 71, !dbg !15024
  %1 = load i32, i32* %BSS_list_entries, align 4, !dbg !15024
  %cmp = icmp eq i32 %1, 0, !dbg !15025
  br i1 %cmp, label %if.then, label %if.end, !dbg !15026

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !15027
  br label %return, !dbg !15027

if.end:                                           ; preds = %entry
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15028
  %connect_to_any_BSS = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 73, !dbg !15030
  %3 = load i32, i32* %connect_to_any_BSS, align 4, !dbg !15030
  %tobool = icmp ne i32 %3, 0, !dbg !15028
  br i1 %tobool, label %if.then1, label %if.end30, !dbg !15031

if.then1:                                         ; preds = %if.end
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15032
  %current_BSS = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 72, !dbg !15034
  store i32 0, i32* %current_BSS, align 8, !dbg !15035
  store i32 0, i32* %i, align 4, !dbg !15036
  br label %for.cond, !dbg !15038

for.cond:                                         ; preds = %for.inc, %if.then1
  %5 = load i32, i32* %i, align 4, !dbg !15039
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15041
  %BSS_list_entries2 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 71, !dbg !15042
  %7 = load i32, i32* %BSS_list_entries2, align 4, !dbg !15042
  %cmp3 = icmp slt i32 %5, %7, !dbg !15043
  br i1 %cmp3, label %for.body, label %for.end, !dbg !15044

for.body:                                         ; preds = %for.cond
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15045
  %operating_mode = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %8, i32 0, i32 43, !dbg !15048
  %9 = load i32, i32* %operating_mode, align 8, !dbg !15048
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15049
  %BSSinfo = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 70, !dbg !15050
  %11 = load i32, i32* %i, align 4, !dbg !15051
  %idxprom = sext i32 %11 to i64, !dbg !15049
  %arrayidx = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo, i64 0, i64 %idxprom, !dbg !15049
  %BSStype = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx, i32 0, i32 6, !dbg !15052
  %12 = load i32, i32* %BSStype, align 4, !dbg !15052
  %cmp4 = icmp eq i32 %9, %12, !dbg !15053
  br i1 %cmp4, label %land.lhs.true, label %if.end29, !dbg !15054

land.lhs.true:                                    ; preds = %for.body
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15055
  %wep_is_on = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %13, i32 0, i32 30, !dbg !15056
  %14 = load i8, i8* %wep_is_on, align 4, !dbg !15056
  %tobool5 = icmp ne i8 %14, 0, !dbg !15055
  br i1 %tobool5, label %lor.lhs.false, label %land.lhs.true6, !dbg !15057

land.lhs.true6:                                   ; preds = %land.lhs.true
  %15 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15058
  %BSSinfo7 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %15, i32 0, i32 70, !dbg !15059
  %16 = load i32, i32* %i, align 4, !dbg !15060
  %idxprom8 = sext i32 %16 to i64, !dbg !15058
  %arrayidx9 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo7, i64 0, i64 %idxprom8, !dbg !15058
  %UsingWEP = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx9, i32 0, i32 3, !dbg !15061
  %17 = load i32, i32* %UsingWEP, align 4, !dbg !15061
  %tobool10 = icmp ne i32 %17, 0, !dbg !15058
  br i1 %tobool10, label %lor.lhs.false, label %land.lhs.true19, !dbg !15062

lor.lhs.false:                                    ; preds = %land.lhs.true6, %land.lhs.true
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15063
  %wep_is_on11 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %18, i32 0, i32 30, !dbg !15064
  %19 = load i8, i8* %wep_is_on11, align 4, !dbg !15064
  %conv = zext i8 %19 to i32, !dbg !15063
  %tobool12 = icmp ne i32 %conv, 0, !dbg !15063
  br i1 %tobool12, label %land.lhs.true13, label %if.end29, !dbg !15065

land.lhs.true13:                                  ; preds = %lor.lhs.false
  %20 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15066
  %BSSinfo14 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %20, i32 0, i32 70, !dbg !15067
  %21 = load i32, i32* %i, align 4, !dbg !15068
  %idxprom15 = sext i32 %21 to i64, !dbg !15066
  %arrayidx16 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo14, i64 0, i64 %idxprom15, !dbg !15066
  %UsingWEP17 = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx16, i32 0, i32 3, !dbg !15069
  %22 = load i32, i32* %UsingWEP17, align 4, !dbg !15069
  %tobool18 = icmp ne i32 %22, 0, !dbg !15066
  br i1 %tobool18, label %land.lhs.true19, label %if.end29, !dbg !15070

land.lhs.true19:                                  ; preds = %land.lhs.true13, %land.lhs.true6
  %23 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15071
  %BSSinfo20 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %23, i32 0, i32 70, !dbg !15072
  %24 = load i32, i32* %i, align 4, !dbg !15073
  %idxprom21 = sext i32 %24 to i64, !dbg !15071
  %arrayidx22 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo20, i64 0, i64 %idxprom21, !dbg !15071
  %channel = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx22, i32 0, i32 0, !dbg !15074
  %25 = load i32, i32* %channel, align 4, !dbg !15074
  %and = and i32 %25, 128, !dbg !15075
  %tobool23 = icmp ne i32 %and, 0, !dbg !15075
  br i1 %tobool23, label %if.end29, label %if.then24, !dbg !15076

if.then24:                                        ; preds = %land.lhs.true19
  %26 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15077
  %BSSinfo25 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %26, i32 0, i32 70, !dbg !15079
  %27 = load i32, i32* %i, align 4, !dbg !15080
  %idxprom26 = sext i32 %27 to i64, !dbg !15077
  %arrayidx27 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo25, i64 0, i64 %idxprom26, !dbg !15077
  %RSSI = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx27, i32 0, i32 2, !dbg !15081
  %28 = load i32, i32* %RSSI, align 4, !dbg !15081
  store i32 %28, i32* %max_rssi, align 4, !dbg !15082
  %29 = load i32, i32* %i, align 4, !dbg !15083
  store i32 %29, i32* %max_index, align 4, !dbg !15084
  %30 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15085
  %current_BSS28 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %30, i32 0, i32 72, !dbg !15086
  store i32 %29, i32* %current_BSS28, align 8, !dbg !15087
  br label %if.end29, !dbg !15088

if.end29:                                         ; preds = %if.then24, %land.lhs.true19, %land.lhs.true13, %lor.lhs.false, %for.body
  br label %for.inc, !dbg !15089

for.inc:                                          ; preds = %if.end29
  %31 = load i32, i32* %i, align 4, !dbg !15090
  %inc = add i32 %31, 1, !dbg !15090
  store i32 %inc, i32* %i, align 4, !dbg !15090
  br label %for.cond, !dbg !15091, !llvm.loop !15092

for.end:                                          ; preds = %for.cond
  %32 = load i32, i32* %max_index, align 4, !dbg !15094
  store i32 %32, i32* %retval, align 4, !dbg !15095
  br label %return, !dbg !15095

if.end30:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !15096
  br label %for.cond31, !dbg !15098

for.cond31:                                       ; preds = %for.inc81, %if.end30
  %33 = load i32, i32* %i, align 4, !dbg !15099
  %34 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15101
  %BSS_list_entries32 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %34, i32 0, i32 71, !dbg !15102
  %35 = load i32, i32* %BSS_list_entries32, align 4, !dbg !15102
  %cmp33 = icmp slt i32 %33, %35, !dbg !15103
  br i1 %cmp33, label %for.body35, label %for.end83, !dbg !15104

for.body35:                                       ; preds = %for.cond31
  %36 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15105
  %SSID_size = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %36, i32 0, i32 74, !dbg !15108
  %37 = load i32, i32* %SSID_size, align 8, !dbg !15108
  %38 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15109
  %BSSinfo36 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %38, i32 0, i32 70, !dbg !15110
  %39 = load i32, i32* %i, align 4, !dbg !15111
  %idxprom37 = sext i32 %39 to i64, !dbg !15109
  %arrayidx38 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo36, i64 0, i64 %idxprom37, !dbg !15109
  %SSIDsize = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx38, i32 0, i32 1, !dbg !15112
  %40 = load i32, i32* %SSIDsize, align 4, !dbg !15112
  %cmp39 = icmp eq i32 %37, %40, !dbg !15113
  br i1 %cmp39, label %land.lhs.true41, label %if.end80, !dbg !15114

land.lhs.true41:                                  ; preds = %for.body35
  %41 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15115
  %SSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %41, i32 0, i32 78, !dbg !15116
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %SSID, i64 0, i64 0, !dbg !15115
  %42 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15117
  %BSSinfo42 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %42, i32 0, i32 70, !dbg !15118
  %43 = load i32, i32* %i, align 4, !dbg !15119
  %idxprom43 = sext i32 %43 to i64, !dbg !15117
  %arrayidx44 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo42, i64 0, i64 %idxprom43, !dbg !15117
  %SSID45 = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx44, i32 0, i32 8, !dbg !15120
  %arraydecay46 = getelementptr inbounds [32 x i8], [32 x i8]* %SSID45, i64 0, i64 0, !dbg !15117
  %44 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15121
  %SSID_size47 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %44, i32 0, i32 74, !dbg !15122
  %45 = load i32, i32* %SSID_size47, align 8, !dbg !15122
  %conv48 = sext i32 %45 to i64, !dbg !15121
  %call = call i32 @memcmp(i8* %arraydecay, i8* %arraydecay46, i64 %conv48) #10, !dbg !15123
  %cmp49 = icmp eq i32 %call, 0, !dbg !15124
  br i1 %cmp49, label %land.lhs.true51, label %if.end80, !dbg !15125

land.lhs.true51:                                  ; preds = %land.lhs.true41
  %46 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15126
  %operating_mode52 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %46, i32 0, i32 43, !dbg !15127
  %47 = load i32, i32* %operating_mode52, align 8, !dbg !15127
  %48 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15128
  %BSSinfo53 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %48, i32 0, i32 70, !dbg !15129
  %49 = load i32, i32* %i, align 4, !dbg !15130
  %idxprom54 = sext i32 %49 to i64, !dbg !15128
  %arrayidx55 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo53, i64 0, i64 %idxprom54, !dbg !15128
  %BSStype56 = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx55, i32 0, i32 6, !dbg !15131
  %50 = load i32, i32* %BSStype56, align 4, !dbg !15131
  %cmp57 = icmp eq i32 %47, %50, !dbg !15132
  br i1 %cmp57, label %land.lhs.true59, label %if.end80, !dbg !15133

land.lhs.true59:                                  ; preds = %land.lhs.true51
  %51 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15134
  %52 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15135
  %BSSinfo60 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %52, i32 0, i32 70, !dbg !15136
  %53 = load i32, i32* %i, align 4, !dbg !15137
  %idxprom61 = sext i32 %53 to i64, !dbg !15135
  %arrayidx62 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo60, i64 0, i64 %idxprom61, !dbg !15135
  %channel63 = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx62, i32 0, i32 0, !dbg !15138
  %54 = load i32, i32* %channel63, align 4, !dbg !15138
  %call64 = call i32 @atmel_validate_channel(%struct.atmel_private* %51, i32 %54) #10, !dbg !15139
  %cmp65 = icmp eq i32 %call64, 0, !dbg !15140
  br i1 %cmp65, label %if.then67, label %if.end80, !dbg !15141

if.then67:                                        ; preds = %land.lhs.true59
  %55 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15142
  %BSSinfo68 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %55, i32 0, i32 70, !dbg !15145
  %56 = load i32, i32* %i, align 4, !dbg !15146
  %idxprom69 = sext i32 %56 to i64, !dbg !15142
  %arrayidx70 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo68, i64 0, i64 %idxprom69, !dbg !15142
  %RSSI71 = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx70, i32 0, i32 2, !dbg !15147
  %57 = load i32, i32* %RSSI71, align 4, !dbg !15147
  %58 = load i32, i32* %max_rssi, align 4, !dbg !15148
  %cmp72 = icmp sge i32 %57, %58, !dbg !15149
  br i1 %cmp72, label %if.then74, label %if.end79, !dbg !15150

if.then74:                                        ; preds = %if.then67
  %59 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15151
  %BSSinfo75 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %59, i32 0, i32 70, !dbg !15153
  %60 = load i32, i32* %i, align 4, !dbg !15154
  %idxprom76 = sext i32 %60 to i64, !dbg !15151
  %arrayidx77 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo75, i64 0, i64 %idxprom76, !dbg !15151
  %RSSI78 = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx77, i32 0, i32 2, !dbg !15155
  %61 = load i32, i32* %RSSI78, align 4, !dbg !15155
  store i32 %61, i32* %max_rssi, align 4, !dbg !15156
  %62 = load i32, i32* %i, align 4, !dbg !15157
  store i32 %62, i32* %max_index, align 4, !dbg !15158
  br label %if.end79, !dbg !15159

if.end79:                                         ; preds = %if.then74, %if.then67
  br label %if.end80, !dbg !15160

if.end80:                                         ; preds = %if.end79, %land.lhs.true59, %land.lhs.true51, %land.lhs.true41, %for.body35
  br label %for.inc81, !dbg !15161

for.inc81:                                        ; preds = %if.end80
  %63 = load i32, i32* %i, align 4, !dbg !15162
  %inc82 = add i32 %63, 1, !dbg !15162
  store i32 %inc82, i32* %i, align 4, !dbg !15162
  br label %for.cond31, !dbg !15163, !llvm.loop !15164

for.end83:                                        ; preds = %for.cond31
  %64 = load i32, i32* %max_index, align 4, !dbg !15166
  store i32 %64, i32* %retval, align 4, !dbg !15167
  br label %return, !dbg !15167

return:                                           ; preds = %for.end83, %for.end, %if.then
  %65 = load i32, i32* %retval, align 4, !dbg !15168
  ret i32 %65, !dbg !15168
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_join_bss(%struct.atmel_private* %priv, i32 %bss_index) #0 !dbg !15169 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %bss_index.addr = alloca i32, align 4
  %bss = alloca %struct.bss_info*, align 8
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !15170, metadata !DIExpression()), !dbg !15171
  store i32 %bss_index, i32* %bss_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bss_index.addr, metadata !15172, metadata !DIExpression()), !dbg !15173
  call void @llvm.dbg.declare(metadata %struct.bss_info** %bss, metadata !15174, metadata !DIExpression()), !dbg !15176
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15177
  %BSSinfo = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 70, !dbg !15178
  %1 = load i32, i32* %bss_index.addr, align 4, !dbg !15179
  %idxprom = sext i32 %1 to i64, !dbg !15177
  %arrayidx = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo, i64 0, i64 %idxprom, !dbg !15177
  store %struct.bss_info* %arrayidx, %struct.bss_info** %bss, align 8, !dbg !15176
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15180
  %CurrentBSSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 76, !dbg !15181
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %CurrentBSSID, i64 0, i64 0, !dbg !15182
  %3 = load %struct.bss_info*, %struct.bss_info** %bss, align 8, !dbg !15183
  %BSSID = getelementptr inbounds %struct.bss_info, %struct.bss_info* %3, i32 0, i32 7, !dbg !15184
  %arraydecay1 = getelementptr inbounds [6 x i8], [6 x i8]* %BSSID, i64 0, i64 0, !dbg !15182
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 4 %arraydecay1, i64 6, i1 false), !dbg !15182
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15185
  %SSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 78, !dbg !15186
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %SSID, i64 0, i64 0, !dbg !15187
  %5 = load %struct.bss_info*, %struct.bss_info** %bss, align 8, !dbg !15188
  %SSID3 = getelementptr inbounds %struct.bss_info, %struct.bss_info* %5, i32 0, i32 8, !dbg !15189
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %SSID3, i64 0, i64 0, !dbg !15187
  %6 = load %struct.bss_info*, %struct.bss_info** %bss, align 8, !dbg !15190
  %SSIDsize = getelementptr inbounds %struct.bss_info, %struct.bss_info* %6, i32 0, i32 1, !dbg !15191
  %7 = load i32, i32* %SSIDsize, align 4, !dbg !15191
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15192
  %SSID_size = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %8, i32 0, i32 74, !dbg !15193
  store i32 %7, i32* %SSID_size, align 8, !dbg !15194
  %conv = sext i32 %7 to i64, !dbg !15192
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay2, i8* align 2 %arraydecay4, i64 %conv, i1 false), !dbg !15187
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15195
  %use_wpa = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %9, i32 0, i32 38, !dbg !15197
  %10 = load i32, i32* %use_wpa, align 4, !dbg !15197
  %tobool = icmp ne i32 %10, 0, !dbg !15195
  br i1 %tobool, label %if.then, label %if.end, !dbg !15198

if.then:                                          ; preds = %entry
  %11 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15199
  call void @build_wpa_mib(%struct.atmel_private* %11) #10, !dbg !15200
  br label %if.end, !dbg !15200

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.bss_info*, %struct.bss_info** %bss, align 8, !dbg !15201
  %BSStype = getelementptr inbounds %struct.bss_info, %struct.bss_info* %12, i32 0, i32 6, !dbg !15203
  %13 = load i32, i32* %BSStype, align 4, !dbg !15203
  %cmp = icmp eq i32 %13, 1, !dbg !15204
  br i1 %cmp, label %land.lhs.true, label %if.end12, !dbg !15205

land.lhs.true:                                    ; preds = %if.end
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15206
  %operating_mode = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %14, i32 0, i32 43, !dbg !15207
  %15 = load i32, i32* %operating_mode, align 8, !dbg !15207
  %cmp6 = icmp ne i32 %15, 1, !dbg !15208
  br i1 %cmp6, label %land.lhs.true8, label %if.end12, !dbg !15209

land.lhs.true8:                                   ; preds = %land.lhs.true
  %16 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15210
  %power_mode = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %16, i32 0, i32 44, !dbg !15211
  %17 = load i32, i32* %power_mode, align 4, !dbg !15211
  %tobool9 = icmp ne i32 %17, 0, !dbg !15210
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !15212

if.then10:                                        ; preds = %land.lhs.true8
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15213
  %power_mode11 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %18, i32 0, i32 44, !dbg !15215
  store i32 0, i32* %power_mode11, align 4, !dbg !15216
  %19 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15217
  %listen_interval = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %19, i32 0, i32 59, !dbg !15218
  store i32 1, i32* %listen_interval, align 4, !dbg !15219
  %20 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15220
  call void @atmel_set_mib8(%struct.atmel_private* %20, i8 zeroext 5, i8 zeroext 53, i8 zeroext 1) #10, !dbg !15221
  %21 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15222
  call void @atmel_set_mib16(%struct.atmel_private* %21, i8 zeroext 5, i8 zeroext 54, i16 zeroext 1) #10, !dbg !15223
  br label %if.end12, !dbg !15224

if.end12:                                         ; preds = %if.then10, %land.lhs.true8, %land.lhs.true, %if.end
  %22 = load %struct.bss_info*, %struct.bss_info** %bss, align 8, !dbg !15225
  %BSStype13 = getelementptr inbounds %struct.bss_info, %struct.bss_info* %22, i32 0, i32 6, !dbg !15226
  %23 = load i32, i32* %BSStype13, align 4, !dbg !15226
  %24 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15227
  %operating_mode14 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %24, i32 0, i32 43, !dbg !15228
  store i32 %23, i32* %operating_mode14, align 8, !dbg !15229
  %25 = load %struct.bss_info*, %struct.bss_info** %bss, align 8, !dbg !15230
  %channel = getelementptr inbounds %struct.bss_info, %struct.bss_info* %25, i32 0, i32 0, !dbg !15231
  %26 = load i32, i32* %channel, align 4, !dbg !15231
  %and = and i32 %26, 127, !dbg !15232
  %27 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15233
  %channel15 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %27, i32 0, i32 47, !dbg !15234
  store i32 %and, i32* %channel15, align 4, !dbg !15235
  %28 = load %struct.bss_info*, %struct.bss_info** %bss, align 8, !dbg !15236
  %beacon_period = getelementptr inbounds %struct.bss_info, %struct.bss_info* %28, i32 0, i32 5, !dbg !15237
  %29 = load i32, i32* %beacon_period, align 4, !dbg !15237
  %30 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15238
  %beacon_period16 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %30, i32 0, i32 58, !dbg !15239
  store i32 %29, i32* %beacon_period16, align 8, !dbg !15240
  %31 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15241
  %preamble = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %31, i32 0, i32 56, !dbg !15243
  %32 = load i32, i32* %preamble, align 8, !dbg !15243
  %33 = load %struct.bss_info*, %struct.bss_info** %bss, align 8, !dbg !15244
  %preamble17 = getelementptr inbounds %struct.bss_info, %struct.bss_info* %33, i32 0, i32 4, !dbg !15245
  %34 = load i32, i32* %preamble17, align 4, !dbg !15245
  %cmp18 = icmp ne i32 %32, %34, !dbg !15246
  br i1 %cmp18, label %if.then20, label %if.end25, !dbg !15247

if.then20:                                        ; preds = %if.end12
  %35 = load %struct.bss_info*, %struct.bss_info** %bss, align 8, !dbg !15248
  %preamble21 = getelementptr inbounds %struct.bss_info, %struct.bss_info* %35, i32 0, i32 4, !dbg !15250
  %36 = load i32, i32* %preamble21, align 4, !dbg !15250
  %37 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15251
  %preamble22 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %37, i32 0, i32 56, !dbg !15252
  store i32 %36, i32* %preamble22, align 8, !dbg !15253
  %38 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15254
  %39 = load %struct.bss_info*, %struct.bss_info** %bss, align 8, !dbg !15255
  %preamble23 = getelementptr inbounds %struct.bss_info, %struct.bss_info* %39, i32 0, i32 4, !dbg !15256
  %40 = load i32, i32* %preamble23, align 4, !dbg !15256
  %conv24 = trunc i32 %40 to i8, !dbg !15255
  call void @atmel_set_mib8(%struct.atmel_private* %38, i8 zeroext 1, i8 zeroext 9, i8 zeroext %conv24) #10, !dbg !15257
  br label %if.end25, !dbg !15258

if.end25:                                         ; preds = %if.then20, %if.end12
  %41 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15259
  %wep_is_on = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %41, i32 0, i32 30, !dbg !15261
  %42 = load i8, i8* %wep_is_on, align 4, !dbg !15261
  %tobool26 = icmp ne i8 %42, 0, !dbg !15259
  br i1 %tobool26, label %if.end30, label %land.lhs.true27, !dbg !15262

land.lhs.true27:                                  ; preds = %if.end25
  %43 = load %struct.bss_info*, %struct.bss_info** %bss, align 8, !dbg !15263
  %UsingWEP = getelementptr inbounds %struct.bss_info, %struct.bss_info* %43, i32 0, i32 3, !dbg !15264
  %44 = load i32, i32* %UsingWEP, align 4, !dbg !15264
  %tobool28 = icmp ne i32 %44, 0, !dbg !15263
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !15265

if.then29:                                        ; preds = %land.lhs.true27
  %45 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15266
  call void @atmel_enter_state(%struct.atmel_private* %45, i32 7) #10, !dbg !15268
  %46 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15269
  %station_is_associated = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %46, i32 0, i32 68, !dbg !15270
  store i32 0, i32* %station_is_associated, align 4, !dbg !15271
  br label %if.end44, !dbg !15272

if.end30:                                         ; preds = %land.lhs.true27, %if.end25
  %47 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15273
  %wep_is_on31 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %47, i32 0, i32 30, !dbg !15275
  %48 = load i8, i8* %wep_is_on31, align 4, !dbg !15275
  %conv32 = zext i8 %48 to i32, !dbg !15273
  %tobool33 = icmp ne i32 %conv32, 0, !dbg !15273
  br i1 %tobool33, label %land.lhs.true34, label %if.end39, !dbg !15276

land.lhs.true34:                                  ; preds = %if.end30
  %49 = load %struct.bss_info*, %struct.bss_info** %bss, align 8, !dbg !15277
  %UsingWEP35 = getelementptr inbounds %struct.bss_info, %struct.bss_info* %49, i32 0, i32 3, !dbg !15278
  %50 = load i32, i32* %UsingWEP35, align 4, !dbg !15278
  %tobool36 = icmp ne i32 %50, 0, !dbg !15277
  br i1 %tobool36, label %if.end39, label %if.then37, !dbg !15279

if.then37:                                        ; preds = %land.lhs.true34
  %51 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15280
  call void @atmel_enter_state(%struct.atmel_private* %51, i32 7) #10, !dbg !15282
  %52 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15283
  %station_is_associated38 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %52, i32 0, i32 68, !dbg !15284
  store i32 0, i32* %station_is_associated38, align 4, !dbg !15285
  br label %if.end44, !dbg !15286

if.end39:                                         ; preds = %land.lhs.true34, %if.end30
  %53 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15287
  call void @atmel_enter_state(%struct.atmel_private* %53, i32 1) #10, !dbg !15288
  %54 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15289
  %operating_mode40 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %54, i32 0, i32 43, !dbg !15291
  %55 = load i32, i32* %operating_mode40, align 8, !dbg !15291
  %cmp41 = icmp eq i32 %55, 2, !dbg !15292
  br i1 %cmp41, label %if.then43, label %if.else, !dbg !15293

if.then43:                                        ; preds = %if.end39
  %56 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15294
  call void @join(%struct.atmel_private* %56, i32 2) #10, !dbg !15295
  br label %if.end44, !dbg !15295

if.else:                                          ; preds = %if.end39
  %57 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15296
  call void @join(%struct.atmel_private* %57, i32 1) #10, !dbg !15297
  br label %if.end44

if.end44:                                         ; preds = %if.then29, %if.then37, %if.else, %if.then43
  ret void, !dbg !15298
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_transmit_management_frame(%struct.atmel_private* %priv, %struct.ieee80211_hdr* %header, i8* %body, i32 %body_len) #0 !dbg !15299 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %header.addr = alloca %struct.ieee80211_hdr*, align 8
  %body.addr = alloca i8*, align 8
  %body_len.addr = alloca i32, align 4
  %buff = alloca i16, align 2
  %len = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !15302, metadata !DIExpression()), !dbg !15303
  store %struct.ieee80211_hdr* %header, %struct.ieee80211_hdr** %header.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ieee80211_hdr** %header.addr, metadata !15304, metadata !DIExpression()), !dbg !15305
  store i8* %body, i8** %body.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %body.addr, metadata !15306, metadata !DIExpression()), !dbg !15307
  store i32 %body_len, i32* %body_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %body_len.addr, metadata !15308, metadata !DIExpression()), !dbg !15309
  call void @llvm.dbg.declare(metadata i16* %buff, metadata !15310, metadata !DIExpression()), !dbg !15311
  call void @llvm.dbg.declare(metadata i32* %len, metadata !15312, metadata !DIExpression()), !dbg !15313
  %0 = load i32, i32* %body_len.addr, align 4, !dbg !15314
  %add = add i32 24, %0, !dbg !15315
  store i32 %add, i32* %len, align 4, !dbg !15313
  %1 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15316
  %2 = load i32, i32* %len, align 4, !dbg !15318
  %conv = trunc i32 %2 to i16, !dbg !15318
  %call = call zeroext i16 @find_tx_buff(%struct.atmel_private* %1, i16 zeroext %conv) #10, !dbg !15319
  store i16 %call, i16* %buff, align 2, !dbg !15320
  %tobool = icmp ne i16 %call, 0, !dbg !15320
  br i1 %tobool, label %if.end, label %if.then, !dbg !15321

if.then:                                          ; preds = %entry
  br label %return, !dbg !15322

if.end:                                           ; preds = %entry
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15323
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %3, i32 0, i32 7, !dbg !15324
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15324
  %5 = load i16, i16* %buff, align 2, !dbg !15325
  %6 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !15326
  %7 = bitcast %struct.ieee80211_hdr* %6 to i8*, !dbg !15327
  call void @atmel_copy_to_card(%struct.net_device* %4, i16 zeroext %5, i8* %7, i16 zeroext 24) #10, !dbg !15328
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15329
  %dev1 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %8, i32 0, i32 7, !dbg !15330
  %9 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !15330
  %10 = load i16, i16* %buff, align 2, !dbg !15331
  %conv2 = zext i16 %10 to i32, !dbg !15331
  %add3 = add i32 %conv2, 24, !dbg !15332
  %conv4 = trunc i32 %add3 to i16, !dbg !15331
  %11 = load i8*, i8** %body.addr, align 8, !dbg !15333
  %12 = load i32, i32* %body_len.addr, align 4, !dbg !15334
  %conv5 = trunc i32 %12 to i16, !dbg !15334
  call void @atmel_copy_to_card(%struct.net_device* %9, i16 zeroext %conv4, i8* %11, i16 zeroext %conv5) #10, !dbg !15335
  %13 = load i32, i32* %len, align 4, !dbg !15336
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15337
  %tx_buff_tail = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %14, i32 0, i32 25, !dbg !15338
  %15 = load i16, i16* %tx_buff_tail, align 2, !dbg !15339
  %conv6 = zext i16 %15 to i32, !dbg !15339
  %add7 = add i32 %conv6, %13, !dbg !15339
  %conv8 = trunc i32 %add7 to i16, !dbg !15339
  store i16 %conv8, i16* %tx_buff_tail, align 2, !dbg !15339
  %16 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15340
  %17 = load %struct.ieee80211_hdr*, %struct.ieee80211_hdr** %header.addr, align 8, !dbg !15341
  %addr1 = getelementptr inbounds %struct.ieee80211_hdr, %struct.ieee80211_hdr* %17, i32 0, i32 2, !dbg !15342
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %addr1, i64 0, i64 0, !dbg !15341
  %18 = load i8, i8* %arrayidx, align 2, !dbg !15341
  %conv9 = zext i8 %18 to i32, !dbg !15341
  %and = and i32 %conv9, 1, !dbg !15343
  %19 = load i32, i32* %len, align 4, !dbg !15344
  %conv10 = trunc i32 %19 to i16, !dbg !15344
  %20 = load i16, i16* %buff, align 2, !dbg !15345
  call void @tx_update_descriptor(%struct.atmel_private* %16, i32 %and, i16 zeroext %conv10, i16 zeroext %20, i8 zeroext 2) #10, !dbg !15346
  br label %return, !dbg !15347

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !15347
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_set_mib16(%struct.atmel_private* %priv, i8 zeroext %type, i8 zeroext %index, i16 zeroext %data) #0 !dbg !15348 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %type.addr = alloca i8, align 1
  %index.addr = alloca i8, align 1
  %data.addr = alloca i16, align 2
  %m = alloca %struct.get_set_mib, align 1
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !15351, metadata !DIExpression()), !dbg !15352
  store i8 %type, i8* %type.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %type.addr, metadata !15353, metadata !DIExpression()), !dbg !15354
  store i8 %index, i8* %index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %index.addr, metadata !15355, metadata !DIExpression()), !dbg !15356
  store i16 %data, i16* %data.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %data.addr, metadata !15357, metadata !DIExpression()), !dbg !15358
  call void @llvm.dbg.declare(metadata %struct.get_set_mib* %m, metadata !15359, metadata !DIExpression()), !dbg !15360
  %0 = load i8, i8* %type.addr, align 1, !dbg !15361
  %type1 = getelementptr inbounds %struct.get_set_mib, %struct.get_set_mib* %m, i32 0, i32 0, !dbg !15362
  store i8 %0, i8* %type1, align 1, !dbg !15363
  %size = getelementptr inbounds %struct.get_set_mib, %struct.get_set_mib* %m, i32 0, i32 1, !dbg !15364
  store i8 2, i8* %size, align 1, !dbg !15365
  %1 = load i8, i8* %index.addr, align 1, !dbg !15366
  %index2 = getelementptr inbounds %struct.get_set_mib, %struct.get_set_mib* %m, i32 0, i32 2, !dbg !15367
  store i8 %1, i8* %index2, align 1, !dbg !15368
  %2 = load i16, i16* %data.addr, align 2, !dbg !15369
  %conv = trunc i16 %2 to i8, !dbg !15369
  %data3 = getelementptr inbounds %struct.get_set_mib, %struct.get_set_mib* %m, i32 0, i32 4, !dbg !15370
  %arrayidx = getelementptr [212 x i8], [212 x i8]* %data3, i64 0, i64 0, !dbg !15371
  store i8 %conv, i8* %arrayidx, align 1, !dbg !15372
  %3 = load i16, i16* %data.addr, align 2, !dbg !15373
  %conv4 = zext i16 %3 to i32, !dbg !15373
  %shr = ashr i32 %conv4, 8, !dbg !15374
  %conv5 = trunc i32 %shr to i8, !dbg !15373
  %data6 = getelementptr inbounds %struct.get_set_mib, %struct.get_set_mib* %m, i32 0, i32 4, !dbg !15375
  %arrayidx7 = getelementptr [212 x i8], [212 x i8]* %data6, i64 0, i64 1, !dbg !15376
  store i8 %conv5, i8* %arrayidx7, align 1, !dbg !15377
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15378
  %5 = bitcast %struct.get_set_mib* %m to i8*, !dbg !15379
  %call = call i32 @atmel_send_command_wait(%struct.atmel_private* %4, i32 1, i8* %5, i32 6) #10, !dbg !15380
  ret void, !dbg !15381
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_send_command_wait(%struct.atmel_private* %priv, i32 %command, i8* %cmd, i32 %cmd_size) #0 !dbg !15382 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %command.addr = alloca i32, align 4
  %cmd.addr = alloca i8*, align 8
  %cmd_size.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !15385, metadata !DIExpression()), !dbg !15386
  store i32 %command, i32* %command.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %command.addr, metadata !15387, metadata !DIExpression()), !dbg !15388
  store i8* %cmd, i8** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cmd.addr, metadata !15389, metadata !DIExpression()), !dbg !15390
  store i32 %cmd_size, i32* %cmd_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd_size.addr, metadata !15391, metadata !DIExpression()), !dbg !15392
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15393, metadata !DIExpression()), !dbg !15394
  call void @llvm.dbg.declare(metadata i32* %status, metadata !15395, metadata !DIExpression()), !dbg !15396
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15397
  %1 = load i32, i32* %command.addr, align 4, !dbg !15398
  %2 = load i8*, i8** %cmd.addr, align 8, !dbg !15399
  %3 = load i32, i32* %cmd_size.addr, align 4, !dbg !15400
  call void @atmel_send_command(%struct.atmel_private* %0, i32 %1, i8* %2, i32 %3) #10, !dbg !15401
  store i32 5000, i32* %i, align 4, !dbg !15402
  br label %for.cond, !dbg !15404

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !15405
  %tobool = icmp ne i32 %4, 0, !dbg !15407
  br i1 %tobool, label %for.body, label %for.end, !dbg !15407

for.body:                                         ; preds = %for.cond
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15408
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15410
  %call = call zeroext i16 @atmel_co(%struct.atmel_private* %6, i16 zeroext 1) #10, !dbg !15411
  %call1 = call zeroext i8 @atmel_rmem8(%struct.atmel_private* %5, i16 zeroext %call) #10, !dbg !15412
  %conv = zext i8 %call1 to i32, !dbg !15412
  store i32 %conv, i32* %status, align 4, !dbg !15413
  %7 = load i32, i32* %status, align 4, !dbg !15414
  %cmp = icmp ne i32 %7, 0, !dbg !15416
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !15417

land.lhs.true:                                    ; preds = %for.body
  %8 = load i32, i32* %status, align 4, !dbg !15418
  %cmp3 = icmp ne i32 %8, 8, !dbg !15419
  br i1 %cmp3, label %if.then, label %if.end, !dbg !15420

if.then:                                          ; preds = %land.lhs.true
  br label %for.end, !dbg !15421

if.end:                                           ; preds = %land.lhs.true, %for.body
  call void @__const_udelay(i64 85900) #10, !dbg !15422
  br label %for.inc, !dbg !15427

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !15428
  %dec = add i32 %9, -1, !dbg !15428
  store i32 %dec, i32* %i, align 4, !dbg !15428
  br label %for.cond, !dbg !15429, !llvm.loop !15430

for.end:                                          ; preds = %if.then, %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !15432
  %cmp5 = icmp eq i32 %10, 0, !dbg !15434
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !15435

if.then7:                                         ; preds = %for.end
  %11 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15436
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %11, i32 0, i32 7, !dbg !15438
  %12 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15438
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %12, i32 0, i32 0, !dbg !15439
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !15436
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.19, i64 0, i64 0), i8* %arraydecay) #11, !dbg !15440
  store i32 255, i32* %status, align 4, !dbg !15441
  br label %if.end13, !dbg !15442

if.else:                                          ; preds = %for.end
  %13 = load i32, i32* %command.addr, align 4, !dbg !15443
  %cmp9 = icmp ne i32 %13, 6, !dbg !15446
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !15447

if.then11:                                        ; preds = %if.else
  store i32 1, i32* %status, align 4, !dbg !15448
  br label %if.end12, !dbg !15449

if.end12:                                         ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then7
  %14 = load i32, i32* %status, align 4, !dbg !15450
  ret i32 %14, !dbg !15451
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_send_command(%struct.atmel_private* %priv, i32 %command, i8* %cmd, i32 %cmd_size) #0 !dbg !15452 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %command.addr = alloca i32, align 4
  %cmd.addr = alloca i8*, align 8
  %cmd_size.addr = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !15455, metadata !DIExpression()), !dbg !15456
  store i32 %command, i32* %command.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %command.addr, metadata !15457, metadata !DIExpression()), !dbg !15458
  store i8* %cmd, i8** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cmd.addr, metadata !15459, metadata !DIExpression()), !dbg !15460
  store i32 %cmd_size, i32* %cmd_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd_size.addr, metadata !15461, metadata !DIExpression()), !dbg !15462
  %0 = load i8*, i8** %cmd.addr, align 8, !dbg !15463
  %tobool = icmp ne i8* %0, null, !dbg !15463
  br i1 %tobool, label %if.then, label %if.end, !dbg !15465

if.then:                                          ; preds = %entry
  %1 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15466
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %1, i32 0, i32 7, !dbg !15467
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15467
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15468
  %call = call zeroext i16 @atmel_co(%struct.atmel_private* %3, i16 zeroext 4) #10, !dbg !15469
  %4 = load i8*, i8** %cmd.addr, align 8, !dbg !15470
  %5 = load i32, i32* %cmd_size.addr, align 4, !dbg !15471
  %conv = trunc i32 %5 to i16, !dbg !15471
  call void @atmel_copy_to_card(%struct.net_device* %2, i16 zeroext %call, i8* %4, i16 zeroext %conv) #10, !dbg !15472
  br label %if.end, !dbg !15472

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15473
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15474
  %call1 = call zeroext i16 @atmel_co(%struct.atmel_private* %7, i16 zeroext 0) #10, !dbg !15475
  %8 = load i32, i32* %command.addr, align 4, !dbg !15476
  %conv2 = trunc i32 %8 to i16, !dbg !15476
  call void @atmel_wmem8(%struct.atmel_private* %6, i16 zeroext %call1, i16 zeroext %conv2) #10, !dbg !15477
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15478
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15479
  %call3 = call zeroext i16 @atmel_co(%struct.atmel_private* %10, i16 zeroext 1) #10, !dbg !15480
  call void @atmel_wmem8(%struct.atmel_private* %9, i16 zeroext %call3, i16 zeroext 0) #10, !dbg !15481
  ret void, !dbg !15482
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @atmel_co(%struct.atmel_private* %priv, i16 zeroext %offset) #0 !dbg !15483 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %offset.addr = alloca i16, align 2
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !15484, metadata !DIExpression()), !dbg !15485
  store i16 %offset, i16* %offset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %offset.addr, metadata !15486, metadata !DIExpression()), !dbg !15487
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15488
  %host_info = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 41, !dbg !15489
  %command_pos = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %host_info, i32 0, i32 13, !dbg !15490
  %1 = load i16, i16* %command_pos, align 2, !dbg !15490
  %conv = zext i16 %1 to i32, !dbg !15488
  %2 = load i16, i16* %offset.addr, align 2, !dbg !15491
  %conv1 = zext i16 %2 to i32, !dbg !15491
  %add = add i32 %conv, %conv1, !dbg !15492
  %conv2 = trunc i32 %add to i16, !dbg !15488
  ret i16 %conv2, !dbg !15493
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atmel_set_mib(%struct.atmel_private* %priv, i8 zeroext %type, i8 zeroext %index, i8* %data, i32 %data_len) #0 !dbg !15494 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %type.addr = alloca i8, align 1
  %index.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  %data_len.addr = alloca i32, align 4
  %m = alloca %struct.get_set_mib, align 1
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !15495, metadata !DIExpression()), !dbg !15496
  store i8 %type, i8* %type.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %type.addr, metadata !15497, metadata !DIExpression()), !dbg !15498
  store i8 %index, i8* %index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %index.addr, metadata !15499, metadata !DIExpression()), !dbg !15500
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !15501, metadata !DIExpression()), !dbg !15502
  store i32 %data_len, i32* %data_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_len.addr, metadata !15503, metadata !DIExpression()), !dbg !15504
  call void @llvm.dbg.declare(metadata %struct.get_set_mib* %m, metadata !15505, metadata !DIExpression()), !dbg !15506
  %0 = load i8, i8* %type.addr, align 1, !dbg !15507
  %type1 = getelementptr inbounds %struct.get_set_mib, %struct.get_set_mib* %m, i32 0, i32 0, !dbg !15508
  store i8 %0, i8* %type1, align 1, !dbg !15509
  %1 = load i32, i32* %data_len.addr, align 4, !dbg !15510
  %conv = trunc i32 %1 to i8, !dbg !15510
  %size = getelementptr inbounds %struct.get_set_mib, %struct.get_set_mib* %m, i32 0, i32 1, !dbg !15511
  store i8 %conv, i8* %size, align 1, !dbg !15512
  %2 = load i8, i8* %index.addr, align 1, !dbg !15513
  %index2 = getelementptr inbounds %struct.get_set_mib, %struct.get_set_mib* %m, i32 0, i32 2, !dbg !15514
  store i8 %2, i8* %index2, align 1, !dbg !15515
  %3 = load i32, i32* %data_len.addr, align 4, !dbg !15516
  %cmp = icmp sgt i32 %3, 212, !dbg !15518
  br i1 %cmp, label %if.then, label %if.end, !dbg !15519

if.then:                                          ; preds = %entry
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15520
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 7, !dbg !15521
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15521
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 0, !dbg !15522
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !15520
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay) #11, !dbg !15523
  br label %if.end, !dbg !15523

if.end:                                           ; preds = %if.then, %entry
  %data4 = getelementptr inbounds %struct.get_set_mib, %struct.get_set_mib* %m, i32 0, i32 4, !dbg !15524
  %arraydecay5 = getelementptr inbounds [212 x i8], [212 x i8]* %data4, i64 0, i64 0, !dbg !15525
  %6 = load i8*, i8** %data.addr, align 8, !dbg !15526
  %7 = load i32, i32* %data_len.addr, align 4, !dbg !15527
  %conv6 = sext i32 %7 to i64, !dbg !15527
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay5, i8* align 1 %6, i64 %conv6, i1 false), !dbg !15525
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15528
  %9 = bitcast %struct.get_set_mib* %m to i8*, !dbg !15529
  %10 = load i32, i32* %data_len.addr, align 4, !dbg !15530
  %add = add i32 4, %10, !dbg !15531
  %call7 = call i32 @atmel_send_command_wait(%struct.atmel_private* %8, i32 1, i8* %9, i32 %add) #10, !dbg !15532
  ret void, !dbg !15533
}

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_wake_queue(%struct.net_device* %dev) #0 !dbg !15534 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15535, metadata !DIExpression()), !dbg !15536
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15537
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #10, !dbg !15538
  call void @netif_tx_wake_queue(%struct.netdev_queue* %call) #10, !dbg !15539
  ret void, !dbg !15540
}

; Function Attrs: noredzone
declare dso_local void @netif_tx_wake_queue(%struct.netdev_queue*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @start(%struct.atmel_private* %priv, i32 %type) #0 !dbg !15541 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %type.addr = alloca i32, align 4
  %cmd = alloca %struct.anon.139, align 1
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !15542, metadata !DIExpression()), !dbg !15543
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !15544, metadata !DIExpression()), !dbg !15545
  call void @llvm.dbg.declare(metadata %struct.anon.139* %cmd, metadata !15546, metadata !DIExpression()), !dbg !15555
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15556
  %SSID_size = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 74, !dbg !15557
  %1 = load i32, i32* %SSID_size, align 8, !dbg !15557
  %conv = trunc i32 %1 to i8, !dbg !15556
  %SSID_size1 = getelementptr inbounds %struct.anon.139, %struct.anon.139* %cmd, i32 0, i32 4, !dbg !15558
  store i8 %conv, i8* %SSID_size1, align 1, !dbg !15559
  %SSID = getelementptr inbounds %struct.anon.139, %struct.anon.139* %cmd, i32 0, i32 1, !dbg !15560
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %SSID, i64 0, i64 0, !dbg !15561
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15562
  %SSID2 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 78, !dbg !15563
  %arraydecay3 = getelementptr inbounds [32 x i8], [32 x i8]* %SSID2, i64 0, i64 0, !dbg !15561
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15564
  %SSID_size4 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %3, i32 0, i32 74, !dbg !15565
  %4 = load i32, i32* %SSID_size4, align 8, !dbg !15565
  %conv5 = sext i32 %4 to i64, !dbg !15564
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 4 %arraydecay3, i64 %conv5, i1 false), !dbg !15561
  %BSSID = getelementptr inbounds %struct.anon.139, %struct.anon.139* %cmd, i32 0, i32 0, !dbg !15566
  %arraydecay6 = getelementptr inbounds [6 x i8], [6 x i8]* %BSSID, i64 0, i64 0, !dbg !15567
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15568
  %BSSID7 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %5, i32 0, i32 77, !dbg !15569
  %arraydecay8 = getelementptr inbounds [6 x i8], [6 x i8]* %BSSID7, i64 0, i64 0, !dbg !15567
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay6, i8* align 2 %arraydecay8, i64 6, i1 false), !dbg !15567
  %6 = load i32, i32* %type.addr, align 4, !dbg !15570
  %conv9 = trunc i32 %6 to i8, !dbg !15570
  %BSS_type = getelementptr inbounds %struct.anon.139, %struct.anon.139* %cmd, i32 0, i32 2, !dbg !15571
  store i8 %conv9, i8* %BSS_type, align 1, !dbg !15572
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15573
  %channel = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %7, i32 0, i32 47, !dbg !15574
  %8 = load i32, i32* %channel, align 4, !dbg !15574
  %and = and i32 %8, 127, !dbg !15575
  %conv10 = trunc i32 %and to i8, !dbg !15576
  %channel11 = getelementptr inbounds %struct.anon.139, %struct.anon.139* %cmd, i32 0, i32 3, !dbg !15577
  store i8 %conv10, i8* %channel11, align 1, !dbg !15578
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !15579
  %10 = bitcast %struct.anon.139* %cmd to i8*, !dbg !15580
  call void @atmel_send_command(%struct.atmel_private* %9, i32 5, i8* %10, i32 44) #10, !dbg !15581
  ret void, !dbg !15582
}

; Function Attrs: noredzone
declare dso_local void @seq_printf(%struct.seq_file*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @seq_puts(%struct.seq_file*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.iw_statistics* @atmel_get_wireless_stats(%struct.net_device* %dev) #0 !dbg !15583 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15584, metadata !DIExpression()), !dbg !15585
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !15586, metadata !DIExpression()), !dbg !15587
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15588
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !15589
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !15589
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !15587
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15590
  call void @atmel_smooth_qual(%struct.atmel_private* %2) #10, !dbg !15591
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15592
  %station_state = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %3, i32 0, i32 42, !dbg !15593
  %4 = load i32, i32* %station_state, align 4, !dbg !15593
  %conv = trunc i32 %4 to i16, !dbg !15592
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15594
  %wstats = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %5, i32 0, i32 9, !dbg !15595
  %status = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats, i32 0, i32 0, !dbg !15596
  store i16 %conv, i16* %status, align 8, !dbg !15597
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15598
  %operating_mode = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 43, !dbg !15600
  %7 = load i32, i32* %operating_mode, align 8, !dbg !15600
  %cmp = icmp eq i32 %7, 2, !dbg !15601
  br i1 %cmp, label %if.then, label %if.else, !dbg !15602

if.then:                                          ; preds = %entry
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15603
  %station_state2 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %8, i32 0, i32 42, !dbg !15606
  %9 = load i32, i32* %station_state2, align 4, !dbg !15606
  %cmp3 = icmp ne i32 %9, 4, !dbg !15607
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !15608

if.then5:                                         ; preds = %if.then
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15609
  %wstats6 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 9, !dbg !15611
  %qual = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats6, i32 0, i32 1, !dbg !15612
  %qual7 = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual, i32 0, i32 0, !dbg !15613
  store i8 0, i8* %qual7, align 2, !dbg !15614
  %11 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15615
  %wstats8 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %11, i32 0, i32 9, !dbg !15616
  %qual9 = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats8, i32 0, i32 1, !dbg !15617
  %level = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual9, i32 0, i32 1, !dbg !15618
  store i8 0, i8* %level, align 1, !dbg !15619
  %12 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15620
  %wstats10 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %12, i32 0, i32 9, !dbg !15621
  %qual11 = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats10, i32 0, i32 1, !dbg !15622
  %updated = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual11, i32 0, i32 3, !dbg !15623
  store i8 48, i8* %updated, align 1, !dbg !15624
  br label %if.end, !dbg !15625

if.end:                                           ; preds = %if.then5, %if.then
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15626
  %wstats12 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %13, i32 0, i32 9, !dbg !15627
  %qual13 = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats12, i32 0, i32 1, !dbg !15628
  %noise = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual13, i32 0, i32 2, !dbg !15629
  store i8 0, i8* %noise, align 2, !dbg !15630
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15631
  %wstats14 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %14, i32 0, i32 9, !dbg !15632
  %qual15 = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats14, i32 0, i32 1, !dbg !15633
  %updated16 = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual15, i32 0, i32 3, !dbg !15634
  %15 = load i8, i8* %updated16, align 1, !dbg !15635
  %conv17 = zext i8 %15 to i32, !dbg !15635
  %or = or i32 %conv17, 64, !dbg !15635
  %conv18 = trunc i32 %or to i8, !dbg !15635
  store i8 %conv18, i8* %updated16, align 1, !dbg !15635
  br label %if.end32, !dbg !15636

if.else:                                          ; preds = %entry
  %16 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15637
  %wstats19 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %16, i32 0, i32 9, !dbg !15639
  %qual20 = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats19, i32 0, i32 1, !dbg !15640
  %qual21 = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual20, i32 0, i32 0, !dbg !15641
  store i8 0, i8* %qual21, align 2, !dbg !15642
  %17 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15643
  %wstats22 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %17, i32 0, i32 9, !dbg !15644
  %qual23 = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats22, i32 0, i32 1, !dbg !15645
  %level24 = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual23, i32 0, i32 1, !dbg !15646
  store i8 0, i8* %level24, align 1, !dbg !15647
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15648
  %wstats25 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %18, i32 0, i32 9, !dbg !15649
  %qual26 = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats25, i32 0, i32 1, !dbg !15650
  %noise27 = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual26, i32 0, i32 2, !dbg !15651
  store i8 0, i8* %noise27, align 2, !dbg !15652
  %19 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15653
  %wstats28 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %19, i32 0, i32 9, !dbg !15654
  %qual29 = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats28, i32 0, i32 1, !dbg !15655
  %updated30 = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual29, i32 0, i32 3, !dbg !15656
  store i8 112, i8* %updated30, align 1, !dbg !15657
  %20 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15658
  %wstats31 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %20, i32 0, i32 9, !dbg !15659
  %miss = getelementptr inbounds %struct.iw_statistics, %struct.iw_statistics* %wstats31, i32 0, i32 3, !dbg !15660
  %beacon = getelementptr inbounds %struct.iw_missed, %struct.iw_missed* %miss, i32 0, i32 0, !dbg !15661
  store i32 0, i32* %beacon, align 4, !dbg !15662
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.end
  %21 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15663
  %wstats33 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %21, i32 0, i32 9, !dbg !15664
  ret %struct.iw_statistics* %wstats33, !dbg !15665
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_config_commit(%struct.net_device* %dev, %struct.iw_request_info* %info, i8* %zwrq, i8* %extra) #0 !dbg !15666 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %zwrq.addr = alloca i8*, align 8
  %extra.addr = alloca i8*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15669, metadata !DIExpression()), !dbg !15670
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !15671, metadata !DIExpression()), !dbg !15672
  store i8* %zwrq, i8** %zwrq.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %zwrq.addr, metadata !15673, metadata !DIExpression()), !dbg !15674
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !15675, metadata !DIExpression()), !dbg !15676
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15677
  %call = call i32 @atmel_open(%struct.net_device* %0) #10, !dbg !15678
  ret i32 %call, !dbg !15679
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_get_name(%struct.net_device* %dev, %struct.iw_request_info* %info, i8* %cwrq, i8* %extra) #0 !dbg !15680 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %cwrq.addr = alloca i8*, align 8
  %extra.addr = alloca i8*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15683, metadata !DIExpression()), !dbg !15684
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !15685, metadata !DIExpression()), !dbg !15686
  store i8* %cwrq, i8** %cwrq.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cwrq.addr, metadata !15687, metadata !DIExpression()), !dbg !15688
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !15689, metadata !DIExpression()), !dbg !15690
  %0 = load i8*, i8** %cwrq.addr, align 8, !dbg !15691
  %call = call i8* @strcpy(i8* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49, i64 0, i64 0)) #10, !dbg !15692
  ret i32 0, !dbg !15693
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_set_freq(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.iw_freq* %fwrq, i8* %extra) #0 !dbg !15694 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %fwrq.addr = alloca %struct.iw_freq*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %rc = alloca i32, align 4
  %f = alloca i32, align 4
  %channel = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15698, metadata !DIExpression()), !dbg !15699
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !15700, metadata !DIExpression()), !dbg !15701
  store %struct.iw_freq* %fwrq, %struct.iw_freq** %fwrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_freq** %fwrq.addr, metadata !15702, metadata !DIExpression()), !dbg !15703
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !15704, metadata !DIExpression()), !dbg !15705
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !15706, metadata !DIExpression()), !dbg !15707
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15708
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !15709
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !15709
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !15707
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !15710, metadata !DIExpression()), !dbg !15711
  store i32 -115, i32* %rc, align 4, !dbg !15711
  %2 = load %struct.iw_freq*, %struct.iw_freq** %fwrq.addr, align 8, !dbg !15712
  %e = getelementptr inbounds %struct.iw_freq, %struct.iw_freq* %2, i32 0, i32 1, !dbg !15714
  %3 = load i16, i16* %e, align 4, !dbg !15714
  %conv = sext i16 %3 to i32, !dbg !15712
  %cmp = icmp eq i32 %conv, 1, !dbg !15715
  br i1 %cmp, label %if.then, label %if.end, !dbg !15716

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %f, metadata !15717, metadata !DIExpression()), !dbg !15719
  %4 = load %struct.iw_freq*, %struct.iw_freq** %fwrq.addr, align 8, !dbg !15720
  %m = getelementptr inbounds %struct.iw_freq, %struct.iw_freq* %4, i32 0, i32 0, !dbg !15721
  %5 = load i32, i32* %m, align 4, !dbg !15721
  %div = sdiv i32 %5, 100000, !dbg !15722
  store i32 %div, i32* %f, align 4, !dbg !15719
  %6 = load %struct.iw_freq*, %struct.iw_freq** %fwrq.addr, align 8, !dbg !15723
  %e2 = getelementptr inbounds %struct.iw_freq, %struct.iw_freq* %6, i32 0, i32 1, !dbg !15724
  store i16 0, i16* %e2, align 4, !dbg !15725
  %7 = load i32, i32* %f, align 4, !dbg !15726
  %call3 = call i32 @ieee80211_frequency_to_channel(i32 %7) #10, !dbg !15727
  %8 = load %struct.iw_freq*, %struct.iw_freq** %fwrq.addr, align 8, !dbg !15728
  %m4 = getelementptr inbounds %struct.iw_freq, %struct.iw_freq* %8, i32 0, i32 0, !dbg !15729
  store i32 %call3, i32* %m4, align 4, !dbg !15730
  br label %if.end, !dbg !15731

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.iw_freq*, %struct.iw_freq** %fwrq.addr, align 8, !dbg !15732
  %m5 = getelementptr inbounds %struct.iw_freq, %struct.iw_freq* %9, i32 0, i32 0, !dbg !15734
  %10 = load i32, i32* %m5, align 4, !dbg !15734
  %cmp6 = icmp slt i32 %10, 0, !dbg !15735
  br i1 %cmp6, label %if.then16, label %lor.lhs.false, !dbg !15736

lor.lhs.false:                                    ; preds = %if.end
  %11 = load %struct.iw_freq*, %struct.iw_freq** %fwrq.addr, align 8, !dbg !15737
  %m8 = getelementptr inbounds %struct.iw_freq, %struct.iw_freq* %11, i32 0, i32 0, !dbg !15738
  %12 = load i32, i32* %m8, align 4, !dbg !15738
  %cmp9 = icmp sgt i32 %12, 1000, !dbg !15739
  br i1 %cmp9, label %if.then16, label %lor.lhs.false11, !dbg !15740

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %13 = load %struct.iw_freq*, %struct.iw_freq** %fwrq.addr, align 8, !dbg !15741
  %e12 = getelementptr inbounds %struct.iw_freq, %struct.iw_freq* %13, i32 0, i32 1, !dbg !15742
  %14 = load i16, i16* %e12, align 4, !dbg !15742
  %conv13 = sext i16 %14 to i32, !dbg !15741
  %cmp14 = icmp sgt i32 %conv13, 0, !dbg !15743
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !15744

if.then16:                                        ; preds = %lor.lhs.false11, %lor.lhs.false, %if.end
  store i32 -95, i32* %rc, align 4, !dbg !15745
  br label %if.end25, !dbg !15746

if.else:                                          ; preds = %lor.lhs.false11
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !15747, metadata !DIExpression()), !dbg !15749
  %15 = load %struct.iw_freq*, %struct.iw_freq** %fwrq.addr, align 8, !dbg !15750
  %m17 = getelementptr inbounds %struct.iw_freq, %struct.iw_freq* %15, i32 0, i32 0, !dbg !15751
  %16 = load i32, i32* %m17, align 4, !dbg !15751
  store i32 %16, i32* %channel, align 4, !dbg !15749
  %17 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15752
  %18 = load i32, i32* %channel, align 4, !dbg !15754
  %call18 = call i32 @atmel_validate_channel(%struct.atmel_private* %17, i32 %18) #10, !dbg !15755
  %cmp19 = icmp eq i32 %call18, 0, !dbg !15756
  br i1 %cmp19, label %if.then21, label %if.else23, !dbg !15757

if.then21:                                        ; preds = %if.else
  %19 = load i32, i32* %channel, align 4, !dbg !15758
  %20 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15760
  %channel22 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %20, i32 0, i32 47, !dbg !15761
  store i32 %19, i32* %channel22, align 4, !dbg !15762
  br label %if.end24, !dbg !15763

if.else23:                                        ; preds = %if.else
  store i32 -22, i32* %rc, align 4, !dbg !15764
  br label %if.end24

if.end24:                                         ; preds = %if.else23, %if.then21
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then16
  %21 = load i32, i32* %rc, align 4, !dbg !15766
  ret i32 %21, !dbg !15767
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_get_freq(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.iw_freq* %fwrq, i8* %extra) #0 !dbg !15768 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %fwrq.addr = alloca %struct.iw_freq*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15769, metadata !DIExpression()), !dbg !15770
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !15771, metadata !DIExpression()), !dbg !15772
  store %struct.iw_freq* %fwrq, %struct.iw_freq** %fwrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_freq** %fwrq.addr, metadata !15773, metadata !DIExpression()), !dbg !15774
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !15775, metadata !DIExpression()), !dbg !15776
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !15777, metadata !DIExpression()), !dbg !15778
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15779
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !15780
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !15780
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !15778
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15781
  %channel = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 47, !dbg !15782
  %3 = load i32, i32* %channel, align 4, !dbg !15782
  %4 = load %struct.iw_freq*, %struct.iw_freq** %fwrq.addr, align 8, !dbg !15783
  %m = getelementptr inbounds %struct.iw_freq, %struct.iw_freq* %4, i32 0, i32 0, !dbg !15784
  store i32 %3, i32* %m, align 4, !dbg !15785
  %5 = load %struct.iw_freq*, %struct.iw_freq** %fwrq.addr, align 8, !dbg !15786
  %e = getelementptr inbounds %struct.iw_freq, %struct.iw_freq* %5, i32 0, i32 1, !dbg !15787
  store i16 0, i16* %e, align 4, !dbg !15788
  ret i32 0, !dbg !15789
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_set_mode(%struct.net_device* %dev, %struct.iw_request_info* %info, i32* %uwrq, i8* %extra) #0 !dbg !15790 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %uwrq.addr = alloca i32*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15794, metadata !DIExpression()), !dbg !15795
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !15796, metadata !DIExpression()), !dbg !15797
  store i32* %uwrq, i32** %uwrq.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %uwrq.addr, metadata !15798, metadata !DIExpression()), !dbg !15799
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !15800, metadata !DIExpression()), !dbg !15801
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !15802, metadata !DIExpression()), !dbg !15803
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15804
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !15805
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !15805
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !15803
  %2 = load i32*, i32** %uwrq.addr, align 8, !dbg !15806
  %3 = load i32, i32* %2, align 4, !dbg !15808
  %cmp = icmp ne i32 %3, 1, !dbg !15809
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !15810

land.lhs.true:                                    ; preds = %entry
  %4 = load i32*, i32** %uwrq.addr, align 8, !dbg !15811
  %5 = load i32, i32* %4, align 4, !dbg !15812
  %cmp1 = icmp ne i32 %5, 2, !dbg !15813
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15814

if.then:                                          ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !15815
  br label %return, !dbg !15815

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load i32*, i32** %uwrq.addr, align 8, !dbg !15816
  %7 = load i32, i32* %6, align 4, !dbg !15817
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15818
  %operating_mode = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %8, i32 0, i32 43, !dbg !15819
  store i32 %7, i32* %operating_mode, align 8, !dbg !15820
  store i32 -115, i32* %retval, align 4, !dbg !15821
  br label %return, !dbg !15821

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !15822
  ret i32 %9, !dbg !15822
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_get_mode(%struct.net_device* %dev, %struct.iw_request_info* %info, i32* %uwrq, i8* %extra) #0 !dbg !15823 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %uwrq.addr = alloca i32*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15824, metadata !DIExpression()), !dbg !15825
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !15826, metadata !DIExpression()), !dbg !15827
  store i32* %uwrq, i32** %uwrq.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %uwrq.addr, metadata !15828, metadata !DIExpression()), !dbg !15829
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !15830, metadata !DIExpression()), !dbg !15831
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !15832, metadata !DIExpression()), !dbg !15833
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15834
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !15835
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !15835
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !15833
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15836
  %operating_mode = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 43, !dbg !15837
  %3 = load i32, i32* %operating_mode, align 8, !dbg !15837
  %4 = load i32*, i32** %uwrq.addr, align 8, !dbg !15838
  store i32 %3, i32* %4, align 4, !dbg !15839
  ret i32 0, !dbg !15840
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_get_range(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.iw_point* %dwrq, i8* %extra) #0 !dbg !15841 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %dwrq.addr = alloca %struct.iw_point*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %range = alloca %struct.iw_range*, align 8
  %k = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15845, metadata !DIExpression()), !dbg !15846
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !15847, metadata !DIExpression()), !dbg !15848
  store %struct.iw_point* %dwrq, %struct.iw_point** %dwrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_point** %dwrq.addr, metadata !15849, metadata !DIExpression()), !dbg !15850
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !15851, metadata !DIExpression()), !dbg !15852
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !15853, metadata !DIExpression()), !dbg !15854
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15855
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !15856
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !15856
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !15854
  call void @llvm.dbg.declare(metadata %struct.iw_range** %range, metadata !15857, metadata !DIExpression()), !dbg !15858
  %2 = load i8*, i8** %extra.addr, align 8, !dbg !15859
  %3 = bitcast i8* %2 to %struct.iw_range*, !dbg !15860
  store %struct.iw_range* %3, %struct.iw_range** %range, align 8, !dbg !15858
  call void @llvm.dbg.declare(metadata i32* %k, metadata !15861, metadata !DIExpression()), !dbg !15862
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15863, metadata !DIExpression()), !dbg !15864
  call void @llvm.dbg.declare(metadata i32* %j, metadata !15865, metadata !DIExpression()), !dbg !15866
  %4 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !15867
  %length = getelementptr inbounds %struct.iw_point, %struct.iw_point* %4, i32 0, i32 1, !dbg !15868
  store i16 568, i16* %length, align 8, !dbg !15869
  %5 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15870
  %6 = bitcast %struct.iw_range* %5 to i8*, !dbg !15871
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 568, i1 false), !dbg !15871
  %7 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15872
  %min_nwid = getelementptr inbounds %struct.iw_range, %struct.iw_range* %7, i32 0, i32 1, !dbg !15873
  store i32 0, i32* %min_nwid, align 4, !dbg !15874
  %8 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15875
  %max_nwid = getelementptr inbounds %struct.iw_range, %struct.iw_range* %8, i32 0, i32 2, !dbg !15876
  store i32 0, i32* %max_nwid, align 4, !dbg !15877
  %9 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15878
  %num_channels = getelementptr inbounds %struct.iw_range, %struct.iw_range* %9, i32 0, i32 39, !dbg !15879
  store i16 0, i16* %num_channels, align 4, !dbg !15880
  store i32 0, i32* %j, align 4, !dbg !15881
  br label %for.cond, !dbg !15883

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %j, align 4, !dbg !15884
  %conv = sext i32 %10 to i64, !dbg !15884
  %cmp = icmp ult i64 %conv, 8, !dbg !15886
  br i1 %cmp, label %for.body, label %for.end, !dbg !15887

for.body:                                         ; preds = %for.cond
  %11 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !15888
  %reg_domain = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %11, i32 0, i32 48, !dbg !15890
  %12 = load i32, i32* %reg_domain, align 8, !dbg !15890
  %13 = load i32, i32* %j, align 4, !dbg !15891
  %idxprom = sext i32 %13 to i64, !dbg !15892
  %arrayidx = getelementptr [8 x %struct.anon.136], [8 x %struct.anon.136]* @channel_table, i64 0, i64 %idxprom, !dbg !15892
  %reg_domain2 = getelementptr inbounds %struct.anon.136, %struct.anon.136* %arrayidx, i32 0, i32 0, !dbg !15893
  %14 = load i32, i32* %reg_domain2, align 8, !dbg !15893
  %cmp3 = icmp eq i32 %12, %14, !dbg !15894
  br i1 %cmp3, label %if.then, label %if.end, !dbg !15895

if.then:                                          ; preds = %for.body
  %15 = load i32, i32* %j, align 4, !dbg !15896
  %idxprom5 = sext i32 %15 to i64, !dbg !15898
  %arrayidx6 = getelementptr [8 x %struct.anon.136], [8 x %struct.anon.136]* @channel_table, i64 0, i64 %idxprom5, !dbg !15898
  %max = getelementptr inbounds %struct.anon.136, %struct.anon.136* %arrayidx6, i32 0, i32 2, !dbg !15899
  %16 = load i32, i32* %max, align 8, !dbg !15899
  %17 = load i32, i32* %j, align 4, !dbg !15900
  %idxprom7 = sext i32 %17 to i64, !dbg !15901
  %arrayidx8 = getelementptr [8 x %struct.anon.136], [8 x %struct.anon.136]* @channel_table, i64 0, i64 %idxprom7, !dbg !15901
  %min = getelementptr inbounds %struct.anon.136, %struct.anon.136* %arrayidx8, i32 0, i32 1, !dbg !15902
  %18 = load i32, i32* %min, align 4, !dbg !15902
  %sub = sub i32 %16, %18, !dbg !15903
  %add = add i32 %sub, 1, !dbg !15904
  %conv9 = trunc i32 %add to i16, !dbg !15898
  %19 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15905
  %num_channels10 = getelementptr inbounds %struct.iw_range, %struct.iw_range* %19, i32 0, i32 39, !dbg !15906
  store i16 %conv9, i16* %num_channels10, align 4, !dbg !15907
  br label %for.end, !dbg !15908

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !15893

for.inc:                                          ; preds = %if.end
  %20 = load i32, i32* %j, align 4, !dbg !15909
  %inc = add i32 %20, 1, !dbg !15909
  store i32 %inc, i32* %j, align 4, !dbg !15909
  br label %for.cond, !dbg !15910, !llvm.loop !15911

for.end:                                          ; preds = %if.then, %for.cond
  %21 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15913
  %num_channels11 = getelementptr inbounds %struct.iw_range, %struct.iw_range* %21, i32 0, i32 39, !dbg !15915
  %22 = load i16, i16* %num_channels11, align 4, !dbg !15915
  %conv12 = zext i16 %22 to i32, !dbg !15913
  %cmp13 = icmp ne i32 %conv12, 0, !dbg !15916
  br i1 %cmp13, label %if.then15, label %if.end42, !dbg !15917

if.then15:                                        ; preds = %for.end
  store i32 0, i32* %k, align 4, !dbg !15918
  %23 = load i32, i32* %j, align 4, !dbg !15921
  %idxprom16 = sext i32 %23 to i64, !dbg !15922
  %arrayidx17 = getelementptr [8 x %struct.anon.136], [8 x %struct.anon.136]* @channel_table, i64 0, i64 %idxprom16, !dbg !15922
  %min18 = getelementptr inbounds %struct.anon.136, %struct.anon.136* %arrayidx17, i32 0, i32 1, !dbg !15923
  %24 = load i32, i32* %min18, align 4, !dbg !15923
  store i32 %24, i32* %i, align 4, !dbg !15924
  br label %for.cond19, !dbg !15925

for.cond19:                                       ; preds = %for.inc38, %if.then15
  %25 = load i32, i32* %i, align 4, !dbg !15926
  %26 = load i32, i32* %j, align 4, !dbg !15928
  %idxprom20 = sext i32 %26 to i64, !dbg !15929
  %arrayidx21 = getelementptr [8 x %struct.anon.136], [8 x %struct.anon.136]* @channel_table, i64 0, i64 %idxprom20, !dbg !15929
  %max22 = getelementptr inbounds %struct.anon.136, %struct.anon.136* %arrayidx21, i32 0, i32 2, !dbg !15930
  %27 = load i32, i32* %max22, align 8, !dbg !15930
  %cmp23 = icmp sle i32 %25, %27, !dbg !15931
  br i1 %cmp23, label %for.body25, label %for.end40, !dbg !15932

for.body25:                                       ; preds = %for.cond19
  %28 = load i32, i32* %i, align 4, !dbg !15933
  %conv26 = trunc i32 %28 to i8, !dbg !15933
  %29 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15935
  %freq = getelementptr inbounds %struct.iw_range, %struct.iw_range* %29, i32 0, i32 41, !dbg !15936
  %30 = load i32, i32* %k, align 4, !dbg !15937
  %idxprom27 = sext i32 %30 to i64, !dbg !15935
  %arrayidx28 = getelementptr [32 x %struct.iw_freq], [32 x %struct.iw_freq]* %freq, i64 0, i64 %idxprom27, !dbg !15935
  %i29 = getelementptr inbounds %struct.iw_freq, %struct.iw_freq* %arrayidx28, i32 0, i32 2, !dbg !15938
  store i8 %conv26, i8* %i29, align 2, !dbg !15939
  %31 = load i32, i32* %i, align 4, !dbg !15940
  %call30 = call i32 @ieee80211_channel_to_frequency(i32 %31, i32 0) #10, !dbg !15941
  %mul = mul i32 100000, %call30, !dbg !15942
  %32 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15943
  %freq31 = getelementptr inbounds %struct.iw_range, %struct.iw_range* %32, i32 0, i32 41, !dbg !15944
  %33 = load i32, i32* %k, align 4, !dbg !15945
  %idxprom32 = sext i32 %33 to i64, !dbg !15943
  %arrayidx33 = getelementptr [32 x %struct.iw_freq], [32 x %struct.iw_freq]* %freq31, i64 0, i64 %idxprom32, !dbg !15943
  %m = getelementptr inbounds %struct.iw_freq, %struct.iw_freq* %arrayidx33, i32 0, i32 0, !dbg !15946
  store i32 %mul, i32* %m, align 4, !dbg !15947
  %34 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15948
  %freq34 = getelementptr inbounds %struct.iw_range, %struct.iw_range* %34, i32 0, i32 41, !dbg !15949
  %35 = load i32, i32* %k, align 4, !dbg !15950
  %inc35 = add i32 %35, 1, !dbg !15950
  store i32 %inc35, i32* %k, align 4, !dbg !15950
  %idxprom36 = sext i32 %35 to i64, !dbg !15948
  %arrayidx37 = getelementptr [32 x %struct.iw_freq], [32 x %struct.iw_freq]* %freq34, i64 0, i64 %idxprom36, !dbg !15948
  %e = getelementptr inbounds %struct.iw_freq, %struct.iw_freq* %arrayidx37, i32 0, i32 1, !dbg !15951
  store i16 1, i16* %e, align 4, !dbg !15952
  br label %for.inc38, !dbg !15953

for.inc38:                                        ; preds = %for.body25
  %36 = load i32, i32* %i, align 4, !dbg !15954
  %inc39 = add i32 %36, 1, !dbg !15954
  store i32 %inc39, i32* %i, align 4, !dbg !15954
  br label %for.cond19, !dbg !15955, !llvm.loop !15956

for.end40:                                        ; preds = %for.cond19
  %37 = load i32, i32* %k, align 4, !dbg !15958
  %conv41 = trunc i32 %37 to i8, !dbg !15958
  %38 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15959
  %num_frequency = getelementptr inbounds %struct.iw_range, %struct.iw_range* %38, i32 0, i32 40, !dbg !15960
  store i8 %conv41, i8* %num_frequency, align 2, !dbg !15961
  br label %if.end42, !dbg !15962

if.end42:                                         ; preds = %for.end40, %for.end
  %39 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15963
  %max_qual = getelementptr inbounds %struct.iw_range, %struct.iw_range* %39, i32 0, i32 8, !dbg !15964
  %qual = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %max_qual, i32 0, i32 0, !dbg !15965
  store i8 100, i8* %qual, align 4, !dbg !15966
  %40 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15967
  %max_qual43 = getelementptr inbounds %struct.iw_range, %struct.iw_range* %40, i32 0, i32 8, !dbg !15968
  %level = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %max_qual43, i32 0, i32 1, !dbg !15969
  store i8 100, i8* %level, align 1, !dbg !15970
  %41 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15971
  %max_qual44 = getelementptr inbounds %struct.iw_range, %struct.iw_range* %41, i32 0, i32 8, !dbg !15972
  %noise = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %max_qual44, i32 0, i32 2, !dbg !15973
  store i8 0, i8* %noise, align 2, !dbg !15974
  %42 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15975
  %max_qual45 = getelementptr inbounds %struct.iw_range, %struct.iw_range* %42, i32 0, i32 8, !dbg !15976
  %updated = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %max_qual45, i32 0, i32 3, !dbg !15977
  store i8 64, i8* %updated, align 1, !dbg !15978
  %43 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15979
  %avg_qual = getelementptr inbounds %struct.iw_range, %struct.iw_range* %43, i32 0, i32 9, !dbg !15980
  %qual46 = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %avg_qual, i32 0, i32 0, !dbg !15981
  store i8 50, i8* %qual46, align 4, !dbg !15982
  %44 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15983
  %avg_qual47 = getelementptr inbounds %struct.iw_range, %struct.iw_range* %44, i32 0, i32 9, !dbg !15984
  %level48 = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %avg_qual47, i32 0, i32 1, !dbg !15985
  store i8 50, i8* %level48, align 1, !dbg !15986
  %45 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15987
  %avg_qual49 = getelementptr inbounds %struct.iw_range, %struct.iw_range* %45, i32 0, i32 9, !dbg !15988
  %noise50 = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %avg_qual49, i32 0, i32 2, !dbg !15989
  store i8 0, i8* %noise50, align 2, !dbg !15990
  %46 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15991
  %avg_qual51 = getelementptr inbounds %struct.iw_range, %struct.iw_range* %46, i32 0, i32 9, !dbg !15992
  %updated52 = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %avg_qual51, i32 0, i32 3, !dbg !15993
  store i8 64, i8* %updated52, align 1, !dbg !15994
  %47 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15995
  %sensitivity = getelementptr inbounds %struct.iw_range, %struct.iw_range* %47, i32 0, i32 7, !dbg !15996
  store i32 0, i32* %sensitivity, align 4, !dbg !15997
  %48 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !15998
  %bitrate = getelementptr inbounds %struct.iw_range, %struct.iw_range* %48, i32 0, i32 11, !dbg !15999
  %arrayidx53 = getelementptr [32 x i32], [32 x i32]* %bitrate, i64 0, i64 0, !dbg !15998
  store i32 1000000, i32* %arrayidx53, align 4, !dbg !16000
  %49 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16001
  %bitrate54 = getelementptr inbounds %struct.iw_range, %struct.iw_range* %49, i32 0, i32 11, !dbg !16002
  %arrayidx55 = getelementptr [32 x i32], [32 x i32]* %bitrate54, i64 0, i64 1, !dbg !16001
  store i32 2000000, i32* %arrayidx55, align 4, !dbg !16003
  %50 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16004
  %bitrate56 = getelementptr inbounds %struct.iw_range, %struct.iw_range* %50, i32 0, i32 11, !dbg !16005
  %arrayidx57 = getelementptr [32 x i32], [32 x i32]* %bitrate56, i64 0, i64 2, !dbg !16004
  store i32 5500000, i32* %arrayidx57, align 4, !dbg !16006
  %51 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16007
  %bitrate58 = getelementptr inbounds %struct.iw_range, %struct.iw_range* %51, i32 0, i32 11, !dbg !16008
  %arrayidx59 = getelementptr [32 x i32], [32 x i32]* %bitrate58, i64 0, i64 3, !dbg !16007
  store i32 11000000, i32* %arrayidx59, align 4, !dbg !16009
  %52 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16010
  %num_bitrates = getelementptr inbounds %struct.iw_range, %struct.iw_range* %52, i32 0, i32 10, !dbg !16011
  store i8 4, i8* %num_bitrates, align 4, !dbg !16012
  %53 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16013
  %min_rts = getelementptr inbounds %struct.iw_range, %struct.iw_range* %53, i32 0, i32 12, !dbg !16014
  store i32 0, i32* %min_rts, align 4, !dbg !16015
  %54 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16016
  %max_rts = getelementptr inbounds %struct.iw_range, %struct.iw_range* %54, i32 0, i32 13, !dbg !16017
  store i32 2347, i32* %max_rts, align 4, !dbg !16018
  %55 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16019
  %min_frag = getelementptr inbounds %struct.iw_range, %struct.iw_range* %55, i32 0, i32 14, !dbg !16020
  store i32 256, i32* %min_frag, align 4, !dbg !16021
  %56 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16022
  %max_frag = getelementptr inbounds %struct.iw_range, %struct.iw_range* %56, i32 0, i32 15, !dbg !16023
  store i32 2346, i32* %max_frag, align 4, !dbg !16024
  %57 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16025
  %encoding_size = getelementptr inbounds %struct.iw_range, %struct.iw_range* %57, i32 0, i32 23, !dbg !16026
  %arrayidx60 = getelementptr [8 x i16], [8 x i16]* %encoding_size, i64 0, i64 0, !dbg !16025
  store i16 5, i16* %arrayidx60, align 2, !dbg !16027
  %58 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16028
  %encoding_size61 = getelementptr inbounds %struct.iw_range, %struct.iw_range* %58, i32 0, i32 23, !dbg !16029
  %arrayidx62 = getelementptr [8 x i16], [8 x i16]* %encoding_size61, i64 0, i64 1, !dbg !16028
  store i16 13, i16* %arrayidx62, align 2, !dbg !16030
  %59 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16031
  %num_encoding_sizes = getelementptr inbounds %struct.iw_range, %struct.iw_range* %59, i32 0, i32 24, !dbg !16032
  store i8 2, i8* %num_encoding_sizes, align 2, !dbg !16033
  %60 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16034
  %max_encoding_tokens = getelementptr inbounds %struct.iw_range, %struct.iw_range* %60, i32 0, i32 25, !dbg !16035
  store i8 4, i8* %max_encoding_tokens, align 1, !dbg !16036
  %61 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16037
  %pmp_flags = getelementptr inbounds %struct.iw_range, %struct.iw_range* %61, i32 0, i32 20, !dbg !16038
  store i16 0, i16* %pmp_flags, align 4, !dbg !16039
  %62 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16040
  %pmt_flags = getelementptr inbounds %struct.iw_range, %struct.iw_range* %62, i32 0, i32 21, !dbg !16041
  store i16 0, i16* %pmt_flags, align 2, !dbg !16042
  %63 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16043
  %pm_capa = getelementptr inbounds %struct.iw_range, %struct.iw_range* %63, i32 0, i32 22, !dbg !16044
  store i16 0, i16* %pm_capa, align 4, !dbg !16045
  %64 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16046
  %we_version_source = getelementptr inbounds %struct.iw_range, %struct.iw_range* %64, i32 0, i32 31, !dbg !16047
  store i8 22, i8* %we_version_source, align 1, !dbg !16048
  %65 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16049
  %we_version_compiled = getelementptr inbounds %struct.iw_range, %struct.iw_range* %65, i32 0, i32 30, !dbg !16050
  store i8 22, i8* %we_version_compiled, align 4, !dbg !16051
  %66 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16052
  %retry_capa = getelementptr inbounds %struct.iw_range, %struct.iw_range* %66, i32 0, i32 32, !dbg !16053
  store i16 4096, i16* %retry_capa, align 2, !dbg !16054
  %67 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16055
  %retry_flags = getelementptr inbounds %struct.iw_range, %struct.iw_range* %67, i32 0, i32 33, !dbg !16056
  store i16 4096, i16* %retry_flags, align 4, !dbg !16057
  %68 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16058
  %r_time_flags = getelementptr inbounds %struct.iw_range, %struct.iw_range* %68, i32 0, i32 34, !dbg !16059
  store i16 0, i16* %r_time_flags, align 2, !dbg !16060
  %69 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16061
  %min_retry = getelementptr inbounds %struct.iw_range, %struct.iw_range* %69, i32 0, i32 35, !dbg !16062
  store i32 1, i32* %min_retry, align 4, !dbg !16063
  %70 = load %struct.iw_range*, %struct.iw_range** %range, align 8, !dbg !16064
  %max_retry = getelementptr inbounds %struct.iw_range, %struct.iw_range* %70, i32 0, i32 36, !dbg !16065
  store i32 65535, i32* %max_retry, align 4, !dbg !16066
  ret i32 0, !dbg !16067
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_set_wap(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.sockaddr* %awrq, i8* %extra) #0 !dbg !8850 {
entry:
  %lock.addr.i96 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i96, metadata !9668, metadata !DIExpression()), !dbg !16068
  %lock.addr.i91 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i91, metadata !9986, metadata !DIExpression()), !dbg !16083
  %flags.addr.i92 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i92, metadata !9992, metadata !DIExpression()), !dbg !16087
  %tmp.i93 = alloca i32, align 4
  %tmp8.i94 = alloca i32, align 4
  %lock.addr.i89 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i89, metadata !9986, metadata !DIExpression()), !dbg !16088
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9992, metadata !DIExpression()), !dbg !16090
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9668, metadata !DIExpression()), !dbg !16091
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %awrq.addr = alloca %struct.sockaddr*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %i = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy15 = alloca i64, align 8
  %__dummy216 = alloca i64, align 8
  %tmp19 = alloca i32, align 4
  %__dummy62 = alloca i64, align 8
  %__dummy263 = alloca i64, align 8
  %tmp66 = alloca i32, align 4
  %__dummy70 = alloca i64, align 8
  %__dummy271 = alloca i64, align 8
  %tmp74 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16098, metadata !DIExpression()), !dbg !16099
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !16100, metadata !DIExpression()), !dbg !16101
  store %struct.sockaddr* %awrq, %struct.sockaddr** %awrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %awrq.addr, metadata !16102, metadata !DIExpression()), !dbg !16103
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !16104, metadata !DIExpression()), !dbg !16105
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !16106, metadata !DIExpression()), !dbg !16107
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16108
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !16109
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !16109
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !16107
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16110, metadata !DIExpression()), !dbg !16111
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16112, metadata !DIExpression()), !dbg !16113
  %2 = load %struct.sockaddr*, %struct.sockaddr** %awrq.addr, align 8, !dbg !16114
  %sa_family = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %2, i32 0, i32 0, !dbg !16116
  %3 = load i16, i16* %sa_family, align 2, !dbg !16116
  %conv = zext i16 %3 to i32, !dbg !16114
  %cmp = icmp ne i32 %conv, 1, !dbg !16117
  br i1 %cmp, label %if.then, label %if.end, !dbg !16118

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !16119
  br label %return, !dbg !16119

if.end:                                           ; preds = %entry
  %4 = load %struct.sockaddr*, %struct.sockaddr** %awrq.addr, align 8, !dbg !16120
  %sa_data = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i32 0, i32 1, !dbg !16121
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data, i64 0, i64 0, !dbg !16120
  %call2 = call i32 @memcmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @atmel_set_wap.any, i64 0, i64 0), i8* %arraydecay, i64 6) #10, !dbg !16122
  %tobool = icmp ne i32 %call2, 0, !dbg !16122
  br i1 %tobool, label %lor.lhs.false, label %if.then7, !dbg !16123

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.sockaddr*, %struct.sockaddr** %awrq.addr, align 8, !dbg !16124
  %sa_data3 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %5, i32 0, i32 1, !dbg !16125
  %arraydecay4 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data3, i64 0, i64 0, !dbg !16124
  %call5 = call i32 @memcmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @atmel_set_wap.off, i64 0, i64 0), i8* %arraydecay4, i64 6) #10, !dbg !16126
  %tobool6 = icmp ne i32 %call5, 0, !dbg !16126
  br i1 %tobool6, label %if.end31, label %if.then7, !dbg !16127

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16128
  %management_timer = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 6, !dbg !16128
  %call8 = call i32 @del_timer(%struct.timer_list* %management_timer) #10, !dbg !16128
  br label %do.body, !dbg !16129

do.body:                                          ; preds = %if.then7
  br label %do.body9, !dbg !16130

do.body9:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16131, metadata !DIExpression()), !dbg !16133
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16134, metadata !DIExpression()), !dbg !16133
  %cmp10 = icmp eq i64* %__dummy, %__dummy2, !dbg !16133
  %conv11 = zext i1 %cmp10 to i32, !dbg !16133
  store i32 1, i32* %tmp, align 4, !dbg !16133
  %7 = load i32, i32* %tmp, align 4, !dbg !16133
  br label %do.body12, !dbg !16135

do.body12:                                        ; preds = %do.body9
  br label %do.body13, !dbg !16136

do.body13:                                        ; preds = %do.body12
  br label %do.body14, !dbg !16137

do.body14:                                        ; preds = %do.body13
  call void @llvm.dbg.declare(metadata i64* %__dummy15, metadata !16139, metadata !DIExpression()), !dbg !16142
  call void @llvm.dbg.declare(metadata i64* %__dummy216, metadata !16143, metadata !DIExpression()), !dbg !16142
  %cmp17 = icmp eq i64* %__dummy15, %__dummy216, !dbg !16142
  %conv18 = zext i1 %cmp17 to i32, !dbg !16142
  store i32 1, i32* %tmp19, align 4, !dbg !16142
  %8 = load i32, i32* %tmp19, align 4, !dbg !16142
  %call20 = call i64 @arch_local_irq_save() #10, !dbg !16144
  store i64 %call20, i64* %flags, align 8, !dbg !16144
  br label %do.end, !dbg !16144

do.end:                                           ; preds = %do.body14
  br label %do.end21, !dbg !16137

do.end21:                                         ; preds = %do.end
  br label %do.body22, !dbg !16136

do.body22:                                        ; preds = %do.end21
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !16145, !srcloc !16146
  br label %do.body23, !dbg !16145

do.body23:                                        ; preds = %do.body22
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16147
  %irqlock = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %9, i32 0, i32 10, !dbg !16147
  store %struct.spinlock* %irqlock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16148
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !16149
  %rlock.i = bitcast %union.anon.46* %11 to %struct.raw_spinlock*, !dbg !16149
  br label %do.end25, !dbg !16147

do.end25:                                         ; preds = %do.body23
  br label %do.end26, !dbg !16145

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !16136

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !16135

do.end28:                                         ; preds = %do.end27
  br label %do.end29, !dbg !16130

do.end29:                                         ; preds = %do.end28
  %12 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16150
  call void @atmel_scan(%struct.atmel_private* %12, i32 1) #10, !dbg !16151
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16152
  %irqlock30 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %13, i32 0, i32 10, !dbg !16153
  %14 = load i64, i64* %flags, align 8, !dbg !16154
  store %struct.spinlock* %irqlock30, %struct.spinlock** %lock.addr.i91, align 8
  store i64 %14, i64* %flags.addr.i92, align 8
  call void @llvm.dbg.declare(metadata !1904, metadata !10157, metadata !DIExpression()) #8, !dbg !16155
  call void @llvm.dbg.declare(metadata !1904, metadata !10161, metadata !DIExpression()) #8, !dbg !16155
  store i32 1, i32* %tmp.i93, align 4, !dbg !16155
  %15 = load i32, i32* %tmp.i93, align 4, !dbg !16155
  call void @llvm.dbg.declare(metadata !1904, metadata !10162, metadata !DIExpression()) #8, !dbg !16156
  call void @llvm.dbg.declare(metadata !1904, metadata !10168, metadata !DIExpression()) #8, !dbg !16156
  store i32 1, i32* %tmp8.i94, align 4, !dbg !16156
  %16 = load i32, i32* %tmp8.i94, align 4, !dbg !16156
  %17 = load i64, i64* %flags.addr.i92, align 8, !dbg !16157
  call void @arch_local_irq_restore(i64 %17) #12, !dbg !16157
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !16158, !srcloc !10172
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i91, align 8, !dbg !16159
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !16159
  %rlock.i95 = bitcast %union.anon.46* %19 to %struct.raw_spinlock*, !dbg !16159
  store i32 0, i32* %retval, align 4, !dbg !16160
  br label %return, !dbg !16160

if.end31:                                         ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !16161
  br label %for.cond, !dbg !16162

for.cond:                                         ; preds = %for.inc, %if.end31
  %20 = load i32, i32* %i, align 4, !dbg !16163
  %21 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16164
  %BSS_list_entries = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %21, i32 0, i32 71, !dbg !16165
  %22 = load i32, i32* %BSS_list_entries, align 4, !dbg !16165
  %cmp32 = icmp slt i32 %20, %22, !dbg !16166
  br i1 %cmp32, label %for.body, label %for.end, !dbg !16167

for.body:                                         ; preds = %for.cond
  %23 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16168
  %BSSinfo = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %23, i32 0, i32 70, !dbg !16169
  %24 = load i32, i32* %i, align 4, !dbg !16170
  %idxprom = sext i32 %24 to i64, !dbg !16168
  %arrayidx = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo, i64 0, i64 %idxprom, !dbg !16168
  %BSSID = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx, i32 0, i32 7, !dbg !16171
  %arraydecay34 = getelementptr inbounds [6 x i8], [6 x i8]* %BSSID, i64 0, i64 0, !dbg !16168
  %25 = load %struct.sockaddr*, %struct.sockaddr** %awrq.addr, align 8, !dbg !16172
  %sa_data35 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %25, i32 0, i32 1, !dbg !16173
  %arraydecay36 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data35, i64 0, i64 0, !dbg !16172
  %call37 = call i32 @memcmp(i8* %arraydecay34, i8* %arraydecay36, i64 6) #10, !dbg !16174
  %cmp38 = icmp eq i32 %call37, 0, !dbg !16175
  br i1 %cmp38, label %if.then40, label %if.end88, !dbg !16176

if.then40:                                        ; preds = %for.body
  %26 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16177
  %wep_is_on = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %26, i32 0, i32 30, !dbg !16178
  %27 = load i8, i8* %wep_is_on, align 4, !dbg !16178
  %tobool41 = icmp ne i8 %27, 0, !dbg !16177
  br i1 %tobool41, label %if.else, label %land.lhs.true, !dbg !16179

land.lhs.true:                                    ; preds = %if.then40
  %28 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16180
  %BSSinfo42 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %28, i32 0, i32 70, !dbg !16181
  %29 = load i32, i32* %i, align 4, !dbg !16182
  %idxprom43 = sext i32 %29 to i64, !dbg !16180
  %arrayidx44 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo42, i64 0, i64 %idxprom43, !dbg !16180
  %UsingWEP = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx44, i32 0, i32 3, !dbg !16183
  %30 = load i32, i32* %UsingWEP, align 4, !dbg !16183
  %tobool45 = icmp ne i32 %30, 0, !dbg !16180
  br i1 %tobool45, label %if.then46, label %if.else, !dbg !16184

if.then46:                                        ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !16185
  br label %return, !dbg !16185

if.else:                                          ; preds = %land.lhs.true, %if.then40
  %31 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16187
  %wep_is_on47 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %31, i32 0, i32 30, !dbg !16188
  %32 = load i8, i8* %wep_is_on47, align 4, !dbg !16188
  %conv48 = zext i8 %32 to i32, !dbg !16187
  %tobool49 = icmp ne i32 %conv48, 0, !dbg !16187
  br i1 %tobool49, label %land.lhs.true50, label %if.else57, !dbg !16189

land.lhs.true50:                                  ; preds = %if.else
  %33 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16190
  %BSSinfo51 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %33, i32 0, i32 70, !dbg !16191
  %34 = load i32, i32* %i, align 4, !dbg !16192
  %idxprom52 = sext i32 %34 to i64, !dbg !16190
  %arrayidx53 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo51, i64 0, i64 %idxprom52, !dbg !16190
  %UsingWEP54 = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx53, i32 0, i32 3, !dbg !16193
  %35 = load i32, i32* %UsingWEP54, align 4, !dbg !16193
  %tobool55 = icmp ne i32 %35, 0, !dbg !16190
  br i1 %tobool55, label %if.else57, label %if.then56, !dbg !16194

if.then56:                                        ; preds = %land.lhs.true50
  store i32 -22, i32* %retval, align 4, !dbg !16195
  br label %return, !dbg !16195

if.else57:                                        ; preds = %land.lhs.true50, %if.else
  %36 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16197
  %management_timer58 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %36, i32 0, i32 6, !dbg !16197
  %call59 = call i32 @del_timer(%struct.timer_list* %management_timer58) #10, !dbg !16197
  br label %do.body60, !dbg !16198

do.body60:                                        ; preds = %if.else57
  br label %do.body61, !dbg !16199

do.body61:                                        ; preds = %do.body60
  call void @llvm.dbg.declare(metadata i64* %__dummy62, metadata !16200, metadata !DIExpression()), !dbg !16202
  call void @llvm.dbg.declare(metadata i64* %__dummy263, metadata !16203, metadata !DIExpression()), !dbg !16202
  %cmp64 = icmp eq i64* %__dummy62, %__dummy263, !dbg !16202
  %conv65 = zext i1 %cmp64 to i32, !dbg !16202
  store i32 1, i32* %tmp66, align 4, !dbg !16202
  %37 = load i32, i32* %tmp66, align 4, !dbg !16202
  br label %do.body67, !dbg !16204

do.body67:                                        ; preds = %do.body61
  br label %do.body68, !dbg !16205

do.body68:                                        ; preds = %do.body67
  br label %do.body69, !dbg !16206

do.body69:                                        ; preds = %do.body68
  call void @llvm.dbg.declare(metadata i64* %__dummy70, metadata !16208, metadata !DIExpression()), !dbg !16211
  call void @llvm.dbg.declare(metadata i64* %__dummy271, metadata !16212, metadata !DIExpression()), !dbg !16211
  %cmp72 = icmp eq i64* %__dummy70, %__dummy271, !dbg !16211
  %conv73 = zext i1 %cmp72 to i32, !dbg !16211
  store i32 1, i32* %tmp74, align 4, !dbg !16211
  %38 = load i32, i32* %tmp74, align 4, !dbg !16211
  %call75 = call i64 @arch_local_irq_save() #10, !dbg !16213
  store i64 %call75, i64* %flags, align 8, !dbg !16213
  br label %do.end76, !dbg !16213

do.end76:                                         ; preds = %do.body69
  br label %do.end77, !dbg !16206

do.end77:                                         ; preds = %do.end76
  br label %do.body78, !dbg !16205

do.body78:                                        ; preds = %do.end77
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !16214, !srcloc !16215
  br label %do.body79, !dbg !16214

do.body79:                                        ; preds = %do.body78
  %39 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16216
  %irqlock80 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %39, i32 0, i32 10, !dbg !16216
  store %struct.spinlock* %irqlock80, %struct.spinlock** %lock.addr.i96, align 8
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i96, align 8, !dbg !16217
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !16218
  %rlock.i97 = bitcast %union.anon.46* %41 to %struct.raw_spinlock*, !dbg !16218
  br label %do.end82, !dbg !16216

do.end82:                                         ; preds = %do.body79
  br label %do.end83, !dbg !16214

do.end83:                                         ; preds = %do.end82
  br label %do.end84, !dbg !16205

do.end84:                                         ; preds = %do.end83
  br label %do.end85, !dbg !16204

do.end85:                                         ; preds = %do.end84
  br label %do.end86, !dbg !16199

do.end86:                                         ; preds = %do.end85
  %42 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16219
  %43 = load i32, i32* %i, align 4, !dbg !16220
  call void @atmel_join_bss(%struct.atmel_private* %42, i32 %43) #10, !dbg !16221
  %44 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16222
  %irqlock87 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %44, i32 0, i32 10, !dbg !16223
  %45 = load i64, i64* %flags, align 8, !dbg !16224
  store %struct.spinlock* %irqlock87, %struct.spinlock** %lock.addr.i89, align 8
  store i64 %45, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1904, metadata !10157, metadata !DIExpression()) #8, !dbg !16225
  call void @llvm.dbg.declare(metadata !1904, metadata !10161, metadata !DIExpression()) #8, !dbg !16225
  store i32 1, i32* %tmp.i, align 4, !dbg !16225
  %46 = load i32, i32* %tmp.i, align 4, !dbg !16225
  call void @llvm.dbg.declare(metadata !1904, metadata !10162, metadata !DIExpression()) #8, !dbg !16226
  call void @llvm.dbg.declare(metadata !1904, metadata !10168, metadata !DIExpression()) #8, !dbg !16226
  store i32 1, i32* %tmp8.i, align 4, !dbg !16226
  %47 = load i32, i32* %tmp8.i, align 4, !dbg !16226
  %48 = load i64, i64* %flags.addr.i, align 8, !dbg !16227
  call void @arch_local_irq_restore(i64 %48) #12, !dbg !16227
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !16228, !srcloc !10172
  %49 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i89, align 8, !dbg !16229
  %50 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %49, i32 0, i32 0, !dbg !16229
  %rlock.i90 = bitcast %union.anon.46* %50 to %struct.raw_spinlock*, !dbg !16229
  store i32 0, i32* %retval, align 4, !dbg !16230
  br label %return, !dbg !16230

if.end88:                                         ; preds = %for.body
  br label %for.inc, !dbg !16231

for.inc:                                          ; preds = %if.end88
  %51 = load i32, i32* %i, align 4, !dbg !16232
  %inc = add i32 %51, 1, !dbg !16232
  store i32 %inc, i32* %i, align 4, !dbg !16232
  br label %for.cond, !dbg !16233, !llvm.loop !16234

for.end:                                          ; preds = %for.cond
  store i32 -22, i32* %retval, align 4, !dbg !16236
  br label %return, !dbg !16236

return:                                           ; preds = %for.end, %do.end86, %if.then56, %if.then46, %do.end29, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !16237
  ret i32 %52, !dbg !16237
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_get_wap(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.sockaddr* %awrq, i8* %extra) #0 !dbg !16238 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %awrq.addr = alloca %struct.sockaddr*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16239, metadata !DIExpression()), !dbg !16240
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !16241, metadata !DIExpression()), !dbg !16242
  store %struct.sockaddr* %awrq, %struct.sockaddr** %awrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %awrq.addr, metadata !16243, metadata !DIExpression()), !dbg !16244
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !16245, metadata !DIExpression()), !dbg !16246
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !16247, metadata !DIExpression()), !dbg !16248
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16249
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !16250
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !16250
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !16248
  %2 = load %struct.sockaddr*, %struct.sockaddr** %awrq.addr, align 8, !dbg !16251
  %sa_data = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %2, i32 0, i32 1, !dbg !16252
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data, i64 0, i64 0, !dbg !16253
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16254
  %CurrentBSSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %3, i32 0, i32 76, !dbg !16255
  %arraydecay1 = getelementptr inbounds [6 x i8], [6 x i8]* %CurrentBSSID, i64 0, i64 0, !dbg !16253
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay, i8* align 8 %arraydecay1, i64 6, i1 false), !dbg !16253
  %4 = load %struct.sockaddr*, %struct.sockaddr** %awrq.addr, align 8, !dbg !16256
  %sa_family = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i32 0, i32 0, !dbg !16257
  store i16 1, i16* %sa_family, align 2, !dbg !16258
  ret i32 0, !dbg !16259
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_set_scan(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.iw_point* %dwrq, i8* %extra) #0 !dbg !16260 {
entry:
  %lock.addr.i32 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i32, metadata !9986, metadata !DIExpression()), !dbg !16261
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9992, metadata !DIExpression()), !dbg !16263
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9668, metadata !DIExpression()), !dbg !16264
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %dwrq.addr = alloca %struct.iw_point*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy15 = alloca i64, align 8
  %__dummy216 = alloca i64, align 8
  %tmp19 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16271, metadata !DIExpression()), !dbg !16272
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !16273, metadata !DIExpression()), !dbg !16274
  store %struct.iw_point* %dwrq, %struct.iw_point** %dwrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_point** %dwrq.addr, metadata !16275, metadata !DIExpression()), !dbg !16276
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !16277, metadata !DIExpression()), !dbg !16278
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !16279, metadata !DIExpression()), !dbg !16280
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16281
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !16282
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !16282
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !16280
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16283, metadata !DIExpression()), !dbg !16284
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16285
  %station_state = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 42, !dbg !16287
  %3 = load i32, i32* %station_state, align 4, !dbg !16287
  %cmp = icmp eq i32 %3, 6, !dbg !16288
  br i1 %cmp, label %if.then, label %if.end, !dbg !16289

if.then:                                          ; preds = %entry
  store i32 -11, i32* %retval, align 4, !dbg !16290
  br label %return, !dbg !16290

if.end:                                           ; preds = %entry
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16291
  %last_survey = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 66, !dbg !16291
  %5 = load i64, i64* %last_survey, align 8, !dbg !16291
  %add = add i64 %5, 5000, !dbg !16291
  %6 = load volatile i64, i64* @jiffies, align 8, !dbg !16291
  %sub = sub i64 %add, %6, !dbg !16291
  %cmp1 = icmp slt i64 %sub, 0, !dbg !16291
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !16293

if.then2:                                         ; preds = %if.end
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16294
  %site_survey_state = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %7, i32 0, i32 65, !dbg !16295
  store i32 0, i32* %site_survey_state, align 4, !dbg !16296
  br label %if.end3, !dbg !16294

if.end3:                                          ; preds = %if.then2, %if.end
  %8 = load volatile i64, i64* @jiffies, align 8, !dbg !16297
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16298
  %last_survey4 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %9, i32 0, i32 66, !dbg !16299
  store i64 %8, i64* %last_survey4, align 8, !dbg !16300
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16301
  %site_survey_state5 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 65, !dbg !16303
  %11 = load i32, i32* %site_survey_state5, align 4, !dbg !16303
  %cmp6 = icmp eq i32 %11, 1, !dbg !16304
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !16305

if.then7:                                         ; preds = %if.end3
  store i32 -16, i32* %retval, align 4, !dbg !16306
  br label %return, !dbg !16306

if.end8:                                          ; preds = %if.end3
  %12 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16307
  %management_timer = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %12, i32 0, i32 6, !dbg !16307
  %call9 = call i32 @del_timer(%struct.timer_list* %management_timer) #10, !dbg !16307
  br label %do.body, !dbg !16308

do.body:                                          ; preds = %if.end8
  br label %do.body10, !dbg !16309

do.body10:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16310, metadata !DIExpression()), !dbg !16312
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16313, metadata !DIExpression()), !dbg !16312
  %cmp11 = icmp eq i64* %__dummy, %__dummy2, !dbg !16312
  %conv = zext i1 %cmp11 to i32, !dbg !16312
  store i32 1, i32* %tmp, align 4, !dbg !16312
  %13 = load i32, i32* %tmp, align 4, !dbg !16312
  br label %do.body12, !dbg !16314

do.body12:                                        ; preds = %do.body10
  br label %do.body13, !dbg !16315

do.body13:                                        ; preds = %do.body12
  br label %do.body14, !dbg !16316

do.body14:                                        ; preds = %do.body13
  call void @llvm.dbg.declare(metadata i64* %__dummy15, metadata !16318, metadata !DIExpression()), !dbg !16321
  call void @llvm.dbg.declare(metadata i64* %__dummy216, metadata !16322, metadata !DIExpression()), !dbg !16321
  %cmp17 = icmp eq i64* %__dummy15, %__dummy216, !dbg !16321
  %conv18 = zext i1 %cmp17 to i32, !dbg !16321
  store i32 1, i32* %tmp19, align 4, !dbg !16321
  %14 = load i32, i32* %tmp19, align 4, !dbg !16321
  %call20 = call i64 @arch_local_irq_save() #10, !dbg !16323
  store i64 %call20, i64* %flags, align 8, !dbg !16323
  br label %do.end, !dbg !16323

do.end:                                           ; preds = %do.body14
  br label %do.end21, !dbg !16316

do.end21:                                         ; preds = %do.end
  br label %do.body22, !dbg !16315

do.body22:                                        ; preds = %do.end21
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !16324, !srcloc !16325
  br label %do.body23, !dbg !16324

do.body23:                                        ; preds = %do.body22
  %15 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16326
  %irqlock = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %15, i32 0, i32 10, !dbg !16326
  store %struct.spinlock* %irqlock, %struct.spinlock** %lock.addr.i, align 8
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16327
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !16328
  %rlock.i = bitcast %union.anon.46* %17 to %struct.raw_spinlock*, !dbg !16328
  br label %do.end25, !dbg !16326

do.end25:                                         ; preds = %do.body23
  br label %do.end26, !dbg !16324

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !16315

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !16314

do.end28:                                         ; preds = %do.end27
  br label %do.end29, !dbg !16309

do.end29:                                         ; preds = %do.end28
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16329
  %site_survey_state30 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %18, i32 0, i32 65, !dbg !16330
  store i32 1, i32* %site_survey_state30, align 4, !dbg !16331
  %19 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16332
  %fast_scan = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %19, i32 0, i32 69, !dbg !16333
  store i32 0, i32* %fast_scan, align 8, !dbg !16334
  %20 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16335
  call void @atmel_scan(%struct.atmel_private* %20, i32 0) #10, !dbg !16336
  %21 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16337
  %irqlock31 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %21, i32 0, i32 10, !dbg !16338
  %22 = load i64, i64* %flags, align 8, !dbg !16339
  store %struct.spinlock* %irqlock31, %struct.spinlock** %lock.addr.i32, align 8
  store i64 %22, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1904, metadata !10157, metadata !DIExpression()) #8, !dbg !16340
  call void @llvm.dbg.declare(metadata !1904, metadata !10161, metadata !DIExpression()) #8, !dbg !16340
  store i32 1, i32* %tmp.i, align 4, !dbg !16340
  %23 = load i32, i32* %tmp.i, align 4, !dbg !16340
  call void @llvm.dbg.declare(metadata !1904, metadata !10162, metadata !DIExpression()) #8, !dbg !16341
  call void @llvm.dbg.declare(metadata !1904, metadata !10168, metadata !DIExpression()) #8, !dbg !16341
  store i32 1, i32* %tmp8.i, align 4, !dbg !16341
  %24 = load i32, i32* %tmp8.i, align 4, !dbg !16341
  %25 = load i64, i64* %flags.addr.i, align 8, !dbg !16342
  call void @arch_local_irq_restore(i64 %25) #12, !dbg !16342
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !16343, !srcloc !10172
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i32, align 8, !dbg !16344
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !16344
  %rlock.i33 = bitcast %union.anon.46* %27 to %struct.raw_spinlock*, !dbg !16344
  store i32 0, i32* %retval, align 4, !dbg !16345
  br label %return, !dbg !16345

return:                                           ; preds = %do.end29, %if.then7, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !16346
  ret i32 %28, !dbg !16346
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_get_scan(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.iw_point* %dwrq, i8* %extra) #0 !dbg !16347 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %dwrq.addr = alloca %struct.iw_point*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %i = alloca i32, align 4
  %current_ev = alloca i8*, align 8
  %iwe = alloca %struct.iw_event, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16348, metadata !DIExpression()), !dbg !16349
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !16350, metadata !DIExpression()), !dbg !16351
  store %struct.iw_point* %dwrq, %struct.iw_point** %dwrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_point** %dwrq.addr, metadata !16352, metadata !DIExpression()), !dbg !16353
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !16354, metadata !DIExpression()), !dbg !16355
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !16356, metadata !DIExpression()), !dbg !16357
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16358
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !16359
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !16359
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !16357
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16360, metadata !DIExpression()), !dbg !16361
  call void @llvm.dbg.declare(metadata i8** %current_ev, metadata !16362, metadata !DIExpression()), !dbg !16363
  %2 = load i8*, i8** %extra.addr, align 8, !dbg !16364
  store i8* %2, i8** %current_ev, align 8, !dbg !16363
  call void @llvm.dbg.declare(metadata %struct.iw_event* %iwe, metadata !16365, metadata !DIExpression()), !dbg !16371
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16372
  %site_survey_state = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %3, i32 0, i32 65, !dbg !16374
  %4 = load i32, i32* %site_survey_state, align 4, !dbg !16374
  %cmp = icmp ne i32 %4, 2, !dbg !16375
  br i1 %cmp, label %if.then, label %if.end, !dbg !16376

if.then:                                          ; preds = %entry
  store i32 -11, i32* %retval, align 4, !dbg !16377
  br label %return, !dbg !16377

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !16378
  br label %for.cond, !dbg !16380

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !16381
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16383
  %BSS_list_entries = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 71, !dbg !16384
  %7 = load i32, i32* %BSS_list_entries, align 4, !dbg !16384
  %cmp1 = icmp slt i32 %5, %7, !dbg !16385
  br i1 %cmp1, label %for.body, label %for.end, !dbg !16386

for.body:                                         ; preds = %for.cond
  %cmd = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 1, !dbg !16387
  store i16 -29931, i16* %cmd, align 2, !dbg !16389
  %u = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 2, !dbg !16390
  %ap_addr = bitcast %union.iwreq_data* %u to %struct.sockaddr*, !dbg !16391
  %sa_family = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %ap_addr, i32 0, i32 0, !dbg !16392
  store i16 1, i16* %sa_family, align 8, !dbg !16393
  %u2 = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 2, !dbg !16394
  %ap_addr3 = bitcast %union.iwreq_data* %u2 to %struct.sockaddr*, !dbg !16395
  %sa_data = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %ap_addr3, i32 0, i32 1, !dbg !16396
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data, i64 0, i64 0, !dbg !16397
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16398
  %BSSinfo = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %8, i32 0, i32 70, !dbg !16399
  %9 = load i32, i32* %i, align 4, !dbg !16400
  %idxprom = sext i32 %9 to i64, !dbg !16398
  %arrayidx = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo, i64 0, i64 %idxprom, !dbg !16398
  %BSSID = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx, i32 0, i32 7, !dbg !16401
  %arraydecay4 = getelementptr inbounds [6 x i8], [6 x i8]* %BSSID, i64 0, i64 0, !dbg !16397
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay, i8* align 4 %arraydecay4, i64 6, i1 false), !dbg !16397
  %10 = load %struct.iw_request_info*, %struct.iw_request_info** %info.addr, align 8, !dbg !16402
  %11 = load i8*, i8** %current_ev, align 8, !dbg !16403
  %12 = load i8*, i8** %extra.addr, align 8, !dbg !16404
  %add.ptr = getelementptr i8, i8* %12, i64 4096, !dbg !16405
  %call5 = call i8* @iwe_stream_add_event(%struct.iw_request_info* %10, i8* %11, i8* %add.ptr, %struct.iw_event* %iwe, i32 24) #10, !dbg !16406
  store i8* %call5, i8** %current_ev, align 8, !dbg !16407
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16408
  %BSSinfo6 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %13, i32 0, i32 70, !dbg !16409
  %14 = load i32, i32* %i, align 4, !dbg !16410
  %idxprom7 = sext i32 %14 to i64, !dbg !16408
  %arrayidx8 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo6, i64 0, i64 %idxprom7, !dbg !16408
  %SSIDsize = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx8, i32 0, i32 1, !dbg !16411
  %15 = load i32, i32* %SSIDsize, align 4, !dbg !16411
  %conv = trunc i32 %15 to i16, !dbg !16408
  %u9 = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 2, !dbg !16412
  %data = bitcast %union.iwreq_data* %u9 to %struct.iw_point*, !dbg !16413
  %length = getelementptr inbounds %struct.iw_point, %struct.iw_point* %data, i32 0, i32 1, !dbg !16414
  store i16 %conv, i16* %length, align 8, !dbg !16415
  %u10 = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 2, !dbg !16416
  %data11 = bitcast %union.iwreq_data* %u10 to %struct.iw_point*, !dbg !16418
  %length12 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %data11, i32 0, i32 1, !dbg !16419
  %16 = load i16, i16* %length12, align 8, !dbg !16419
  %conv13 = zext i16 %16 to i32, !dbg !16420
  %cmp14 = icmp sgt i32 %conv13, 32, !dbg !16421
  br i1 %cmp14, label %if.then16, label %if.end20, !dbg !16422

if.then16:                                        ; preds = %for.body
  %u17 = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 2, !dbg !16423
  %data18 = bitcast %union.iwreq_data* %u17 to %struct.iw_point*, !dbg !16424
  %length19 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %data18, i32 0, i32 1, !dbg !16425
  store i16 32, i16* %length19, align 8, !dbg !16426
  br label %if.end20, !dbg !16427

if.end20:                                         ; preds = %if.then16, %for.body
  %cmd21 = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 1, !dbg !16428
  store i16 -29925, i16* %cmd21, align 2, !dbg !16429
  %u22 = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 2, !dbg !16430
  %data23 = bitcast %union.iwreq_data* %u22 to %struct.iw_point*, !dbg !16431
  %flags = getelementptr inbounds %struct.iw_point, %struct.iw_point* %data23, i32 0, i32 2, !dbg !16432
  store i16 1, i16* %flags, align 2, !dbg !16433
  %17 = load %struct.iw_request_info*, %struct.iw_request_info** %info.addr, align 8, !dbg !16434
  %18 = load i8*, i8** %current_ev, align 8, !dbg !16435
  %19 = load i8*, i8** %extra.addr, align 8, !dbg !16436
  %add.ptr24 = getelementptr i8, i8* %19, i64 4096, !dbg !16437
  %20 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16438
  %BSSinfo25 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %20, i32 0, i32 70, !dbg !16439
  %21 = load i32, i32* %i, align 4, !dbg !16440
  %idxprom26 = sext i32 %21 to i64, !dbg !16438
  %arrayidx27 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo25, i64 0, i64 %idxprom26, !dbg !16438
  %SSID = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx27, i32 0, i32 8, !dbg !16441
  %arraydecay28 = getelementptr inbounds [32 x i8], [32 x i8]* %SSID, i64 0, i64 0, !dbg !16438
  %call29 = call i8* @iwe_stream_add_point(%struct.iw_request_info* %17, i8* %18, i8* %add.ptr24, %struct.iw_event* %iwe, i8* %arraydecay28) #10, !dbg !16442
  store i8* %call29, i8** %current_ev, align 8, !dbg !16443
  %cmd30 = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 1, !dbg !16444
  store i16 -29945, i16* %cmd30, align 2, !dbg !16445
  %22 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16446
  %BSSinfo31 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %22, i32 0, i32 70, !dbg !16447
  %23 = load i32, i32* %i, align 4, !dbg !16448
  %idxprom32 = sext i32 %23 to i64, !dbg !16446
  %arrayidx33 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo31, i64 0, i64 %idxprom32, !dbg !16446
  %BSStype = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx33, i32 0, i32 6, !dbg !16449
  %24 = load i32, i32* %BSStype, align 4, !dbg !16449
  %u34 = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 2, !dbg !16450
  %mode = bitcast %union.iwreq_data* %u34 to i32*, !dbg !16451
  store i32 %24, i32* %mode, align 8, !dbg !16452
  %25 = load %struct.iw_request_info*, %struct.iw_request_info** %info.addr, align 8, !dbg !16453
  %26 = load i8*, i8** %current_ev, align 8, !dbg !16454
  %27 = load i8*, i8** %extra.addr, align 8, !dbg !16455
  %add.ptr35 = getelementptr i8, i8* %27, i64 4096, !dbg !16456
  %call36 = call i8* @iwe_stream_add_event(%struct.iw_request_info* %25, i8* %26, i8* %add.ptr35, %struct.iw_event* %iwe, i32 12) #10, !dbg !16457
  store i8* %call36, i8** %current_ev, align 8, !dbg !16458
  %cmd37 = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 1, !dbg !16459
  store i16 -29947, i16* %cmd37, align 2, !dbg !16460
  %28 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16461
  %BSSinfo38 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %28, i32 0, i32 70, !dbg !16462
  %29 = load i32, i32* %i, align 4, !dbg !16463
  %idxprom39 = sext i32 %29 to i64, !dbg !16461
  %arrayidx40 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo38, i64 0, i64 %idxprom39, !dbg !16461
  %channel = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx40, i32 0, i32 0, !dbg !16464
  %30 = load i32, i32* %channel, align 4, !dbg !16464
  %u41 = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 2, !dbg !16465
  %freq = bitcast %union.iwreq_data* %u41 to %struct.iw_freq*, !dbg !16466
  %m = getelementptr inbounds %struct.iw_freq, %struct.iw_freq* %freq, i32 0, i32 0, !dbg !16467
  store i32 %30, i32* %m, align 8, !dbg !16468
  %u42 = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 2, !dbg !16469
  %freq43 = bitcast %union.iwreq_data* %u42 to %struct.iw_freq*, !dbg !16470
  %e = getelementptr inbounds %struct.iw_freq, %struct.iw_freq* %freq43, i32 0, i32 1, !dbg !16471
  store i16 0, i16* %e, align 4, !dbg !16472
  %31 = load %struct.iw_request_info*, %struct.iw_request_info** %info.addr, align 8, !dbg !16473
  %32 = load i8*, i8** %current_ev, align 8, !dbg !16474
  %33 = load i8*, i8** %extra.addr, align 8, !dbg !16475
  %add.ptr44 = getelementptr i8, i8* %33, i64 4096, !dbg !16476
  %call45 = call i8* @iwe_stream_add_event(%struct.iw_request_info* %31, i8* %32, i8* %add.ptr44, %struct.iw_event* %iwe, i32 16) #10, !dbg !16477
  store i8* %call45, i8** %current_ev, align 8, !dbg !16478
  %cmd46 = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 1, !dbg !16479
  store i16 -29695, i16* %cmd46, align 2, !dbg !16480
  %34 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16481
  %BSSinfo47 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %34, i32 0, i32 70, !dbg !16482
  %35 = load i32, i32* %i, align 4, !dbg !16483
  %idxprom48 = sext i32 %35 to i64, !dbg !16481
  %arrayidx49 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo47, i64 0, i64 %idxprom48, !dbg !16481
  %RSSI = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx49, i32 0, i32 2, !dbg !16484
  %36 = load i32, i32* %RSSI, align 4, !dbg !16484
  %conv50 = trunc i32 %36 to i8, !dbg !16481
  %u51 = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 2, !dbg !16485
  %qual = bitcast %union.iwreq_data* %u51 to %struct.iw_quality*, !dbg !16486
  %level = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual, i32 0, i32 1, !dbg !16487
  store i8 %conv50, i8* %level, align 1, !dbg !16488
  %u52 = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 2, !dbg !16489
  %qual53 = bitcast %union.iwreq_data* %u52 to %struct.iw_quality*, !dbg !16490
  %level54 = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual53, i32 0, i32 1, !dbg !16491
  %37 = load i8, i8* %level54, align 1, !dbg !16491
  %u55 = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 2, !dbg !16492
  %qual56 = bitcast %union.iwreq_data* %u55 to %struct.iw_quality*, !dbg !16493
  %qual57 = getelementptr inbounds %struct.iw_quality, %struct.iw_quality* %qual56, i32 0, i32 0, !dbg !16494
  store i8 %37, i8* %qual57, align 8, !dbg !16495
  %38 = load %struct.iw_request_info*, %struct.iw_request_info** %info.addr, align 8, !dbg !16496
  %39 = load i8*, i8** %current_ev, align 8, !dbg !16497
  %40 = load i8*, i8** %extra.addr, align 8, !dbg !16498
  %add.ptr58 = getelementptr i8, i8* %40, i64 4096, !dbg !16499
  %call59 = call i8* @iwe_stream_add_event(%struct.iw_request_info* %38, i8* %39, i8* %add.ptr58, %struct.iw_event* %iwe, i32 12) #10, !dbg !16500
  store i8* %call59, i8** %current_ev, align 8, !dbg !16501
  %cmd60 = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 1, !dbg !16502
  store i16 -29909, i16* %cmd60, align 2, !dbg !16503
  %41 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16504
  %BSSinfo61 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %41, i32 0, i32 70, !dbg !16506
  %42 = load i32, i32* %i, align 4, !dbg !16507
  %idxprom62 = sext i32 %42 to i64, !dbg !16504
  %arrayidx63 = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo61, i64 0, i64 %idxprom62, !dbg !16504
  %UsingWEP = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx63, i32 0, i32 3, !dbg !16508
  %43 = load i32, i32* %UsingWEP, align 4, !dbg !16508
  %tobool = icmp ne i32 %43, 0, !dbg !16504
  br i1 %tobool, label %if.then64, label %if.else, !dbg !16509

if.then64:                                        ; preds = %if.end20
  %u65 = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 2, !dbg !16510
  %data66 = bitcast %union.iwreq_data* %u65 to %struct.iw_point*, !dbg !16511
  %flags67 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %data66, i32 0, i32 2, !dbg !16512
  store i16 2048, i16* %flags67, align 2, !dbg !16513
  br label %if.end71, !dbg !16514

if.else:                                          ; preds = %if.end20
  %u68 = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 2, !dbg !16515
  %data69 = bitcast %union.iwreq_data* %u68 to %struct.iw_point*, !dbg !16516
  %flags70 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %data69, i32 0, i32 2, !dbg !16517
  store i16 -32768, i16* %flags70, align 2, !dbg !16518
  br label %if.end71

if.end71:                                         ; preds = %if.else, %if.then64
  %u72 = getelementptr inbounds %struct.iw_event, %struct.iw_event* %iwe, i32 0, i32 2, !dbg !16519
  %data73 = bitcast %union.iwreq_data* %u72 to %struct.iw_point*, !dbg !16520
  %length74 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %data73, i32 0, i32 1, !dbg !16521
  store i16 0, i16* %length74, align 8, !dbg !16522
  %44 = load %struct.iw_request_info*, %struct.iw_request_info** %info.addr, align 8, !dbg !16523
  %45 = load i8*, i8** %current_ev, align 8, !dbg !16524
  %46 = load i8*, i8** %extra.addr, align 8, !dbg !16525
  %add.ptr75 = getelementptr i8, i8* %46, i64 4096, !dbg !16526
  %call76 = call i8* @iwe_stream_add_point(%struct.iw_request_info* %44, i8* %45, i8* %add.ptr75, %struct.iw_event* %iwe, i8* null) #10, !dbg !16527
  store i8* %call76, i8** %current_ev, align 8, !dbg !16528
  br label %for.inc, !dbg !16529

for.inc:                                          ; preds = %if.end71
  %47 = load i32, i32* %i, align 4, !dbg !16530
  %inc = add i32 %47, 1, !dbg !16530
  store i32 %inc, i32* %i, align 4, !dbg !16530
  br label %for.cond, !dbg !16531, !llvm.loop !16532

for.end:                                          ; preds = %for.cond
  %48 = load i8*, i8** %current_ev, align 8, !dbg !16534
  %49 = load i8*, i8** %extra.addr, align 8, !dbg !16535
  %sub.ptr.lhs.cast = ptrtoint i8* %48 to i64, !dbg !16536
  %sub.ptr.rhs.cast = ptrtoint i8* %49 to i64, !dbg !16536
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16536
  %conv77 = trunc i64 %sub.ptr.sub to i16, !dbg !16537
  %50 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !16538
  %length78 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %50, i32 0, i32 1, !dbg !16539
  store i16 %conv77, i16* %length78, align 8, !dbg !16540
  %51 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !16541
  %flags79 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %51, i32 0, i32 2, !dbg !16542
  store i16 0, i16* %flags79, align 2, !dbg !16543
  store i32 0, i32* %retval, align 4, !dbg !16544
  br label %return, !dbg !16544

return:                                           ; preds = %for.end, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !16545
  ret i32 %52, !dbg !16545
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_set_essid(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.iw_point* %dwrq, i8* %extra) #0 !dbg !16546 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %dwrq.addr = alloca %struct.iw_point*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %index = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16547, metadata !DIExpression()), !dbg !16548
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !16549, metadata !DIExpression()), !dbg !16550
  store %struct.iw_point* %dwrq, %struct.iw_point** %dwrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_point** %dwrq.addr, metadata !16551, metadata !DIExpression()), !dbg !16552
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !16553, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !16555, metadata !DIExpression()), !dbg !16556
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16557
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !16558
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !16558
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !16556
  %2 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !16559
  %flags = getelementptr inbounds %struct.iw_point, %struct.iw_point* %2, i32 0, i32 2, !dbg !16561
  %3 = load i16, i16* %flags, align 2, !dbg !16561
  %conv = zext i16 %3 to i32, !dbg !16559
  %cmp = icmp eq i32 %conv, 0, !dbg !16562
  br i1 %cmp, label %if.then, label %if.else, !dbg !16563

if.then:                                          ; preds = %entry
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16564
  %connect_to_any_BSS = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 73, !dbg !16566
  store i32 1, i32* %connect_to_any_BSS, align 4, !dbg !16567
  br label %if.end17, !dbg !16568

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %index, metadata !16569, metadata !DIExpression()), !dbg !16571
  %5 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !16572
  %flags2 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %5, i32 0, i32 2, !dbg !16573
  %6 = load i16, i16* %flags2, align 2, !dbg !16573
  %conv3 = zext i16 %6 to i32, !dbg !16572
  %and = and i32 %conv3, 255, !dbg !16574
  %sub = sub i32 %and, 1, !dbg !16575
  store i32 %sub, i32* %index, align 4, !dbg !16571
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16576
  %connect_to_any_BSS4 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %7, i32 0, i32 73, !dbg !16577
  store i32 0, i32* %connect_to_any_BSS4, align 4, !dbg !16578
  %8 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !16579
  %length = getelementptr inbounds %struct.iw_point, %struct.iw_point* %8, i32 0, i32 1, !dbg !16581
  %9 = load i16, i16* %length, align 8, !dbg !16581
  %conv5 = zext i16 %9 to i32, !dbg !16579
  %cmp6 = icmp sgt i32 %conv5, 32, !dbg !16582
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !16583

if.then8:                                         ; preds = %if.else
  store i32 -7, i32* %retval, align 4, !dbg !16584
  br label %return, !dbg !16584

if.end:                                           ; preds = %if.else
  %10 = load i32, i32* %index, align 4, !dbg !16585
  %cmp9 = icmp ne i32 %10, 0, !dbg !16587
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !16588

if.then11:                                        ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !16589
  br label %return, !dbg !16589

if.end12:                                         ; preds = %if.end
  %11 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16590
  %new_SSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %11, i32 0, i32 79, !dbg !16591
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %new_SSID, i64 0, i64 0, !dbg !16592
  %12 = load i8*, i8** %extra.addr, align 8, !dbg !16593
  %13 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !16594
  %length13 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %13, i32 0, i32 1, !dbg !16595
  %14 = load i16, i16* %length13, align 8, !dbg !16595
  %conv14 = zext i16 %14 to i64, !dbg !16594
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay, i8* align 1 %12, i64 %conv14, i1 false), !dbg !16592
  %15 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !16596
  %length15 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %15, i32 0, i32 1, !dbg !16597
  %16 = load i16, i16* %length15, align 8, !dbg !16597
  %conv16 = zext i16 %16 to i32, !dbg !16596
  %17 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16598
  %new_SSID_size = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %17, i32 0, i32 75, !dbg !16599
  store i32 %conv16, i32* %new_SSID_size, align 4, !dbg !16600
  br label %if.end17

if.end17:                                         ; preds = %if.end12, %if.then
  store i32 -115, i32* %retval, align 4, !dbg !16601
  br label %return, !dbg !16601

return:                                           ; preds = %if.end17, %if.then11, %if.then8
  %18 = load i32, i32* %retval, align 4, !dbg !16602
  ret i32 %18, !dbg !16602
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_get_essid(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.iw_point* %dwrq, i8* %extra) #0 !dbg !16603 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %dwrq.addr = alloca %struct.iw_point*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16604, metadata !DIExpression()), !dbg !16605
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !16606, metadata !DIExpression()), !dbg !16607
  store %struct.iw_point* %dwrq, %struct.iw_point** %dwrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_point** %dwrq.addr, metadata !16608, metadata !DIExpression()), !dbg !16609
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !16610, metadata !DIExpression()), !dbg !16611
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !16612, metadata !DIExpression()), !dbg !16613
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16614
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !16615
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !16615
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !16613
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16616
  %new_SSID_size = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 75, !dbg !16618
  %3 = load i32, i32* %new_SSID_size, align 4, !dbg !16618
  %cmp = icmp ne i32 %3, 0, !dbg !16619
  br i1 %cmp, label %if.then, label %if.else, !dbg !16620

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %extra.addr, align 8, !dbg !16621
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16623
  %new_SSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %5, i32 0, i32 79, !dbg !16624
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %new_SSID, i64 0, i64 0, !dbg !16625
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16626
  %new_SSID_size1 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 75, !dbg !16627
  %7 = load i32, i32* %new_SSID_size1, align 4, !dbg !16627
  %conv = sext i32 %7 to i64, !dbg !16626
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 4 %arraydecay, i64 %conv, i1 false), !dbg !16625
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16628
  %new_SSID_size2 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %8, i32 0, i32 75, !dbg !16629
  %9 = load i32, i32* %new_SSID_size2, align 4, !dbg !16629
  %conv3 = trunc i32 %9 to i16, !dbg !16628
  %10 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !16630
  %length = getelementptr inbounds %struct.iw_point, %struct.iw_point* %10, i32 0, i32 1, !dbg !16631
  store i16 %conv3, i16* %length, align 8, !dbg !16632
  br label %if.end, !dbg !16633

if.else:                                          ; preds = %entry
  %11 = load i8*, i8** %extra.addr, align 8, !dbg !16634
  %12 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16636
  %SSID = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %12, i32 0, i32 78, !dbg !16637
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %SSID, i64 0, i64 0, !dbg !16638
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16639
  %SSID_size = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %13, i32 0, i32 74, !dbg !16640
  %14 = load i32, i32* %SSID_size, align 8, !dbg !16640
  %conv5 = sext i32 %14 to i64, !dbg !16639
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 4 %arraydecay4, i64 %conv5, i1 false), !dbg !16638
  %15 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16641
  %SSID_size6 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %15, i32 0, i32 74, !dbg !16642
  %16 = load i32, i32* %SSID_size6, align 8, !dbg !16642
  %conv7 = trunc i32 %16 to i16, !dbg !16641
  %17 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !16643
  %length8 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %17, i32 0, i32 1, !dbg !16644
  store i16 %conv7, i16* %length8, align 8, !dbg !16645
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16646
  %connect_to_any_BSS = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %18, i32 0, i32 73, !dbg !16647
  %19 = load i32, i32* %connect_to_any_BSS, align 4, !dbg !16647
  %tobool = icmp ne i32 %19, 0, !dbg !16648
  %lnot = xor i1 %tobool, true, !dbg !16648
  %lnot.ext = zext i1 %lnot to i32, !dbg !16648
  %conv9 = trunc i32 %lnot.ext to i16, !dbg !16648
  %20 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !16649
  %flags = getelementptr inbounds %struct.iw_point, %struct.iw_point* %20, i32 0, i32 2, !dbg !16650
  store i16 %conv9, i16* %flags, align 2, !dbg !16651
  ret i32 0, !dbg !16652
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_set_rate(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.iw_param* %vwrq, i8* %extra) #0 !dbg !16653 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %vwrq.addr = alloca %struct.iw_param*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16657, metadata !DIExpression()), !dbg !16658
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !16659, metadata !DIExpression()), !dbg !16660
  store %struct.iw_param* %vwrq, %struct.iw_param** %vwrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_param** %vwrq.addr, metadata !16661, metadata !DIExpression()), !dbg !16662
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !16663, metadata !DIExpression()), !dbg !16664
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !16665, metadata !DIExpression()), !dbg !16666
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16667
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !16668
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !16668
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !16666
  %2 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16669
  %fixed = getelementptr inbounds %struct.iw_param, %struct.iw_param* %2, i32 0, i32 1, !dbg !16671
  %3 = load i8, i8* %fixed, align 4, !dbg !16671
  %conv = zext i8 %3 to i32, !dbg !16669
  %cmp = icmp eq i32 %conv, 0, !dbg !16672
  br i1 %cmp, label %if.then, label %if.else, !dbg !16673

if.then:                                          ; preds = %entry
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16674
  %tx_rate = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 50, !dbg !16676
  store i32 3, i32* %tx_rate, align 8, !dbg !16677
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16678
  %auto_tx_rate = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %5, i32 0, i32 51, !dbg !16679
  store i32 1, i32* %auto_tx_rate, align 4, !dbg !16680
  br label %if.end20, !dbg !16681

if.else:                                          ; preds = %entry
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16682
  %auto_tx_rate2 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 51, !dbg !16684
  store i32 0, i32* %auto_tx_rate2, align 4, !dbg !16685
  %7 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16686
  %value = getelementptr inbounds %struct.iw_param, %struct.iw_param* %7, i32 0, i32 0, !dbg !16688
  %8 = load i32, i32* %value, align 4, !dbg !16688
  %cmp3 = icmp slt i32 %8, 4, !dbg !16689
  br i1 %cmp3, label %land.lhs.true, label %if.else11, !dbg !16690

land.lhs.true:                                    ; preds = %if.else
  %9 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16691
  %value5 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %9, i32 0, i32 0, !dbg !16692
  %10 = load i32, i32* %value5, align 4, !dbg !16692
  %cmp6 = icmp sge i32 %10, 0, !dbg !16693
  br i1 %cmp6, label %if.then8, label %if.else11, !dbg !16694

if.then8:                                         ; preds = %land.lhs.true
  %11 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16695
  %value9 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %11, i32 0, i32 0, !dbg !16697
  %12 = load i32, i32* %value9, align 4, !dbg !16697
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16698
  %tx_rate10 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %13, i32 0, i32 50, !dbg !16699
  store i32 %12, i32* %tx_rate10, align 8, !dbg !16700
  br label %if.end, !dbg !16701

if.else11:                                        ; preds = %land.lhs.true, %if.else
  %14 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16702
  %value12 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %14, i32 0, i32 0, !dbg !16704
  %15 = load i32, i32* %value12, align 4, !dbg !16704
  switch i32 %15, label %sw.default [
    i32 1000000, label %sw.bb
    i32 2000000, label %sw.bb14
    i32 5500000, label %sw.bb16
    i32 11000000, label %sw.bb18
  ], !dbg !16705

sw.bb:                                            ; preds = %if.else11
  %16 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16706
  %tx_rate13 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %16, i32 0, i32 50, !dbg !16708
  store i32 0, i32* %tx_rate13, align 8, !dbg !16709
  br label %sw.epilog, !dbg !16710

sw.bb14:                                          ; preds = %if.else11
  %17 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16711
  %tx_rate15 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %17, i32 0, i32 50, !dbg !16712
  store i32 1, i32* %tx_rate15, align 8, !dbg !16713
  br label %sw.epilog, !dbg !16714

sw.bb16:                                          ; preds = %if.else11
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16715
  %tx_rate17 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %18, i32 0, i32 50, !dbg !16716
  store i32 2, i32* %tx_rate17, align 8, !dbg !16717
  br label %sw.epilog, !dbg !16718

sw.bb18:                                          ; preds = %if.else11
  %19 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16719
  %tx_rate19 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %19, i32 0, i32 50, !dbg !16720
  store i32 3, i32* %tx_rate19, align 8, !dbg !16721
  br label %sw.epilog, !dbg !16722

sw.default:                                       ; preds = %if.else11
  store i32 -22, i32* %retval, align 4, !dbg !16723
  br label %return, !dbg !16723

sw.epilog:                                        ; preds = %sw.bb18, %sw.bb16, %sw.bb14, %sw.bb
  br label %if.end

if.end:                                           ; preds = %sw.epilog, %if.then8
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then
  store i32 -115, i32* %retval, align 4, !dbg !16724
  br label %return, !dbg !16724

return:                                           ; preds = %if.end20, %sw.default
  %20 = load i32, i32* %retval, align 4, !dbg !16725
  ret i32 %20, !dbg !16725
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_get_rate(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.iw_param* %vwrq, i8* %extra) #0 !dbg !16726 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %vwrq.addr = alloca %struct.iw_param*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16727, metadata !DIExpression()), !dbg !16728
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !16729, metadata !DIExpression()), !dbg !16730
  store %struct.iw_param* %vwrq, %struct.iw_param** %vwrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_param** %vwrq.addr, metadata !16731, metadata !DIExpression()), !dbg !16732
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !16733, metadata !DIExpression()), !dbg !16734
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !16735, metadata !DIExpression()), !dbg !16736
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16737
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !16738
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !16738
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !16736
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16739
  %auto_tx_rate = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 51, !dbg !16741
  %3 = load i32, i32* %auto_tx_rate, align 4, !dbg !16741
  %tobool = icmp ne i32 %3, 0, !dbg !16739
  br i1 %tobool, label %if.then, label %if.else, !dbg !16742

if.then:                                          ; preds = %entry
  %4 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16743
  %fixed = getelementptr inbounds %struct.iw_param, %struct.iw_param* %4, i32 0, i32 1, !dbg !16745
  store i8 0, i8* %fixed, align 4, !dbg !16746
  %5 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16747
  %value = getelementptr inbounds %struct.iw_param, %struct.iw_param* %5, i32 0, i32 0, !dbg !16748
  store i32 11000000, i32* %value, align 4, !dbg !16749
  br label %if.end, !dbg !16750

if.else:                                          ; preds = %entry
  %6 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16751
  %fixed1 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %6, i32 0, i32 1, !dbg !16753
  store i8 1, i8* %fixed1, align 4, !dbg !16754
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16755
  %tx_rate = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %7, i32 0, i32 50, !dbg !16756
  %8 = load i32, i32* %tx_rate, align 8, !dbg !16756
  switch i32 %8, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
    i32 2, label %sw.bb5
    i32 3, label %sw.bb7
  ], !dbg !16757

sw.bb:                                            ; preds = %if.else
  %9 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16758
  %value2 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %9, i32 0, i32 0, !dbg !16760
  store i32 1000000, i32* %value2, align 4, !dbg !16761
  br label %sw.epilog, !dbg !16762

sw.bb3:                                           ; preds = %if.else
  %10 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16763
  %value4 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %10, i32 0, i32 0, !dbg !16764
  store i32 2000000, i32* %value4, align 4, !dbg !16765
  br label %sw.epilog, !dbg !16766

sw.bb5:                                           ; preds = %if.else
  %11 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16767
  %value6 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %11, i32 0, i32 0, !dbg !16768
  store i32 5500000, i32* %value6, align 4, !dbg !16769
  br label %sw.epilog, !dbg !16770

sw.bb7:                                           ; preds = %if.else
  %12 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16771
  %value8 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %12, i32 0, i32 0, !dbg !16772
  store i32 11000000, i32* %value8, align 4, !dbg !16773
  br label %sw.epilog, !dbg !16774

sw.epilog:                                        ; preds = %if.else, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb
  br label %if.end

if.end:                                           ; preds = %sw.epilog, %if.then
  ret i32 0, !dbg !16775
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_set_rts(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.iw_param* %vwrq, i8* %extra) #0 !dbg !16776 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %vwrq.addr = alloca %struct.iw_param*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %rthr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16777, metadata !DIExpression()), !dbg !16778
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !16779, metadata !DIExpression()), !dbg !16780
  store %struct.iw_param* %vwrq, %struct.iw_param** %vwrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_param** %vwrq.addr, metadata !16781, metadata !DIExpression()), !dbg !16782
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !16783, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !16785, metadata !DIExpression()), !dbg !16786
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16787
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !16788
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !16788
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !16786
  call void @llvm.dbg.declare(metadata i32* %rthr, metadata !16789, metadata !DIExpression()), !dbg !16790
  %2 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16791
  %value = getelementptr inbounds %struct.iw_param, %struct.iw_param* %2, i32 0, i32 0, !dbg !16792
  %3 = load i32, i32* %value, align 4, !dbg !16792
  store i32 %3, i32* %rthr, align 4, !dbg !16790
  %4 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16793
  %disabled = getelementptr inbounds %struct.iw_param, %struct.iw_param* %4, i32 0, i32 2, !dbg !16795
  %5 = load i8, i8* %disabled, align 1, !dbg !16795
  %tobool = icmp ne i8 %5, 0, !dbg !16793
  br i1 %tobool, label %if.then, label %if.end, !dbg !16796

if.then:                                          ; preds = %entry
  store i32 2347, i32* %rthr, align 4, !dbg !16797
  br label %if.end, !dbg !16798

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %rthr, align 4, !dbg !16799
  %cmp = icmp slt i32 %6, 0, !dbg !16801
  br i1 %cmp, label %if.then2, label %lor.lhs.false, !dbg !16802

lor.lhs.false:                                    ; preds = %if.end
  %7 = load i32, i32* %rthr, align 4, !dbg !16803
  %cmp1 = icmp sgt i32 %7, 2347, !dbg !16804
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !16805

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -22, i32* %retval, align 4, !dbg !16806
  br label %return, !dbg !16806

if.end3:                                          ; preds = %lor.lhs.false
  %8 = load i32, i32* %rthr, align 4, !dbg !16808
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16809
  %rts_threshold = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %9, i32 0, i32 52, !dbg !16810
  store i32 %8, i32* %rts_threshold, align 8, !dbg !16811
  store i32 -115, i32* %retval, align 4, !dbg !16812
  br label %return, !dbg !16812

return:                                           ; preds = %if.end3, %if.then2
  %10 = load i32, i32* %retval, align 4, !dbg !16813
  ret i32 %10, !dbg !16813
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_get_rts(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.iw_param* %vwrq, i8* %extra) #0 !dbg !16814 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %vwrq.addr = alloca %struct.iw_param*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16815, metadata !DIExpression()), !dbg !16816
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !16817, metadata !DIExpression()), !dbg !16818
  store %struct.iw_param* %vwrq, %struct.iw_param** %vwrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_param** %vwrq.addr, metadata !16819, metadata !DIExpression()), !dbg !16820
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !16821, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !16823, metadata !DIExpression()), !dbg !16824
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16825
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !16826
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !16826
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !16824
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16827
  %rts_threshold = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 52, !dbg !16828
  %3 = load i32, i32* %rts_threshold, align 8, !dbg !16828
  %4 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16829
  %value = getelementptr inbounds %struct.iw_param, %struct.iw_param* %4, i32 0, i32 0, !dbg !16830
  store i32 %3, i32* %value, align 4, !dbg !16831
  %5 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16832
  %value1 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %5, i32 0, i32 0, !dbg !16833
  %6 = load i32, i32* %value1, align 4, !dbg !16833
  %cmp = icmp sge i32 %6, 2347, !dbg !16834
  %conv = zext i1 %cmp to i32, !dbg !16834
  %conv2 = trunc i32 %conv to i8, !dbg !16835
  %7 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16836
  %disabled = getelementptr inbounds %struct.iw_param, %struct.iw_param* %7, i32 0, i32 2, !dbg !16837
  store i8 %conv2, i8* %disabled, align 1, !dbg !16838
  %8 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16839
  %fixed = getelementptr inbounds %struct.iw_param, %struct.iw_param* %8, i32 0, i32 1, !dbg !16840
  store i8 1, i8* %fixed, align 4, !dbg !16841
  ret i32 0, !dbg !16842
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_set_frag(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.iw_param* %vwrq, i8* %extra) #0 !dbg !16843 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %vwrq.addr = alloca %struct.iw_param*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %fthr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16844, metadata !DIExpression()), !dbg !16845
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !16846, metadata !DIExpression()), !dbg !16847
  store %struct.iw_param* %vwrq, %struct.iw_param** %vwrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_param** %vwrq.addr, metadata !16848, metadata !DIExpression()), !dbg !16849
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !16850, metadata !DIExpression()), !dbg !16851
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !16852, metadata !DIExpression()), !dbg !16853
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16854
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !16855
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !16855
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !16853
  call void @llvm.dbg.declare(metadata i32* %fthr, metadata !16856, metadata !DIExpression()), !dbg !16857
  %2 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16858
  %value = getelementptr inbounds %struct.iw_param, %struct.iw_param* %2, i32 0, i32 0, !dbg !16859
  %3 = load i32, i32* %value, align 4, !dbg !16859
  store i32 %3, i32* %fthr, align 4, !dbg !16857
  %4 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16860
  %disabled = getelementptr inbounds %struct.iw_param, %struct.iw_param* %4, i32 0, i32 2, !dbg !16862
  %5 = load i8, i8* %disabled, align 1, !dbg !16862
  %tobool = icmp ne i8 %5, 0, !dbg !16860
  br i1 %tobool, label %if.then, label %if.end, !dbg !16863

if.then:                                          ; preds = %entry
  store i32 2346, i32* %fthr, align 4, !dbg !16864
  br label %if.end, !dbg !16865

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %fthr, align 4, !dbg !16866
  %cmp = icmp slt i32 %6, 256, !dbg !16868
  br i1 %cmp, label %if.then2, label %lor.lhs.false, !dbg !16869

lor.lhs.false:                                    ; preds = %if.end
  %7 = load i32, i32* %fthr, align 4, !dbg !16870
  %cmp1 = icmp sgt i32 %7, 2346, !dbg !16871
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !16872

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -22, i32* %retval, align 4, !dbg !16873
  br label %return, !dbg !16873

if.end3:                                          ; preds = %lor.lhs.false
  %8 = load i32, i32* %fthr, align 4, !dbg !16875
  %and = and i32 %8, -2, !dbg !16875
  store i32 %and, i32* %fthr, align 4, !dbg !16875
  %9 = load i32, i32* %fthr, align 4, !dbg !16876
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16877
  %frag_threshold = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 53, !dbg !16878
  store i32 %9, i32* %frag_threshold, align 4, !dbg !16879
  store i32 -115, i32* %retval, align 4, !dbg !16880
  br label %return, !dbg !16880

return:                                           ; preds = %if.end3, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !16881
  ret i32 %11, !dbg !16881
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_get_frag(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.iw_param* %vwrq, i8* %extra) #0 !dbg !16882 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %vwrq.addr = alloca %struct.iw_param*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16883, metadata !DIExpression()), !dbg !16884
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !16885, metadata !DIExpression()), !dbg !16886
  store %struct.iw_param* %vwrq, %struct.iw_param** %vwrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_param** %vwrq.addr, metadata !16887, metadata !DIExpression()), !dbg !16888
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !16889, metadata !DIExpression()), !dbg !16890
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !16891, metadata !DIExpression()), !dbg !16892
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16893
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !16894
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !16894
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !16892
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16895
  %frag_threshold = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 53, !dbg !16896
  %3 = load i32, i32* %frag_threshold, align 4, !dbg !16896
  %4 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16897
  %value = getelementptr inbounds %struct.iw_param, %struct.iw_param* %4, i32 0, i32 0, !dbg !16898
  store i32 %3, i32* %value, align 4, !dbg !16899
  %5 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16900
  %value1 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %5, i32 0, i32 0, !dbg !16901
  %6 = load i32, i32* %value1, align 4, !dbg !16901
  %cmp = icmp sge i32 %6, 2346, !dbg !16902
  %conv = zext i1 %cmp to i32, !dbg !16902
  %conv2 = trunc i32 %conv to i8, !dbg !16903
  %7 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16904
  %disabled = getelementptr inbounds %struct.iw_param, %struct.iw_param* %7, i32 0, i32 2, !dbg !16905
  store i8 %conv2, i8* %disabled, align 1, !dbg !16906
  %8 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16907
  %fixed = getelementptr inbounds %struct.iw_param, %struct.iw_param* %8, i32 0, i32 1, !dbg !16908
  store i8 1, i8* %fixed, align 4, !dbg !16909
  ret i32 0, !dbg !16910
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_set_retry(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.iw_param* %vwrq, i8* %extra) #0 !dbg !16911 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %vwrq.addr = alloca %struct.iw_param*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16912, metadata !DIExpression()), !dbg !16913
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !16914, metadata !DIExpression()), !dbg !16915
  store %struct.iw_param* %vwrq, %struct.iw_param** %vwrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_param** %vwrq.addr, metadata !16916, metadata !DIExpression()), !dbg !16917
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !16918, metadata !DIExpression()), !dbg !16919
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !16920, metadata !DIExpression()), !dbg !16921
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16922
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !16923
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !16923
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !16921
  %2 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16924
  %disabled = getelementptr inbounds %struct.iw_param, %struct.iw_param* %2, i32 0, i32 2, !dbg !16926
  %3 = load i8, i8* %disabled, align 1, !dbg !16926
  %tobool = icmp ne i8 %3, 0, !dbg !16924
  br i1 %tobool, label %if.end19, label %land.lhs.true, !dbg !16927

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16928
  %flags = getelementptr inbounds %struct.iw_param, %struct.iw_param* %4, i32 0, i32 3, !dbg !16929
  %5 = load i16, i16* %flags, align 2, !dbg !16929
  %conv = zext i16 %5 to i32, !dbg !16928
  %and = and i32 %conv, 4096, !dbg !16930
  %tobool1 = icmp ne i32 %and, 0, !dbg !16930
  br i1 %tobool1, label %if.then, label %if.end19, !dbg !16931

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16932
  %flags2 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %6, i32 0, i32 3, !dbg !16935
  %7 = load i16, i16* %flags2, align 2, !dbg !16935
  %conv3 = zext i16 %7 to i32, !dbg !16932
  %and4 = and i32 %conv3, 32, !dbg !16936
  %tobool5 = icmp ne i32 %and4, 0, !dbg !16936
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !16937

if.then6:                                         ; preds = %if.then
  %8 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16938
  %value = getelementptr inbounds %struct.iw_param, %struct.iw_param* %8, i32 0, i32 0, !dbg !16939
  %9 = load i32, i32* %value, align 4, !dbg !16939
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16940
  %long_retry = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 54, !dbg !16941
  store i32 %9, i32* %long_retry, align 8, !dbg !16942
  br label %if.end18, !dbg !16940

if.else:                                          ; preds = %if.then
  %11 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16943
  %flags7 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %11, i32 0, i32 3, !dbg !16945
  %12 = load i16, i16* %flags7, align 2, !dbg !16945
  %conv8 = zext i16 %12 to i32, !dbg !16943
  %and9 = and i32 %conv8, 16, !dbg !16946
  %tobool10 = icmp ne i32 %and9, 0, !dbg !16946
  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !16947

if.then11:                                        ; preds = %if.else
  %13 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16948
  %value12 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %13, i32 0, i32 0, !dbg !16949
  %14 = load i32, i32* %value12, align 4, !dbg !16949
  %15 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16950
  %short_retry = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %15, i32 0, i32 55, !dbg !16951
  store i32 %14, i32* %short_retry, align 4, !dbg !16952
  br label %if.end, !dbg !16950

if.else13:                                        ; preds = %if.else
  %16 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16953
  %value14 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %16, i32 0, i32 0, !dbg !16955
  %17 = load i32, i32* %value14, align 4, !dbg !16955
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16956
  %long_retry15 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %18, i32 0, i32 54, !dbg !16957
  store i32 %17, i32* %long_retry15, align 8, !dbg !16958
  %19 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16959
  %value16 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %19, i32 0, i32 0, !dbg !16960
  %20 = load i32, i32* %value16, align 4, !dbg !16960
  %21 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16961
  %short_retry17 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %21, i32 0, i32 55, !dbg !16962
  store i32 %20, i32* %short_retry17, align 4, !dbg !16963
  br label %if.end

if.end:                                           ; preds = %if.else13, %if.then11
  br label %if.end18

if.end18:                                         ; preds = %if.end, %if.then6
  store i32 -115, i32* %retval, align 4, !dbg !16964
  br label %return, !dbg !16964

if.end19:                                         ; preds = %land.lhs.true, %entry
  store i32 -22, i32* %retval, align 4, !dbg !16965
  br label %return, !dbg !16965

return:                                           ; preds = %if.end19, %if.end18
  %22 = load i32, i32* %retval, align 4, !dbg !16966
  ret i32 %22, !dbg !16966
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_get_retry(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.iw_param* %vwrq, i8* %extra) #0 !dbg !16967 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %vwrq.addr = alloca %struct.iw_param*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16968, metadata !DIExpression()), !dbg !16969
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !16970, metadata !DIExpression()), !dbg !16971
  store %struct.iw_param* %vwrq, %struct.iw_param** %vwrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_param** %vwrq.addr, metadata !16972, metadata !DIExpression()), !dbg !16973
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !16974, metadata !DIExpression()), !dbg !16975
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !16976, metadata !DIExpression()), !dbg !16977
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16978
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !16979
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !16979
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !16977
  %2 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16980
  %disabled = getelementptr inbounds %struct.iw_param, %struct.iw_param* %2, i32 0, i32 2, !dbg !16981
  store i8 0, i8* %disabled, align 1, !dbg !16982
  %3 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16983
  %flags = getelementptr inbounds %struct.iw_param, %struct.iw_param* %3, i32 0, i32 3, !dbg !16985
  %4 = load i16, i16* %flags, align 2, !dbg !16985
  %conv = zext i16 %4 to i32, !dbg !16983
  %and = and i32 %conv, 32, !dbg !16986
  %tobool = icmp ne i32 %and, 0, !dbg !16986
  br i1 %tobool, label %if.then, label %if.else, !dbg !16987

if.then:                                          ; preds = %entry
  %5 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16988
  %flags1 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %5, i32 0, i32 3, !dbg !16990
  store i16 4128, i16* %flags1, align 2, !dbg !16991
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !16992
  %long_retry = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 54, !dbg !16993
  %7 = load i32, i32* %long_retry, align 8, !dbg !16993
  %8 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16994
  %value = getelementptr inbounds %struct.iw_param, %struct.iw_param* %8, i32 0, i32 0, !dbg !16995
  store i32 %7, i32* %value, align 4, !dbg !16996
  br label %if.end11, !dbg !16997

if.else:                                          ; preds = %entry
  %9 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !16998
  %flags2 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %9, i32 0, i32 3, !dbg !17000
  store i16 4096, i16* %flags2, align 2, !dbg !17001
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17002
  %short_retry = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 55, !dbg !17003
  %11 = load i32, i32* %short_retry, align 4, !dbg !17003
  %12 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !17004
  %value3 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %12, i32 0, i32 0, !dbg !17005
  store i32 %11, i32* %value3, align 4, !dbg !17006
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17007
  %long_retry4 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %13, i32 0, i32 54, !dbg !17009
  %14 = load i32, i32* %long_retry4, align 8, !dbg !17009
  %15 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17010
  %short_retry5 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %15, i32 0, i32 55, !dbg !17011
  %16 = load i32, i32* %short_retry5, align 4, !dbg !17011
  %cmp = icmp ne i32 %14, %16, !dbg !17012
  br i1 %cmp, label %if.then7, label %if.end, !dbg !17013

if.then7:                                         ; preds = %if.else
  %17 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !17014
  %flags8 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %17, i32 0, i32 3, !dbg !17015
  %18 = load i16, i16* %flags8, align 2, !dbg !17016
  %conv9 = zext i16 %18 to i32, !dbg !17016
  %or = or i32 %conv9, 16, !dbg !17016
  %conv10 = trunc i32 %or to i16, !dbg !17016
  store i16 %conv10, i16* %flags8, align 2, !dbg !17016
  br label %if.end, !dbg !17014

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  ret i32 0, !dbg !17017
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_set_encode(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.iw_point* %dwrq, i8* %extra) #0 !dbg !17018 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %dwrq.addr = alloca %struct.iw_point*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %index = alloca i32, align 4
  %current_index = alloca i32, align 4
  %index70 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17019, metadata !DIExpression()), !dbg !17020
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !17021, metadata !DIExpression()), !dbg !17022
  store %struct.iw_point* %dwrq, %struct.iw_point** %dwrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_point** %dwrq.addr, metadata !17023, metadata !DIExpression()), !dbg !17024
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !17025, metadata !DIExpression()), !dbg !17026
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !17027, metadata !DIExpression()), !dbg !17028
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17029
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !17030
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !17030
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !17028
  %2 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17031
  %length = getelementptr inbounds %struct.iw_point, %struct.iw_point* %2, i32 0, i32 1, !dbg !17033
  %3 = load i16, i16* %length, align 8, !dbg !17033
  %conv = zext i16 %3 to i32, !dbg !17031
  %cmp = icmp sgt i32 %conv, 0, !dbg !17034
  br i1 %cmp, label %if.then, label %if.else69, !dbg !17035

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %index, metadata !17036, metadata !DIExpression()), !dbg !17038
  %4 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17039
  %flags = getelementptr inbounds %struct.iw_point, %struct.iw_point* %4, i32 0, i32 2, !dbg !17040
  %5 = load i16, i16* %flags, align 2, !dbg !17040
  %conv2 = zext i16 %5 to i32, !dbg !17039
  %and = and i32 %conv2, 255, !dbg !17041
  %sub = sub i32 %and, 1, !dbg !17042
  store i32 %sub, i32* %index, align 4, !dbg !17038
  call void @llvm.dbg.declare(metadata i32* %current_index, metadata !17043, metadata !DIExpression()), !dbg !17044
  %6 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17045
  %default_key = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %6, i32 0, i32 31, !dbg !17046
  %7 = load i8, i8* %default_key, align 1, !dbg !17046
  %conv3 = zext i8 %7 to i32, !dbg !17045
  store i32 %conv3, i32* %current_index, align 4, !dbg !17044
  %8 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17047
  %length4 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %8, i32 0, i32 1, !dbg !17049
  %9 = load i16, i16* %length4, align 8, !dbg !17049
  %conv5 = zext i16 %9 to i32, !dbg !17047
  %cmp6 = icmp sgt i32 %conv5, 13, !dbg !17050
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !17051

if.then8:                                         ; preds = %if.then
  store i32 -22, i32* %retval, align 4, !dbg !17052
  br label %return, !dbg !17052

if.end:                                           ; preds = %if.then
  %10 = load i32, i32* %index, align 4, !dbg !17054
  %cmp9 = icmp slt i32 %10, 0, !dbg !17056
  br i1 %cmp9, label %if.then13, label %lor.lhs.false, !dbg !17057

lor.lhs.false:                                    ; preds = %if.end
  %11 = load i32, i32* %index, align 4, !dbg !17058
  %cmp11 = icmp sge i32 %11, 4, !dbg !17059
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !17060

if.then13:                                        ; preds = %lor.lhs.false, %if.end
  %12 = load i32, i32* %current_index, align 4, !dbg !17061
  store i32 %12, i32* %index, align 4, !dbg !17062
  br label %if.end16, !dbg !17063

if.else:                                          ; preds = %lor.lhs.false
  %13 = load i32, i32* %index, align 4, !dbg !17064
  %conv14 = trunc i32 %13 to i8, !dbg !17064
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17065
  %default_key15 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %14, i32 0, i32 31, !dbg !17066
  store i8 %conv14, i8* %default_key15, align 1, !dbg !17067
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then13
  %15 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17068
  %length17 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %15, i32 0, i32 1, !dbg !17070
  %16 = load i16, i16* %length17, align 8, !dbg !17070
  %conv18 = zext i16 %16 to i32, !dbg !17068
  %cmp19 = icmp sgt i32 %conv18, 5, !dbg !17071
  br i1 %cmp19, label %if.then21, label %if.else22, !dbg !17072

if.then21:                                        ; preds = %if.end16
  %17 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17073
  %wep_key_len = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %17, i32 0, i32 37, !dbg !17074
  %18 = load i32, i32* %index, align 4, !dbg !17075
  %idxprom = sext i32 %18 to i64, !dbg !17073
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %wep_key_len, i64 0, i64 %idxprom, !dbg !17073
  store i32 13, i32* %arrayidx, align 4, !dbg !17076
  br label %if.end36, !dbg !17073

if.else22:                                        ; preds = %if.end16
  %19 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17077
  %length23 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %19, i32 0, i32 1, !dbg !17079
  %20 = load i16, i16* %length23, align 8, !dbg !17079
  %conv24 = zext i16 %20 to i32, !dbg !17077
  %cmp25 = icmp sgt i32 %conv24, 0, !dbg !17080
  br i1 %cmp25, label %if.then27, label %if.else31, !dbg !17081

if.then27:                                        ; preds = %if.else22
  %21 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17082
  %wep_key_len28 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %21, i32 0, i32 37, !dbg !17083
  %22 = load i32, i32* %index, align 4, !dbg !17084
  %idxprom29 = sext i32 %22 to i64, !dbg !17082
  %arrayidx30 = getelementptr [4 x i32], [4 x i32]* %wep_key_len28, i64 0, i64 %idxprom29, !dbg !17082
  store i32 5, i32* %arrayidx30, align 4, !dbg !17085
  br label %if.end35, !dbg !17082

if.else31:                                        ; preds = %if.else22
  %23 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17086
  %wep_key_len32 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %23, i32 0, i32 37, !dbg !17087
  %24 = load i32, i32* %index, align 4, !dbg !17088
  %idxprom33 = sext i32 %24 to i64, !dbg !17086
  %arrayidx34 = getelementptr [4 x i32], [4 x i32]* %wep_key_len32, i64 0, i64 %idxprom33, !dbg !17086
  store i32 0, i32* %arrayidx34, align 4, !dbg !17089
  br label %if.end35

if.end35:                                         ; preds = %if.else31, %if.then27
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then21
  %25 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17090
  %flags37 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %25, i32 0, i32 2, !dbg !17092
  %26 = load i16, i16* %flags37, align 2, !dbg !17092
  %conv38 = zext i16 %26 to i32, !dbg !17090
  %and39 = and i32 %conv38, 2048, !dbg !17093
  %tobool = icmp ne i32 %and39, 0, !dbg !17093
  br i1 %tobool, label %if.end49, label %if.then40, !dbg !17094

if.then40:                                        ; preds = %if.end36
  %27 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17095
  %wep_keys = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %27, i32 0, i32 36, !dbg !17097
  %28 = load i32, i32* %index, align 4, !dbg !17098
  %idxprom41 = sext i32 %28 to i64, !dbg !17095
  %arrayidx42 = getelementptr [4 x [40 x i8]], [4 x [40 x i8]]* %wep_keys, i64 0, i64 %idxprom41, !dbg !17095
  %arraydecay = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx42, i64 0, i64 0, !dbg !17099
  call void @llvm.memset.p0i8.i64(i8* align 2 %arraydecay, i8 0, i64 13, i1 false), !dbg !17099
  %29 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17100
  %wep_keys43 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %29, i32 0, i32 36, !dbg !17101
  %30 = load i32, i32* %index, align 4, !dbg !17102
  %idxprom44 = sext i32 %30 to i64, !dbg !17100
  %arrayidx45 = getelementptr [4 x [40 x i8]], [4 x [40 x i8]]* %wep_keys43, i64 0, i64 %idxprom44, !dbg !17100
  %arraydecay46 = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx45, i64 0, i64 0, !dbg !17103
  %31 = load i8*, i8** %extra.addr, align 8, !dbg !17104
  %32 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17105
  %length47 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %32, i32 0, i32 1, !dbg !17106
  %33 = load i16, i16* %length47, align 8, !dbg !17106
  %conv48 = zext i16 %33 to i64, !dbg !17105
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay46, i8* align 1 %31, i64 %conv48, i1 false), !dbg !17103
  br label %if.end49, !dbg !17107

if.end49:                                         ; preds = %if.then40, %if.end36
  %34 = load i32, i32* %index, align 4, !dbg !17108
  %35 = load i32, i32* %current_index, align 4, !dbg !17110
  %cmp50 = icmp eq i32 %34, %35, !dbg !17111
  br i1 %cmp50, label %land.lhs.true, label %if.end68, !dbg !17112

land.lhs.true:                                    ; preds = %if.end49
  %36 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17113
  %wep_key_len52 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %36, i32 0, i32 37, !dbg !17114
  %37 = load i32, i32* %index, align 4, !dbg !17115
  %idxprom53 = sext i32 %37 to i64, !dbg !17113
  %arrayidx54 = getelementptr [4 x i32], [4 x i32]* %wep_key_len52, i64 0, i64 %idxprom53, !dbg !17113
  %38 = load i32, i32* %arrayidx54, align 4, !dbg !17113
  %cmp55 = icmp sgt i32 %38, 0, !dbg !17116
  br i1 %cmp55, label %if.then57, label %if.end68, !dbg !17117

if.then57:                                        ; preds = %land.lhs.true
  %39 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17118
  %wep_is_on = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %39, i32 0, i32 30, !dbg !17120
  store i8 1, i8* %wep_is_on, align 4, !dbg !17121
  %40 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17122
  %exclude_unencrypted = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %40, i32 0, i32 32, !dbg !17123
  store i8 1, i8* %exclude_unencrypted, align 2, !dbg !17124
  %41 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17125
  %wep_key_len58 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %41, i32 0, i32 37, !dbg !17127
  %42 = load i32, i32* %index, align 4, !dbg !17128
  %idxprom59 = sext i32 %42 to i64, !dbg !17125
  %arrayidx60 = getelementptr [4 x i32], [4 x i32]* %wep_key_len58, i64 0, i64 %idxprom59, !dbg !17125
  %43 = load i32, i32* %arrayidx60, align 4, !dbg !17125
  %cmp61 = icmp sgt i32 %43, 5, !dbg !17129
  br i1 %cmp61, label %if.then63, label %if.else64, !dbg !17130

if.then63:                                        ; preds = %if.then57
  %44 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17131
  %pairwise_cipher_suite = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %44, i32 0, i32 35, !dbg !17133
  store i8 5, i8* %pairwise_cipher_suite, align 1, !dbg !17134
  %45 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17135
  %encryption_level = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %45, i32 0, i32 33, !dbg !17136
  store i8 2, i8* %encryption_level, align 1, !dbg !17137
  br label %if.end67, !dbg !17138

if.else64:                                        ; preds = %if.then57
  %46 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17139
  %pairwise_cipher_suite65 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %46, i32 0, i32 35, !dbg !17141
  store i8 1, i8* %pairwise_cipher_suite65, align 1, !dbg !17142
  %47 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17143
  %encryption_level66 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %47, i32 0, i32 33, !dbg !17144
  store i8 1, i8* %encryption_level66, align 1, !dbg !17145
  br label %if.end67

if.end67:                                         ; preds = %if.else64, %if.then63
  br label %if.end68, !dbg !17146

if.end68:                                         ; preds = %if.end67, %land.lhs.true, %if.end49
  br label %if.end91, !dbg !17147

if.else69:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %index70, metadata !17148, metadata !DIExpression()), !dbg !17150
  %48 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17151
  %flags71 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %48, i32 0, i32 2, !dbg !17152
  %49 = load i16, i16* %flags71, align 2, !dbg !17152
  %conv72 = zext i16 %49 to i32, !dbg !17151
  %and73 = and i32 %conv72, 255, !dbg !17153
  %sub74 = sub i32 %and73, 1, !dbg !17154
  store i32 %sub74, i32* %index70, align 4, !dbg !17150
  %50 = load i32, i32* %index70, align 4, !dbg !17155
  %cmp75 = icmp sge i32 %50, 0, !dbg !17157
  br i1 %cmp75, label %land.lhs.true77, label %if.else83, !dbg !17158

land.lhs.true77:                                  ; preds = %if.else69
  %51 = load i32, i32* %index70, align 4, !dbg !17159
  %cmp78 = icmp slt i32 %51, 4, !dbg !17160
  br i1 %cmp78, label %if.then80, label %if.else83, !dbg !17161

if.then80:                                        ; preds = %land.lhs.true77
  %52 = load i32, i32* %index70, align 4, !dbg !17162
  %conv81 = trunc i32 %52 to i8, !dbg !17162
  %53 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17164
  %default_key82 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %53, i32 0, i32 31, !dbg !17165
  store i8 %conv81, i8* %default_key82, align 1, !dbg !17166
  br label %if.end90, !dbg !17167

if.else83:                                        ; preds = %land.lhs.true77, %if.else69
  %54 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17168
  %flags84 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %54, i32 0, i32 2, !dbg !17170
  %55 = load i16, i16* %flags84, align 2, !dbg !17170
  %conv85 = zext i16 %55 to i32, !dbg !17168
  %and86 = and i32 %conv85, 61440, !dbg !17171
  %tobool87 = icmp ne i32 %and86, 0, !dbg !17171
  br i1 %tobool87, label %if.end89, label %if.then88, !dbg !17172

if.then88:                                        ; preds = %if.else83
  store i32 -22, i32* %retval, align 4, !dbg !17173
  br label %return, !dbg !17173

if.end89:                                         ; preds = %if.else83
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.then80
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.end68
  %56 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17174
  %flags92 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %56, i32 0, i32 2, !dbg !17176
  %57 = load i16, i16* %flags92, align 2, !dbg !17176
  %conv93 = zext i16 %57 to i32, !dbg !17174
  %and94 = and i32 %conv93, 32768, !dbg !17177
  %tobool95 = icmp ne i32 %and94, 0, !dbg !17177
  br i1 %tobool95, label %if.then96, label %if.else100, !dbg !17178

if.then96:                                        ; preds = %if.end91
  %58 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17179
  %wep_is_on97 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %58, i32 0, i32 30, !dbg !17181
  store i8 0, i8* %wep_is_on97, align 4, !dbg !17182
  %59 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17183
  %encryption_level98 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %59, i32 0, i32 33, !dbg !17184
  store i8 0, i8* %encryption_level98, align 1, !dbg !17185
  %60 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17186
  %pairwise_cipher_suite99 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %60, i32 0, i32 35, !dbg !17187
  store i8 0, i8* %pairwise_cipher_suite99, align 1, !dbg !17188
  br label %if.end115, !dbg !17189

if.else100:                                       ; preds = %if.end91
  %61 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17190
  %wep_is_on101 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %61, i32 0, i32 30, !dbg !17192
  store i8 1, i8* %wep_is_on101, align 4, !dbg !17193
  %62 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17194
  %wep_key_len102 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %62, i32 0, i32 37, !dbg !17196
  %63 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17197
  %default_key103 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %63, i32 0, i32 31, !dbg !17198
  %64 = load i8, i8* %default_key103, align 1, !dbg !17198
  %idxprom104 = zext i8 %64 to i64, !dbg !17194
  %arrayidx105 = getelementptr [4 x i32], [4 x i32]* %wep_key_len102, i64 0, i64 %idxprom104, !dbg !17194
  %65 = load i32, i32* %arrayidx105, align 4, !dbg !17194
  %cmp106 = icmp sgt i32 %65, 5, !dbg !17199
  br i1 %cmp106, label %if.then108, label %if.else111, !dbg !17200

if.then108:                                       ; preds = %if.else100
  %66 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17201
  %pairwise_cipher_suite109 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %66, i32 0, i32 35, !dbg !17203
  store i8 5, i8* %pairwise_cipher_suite109, align 1, !dbg !17204
  %67 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17205
  %encryption_level110 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %67, i32 0, i32 33, !dbg !17206
  store i8 2, i8* %encryption_level110, align 1, !dbg !17207
  br label %if.end114, !dbg !17208

if.else111:                                       ; preds = %if.else100
  %68 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17209
  %pairwise_cipher_suite112 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %68, i32 0, i32 35, !dbg !17211
  store i8 1, i8* %pairwise_cipher_suite112, align 1, !dbg !17212
  %69 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17213
  %encryption_level113 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %69, i32 0, i32 33, !dbg !17214
  store i8 1, i8* %encryption_level113, align 1, !dbg !17215
  br label %if.end114

if.end114:                                        ; preds = %if.else111, %if.then108
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then96
  %70 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17216
  %flags116 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %70, i32 0, i32 2, !dbg !17218
  %71 = load i16, i16* %flags116, align 2, !dbg !17218
  %conv117 = zext i16 %71 to i32, !dbg !17216
  %and118 = and i32 %conv117, 16384, !dbg !17219
  %tobool119 = icmp ne i32 %and118, 0, !dbg !17219
  br i1 %tobool119, label %if.then120, label %if.end122, !dbg !17220

if.then120:                                       ; preds = %if.end115
  %72 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17221
  %exclude_unencrypted121 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %72, i32 0, i32 32, !dbg !17222
  store i8 1, i8* %exclude_unencrypted121, align 2, !dbg !17223
  br label %if.end122, !dbg !17221

if.end122:                                        ; preds = %if.then120, %if.end115
  %73 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17224
  %flags123 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %73, i32 0, i32 2, !dbg !17226
  %74 = load i16, i16* %flags123, align 2, !dbg !17226
  %conv124 = zext i16 %74 to i32, !dbg !17224
  %and125 = and i32 %conv124, 8192, !dbg !17227
  %tobool126 = icmp ne i32 %and125, 0, !dbg !17227
  br i1 %tobool126, label %if.then127, label %if.end129, !dbg !17228

if.then127:                                       ; preds = %if.end122
  %75 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17229
  %exclude_unencrypted128 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %75, i32 0, i32 32, !dbg !17230
  store i8 0, i8* %exclude_unencrypted128, align 2, !dbg !17231
  br label %if.end129, !dbg !17229

if.end129:                                        ; preds = %if.then127, %if.end122
  store i32 -115, i32* %retval, align 4, !dbg !17232
  br label %return, !dbg !17232

return:                                           ; preds = %if.end129, %if.then88, %if.then8
  %76 = load i32, i32* %retval, align 4, !dbg !17233
  ret i32 %76, !dbg !17233
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_get_encode(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.iw_point* %dwrq, i8* %extra) #0 !dbg !17234 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %dwrq.addr = alloca %struct.iw_point*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %index = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17235, metadata !DIExpression()), !dbg !17236
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !17237, metadata !DIExpression()), !dbg !17238
  store %struct.iw_point* %dwrq, %struct.iw_point** %dwrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_point** %dwrq.addr, metadata !17239, metadata !DIExpression()), !dbg !17240
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !17241, metadata !DIExpression()), !dbg !17242
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !17243, metadata !DIExpression()), !dbg !17244
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17245
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !17246
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !17246
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !17244
  call void @llvm.dbg.declare(metadata i32* %index, metadata !17247, metadata !DIExpression()), !dbg !17248
  %2 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17249
  %flags = getelementptr inbounds %struct.iw_point, %struct.iw_point* %2, i32 0, i32 2, !dbg !17250
  %3 = load i16, i16* %flags, align 2, !dbg !17250
  %conv = zext i16 %3 to i32, !dbg !17249
  %and = and i32 %conv, 255, !dbg !17251
  %sub = sub i32 %and, 1, !dbg !17252
  store i32 %sub, i32* %index, align 4, !dbg !17248
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17253
  %wep_is_on = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 30, !dbg !17255
  %5 = load i8, i8* %wep_is_on, align 4, !dbg !17255
  %tobool = icmp ne i8 %5, 0, !dbg !17253
  br i1 %tobool, label %if.else, label %if.then, !dbg !17256

if.then:                                          ; preds = %entry
  %6 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17257
  %flags1 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %6, i32 0, i32 2, !dbg !17258
  store i16 -32768, i16* %flags1, align 2, !dbg !17259
  br label %if.end7, !dbg !17257

if.else:                                          ; preds = %entry
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17260
  %exclude_unencrypted = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %7, i32 0, i32 32, !dbg !17263
  %8 = load i8, i8* %exclude_unencrypted, align 2, !dbg !17263
  %tobool2 = icmp ne i8 %8, 0, !dbg !17260
  br i1 %tobool2, label %if.then3, label %if.else5, !dbg !17264

if.then3:                                         ; preds = %if.else
  %9 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17265
  %flags4 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %9, i32 0, i32 2, !dbg !17266
  store i16 16384, i16* %flags4, align 2, !dbg !17267
  br label %if.end, !dbg !17265

if.else5:                                         ; preds = %if.else
  %10 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17268
  %flags6 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %10, i32 0, i32 2, !dbg !17269
  store i16 8192, i16* %flags6, align 2, !dbg !17270
  br label %if.end

if.end:                                           ; preds = %if.else5, %if.then3
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  %11 = load i32, i32* %index, align 4, !dbg !17271
  %cmp = icmp slt i32 %11, 0, !dbg !17273
  br i1 %cmp, label %if.then11, label %lor.lhs.false, !dbg !17274

lor.lhs.false:                                    ; preds = %if.end7
  %12 = load i32, i32* %index, align 4, !dbg !17275
  %cmp9 = icmp sge i32 %12, 4, !dbg !17276
  br i1 %cmp9, label %if.then11, label %if.end13, !dbg !17277

if.then11:                                        ; preds = %lor.lhs.false, %if.end7
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17278
  %default_key = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %13, i32 0, i32 31, !dbg !17279
  %14 = load i8, i8* %default_key, align 1, !dbg !17279
  %conv12 = zext i8 %14 to i32, !dbg !17278
  store i32 %conv12, i32* %index, align 4, !dbg !17280
  br label %if.end13, !dbg !17281

if.end13:                                         ; preds = %if.then11, %lor.lhs.false
  %15 = load i32, i32* %index, align 4, !dbg !17282
  %add = add i32 %15, 1, !dbg !17283
  %16 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17284
  %flags14 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %16, i32 0, i32 2, !dbg !17285
  %17 = load i16, i16* %flags14, align 2, !dbg !17286
  %conv15 = zext i16 %17 to i32, !dbg !17286
  %or = or i32 %conv15, %add, !dbg !17286
  %conv16 = trunc i32 %or to i16, !dbg !17286
  store i16 %conv16, i16* %flags14, align 2, !dbg !17286
  %18 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17287
  %wep_key_len = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %18, i32 0, i32 37, !dbg !17288
  %19 = load i32, i32* %index, align 4, !dbg !17289
  %idxprom = sext i32 %19 to i64, !dbg !17287
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %wep_key_len, i64 0, i64 %idxprom, !dbg !17287
  %20 = load i32, i32* %arrayidx, align 4, !dbg !17287
  %conv17 = trunc i32 %20 to i16, !dbg !17287
  %21 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17290
  %length = getelementptr inbounds %struct.iw_point, %struct.iw_point* %21, i32 0, i32 1, !dbg !17291
  store i16 %conv17, i16* %length, align 8, !dbg !17292
  %22 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17293
  %length18 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %22, i32 0, i32 1, !dbg !17295
  %23 = load i16, i16* %length18, align 8, !dbg !17295
  %conv19 = zext i16 %23 to i32, !dbg !17293
  %cmp20 = icmp sgt i32 %conv19, 16, !dbg !17296
  br i1 %cmp20, label %if.then22, label %if.else24, !dbg !17297

if.then22:                                        ; preds = %if.end13
  %24 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17298
  %length23 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %24, i32 0, i32 1, !dbg !17300
  store i16 0, i16* %length23, align 8, !dbg !17301
  br label %if.end29, !dbg !17302

if.else24:                                        ; preds = %if.end13
  %25 = load i8*, i8** %extra.addr, align 8, !dbg !17303
  call void @llvm.memset.p0i8.i64(i8* align 1 %25, i8 0, i64 16, i1 false), !dbg !17305
  %26 = load i8*, i8** %extra.addr, align 8, !dbg !17306
  %27 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17307
  %wep_keys = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %27, i32 0, i32 36, !dbg !17308
  %28 = load i32, i32* %index, align 4, !dbg !17309
  %idxprom25 = sext i32 %28 to i64, !dbg !17307
  %arrayidx26 = getelementptr [4 x [40 x i8]], [4 x [40 x i8]]* %wep_keys, i64 0, i64 %idxprom25, !dbg !17307
  %arraydecay = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx26, i64 0, i64 0, !dbg !17310
  %29 = load %struct.iw_point*, %struct.iw_point** %dwrq.addr, align 8, !dbg !17311
  %length27 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %29, i32 0, i32 1, !dbg !17312
  %30 = load i16, i16* %length27, align 8, !dbg !17312
  %conv28 = zext i16 %30 to i64, !dbg !17311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 2 %arraydecay, i64 %conv28, i1 false), !dbg !17310
  br label %if.end29

if.end29:                                         ; preds = %if.else24, %if.then22
  ret i32 0, !dbg !17313
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_set_power(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.iw_param* %vwrq, i8* %extra) #0 !dbg !17314 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %vwrq.addr = alloca %struct.iw_param*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17315, metadata !DIExpression()), !dbg !17316
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !17317, metadata !DIExpression()), !dbg !17318
  store %struct.iw_param* %vwrq, %struct.iw_param** %vwrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_param** %vwrq.addr, metadata !17319, metadata !DIExpression()), !dbg !17320
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !17321, metadata !DIExpression()), !dbg !17322
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !17323, metadata !DIExpression()), !dbg !17324
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17325
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !17326
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !17326
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !17324
  %2 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !17327
  %disabled = getelementptr inbounds %struct.iw_param, %struct.iw_param* %2, i32 0, i32 2, !dbg !17328
  %3 = load i8, i8* %disabled, align 1, !dbg !17328
  %conv = zext i8 %3 to i32, !dbg !17327
  %tobool = icmp ne i32 %conv, 0, !dbg !17327
  %4 = zext i1 %tobool to i64, !dbg !17327
  %cond = select i1 %tobool, i32 0, i32 1, !dbg !17327
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17329
  %power_mode = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %5, i32 0, i32 44, !dbg !17330
  store i32 %cond, i32* %power_mode, align 4, !dbg !17331
  ret i32 -115, !dbg !17332
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_get_power(%struct.net_device* %dev, %struct.iw_request_info* %info, %struct.iw_param* %vwrq, i8* %extra) #0 !dbg !17333 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %vwrq.addr = alloca %struct.iw_param*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17334, metadata !DIExpression()), !dbg !17335
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !17336, metadata !DIExpression()), !dbg !17337
  store %struct.iw_param* %vwrq, %struct.iw_param** %vwrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_param** %vwrq.addr, metadata !17338, metadata !DIExpression()), !dbg !17339
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !17340, metadata !DIExpression()), !dbg !17341
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !17342, metadata !DIExpression()), !dbg !17343
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17344
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !17345
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !17345
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !17343
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17346
  %power_mode = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 44, !dbg !17347
  %3 = load i32, i32* %power_mode, align 4, !dbg !17347
  %tobool = icmp ne i32 %3, 0, !dbg !17346
  %4 = zext i1 %tobool to i64, !dbg !17346
  %cond = select i1 %tobool, i32 0, i32 1, !dbg !17346
  %conv = trunc i32 %cond to i8, !dbg !17346
  %5 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !17348
  %disabled = getelementptr inbounds %struct.iw_param, %struct.iw_param* %5, i32 0, i32 2, !dbg !17349
  store i8 %conv, i8* %disabled, align 1, !dbg !17350
  %6 = load %struct.iw_param*, %struct.iw_param** %vwrq.addr, align 8, !dbg !17351
  %flags = getelementptr inbounds %struct.iw_param, %struct.iw_param* %6, i32 0, i32 3, !dbg !17352
  store i16 0, i16* %flags, align 2, !dbg !17353
  ret i32 0, !dbg !17354
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_set_auth(%struct.net_device* %dev, %struct.iw_request_info* %info, %union.iwreq_data* %wrqu, i8* %extra) #0 !dbg !17355 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %wrqu.addr = alloca %union.iwreq_data*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %param = alloca %struct.iw_param*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17356, metadata !DIExpression()), !dbg !17357
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !17358, metadata !DIExpression()), !dbg !17359
  store %union.iwreq_data* %wrqu, %union.iwreq_data** %wrqu.addr, align 8
  call void @llvm.dbg.declare(metadata %union.iwreq_data** %wrqu.addr, metadata !17360, metadata !DIExpression()), !dbg !17361
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !17362, metadata !DIExpression()), !dbg !17363
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !17364, metadata !DIExpression()), !dbg !17365
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17366
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !17367
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !17367
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !17365
  call void @llvm.dbg.declare(metadata %struct.iw_param** %param, metadata !17368, metadata !DIExpression()), !dbg !17369
  %2 = load %union.iwreq_data*, %union.iwreq_data** %wrqu.addr, align 8, !dbg !17370
  %param1 = bitcast %union.iwreq_data* %2 to %struct.iw_param*, !dbg !17371
  store %struct.iw_param* %param1, %struct.iw_param** %param, align 8, !dbg !17369
  %3 = load %struct.iw_param*, %struct.iw_param** %param, align 8, !dbg !17372
  %flags = getelementptr inbounds %struct.iw_param, %struct.iw_param* %3, i32 0, i32 3, !dbg !17373
  %4 = load i16, i16* %flags, align 2, !dbg !17373
  %conv = zext i16 %4 to i32, !dbg !17372
  %and = and i32 %conv, 4095, !dbg !17374
  switch i32 %and, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 8, label %sw.bb
    i32 10, label %sw.bb
    i32 5, label %sw.bb2
    i32 6, label %sw.bb4
    i32 7, label %sw.bb16
  ], !dbg !17375

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog, !dbg !17376

sw.bb2:                                           ; preds = %entry
  %5 = load %struct.iw_param*, %struct.iw_param** %param, align 8, !dbg !17378
  %value = getelementptr inbounds %struct.iw_param, %struct.iw_param* %5, i32 0, i32 0, !dbg !17379
  %6 = load i32, i32* %value, align 4, !dbg !17379
  %tobool = icmp ne i32 %6, 0, !dbg !17378
  %7 = zext i1 %tobool to i64, !dbg !17378
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !17378
  %conv3 = trunc i32 %cond to i8, !dbg !17378
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17380
  %exclude_unencrypted = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %8, i32 0, i32 32, !dbg !17381
  store i8 %conv3, i8* %exclude_unencrypted, align 2, !dbg !17382
  br label %sw.epilog, !dbg !17383

sw.bb4:                                           ; preds = %entry
  %9 = load %struct.iw_param*, %struct.iw_param** %param, align 8, !dbg !17384
  %value5 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %9, i32 0, i32 0, !dbg !17387
  %10 = load i32, i32* %value5, align 4, !dbg !17387
  %and6 = and i32 %10, 2, !dbg !17388
  %tobool7 = icmp ne i32 %and6, 0, !dbg !17388
  br i1 %tobool7, label %if.then, label %if.else, !dbg !17389

if.then:                                          ; preds = %sw.bb4
  %11 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17390
  %exclude_unencrypted8 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %11, i32 0, i32 32, !dbg !17392
  store i8 1, i8* %exclude_unencrypted8, align 2, !dbg !17393
  br label %if.end15, !dbg !17394

if.else:                                          ; preds = %sw.bb4
  %12 = load %struct.iw_param*, %struct.iw_param** %param, align 8, !dbg !17395
  %value9 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %12, i32 0, i32 0, !dbg !17397
  %13 = load i32, i32* %value9, align 4, !dbg !17397
  %and10 = and i32 %13, 1, !dbg !17398
  %tobool11 = icmp ne i32 %and10, 0, !dbg !17398
  br i1 %tobool11, label %if.then12, label %if.else14, !dbg !17399

if.then12:                                        ; preds = %if.else
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17400
  %exclude_unencrypted13 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %14, i32 0, i32 32, !dbg !17402
  store i8 0, i8* %exclude_unencrypted13, align 2, !dbg !17403
  br label %if.end, !dbg !17404

if.else14:                                        ; preds = %if.else
  store i32 -22, i32* %retval, align 4, !dbg !17405
  br label %return, !dbg !17405

if.end:                                           ; preds = %if.then12
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  br label %sw.epilog, !dbg !17406

sw.bb16:                                          ; preds = %entry
  %15 = load %struct.iw_param*, %struct.iw_param** %param, align 8, !dbg !17407
  %value17 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %15, i32 0, i32 0, !dbg !17409
  %16 = load i32, i32* %value17, align 4, !dbg !17409
  %cmp = icmp sgt i32 %16, 0, !dbg !17410
  br i1 %cmp, label %if.then19, label %if.end20, !dbg !17411

if.then19:                                        ; preds = %sw.bb16
  store i32 -95, i32* %retval, align 4, !dbg !17412
  br label %return, !dbg !17412

if.end20:                                         ; preds = %sw.bb16
  br label %sw.epilog, !dbg !17413

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !17414
  br label %return, !dbg !17414

sw.epilog:                                        ; preds = %if.end20, %if.end15, %sw.bb2, %sw.bb
  store i32 -115, i32* %retval, align 4, !dbg !17415
  br label %return, !dbg !17415

return:                                           ; preds = %sw.epilog, %sw.default, %if.then19, %if.else14
  %17 = load i32, i32* %retval, align 4, !dbg !17416
  ret i32 %17, !dbg !17416
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_get_auth(%struct.net_device* %dev, %struct.iw_request_info* %info, %union.iwreq_data* %wrqu, i8* %extra) #0 !dbg !17417 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %wrqu.addr = alloca %union.iwreq_data*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %param = alloca %struct.iw_param*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17418, metadata !DIExpression()), !dbg !17419
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !17420, metadata !DIExpression()), !dbg !17421
  store %union.iwreq_data* %wrqu, %union.iwreq_data** %wrqu.addr, align 8
  call void @llvm.dbg.declare(metadata %union.iwreq_data** %wrqu.addr, metadata !17422, metadata !DIExpression()), !dbg !17423
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !17424, metadata !DIExpression()), !dbg !17425
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !17426, metadata !DIExpression()), !dbg !17427
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17428
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !17429
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !17429
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !17427
  call void @llvm.dbg.declare(metadata %struct.iw_param** %param, metadata !17430, metadata !DIExpression()), !dbg !17431
  %2 = load %union.iwreq_data*, %union.iwreq_data** %wrqu.addr, align 8, !dbg !17432
  %param1 = bitcast %union.iwreq_data* %2 to %struct.iw_param*, !dbg !17433
  store %struct.iw_param* %param1, %struct.iw_param** %param, align 8, !dbg !17431
  %3 = load %struct.iw_param*, %struct.iw_param** %param, align 8, !dbg !17434
  %flags = getelementptr inbounds %struct.iw_param, %struct.iw_param* %3, i32 0, i32 3, !dbg !17435
  %4 = load i16, i16* %flags, align 2, !dbg !17435
  %conv = zext i16 %4 to i32, !dbg !17434
  %and = and i32 %conv, 4095, !dbg !17436
  switch i32 %and, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb3
    i32 7, label %sw.bb9
  ], !dbg !17437

sw.bb:                                            ; preds = %entry
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17438
  %exclude_unencrypted = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %5, i32 0, i32 32, !dbg !17440
  %6 = load i8, i8* %exclude_unencrypted, align 2, !dbg !17440
  %conv2 = zext i8 %6 to i32, !dbg !17438
  %7 = load %struct.iw_param*, %struct.iw_param** %param, align 8, !dbg !17441
  %value = getelementptr inbounds %struct.iw_param, %struct.iw_param* %7, i32 0, i32 0, !dbg !17442
  store i32 %conv2, i32* %value, align 4, !dbg !17443
  br label %sw.epilog, !dbg !17444

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17445
  %exclude_unencrypted4 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %8, i32 0, i32 32, !dbg !17447
  %9 = load i8, i8* %exclude_unencrypted4, align 2, !dbg !17447
  %conv5 = zext i8 %9 to i32, !dbg !17445
  %cmp = icmp eq i32 %conv5, 1, !dbg !17448
  br i1 %cmp, label %if.then, label %if.else, !dbg !17449

if.then:                                          ; preds = %sw.bb3
  %10 = load %struct.iw_param*, %struct.iw_param** %param, align 8, !dbg !17450
  %value7 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %10, i32 0, i32 0, !dbg !17451
  store i32 2, i32* %value7, align 4, !dbg !17452
  br label %if.end, !dbg !17450

if.else:                                          ; preds = %sw.bb3
  %11 = load %struct.iw_param*, %struct.iw_param** %param, align 8, !dbg !17453
  %value8 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %11, i32 0, i32 0, !dbg !17454
  store i32 1, i32* %value8, align 4, !dbg !17455
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !17456

sw.bb9:                                           ; preds = %entry
  %12 = load %struct.iw_param*, %struct.iw_param** %param, align 8, !dbg !17457
  %value10 = getelementptr inbounds %struct.iw_param, %struct.iw_param* %12, i32 0, i32 0, !dbg !17458
  store i32 0, i32* %value10, align 4, !dbg !17459
  br label %sw.epilog, !dbg !17460

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !17461
  br label %return, !dbg !17461

sw.epilog:                                        ; preds = %sw.bb9, %if.end, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !17462
  br label %return, !dbg !17462

return:                                           ; preds = %sw.epilog, %sw.default
  %13 = load i32, i32* %retval, align 4, !dbg !17463
  ret i32 %13, !dbg !17463
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_set_encodeext(%struct.net_device* %dev, %struct.iw_request_info* %info, %union.iwreq_data* %wrqu, i8* %extra) #0 !dbg !17464 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %wrqu.addr = alloca %union.iwreq_data*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %encoding = alloca %struct.iw_point*, align 8
  %ext = alloca %struct.iw_encode_ext*, align 8
  %idx = alloca i32, align 4
  %key_len = alloca i32, align 4
  %alg = alloca i32, align 4
  %set_key = alloca i32, align 4
  %__UNIQUE_ID___x353 = alloca i32, align 4
  %__UNIQUE_ID___y354 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17465, metadata !DIExpression()), !dbg !17466
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !17467, metadata !DIExpression()), !dbg !17468
  store %union.iwreq_data* %wrqu, %union.iwreq_data** %wrqu.addr, align 8
  call void @llvm.dbg.declare(metadata %union.iwreq_data** %wrqu.addr, metadata !17469, metadata !DIExpression()), !dbg !17470
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !17471, metadata !DIExpression()), !dbg !17472
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !17473, metadata !DIExpression()), !dbg !17474
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17475
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !17476
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !17476
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !17474
  call void @llvm.dbg.declare(metadata %struct.iw_point** %encoding, metadata !17477, metadata !DIExpression()), !dbg !17478
  %2 = load %union.iwreq_data*, %union.iwreq_data** %wrqu.addr, align 8, !dbg !17479
  %encoding1 = bitcast %union.iwreq_data* %2 to %struct.iw_point*, !dbg !17480
  store %struct.iw_point* %encoding1, %struct.iw_point** %encoding, align 8, !dbg !17478
  call void @llvm.dbg.declare(metadata %struct.iw_encode_ext** %ext, metadata !17481, metadata !DIExpression()), !dbg !17482
  %3 = load i8*, i8** %extra.addr, align 8, !dbg !17483
  %4 = bitcast i8* %3 to %struct.iw_encode_ext*, !dbg !17484
  store %struct.iw_encode_ext* %4, %struct.iw_encode_ext** %ext, align 8, !dbg !17482
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !17485, metadata !DIExpression()), !dbg !17486
  call void @llvm.dbg.declare(metadata i32* %key_len, metadata !17487, metadata !DIExpression()), !dbg !17488
  call void @llvm.dbg.declare(metadata i32* %alg, metadata !17489, metadata !DIExpression()), !dbg !17490
  %5 = load %struct.iw_encode_ext*, %struct.iw_encode_ext** %ext, align 8, !dbg !17491
  %alg2 = getelementptr inbounds %struct.iw_encode_ext, %struct.iw_encode_ext* %5, i32 0, i32 4, !dbg !17492
  %6 = load i16, i16* %alg2, align 4, !dbg !17492
  %conv = zext i16 %6 to i32, !dbg !17491
  store i32 %conv, i32* %alg, align 4, !dbg !17490
  call void @llvm.dbg.declare(metadata i32* %set_key, metadata !17493, metadata !DIExpression()), !dbg !17494
  store i32 1, i32* %set_key, align 4, !dbg !17494
  %7 = load %struct.iw_point*, %struct.iw_point** %encoding, align 8, !dbg !17495
  %flags = getelementptr inbounds %struct.iw_point, %struct.iw_point* %7, i32 0, i32 2, !dbg !17496
  %8 = load i16, i16* %flags, align 2, !dbg !17496
  %conv3 = zext i16 %8 to i32, !dbg !17495
  %and = and i32 %conv3, 255, !dbg !17497
  store i32 %and, i32* %idx, align 4, !dbg !17498
  %9 = load i32, i32* %idx, align 4, !dbg !17499
  %tobool = icmp ne i32 %9, 0, !dbg !17499
  br i1 %tobool, label %if.then, label %if.else, !dbg !17501

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %idx, align 4, !dbg !17502
  %cmp = icmp slt i32 %10, 1, !dbg !17505
  br i1 %cmp, label %if.then7, label %lor.lhs.false, !dbg !17506

lor.lhs.false:                                    ; preds = %if.then
  %11 = load i32, i32* %idx, align 4, !dbg !17507
  %cmp5 = icmp sgt i32 %11, 4, !dbg !17508
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !17509

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  store i32 -22, i32* %retval, align 4, !dbg !17510
  br label %return, !dbg !17510

if.end:                                           ; preds = %lor.lhs.false
  %12 = load i32, i32* %idx, align 4, !dbg !17511
  %dec = add i32 %12, -1, !dbg !17511
  store i32 %dec, i32* %idx, align 4, !dbg !17511
  br label %if.end9, !dbg !17512

if.else:                                          ; preds = %entry
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17513
  %default_key = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %13, i32 0, i32 31, !dbg !17514
  %14 = load i8, i8* %default_key, align 1, !dbg !17514
  %conv8 = zext i8 %14 to i32, !dbg !17513
  store i32 %conv8, i32* %idx, align 4, !dbg !17515
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.end
  %15 = load %struct.iw_point*, %struct.iw_point** %encoding, align 8, !dbg !17516
  %flags10 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %15, i32 0, i32 2, !dbg !17518
  %16 = load i16, i16* %flags10, align 2, !dbg !17518
  %conv11 = zext i16 %16 to i32, !dbg !17516
  %and12 = and i32 %conv11, 32768, !dbg !17519
  %tobool13 = icmp ne i32 %and12, 0, !dbg !17519
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !17520

if.then14:                                        ; preds = %if.end9
  store i32 0, i32* %alg, align 4, !dbg !17521
  br label %if.end15, !dbg !17522

if.end15:                                         ; preds = %if.then14, %if.end9
  %17 = load %struct.iw_encode_ext*, %struct.iw_encode_ext** %ext, align 8, !dbg !17523
  %ext_flags = getelementptr inbounds %struct.iw_encode_ext, %struct.iw_encode_ext* %17, i32 0, i32 0, !dbg !17525
  %18 = load i32, i32* %ext_flags, align 4, !dbg !17525
  %and16 = and i32 %18, 8, !dbg !17526
  %tobool17 = icmp ne i32 %and16, 0, !dbg !17526
  br i1 %tobool17, label %if.then18, label %if.end25, !dbg !17527

if.then18:                                        ; preds = %if.end15
  %19 = load i32, i32* %idx, align 4, !dbg !17528
  %conv19 = trunc i32 %19 to i8, !dbg !17528
  %20 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17530
  %default_key20 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %20, i32 0, i32 31, !dbg !17531
  store i8 %conv19, i8* %default_key20, align 1, !dbg !17532
  %21 = load %struct.iw_encode_ext*, %struct.iw_encode_ext** %ext, align 8, !dbg !17533
  %key_len21 = getelementptr inbounds %struct.iw_encode_ext, %struct.iw_encode_ext* %21, i32 0, i32 5, !dbg !17534
  %22 = load i16, i16* %key_len21, align 2, !dbg !17534
  %conv22 = zext i16 %22 to i32, !dbg !17533
  %cmp23 = icmp sgt i32 %conv22, 0, !dbg !17535
  %23 = zext i1 %cmp23 to i64, !dbg !17533
  %cond = select i1 %cmp23, i32 1, i32 0, !dbg !17533
  store i32 %cond, i32* %set_key, align 4, !dbg !17536
  br label %if.end25, !dbg !17537

if.end25:                                         ; preds = %if.then18, %if.end15
  %24 = load i32, i32* %set_key, align 4, !dbg !17538
  %tobool26 = icmp ne i32 %24, 0, !dbg !17538
  br i1 %tobool26, label %if.then27, label %if.end67, !dbg !17540

if.then27:                                        ; preds = %if.end25
  %25 = load i32, i32* %alg, align 4, !dbg !17541
  switch i32 %25, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb28
  ], !dbg !17543

sw.bb:                                            ; preds = %if.then27
  %26 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17544
  %wep_is_on = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %26, i32 0, i32 30, !dbg !17546
  store i8 0, i8* %wep_is_on, align 4, !dbg !17547
  %27 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17548
  %encryption_level = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %27, i32 0, i32 33, !dbg !17549
  store i8 0, i8* %encryption_level, align 1, !dbg !17550
  %28 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17551
  %pairwise_cipher_suite = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %28, i32 0, i32 35, !dbg !17552
  store i8 0, i8* %pairwise_cipher_suite, align 1, !dbg !17553
  br label %sw.epilog, !dbg !17554

sw.bb28:                                          ; preds = %if.then27
  %29 = load %struct.iw_encode_ext*, %struct.iw_encode_ext** %ext, align 8, !dbg !17555
  %key_len29 = getelementptr inbounds %struct.iw_encode_ext, %struct.iw_encode_ext* %29, i32 0, i32 5, !dbg !17557
  %30 = load i16, i16* %key_len29, align 2, !dbg !17557
  %conv30 = zext i16 %30 to i32, !dbg !17555
  %cmp31 = icmp sgt i32 %conv30, 5, !dbg !17558
  br i1 %cmp31, label %if.then33, label %if.else36, !dbg !17559

if.then33:                                        ; preds = %sw.bb28
  %31 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17560
  %wep_key_len = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %31, i32 0, i32 37, !dbg !17562
  %32 = load i32, i32* %idx, align 4, !dbg !17563
  %idxprom = sext i32 %32 to i64, !dbg !17560
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %wep_key_len, i64 0, i64 %idxprom, !dbg !17560
  store i32 13, i32* %arrayidx, align 4, !dbg !17564
  %33 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17565
  %pairwise_cipher_suite34 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %33, i32 0, i32 35, !dbg !17566
  store i8 5, i8* %pairwise_cipher_suite34, align 1, !dbg !17567
  %34 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17568
  %encryption_level35 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %34, i32 0, i32 33, !dbg !17569
  store i8 2, i8* %encryption_level35, align 1, !dbg !17570
  br label %if.end49, !dbg !17571

if.else36:                                        ; preds = %sw.bb28
  %35 = load %struct.iw_encode_ext*, %struct.iw_encode_ext** %ext, align 8, !dbg !17572
  %key_len37 = getelementptr inbounds %struct.iw_encode_ext, %struct.iw_encode_ext* %35, i32 0, i32 5, !dbg !17574
  %36 = load i16, i16* %key_len37, align 2, !dbg !17574
  %conv38 = zext i16 %36 to i32, !dbg !17572
  %cmp39 = icmp sgt i32 %conv38, 0, !dbg !17575
  br i1 %cmp39, label %if.then41, label %if.else47, !dbg !17576

if.then41:                                        ; preds = %if.else36
  %37 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17577
  %wep_key_len42 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %37, i32 0, i32 37, !dbg !17579
  %38 = load i32, i32* %idx, align 4, !dbg !17580
  %idxprom43 = sext i32 %38 to i64, !dbg !17577
  %arrayidx44 = getelementptr [4 x i32], [4 x i32]* %wep_key_len42, i64 0, i64 %idxprom43, !dbg !17577
  store i32 5, i32* %arrayidx44, align 4, !dbg !17581
  %39 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17582
  %pairwise_cipher_suite45 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %39, i32 0, i32 35, !dbg !17583
  store i8 1, i8* %pairwise_cipher_suite45, align 1, !dbg !17584
  %40 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17585
  %encryption_level46 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %40, i32 0, i32 33, !dbg !17586
  store i8 1, i8* %encryption_level46, align 1, !dbg !17587
  br label %if.end48, !dbg !17588

if.else47:                                        ; preds = %if.else36
  store i32 -22, i32* %retval, align 4, !dbg !17589
  br label %return, !dbg !17589

if.end48:                                         ; preds = %if.then41
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then33
  %41 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17591
  %wep_is_on50 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %41, i32 0, i32 30, !dbg !17592
  store i8 1, i8* %wep_is_on50, align 4, !dbg !17593
  %42 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17594
  %wep_keys = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %42, i32 0, i32 36, !dbg !17595
  %43 = load i32, i32* %idx, align 4, !dbg !17596
  %idxprom51 = sext i32 %43 to i64, !dbg !17594
  %arrayidx52 = getelementptr [4 x [40 x i8]], [4 x [40 x i8]]* %wep_keys, i64 0, i64 %idxprom51, !dbg !17594
  %arraydecay = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx52, i64 0, i64 0, !dbg !17597
  call void @llvm.memset.p0i8.i64(i8* align 2 %arraydecay, i8 0, i64 13, i1 false), !dbg !17597
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x353, metadata !17598, metadata !DIExpression()), !dbg !17600
  %44 = load %struct.iw_encode_ext*, %struct.iw_encode_ext** %ext, align 8, !dbg !17600
  %key_len53 = getelementptr inbounds %struct.iw_encode_ext, %struct.iw_encode_ext* %44, i32 0, i32 5, !dbg !17600
  %45 = load i16, i16* %key_len53, align 2, !dbg !17600
  %conv54 = zext i16 %45 to i32, !dbg !17600
  store i32 %conv54, i32* %__UNIQUE_ID___x353, align 4, !dbg !17600
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y354, metadata !17601, metadata !DIExpression()), !dbg !17600
  %46 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17600
  %wep_key_len55 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %46, i32 0, i32 37, !dbg !17600
  %47 = load i32, i32* %idx, align 4, !dbg !17600
  %idxprom56 = sext i32 %47 to i64, !dbg !17600
  %arrayidx57 = getelementptr [4 x i32], [4 x i32]* %wep_key_len55, i64 0, i64 %idxprom56, !dbg !17600
  %48 = load i32, i32* %arrayidx57, align 4, !dbg !17600
  store i32 %48, i32* %__UNIQUE_ID___y354, align 4, !dbg !17600
  %49 = load i32, i32* %__UNIQUE_ID___x353, align 4, !dbg !17600
  %50 = load i32, i32* %__UNIQUE_ID___y354, align 4, !dbg !17600
  %cmp58 = icmp slt i32 %49, %50, !dbg !17600
  br i1 %cmp58, label %cond.true, label %cond.false, !dbg !17600

cond.true:                                        ; preds = %if.end49
  %51 = load i32, i32* %__UNIQUE_ID___x353, align 4, !dbg !17600
  br label %cond.end, !dbg !17600

cond.false:                                       ; preds = %if.end49
  %52 = load i32, i32* %__UNIQUE_ID___y354, align 4, !dbg !17600
  br label %cond.end, !dbg !17600

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond60 = phi i32 [ %51, %cond.true ], [ %52, %cond.false ], !dbg !17600
  store i32 %cond60, i32* %tmp, align 4, !dbg !17600
  %53 = load i32, i32* %tmp, align 4, !dbg !17600
  store i32 %53, i32* %key_len, align 4, !dbg !17602
  %54 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17603
  %wep_keys61 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %54, i32 0, i32 36, !dbg !17604
  %55 = load i32, i32* %idx, align 4, !dbg !17605
  %idxprom62 = sext i32 %55 to i64, !dbg !17603
  %arrayidx63 = getelementptr [4 x [40 x i8]], [4 x [40 x i8]]* %wep_keys61, i64 0, i64 %idxprom62, !dbg !17603
  %arraydecay64 = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx63, i64 0, i64 0, !dbg !17606
  %56 = load %struct.iw_encode_ext*, %struct.iw_encode_ext** %ext, align 8, !dbg !17607
  %key = getelementptr inbounds %struct.iw_encode_ext, %struct.iw_encode_ext* %56, i32 0, i32 6, !dbg !17608
  %arraydecay65 = getelementptr inbounds [0 x i8], [0 x i8]* %key, i64 0, i64 0, !dbg !17606
  %57 = load i32, i32* %key_len, align 4, !dbg !17609
  %conv66 = sext i32 %57 to i64, !dbg !17609
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay64, i8* align 4 %arraydecay65, i64 %conv66, i1 false), !dbg !17606
  br label %sw.epilog, !dbg !17610

sw.default:                                       ; preds = %if.then27
  store i32 -22, i32* %retval, align 4, !dbg !17611
  br label %return, !dbg !17611

sw.epilog:                                        ; preds = %cond.end, %sw.bb
  br label %if.end67, !dbg !17612

if.end67:                                         ; preds = %sw.epilog, %if.end25
  store i32 -115, i32* %retval, align 4, !dbg !17613
  br label %return, !dbg !17613

return:                                           ; preds = %if.end67, %sw.default, %if.else47, %if.then7
  %58 = load i32, i32* %retval, align 4, !dbg !17614
  ret i32 %58, !dbg !17614
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_get_encodeext(%struct.net_device* %dev, %struct.iw_request_info* %info, %union.iwreq_data* %wrqu, i8* %extra) #0 !dbg !17615 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.iw_request_info*, align 8
  %wrqu.addr = alloca %union.iwreq_data*, align 8
  %extra.addr = alloca i8*, align 8
  %priv = alloca %struct.atmel_private*, align 8
  %encoding = alloca %struct.iw_point*, align 8
  %ext = alloca %struct.iw_encode_ext*, align 8
  %idx = alloca i32, align 4
  %max_key_len = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17616, metadata !DIExpression()), !dbg !17617
  store %struct.iw_request_info* %info, %struct.iw_request_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iw_request_info** %info.addr, metadata !17618, metadata !DIExpression()), !dbg !17619
  store %union.iwreq_data* %wrqu, %union.iwreq_data** %wrqu.addr, align 8
  call void @llvm.dbg.declare(metadata %union.iwreq_data** %wrqu.addr, metadata !17620, metadata !DIExpression()), !dbg !17621
  store i8* %extra, i8** %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra.addr, metadata !17622, metadata !DIExpression()), !dbg !17623
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv, metadata !17624, metadata !DIExpression()), !dbg !17625
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17626
  %call = call i8* @netdev_priv(%struct.net_device* %0) #10, !dbg !17627
  %1 = bitcast i8* %call to %struct.atmel_private*, !dbg !17627
  store %struct.atmel_private* %1, %struct.atmel_private** %priv, align 8, !dbg !17625
  call void @llvm.dbg.declare(metadata %struct.iw_point** %encoding, metadata !17628, metadata !DIExpression()), !dbg !17629
  %2 = load %union.iwreq_data*, %union.iwreq_data** %wrqu.addr, align 8, !dbg !17630
  %encoding1 = bitcast %union.iwreq_data* %2 to %struct.iw_point*, !dbg !17631
  store %struct.iw_point* %encoding1, %struct.iw_point** %encoding, align 8, !dbg !17629
  call void @llvm.dbg.declare(metadata %struct.iw_encode_ext** %ext, metadata !17632, metadata !DIExpression()), !dbg !17633
  %3 = load i8*, i8** %extra.addr, align 8, !dbg !17634
  %4 = bitcast i8* %3 to %struct.iw_encode_ext*, !dbg !17635
  store %struct.iw_encode_ext* %4, %struct.iw_encode_ext** %ext, align 8, !dbg !17633
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !17636, metadata !DIExpression()), !dbg !17637
  call void @llvm.dbg.declare(metadata i32* %max_key_len, metadata !17638, metadata !DIExpression()), !dbg !17639
  %5 = load %struct.iw_point*, %struct.iw_point** %encoding, align 8, !dbg !17640
  %length = getelementptr inbounds %struct.iw_point, %struct.iw_point* %5, i32 0, i32 1, !dbg !17641
  %6 = load i16, i16* %length, align 8, !dbg !17641
  %conv = zext i16 %6 to i64, !dbg !17640
  %sub = sub i64 %conv, 40, !dbg !17642
  %conv2 = trunc i64 %sub to i32, !dbg !17640
  store i32 %conv2, i32* %max_key_len, align 4, !dbg !17643
  %7 = load i32, i32* %max_key_len, align 4, !dbg !17644
  %cmp = icmp slt i32 %7, 0, !dbg !17646
  br i1 %cmp, label %if.then, label %if.end, !dbg !17647

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !17648
  br label %return, !dbg !17648

if.end:                                           ; preds = %entry
  %8 = load %struct.iw_point*, %struct.iw_point** %encoding, align 8, !dbg !17649
  %flags = getelementptr inbounds %struct.iw_point, %struct.iw_point* %8, i32 0, i32 2, !dbg !17650
  %9 = load i16, i16* %flags, align 2, !dbg !17650
  %conv4 = zext i16 %9 to i32, !dbg !17649
  %and = and i32 %conv4, 255, !dbg !17651
  store i32 %and, i32* %idx, align 4, !dbg !17652
  %10 = load i32, i32* %idx, align 4, !dbg !17653
  %tobool = icmp ne i32 %10, 0, !dbg !17653
  br i1 %tobool, label %if.then5, label %if.else, !dbg !17655

if.then5:                                         ; preds = %if.end
  %11 = load i32, i32* %idx, align 4, !dbg !17656
  %cmp6 = icmp slt i32 %11, 1, !dbg !17659
  br i1 %cmp6, label %if.then10, label %lor.lhs.false, !dbg !17660

lor.lhs.false:                                    ; preds = %if.then5
  %12 = load i32, i32* %idx, align 4, !dbg !17661
  %cmp8 = icmp sgt i32 %12, 4, !dbg !17662
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !17663

if.then10:                                        ; preds = %lor.lhs.false, %if.then5
  store i32 -22, i32* %retval, align 4, !dbg !17664
  br label %return, !dbg !17664

if.end11:                                         ; preds = %lor.lhs.false
  %13 = load i32, i32* %idx, align 4, !dbg !17665
  %dec = add i32 %13, -1, !dbg !17665
  store i32 %dec, i32* %idx, align 4, !dbg !17665
  br label %if.end13, !dbg !17666

if.else:                                          ; preds = %if.end
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17667
  %default_key = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %14, i32 0, i32 31, !dbg !17668
  %15 = load i8, i8* %default_key, align 1, !dbg !17668
  %conv12 = zext i8 %15 to i32, !dbg !17667
  store i32 %conv12, i32* %idx, align 4, !dbg !17669
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.end11
  %16 = load i32, i32* %idx, align 4, !dbg !17670
  %add = add i32 %16, 1, !dbg !17671
  %conv14 = trunc i32 %add to i16, !dbg !17670
  %17 = load %struct.iw_point*, %struct.iw_point** %encoding, align 8, !dbg !17672
  %flags15 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %17, i32 0, i32 2, !dbg !17673
  store i16 %conv14, i16* %flags15, align 2, !dbg !17674
  %18 = load %struct.iw_encode_ext*, %struct.iw_encode_ext** %ext, align 8, !dbg !17675
  %19 = bitcast %struct.iw_encode_ext* %18 to i8*, !dbg !17676
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 40, i1 false), !dbg !17676
  %20 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17677
  %wep_is_on = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %20, i32 0, i32 30, !dbg !17679
  %21 = load i8, i8* %wep_is_on, align 4, !dbg !17679
  %tobool16 = icmp ne i8 %21, 0, !dbg !17677
  br i1 %tobool16, label %if.else21, label %if.then17, !dbg !17680

if.then17:                                        ; preds = %if.end13
  %22 = load %struct.iw_encode_ext*, %struct.iw_encode_ext** %ext, align 8, !dbg !17681
  %alg = getelementptr inbounds %struct.iw_encode_ext, %struct.iw_encode_ext* %22, i32 0, i32 4, !dbg !17683
  store i16 0, i16* %alg, align 4, !dbg !17684
  %23 = load %struct.iw_encode_ext*, %struct.iw_encode_ext** %ext, align 8, !dbg !17685
  %key_len = getelementptr inbounds %struct.iw_encode_ext, %struct.iw_encode_ext* %23, i32 0, i32 5, !dbg !17686
  store i16 0, i16* %key_len, align 2, !dbg !17687
  %24 = load %struct.iw_point*, %struct.iw_point** %encoding, align 8, !dbg !17688
  %flags18 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %24, i32 0, i32 2, !dbg !17689
  %25 = load i16, i16* %flags18, align 2, !dbg !17690
  %conv19 = zext i16 %25 to i32, !dbg !17690
  %or = or i32 %conv19, 32768, !dbg !17690
  %conv20 = trunc i32 %or to i16, !dbg !17690
  store i16 %conv20, i16* %flags18, align 2, !dbg !17690
  br label %if.end39, !dbg !17691

if.else21:                                        ; preds = %if.end13
  %26 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17692
  %encryption_level = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %26, i32 0, i32 33, !dbg !17695
  %27 = load i8, i8* %encryption_level, align 1, !dbg !17695
  %conv22 = zext i8 %27 to i32, !dbg !17692
  %cmp23 = icmp sgt i32 %conv22, 0, !dbg !17696
  br i1 %cmp23, label %if.then25, label %if.else27, !dbg !17697

if.then25:                                        ; preds = %if.else21
  %28 = load %struct.iw_encode_ext*, %struct.iw_encode_ext** %ext, align 8, !dbg !17698
  %alg26 = getelementptr inbounds %struct.iw_encode_ext, %struct.iw_encode_ext* %28, i32 0, i32 4, !dbg !17699
  store i16 1, i16* %alg26, align 4, !dbg !17700
  br label %if.end28, !dbg !17698

if.else27:                                        ; preds = %if.else21
  store i32 -22, i32* %retval, align 4, !dbg !17701
  br label %return, !dbg !17701

if.end28:                                         ; preds = %if.then25
  %29 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17702
  %wep_key_len = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %29, i32 0, i32 37, !dbg !17703
  %30 = load i32, i32* %idx, align 4, !dbg !17704
  %idxprom = sext i32 %30 to i64, !dbg !17702
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %wep_key_len, i64 0, i64 %idxprom, !dbg !17702
  %31 = load i32, i32* %arrayidx, align 4, !dbg !17702
  %conv29 = trunc i32 %31 to i16, !dbg !17702
  %32 = load %struct.iw_encode_ext*, %struct.iw_encode_ext** %ext, align 8, !dbg !17705
  %key_len30 = getelementptr inbounds %struct.iw_encode_ext, %struct.iw_encode_ext* %32, i32 0, i32 5, !dbg !17706
  store i16 %conv29, i16* %key_len30, align 2, !dbg !17707
  %33 = load %struct.iw_encode_ext*, %struct.iw_encode_ext** %ext, align 8, !dbg !17708
  %key = getelementptr inbounds %struct.iw_encode_ext, %struct.iw_encode_ext* %33, i32 0, i32 6, !dbg !17709
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %key, i64 0, i64 0, !dbg !17710
  %34 = load %struct.atmel_private*, %struct.atmel_private** %priv, align 8, !dbg !17711
  %wep_keys = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %34, i32 0, i32 36, !dbg !17712
  %35 = load i32, i32* %idx, align 4, !dbg !17713
  %idxprom31 = sext i32 %35 to i64, !dbg !17711
  %arrayidx32 = getelementptr [4 x [40 x i8]], [4 x [40 x i8]]* %wep_keys, i64 0, i64 %idxprom31, !dbg !17711
  %arraydecay33 = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx32, i64 0, i64 0, !dbg !17710
  %36 = load %struct.iw_encode_ext*, %struct.iw_encode_ext** %ext, align 8, !dbg !17714
  %key_len34 = getelementptr inbounds %struct.iw_encode_ext, %struct.iw_encode_ext* %36, i32 0, i32 5, !dbg !17715
  %37 = load i16, i16* %key_len34, align 2, !dbg !17715
  %conv35 = zext i16 %37 to i64, !dbg !17714
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay, i8* align 2 %arraydecay33, i64 %conv35, i1 false), !dbg !17710
  %38 = load %struct.iw_point*, %struct.iw_point** %encoding, align 8, !dbg !17716
  %flags36 = getelementptr inbounds %struct.iw_point, %struct.iw_point* %38, i32 0, i32 2, !dbg !17717
  %39 = load i16, i16* %flags36, align 2, !dbg !17718
  %conv37 = zext i16 %39 to i32, !dbg !17718
  %conv38 = trunc i32 %conv37 to i16, !dbg !17718
  store i16 %conv38, i16* %flags36, align 2, !dbg !17718
  br label %if.end39

if.end39:                                         ; preds = %if.end28, %if.then17
  store i32 0, i32* %retval, align 4, !dbg !17719
  br label %return, !dbg !17719

return:                                           ; preds = %if.end39, %if.else27, %if.then10, %if.then
  %40 = load i32, i32* %retval, align 4, !dbg !17720
  ret i32 %40, !dbg !17720
}

; Function Attrs: noredzone
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ieee80211_frequency_to_channel(i32 %freq) #0 !dbg !17721 {
entry:
  %freq.addr = alloca i32, align 4
  store i32 %freq, i32* %freq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %freq.addr, metadata !17722, metadata !DIExpression()), !dbg !17723
  %0 = load i32, i32* %freq.addr, align 4, !dbg !17724
  %mul = mul i32 %0, 1000, !dbg !17724
  %call = call i32 @ieee80211_freq_khz_to_channel(i32 %mul) #10, !dbg !17725
  ret i32 %call, !dbg !17726
}

; Function Attrs: noredzone
declare dso_local i32 @ieee80211_freq_khz_to_channel(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ieee80211_channel_to_frequency(i32 %chan, i32 %band) #0 !dbg !17727 {
entry:
  %chan.addr = alloca i32, align 4
  %band.addr = alloca i32, align 4
  store i32 %chan, i32* %chan.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chan.addr, metadata !17730, metadata !DIExpression()), !dbg !17731
  store i32 %band, i32* %band.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %band.addr, metadata !17732, metadata !DIExpression()), !dbg !17733
  %0 = load i32, i32* %chan.addr, align 4, !dbg !17734
  %1 = load i32, i32* %band.addr, align 4, !dbg !17734
  %call = call i32 @ieee80211_channel_to_freq_khz(i32 %0, i32 %1) #10, !dbg !17734
  %div = udiv i32 %call, 1000, !dbg !17734
  ret i32 %div, !dbg !17735
}

; Function Attrs: noredzone
declare dso_local i32 @ieee80211_channel_to_freq_khz(i32, i32) #2

; Function Attrs: noredzone
declare dso_local i8* @iwe_stream_add_event(%struct.iw_request_info*, i8*, i8*, %struct.iw_event*, i32) #2

; Function Attrs: noredzone
declare dso_local i8* @iwe_stream_add_point(%struct.iw_request_info*, i8*, i8*, %struct.iw_event*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @restart_search(%struct.atmel_private* %priv) #0 !dbg !17736 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %bss_index = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !17737, metadata !DIExpression()), !dbg !17738
  call void @llvm.dbg.declare(metadata i32* %bss_index, metadata !17739, metadata !DIExpression()), !dbg !17740
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17741
  %connect_to_any_BSS = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 73, !dbg !17743
  %1 = load i32, i32* %connect_to_any_BSS, align 4, !dbg !17743
  %tobool = icmp ne i32 %1, 0, !dbg !17741
  br i1 %tobool, label %if.else, label %if.then, !dbg !17744

if.then:                                          ; preds = %entry
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17745
  call void @atmel_scan(%struct.atmel_private* %2, i32 1) #10, !dbg !17747
  br label %if.end3, !dbg !17748

if.else:                                          ; preds = %entry
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17749
  %BSSinfo = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %3, i32 0, i32 70, !dbg !17751
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17752
  %current_BSS = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 72, !dbg !17753
  %5 = load i32, i32* %current_BSS, align 8, !dbg !17753
  %idxprom = sext i32 %5 to i64, !dbg !17749
  %arrayidx = getelementptr [64 x %struct.bss_info], [64 x %struct.bss_info]* %BSSinfo, i64 0, i64 %idxprom, !dbg !17749
  %channel = getelementptr inbounds %struct.bss_info, %struct.bss_info* %arrayidx, i32 0, i32 0, !dbg !17754
  %6 = load i32, i32* %channel, align 4, !dbg !17755
  %or = or i32 %6, 128, !dbg !17755
  store i32 %or, i32* %channel, align 4, !dbg !17755
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17756
  %call = call i32 @retrieve_bss(%struct.atmel_private* %7) #10, !dbg !17758
  store i32 %call, i32* %bss_index, align 4, !dbg !17759
  %cmp = icmp ne i32 %call, -1, !dbg !17760
  br i1 %cmp, label %if.then1, label %if.else2, !dbg !17761

if.then1:                                         ; preds = %if.else
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17762
  %9 = load i32, i32* %bss_index, align 4, !dbg !17763
  call void @atmel_join_bss(%struct.atmel_private* %8, i32 %9) #10, !dbg !17764
  br label %if.end, !dbg !17764

if.else2:                                         ; preds = %if.else
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17765
  call void @atmel_scan(%struct.atmel_private* %10, i32 0) #10, !dbg !17766
  br label %if.end

if.end:                                           ; preds = %if.else2, %if.then1
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  ret void, !dbg !17767
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atmel_wakeup_firmware(%struct.atmel_private* %priv) #0 !dbg !17768 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.atmel_private*, align 8
  %iface = alloca %struct.host_info_struct*, align 8
  %mr1 = alloca i16, align 2
  %mr3 = alloca i16, align 2
  %i = alloca i32, align 4
  %__ms = alloca i64, align 8
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !17769, metadata !DIExpression()), !dbg !17770
  call void @llvm.dbg.declare(metadata %struct.host_info_struct** %iface, metadata !17771, metadata !DIExpression()), !dbg !17773
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17774
  %host_info = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 41, !dbg !17775
  store %struct.host_info_struct* %host_info, %struct.host_info_struct** %iface, align 8, !dbg !17773
  call void @llvm.dbg.declare(metadata i16* %mr1, metadata !17776, metadata !DIExpression()), !dbg !17777
  call void @llvm.dbg.declare(metadata i16* %mr3, metadata !17778, metadata !DIExpression()), !dbg !17779
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17780, metadata !DIExpression()), !dbg !17781
  %1 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17782
  %card_type = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %1, i32 0, i32 13, !dbg !17784
  %2 = load i32, i32* %card_type, align 4, !dbg !17784
  %cmp = icmp eq i32 %2, 1, !dbg !17785
  br i1 %cmp, label %if.then, label %if.end, !dbg !17786

if.then:                                          ; preds = %entry
  %3 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17787
  %dev = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %3, i32 0, i32 7, !dbg !17788
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !17788
  call void @atmel_set_gcr(%struct.net_device* %4, i16 zeroext 1024) #10, !dbg !17789
  br label %if.end, !dbg !17789

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17790
  %dev1 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %5, i32 0, i32 7, !dbg !17791
  %6 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !17791
  call void @atmel_clear_gcr(%struct.net_device* %6, i16 zeroext 64) #10, !dbg !17792
  %7 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17793
  %dev2 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %7, i32 0, i32 7, !dbg !17794
  %8 = load %struct.net_device*, %struct.net_device** %dev2, align 8, !dbg !17794
  call void @atmel_write16(%struct.net_device* %8, i16 zeroext 2, i16 zeroext 512) #10, !dbg !17795
  %9 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17796
  %card_type3 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %9, i32 0, i32 13, !dbg !17798
  %10 = load i32, i32* %card_type3, align 4, !dbg !17798
  %cmp4 = icmp eq i32 %10, 1, !dbg !17799
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !17800

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !17801, metadata !DIExpression()), !dbg !17803
  store i64 100, i64* %__ms, align 8, !dbg !17803
  br label %while.cond, !dbg !17803

while.cond:                                       ; preds = %while.body, %if.then5
  %11 = load i64, i64* %__ms, align 8, !dbg !17803
  %dec = add i64 %11, -1, !dbg !17803
  store i64 %dec, i64* %__ms, align 8, !dbg !17803
  %tobool = icmp ne i64 %11, 0, !dbg !17803
  br i1 %tobool, label %while.body, label %while.end, !dbg !17803

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #10, !dbg !17804
  br label %while.cond, !dbg !17803, !llvm.loop !17809

while.end:                                        ; preds = %while.cond
  br label %if.end6, !dbg !17810

if.end6:                                          ; preds = %while.end, %if.end
  store i32 500000, i32* %i, align 4, !dbg !17811
  br label %for.cond, !dbg !17813

for.cond:                                         ; preds = %for.inc, %if.end6
  %12 = load i32, i32* %i, align 4, !dbg !17814
  %tobool7 = icmp ne i32 %12, 0, !dbg !17816
  br i1 %tobool7, label %for.body, label %for.end, !dbg !17816

for.body:                                         ; preds = %for.cond
  %13 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17817
  %dev8 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %13, i32 0, i32 7, !dbg !17819
  %14 = load %struct.net_device*, %struct.net_device** %dev8, align 8, !dbg !17819
  %call = call zeroext i16 @atmel_read16(%struct.net_device* %14, i16 zeroext 18) #10, !dbg !17820
  store i16 %call, i16* %mr1, align 2, !dbg !17821
  %15 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17822
  %dev9 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %15, i32 0, i32 7, !dbg !17823
  %16 = load %struct.net_device*, %struct.net_device** %dev9, align 8, !dbg !17823
  %call10 = call zeroext i16 @atmel_read16(%struct.net_device* %16, i16 zeroext 22) #10, !dbg !17824
  store i16 %call10, i16* %mr3, align 2, !dbg !17825
  %17 = load i16, i16* %mr3, align 2, !dbg !17826
  %conv = zext i16 %17 to i32, !dbg !17826
  %and = and i32 %conv, 16, !dbg !17828
  %tobool11 = icmp ne i32 %and, 0, !dbg !17828
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !17829

if.then12:                                        ; preds = %for.body
  br label %for.end, !dbg !17830

if.end13:                                         ; preds = %for.body
  %18 = load i16, i16* %mr1, align 2, !dbg !17831
  %conv14 = zext i16 %18 to i32, !dbg !17831
  %and15 = and i32 %conv14, 16, !dbg !17833
  %tobool16 = icmp ne i32 %and15, 0, !dbg !17833
  br i1 %tobool16, label %land.lhs.true, label %if.end20, !dbg !17834

land.lhs.true:                                    ; preds = %if.end13
  %19 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17835
  %bus_type = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %19, i32 0, i32 12, !dbg !17836
  %20 = load i32, i32* %bus_type, align 8, !dbg !17836
  %cmp17 = icmp eq i32 %20, 0, !dbg !17837
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !17838

if.then19:                                        ; preds = %land.lhs.true
  br label %for.end, !dbg !17839

if.end20:                                         ; preds = %land.lhs.true, %if.end13
  br label %for.inc, !dbg !17840

for.inc:                                          ; preds = %if.end20
  %21 = load i32, i32* %i, align 4, !dbg !17841
  %dec21 = add i32 %21, -1, !dbg !17841
  store i32 %dec21, i32* %i, align 4, !dbg !17841
  br label %for.cond, !dbg !17842, !llvm.loop !17843

for.end:                                          ; preds = %if.then19, %if.then12, %for.cond
  %22 = load i32, i32* %i, align 4, !dbg !17845
  %cmp22 = icmp eq i32 %22, 0, !dbg !17847
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !17848

if.then24:                                        ; preds = %for.end
  %23 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17849
  %dev25 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %23, i32 0, i32 7, !dbg !17851
  %24 = load %struct.net_device*, %struct.net_device** %dev25, align 8, !dbg !17851
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %24, i32 0, i32 0, !dbg !17852
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !17849
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.52, i64 0, i64 0), i8* %arraydecay) #11, !dbg !17853
  store i32 -5, i32* %retval, align 4, !dbg !17854
  br label %return, !dbg !17854

if.end27:                                         ; preds = %for.end
  %25 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17855
  %dev28 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %25, i32 0, i32 7, !dbg !17857
  %26 = load %struct.net_device*, %struct.net_device** %dev28, align 8, !dbg !17857
  %call29 = call zeroext i16 @atmel_read16(%struct.net_device* %26, i16 zeroext 20) #10, !dbg !17858
  %27 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17859
  %host_info_base = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %27, i32 0, i32 40, !dbg !17860
  store i16 %call29, i16* %host_info_base, align 4, !dbg !17861
  %conv30 = zext i16 %call29 to i32, !dbg !17862
  %cmp31 = icmp eq i32 %conv30, 65535, !dbg !17863
  br i1 %cmp31, label %if.then33, label %if.end38, !dbg !17864

if.then33:                                        ; preds = %if.end27
  %28 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17865
  %dev34 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %28, i32 0, i32 7, !dbg !17867
  %29 = load %struct.net_device*, %struct.net_device** %dev34, align 8, !dbg !17867
  %name35 = getelementptr inbounds %struct.net_device, %struct.net_device* %29, i32 0, i32 0, !dbg !17868
  %arraydecay36 = getelementptr inbounds [16 x i8], [16 x i8]* %name35, i64 0, i64 0, !dbg !17865
  %call37 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.53, i64 0, i64 0), i8* %arraydecay36) #11, !dbg !17869
  store i32 -19, i32* %retval, align 4, !dbg !17870
  br label %return, !dbg !17870

if.end38:                                         ; preds = %if.end27
  %30 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17871
  %31 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17872
  %call39 = call zeroext i16 @atmel_hi(%struct.atmel_private* %31, i16 zeroext 28) #10, !dbg !17873
  call void @atmel_wmem8(%struct.atmel_private* %30, i16 zeroext %call39, i16 zeroext 1) #10, !dbg !17874
  store i32 500000, i32* %i, align 4, !dbg !17875
  br label %for.cond40, !dbg !17877

for.cond40:                                       ; preds = %for.inc61, %if.end38
  %32 = load i32, i32* %i, align 4, !dbg !17878
  %tobool41 = icmp ne i32 %32, 0, !dbg !17880
  br i1 %tobool41, label %for.body42, label %for.end63, !dbg !17880

for.body42:                                       ; preds = %for.cond40
  %33 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17881
  %dev43 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %33, i32 0, i32 7, !dbg !17883
  %34 = load %struct.net_device*, %struct.net_device** %dev43, align 8, !dbg !17883
  %call44 = call zeroext i16 @atmel_read16(%struct.net_device* %34, i16 zeroext 18) #10, !dbg !17884
  store i16 %call44, i16* %mr1, align 2, !dbg !17885
  %35 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17886
  %dev45 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %35, i32 0, i32 7, !dbg !17887
  %36 = load %struct.net_device*, %struct.net_device** %dev45, align 8, !dbg !17887
  %call46 = call zeroext i16 @atmel_read16(%struct.net_device* %36, i16 zeroext 22) #10, !dbg !17888
  store i16 %call46, i16* %mr3, align 2, !dbg !17889
  %37 = load i16, i16* %mr3, align 2, !dbg !17890
  %conv47 = zext i16 %37 to i32, !dbg !17890
  %and48 = and i32 %conv47, 1, !dbg !17892
  %tobool49 = icmp ne i32 %and48, 0, !dbg !17892
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !17893

if.then50:                                        ; preds = %for.body42
  br label %for.end63, !dbg !17894

if.end51:                                         ; preds = %for.body42
  %38 = load i16, i16* %mr1, align 2, !dbg !17895
  %conv52 = zext i16 %38 to i32, !dbg !17895
  %and53 = and i32 %conv52, 1, !dbg !17897
  %tobool54 = icmp ne i32 %and53, 0, !dbg !17897
  br i1 %tobool54, label %land.lhs.true55, label %if.end60, !dbg !17898

land.lhs.true55:                                  ; preds = %if.end51
  %39 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17899
  %bus_type56 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %39, i32 0, i32 12, !dbg !17900
  %40 = load i32, i32* %bus_type56, align 8, !dbg !17900
  %cmp57 = icmp eq i32 %40, 0, !dbg !17901
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !17902

if.then59:                                        ; preds = %land.lhs.true55
  br label %for.end63, !dbg !17903

if.end60:                                         ; preds = %land.lhs.true55, %if.end51
  br label %for.inc61, !dbg !17904

for.inc61:                                        ; preds = %if.end60
  %41 = load i32, i32* %i, align 4, !dbg !17905
  %dec62 = add i32 %41, -1, !dbg !17905
  store i32 %dec62, i32* %i, align 4, !dbg !17905
  br label %for.cond40, !dbg !17906, !llvm.loop !17907

for.end63:                                        ; preds = %if.then59, %if.then50, %for.cond40
  %42 = load i32, i32* %i, align 4, !dbg !17909
  %cmp64 = icmp eq i32 %42, 0, !dbg !17911
  br i1 %cmp64, label %if.then66, label %if.end71, !dbg !17912

if.then66:                                        ; preds = %for.end63
  %43 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17913
  %dev67 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %43, i32 0, i32 7, !dbg !17915
  %44 = load %struct.net_device*, %struct.net_device** %dev67, align 8, !dbg !17915
  %name68 = getelementptr inbounds %struct.net_device, %struct.net_device* %44, i32 0, i32 0, !dbg !17916
  %arraydecay69 = getelementptr inbounds [16 x i8], [16 x i8]* %name68, i64 0, i64 0, !dbg !17913
  %call70 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.54, i64 0, i64 0), i8* %arraydecay69) #11, !dbg !17917
  store i32 -5, i32* %retval, align 4, !dbg !17918
  br label %return, !dbg !17918

if.end71:                                         ; preds = %for.end63
  %45 = load i16, i16* %mr3, align 2, !dbg !17919
  %conv72 = zext i16 %45 to i32, !dbg !17919
  %and73 = and i32 %conv72, 1, !dbg !17921
  %tobool74 = icmp ne i32 %and73, 0, !dbg !17921
  br i1 %tobool74, label %land.lhs.true75, label %if.end86, !dbg !17922

land.lhs.true75:                                  ; preds = %if.end71
  %46 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17923
  %dev76 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %46, i32 0, i32 7, !dbg !17924
  %47 = load %struct.net_device*, %struct.net_device** %dev76, align 8, !dbg !17924
  %call77 = call zeroext i16 @atmel_read16(%struct.net_device* %47, i16 zeroext 22) #10, !dbg !17925
  %conv78 = zext i16 %call77 to i32, !dbg !17925
  %and79 = and i32 %conv78, 2, !dbg !17926
  %tobool80 = icmp ne i32 %and79, 0, !dbg !17926
  br i1 %tobool80, label %if.end86, label %if.then81, !dbg !17927

if.then81:                                        ; preds = %land.lhs.true75
  %48 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17928
  %dev82 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %48, i32 0, i32 7, !dbg !17930
  %49 = load %struct.net_device*, %struct.net_device** %dev82, align 8, !dbg !17930
  %name83 = getelementptr inbounds %struct.net_device, %struct.net_device* %49, i32 0, i32 0, !dbg !17931
  %arraydecay84 = getelementptr inbounds [16 x i8], [16 x i8]* %name83, i64 0, i64 0, !dbg !17928
  %call85 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.55, i64 0, i64 0), i8* %arraydecay84) #11, !dbg !17932
  store i32 -5, i32* %retval, align 4, !dbg !17933
  br label %return, !dbg !17933

if.end86:                                         ; preds = %land.lhs.true75, %if.end71
  %50 = load i16, i16* %mr1, align 2, !dbg !17934
  %conv87 = zext i16 %50 to i32, !dbg !17934
  %and88 = and i32 %conv87, 1, !dbg !17936
  %tobool89 = icmp ne i32 %and88, 0, !dbg !17936
  br i1 %tobool89, label %land.lhs.true90, label %if.end101, !dbg !17937

land.lhs.true90:                                  ; preds = %if.end86
  %51 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17938
  %dev91 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %51, i32 0, i32 7, !dbg !17939
  %52 = load %struct.net_device*, %struct.net_device** %dev91, align 8, !dbg !17939
  %call92 = call zeroext i16 @atmel_read16(%struct.net_device* %52, i16 zeroext 18) #10, !dbg !17940
  %conv93 = zext i16 %call92 to i32, !dbg !17940
  %and94 = and i32 %conv93, 2, !dbg !17941
  %tobool95 = icmp ne i32 %and94, 0, !dbg !17941
  br i1 %tobool95, label %if.end101, label %if.then96, !dbg !17942

if.then96:                                        ; preds = %land.lhs.true90
  %53 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17943
  %dev97 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %53, i32 0, i32 7, !dbg !17945
  %54 = load %struct.net_device*, %struct.net_device** %dev97, align 8, !dbg !17945
  %name98 = getelementptr inbounds %struct.net_device, %struct.net_device* %54, i32 0, i32 0, !dbg !17946
  %arraydecay99 = getelementptr inbounds [16 x i8], [16 x i8]* %name98, i64 0, i64 0, !dbg !17943
  %call100 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.56, i64 0, i64 0), i8* %arraydecay99) #11, !dbg !17947
  store i32 -5, i32* %retval, align 4, !dbg !17948
  br label %return, !dbg !17948

if.end101:                                        ; preds = %land.lhs.true90, %if.end86
  %55 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17949
  %dev102 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %55, i32 0, i32 7, !dbg !17950
  %56 = load %struct.net_device*, %struct.net_device** %dev102, align 8, !dbg !17950
  %57 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17951
  %58 = bitcast %struct.host_info_struct* %57 to i8*, !dbg !17952
  %59 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !17953
  %host_info_base103 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %59, i32 0, i32 40, !dbg !17954
  %60 = load i16, i16* %host_info_base103, align 4, !dbg !17954
  call void @atmel_copy_to_host(%struct.net_device* %56, i8* %58, i16 zeroext %60, i16 zeroext 36) #10, !dbg !17955
  %61 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17956
  %tx_buff_pos = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %61, i32 0, i32 4, !dbg !17956
  %62 = load i16, i16* %tx_buff_pos, align 2, !dbg !17956
  %63 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17957
  %tx_buff_pos104 = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %63, i32 0, i32 4, !dbg !17958
  store i16 %62, i16* %tx_buff_pos104, align 2, !dbg !17959
  %64 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17960
  %tx_buff_size = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %64, i32 0, i32 5, !dbg !17960
  %65 = load i16, i16* %tx_buff_size, align 2, !dbg !17960
  %66 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17961
  %tx_buff_size105 = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %66, i32 0, i32 5, !dbg !17962
  store i16 %65, i16* %tx_buff_size105, align 2, !dbg !17963
  %67 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17964
  %tx_desc_pos = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %67, i32 0, i32 6, !dbg !17964
  %68 = load i16, i16* %tx_desc_pos, align 2, !dbg !17964
  %69 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17965
  %tx_desc_pos106 = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %69, i32 0, i32 6, !dbg !17966
  store i16 %68, i16* %tx_desc_pos106, align 2, !dbg !17967
  %70 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17968
  %tx_desc_count = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %70, i32 0, i32 7, !dbg !17968
  %71 = load i16, i16* %tx_desc_count, align 2, !dbg !17968
  %72 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17969
  %tx_desc_count107 = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %72, i32 0, i32 7, !dbg !17970
  store i16 %71, i16* %tx_desc_count107, align 2, !dbg !17971
  %73 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17972
  %rx_buff_pos = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %73, i32 0, i32 8, !dbg !17972
  %74 = load i16, i16* %rx_buff_pos, align 2, !dbg !17972
  %75 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17973
  %rx_buff_pos108 = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %75, i32 0, i32 8, !dbg !17974
  store i16 %74, i16* %rx_buff_pos108, align 2, !dbg !17975
  %76 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17976
  %rx_buff_size = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %76, i32 0, i32 9, !dbg !17976
  %77 = load i16, i16* %rx_buff_size, align 2, !dbg !17976
  %78 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17977
  %rx_buff_size109 = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %78, i32 0, i32 9, !dbg !17978
  store i16 %77, i16* %rx_buff_size109, align 2, !dbg !17979
  %79 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17980
  %rx_desc_pos = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %79, i32 0, i32 10, !dbg !17980
  %80 = load i16, i16* %rx_desc_pos, align 2, !dbg !17980
  %81 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17981
  %rx_desc_pos110 = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %81, i32 0, i32 10, !dbg !17982
  store i16 %80, i16* %rx_desc_pos110, align 2, !dbg !17983
  %82 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17984
  %rx_desc_count = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %82, i32 0, i32 11, !dbg !17984
  %83 = load i16, i16* %rx_desc_count, align 2, !dbg !17984
  %84 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17985
  %rx_desc_count111 = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %84, i32 0, i32 11, !dbg !17986
  store i16 %83, i16* %rx_desc_count111, align 2, !dbg !17987
  %85 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17988
  %build_version = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %85, i32 0, i32 12, !dbg !17988
  %86 = load i16, i16* %build_version, align 2, !dbg !17988
  %87 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17989
  %build_version112 = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %87, i32 0, i32 12, !dbg !17990
  store i16 %86, i16* %build_version112, align 2, !dbg !17991
  %88 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17992
  %command_pos = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %88, i32 0, i32 13, !dbg !17992
  %89 = load i16, i16* %command_pos, align 2, !dbg !17992
  %90 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17993
  %command_pos113 = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %90, i32 0, i32 13, !dbg !17994
  store i16 %89, i16* %command_pos113, align 2, !dbg !17995
  %91 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17996
  %major_version = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %91, i32 0, i32 14, !dbg !17996
  %92 = load i16, i16* %major_version, align 2, !dbg !17996
  %93 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !17997
  %major_version114 = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %93, i32 0, i32 14, !dbg !17998
  store i16 %92, i16* %major_version114, align 2, !dbg !17999
  %94 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !18000
  %minor_version = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %94, i32 0, i32 15, !dbg !18000
  %95 = load i16, i16* %minor_version, align 2, !dbg !18000
  %96 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !18001
  %minor_version115 = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %96, i32 0, i32 15, !dbg !18002
  store i16 %95, i16* %minor_version115, align 2, !dbg !18003
  %97 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !18004
  %func_ctrl = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %97, i32 0, i32 16, !dbg !18004
  %98 = load i16, i16* %func_ctrl, align 2, !dbg !18004
  %99 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !18005
  %func_ctrl116 = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %99, i32 0, i32 16, !dbg !18006
  store i16 %98, i16* %func_ctrl116, align 2, !dbg !18007
  %100 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !18008
  %mac_status = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %100, i32 0, i32 17, !dbg !18008
  %101 = load i16, i16* %mac_status, align 2, !dbg !18008
  %102 = load %struct.host_info_struct*, %struct.host_info_struct** %iface, align 8, !dbg !18009
  %mac_status117 = getelementptr inbounds %struct.host_info_struct, %struct.host_info_struct* %102, i32 0, i32 17, !dbg !18010
  store i16 %101, i16* %mac_status117, align 2, !dbg !18011
  store i32 0, i32* %retval, align 4, !dbg !18012
  br label %return, !dbg !18012

return:                                           ; preds = %if.end101, %if.then96, %if.then81, %if.then66, %if.then33, %if.then24
  %103 = load i32, i32* %retval, align 4, !dbg !18013
  ret i32 %103, !dbg !18013
}

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @request_firmware(%struct.firmware**, i8*, %struct.device*) #2

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @release_firmware(%struct.firmware*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @build_wep_mib(%struct.atmel_private* %priv) #0 !dbg !18014 {
entry:
  %priv.addr = alloca %struct.atmel_private*, align 8
  %mib = alloca %struct.anon.143, align 4
  %i = alloca i32, align 4
  store %struct.atmel_private* %priv, %struct.atmel_private** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atmel_private** %priv.addr, metadata !18015, metadata !DIExpression()), !dbg !18016
  call void @llvm.dbg.declare(metadata %struct.anon.143* %mib, metadata !18017, metadata !DIExpression()), !dbg !18032
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18033, metadata !DIExpression()), !dbg !18034
  %0 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !18035
  %wep_is_on = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %0, i32 0, i32 30, !dbg !18036
  %1 = load i8, i8* %wep_is_on, align 4, !dbg !18036
  %wep_is_on1 = getelementptr inbounds %struct.anon.143, %struct.anon.143* %mib, i32 0, i32 0, !dbg !18037
  store i8 %1, i8* %wep_is_on1, align 4, !dbg !18038
  %2 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !18039
  %wep_is_on2 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %2, i32 0, i32 30, !dbg !18041
  %3 = load i8, i8* %wep_is_on2, align 4, !dbg !18041
  %tobool = icmp ne i8 %3, 0, !dbg !18039
  br i1 %tobool, label %if.then, label %if.else5, !dbg !18042

if.then:                                          ; preds = %entry
  %4 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !18043
  %wep_key_len = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %4, i32 0, i32 37, !dbg !18046
  %5 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !18047
  %default_key = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %5, i32 0, i32 31, !dbg !18048
  %6 = load i8, i8* %default_key, align 1, !dbg !18048
  %idxprom = zext i8 %6 to i64, !dbg !18043
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %wep_key_len, i64 0, i64 %idxprom, !dbg !18043
  %7 = load i32, i32* %arrayidx, align 4, !dbg !18043
  %cmp = icmp sgt i32 %7, 5, !dbg !18049
  br i1 %cmp, label %if.then3, label %if.else, !dbg !18050

if.then3:                                         ; preds = %if.then
  %encryption_level = getelementptr inbounds %struct.anon.143, %struct.anon.143* %mib, i32 0, i32 7, !dbg !18051
  store i8 2, i8* %encryption_level, align 4, !dbg !18052
  br label %if.end, !dbg !18053

if.else:                                          ; preds = %if.then
  %encryption_level4 = getelementptr inbounds %struct.anon.143, %struct.anon.143* %mib, i32 0, i32 7, !dbg !18054
  store i8 1, i8* %encryption_level4, align 4, !dbg !18055
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end7, !dbg !18056

if.else5:                                         ; preds = %entry
  %encryption_level6 = getelementptr inbounds %struct.anon.143, %struct.anon.143* %mib, i32 0, i32 7, !dbg !18057
  store i8 0, i8* %encryption_level6, align 4, !dbg !18059
  br label %if.end7

if.end7:                                          ; preds = %if.else5, %if.end
  %8 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !18060
  %default_key8 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %8, i32 0, i32 31, !dbg !18061
  %9 = load i8, i8* %default_key8, align 1, !dbg !18061
  %default_key9 = getelementptr inbounds %struct.anon.143, %struct.anon.143* %mib, i32 0, i32 1, !dbg !18062
  store i8 %9, i8* %default_key9, align 1, !dbg !18063
  %10 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !18064
  %exclude_unencrypted = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %10, i32 0, i32 32, !dbg !18065
  %11 = load i8, i8* %exclude_unencrypted, align 2, !dbg !18065
  %exclude_unencrypted10 = getelementptr inbounds %struct.anon.143, %struct.anon.143* %mib, i32 0, i32 3, !dbg !18066
  store i8 %11, i8* %exclude_unencrypted10, align 1, !dbg !18067
  store i32 0, i32* %i, align 4, !dbg !18068
  br label %for.cond, !dbg !18070

for.cond:                                         ; preds = %for.inc, %if.end7
  %12 = load i32, i32* %i, align 4, !dbg !18071
  %cmp11 = icmp slt i32 %12, 4, !dbg !18073
  br i1 %cmp11, label %for.body, label %for.end, !dbg !18074

for.body:                                         ; preds = %for.cond
  %wep_keys = getelementptr inbounds %struct.anon.143, %struct.anon.143* %mib, i32 0, i32 6, !dbg !18075
  %13 = load i32, i32* %i, align 4, !dbg !18076
  %idxprom12 = sext i32 %13 to i64, !dbg !18077
  %arrayidx13 = getelementptr [4 x [13 x i8]], [4 x [13 x i8]]* %wep_keys, i64 0, i64 %idxprom12, !dbg !18077
  %arraydecay = getelementptr inbounds [13 x i8], [13 x i8]* %arrayidx13, i64 0, i64 0, !dbg !18078
  %14 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !18079
  %wep_keys14 = getelementptr inbounds %struct.atmel_private, %struct.atmel_private* %14, i32 0, i32 36, !dbg !18080
  %15 = load i32, i32* %i, align 4, !dbg !18081
  %idxprom15 = sext i32 %15 to i64, !dbg !18079
  %arrayidx16 = getelementptr [4 x [40 x i8]], [4 x [40 x i8]]* %wep_keys14, i64 0, i64 %idxprom15, !dbg !18079
  %arraydecay17 = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx16, i64 0, i64 0, !dbg !18078
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 2 %arraydecay17, i64 13, i1 false), !dbg !18078
  br label %for.inc, !dbg !18078

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !18082
  %inc = add i32 %16, 1, !dbg !18082
  store i32 %inc, i32* %i, align 4, !dbg !18082
  br label %for.cond, !dbg !18083, !llvm.loop !18084

for.end:                                          ; preds = %for.cond
  %17 = load %struct.atmel_private*, %struct.atmel_private** %priv.addr, align 8, !dbg !18086
  %18 = bitcast %struct.anon.143* %mib to i8*, !dbg !18087
  call void @atmel_set_mib(%struct.atmel_private* %17, i8 zeroext 6, i8 zeroext 0, i8* %18, i32 68) #10, !dbg !18088
  ret void, !dbg !18089
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { alwaysinline noredzone nounwind sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noredzone }
attributes #11 = { cold noredzone }
attributes #12 = { noredzone nounwind }
attributes #13 = { noredzone nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!8884}
!llvm.module.flags = !{!8885, !8886, !8887, !8888}
!llvm.ident = !{!8889}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author332", scope: !2, file: !3, line: 75, type: !8881, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !8570, globals: !8696, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/net/wireless/atmel/atmel.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !12, !33, !40, !47, !53, !58, !64, !71, !77, !86, !94, !125, !159, !200, !207, !238, !251, !259, !265, !272, !276, !280, !287, !293, !299, !307, !315, !323, !328, !345, !359, !365, !370, !376, !382, !388, !395, !403, !409, !416, !431, !436, !449, !454, !462, !468, !8040, !8137, !8149, !8170, !8232, !8265, !8304, !8309, !8314, !8322, !8328, !8386}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !6, line: 115, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!10 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!11 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !6, line: 836, baseType: !13, size: 32, elements: !14)
!13 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!14 = !{!15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32}
!15 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!16 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!17 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!18 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!19 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!20 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!21 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!22 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!23 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!24 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!25 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!26 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!27 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!28 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!29 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!30 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!31 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!32 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !6, line: 860, baseType: !13, size: 32, elements: !34)
!34 = !{!35, !36, !37, !38, !39}
!35 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!36 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!37 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!38 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!39 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !41, line: 15, baseType: !13, size: 32, elements: !42)
!41 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!42 = !{!43, !44, !45, !46}
!43 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!44 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!45 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!46 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !48, line: 546, baseType: !13, size: 32, elements: !49)
!48 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!49 = !{!50, !51, !52}
!50 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !54, line: 65, baseType: !13, size: 32, elements: !55)
!54 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!55 = !{!56, !57}
!56 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!58 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !59, line: 16, baseType: !13, size: 32, elements: !60)
!59 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!60 = !{!61, !62, !63}
!61 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!62 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!63 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !65, line: 59, baseType: !13, size: 32, elements: !66)
!65 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!66 = !{!67, !68, !69, !70}
!67 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!68 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!69 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!70 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !72, line: 54, baseType: !13, size: 32, elements: !73)
!72 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!73 = !{!74, !75, !76}
!74 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!75 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!76 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!77 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !78, line: 296, baseType: !13, size: 32, elements: !79)
!78 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!79 = !{!80, !81, !82, !83, !84, !85}
!80 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!81 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!82 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!83 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!84 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!85 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !87, line: 9, baseType: !13, size: 32, elements: !88)
!87 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!88 = !{!89, !90, !91, !92, !93}
!89 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!93 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!94 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !95, line: 369, baseType: !13, size: 32, elements: !96)
!95 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!96 = !{!97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124}
!97 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!101 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!102 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!103 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!104 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!105 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!106 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!107 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!108 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!109 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!110 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!111 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!112 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!113 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!114 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!115 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!116 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!117 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!118 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!119 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!120 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!121 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!122 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!123 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!124 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!125 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !126, line: 170, baseType: !13, size: 32, elements: !127)
!126 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!127 = !{!128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158}
!128 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!130 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!131 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!132 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!133 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!134 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!135 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!136 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!137 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!142 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!143 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!144 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!145 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!146 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!147 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!148 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!149 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!150 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!151 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!152 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!153 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!154 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!155 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!156 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!157 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!158 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!159 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !126, line: 204, baseType: !13, size: 32, elements: !160)
!160 = !{!161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199}
!161 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!162 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!163 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!164 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!165 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!166 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!167 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!168 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!169 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!170 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!171 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!172 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!173 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!174 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!175 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!176 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!177 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!178 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!179 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!180 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!181 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!182 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!183 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!184 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!185 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!188 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!189 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!190 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!191 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!192 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!193 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!194 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!195 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!196 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!197 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!198 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!199 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!200 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !95, line: 578, baseType: !13, size: 32, elements: !201)
!201 = !{!202, !203, !204, !205, !206}
!202 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!203 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!204 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!205 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!206 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!207 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !126, line: 130, baseType: !13, size: 32, elements: !208)
!208 = !{!209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237}
!209 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!210 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!211 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!212 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!213 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!214 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!215 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!216 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!217 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!218 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!219 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!220 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!221 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!222 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!223 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!224 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!225 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!226 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!227 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!228 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!229 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!230 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!231 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!232 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!233 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!234 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!235 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!236 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!237 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !239, line: 585, baseType: !13, size: 32, elements: !240)
!239 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!240 = !{!241, !242, !243, !244, !245, !246, !247, !248, !249, !250}
!241 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!242 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!243 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!244 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!245 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!246 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!247 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!248 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!249 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!250 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!251 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !239, line: 602, baseType: !13, size: 32, elements: !252)
!252 = !{!253, !254, !255, !256, !257, !258}
!253 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!254 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!255 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!256 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!257 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!258 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !239, line: 615, baseType: !13, size: 32, elements: !260)
!260 = !{!261, !262, !263, !264}
!261 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!262 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!263 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!264 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!265 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !239, line: 626, baseType: !13, size: 32, elements: !266)
!266 = !{!267, !268, !269, !270, !271}
!267 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!268 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!269 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!270 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!271 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!272 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !239, line: 638, baseType: !13, size: 32, elements: !273)
!273 = !{!274, !275}
!274 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!275 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!276 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !239, line: 647, baseType: !13, size: 32, elements: !277)
!277 = !{!278, !279}
!278 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!279 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!280 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !281, line: 54, baseType: !13, size: 32, elements: !282)
!281 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!282 = !{!283, !284, !285, !286}
!283 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!284 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!285 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!286 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!287 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !288, line: 26, baseType: !13, size: 32, elements: !289)
!288 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!289 = !{!290, !291, !292}
!290 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!291 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!292 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!293 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cfg80211_signal_type", file: !294, line: 2349, baseType: !13, size: 32, elements: !295)
!294 = !DIFile(filename: "./include/net/cfg80211.h", directory: "/home/lizy2001/genbc/linux")
!295 = !{!296, !297, !298}
!296 = !DIEnumerator(name: "CFG80211_SIGNAL_TYPE_NONE", value: 0, isUnsigned: true)
!297 = !DIEnumerator(name: "CFG80211_SIGNAL_TYPE_MBM", value: 1, isUnsigned: true)
!298 = !DIEnumerator(name: "CFG80211_SIGNAL_TYPE_UNSPEC", value: 2, isUnsigned: true)
!299 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !300, line: 48, baseType: !13, size: 32, elements: !301)
!300 = !DIFile(filename: "./include/uapi/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!301 = !{!302, !303, !304, !305, !306}
!302 = !DIEnumerator(name: "SS_FREE", value: 0, isUnsigned: true)
!303 = !DIEnumerator(name: "SS_UNCONNECTED", value: 1, isUnsigned: true)
!304 = !DIEnumerator(name: "SS_CONNECTING", value: 2, isUnsigned: true)
!305 = !DIEnumerator(name: "SS_CONNECTED", value: 3, isUnsigned: true)
!306 = !DIEnumerator(name: "SS_DISCONNECTING", value: 4, isUnsigned: true)
!307 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "nl80211_bss_scan_width", file: !308, line: 4548, baseType: !13, size: 32, elements: !309)
!308 = !DIFile(filename: "./include/uapi/linux/nl80211.h", directory: "/home/lizy2001/genbc/linux")
!309 = !{!310, !311, !312, !313, !314}
!310 = !DIEnumerator(name: "NL80211_BSS_CHAN_WIDTH_20", value: 0, isUnsigned: true)
!311 = !DIEnumerator(name: "NL80211_BSS_CHAN_WIDTH_10", value: 1, isUnsigned: true)
!312 = !DIEnumerator(name: "NL80211_BSS_CHAN_WIDTH_5", value: 2, isUnsigned: true)
!313 = !DIEnumerator(name: "NL80211_BSS_CHAN_WIDTH_1", value: 3, isUnsigned: true)
!314 = !DIEnumerator(name: "NL80211_BSS_CHAN_WIDTH_2", value: 4, isUnsigned: true)
!315 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "nl80211_band", file: !308, line: 4852, baseType: !13, size: 32, elements: !316)
!316 = !{!317, !318, !319, !320, !321, !322}
!317 = !DIEnumerator(name: "NL80211_BAND_2GHZ", value: 0, isUnsigned: true)
!318 = !DIEnumerator(name: "NL80211_BAND_5GHZ", value: 1, isUnsigned: true)
!319 = !DIEnumerator(name: "NL80211_BAND_60GHZ", value: 2, isUnsigned: true)
!320 = !DIEnumerator(name: "NL80211_BAND_6GHZ", value: 3, isUnsigned: true)
!321 = !DIEnumerator(name: "NL80211_BAND_S1GHZ", value: 4, isUnsigned: true)
!322 = !DIEnumerator(name: "NUM_NL80211_BANDS", value: 5, isUnsigned: true)
!323 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "nl80211_dfs_state", file: !308, line: 6172, baseType: !13, size: 32, elements: !324)
!324 = !{!325, !326, !327}
!325 = !DIEnumerator(name: "NL80211_DFS_USABLE", value: 0, isUnsigned: true)
!326 = !DIEnumerator(name: "NL80211_DFS_UNAVAILABLE", value: 1, isUnsigned: true)
!327 = !DIEnumerator(name: "NL80211_DFS_AVAILABLE", value: 2, isUnsigned: true)
!328 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "nl80211_iftype", file: !308, line: 3111, baseType: !13, size: 32, elements: !329)
!329 = !{!330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344}
!330 = !DIEnumerator(name: "NL80211_IFTYPE_UNSPECIFIED", value: 0, isUnsigned: true)
!331 = !DIEnumerator(name: "NL80211_IFTYPE_ADHOC", value: 1, isUnsigned: true)
!332 = !DIEnumerator(name: "NL80211_IFTYPE_STATION", value: 2, isUnsigned: true)
!333 = !DIEnumerator(name: "NL80211_IFTYPE_AP", value: 3, isUnsigned: true)
!334 = !DIEnumerator(name: "NL80211_IFTYPE_AP_VLAN", value: 4, isUnsigned: true)
!335 = !DIEnumerator(name: "NL80211_IFTYPE_WDS", value: 5, isUnsigned: true)
!336 = !DIEnumerator(name: "NL80211_IFTYPE_MONITOR", value: 6, isUnsigned: true)
!337 = !DIEnumerator(name: "NL80211_IFTYPE_MESH_POINT", value: 7, isUnsigned: true)
!338 = !DIEnumerator(name: "NL80211_IFTYPE_P2P_CLIENT", value: 8, isUnsigned: true)
!339 = !DIEnumerator(name: "NL80211_IFTYPE_P2P_GO", value: 9, isUnsigned: true)
!340 = !DIEnumerator(name: "NL80211_IFTYPE_P2P_DEVICE", value: 10, isUnsigned: true)
!341 = !DIEnumerator(name: "NL80211_IFTYPE_OCB", value: 11, isUnsigned: true)
!342 = !DIEnumerator(name: "NL80211_IFTYPE_NAN", value: 12, isUnsigned: true)
!343 = !DIEnumerator(name: "NUM_NL80211_IFTYPES", value: 13, isUnsigned: true)
!344 = !DIEnumerator(name: "NL80211_IFTYPE_MAX", value: 12, isUnsigned: true)
!345 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ieee80211_edmg_bw_config", file: !294, line: 412, baseType: !13, size: 32, elements: !346)
!346 = !{!347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358}
!347 = !DIEnumerator(name: "IEEE80211_EDMG_BW_CONFIG_4", value: 4, isUnsigned: true)
!348 = !DIEnumerator(name: "IEEE80211_EDMG_BW_CONFIG_5", value: 5, isUnsigned: true)
!349 = !DIEnumerator(name: "IEEE80211_EDMG_BW_CONFIG_6", value: 6, isUnsigned: true)
!350 = !DIEnumerator(name: "IEEE80211_EDMG_BW_CONFIG_7", value: 7, isUnsigned: true)
!351 = !DIEnumerator(name: "IEEE80211_EDMG_BW_CONFIG_8", value: 8, isUnsigned: true)
!352 = !DIEnumerator(name: "IEEE80211_EDMG_BW_CONFIG_9", value: 9, isUnsigned: true)
!353 = !DIEnumerator(name: "IEEE80211_EDMG_BW_CONFIG_10", value: 10, isUnsigned: true)
!354 = !DIEnumerator(name: "IEEE80211_EDMG_BW_CONFIG_11", value: 11, isUnsigned: true)
!355 = !DIEnumerator(name: "IEEE80211_EDMG_BW_CONFIG_12", value: 12, isUnsigned: true)
!356 = !DIEnumerator(name: "IEEE80211_EDMG_BW_CONFIG_13", value: 13, isUnsigned: true)
!357 = !DIEnumerator(name: "IEEE80211_EDMG_BW_CONFIG_14", value: 14, isUnsigned: true)
!358 = !DIEnumerator(name: "IEEE80211_EDMG_BW_CONFIG_15", value: 15, isUnsigned: true)
!359 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "nl80211_reg_initiator", file: !308, line: 3856, baseType: !13, size: 32, elements: !360)
!360 = !{!361, !362, !363, !364}
!361 = !DIEnumerator(name: "NL80211_REGDOM_SET_BY_CORE", value: 0, isUnsigned: true)
!362 = !DIEnumerator(name: "NL80211_REGDOM_SET_BY_USER", value: 1, isUnsigned: true)
!363 = !DIEnumerator(name: "NL80211_REGDOM_SET_BY_DRIVER", value: 2, isUnsigned: true)
!364 = !DIEnumerator(name: "NL80211_REGDOM_SET_BY_COUNTRY_IE", value: 3, isUnsigned: true)
!365 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "nl80211_user_reg_hint_type", file: !308, line: 4067, baseType: !13, size: 32, elements: !366)
!366 = !{!367, !368, !369}
!367 = !DIEnumerator(name: "NL80211_USER_REG_HINT_USER", value: 0, isUnsigned: true)
!368 = !DIEnumerator(name: "NL80211_USER_REG_HINT_CELL_BASE", value: 1, isUnsigned: true)
!369 = !DIEnumerator(name: "NL80211_USER_REG_HINT_INDOOR", value: 2, isUnsigned: true)
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "nl80211_dfs_regions", file: !308, line: 4043, baseType: !13, size: 32, elements: !371)
!371 = !{!372, !373, !374, !375}
!372 = !DIEnumerator(name: "NL80211_DFS_UNSET", value: 0, isUnsigned: true)
!373 = !DIEnumerator(name: "NL80211_DFS_FCC", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "NL80211_DFS_ETSI", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "NL80211_DFS_JP", value: 3, isUnsigned: true)
!376 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "environment_cap", file: !377, line: 31, baseType: !13, size: 32, elements: !378)
!377 = !DIFile(filename: "./include/net/regulatory.h", directory: "/home/lizy2001/genbc/linux")
!378 = !{!379, !380, !381}
!379 = !DIEnumerator(name: "ENVIRON_ANY", value: 0, isUnsigned: true)
!380 = !DIEnumerator(name: "ENVIRON_INDOOR", value: 1, isUnsigned: true)
!381 = !DIEnumerator(name: "ENVIRON_OUTDOOR", value: 2, isUnsigned: true)
!382 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !383, line: 44, baseType: !13, size: 32, elements: !384)
!383 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!384 = !{!385, !386, !387}
!385 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!386 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!387 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!388 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !389, line: 343, baseType: !13, size: 32, elements: !390)
!389 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!390 = !{!391, !392, !393, !394}
!391 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!392 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!393 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!394 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!395 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !396, line: 524, baseType: !13, size: 32, elements: !397)
!396 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!397 = !{!398, !399, !400, !401, !402}
!398 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!399 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!400 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!401 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!402 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!403 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !396, line: 502, baseType: !13, size: 32, elements: !404)
!404 = !{!405, !406, !407, !408}
!405 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!406 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!407 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!408 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!409 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ieee80211_bss_type", file: !294, line: 224, baseType: !13, size: 32, elements: !410)
!410 = !{!411, !412, !413, !414, !415}
!411 = !DIEnumerator(name: "IEEE80211_BSS_TYPE_ESS", value: 0, isUnsigned: true)
!412 = !DIEnumerator(name: "IEEE80211_BSS_TYPE_PBSS", value: 1, isUnsigned: true)
!413 = !DIEnumerator(name: "IEEE80211_BSS_TYPE_IBSS", value: 2, isUnsigned: true)
!414 = !DIEnumerator(name: "IEEE80211_BSS_TYPE_MBSS", value: 3, isUnsigned: true)
!415 = !DIEnumerator(name: "IEEE80211_BSS_TYPE_ANY", value: 4, isUnsigned: true)
!416 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "nl80211_chan_width", file: !308, line: 4521, baseType: !13, size: 32, elements: !417)
!417 = !{!418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430}
!418 = !DIEnumerator(name: "NL80211_CHAN_WIDTH_20_NOHT", value: 0, isUnsigned: true)
!419 = !DIEnumerator(name: "NL80211_CHAN_WIDTH_20", value: 1, isUnsigned: true)
!420 = !DIEnumerator(name: "NL80211_CHAN_WIDTH_40", value: 2, isUnsigned: true)
!421 = !DIEnumerator(name: "NL80211_CHAN_WIDTH_80", value: 3, isUnsigned: true)
!422 = !DIEnumerator(name: "NL80211_CHAN_WIDTH_80P80", value: 4, isUnsigned: true)
!423 = !DIEnumerator(name: "NL80211_CHAN_WIDTH_160", value: 5, isUnsigned: true)
!424 = !DIEnumerator(name: "NL80211_CHAN_WIDTH_5", value: 6, isUnsigned: true)
!425 = !DIEnumerator(name: "NL80211_CHAN_WIDTH_10", value: 7, isUnsigned: true)
!426 = !DIEnumerator(name: "NL80211_CHAN_WIDTH_1", value: 8, isUnsigned: true)
!427 = !DIEnumerator(name: "NL80211_CHAN_WIDTH_2", value: 9, isUnsigned: true)
!428 = !DIEnumerator(name: "NL80211_CHAN_WIDTH_4", value: 10, isUnsigned: true)
!429 = !DIEnumerator(name: "NL80211_CHAN_WIDTH_8", value: 11, isUnsigned: true)
!430 = !DIEnumerator(name: "NL80211_CHAN_WIDTH_16", value: 12, isUnsigned: true)
!431 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "nl80211_key_mode", file: !308, line: 4491, baseType: !13, size: 32, elements: !432)
!432 = !{!433, !434, !435}
!433 = !DIEnumerator(name: "NL80211_KEY_RX_TX", value: 0, isUnsigned: true)
!434 = !DIEnumerator(name: "NL80211_KEY_NO_TX", value: 1, isUnsigned: true)
!435 = !DIEnumerator(name: "NL80211_KEY_SET_TX", value: 2, isUnsigned: true)
!436 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "nl80211_auth_type", file: !308, line: 4672, baseType: !13, size: 32, elements: !437)
!437 = !{!438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448}
!438 = !DIEnumerator(name: "NL80211_AUTHTYPE_OPEN_SYSTEM", value: 0, isUnsigned: true)
!439 = !DIEnumerator(name: "NL80211_AUTHTYPE_SHARED_KEY", value: 1, isUnsigned: true)
!440 = !DIEnumerator(name: "NL80211_AUTHTYPE_FT", value: 2, isUnsigned: true)
!441 = !DIEnumerator(name: "NL80211_AUTHTYPE_NETWORK_EAP", value: 3, isUnsigned: true)
!442 = !DIEnumerator(name: "NL80211_AUTHTYPE_SAE", value: 4, isUnsigned: true)
!443 = !DIEnumerator(name: "NL80211_AUTHTYPE_FILS_SK", value: 5, isUnsigned: true)
!444 = !DIEnumerator(name: "NL80211_AUTHTYPE_FILS_SK_PFS", value: 6, isUnsigned: true)
!445 = !DIEnumerator(name: "NL80211_AUTHTYPE_FILS_PK", value: 7, isUnsigned: true)
!446 = !DIEnumerator(name: "__NL80211_AUTHTYPE_NUM", value: 8, isUnsigned: true)
!447 = !DIEnumerator(name: "NL80211_AUTHTYPE_MAX", value: 7, isUnsigned: true)
!448 = !DIEnumerator(name: "NL80211_AUTHTYPE_AUTOMATIC", value: 8, isUnsigned: true)
!449 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "nl80211_mfp", file: !308, line: 4709, baseType: !13, size: 32, elements: !450)
!450 = !{!451, !452, !453}
!451 = !DIEnumerator(name: "NL80211_MFP_NO", value: 0, isUnsigned: true)
!452 = !DIEnumerator(name: "NL80211_MFP_REQUIRED", value: 1, isUnsigned: true)
!453 = !DIEnumerator(name: "NL80211_MFP_OPTIONAL", value: 2, isUnsigned: true)
!454 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "nl80211_bss_select_attr", file: !308, line: 6321, baseType: !13, size: 32, elements: !455)
!455 = !{!456, !457, !458, !459, !460, !461}
!456 = !DIEnumerator(name: "__NL80211_BSS_SELECT_ATTR_INVALID", value: 0, isUnsigned: true)
!457 = !DIEnumerator(name: "NL80211_BSS_SELECT_ATTR_RSSI", value: 1, isUnsigned: true)
!458 = !DIEnumerator(name: "NL80211_BSS_SELECT_ATTR_BAND_PREF", value: 2, isUnsigned: true)
!459 = !DIEnumerator(name: "NL80211_BSS_SELECT_ATTR_RSSI_ADJUST", value: 3, isUnsigned: true)
!460 = !DIEnumerator(name: "__NL80211_BSS_SELECT_ATTR_AFTER_LAST", value: 4, isUnsigned: true)
!461 = !DIEnumerator(name: "NL80211_BSS_SELECT_ATTR_MAX", value: 3, isUnsigned: true)
!462 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !6, line: 423, baseType: !13, size: 32, elements: !463)
!463 = !{!464, !465, !466, !467}
!464 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!465 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!466 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!467 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!468 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !469, file: !6, line: 2085, baseType: !13, size: 32, elements: !8130)
!469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !6, line: 1858, size: 15808, elements: !470)
!470 = !{!471, !476, !499, !516, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !533, !541, !542, !543, !544, !545, !546, !547, !548, !549, !575, !585, !586, !587, !592, !593, !711, !736, !5823, !6339, !6343, !6383, !6384, !6385, !6386, !6387, !6388, !6389, !6390, !6391, !6392, !6393, !6394, !6395, !6396, !6397, !6398, !6399, !6400, !6401, !6402, !6403, !6404, !6405, !6406, !6407, !6408, !6409, !6414, !6415, !6416, !6688, !6689, !6690, !6691, !6694, !6697, !6700, !7956, !7959, !7960, !7973, !7974, !7975, !7976, !7977, !7978, !7985, !7986, !8020, !8021, !8022, !8023, !8024, !8025, !8026, !8027, !8028, !8031, !8032, !8033, !8034, !8035, !8036, !8037, !8038, !8039, !8044, !8045, !8046, !8047, !8084, !8085, !8087, !8088, !8092, !8093, !8094, !8095, !8101, !8103, !8106, !8109, !8111, !8112, !8113, !8114, !8115, !8119, !8122}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !469, file: !6, line: 1859, baseType: !472, size: 128)
!472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 128, elements: !474)
!473 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!474 = !{!475}
!475 = !DISubrange(count: 16)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !469, file: !6, line: 1860, baseType: !477, size: 64, offset: 128)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !6, line: 938, size: 384, elements: !479)
!479 = !{!480, !488, !494, !496}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !478, file: !6, line: 939, baseType: !481, size: 128)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !482, line: 186, size: 128, elements: !483)
!482 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!483 = !{!484, !486}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !481, file: !482, line: 187, baseType: !485, size: 64)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !481, file: !482, line: 187, baseType: !487, size: 64, offset: 64)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !478, file: !6, line: 940, baseType: !489, size: 128, offset: 128)
!489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !482, line: 178, size: 128, elements: !490)
!490 = !{!491, !493}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !489, file: !482, line: 179, baseType: !492, size: 64)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !489, file: !482, line: 179, baseType: !492, size: 64, offset: 64)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !478, file: !6, line: 941, baseType: !495, size: 64, offset: 256)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !478, file: !6, line: 942, baseType: !497, size: 64, offset: 320)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !469, file: !6, line: 1861, baseType: !500, size: 64, offset: 192)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !6, line: 930, size: 128, elements: !502)
!502 = !{!503, !512}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !501, file: !6, line: 931, baseType: !504, size: 128, align: 64)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !482, line: 216, size: 128, align: 64, elements: !505)
!505 = !{!506, !508}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !504, file: !482, line: 217, baseType: !507, size: 64)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !504, file: !482, line: 218, baseType: !509, size: 64, offset: 64)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!510 = !DISubroutineType(types: !511)
!511 = !{null, !507}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !501, file: !6, line: 932, baseType: !513, offset: 128)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, elements: !514)
!514 = !{!515}
!515 = !DISubrange(count: -1)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !469, file: !6, line: 1866, baseType: !517, size: 64, offset: 256)
!517 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !469, file: !6, line: 1867, baseType: !517, size: 64, offset: 320)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !469, file: !6, line: 1868, baseType: !517, size: 64, offset: 384)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !469, file: !6, line: 1869, baseType: !7, size: 32, offset: 448)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !469, file: !6, line: 1877, baseType: !517, size: 64, offset: 512)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !469, file: !6, line: 1879, baseType: !489, size: 128, offset: 576)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !469, file: !6, line: 1880, baseType: !489, size: 128, offset: 704)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !469, file: !6, line: 1881, baseType: !489, size: 128, offset: 832)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !469, file: !6, line: 1882, baseType: !489, size: 128, offset: 960)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !469, file: !6, line: 1883, baseType: !489, size: 128, offset: 1088)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !469, file: !6, line: 1884, baseType: !489, size: 128, offset: 1216)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !469, file: !6, line: 1889, baseType: !529, size: 256, offset: 1344)
!529 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !469, file: !6, line: 1886, size: 256, elements: !530)
!530 = !{!531, !532}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !529, file: !6, line: 1887, baseType: !489, size: 128)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !529, file: !6, line: 1888, baseType: !489, size: 128, offset: 128)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !469, file: !6, line: 1891, baseType: !534, size: 64, offset: 1600)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !535, line: 12, baseType: !536)
!535 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !537, line: 23, baseType: !538)
!537 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !539, line: 31, baseType: !540)
!539 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!540 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !469, file: !6, line: 1892, baseType: !534, size: 64, offset: 1664)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !469, file: !6, line: 1893, baseType: !534, size: 64, offset: 1728)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !469, file: !6, line: 1894, baseType: !534, size: 64, offset: 1792)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !469, file: !6, line: 1895, baseType: !534, size: 64, offset: 1856)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !469, file: !6, line: 1896, baseType: !534, size: 64, offset: 1920)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !469, file: !6, line: 1897, baseType: !534, size: 64, offset: 1984)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !469, file: !6, line: 1899, baseType: !7, size: 32, offset: 2048)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !469, file: !6, line: 1900, baseType: !7, size: 32, offset: 2080)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !469, file: !6, line: 1902, baseType: !550, size: 1472, offset: 2112)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !6, line: 169, size: 1472, elements: !551)
!551 = !{!552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !550, file: !6, line: 170, baseType: !517, size: 64)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !550, file: !6, line: 171, baseType: !517, size: 64, offset: 64)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !550, file: !6, line: 172, baseType: !517, size: 64, offset: 128)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !550, file: !6, line: 173, baseType: !517, size: 64, offset: 192)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !550, file: !6, line: 174, baseType: !517, size: 64, offset: 256)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !550, file: !6, line: 175, baseType: !517, size: 64, offset: 320)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !550, file: !6, line: 176, baseType: !517, size: 64, offset: 384)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !550, file: !6, line: 177, baseType: !517, size: 64, offset: 448)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !550, file: !6, line: 178, baseType: !517, size: 64, offset: 512)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !550, file: !6, line: 179, baseType: !517, size: 64, offset: 576)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !550, file: !6, line: 180, baseType: !517, size: 64, offset: 640)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !550, file: !6, line: 181, baseType: !517, size: 64, offset: 704)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !550, file: !6, line: 182, baseType: !517, size: 64, offset: 768)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !550, file: !6, line: 183, baseType: !517, size: 64, offset: 832)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !550, file: !6, line: 184, baseType: !517, size: 64, offset: 896)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !550, file: !6, line: 185, baseType: !517, size: 64, offset: 960)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !550, file: !6, line: 186, baseType: !517, size: 64, offset: 1024)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !550, file: !6, line: 187, baseType: !517, size: 64, offset: 1088)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !550, file: !6, line: 188, baseType: !517, size: 64, offset: 1152)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !550, file: !6, line: 189, baseType: !517, size: 64, offset: 1216)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !550, file: !6, line: 190, baseType: !517, size: 64, offset: 1280)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !550, file: !6, line: 191, baseType: !517, size: 64, offset: 1344)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !550, file: !6, line: 192, baseType: !517, size: 64, offset: 1408)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !469, file: !6, line: 1904, baseType: !576, size: 64, offset: 3584)
!576 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !577, line: 13, baseType: !578)
!577 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !482, line: 175, baseType: !579)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !482, line: 173, size: 64, elements: !580)
!580 = !{!581}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !579, file: !482, line: 174, baseType: !582, size: 64)
!582 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !537, line: 22, baseType: !583)
!583 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !539, line: 30, baseType: !584)
!584 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !469, file: !6, line: 1905, baseType: !576, size: 64, offset: 3648)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !469, file: !6, line: 1906, baseType: !576, size: 64, offset: 3712)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !469, file: !6, line: 1909, baseType: !588, size: 32, offset: 3776)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !482, line: 168, baseType: !589)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !482, line: 166, size: 32, elements: !590)
!590 = !{!591}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !589, file: !482, line: 167, baseType: !7, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !469, file: !6, line: 1910, baseType: !588, size: 32, offset: 3808)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !469, file: !6, line: 1913, baseType: !594, size: 64, offset: 3840)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !597, line: 324, size: 320, elements: !598)
!597 = !DIFile(filename: "./include/net/iw_handler.h", directory: "/home/lizy2001/genbc/linux")
!598 = !{!599, !677, !678, !679, !680, !681, !690}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "standard", scope: !596, file: !597, line: 329, baseType: !600, size: 64)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !602)
!602 = !DIDerivedType(tag: DW_TAG_typedef, name: "iw_handler", file: !597, line: 315, baseType: !603)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!604 = !DISubroutineType(types: !605)
!605 = !{!7, !495, !606, !613, !676}
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iw_request_info", file: !597, line: 304, size: 32, elements: !608)
!608 = !{!609, !612}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !607, file: !597, line: 305, baseType: !610, size: 16)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !539, line: 24, baseType: !611)
!611 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !607, file: !597, line: 306, baseType: !610, size: 16, offset: 16)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "iwreq_data", file: !615, line: 902, size: 128, elements: !616)
!615 = !DIFile(filename: "./include/uapi/linux/wireless.h", directory: "/home/lizy2001/genbc/linux")
!616 = !{!617, !618, !625, !635, !644, !645, !646, !647, !648, !649, !651, !652, !653, !654, !661, !673, !674, !675}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !614, file: !615, line: 904, baseType: !472, size: 128)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "essid", scope: !614, file: !615, line: 908, baseType: !619, size: 128)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iw_point", file: !615, line: 691, size: 128, elements: !620)
!620 = !{!621, !623, !624}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !619, file: !615, line: 692, baseType: !622, size: 64)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !619, file: !615, line: 693, baseType: !610, size: 16, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !619, file: !615, line: 694, baseType: !610, size: 16, offset: 80)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "nwid", scope: !614, file: !615, line: 909, baseType: !626, size: 64)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iw_param", file: !615, line: 680, size: 64, elements: !627)
!627 = !{!628, !630, !633, !634}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !626, file: !615, line: 681, baseType: !629, size: 32)
!629 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !539, line: 26, baseType: !7)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "fixed", scope: !626, file: !615, line: 682, baseType: !631, size: 8, offset: 32)
!631 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !539, line: 21, baseType: !632)
!632 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "disabled", scope: !626, file: !615, line: 683, baseType: !631, size: 8, offset: 40)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !626, file: !615, line: 684, baseType: !610, size: 16, offset: 48)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !614, file: !615, line: 910, baseType: !636, size: 64)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iw_freq", file: !615, line: 706, size: 64, elements: !637)
!637 = !{!638, !639, !642, !643}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !636, file: !615, line: 707, baseType: !629, size: 32)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !636, file: !615, line: 708, baseType: !640, size: 16, offset: 32)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !539, line: 23, baseType: !641)
!641 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !636, file: !615, line: 709, baseType: !631, size: 8, offset: 48)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !636, file: !615, line: 710, baseType: !631, size: 8, offset: 56)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "sens", scope: !614, file: !615, line: 914, baseType: !626, size: 64)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "bitrate", scope: !614, file: !615, line: 915, baseType: !626, size: 64)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "txpower", scope: !614, file: !615, line: 916, baseType: !626, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "rts", scope: !614, file: !615, line: 917, baseType: !626, size: 64)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "frag", scope: !614, file: !615, line: 918, baseType: !626, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !614, file: !615, line: 919, baseType: !650, size: 32)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !539, line: 27, baseType: !13)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "retry", scope: !614, file: !615, line: 920, baseType: !626, size: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !614, file: !615, line: 922, baseType: !619, size: 128)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !614, file: !615, line: 923, baseType: !626, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "qual", scope: !614, file: !615, line: 924, baseType: !655, size: 32)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iw_quality", file: !615, line: 716, size: 32, elements: !656)
!656 = !{!657, !658, !659, !660}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "qual", scope: !655, file: !615, line: 717, baseType: !631, size: 8)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !655, file: !615, line: 719, baseType: !631, size: 8, offset: 8)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "noise", scope: !655, file: !615, line: 720, baseType: !631, size: 8, offset: 16)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "updated", scope: !655, file: !615, line: 721, baseType: !631, size: 8, offset: 24)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "ap_addr", scope: !614, file: !615, line: 926, baseType: !662, size: 128)
!662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !663, line: 32, size: 128, elements: !664)
!663 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!664 = !{!665, !669}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !662, file: !663, line: 33, baseType: !666, size: 16)
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !663, line: 26, baseType: !667)
!667 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !668, line: 10, baseType: !611)
!668 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!669 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !662, file: !663, line: 34, baseType: !670, size: 112, offset: 16)
!670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 112, elements: !671)
!671 = !{!672}
!672 = !DISubrange(count: 14)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !614, file: !615, line: 927, baseType: !662, size: 128)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !614, file: !615, line: 929, baseType: !626, size: 64)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !614, file: !615, line: 930, baseType: !619, size: 128)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "num_standard", scope: !596, file: !597, line: 332, baseType: !610, size: 16, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "num_private", scope: !596, file: !597, line: 335, baseType: !610, size: 16, offset: 80)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "num_private_args", scope: !596, file: !597, line: 337, baseType: !610, size: 16, offset: 96)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !596, file: !597, line: 341, baseType: !600, size: 64, offset: 128)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "private_args", scope: !596, file: !597, line: 346, baseType: !682, size: 64, offset: 192)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iw_priv_args", file: !615, line: 1063, size: 192, elements: !685)
!685 = !{!686, !687, !688, !689}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !684, file: !615, line: 1064, baseType: !650, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "set_args", scope: !684, file: !615, line: 1065, baseType: !610, size: 16, offset: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "get_args", scope: !684, file: !615, line: 1066, baseType: !610, size: 16, offset: 48)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !684, file: !615, line: 1067, baseType: !472, size: 128, offset: 64)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "get_wireless_stats", scope: !596, file: !597, line: 352, baseType: !691, size: 64, offset: 256)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DISubroutineType(types: !693)
!693 = !{!694, !495}
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iw_statistics", file: !615, line: 881, size: 256, elements: !696)
!696 = !{!697, !698, !699, !707}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !695, file: !615, line: 882, baseType: !610, size: 16)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "qual", scope: !695, file: !615, line: 885, baseType: !655, size: 32, offset: 16)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "discard", scope: !695, file: !615, line: 887, baseType: !700, size: 160, offset: 64)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iw_discarded", file: !615, line: 731, size: 160, elements: !701)
!701 = !{!702, !703, !704, !705, !706}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "nwid", scope: !700, file: !615, line: 732, baseType: !650, size: 32)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !700, file: !615, line: 733, baseType: !650, size: 32, offset: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "fragment", scope: !700, file: !615, line: 734, baseType: !650, size: 32, offset: 64)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !700, file: !615, line: 735, baseType: !650, size: 32, offset: 96)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "misc", scope: !700, file: !615, line: 736, baseType: !650, size: 32, offset: 128)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "miss", scope: !695, file: !615, line: 888, baseType: !708, size: 32, offset: 224)
!708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iw_missed", file: !615, line: 743, size: 32, elements: !709)
!709 = !{!710}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "beacon", scope: !708, file: !615, line: 744, baseType: !650, size: 32)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !469, file: !6, line: 1914, baseType: !712, size: 64, offset: 3904)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !597, line: 420, size: 128, elements: !714)
!714 = !{!715, !733}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "spy_data", scope: !713, file: !597, line: 422, baseType: !716, size: 64)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iw_spy_data", file: !597, line: 396, size: 800, elements: !718)
!718 = !{!719, !720, !726, !729, !730, !731}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "spy_number", scope: !717, file: !597, line: 398, baseType: !7, size: 32)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "spy_address", scope: !717, file: !597, line: 399, baseType: !721, size: 384, offset: 32)
!721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !722, size: 384, elements: !723)
!722 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_char", file: !482, line: 79, baseType: !632)
!723 = !{!724, !725}
!724 = !DISubrange(count: 8)
!725 = !DISubrange(count: 6)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "spy_stat", scope: !717, file: !597, line: 400, baseType: !727, size: 256, offset: 416)
!727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !655, size: 256, elements: !728)
!728 = !{!724}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "spy_thr_low", scope: !717, file: !597, line: 402, baseType: !655, size: 32, offset: 672)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "spy_thr_high", scope: !717, file: !597, line: 403, baseType: !655, size: 32, offset: 704)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "spy_thr_under", scope: !717, file: !597, line: 404, baseType: !732, size: 64, offset: 736)
!732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !722, size: 64, elements: !728)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "libipw", scope: !713, file: !597, line: 424, baseType: !734, size: 64, offset: 64)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DICompositeType(tag: DW_TAG_structure_type, name: "libipw_device", file: !597, line: 418, flags: DIFlagFwdDecl)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !469, file: !6, line: 1916, baseType: !737, size: 64, offset: 3968)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !739)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !6, line: 1283, size: 4416, elements: !740)
!740 = !{!741, !745, !749, !750, !751, !908, !912, !917, !921, !922, !926, !927, !1038, !1043, !1047, !1053, !1057, !1089, !1097, !1101, !1106, !1110, !1111, !1117, !1121, !1125, !1129, !1130, !1152, !1156, !1171, !1182, !1186, !1195, !1199, !1200, !1204, !1225, !1229, !1233, !1237, !1241, !1248, !1252, !1269, !1273, !1322, !1326, !1331, !1335, !1339, !1343, !1353, !1354, !1362, !1368, !1369, !1373, !1377, !1381, !1385, !1386, !1390, !1391, !5783, !5803, !5807, !5813, !5819}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !739, file: !6, line: 1284, baseType: !742, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DISubroutineType(types: !744)
!744 = !{!7, !495}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !739, file: !6, line: 1285, baseType: !746, size: 64, offset: 64)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DISubroutineType(types: !748)
!748 = !{null, !495}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !739, file: !6, line: 1286, baseType: !742, size: 64, offset: 128)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !739, file: !6, line: 1287, baseType: !742, size: 64, offset: 192)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !739, file: !6, line: 1288, baseType: !752, size: 64, offset: 256)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DISubroutineType(types: !754)
!754 = !{!755, !756, !495}
!755 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !6, line: 120, baseType: !5)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !758, line: 713, size: 1600, elements: !759)
!758 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!759 = !{!760, !782, !789, !796, !800, !812, !813, !814, !815, !816, !817, !821, !822, !823, !824, !825, !826, !827, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !866, !867, !868, !869, !871, !872, !877, !882, !887, !888, !889, !890, !891, !892, !893, !894, !895, !897, !898, !900, !901, !902}
!760 = !DIDerivedType(tag: DW_TAG_member, scope: !757, file: !758, line: 714, baseType: !761, size: 192)
!761 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !757, file: !758, line: 714, size: 192, elements: !762)
!762 = !{!763, !773, !781}
!763 = !DIDerivedType(tag: DW_TAG_member, scope: !761, file: !758, line: 715, baseType: !764, size: 192)
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !761, file: !758, line: 715, size: 192, elements: !765)
!765 = !{!766, !767, !768}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !764, file: !758, line: 717, baseType: !756, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !764, file: !758, line: 718, baseType: !756, size: 64, offset: 64)
!768 = !DIDerivedType(tag: DW_TAG_member, scope: !764, file: !758, line: 720, baseType: !769, size: 64, offset: 128)
!769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !764, file: !758, line: 720, size: 64, elements: !770)
!770 = !{!771, !772}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !769, file: !758, line: 721, baseType: !495, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !769, file: !758, line: 726, baseType: !517, size: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !761, file: !758, line: 729, baseType: !774, size: 192, align: 64)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !775, line: 24, size: 192, align: 64, elements: !776)
!775 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!776 = !{!777, !778, !780}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !774, file: !775, line: 25, baseType: !517, size: 64)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !774, file: !775, line: 26, baseType: !779, size: 64, offset: 64)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !774, file: !775, line: 27, baseType: !779, size: 64, offset: 128)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !761, file: !758, line: 730, baseType: !489, size: 128)
!782 = !DIDerivedType(tag: DW_TAG_member, scope: !757, file: !758, line: 733, baseType: !783, size: 64, offset: 192)
!783 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !757, file: !758, line: 733, size: 64, elements: !784)
!784 = !{!785, !788}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !783, file: !758, line: 734, baseType: !786, size: 64)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !288, line: 19, flags: DIFlagFwdDecl)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !783, file: !758, line: 735, baseType: !7, size: 32)
!789 = !DIDerivedType(tag: DW_TAG_member, scope: !757, file: !758, line: 738, baseType: !790, size: 64, offset: 256)
!790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !757, file: !758, line: 738, size: 64, elements: !791)
!791 = !{!792, !795}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !790, file: !758, line: 739, baseType: !793, size: 64)
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !794, line: 29, baseType: !582)
!794 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!795 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !790, file: !758, line: 740, baseType: !536, size: 64)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !757, file: !758, line: 748, baseType: !797, size: 384, align: 64, offset: 320)
!797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 384, elements: !798)
!798 = !{!799}
!799 = !DISubrange(count: 48)
!800 = !DIDerivedType(tag: DW_TAG_member, scope: !757, file: !758, line: 750, baseType: !801, size: 128, offset: 704)
!801 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !757, file: !758, line: 750, size: 128, elements: !802)
!802 = !{!803, !811}
!803 = !DIDerivedType(tag: DW_TAG_member, scope: !801, file: !758, line: 751, baseType: !804, size: 128)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !801, file: !758, line: 751, size: 128, elements: !805)
!805 = !{!806, !807}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !804, file: !758, line: 752, baseType: !517, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !804, file: !758, line: 753, baseType: !808, size: 64, offset: 64)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = !DISubroutineType(types: !810)
!810 = !{null, !756}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !801, file: !758, line: 755, baseType: !489, size: 128)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !757, file: !758, line: 761, baseType: !13, size: 32, offset: 832)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !757, file: !758, line: 762, baseType: !13, size: 32, offset: 864)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !757, file: !758, line: 763, baseType: !610, size: 16, offset: 896)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !757, file: !758, line: 764, baseType: !610, size: 16, offset: 912)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !757, file: !758, line: 769, baseType: !610, size: 16, offset: 928)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !757, file: !758, line: 780, baseType: !818, offset: 944)
!818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, elements: !819)
!819 = !{!820}
!820 = !DISubrange(count: 0)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !757, file: !758, line: 782, baseType: !631, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !757, file: !758, line: 783, baseType: !631, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !757, file: !758, line: 784, baseType: !631, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !757, file: !758, line: 785, baseType: !631, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !757, file: !758, line: 786, baseType: !631, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !757, file: !758, line: 787, baseType: !631, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !757, file: !758, line: 795, baseType: !828, offset: 960)
!828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !650, elements: !819)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !757, file: !758, line: 807, baseType: !818, offset: 960)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !757, file: !758, line: 809, baseType: !631, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !757, file: !758, line: 810, baseType: !631, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !757, file: !758, line: 811, baseType: !631, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !757, file: !758, line: 812, baseType: !631, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !757, file: !758, line: 813, baseType: !631, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !757, file: !758, line: 815, baseType: !631, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !757, file: !758, line: 816, baseType: !631, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !757, file: !758, line: 817, baseType: !631, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !757, file: !758, line: 818, baseType: !631, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !757, file: !758, line: 819, baseType: !631, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !757, file: !758, line: 821, baseType: !631, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !757, file: !758, line: 822, baseType: !631, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !757, file: !758, line: 823, baseType: !631, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !757, file: !758, line: 832, baseType: !818, offset: 976)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !757, file: !758, line: 834, baseType: !631, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !757, file: !758, line: 835, baseType: !631, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !757, file: !758, line: 836, baseType: !631, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !757, file: !758, line: 837, baseType: !631, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !757, file: !758, line: 838, baseType: !631, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !757, file: !758, line: 840, baseType: !631, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !757, file: !758, line: 843, baseType: !631, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !757, file: !758, line: 844, baseType: !631, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !757, file: !758, line: 845, baseType: !631, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !757, file: !758, line: 847, baseType: !631, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !757, file: !758, line: 848, baseType: !631, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!855 = !DIDerivedType(tag: DW_TAG_member, scope: !757, file: !758, line: 866, baseType: !856, size: 32, offset: 992)
!856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !757, file: !758, line: 866, size: 32, elements: !857)
!857 = !{!858, !861}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !856, file: !758, line: 867, baseType: !859, size: 32)
!859 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !860, line: 37, baseType: !650)
!860 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!861 = !DIDerivedType(tag: DW_TAG_member, scope: !856, file: !758, line: 868, baseType: !862, size: 32)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !856, file: !758, line: 868, size: 32, elements: !863)
!863 = !{!864, !865}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !862, file: !758, line: 869, baseType: !610, size: 16)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !862, file: !758, line: 870, baseType: !610, size: 16, offset: 16)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !757, file: !758, line: 873, baseType: !650, size: 32, offset: 1024)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !757, file: !758, line: 874, baseType: !7, size: 32, offset: 1056)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !757, file: !758, line: 875, baseType: !650, size: 32, offset: 1088)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !757, file: !758, line: 876, baseType: !870, size: 16, offset: 1120)
!870 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !860, line: 30, baseType: !610)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !757, file: !758, line: 877, baseType: !610, size: 16, offset: 1136)
!872 = !DIDerivedType(tag: DW_TAG_member, scope: !757, file: !758, line: 879, baseType: !873, size: 32, offset: 1152)
!873 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !757, file: !758, line: 879, size: 32, elements: !874)
!874 = !{!875, !876}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !873, file: !758, line: 880, baseType: !13, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !873, file: !758, line: 881, baseType: !13, size: 32)
!877 = !DIDerivedType(tag: DW_TAG_member, scope: !757, file: !758, line: 888, baseType: !878, size: 32, offset: 1184)
!878 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !757, file: !758, line: 888, size: 32, elements: !879)
!879 = !{!880, !881}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !878, file: !758, line: 889, baseType: !650, size: 32)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !878, file: !758, line: 890, baseType: !650, size: 32)
!882 = !DIDerivedType(tag: DW_TAG_member, scope: !757, file: !758, line: 893, baseType: !883, size: 16, offset: 1216)
!883 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !757, file: !758, line: 893, size: 16, elements: !884)
!884 = !{!885, !886}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !883, file: !758, line: 894, baseType: !870, size: 16)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !883, file: !758, line: 895, baseType: !631, size: 8)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !757, file: !758, line: 898, baseType: !610, size: 16, offset: 1232)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !757, file: !758, line: 899, baseType: !610, size: 16, offset: 1248)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !757, file: !758, line: 900, baseType: !610, size: 16, offset: 1264)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !757, file: !758, line: 902, baseType: !870, size: 16, offset: 1280)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !757, file: !758, line: 903, baseType: !610, size: 16, offset: 1296)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !757, file: !758, line: 904, baseType: !610, size: 16, offset: 1312)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !757, file: !758, line: 905, baseType: !610, size: 16, offset: 1328)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !757, file: !758, line: 908, baseType: !828, offset: 1344)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !757, file: !758, line: 912, baseType: !896, size: 32, offset: 1344)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !758, line: 606, baseType: !13)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !757, file: !758, line: 913, baseType: !896, size: 32, offset: 1376)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !757, file: !758, line: 914, baseType: !899, size: 64, offset: 1408)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !757, file: !758, line: 915, baseType: !899, size: 64, offset: 1472)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !757, file: !758, line: 916, baseType: !13, size: 32, offset: 1536)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !757, file: !758, line: 917, baseType: !903, size: 32, offset: 1568)
!903 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !904, line: 113, baseType: !905)
!904 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !904, line: 111, size: 32, elements: !906)
!906 = !{!907}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !905, file: !904, line: 112, baseType: !588, size: 32)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !739, file: !6, line: 1290, baseType: !909, size: 64, offset: 320)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!910 = !DISubroutineType(types: !911)
!911 = !{!534, !756, !495, !534}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !739, file: !6, line: 1293, baseType: !913, size: 64, offset: 384)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DISubroutineType(types: !915)
!915 = !{!916, !495, !756, !495}
!916 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !537, line: 19, baseType: !610)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !739, file: !6, line: 1296, baseType: !918, size: 64, offset: 448)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DISubroutineType(types: !920)
!920 = !{null, !495, !7}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !739, file: !6, line: 1298, baseType: !746, size: 64, offset: 512)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !739, file: !6, line: 1299, baseType: !923, size: 64, offset: 576)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DISubroutineType(types: !925)
!925 = !{!7, !495, !622}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !739, file: !6, line: 1301, baseType: !742, size: 64, offset: 640)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !739, file: !6, line: 1302, baseType: !928, size: 64, offset: 704)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DISubroutineType(types: !930)
!930 = !{!7, !495, !931, !7}
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !933, line: 234, size: 320, elements: !934)
!933 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!934 = !{!935, !939}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !932, file: !933, line: 239, baseType: !936, size: 128)
!936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !932, file: !933, line: 236, size: 128, elements: !937)
!937 = !{!938}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !936, file: !933, line: 238, baseType: !472, size: 128)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !932, file: !933, line: 255, baseType: !940, size: 192, offset: 128)
!940 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !932, file: !933, line: 241, size: 192, elements: !941)
!941 = !{!942, !943, !944, !945, !946, !947, !948, !949, !950, !959, !960, !961, !962}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !940, file: !933, line: 242, baseType: !662, size: 128)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !940, file: !933, line: 243, baseType: !662, size: 128)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !940, file: !933, line: 244, baseType: !662, size: 128)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !940, file: !933, line: 245, baseType: !662, size: 128)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !940, file: !933, line: 246, baseType: !662, size: 128)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !940, file: !933, line: 247, baseType: !641, size: 16)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !940, file: !933, line: 248, baseType: !7, size: 32)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !940, file: !933, line: 249, baseType: !7, size: 32)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !940, file: !933, line: 250, baseType: !951, size: 192)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !933, line: 196, size: 192, elements: !952)
!952 = !{!953, !954, !955, !956, !957, !958}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !951, file: !933, line: 197, baseType: !517, size: 64)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !951, file: !933, line: 198, baseType: !517, size: 64, offset: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !951, file: !933, line: 199, baseType: !611, size: 16, offset: 128)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !951, file: !933, line: 200, baseType: !632, size: 8, offset: 144)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !951, file: !933, line: 201, baseType: !632, size: 8, offset: 152)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !951, file: !933, line: 202, baseType: !632, size: 8, offset: 160)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !940, file: !933, line: 251, baseType: !472, size: 128)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !940, file: !933, line: 252, baseType: !472, size: 128)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !940, file: !933, line: 253, baseType: !622, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !940, file: !933, line: 254, baseType: !963, size: 128)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !933, line: 207, size: 128, elements: !964)
!964 = !{!965, !966, !967}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !963, file: !933, line: 208, baseType: !13, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !963, file: !933, line: 209, baseType: !13, size: 32, offset: 32)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !963, file: !933, line: 222, baseType: !968, size: 64, offset: 64)
!968 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !963, file: !933, line: 210, size: 64, elements: !969)
!969 = !{!970, !978, !985, !997, !1003, !1010, !1021, !1029}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !968, file: !933, line: 212, baseType: !971, size: 64)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !973, line: 56, baseType: !974)
!973 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !973, line: 53, size: 32, elements: !975)
!975 = !{!976, !977}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !974, file: !973, line: 54, baseType: !611, size: 16)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !974, file: !973, line: 55, baseType: !611, size: 16, offset: 16)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !968, file: !933, line: 213, baseType: !979, size: 64)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !973, line: 80, baseType: !981)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !973, line: 77, size: 64, elements: !982)
!982 = !{!983, !984}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !981, file: !973, line: 78, baseType: !13, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !981, file: !973, line: 79, baseType: !13, size: 32, offset: 32)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !968, file: !933, line: 214, baseType: !986, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !973, line: 66, baseType: !988)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !973, line: 58, size: 192, elements: !989)
!989 = !{!990, !991, !992, !993, !994, !995, !996}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !988, file: !973, line: 59, baseType: !13, size: 32)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !988, file: !973, line: 60, baseType: !13, size: 32, offset: 32)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !988, file: !973, line: 61, baseType: !13, size: 32, offset: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !988, file: !973, line: 62, baseType: !13, size: 32, offset: 96)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !988, file: !973, line: 63, baseType: !13, size: 32, offset: 128)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !988, file: !973, line: 64, baseType: !611, size: 16, offset: 160)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !988, file: !973, line: 65, baseType: !611, size: 16, offset: 176)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !968, file: !933, line: 215, baseType: !998, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !973, line: 70, baseType: !1000)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !973, line: 68, size: 32, elements: !1001)
!1001 = !{!1002}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !1000, file: !973, line: 69, baseType: !13, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !968, file: !933, line: 216, baseType: !1004, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !973, line: 75, baseType: !1006)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !973, line: 72, size: 160, elements: !1007)
!1007 = !{!1008, !1009}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !1006, file: !973, line: 73, baseType: !13, size: 32)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !1006, file: !973, line: 74, baseType: !472, size: 128, offset: 32)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !968, file: !933, line: 217, baseType: !1011, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !973, line: 89, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !973, line: 82, size: 192, elements: !1014)
!1014 = !{!1015, !1016, !1017, !1018, !1019, !1020}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !1013, file: !973, line: 83, baseType: !611, size: 16)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !1013, file: !973, line: 84, baseType: !13, size: 32, offset: 32)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1013, file: !973, line: 85, baseType: !13, size: 32, offset: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !1013, file: !973, line: 86, baseType: !13, size: 32, offset: 96)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !1013, file: !973, line: 87, baseType: !13, size: 32, offset: 128)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !1013, file: !973, line: 88, baseType: !13, size: 32, offset: 160)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !968, file: !933, line: 220, baseType: !1022, size: 64)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !973, line: 44, baseType: !1024)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !973, line: 40, size: 96, elements: !1025)
!1025 = !{!1026, !1027, !1028}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !1024, file: !973, line: 41, baseType: !13, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !1024, file: !973, line: 42, baseType: !13, size: 32, offset: 32)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !1024, file: !973, line: 43, baseType: !611, size: 16, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !968, file: !933, line: 221, baseType: !1030, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !973, line: 51, baseType: !1032)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !973, line: 46, size: 128, elements: !1033)
!1033 = !{!1034, !1035, !1036, !1037}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !1032, file: !973, line: 47, baseType: !13, size: 32)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !1032, file: !973, line: 48, baseType: !13, size: 32, offset: 32)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !1032, file: !973, line: 49, baseType: !611, size: 16, offset: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !1032, file: !973, line: 50, baseType: !13, size: 32, offset: 96)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !739, file: !6, line: 1304, baseType: !1039, size: 64, offset: 768)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{!7, !495, !1042}
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !739, file: !6, line: 1306, baseType: !1044, size: 64, offset: 832)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!7, !495, !7}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !739, file: !6, line: 1308, baseType: !1048, size: 64, offset: 896)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!7, !495, !1051}
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !6, line: 206, flags: DIFlagFwdDecl)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !739, file: !6, line: 1310, baseType: !1054, size: 64, offset: 960)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{null, !495, !13}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !739, file: !6, line: 1313, baseType: !1058, size: 64, offset: 1024)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{null, !495, !1061}
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !1063, line: 214, size: 1536, elements: !1064)
!1063 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!1064 = !{!1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !1062, file: !1063, line: 215, baseType: !538, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !1062, file: !1063, line: 216, baseType: !538, size: 64, offset: 64)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !1062, file: !1063, line: 217, baseType: !538, size: 64, offset: 128)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !1062, file: !1063, line: 218, baseType: !538, size: 64, offset: 192)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !1062, file: !1063, line: 219, baseType: !538, size: 64, offset: 256)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !1062, file: !1063, line: 220, baseType: !538, size: 64, offset: 320)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !1062, file: !1063, line: 221, baseType: !538, size: 64, offset: 384)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !1062, file: !1063, line: 222, baseType: !538, size: 64, offset: 448)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !1062, file: !1063, line: 223, baseType: !538, size: 64, offset: 512)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1062, file: !1063, line: 224, baseType: !538, size: 64, offset: 576)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !1062, file: !1063, line: 227, baseType: !538, size: 64, offset: 640)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !1062, file: !1063, line: 228, baseType: !538, size: 64, offset: 704)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !1062, file: !1063, line: 229, baseType: !538, size: 64, offset: 768)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !1062, file: !1063, line: 230, baseType: !538, size: 64, offset: 832)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !1062, file: !1063, line: 231, baseType: !538, size: 64, offset: 896)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !1062, file: !1063, line: 232, baseType: !538, size: 64, offset: 960)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !1062, file: !1063, line: 235, baseType: !538, size: 64, offset: 1024)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !1062, file: !1063, line: 236, baseType: !538, size: 64, offset: 1088)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !1062, file: !1063, line: 237, baseType: !538, size: 64, offset: 1152)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !1062, file: !1063, line: 238, baseType: !538, size: 64, offset: 1216)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !1062, file: !1063, line: 239, baseType: !538, size: 64, offset: 1280)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !1062, file: !1063, line: 242, baseType: !538, size: 64, offset: 1344)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !1062, file: !1063, line: 243, baseType: !538, size: 64, offset: 1408)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !1062, file: !1063, line: 244, baseType: !538, size: 64, offset: 1472)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !739, file: !6, line: 1315, baseType: !1090, size: 64, offset: 1088)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!1093, !1095, !7}
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !482, line: 30, baseType: !1094)
!1094 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !469)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !739, file: !6, line: 1316, baseType: !1098, size: 64, offset: 1152)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!7, !7, !1095, !622}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !739, file: !6, line: 1319, baseType: !1102, size: 64, offset: 1216)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!1105, !495}
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !739, file: !6, line: 1321, baseType: !1107, size: 64, offset: 1280)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!7, !495, !870, !916}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !739, file: !6, line: 1323, baseType: !1107, size: 64, offset: 1344)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !739, file: !6, line: 1331, baseType: !1112, size: 64, offset: 1408)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!7, !495, !7, !1115}
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !537, line: 17, baseType: !631)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !739, file: !6, line: 1333, baseType: !1118, size: 64, offset: 1472)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!7, !495, !7, !916, !1116, !870}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !739, file: !6, line: 1336, baseType: !1122, size: 64, offset: 1536)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{!7, !495, !7, !7, !7}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !739, file: !6, line: 1339, baseType: !1126, size: 64, offset: 1600)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{!7, !495, !7, !1093}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !739, file: !6, line: 1341, baseType: !1126, size: 64, offset: 1664)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !739, file: !6, line: 1343, baseType: !1131, size: 64, offset: 1728)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!7, !495, !7, !1134}
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !1136, line: 20, size: 576, elements: !1137)
!1136 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!1137 = !{!1138, !1139, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !1135, file: !1136, line: 21, baseType: !650, size: 32)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !1135, file: !1136, line: 22, baseType: !1140, size: 256, offset: 32)
!1140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 256, elements: !1141)
!1141 = !{!1142}
!1142 = !DISubrange(count: 32)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !1135, file: !1136, line: 23, baseType: !650, size: 32, offset: 288)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !1135, file: !1136, line: 24, baseType: !650, size: 32, offset: 320)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !1135, file: !1136, line: 25, baseType: !650, size: 32, offset: 352)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !1135, file: !1136, line: 26, baseType: !650, size: 32, offset: 384)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !1135, file: !1136, line: 27, baseType: !650, size: 32, offset: 416)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !1135, file: !1136, line: 28, baseType: !650, size: 32, offset: 448)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !1135, file: !1136, line: 29, baseType: !650, size: 32, offset: 480)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !1135, file: !1136, line: 30, baseType: !650, size: 32, offset: 512)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !1135, file: !1136, line: 31, baseType: !870, size: 16, offset: 544)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !739, file: !6, line: 1346, baseType: !1153, size: 64, offset: 1792)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!7, !495, !7, !7}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !739, file: !6, line: 1348, baseType: !1157, size: 64, offset: 1856)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{!7, !495, !7, !1160}
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !1136, line: 9, size: 512, elements: !1162)
!1162 = !{!1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !1161, file: !1136, line: 10, baseType: !538, size: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !1161, file: !1136, line: 11, baseType: !538, size: 64, offset: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !1161, file: !1136, line: 12, baseType: !538, size: 64, offset: 128)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !1161, file: !1136, line: 13, baseType: !538, size: 64, offset: 192)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !1161, file: !1136, line: 14, baseType: !538, size: 64, offset: 256)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !1161, file: !1136, line: 15, baseType: !538, size: 64, offset: 320)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !1161, file: !1136, line: 16, baseType: !538, size: 64, offset: 384)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !1161, file: !1136, line: 17, baseType: !538, size: 64, offset: 448)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !739, file: !6, line: 1352, baseType: !1172, size: 64, offset: 1920)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{!7, !495, !7, !1175}
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !1178, line: 213, size: 32, elements: !1179)
!1178 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!1179 = !{!1180, !1181}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !1177, file: !1178, line: 214, baseType: !610, size: 16)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !1177, file: !1178, line: 215, baseType: !610, size: 16, offset: 16)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !739, file: !6, line: 1355, baseType: !1183, size: 64, offset: 1984)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{!7, !495, !7, !756}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !739, file: !6, line: 1357, baseType: !1187, size: 64, offset: 2048)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{!7, !495, !7, !1190, !1190}
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !1063, line: 956, size: 128, elements: !1192)
!1192 = !{!1193, !1194}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !1191, file: !1063, line: 957, baseType: !650, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !1191, file: !1063, line: 958, baseType: !538, size: 64, offset: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !739, file: !6, line: 1361, baseType: !1196, size: 64, offset: 2112)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{!7, !495, !7, !536, !7}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !739, file: !6, line: 1364, baseType: !1126, size: 64, offset: 2176)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !739, file: !6, line: 1367, baseType: !1201, size: 64, offset: 2240)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!7, !495, !12, !622}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !739, file: !6, line: 1400, baseType: !1205, size: 64, offset: 2304)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{!7, !495, !495, !1208}
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !1210, line: 75, size: 384, elements: !1211)
!1210 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!1211 = !{!1212, !1213, !1216, !1220, !1224}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !1209, file: !1210, line: 76, baseType: !497, size: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !1209, file: !1210, line: 77, baseType: !1214, size: 64, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!1215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1177)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1209, file: !1210, line: 78, baseType: !1217, size: 64, offset: 128)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1219)
!1219 = !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !1210, line: 78, flags: DIFlagFwdDecl)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !1209, file: !1210, line: 79, baseType: !1221, size: 160, offset: 192)
!1221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 160, elements: !1222)
!1222 = !{!1223}
!1223 = !DISubrange(count: 20)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !1209, file: !1210, line: 80, baseType: !1116, size: 8, offset: 352)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !739, file: !6, line: 1403, baseType: !1226, size: 64, offset: 2368)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{!7, !495, !495}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !739, file: !6, line: 1405, baseType: !1230, size: 64, offset: 2432)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = !DISubroutineType(types: !1232)
!1232 = !{!495, !495, !756, !1093}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !739, file: !6, line: 1408, baseType: !1234, size: 64, offset: 2496)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{!534, !495, !534}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !739, file: !6, line: 1410, baseType: !1238, size: 64, offset: 2560)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = !DISubroutineType(types: !1240)
!1240 = !{!7, !495, !534}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !739, file: !6, line: 1412, baseType: !1242, size: 64, offset: 2624)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = !DISubroutineType(types: !1244)
!1244 = !{!7, !495, !1245}
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1246 = !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !1247, line: 35, flags: DIFlagFwdDecl)
!1247 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !739, file: !6, line: 1414, baseType: !1249, size: 64, offset: 2688)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = !DISubroutineType(types: !1251)
!1251 = !{null, !495, !1245}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !739, file: !6, line: 1417, baseType: !1253, size: 64, offset: 2752)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = !DISubroutineType(types: !1255)
!1255 = !{!7, !1256, !1175, !495, !1267, !916, !916, !1208}
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !1258, line: 8, size: 96, elements: !1259)
!1258 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!1259 = !{!1260, !1261, !1262, !1263, !1264, !1265, !1266}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !1257, file: !1258, line: 9, baseType: !631, size: 8)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !1257, file: !1258, line: 10, baseType: !631, size: 8, offset: 8)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !1257, file: !1258, line: 11, baseType: !610, size: 16, offset: 16)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !1257, file: !1258, line: 12, baseType: !629, size: 32, offset: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !1257, file: !1258, line: 13, baseType: !610, size: 16, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !1257, file: !1258, line: 14, baseType: !631, size: 8, offset: 80)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !1257, file: !1258, line: 15, baseType: !631, size: 8, offset: 88)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !632)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !739, file: !6, line: 1424, baseType: !1270, size: 64, offset: 2816)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{!7, !1256, !1175, !495, !1267, !916}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !739, file: !6, line: 1429, baseType: !1274, size: 64, offset: 2880)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = !DISubroutineType(types: !1276)
!1276 = !{!7, !756, !1277, !495, !495, !1321}
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !1210, line: 203, size: 1024, elements: !1279)
!1279 = !{!1280, !1281, !1291, !1295, !1299, !1300, !1304, !1305, !1306, !1307, !1309, !1310, !1311, !1312}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !1278, file: !1210, line: 204, baseType: !756, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !1278, file: !1210, line: 205, baseType: !1282, size: 64, offset: 64)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1284)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !1178, line: 44, size: 128, elements: !1285)
!1285 = !{!1286, !1287, !1288, !1289, !1290}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !1284, file: !1178, line: 45, baseType: !650, size: 32)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !1284, file: !1178, line: 46, baseType: !610, size: 16, offset: 32)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !1284, file: !1178, line: 47, baseType: !610, size: 16, offset: 48)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !1284, file: !1178, line: 48, baseType: !650, size: 32, offset: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !1284, file: !1178, line: 49, baseType: !650, size: 32, offset: 96)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !1278, file: !1210, line: 206, baseType: !1292, size: 64, offset: 128)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{!7, !756, !1277}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1278, file: !1210, line: 208, baseType: !1296, size: 64, offset: 192)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{!7, !1277}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1278, file: !1210, line: 209, baseType: !622, size: 64, offset: 256)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !1278, file: !1210, line: 211, baseType: !1301, size: 64, offset: 320)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !1303, line: 76, flags: DIFlagFwdDecl)
!1303 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !1278, file: !1210, line: 212, baseType: !1208, size: 64, offset: 384)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !1278, file: !1210, line: 213, baseType: !916, size: 16, offset: 448)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !1278, file: !1210, line: 214, baseType: !916, size: 16, offset: 464)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !1278, file: !1210, line: 215, baseType: !1308, size: 32, offset: 480)
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !537, line: 21, baseType: !650)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !1278, file: !1210, line: 216, baseType: !13, size: 32, offset: 512)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1278, file: !1210, line: 216, baseType: !13, size: 32, offset: 544)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !1278, file: !1210, line: 217, baseType: !1093, size: 8, offset: 576)
!1312 = !DIDerivedType(tag: DW_TAG_member, scope: !1278, file: !1210, line: 218, baseType: !1313, size: 384, offset: 640)
!1313 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1278, file: !1210, line: 218, size: 384, elements: !1314)
!1314 = !{!1315, !1317}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1313, file: !1210, line: 219, baseType: !1316, size: 384)
!1316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 384, elements: !798)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1313, file: !1210, line: 224, baseType: !1318, size: 384)
!1318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1319, size: 384, elements: !1320)
!1319 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1320 = !{!725}
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !739, file: !6, line: 1434, baseType: !1323, size: 64, offset: 2944)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{!7, !756, !1175, !495, !1267, !916, !1308, !1308, !1208}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !739, file: !6, line: 1440, baseType: !1327, size: 64, offset: 3008)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = !DISubroutineType(types: !1329)
!1329 = !{!7, !495, !1330, !916, !1208}
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !739, file: !6, line: 1444, baseType: !1332, size: 64, offset: 3072)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{!7, !756, !1308, !1308, !495, !1308, !7}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !739, file: !6, line: 1449, baseType: !1336, size: 64, offset: 3136)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{!7, !495, !1330, !916}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !739, file: !6, line: 1452, baseType: !1340, size: 64, offset: 3200)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = !DISubroutineType(types: !1342)
!1342 = !{!7, !495, !1093}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !739, file: !6, line: 1454, baseType: !1344, size: 64, offset: 3264)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{!7, !495, !1347}
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !6, line: 820, size: 264, elements: !1349)
!1349 = !{!1350, !1352}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1348, file: !6, line: 821, baseType: !1351, size: 256)
!1351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 256, elements: !1141)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !1348, file: !6, line: 822, baseType: !632, size: 8, offset: 256)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !739, file: !6, line: 1456, baseType: !1344, size: 64, offset: 3328)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !739, file: !6, line: 1458, baseType: !1355, size: 64, offset: 3392)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DISubroutineType(types: !1357)
!1357 = !{!7, !495, !676, !1358}
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !482, line: 55, baseType: !1359)
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1360, line: 72, baseType: !1361)
!1360 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1360, line: 16, baseType: !517)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !739, file: !6, line: 1460, baseType: !1363, size: 64, offset: 3456)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = !DISubroutineType(types: !1365)
!1365 = !{null, !495, !1366}
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1367 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !6, line: 67, flags: DIFlagFwdDecl)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !739, file: !6, line: 1462, baseType: !1363, size: 64, offset: 3520)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !739, file: !6, line: 1464, baseType: !1370, size: 64, offset: 3584)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!1371 = !DISubroutineType(types: !1372)
!1372 = !{!622, !495, !495}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !739, file: !6, line: 1466, baseType: !1374, size: 64, offset: 3648)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!1375 = !DISubroutineType(types: !1376)
!1376 = !{null, !495, !622}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !739, file: !6, line: 1469, baseType: !1378, size: 64, offset: 3712)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!1379 = !DISubroutineType(types: !1380)
!1380 = !{!7, !495, !7, !1308}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !739, file: !6, line: 1472, baseType: !1382, size: 64, offset: 3776)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64)
!1383 = !DISubroutineType(types: !1384)
!1384 = !{!7, !1095}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !739, file: !6, line: 1473, baseType: !1340, size: 64, offset: 3840)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !739, file: !6, line: 1475, baseType: !1387, size: 64, offset: 3904)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64)
!1388 = !DISubroutineType(types: !1389)
!1389 = !{!7, !495, !756}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !739, file: !6, line: 1477, baseType: !918, size: 64, offset: 3968)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !739, file: !6, line: 1479, baseType: !1392, size: 64, offset: 4032)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = !DISubroutineType(types: !1394)
!1394 = !{!7, !495, !1395}
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !6, line: 894, size: 256, elements: !1397)
!1397 = !{!1398, !1399}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !1396, file: !6, line: 895, baseType: !33, size: 32)
!1399 = !DIDerivedType(tag: DW_TAG_member, scope: !1396, file: !6, line: 896, baseType: !1400, size: 192, offset: 64)
!1400 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1396, file: !6, line: 896, size: 192, elements: !1401)
!1401 = !{!1402, !1411, !5776}
!1402 = !DIDerivedType(tag: DW_TAG_member, scope: !1400, file: !6, line: 898, baseType: !1403, size: 192)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1400, file: !6, line: 898, size: 192, elements: !1404)
!1404 = !{!1405, !1406, !1410}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1403, file: !6, line: 899, baseType: !1308, size: 32)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !1403, file: !6, line: 900, baseType: !1407, size: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !1409, line: 11, flags: DIFlagFwdDecl)
!1409 = !DIFile(filename: "./include/net/flow_dissector.h", directory: "/home/lizy2001/genbc/linux")
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !1403, file: !6, line: 901, baseType: !1208, size: 64, offset: 128)
!1411 = !DIDerivedType(tag: DW_TAG_member, scope: !1400, file: !6, line: 904, baseType: !1412, size: 64)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1400, file: !6, line: 904, size: 64, elements: !1413)
!1413 = !{!1414}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !1412, file: !6, line: 905, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !95, line: 222, size: 2560, elements: !1417)
!1417 = !{!1418, !5755, !5756, !5774, !5775}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1416, file: !95, line: 223, baseType: !1419, size: 2048)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !95, line: 141, size: 2048, elements: !1420)
!1420 = !{!1421, !5729, !5730, !5731, !5732, !5733, !5734, !5735, !5736, !5737, !5738, !5739, !5740, !5741, !5746, !5747, !5748, !5749, !5750, !5751, !5752, !5753, !5754}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1419, file: !95, line: 145, baseType: !1422, size: 64, align: 512)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1424)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !95, line: 54, size: 2368, elements: !1425)
!1425 = !{!1426, !1625, !1630, !5401, !5405, !5409, !5410, !5414, !5420, !5421, !5422, !5423, !5424, !5428, !5432, !5436, !5437, !5438, !5442, !5443, !5455, !5459, !5463, !5475, !5664, !5668, !5672, !5677, !5681, !5685, !5689, !5695, !5699, !5706, !5710, !5712, !5713}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !1424, file: !95, line: 56, baseType: !1427, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DISubroutineType(types: !1429)
!1429 = !{!7, !1430}
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !126, line: 483, size: 960, align: 64, elements: !1432)
!1432 = !{!1433, !1449, !1460, !1471, !1495, !1501, !1509, !1526, !1539, !1545, !1554, !1559, !1567, !1579, !1599, !1606, !1610, !1614, !1619}
!1433 = !DIDerivedType(tag: DW_TAG_member, scope: !1431, file: !126, line: 484, baseType: !1434, size: 512)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !126, line: 484, size: 512, elements: !1435)
!1435 = !{!1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1434, file: !126, line: 485, baseType: !650, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1434, file: !126, line: 486, baseType: !650, size: 32, offset: 32)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1434, file: !126, line: 487, baseType: !650, size: 32, offset: 64)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1434, file: !126, line: 488, baseType: !650, size: 32, offset: 96)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1434, file: !126, line: 489, baseType: !650, size: 32, offset: 128)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !1434, file: !126, line: 492, baseType: !650, size: 32, offset: 160)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1434, file: !126, line: 493, baseType: !650, size: 32, offset: 192)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !1434, file: !126, line: 496, baseType: !472, size: 128, offset: 224)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !1434, file: !126, line: 497, baseType: !650, size: 32, offset: 352)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !1434, file: !126, line: 498, baseType: !650, size: 32, offset: 384)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1434, file: !126, line: 499, baseType: !650, size: 32, offset: 416)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1434, file: !126, line: 500, baseType: !650, size: 32, offset: 448)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1434, file: !126, line: 501, baseType: !650, size: 32, offset: 480)
!1449 = !DIDerivedType(tag: DW_TAG_member, scope: !1431, file: !126, line: 507, baseType: !1450, size: 256)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !126, line: 507, size: 256, elements: !1451)
!1451 = !{!1452, !1453, !1454, !1459}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1450, file: !126, line: 508, baseType: !650, size: 32)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1450, file: !126, line: 509, baseType: !538, size: 64, align: 64, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, scope: !1450, file: !126, line: 510, baseType: !1455, size: 64, offset: 128)
!1455 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1450, file: !126, line: 510, size: 64, elements: !1456)
!1456 = !{!1457, !1458}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1455, file: !126, line: 511, baseType: !538, size: 64, align: 64)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !1455, file: !126, line: 512, baseType: !538, size: 64, align: 64)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1450, file: !126, line: 514, baseType: !538, size: 64, offset: 192)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1431, file: !126, line: 532, baseType: !1461, size: 448)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !126, line: 517, size: 448, elements: !1462)
!1462 = !{!1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !1461, file: !126, line: 518, baseType: !538, size: 64, align: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !1461, file: !126, line: 521, baseType: !538, size: 64, align: 64, offset: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1461, file: !126, line: 522, baseType: !538, size: 64, align: 64, offset: 128)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1461, file: !126, line: 523, baseType: !538, size: 64, align: 64, offset: 192)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1461, file: !126, line: 524, baseType: !650, size: 32, offset: 256)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1461, file: !126, line: 529, baseType: !650, size: 32, offset: 288)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !1461, file: !126, line: 530, baseType: !538, size: 64, offset: 320)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1461, file: !126, line: 531, baseType: !538, size: 64, offset: 384)
!1471 = !DIDerivedType(tag: DW_TAG_member, scope: !1431, file: !126, line: 534, baseType: !1472, size: 960)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !126, line: 534, size: 960, elements: !1473)
!1473 = !{!1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !1472, file: !126, line: 535, baseType: !650, size: 32)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !1472, file: !126, line: 536, baseType: !650, size: 32, offset: 32)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1472, file: !126, line: 537, baseType: !538, size: 64, align: 64, offset: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !1472, file: !126, line: 538, baseType: !538, size: 64, align: 64, offset: 128)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !1472, file: !126, line: 539, baseType: !650, size: 32, offset: 192)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !1472, file: !126, line: 540, baseType: !650, size: 32, offset: 224)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !1472, file: !126, line: 541, baseType: !538, size: 64, align: 64, offset: 256)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !1472, file: !126, line: 542, baseType: !650, size: 32, offset: 320)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !1472, file: !126, line: 543, baseType: !650, size: 32, offset: 352)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !1472, file: !126, line: 544, baseType: !472, size: 128, offset: 384)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !1472, file: !126, line: 545, baseType: !650, size: 32, offset: 512)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !1472, file: !126, line: 550, baseType: !650, size: 32, offset: 544)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !1472, file: !126, line: 551, baseType: !650, size: 32, offset: 576)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !1472, file: !126, line: 552, baseType: !650, size: 32, offset: 608)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !1472, file: !126, line: 553, baseType: !538, size: 64, align: 64, offset: 640)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !1472, file: !126, line: 554, baseType: !650, size: 32, offset: 704)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !1472, file: !126, line: 555, baseType: !650, size: 32, offset: 736)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !1472, file: !126, line: 556, baseType: !538, size: 64, align: 64, offset: 768)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !1472, file: !126, line: 557, baseType: !650, size: 32, offset: 832)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !1472, file: !126, line: 558, baseType: !650, size: 32, offset: 864)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !1472, file: !126, line: 559, baseType: !650, size: 32, offset: 896)
!1495 = !DIDerivedType(tag: DW_TAG_member, scope: !1431, file: !126, line: 562, baseType: !1496, size: 128)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !126, line: 562, size: 128, elements: !1497)
!1497 = !{!1498, !1499, !1500}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !1496, file: !126, line: 563, baseType: !538, size: 64, align: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1496, file: !126, line: 564, baseType: !650, size: 32, offset: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !1496, file: !126, line: 565, baseType: !650, size: 32, offset: 96)
!1501 = !DIDerivedType(tag: DW_TAG_member, scope: !1431, file: !126, line: 568, baseType: !1502, size: 160)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !126, line: 568, size: 160, elements: !1503)
!1503 = !{!1504, !1505, !1506, !1507, !1508}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1502, file: !126, line: 569, baseType: !650, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !1502, file: !126, line: 570, baseType: !650, size: 32, offset: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1502, file: !126, line: 571, baseType: !650, size: 32, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1502, file: !126, line: 572, baseType: !650, size: 32, offset: 96)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !1502, file: !126, line: 573, baseType: !650, size: 32, offset: 128)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !1431, file: !126, line: 600, baseType: !1510, size: 576)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !126, line: 579, size: 576, elements: !1511)
!1511 = !{!1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1510, file: !126, line: 580, baseType: !650, size: 32)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !1510, file: !126, line: 581, baseType: !650, size: 32, offset: 32)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !1510, file: !126, line: 582, baseType: !650, size: 32, offset: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !1510, file: !126, line: 583, baseType: !650, size: 32, offset: 96)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !1510, file: !126, line: 587, baseType: !538, size: 64, align: 64, offset: 128)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !1510, file: !126, line: 588, baseType: !538, size: 64, align: 64, offset: 192)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !1510, file: !126, line: 589, baseType: !650, size: 32, offset: 256)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1510, file: !126, line: 590, baseType: !650, size: 32, offset: 288)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !1510, file: !126, line: 591, baseType: !650, size: 32, offset: 320)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !1510, file: !126, line: 592, baseType: !650, size: 32, offset: 352)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !1510, file: !126, line: 596, baseType: !538, size: 64, align: 64, offset: 384)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !1510, file: !126, line: 597, baseType: !538, size: 64, align: 64, offset: 448)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1510, file: !126, line: 598, baseType: !650, size: 32, offset: 512)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1510, file: !126, line: 599, baseType: !650, size: 32, offset: 544)
!1526 = !DIDerivedType(tag: DW_TAG_member, scope: !1431, file: !126, line: 602, baseType: !1527, size: 96)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !126, line: 602, size: 96, elements: !1528)
!1528 = !{!1529, !1537, !1538}
!1529 = !DIDerivedType(tag: DW_TAG_member, scope: !1527, file: !126, line: 603, baseType: !1530, size: 32)
!1530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1527, file: !126, line: 603, size: 32, elements: !1531)
!1531 = !{!1532, !1533, !1534, !1535, !1536}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !1530, file: !126, line: 604, baseType: !650, size: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1530, file: !126, line: 605, baseType: !650, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !1530, file: !126, line: 606, baseType: !650, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !1530, file: !126, line: 607, baseType: !650, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !1530, file: !126, line: 608, baseType: !650, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !1527, file: !126, line: 610, baseType: !650, size: 32, offset: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !1527, file: !126, line: 611, baseType: !650, size: 32, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1431, file: !126, line: 618, baseType: !1540, size: 128)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !126, line: 614, size: 128, elements: !1541)
!1541 = !{!1542, !1543, !1544}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1540, file: !126, line: 615, baseType: !650, size: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !1540, file: !126, line: 616, baseType: !650, size: 32, offset: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1540, file: !126, line: 617, baseType: !538, size: 64, align: 64, offset: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !1431, file: !126, line: 627, baseType: !1546, size: 256)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !126, line: 620, size: 256, elements: !1547)
!1547 = !{!1548, !1549, !1550, !1551, !1552, !1553}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1546, file: !126, line: 621, baseType: !650, size: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1546, file: !126, line: 622, baseType: !650, size: 32, offset: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !1546, file: !126, line: 623, baseType: !650, size: 32, offset: 64)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1546, file: !126, line: 624, baseType: !650, size: 32, offset: 96)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !1546, file: !126, line: 625, baseType: !538, size: 64, align: 64, offset: 128)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !1546, file: !126, line: 626, baseType: !650, size: 32, offset: 192)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !1431, file: !126, line: 632, baseType: !1555, size: 128)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !126, line: 629, size: 128, elements: !1556)
!1556 = !{!1557, !1558}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1555, file: !126, line: 630, baseType: !538, size: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1555, file: !126, line: 631, baseType: !650, size: 32, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, scope: !1431, file: !126, line: 634, baseType: !1560, size: 256)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !126, line: 634, size: 256, elements: !1561)
!1561 = !{!1562, !1563, !1564, !1565, !1566}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1560, file: !126, line: 635, baseType: !538, size: 64, align: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !1560, file: !126, line: 636, baseType: !538, size: 64, align: 64, offset: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !1560, file: !126, line: 637, baseType: !650, size: 32, offset: 128)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !1560, file: !126, line: 638, baseType: !650, size: 32, offset: 160)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !1560, file: !126, line: 639, baseType: !650, size: 32, offset: 192)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !1431, file: !126, line: 656, baseType: !1568, size: 384)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !126, line: 642, size: 384, elements: !1569)
!1569 = !{!1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1568, file: !126, line: 643, baseType: !650, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1568, file: !126, line: 644, baseType: !650, size: 32, offset: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1568, file: !126, line: 645, baseType: !650, size: 32, offset: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !1568, file: !126, line: 646, baseType: !650, size: 32, offset: 96)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1568, file: !126, line: 647, baseType: !538, size: 64, align: 64, offset: 128)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1568, file: !126, line: 652, baseType: !650, size: 32, offset: 192)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !1568, file: !126, line: 653, baseType: !650, size: 32, offset: 224)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !1568, file: !126, line: 654, baseType: !538, size: 64, offset: 256)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !1568, file: !126, line: 655, baseType: !538, size: 64, offset: 320)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !1431, file: !126, line: 673, baseType: !1580, size: 256)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !126, line: 658, size: 256, elements: !1581)
!1581 = !{!1582, !1583, !1588, !1589, !1590}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1580, file: !126, line: 659, baseType: !650, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_member, scope: !1580, file: !126, line: 660, baseType: !1584, size: 32, offset: 32)
!1584 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1580, file: !126, line: 660, size: 32, elements: !1585)
!1585 = !{!1586, !1587}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1584, file: !126, line: 661, baseType: !650, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !1584, file: !126, line: 662, baseType: !650, size: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1580, file: !126, line: 664, baseType: !650, size: 32, offset: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1580, file: !126, line: 665, baseType: !650, size: 32, offset: 96)
!1590 = !DIDerivedType(tag: DW_TAG_member, scope: !1580, file: !126, line: 666, baseType: !1591, size: 128, offset: 128)
!1591 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1580, file: !126, line: 666, size: 128, elements: !1592)
!1592 = !{!1593, !1594}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !1591, file: !126, line: 667, baseType: !650, size: 32)
!1594 = !DIDerivedType(tag: DW_TAG_member, scope: !1591, file: !126, line: 668, baseType: !1595, size: 128)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1591, file: !126, line: 668, size: 128, elements: !1596)
!1596 = !{!1597, !1598}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !1595, file: !126, line: 669, baseType: !538, size: 64, align: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !1595, file: !126, line: 670, baseType: !650, size: 32, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !1431, file: !126, line: 683, baseType: !1600, size: 128)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !126, line: 675, size: 128, elements: !1601)
!1601 = !{!1602, !1603, !1604, !1605}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1600, file: !126, line: 676, baseType: !650, size: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !1600, file: !126, line: 678, baseType: !650, size: 32, offset: 32)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1600, file: !126, line: 679, baseType: !650, size: 32, offset: 64)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !1600, file: !126, line: 682, baseType: !650, size: 32, offset: 96)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !1431, file: !126, line: 687, baseType: !1607, size: 32)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !126, line: 685, size: 32, elements: !1608)
!1608 = !{!1609}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1607, file: !126, line: 686, baseType: !650, size: 32)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !1431, file: !126, line: 691, baseType: !1611, size: 32)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !126, line: 689, size: 32, elements: !1612)
!1612 = !{!1613}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1611, file: !126, line: 690, baseType: !650, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !1431, file: !126, line: 696, baseType: !1615, size: 64)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !126, line: 693, size: 64, elements: !1616)
!1616 = !{!1617, !1618}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1615, file: !126, line: 694, baseType: !650, size: 32)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1615, file: !126, line: 695, baseType: !650, size: 32, offset: 32)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !1431, file: !126, line: 702, baseType: !1620, size: 96)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !126, line: 698, size: 96, elements: !1621)
!1621 = !{!1622, !1623, !1624}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1620, file: !126, line: 699, baseType: !650, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1620, file: !126, line: 700, baseType: !650, size: 32, offset: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1620, file: !126, line: 701, baseType: !650, size: 32, offset: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !1424, file: !95, line: 57, baseType: !1626, size: 64, offset: 64)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = !DISubroutineType(types: !1628)
!1628 = !{!1629, !1430}
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !1424, file: !95, line: 58, baseType: !1631, size: 64, offset: 128)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 64)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{null, !1629, !1634}
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !78, line: 916, size: 1856, align: 32, elements: !1636)
!1636 = !{!1637, !1647, !5366, !5367, !5368, !5369, !5370, !5371, !5372, !5373, !5374, !5375, !5384, !5385, !5394, !5395, !5396, !5397, !5398, !5399, !5400}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1635, file: !78, line: 920, baseType: !1638, size: 128)
!1638 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1635, file: !78, line: 917, size: 128, elements: !1639)
!1639 = !{!1640, !1646}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1638, file: !78, line: 918, baseType: !1641, size: 64)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1642, line: 58, size: 64, elements: !1643)
!1642 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1643 = !{!1644}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1641, file: !1642, line: 59, baseType: !1645, size: 64)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1638, file: !78, line: 919, baseType: !504, size: 128, align: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1635, file: !78, line: 921, baseType: !1648, size: 128, offset: 128)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1649, line: 8, size: 128, elements: !1650)
!1649 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1650 = !{!1651, !1655}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1648, file: !1649, line: 9, baseType: !1652, size: 64)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64)
!1653 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1654, line: 18, flags: DIFlagFwdDecl)
!1654 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1648, file: !1649, line: 10, baseType: !1656, size: 64, offset: 64)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1654, line: 89, size: 1536, elements: !1658)
!1658 = !{!1659, !1660, !1670, !1678, !1679, !1692, !5335, !5336, !5348, !5349, !5350, !5351, !5352, !5358, !5359, !5360}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1657, file: !1654, line: 91, baseType: !13, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1657, file: !1654, line: 92, baseType: !1661, size: 32, offset: 32)
!1661 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1662, line: 277, baseType: !1663)
!1662 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1662, line: 277, size: 32, elements: !1664)
!1664 = !{!1665}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1663, file: !1662, line: 277, baseType: !1666, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1662, line: 70, baseType: !1667)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1662, line: 65, size: 32, elements: !1668)
!1668 = !{!1669}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1667, file: !1662, line: 66, baseType: !13, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1657, file: !1654, line: 93, baseType: !1671, size: 128, offset: 64)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1672, line: 38, size: 128, elements: !1673)
!1672 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1673 = !{!1674, !1676}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1671, file: !1672, line: 39, baseType: !1675, size: 64)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1671, file: !1672, line: 39, baseType: !1677, size: 64, offset: 64)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 64)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1657, file: !1654, line: 94, baseType: !1656, size: 64, offset: 192)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1657, file: !1654, line: 95, baseType: !1680, size: 128, offset: 256)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1654, line: 47, size: 128, elements: !1681)
!1681 = !{!1682, !1691}
!1682 = !DIDerivedType(tag: DW_TAG_member, scope: !1680, file: !1654, line: 48, baseType: !1683, size: 64)
!1683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1680, file: !1654, line: 48, size: 64, elements: !1684)
!1684 = !{!1685, !1690}
!1685 = !DIDerivedType(tag: DW_TAG_member, scope: !1683, file: !1654, line: 49, baseType: !1686, size: 64)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1683, file: !1654, line: 49, size: 64, elements: !1687)
!1687 = !{!1688, !1689}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1686, file: !1654, line: 50, baseType: !1308, size: 32)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1686, file: !1654, line: 50, baseType: !1308, size: 32, offset: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1683, file: !1654, line: 52, baseType: !536, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1680, file: !1654, line: 54, baseType: !1267, size: 64, offset: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1657, file: !1654, line: 96, baseType: !1693, size: 64, offset: 384)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !78, line: 610, size: 4224, elements: !1695)
!1695 = !{!1696, !1698, !1699, !1707, !1714, !1715, !1862, !5064, !5065, !5066, !5072, !5073, !5074, !5075, !5076, !5077, !5078, !5079, !5080, !5081, !5082, !5083, !5084, !5085, !5086, !5087, !5088, !5089, !5090, !5091, !5096, !5097, !5098, !5099, !5100, !5101, !5102, !5311, !5319, !5320, !5321, !5331, !5332, !5333, !5334}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1694, file: !78, line: 611, baseType: !1697, size: 16)
!1697 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !482, line: 19, baseType: !611)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1694, file: !78, line: 612, baseType: !611, size: 16, offset: 16)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1694, file: !78, line: 613, baseType: !1700, size: 32, offset: 32)
!1700 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1701, line: 23, baseType: !1702)
!1701 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1701, line: 21, size: 32, elements: !1703)
!1703 = !{!1704}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1702, file: !1701, line: 22, baseType: !1705, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !482, line: 32, baseType: !1706)
!1706 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1360, line: 49, baseType: !13)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1694, file: !78, line: 614, baseType: !1708, size: 32, offset: 64)
!1708 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1701, line: 28, baseType: !1709)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1701, line: 26, size: 32, elements: !1710)
!1710 = !{!1711}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1709, file: !1701, line: 27, baseType: !1712, size: 32)
!1712 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !482, line: 33, baseType: !1713)
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1360, line: 50, baseType: !13)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1694, file: !78, line: 615, baseType: !13, size: 32, offset: 96)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1694, file: !78, line: 622, baseType: !1716, size: 64, offset: 128)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1718)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !78, line: 1864, size: 1536, align: 512, elements: !1719)
!1719 = !{!1720, !1724, !1737, !1741, !1747, !1751, !1755, !1759, !1763, !1767, !1771, !1772, !1778, !1782, !1806, !1835, !1842, !1848, !1853, !1857, !1858}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1718, file: !78, line: 1865, baseType: !1721, size: 64)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{!1656, !1693, !1656, !13}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1718, file: !78, line: 1866, baseType: !1725, size: 64, offset: 64)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = !DISubroutineType(types: !1727)
!1727 = !{!497, !1656, !1693, !1728}
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1730, line: 10, size: 128, elements: !1731)
!1730 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1731 = !{!1732, !1736}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1729, file: !1730, line: 11, baseType: !1733, size: 64)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1734 = !DISubroutineType(types: !1735)
!1735 = !{null, !622}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1729, file: !1730, line: 12, baseType: !622, size: 64, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1718, file: !78, line: 1867, baseType: !1738, size: 64, offset: 128)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{!7, !1693, !7}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1718, file: !78, line: 1868, baseType: !1742, size: 64, offset: 192)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 64)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{!1745, !1693, !7}
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!1746 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !78, line: 581, flags: DIFlagFwdDecl)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1718, file: !78, line: 1870, baseType: !1748, size: 64, offset: 256)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64)
!1749 = !DISubroutineType(types: !1750)
!1750 = !{!7, !1656, !676, !7}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1718, file: !78, line: 1872, baseType: !1752, size: 64, offset: 320)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64)
!1753 = !DISubroutineType(types: !1754)
!1754 = !{!7, !1693, !1656, !1697, !1093}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1718, file: !78, line: 1873, baseType: !1756, size: 64, offset: 384)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64)
!1757 = !DISubroutineType(types: !1758)
!1758 = !{!7, !1656, !1693, !1656}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1718, file: !78, line: 1874, baseType: !1760, size: 64, offset: 448)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!1761 = !DISubroutineType(types: !1762)
!1762 = !{!7, !1693, !1656}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1718, file: !78, line: 1875, baseType: !1764, size: 64, offset: 512)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1765 = !DISubroutineType(types: !1766)
!1766 = !{!7, !1693, !1656, !497}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1718, file: !78, line: 1876, baseType: !1768, size: 64, offset: 576)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 64)
!1769 = !DISubroutineType(types: !1770)
!1770 = !{!7, !1693, !1656, !1697}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1718, file: !78, line: 1877, baseType: !1760, size: 64, offset: 640)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1718, file: !78, line: 1878, baseType: !1773, size: 64, offset: 704)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64)
!1774 = !DISubroutineType(types: !1775)
!1775 = !{!7, !1693, !1656, !1697, !1776}
!1776 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !482, line: 16, baseType: !1777)
!1777 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !482, line: 13, baseType: !1308)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1718, file: !78, line: 1879, baseType: !1779, size: 64, offset: 768)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!7, !1693, !1656, !1693, !1656, !13}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1718, file: !78, line: 1881, baseType: !1783, size: 64, offset: 832)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{!7, !1656, !1786}
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !78, line: 219, size: 640, elements: !1788)
!1788 = !{!1789, !1790, !1791, !1792, !1793, !1796, !1803, !1804, !1805}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1787, file: !78, line: 220, baseType: !13, size: 32)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1787, file: !78, line: 221, baseType: !1697, size: 16, offset: 32)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1787, file: !78, line: 222, baseType: !1700, size: 32, offset: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1787, file: !78, line: 223, baseType: !1708, size: 32, offset: 96)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1787, file: !78, line: 224, baseType: !1794, size: 64, offset: 128)
!1794 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !482, line: 46, baseType: !1795)
!1795 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1360, line: 88, baseType: !584)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1787, file: !78, line: 225, baseType: !1797, size: 128, offset: 192)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1798, line: 13, size: 128, elements: !1799)
!1798 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1799 = !{!1800, !1802}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1797, file: !1798, line: 14, baseType: !1801, size: 64)
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1798, line: 8, baseType: !583)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1797, file: !1798, line: 15, baseType: !1319, size: 64, offset: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1787, file: !78, line: 226, baseType: !1797, size: 128, offset: 320)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1787, file: !78, line: 227, baseType: !1797, size: 128, offset: 448)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1787, file: !78, line: 234, baseType: !1634, size: 64, offset: 576)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1718, file: !78, line: 1882, baseType: !1807, size: 64, offset: 896)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64)
!1808 = !DISubroutineType(types: !1809)
!1809 = !{!7, !1810, !1812, !1308, !13}
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!1811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1648)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1814, line: 22, size: 1152, elements: !1815)
!1814 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1815 = !{!1816, !1817, !1818, !1819, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1813, file: !1814, line: 23, baseType: !1308, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1813, file: !1814, line: 24, baseType: !1697, size: 16, offset: 32)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1813, file: !1814, line: 25, baseType: !13, size: 32, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1813, file: !1814, line: 26, baseType: !1820, size: 32, offset: 96)
!1820 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !482, line: 104, baseType: !1308)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1813, file: !1814, line: 27, baseType: !536, size: 64, offset: 128)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1813, file: !1814, line: 28, baseType: !536, size: 64, offset: 192)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1813, file: !1814, line: 37, baseType: !536, size: 64, offset: 256)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1813, file: !1814, line: 38, baseType: !1776, size: 32, offset: 320)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1813, file: !1814, line: 39, baseType: !1776, size: 32, offset: 352)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1813, file: !1814, line: 40, baseType: !1700, size: 32, offset: 384)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1813, file: !1814, line: 41, baseType: !1708, size: 32, offset: 416)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1813, file: !1814, line: 42, baseType: !1794, size: 64, offset: 448)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1813, file: !1814, line: 43, baseType: !1797, size: 128, offset: 512)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1813, file: !1814, line: 44, baseType: !1797, size: 128, offset: 640)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1813, file: !1814, line: 45, baseType: !1797, size: 128, offset: 768)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1813, file: !1814, line: 46, baseType: !1797, size: 128, offset: 896)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1813, file: !1814, line: 47, baseType: !536, size: 64, offset: 1024)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1813, file: !1814, line: 48, baseType: !536, size: 64, offset: 1088)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1718, file: !78, line: 1883, baseType: !1836, size: 64, offset: 960)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{!1839, !1656, !676, !1358}
!1839 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !482, line: 60, baseType: !1840)
!1840 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1360, line: 73, baseType: !1841)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1360, line: 15, baseType: !1319)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1718, file: !78, line: 1884, baseType: !1843, size: 64, offset: 1024)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64)
!1844 = !DISubroutineType(types: !1845)
!1845 = !{!7, !1693, !1846, !536, !536}
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !78, line: 50, flags: DIFlagFwdDecl)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1718, file: !78, line: 1886, baseType: !1849, size: 64, offset: 1088)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!1850 = !DISubroutineType(types: !1851)
!1851 = !{!7, !1693, !1852, !7}
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1718, file: !78, line: 1887, baseType: !1854, size: 64, offset: 1152)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = !DISubroutineType(types: !1856)
!1856 = !{!7, !1693, !1656, !1634, !13, !1697}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1718, file: !78, line: 1890, baseType: !1768, size: 64, offset: 1216)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1718, file: !78, line: 1891, baseType: !1859, size: 64, offset: 1280)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DISubroutineType(types: !1861)
!1861 = !{!7, !1693, !1745, !7}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1694, file: !78, line: 623, baseType: !1863, size: 64, offset: 192)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 64)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !78, line: 1416, size: 9472, elements: !1865)
!1865 = !{!1866, !1867, !1868, !1869, !1870, !1871, !1914, !4672, !4754, !4837, !4841, !4842, !4843, !4844, !4845, !4846, !4847, !4848, !4853, !4857, !4858, !4861, !4862, !4865, !4866, !4867, !4908, !4935, !4936, !4937, !4938, !4939, !4940, !4943, !4945, !4951, !4952, !4954, !4955, !4956, !5015, !5016, !5031, !5032, !5033, !5034, !5035, !5038, !5039, !5040, !5055, !5056, !5057, !5058, !5059, !5060, !5061, !5062, !5063}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1864, file: !78, line: 1417, baseType: !489, size: 128)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1864, file: !78, line: 1418, baseType: !1776, size: 32, offset: 128)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1864, file: !78, line: 1419, baseType: !632, size: 8, offset: 160)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1864, file: !78, line: 1420, baseType: !517, size: 64, offset: 192)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1864, file: !78, line: 1421, baseType: !1794, size: 64, offset: 256)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1864, file: !78, line: 1422, baseType: !1872, size: 64, offset: 320)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !78, line: 2228, size: 576, elements: !1874)
!1874 = !{!1875, !1876, !1877, !1883, !1887, !1891, !1895, !1896, !1897, !1901, !1905, !1906, !1907, !1911, !1912, !1913}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1873, file: !78, line: 2229, baseType: !497, size: 64)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1873, file: !78, line: 2230, baseType: !7, size: 32, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1873, file: !78, line: 2238, baseType: !1878, size: 64, offset: 128)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = !DISubroutineType(types: !1880)
!1880 = !{!7, !1881}
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 64)
!1882 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !78, line: 69, flags: DIFlagFwdDecl)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1873, file: !78, line: 2239, baseType: !1884, size: 64, offset: 192)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1886)
!1886 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !78, line: 70, flags: DIFlagFwdDecl)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1873, file: !78, line: 2240, baseType: !1888, size: 64, offset: 256)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = !DISubroutineType(types: !1890)
!1890 = !{!1656, !1872, !7, !497, !622}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1873, file: !78, line: 2242, baseType: !1892, size: 64, offset: 320)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = !DISubroutineType(types: !1894)
!1894 = !{null, !1863}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1873, file: !78, line: 2243, baseType: !1301, size: 64, offset: 384)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1873, file: !78, line: 2244, baseType: !1872, size: 64, offset: 448)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1873, file: !78, line: 2245, baseType: !1898, size: 64, offset: 512)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !482, line: 182, size: 64, elements: !1899)
!1899 = !{!1900}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1898, file: !482, line: 183, baseType: !485, size: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1873, file: !78, line: 2247, baseType: !1902, offset: 576)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1903, line: 187, elements: !1904)
!1903 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1904 = !{}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1873, file: !78, line: 2248, baseType: !1902, offset: 576)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1873, file: !78, line: 2249, baseType: !1902, offset: 576)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1873, file: !78, line: 2250, baseType: !1908, offset: 576)
!1908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1902, elements: !1909)
!1909 = !{!1910}
!1910 = !DISubrange(count: 3)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1873, file: !78, line: 2252, baseType: !1902, offset: 576)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1873, file: !78, line: 2253, baseType: !1902, offset: 576)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1873, file: !78, line: 2254, baseType: !1902, offset: 576)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1864, file: !78, line: 1423, baseType: !1915, size: 64, offset: 384)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!1916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1917)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !78, line: 1935, size: 1472, elements: !1918)
!1918 = !{!1919, !1923, !1927, !1928, !1932, !1938, !1942, !1943, !1944, !1948, !1952, !1953, !1954, !1955, !1961, !1965, !1966, !2029, !2030, !2031, !2032, !4656, !4671}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1917, file: !78, line: 1936, baseType: !1920, size: 64)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = !DISubroutineType(types: !1922)
!1922 = !{!1693, !1863}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1917, file: !78, line: 1937, baseType: !1924, size: 64, offset: 64)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1925 = !DISubroutineType(types: !1926)
!1926 = !{null, !1693}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1917, file: !78, line: 1938, baseType: !1924, size: 64, offset: 128)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1917, file: !78, line: 1940, baseType: !1929, size: 64, offset: 192)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1930 = !DISubroutineType(types: !1931)
!1931 = !{null, !1693, !7}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1917, file: !78, line: 1941, baseType: !1933, size: 64, offset: 256)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{!7, !1693, !1936}
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!1937 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !48, line: 40, flags: DIFlagFwdDecl)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1917, file: !78, line: 1942, baseType: !1939, size: 64, offset: 320)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DISubroutineType(types: !1941)
!1941 = !{!7, !1693}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1917, file: !78, line: 1943, baseType: !1924, size: 64, offset: 384)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1917, file: !78, line: 1944, baseType: !1892, size: 64, offset: 448)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1917, file: !78, line: 1945, baseType: !1945, size: 64, offset: 512)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1946 = !DISubroutineType(types: !1947)
!1947 = !{!7, !1863, !7}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1917, file: !78, line: 1946, baseType: !1949, size: 64, offset: 576)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64)
!1950 = !DISubroutineType(types: !1951)
!1951 = !{!7, !1863}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1917, file: !78, line: 1947, baseType: !1949, size: 64, offset: 640)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1917, file: !78, line: 1948, baseType: !1949, size: 64, offset: 704)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1917, file: !78, line: 1949, baseType: !1949, size: 64, offset: 768)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1917, file: !78, line: 1950, baseType: !1956, size: 64, offset: 832)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64)
!1957 = !DISubroutineType(types: !1958)
!1958 = !{!7, !1656, !1959}
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64)
!1960 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !78, line: 57, flags: DIFlagFwdDecl)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1917, file: !78, line: 1951, baseType: !1962, size: 64, offset: 896)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64)
!1963 = !DISubroutineType(types: !1964)
!1964 = !{!7, !1863, !1321, !676}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1917, file: !78, line: 1952, baseType: !1892, size: 64, offset: 960)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1917, file: !78, line: 1954, baseType: !1967, size: 64, offset: 1024)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = !DISubroutineType(types: !1969)
!1969 = !{!7, !1970, !1656}
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1972, line: 16, size: 896, elements: !1973)
!1972 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1973 = !{!1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !2002, !2024, !2025, !2028}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1971, file: !1972, line: 17, baseType: !676, size: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1971, file: !1972, line: 18, baseType: !1358, size: 64, offset: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1971, file: !1972, line: 19, baseType: !1358, size: 64, offset: 128)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1971, file: !1972, line: 20, baseType: !1358, size: 64, offset: 192)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1971, file: !1972, line: 21, baseType: !1358, size: 64, offset: 256)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1971, file: !1972, line: 22, baseType: !1794, size: 64, offset: 320)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1971, file: !1972, line: 23, baseType: !1794, size: 64, offset: 384)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1971, file: !1972, line: 24, baseType: !1982, size: 192, offset: 448)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1983, line: 53, size: 192, elements: !1984)
!1983 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1984 = !{!1985, !1986, !2001}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1982, file: !1983, line: 54, baseType: !576, size: 64)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1982, file: !1983, line: 55, baseType: !1987, offset: 64)
!1987 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1988, line: 83, baseType: !1989)
!1988 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1988, line: 71, elements: !1990)
!1990 = !{!1991}
!1991 = !DIDerivedType(tag: DW_TAG_member, scope: !1989, file: !1988, line: 72, baseType: !1992)
!1992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1989, file: !1988, line: 72, elements: !1993)
!1993 = !{!1994}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1992, file: !1988, line: 73, baseType: !1995)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1988, line: 20, elements: !1996)
!1996 = !{!1997}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1995, file: !1988, line: 21, baseType: !1998)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1999, line: 25, baseType: !2000)
!1999 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1999, line: 25, elements: !1904)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1982, file: !1983, line: 59, baseType: !489, size: 128, offset: 64)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1971, file: !1972, line: 25, baseType: !2003, size: 64, offset: 640)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2005)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1972, line: 31, size: 256, elements: !2006)
!2006 = !{!2007, !2012, !2016, !2020}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2005, file: !1972, line: 32, baseType: !2008, size: 64)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = !DISubroutineType(types: !2010)
!2010 = !{!622, !1970, !2011}
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !2005, file: !1972, line: 33, baseType: !2013, size: 64, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{null, !1970, !622}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2005, file: !1972, line: 34, baseType: !2017, size: 64, offset: 128)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!2018 = !DISubroutineType(types: !2019)
!2019 = !{!622, !1970, !622, !2011}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !2005, file: !1972, line: 35, baseType: !2021, size: 64, offset: 192)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = !DISubroutineType(types: !2023)
!2023 = !{!7, !1970, !622}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1971, file: !1972, line: 26, baseType: !7, size: 32, offset: 704)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1971, file: !1972, line: 27, baseType: !2026, size: 64, offset: 768)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!2027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1635)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1971, file: !1972, line: 28, baseType: !622, size: 64, offset: 832)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1917, file: !78, line: 1955, baseType: !1967, size: 64, offset: 1088)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1917, file: !78, line: 1956, baseType: !1967, size: 64, offset: 1152)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1917, file: !78, line: 1957, baseType: !1967, size: 64, offset: 1216)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1917, file: !78, line: 1963, baseType: !2033, size: 64, offset: 1280)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64)
!2034 = !DISubroutineType(types: !2035)
!2035 = !{!7, !1863, !2036, !2059}
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !2038, line: 68, size: 512, align: 128, elements: !2039)
!2038 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!2039 = !{!2040, !2041, !4648, !4655}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2037, file: !2038, line: 69, baseType: !517, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_member, scope: !2037, file: !2038, line: 77, baseType: !2042, size: 320, offset: 64)
!2042 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2037, file: !2038, line: 77, size: 320, elements: !2043)
!2043 = !{!2044, !2349, !2354, !2383, !2391, !2397, !4579, !4647}
!2044 = !DIDerivedType(tag: DW_TAG_member, scope: !2042, file: !2038, line: 78, baseType: !2045, size: 320)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2042, file: !2038, line: 78, size: 320, elements: !2046)
!2046 = !{!2047, !2048, !2347, !2348}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2045, file: !2038, line: 84, baseType: !489, size: 128)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !2045, file: !2038, line: 86, baseType: !2049, size: 64, offset: 128)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !78, line: 451, size: 1216, align: 64, elements: !2051)
!2051 = !{!2052, !2053, !2061, !2062, !2063, !2071, !2080, !2081, !2082, !2083, !2340, !2341, !2344, !2345, !2346}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !2050, file: !78, line: 452, baseType: !1693, size: 64)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !2050, file: !78, line: 453, baseType: !2054, size: 128, offset: 64)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !2055, line: 292, size: 128, elements: !2056)
!2055 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!2056 = !{!2057, !2058, !2060}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !2054, file: !2055, line: 293, baseType: !1987)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !2054, file: !2055, line: 295, baseType: !2059, size: 32)
!2059 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !482, line: 148, baseType: !13)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !2054, file: !2055, line: 296, baseType: !622, size: 64, offset: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2050, file: !78, line: 454, baseType: !2059, size: 32, offset: 192)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !2050, file: !78, line: 455, baseType: !588, size: 32, offset: 224)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !2050, file: !78, line: 460, baseType: !2064, size: 128, offset: 256)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !775, line: 125, size: 128, elements: !2065)
!2065 = !{!2066, !2070}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2064, file: !775, line: 126, baseType: !2067, size: 64)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !775, line: 31, size: 64, elements: !2068)
!2068 = !{!2069}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2067, file: !775, line: 32, baseType: !779, size: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !2064, file: !775, line: 127, baseType: !779, size: 64, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !2050, file: !78, line: 461, baseType: !2072, size: 256, offset: 384)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !2073, line: 35, size: 256, elements: !2074)
!2073 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2074 = !{!2075, !2076, !2077, !2079}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2072, file: !2073, line: 36, baseType: !576, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2072, file: !2073, line: 42, baseType: !576, size: 64, offset: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !2072, file: !2073, line: 46, baseType: !2078, offset: 128)
!2078 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1988, line: 29, baseType: !1995)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !2072, file: !2073, line: 47, baseType: !489, size: 128, offset: 128)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !2050, file: !78, line: 462, baseType: !517, size: 64, offset: 640)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !2050, file: !78, line: 463, baseType: !517, size: 64, offset: 704)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !2050, file: !78, line: 464, baseType: !517, size: 64, offset: 768)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !2050, file: !78, line: 465, baseType: !2084, size: 64, offset: 832)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 64)
!2085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2086)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !78, line: 367, size: 1408, elements: !2087)
!2087 = !{!2088, !2092, !2096, !2100, !2104, !2108, !2114, !2120, !2124, !2129, !2133, !2137, !2141, !2304, !2308, !2314, !2315, !2316, !2320, !2325, !2329, !2336}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !2086, file: !78, line: 368, baseType: !2089, size: 64)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!2090 = !DISubroutineType(types: !2091)
!2091 = !{!7, !2036, !1936}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !2086, file: !78, line: 369, baseType: !2093, size: 64, offset: 64)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = !DISubroutineType(types: !2095)
!2095 = !{!7, !1634, !2036}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !2086, file: !78, line: 372, baseType: !2097, size: 64, offset: 128)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64)
!2098 = !DISubroutineType(types: !2099)
!2099 = !{!7, !2049, !1936}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !2086, file: !78, line: 375, baseType: !2101, size: 64, offset: 192)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64)
!2102 = !DISubroutineType(types: !2103)
!2103 = !{!7, !2036}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !2086, file: !78, line: 381, baseType: !2105, size: 64, offset: 256)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = !DISubroutineType(types: !2107)
!2107 = !{!7, !1634, !2049, !492, !13}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !2086, file: !78, line: 383, baseType: !2109, size: 64, offset: 320)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64)
!2110 = !DISubroutineType(types: !2111)
!2111 = !{null, !2112}
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !78, line: 290, flags: DIFlagFwdDecl)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !2086, file: !78, line: 385, baseType: !2115, size: 64, offset: 384)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64)
!2116 = !DISubroutineType(types: !2117)
!2117 = !{!7, !1634, !2049, !1794, !13, !13, !2118, !2119}
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !2086, file: !78, line: 388, baseType: !2121, size: 64, offset: 448)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!2122 = !DISubroutineType(types: !2123)
!2123 = !{!7, !1634, !2049, !1794, !13, !13, !2036, !622}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !2086, file: !78, line: 393, baseType: !2125, size: 64, offset: 512)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64)
!2126 = !DISubroutineType(types: !2127)
!2127 = !{!2128, !2049, !2128}
!2128 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !482, line: 125, baseType: !536)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !2086, file: !78, line: 394, baseType: !2130, size: 64, offset: 576)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64)
!2131 = !DISubroutineType(types: !2132)
!2132 = !{null, !2036, !13, !13}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !2086, file: !78, line: 395, baseType: !2134, size: 64, offset: 640)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 64)
!2135 = !DISubroutineType(types: !2136)
!2136 = !{!7, !2036, !2059}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !2086, file: !78, line: 396, baseType: !2138, size: 64, offset: 704)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{null, !2036}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !2086, file: !78, line: 397, baseType: !2142, size: 64, offset: 768)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!2143 = !DISubroutineType(types: !2144)
!2144 = !{!1839, !2145, !2165}
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 64)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !78, line: 320, size: 384, elements: !2147)
!2147 = !{!2148, !2149, !2150, !2154, !2155, !2156, !2157, !2158}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !2146, file: !78, line: 321, baseType: !1634, size: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !2146, file: !78, line: 326, baseType: !1794, size: 64, offset: 64)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !2146, file: !78, line: 327, baseType: !2151, size: 64, offset: 128)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = !DISubroutineType(types: !2153)
!2153 = !{null, !2145, !1319, !1319}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !2146, file: !78, line: 328, baseType: !622, size: 64, offset: 192)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !2146, file: !78, line: 329, baseType: !7, size: 32, offset: 256)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !2146, file: !78, line: 330, baseType: !916, size: 16, offset: 288)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !2146, file: !78, line: 331, baseType: !916, size: 16, offset: 304)
!2158 = !DIDerivedType(tag: DW_TAG_member, scope: !2146, file: !78, line: 332, baseType: !2159, size: 64, offset: 320)
!2159 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2146, file: !78, line: 332, size: 64, elements: !2160)
!2160 = !{!2161, !2162}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !2159, file: !78, line: 333, baseType: !13, size: 32)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !2159, file: !78, line: 334, baseType: !2163, size: 64)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2164 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !78, line: 334, flags: DIFlagFwdDecl)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !2167, line: 29, size: 320, elements: !2168)
!2167 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!2168 = !{!2169, !2170, !2171, !2172, !2295}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2166, file: !2167, line: 35, baseType: !13, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !2166, file: !2167, line: 36, baseType: !1358, size: 64, offset: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2166, file: !2167, line: 37, baseType: !1358, size: 64, offset: 128)
!2172 = !DIDerivedType(tag: DW_TAG_member, scope: !2166, file: !2167, line: 38, baseType: !2173, size: 64, offset: 192)
!2173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2166, file: !2167, line: 38, size: 64, elements: !2174)
!2174 = !{!2175, !2183, !2190, !2199}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !2173, file: !2167, line: 39, baseType: !2176, size: 64)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 64)
!2177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2178)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !2179, line: 17, size: 128, elements: !2180)
!2179 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!2180 = !{!2181, !2182}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !2178, file: !2179, line: 19, baseType: !622, size: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !2178, file: !2179, line: 20, baseType: !1359, size: 64, offset: 64)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !2173, file: !2167, line: 40, baseType: !2184, size: 64)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2186)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !2167, line: 15, size: 128, elements: !2187)
!2187 = !{!2188, !2189}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !2186, file: !2167, line: 16, baseType: !622, size: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !2186, file: !2167, line: 17, baseType: !1358, size: 64, offset: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !2173, file: !2167, line: 41, baseType: !2191, size: 64)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!2192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2193)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !2194, line: 31, size: 128, elements: !2195)
!2194 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!2195 = !{!2196, !2197, !2198}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !2193, file: !2194, line: 32, baseType: !2036, size: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !2193, file: !2194, line: 33, baseType: !13, size: 32, offset: 64)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !2193, file: !2194, line: 34, baseType: !13, size: 32, offset: 96)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !2173, file: !2167, line: 42, baseType: !2200, size: 64)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 64)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !2202, line: 57, size: 1088, elements: !2203)
!2202 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!2203 = !{!2204, !2205, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2241, !2242, !2269}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2201, file: !2202, line: 58, baseType: !1982, size: 192)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !2201, file: !2202, line: 59, baseType: !2206, size: 128, offset: 192)
!2206 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !2207, line: 40, baseType: !2208)
!2207 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!2208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !2207, line: 36, size: 128, elements: !2209)
!2209 = !{!2210, !2211}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2208, file: !2207, line: 37, baseType: !1987)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2208, file: !2207, line: 38, baseType: !489, size: 128)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !2201, file: !2202, line: 59, baseType: !2206, size: 128, offset: 320)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2201, file: !2202, line: 60, baseType: !13, size: 32, offset: 448)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2201, file: !2202, line: 61, baseType: !13, size: 32, offset: 480)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !2201, file: !2202, line: 62, baseType: !13, size: 32, offset: 512)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !2201, file: !2202, line: 63, baseType: !13, size: 32, offset: 544)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !2201, file: !2202, line: 67, baseType: !13, size: 32, offset: 576)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !2201, file: !2202, line: 68, baseType: !13, size: 32, offset: 608)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !2201, file: !2202, line: 69, baseType: !13, size: 32, offset: 640)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2201, file: !2202, line: 70, baseType: !13, size: 32, offset: 672)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !2201, file: !2202, line: 71, baseType: !13, size: 32, offset: 704)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !2201, file: !2202, line: 72, baseType: !13, size: 32, offset: 736)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !2201, file: !2202, line: 73, baseType: !2036, size: 64, offset: 768)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !2201, file: !2202, line: 74, baseType: !2225, size: 64, offset: 832)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 64)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !78, line: 1314, size: 320, elements: !2227)
!2227 = !{!2228, !2236, !2237, !2238, !2239, !2240}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2226, file: !78, line: 1315, baseType: !2229)
!2229 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2230, line: 20, baseType: !2231)
!2230 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2230, line: 11, elements: !2232)
!2232 = !{!2233}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2231, file: !2230, line: 12, baseType: !2234)
!2234 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1999, line: 33, baseType: !2235)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1999, line: 31, elements: !1904)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2226, file: !78, line: 1316, baseType: !7, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2226, file: !78, line: 1317, baseType: !7, size: 32, offset: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2226, file: !78, line: 1318, baseType: !2225, size: 64, offset: 64)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2226, file: !78, line: 1319, baseType: !1634, size: 64, offset: 128)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2226, file: !78, line: 1320, baseType: !504, size: 128, align: 64, offset: 192)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !2201, file: !2202, line: 75, baseType: !2225, size: 64, offset: 896)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !2201, file: !2202, line: 76, baseType: !2243, size: 64, offset: 960)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !2202, line: 26, size: 320, elements: !2245)
!2245 = !{!2246, !2247, !2248, !2249, !2267, !2268}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2244, file: !2202, line: 27, baseType: !2036, size: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2244, file: !2202, line: 28, baseType: !13, size: 32, offset: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2244, file: !2202, line: 28, baseType: !13, size: 32, offset: 96)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2244, file: !2202, line: 29, baseType: !2250, size: 64, offset: 128)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 64)
!2251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2252)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !2202, line: 93, size: 256, elements: !2253)
!2253 = !{!2254, !2258, !2262, !2266}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !2252, file: !2202, line: 101, baseType: !2255, size: 64)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 64)
!2256 = !DISubroutineType(types: !2257)
!2257 = !{!7, !2200, !2243}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2252, file: !2202, line: 107, baseType: !2259, size: 64, offset: 64)
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 64)
!2260 = !DISubroutineType(types: !2261)
!2261 = !{null, !2200, !2243}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !2252, file: !2202, line: 117, baseType: !2263, size: 64, offset: 128)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 64)
!2264 = !DISubroutineType(types: !2265)
!2265 = !{!1093, !2200, !2243}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !2252, file: !2202, line: 122, baseType: !2263, size: 64, offset: 192)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2244, file: !2202, line: 30, baseType: !13, size: 32, offset: 192)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !2244, file: !2202, line: 31, baseType: !517, size: 64, offset: 256)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2201, file: !2202, line: 77, baseType: !2270, size: 64, offset: 1024)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2272, line: 13, size: 896, elements: !2273)
!2272 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2273 = !{!2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2271, file: !2272, line: 14, baseType: !903, size: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2271, file: !2272, line: 15, baseType: !588, size: 32, offset: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2271, file: !2272, line: 16, baseType: !588, size: 32, offset: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2271, file: !2272, line: 21, baseType: !576, size: 64, offset: 128)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2271, file: !2272, line: 27, baseType: !517, size: 64, offset: 192)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2271, file: !2272, line: 28, baseType: !517, size: 64, offset: 256)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2271, file: !2272, line: 29, baseType: !576, size: 64, offset: 320)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2271, file: !2272, line: 32, baseType: !481, size: 128, offset: 384)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2271, file: !2272, line: 33, baseType: !1700, size: 32, offset: 512)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2271, file: !2272, line: 37, baseType: !576, size: 64, offset: 576)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2271, file: !2272, line: 44, baseType: !2285, size: 256, offset: 640)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2286, line: 15, size: 256, elements: !2287)
!2286 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2287 = !{!2288, !2289, !2290, !2291, !2292, !2293, !2294}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2285, file: !2286, line: 16, baseType: !2078)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2285, file: !2286, line: 18, baseType: !7, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2285, file: !2286, line: 19, baseType: !7, size: 32, offset: 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2285, file: !2286, line: 20, baseType: !7, size: 32, offset: 64)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2285, file: !2286, line: 21, baseType: !7, size: 32, offset: 96)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2285, file: !2286, line: 22, baseType: !517, size: 64, offset: 128)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2285, file: !2286, line: 23, baseType: !517, size: 64, offset: 192)
!2295 = !DIDerivedType(tag: DW_TAG_member, scope: !2166, file: !2167, line: 44, baseType: !2296, size: 64, offset: 256)
!2296 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2166, file: !2167, line: 44, size: 64, elements: !2297)
!2297 = !{!2298, !2299}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !2296, file: !2167, line: 45, baseType: !517, size: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, scope: !2296, file: !2167, line: 46, baseType: !2300, size: 64)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2296, file: !2167, line: 46, size: 64, elements: !2301)
!2301 = !{!2302, !2303}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2300, file: !2167, line: 47, baseType: !13, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !2300, file: !2167, line: 48, baseType: !13, size: 32, offset: 32)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !2086, file: !78, line: 402, baseType: !2305, size: 64, offset: 832)
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 64)
!2306 = !DISubroutineType(types: !2307)
!2307 = !{!7, !2049, !2036, !2036, !40}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !2086, file: !78, line: 404, baseType: !2309, size: 64, offset: 896)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 64)
!2310 = !DISubroutineType(types: !2311)
!2311 = !{!1093, !2036, !2312}
!2312 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !2313, line: 305, baseType: !13)
!2313 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !2086, file: !78, line: 405, baseType: !2138, size: 64, offset: 960)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !2086, file: !78, line: 406, baseType: !2101, size: 64, offset: 1024)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !2086, file: !78, line: 407, baseType: !2317, size: 64, offset: 1088)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 64)
!2318 = !DISubroutineType(types: !2319)
!2319 = !{!7, !2036, !517, !517}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !2086, file: !78, line: 409, baseType: !2321, size: 64, offset: 1152)
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 64)
!2322 = !DISubroutineType(types: !2323)
!2323 = !{null, !2036, !2324, !2324}
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !2086, file: !78, line: 410, baseType: !2326, size: 64, offset: 1216)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2327 = !DISubroutineType(types: !2328)
!2328 = !{!7, !2049, !2036}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !2086, file: !78, line: 413, baseType: !2330, size: 64, offset: 1280)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 64)
!2331 = !DISubroutineType(types: !2332)
!2332 = !{!7, !2333, !1634, !2335}
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 64)
!2334 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !78, line: 61, flags: DIFlagFwdDecl)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !2086, file: !78, line: 415, baseType: !2337, size: 64, offset: 1344)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 64)
!2338 = !DISubroutineType(types: !2339)
!2339 = !{null, !1634}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2050, file: !78, line: 466, baseType: !517, size: 64, offset: 896)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !2050, file: !78, line: 467, baseType: !2342, size: 32, offset: 960)
!2342 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !2343, line: 8, baseType: !1308)
!2343 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !2050, file: !78, line: 468, baseType: !1987, offset: 992)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !2050, file: !78, line: 469, baseType: !489, size: 128, offset: 1024)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !2050, file: !78, line: 470, baseType: !622, size: 64, offset: 1152)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2045, file: !2038, line: 87, baseType: !517, size: 64, offset: 192)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !2045, file: !2038, line: 94, baseType: !517, size: 64, offset: 256)
!2349 = !DIDerivedType(tag: DW_TAG_member, scope: !2042, file: !2038, line: 96, baseType: !2350, size: 64)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2042, file: !2038, line: 96, size: 64, elements: !2351)
!2351 = !{!2352}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2350, file: !2038, line: 101, baseType: !2353, size: 64)
!2353 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !482, line: 143, baseType: !536)
!2354 = !DIDerivedType(tag: DW_TAG_member, scope: !2042, file: !2038, line: 103, baseType: !2355, size: 320)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2042, file: !2038, line: 103, size: 320, elements: !2356)
!2356 = !{!2357, !2367, !2371, !2372}
!2357 = !DIDerivedType(tag: DW_TAG_member, scope: !2355, file: !2038, line: 104, baseType: !2358, size: 128)
!2358 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2355, file: !2038, line: 104, size: 128, elements: !2359)
!2359 = !{!2360, !2361}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2358, file: !2038, line: 105, baseType: !489, size: 128)
!2361 = !DIDerivedType(tag: DW_TAG_member, scope: !2358, file: !2038, line: 106, baseType: !2362, size: 128)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2358, file: !2038, line: 106, size: 128, elements: !2363)
!2363 = !{!2364, !2365, !2366}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2362, file: !2038, line: 107, baseType: !2036, size: 64)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2362, file: !2038, line: 109, baseType: !7, size: 32, offset: 64)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2362, file: !2038, line: 110, baseType: !7, size: 32, offset: 96)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2355, file: !2038, line: 117, baseType: !2368, size: 64, offset: 128)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 64)
!2369 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !2370, line: 323, flags: DIFlagFwdDecl)
!2370 = !DIFile(filename: "./include/linux/signal.h", directory: "/home/lizy2001/genbc/linux")
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2355, file: !2038, line: 119, baseType: !622, size: 64, offset: 192)
!2372 = !DIDerivedType(tag: DW_TAG_member, scope: !2355, file: !2038, line: 120, baseType: !2373, size: 64, offset: 256)
!2373 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2355, file: !2038, line: 120, size: 64, elements: !2374)
!2374 = !{!2375, !2376, !2377}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2373, file: !2038, line: 121, baseType: !622, size: 64)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2373, file: !2038, line: 122, baseType: !517, size: 64)
!2377 = !DIDerivedType(tag: DW_TAG_member, scope: !2373, file: !2038, line: 123, baseType: !2378, size: 32)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2373, file: !2038, line: 123, size: 32, elements: !2379)
!2379 = !{!2380, !2381, !2382}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2378, file: !2038, line: 124, baseType: !13, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2378, file: !2038, line: 125, baseType: !13, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2378, file: !2038, line: 126, baseType: !13, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2383 = !DIDerivedType(tag: DW_TAG_member, scope: !2042, file: !2038, line: 130, baseType: !2384, size: 192)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2042, file: !2038, line: 130, size: 192, elements: !2385)
!2385 = !{!2386, !2387, !2388, !2389, !2390}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2384, file: !2038, line: 131, baseType: !517, size: 64)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2384, file: !2038, line: 134, baseType: !632, size: 8, offset: 64)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2384, file: !2038, line: 135, baseType: !632, size: 8, offset: 72)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2384, file: !2038, line: 136, baseType: !588, size: 32, offset: 96)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2384, file: !2038, line: 137, baseType: !13, size: 32, offset: 128)
!2391 = !DIDerivedType(tag: DW_TAG_member, scope: !2042, file: !2038, line: 139, baseType: !2392, size: 256)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2042, file: !2038, line: 139, size: 256, elements: !2393)
!2393 = !{!2394, !2395, !2396}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2392, file: !2038, line: 140, baseType: !517, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2392, file: !2038, line: 141, baseType: !588, size: 32, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2392, file: !2038, line: 143, baseType: !489, size: 128, offset: 128)
!2397 = !DIDerivedType(tag: DW_TAG_member, scope: !2042, file: !2038, line: 145, baseType: !2398, size: 256)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2042, file: !2038, line: 145, size: 256, elements: !2399)
!2399 = !{!2400, !2401, !2404, !2405, !4578}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2398, file: !2038, line: 146, baseType: !517, size: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2398, file: !2038, line: 147, baseType: !2402, size: 64, offset: 64)
!2402 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !2403, line: 509, baseType: !2036)
!2403 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2398, file: !2038, line: 148, baseType: !517, size: 64, offset: 128)
!2405 = !DIDerivedType(tag: DW_TAG_member, scope: !2398, file: !2038, line: 149, baseType: !2406, size: 64, offset: 192)
!2406 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2398, file: !2038, line: 149, size: 64, elements: !2407)
!2407 = !{!2408, !4577}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2406, file: !2038, line: 150, baseType: !2409, size: 64)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !2038, line: 388, size: 7296, elements: !2411)
!2411 = !{!2412, !4575}
!2412 = !DIDerivedType(tag: DW_TAG_member, scope: !2410, file: !2038, line: 389, baseType: !2413, size: 7296)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2410, file: !2038, line: 389, size: 7296, elements: !2414)
!2414 = !{!2415, !2533, !2534, !2535, !2539, !2540, !2541, !2542, !2543, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2584, !2592, !2595, !2633, !2634, !4559, !4560, !4563, !4564, !4565, !4568, !4569, !4570, !4573, !4574}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2413, file: !2038, line: 390, baseType: !2416, size: 64)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !2038, line: 305, size: 1472, elements: !2418)
!2418 = !{!2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2433, !2434, !2439, !2440, !2443, !2527, !2528, !2529, !2530, !2531}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !2417, file: !2038, line: 308, baseType: !517, size: 64)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !2417, file: !2038, line: 309, baseType: !517, size: 64, offset: 64)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !2417, file: !2038, line: 313, baseType: !2416, size: 64, offset: 128)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !2417, file: !2038, line: 313, baseType: !2416, size: 64, offset: 192)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !2417, file: !2038, line: 315, baseType: !774, size: 192, align: 64, offset: 256)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !2417, file: !2038, line: 323, baseType: !517, size: 64, offset: 448)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !2417, file: !2038, line: 327, baseType: !2409, size: 64, offset: 512)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !2417, file: !2038, line: 333, baseType: !2427, size: 64, offset: 576)
!2427 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !2403, line: 284, baseType: !2428)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !2403, line: 284, size: 64, elements: !2429)
!2429 = !{!2430}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !2428, file: !2403, line: 284, baseType: !2431, size: 64)
!2431 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !2432, line: 19, baseType: !517)
!2432 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !2417, file: !2038, line: 334, baseType: !517, size: 64, offset: 640)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !2417, file: !2038, line: 343, baseType: !2435, size: 256, offset: 704)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2417, file: !2038, line: 340, size: 256, elements: !2436)
!2436 = !{!2437, !2438}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2435, file: !2038, line: 341, baseType: !774, size: 192, align: 64)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !2435, file: !2038, line: 342, baseType: !517, size: 64, offset: 192)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !2417, file: !2038, line: 351, baseType: !489, size: 128, offset: 960)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !2417, file: !2038, line: 353, baseType: !2441, size: 64, offset: 1088)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 64)
!2442 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !2038, line: 353, flags: DIFlagFwdDecl)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2417, file: !2038, line: 356, baseType: !2444, size: 64, offset: 1152)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2446)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !48, line: 557, size: 832, elements: !2447)
!2447 = !{!2448, !2452, !2453, !2457, !2461, !2501, !2505, !2509, !2513, !2514, !2515, !2519, !2523}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2446, file: !48, line: 558, baseType: !2449, size: 64)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 64)
!2450 = !DISubroutineType(types: !2451)
!2451 = !{null, !2416}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2446, file: !48, line: 559, baseType: !2449, size: 64, offset: 64)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2446, file: !48, line: 560, baseType: !2454, size: 64, offset: 128)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 64)
!2455 = !DISubroutineType(types: !2456)
!2456 = !{!7, !2416, !517}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2446, file: !48, line: 561, baseType: !2458, size: 64, offset: 192)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2459 = !DISubroutineType(types: !2460)
!2460 = !{!7, !2416}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2446, file: !48, line: 562, baseType: !2462, size: 64, offset: 256)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 64)
!2463 = !DISubroutineType(types: !2464)
!2464 = !{!2465, !2466}
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !2038, line: 682, baseType: !13)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 64)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !48, line: 508, size: 768, elements: !2468)
!2468 = !{!2469, !2470, !2471, !2472, !2473, !2474, !2481, !2488, !2494, !2495, !2496, !2498, !2500}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2467, file: !48, line: 509, baseType: !2416, size: 64)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2467, file: !48, line: 510, baseType: !13, size: 32, offset: 64)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2467, file: !48, line: 511, baseType: !2059, size: 32, offset: 96)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2467, file: !48, line: 512, baseType: !517, size: 64, offset: 128)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2467, file: !48, line: 513, baseType: !517, size: 64, offset: 192)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2467, file: !48, line: 514, baseType: !2475, size: 64, offset: 256)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2476 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !2403, line: 385, baseType: !2477)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2403, line: 385, size: 64, elements: !2478)
!2478 = !{!2479}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2477, file: !2403, line: 385, baseType: !2480, size: 64)
!2480 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !2432, line: 15, baseType: !517)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2467, file: !48, line: 516, baseType: !2482, size: 64, offset: 320)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 64)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !2403, line: 359, baseType: !2484)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2403, line: 359, size: 64, elements: !2485)
!2485 = !{!2486}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2484, file: !2403, line: 359, baseType: !2487, size: 64)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !2432, line: 16, baseType: !517)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2467, file: !48, line: 519, baseType: !2489, size: 64, offset: 384)
!2489 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !2432, line: 21, baseType: !2490)
!2490 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2432, line: 21, size: 64, elements: !2491)
!2491 = !{!2492}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2490, file: !2432, line: 21, baseType: !2493, size: 64)
!2493 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !2432, line: 14, baseType: !517)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2467, file: !48, line: 521, baseType: !2036, size: 64, offset: 448)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2467, file: !48, line: 522, baseType: !2036, size: 64, offset: 512)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2467, file: !48, line: 528, baseType: !2497, size: 64, offset: 576)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 64)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2467, file: !48, line: 532, baseType: !2499, size: 64, offset: 640)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 64)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2467, file: !48, line: 536, baseType: !2402, size: 64, offset: 704)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2446, file: !48, line: 563, baseType: !2502, size: 64, offset: 320)
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 64)
!2503 = !DISubroutineType(types: !2504)
!2504 = !{!2465, !2466, !47}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2446, file: !48, line: 565, baseType: !2506, size: 64, offset: 384)
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 64)
!2507 = !DISubroutineType(types: !2508)
!2508 = !{null, !2466, !517, !517}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2446, file: !48, line: 567, baseType: !2510, size: 64, offset: 448)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64)
!2511 = !DISubroutineType(types: !2512)
!2512 = !{!517, !2416}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2446, file: !48, line: 571, baseType: !2462, size: 64, offset: 512)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2446, file: !48, line: 574, baseType: !2462, size: 64, offset: 576)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2446, file: !48, line: 579, baseType: !2516, size: 64, offset: 640)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 64)
!2517 = !DISubroutineType(types: !2518)
!2518 = !{!7, !2416, !517, !622, !7, !7}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2446, file: !48, line: 585, baseType: !2520, size: 64, offset: 704)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 64)
!2521 = !DISubroutineType(types: !2522)
!2522 = !{!497, !2416}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2446, file: !48, line: 615, baseType: !2524, size: 64, offset: 768)
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 64)
!2525 = !DISubroutineType(types: !2526)
!2526 = !{!2036, !2416, !517}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !2417, file: !2038, line: 359, baseType: !517, size: 64, offset: 1216)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !2417, file: !2038, line: 361, baseType: !1634, size: 64, offset: 1280)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !2417, file: !2038, line: 362, baseType: !622, size: 64, offset: 1344)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !2417, file: !2038, line: 365, baseType: !576, size: 64, offset: 1408)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !2417, file: !2038, line: 373, baseType: !2532, offset: 1472)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !2038, line: 296, elements: !1904)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !2413, file: !2038, line: 391, baseType: !2067, size: 64, offset: 64)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !2413, file: !2038, line: 392, baseType: !536, size: 64, offset: 128)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2413, file: !2038, line: 394, baseType: !2536, size: 64, offset: 192)
!2536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2537, size: 64)
!2537 = !DISubroutineType(types: !2538)
!2538 = !{!517, !1634, !517, !517, !517, !517}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !2413, file: !2038, line: 398, baseType: !517, size: 64, offset: 256)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !2413, file: !2038, line: 399, baseType: !517, size: 64, offset: 320)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !2413, file: !2038, line: 405, baseType: !517, size: 64, offset: 384)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !2413, file: !2038, line: 406, baseType: !517, size: 64, offset: 448)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2413, file: !2038, line: 407, baseType: !2544, size: 64, offset: 512)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 64)
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !2403, line: 286, baseType: !2546)
!2546 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2403, line: 286, size: 64, elements: !2547)
!2547 = !{!2548}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2546, file: !2403, line: 286, baseType: !2549, size: 64)
!2549 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !2432, line: 18, baseType: !517)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !2413, file: !2038, line: 416, baseType: !588, size: 32, offset: 576)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !2413, file: !2038, line: 428, baseType: !588, size: 32, offset: 608)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !2413, file: !2038, line: 437, baseType: !588, size: 32, offset: 640)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !2413, file: !2038, line: 447, baseType: !588, size: 32, offset: 672)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !2413, file: !2038, line: 450, baseType: !576, size: 64, offset: 704)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !2413, file: !2038, line: 452, baseType: !7, size: 32, offset: 768)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !2413, file: !2038, line: 454, baseType: !1987, offset: 800)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !2413, file: !2038, line: 457, baseType: !2072, size: 256, offset: 832)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !2413, file: !2038, line: 459, baseType: !489, size: 128, offset: 1088)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !2413, file: !2038, line: 466, baseType: !517, size: 64, offset: 1216)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !2413, file: !2038, line: 467, baseType: !517, size: 64, offset: 1280)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !2413, file: !2038, line: 469, baseType: !517, size: 64, offset: 1344)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2413, file: !2038, line: 470, baseType: !517, size: 64, offset: 1408)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !2413, file: !2038, line: 471, baseType: !578, size: 64, offset: 1472)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !2413, file: !2038, line: 472, baseType: !517, size: 64, offset: 1536)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !2413, file: !2038, line: 473, baseType: !517, size: 64, offset: 1600)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !2413, file: !2038, line: 474, baseType: !517, size: 64, offset: 1664)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !2413, file: !2038, line: 475, baseType: !517, size: 64, offset: 1728)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !2413, file: !2038, line: 477, baseType: !1987, offset: 1792)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !2413, file: !2038, line: 478, baseType: !517, size: 64, offset: 1792)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !2413, file: !2038, line: 478, baseType: !517, size: 64, offset: 1856)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !2413, file: !2038, line: 478, baseType: !517, size: 64, offset: 1920)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !2413, file: !2038, line: 478, baseType: !517, size: 64, offset: 1984)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !2413, file: !2038, line: 479, baseType: !517, size: 64, offset: 2048)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !2413, file: !2038, line: 479, baseType: !517, size: 64, offset: 2112)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !2413, file: !2038, line: 479, baseType: !517, size: 64, offset: 2176)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !2413, file: !2038, line: 480, baseType: !517, size: 64, offset: 2240)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !2413, file: !2038, line: 480, baseType: !517, size: 64, offset: 2304)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !2413, file: !2038, line: 480, baseType: !517, size: 64, offset: 2368)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !2413, file: !2038, line: 480, baseType: !517, size: 64, offset: 2432)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !2413, file: !2038, line: 482, baseType: !2581, size: 2816, offset: 2496)
!2581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !517, size: 2816, elements: !2582)
!2582 = !{!2583}
!2583 = !DISubrange(count: 44)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !2413, file: !2038, line: 488, baseType: !2585, size: 256, offset: 5312)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2586, line: 60, size: 256, elements: !2587)
!2586 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2587 = !{!2588}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2585, file: !2586, line: 61, baseType: !2589, size: 256)
!2589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 256, elements: !2590)
!2590 = !{!2591}
!2591 = !DISubrange(count: 4)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !2413, file: !2038, line: 490, baseType: !2593, size: 64, offset: 5568)
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2594, size: 64)
!2594 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !2038, line: 490, flags: DIFlagFwdDecl)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2413, file: !2038, line: 493, baseType: !2596, size: 896, offset: 5632)
!2596 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2597, line: 53, baseType: !2598)
!2597 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2597, line: 13, size: 896, elements: !2599)
!2599 = !{!2600, !2601, !2602, !2603, !2606, !2607, !2608, !2609, !2629, !2630, !2631}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2598, file: !2597, line: 18, baseType: !536, size: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2598, file: !2597, line: 28, baseType: !578, size: 64, offset: 64)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2598, file: !2597, line: 31, baseType: !2072, size: 256, offset: 128)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2598, file: !2597, line: 32, baseType: !2604, size: 64, offset: 384)
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 64)
!2605 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2597, line: 32, flags: DIFlagFwdDecl)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2598, file: !2597, line: 37, baseType: !611, size: 16, offset: 448)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2598, file: !2597, line: 40, baseType: !1982, size: 192, offset: 512)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2598, file: !2597, line: 41, baseType: !622, size: 64, offset: 704)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2598, file: !2597, line: 42, baseType: !2610, size: 64, offset: 768)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 64)
!2611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2612)
!2612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2613, line: 13, size: 896, elements: !2614)
!2613 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2614 = !{!2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2612, file: !2613, line: 14, baseType: !622, size: 64)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2612, file: !2613, line: 15, baseType: !517, size: 64, offset: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2612, file: !2613, line: 17, baseType: !517, size: 64, offset: 128)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2612, file: !2613, line: 17, baseType: !517, size: 64, offset: 192)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2612, file: !2613, line: 19, baseType: !1319, size: 64, offset: 256)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2612, file: !2613, line: 21, baseType: !1319, size: 64, offset: 320)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2612, file: !2613, line: 22, baseType: !1319, size: 64, offset: 384)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2612, file: !2613, line: 23, baseType: !1319, size: 64, offset: 448)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2612, file: !2613, line: 24, baseType: !1319, size: 64, offset: 512)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2612, file: !2613, line: 25, baseType: !1319, size: 64, offset: 576)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2612, file: !2613, line: 26, baseType: !1319, size: 64, offset: 640)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2612, file: !2613, line: 27, baseType: !1319, size: 64, offset: 704)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2612, file: !2613, line: 28, baseType: !1319, size: 64, offset: 768)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2612, file: !2613, line: 29, baseType: !1319, size: 64, offset: 832)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2598, file: !2597, line: 44, baseType: !588, size: 32, offset: 832)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2598, file: !2597, line: 50, baseType: !916, size: 16, offset: 864)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2598, file: !2597, line: 51, baseType: !2632, size: 16, offset: 880)
!2632 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !537, line: 18, baseType: !640)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2413, file: !2038, line: 495, baseType: !517, size: 64, offset: 6528)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !2413, file: !2038, line: 497, baseType: !2635, size: 64, offset: 6592)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !2038, line: 381, size: 384, elements: !2637)
!2637 = !{!2638, !2639, !4558}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2636, file: !2038, line: 382, baseType: !588, size: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2636, file: !2038, line: 383, baseType: !2640, size: 128, offset: 64)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !2038, line: 376, size: 128, elements: !2641)
!2641 = !{!2642, !4556}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2640, file: !2038, line: 377, baseType: !2643, size: 64)
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 64)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2645, line: 640, size: 48640, elements: !2646)
!2645 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2646 = !{!2647, !2653, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2668, !2686, !2697, !2776, !2777, !2778, !2789, !2790, !2792, !2793, !2794, !2795, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2873, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !3199, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3233, !3238, !3287, !3288, !3289, !3290, !3291, !3294, !3297, !3300, !3303, !4019, !4115, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4163, !4164, !4165, !4166, !4167, !4172, !4173, !4174, !4177, !4178, !4181, !4184, !4187, !4190, !4222, !4225, !4226, !4305, !4306, !4309, !4310, !4313, !4314, !4315, !4319, !4320, !4321, !4334, !4335, !4336, !4346, !4351, !4352, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4379, !4380, !4381, !4382, !4383, !4384, !4385, !4386, !4387}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2644, file: !2645, line: 646, baseType: !2648, size: 128)
!2648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2649, line: 56, size: 128, elements: !2650)
!2649 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2650 = !{!2651, !2652}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2648, file: !2649, line: 57, baseType: !517, size: 64)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2648, file: !2649, line: 58, baseType: !1308, size: 32, offset: 64)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2644, file: !2645, line: 649, baseType: !2654, size: 64, offset: 128)
!2654 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1319)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2644, file: !2645, line: 657, baseType: !622, size: 64, offset: 192)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2644, file: !2645, line: 658, baseType: !903, size: 32, offset: 256)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2644, file: !2645, line: 660, baseType: !13, size: 32, offset: 288)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2644, file: !2645, line: 661, baseType: !13, size: 32, offset: 320)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2644, file: !2645, line: 684, baseType: !7, size: 32, offset: 352)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2644, file: !2645, line: 686, baseType: !7, size: 32, offset: 384)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2644, file: !2645, line: 687, baseType: !7, size: 32, offset: 416)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2644, file: !2645, line: 688, baseType: !7, size: 32, offset: 448)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2644, file: !2645, line: 689, baseType: !13, size: 32, offset: 480)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2644, file: !2645, line: 691, baseType: !2665, size: 64, offset: 512)
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 64)
!2666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2667)
!2667 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2645, line: 691, flags: DIFlagFwdDecl)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2644, file: !2645, line: 692, baseType: !2669, size: 832, offset: 576)
!2669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2645, line: 451, size: 832, elements: !2670)
!2670 = !{!2671, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2669, file: !2645, line: 453, baseType: !2672, size: 128)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2645, line: 325, size: 128, elements: !2673)
!2673 = !{!2674, !2675}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2672, file: !2645, line: 326, baseType: !517, size: 64)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2672, file: !2645, line: 327, baseType: !1308, size: 32, offset: 64)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2669, file: !2645, line: 454, baseType: !774, size: 192, align: 64, offset: 128)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2669, file: !2645, line: 455, baseType: !489, size: 128, offset: 320)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2669, file: !2645, line: 456, baseType: !13, size: 32, offset: 448)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2669, file: !2645, line: 458, baseType: !536, size: 64, offset: 512)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2669, file: !2645, line: 459, baseType: !536, size: 64, offset: 576)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2669, file: !2645, line: 460, baseType: !536, size: 64, offset: 640)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2669, file: !2645, line: 461, baseType: !536, size: 64, offset: 704)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2669, file: !2645, line: 463, baseType: !536, size: 64, offset: 768)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2669, file: !2645, line: 465, baseType: !2685, offset: 832)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2645, line: 415, elements: !1904)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2644, file: !2645, line: 693, baseType: !2687, size: 384, offset: 1408)
!2687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2645, line: 489, size: 384, elements: !2688)
!2688 = !{!2689, !2690, !2691, !2692, !2693, !2694, !2695}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2687, file: !2645, line: 490, baseType: !489, size: 128)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2687, file: !2645, line: 491, baseType: !517, size: 64, offset: 128)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2687, file: !2645, line: 492, baseType: !517, size: 64, offset: 192)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2687, file: !2645, line: 493, baseType: !13, size: 32, offset: 256)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2687, file: !2645, line: 494, baseType: !611, size: 16, offset: 288)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2687, file: !2645, line: 495, baseType: !611, size: 16, offset: 304)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2687, file: !2645, line: 497, baseType: !2696, size: 64, offset: 320)
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 64)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2644, file: !2645, line: 697, baseType: !2698, size: 1792, offset: 1792)
!2698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2645, line: 507, size: 1792, elements: !2699)
!2699 = !{!2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2773, !2774}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2698, file: !2645, line: 508, baseType: !774, size: 192, align: 64)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2698, file: !2645, line: 515, baseType: !536, size: 64, offset: 192)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2698, file: !2645, line: 516, baseType: !536, size: 64, offset: 256)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2698, file: !2645, line: 517, baseType: !536, size: 64, offset: 320)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2698, file: !2645, line: 518, baseType: !536, size: 64, offset: 384)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2698, file: !2645, line: 519, baseType: !536, size: 64, offset: 448)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2698, file: !2645, line: 526, baseType: !582, size: 64, offset: 512)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2698, file: !2645, line: 527, baseType: !536, size: 64, offset: 576)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2698, file: !2645, line: 528, baseType: !13, size: 32, offset: 640)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2698, file: !2645, line: 554, baseType: !13, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2698, file: !2645, line: 555, baseType: !13, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2698, file: !2645, line: 556, baseType: !13, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2698, file: !2645, line: 557, baseType: !13, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2698, file: !2645, line: 563, baseType: !2714, size: 512, offset: 704)
!2714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !54, line: 118, size: 512, elements: !2715)
!2715 = !{!2716, !2722, !2723, !2728, !2769, !2770, !2771, !2772}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2714, file: !54, line: 119, baseType: !2717, size: 256)
!2717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2718, line: 9, size: 256, elements: !2719)
!2718 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2719 = !{!2720, !2721}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2717, file: !2718, line: 10, baseType: !774, size: 192, align: 64)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2717, file: !2718, line: 11, baseType: !793, size: 64, offset: 192)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2714, file: !54, line: 120, baseType: !793, size: 64, offset: 256)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2714, file: !54, line: 121, baseType: !2724, size: 64, offset: 320)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 64)
!2725 = !DISubroutineType(types: !2726)
!2726 = !{!53, !2727}
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 64)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2714, file: !54, line: 122, baseType: !2729, size: 64, offset: 384)
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 64)
!2730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !54, line: 159, size: 512, align: 512, elements: !2731)
!2731 = !{!2732, !2750, !2751, !2754, !2759, !2760, !2764, !2768}
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2730, file: !54, line: 160, baseType: !2733, size: 64)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 64)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !54, line: 214, size: 4608, align: 512, elements: !2735)
!2735 = !{!2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2734, file: !54, line: 215, baseType: !2078)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2734, file: !54, line: 216, baseType: !13, size: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2734, file: !54, line: 217, baseType: !13, size: 32, offset: 32)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2734, file: !54, line: 218, baseType: !13, size: 32, offset: 64)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2734, file: !54, line: 219, baseType: !13, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2734, file: !54, line: 220, baseType: !13, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2734, file: !54, line: 221, baseType: !13, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2734, file: !54, line: 222, baseType: !13, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2734, file: !54, line: 233, baseType: !793, size: 64, offset: 128)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2734, file: !54, line: 234, baseType: !2727, size: 64, offset: 192)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2734, file: !54, line: 235, baseType: !793, size: 64, offset: 256)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2734, file: !54, line: 236, baseType: !2727, size: 64, offset: 320)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2734, file: !54, line: 237, baseType: !2749, size: 4096, offset: 512)
!2749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2730, size: 4096, elements: !728)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2730, file: !54, line: 161, baseType: !13, size: 32, offset: 64)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2730, file: !54, line: 162, baseType: !2752, size: 32, offset: 96)
!2752 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !482, line: 27, baseType: !2753)
!2753 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1360, line: 96, baseType: !7)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2730, file: !54, line: 163, baseType: !2755, size: 32, offset: 128)
!2755 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1662, line: 276, baseType: !2756)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1662, line: 276, size: 32, elements: !2757)
!2757 = !{!2758}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2756, file: !1662, line: 276, baseType: !1666, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2730, file: !54, line: 164, baseType: !2727, size: 64, offset: 192)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2730, file: !54, line: 165, baseType: !2761, size: 128, offset: 256)
!2761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2718, line: 14, size: 128, elements: !2762)
!2762 = !{!2763}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2761, file: !2718, line: 15, baseType: !2064, size: 128)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2730, file: !54, line: 166, baseType: !2765, size: 64, offset: 384)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = !DISubroutineType(types: !2767)
!2767 = !{!793}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2730, file: !54, line: 167, baseType: !793, size: 64, offset: 448)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2714, file: !54, line: 123, baseType: !1116, size: 8, offset: 448)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2714, file: !54, line: 124, baseType: !1116, size: 8, offset: 456)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2714, file: !54, line: 125, baseType: !1116, size: 8, offset: 464)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2714, file: !54, line: 126, baseType: !1116, size: 8, offset: 472)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2698, file: !2645, line: 572, baseType: !2714, size: 512, offset: 1216)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2698, file: !2645, line: 580, baseType: !2775, size: 64, offset: 1728)
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 64)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2644, file: !2645, line: 721, baseType: !13, size: 32, offset: 3584)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2644, file: !2645, line: 722, baseType: !7, size: 32, offset: 3616)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2644, file: !2645, line: 723, baseType: !2779, size: 64, offset: 3648)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2781)
!2781 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2782, line: 17, baseType: !2783)
!2782 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2782, line: 17, size: 64, elements: !2784)
!2784 = !{!2785}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2783, file: !2782, line: 17, baseType: !2786, size: 64)
!2786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !517, size: 64, elements: !2787)
!2787 = !{!2788}
!2788 = !DISubrange(count: 1)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2644, file: !2645, line: 724, baseType: !2781, size: 64, offset: 3712)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2644, file: !2645, line: 749, baseType: !2791, offset: 3776)
!2791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2645, line: 290, elements: !1904)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2644, file: !2645, line: 751, baseType: !489, size: 128, offset: 3776)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2644, file: !2645, line: 757, baseType: !2409, size: 64, offset: 3904)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2644, file: !2645, line: 758, baseType: !2409, size: 64, offset: 3968)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2644, file: !2645, line: 761, baseType: !2796, size: 320, offset: 4032)
!2796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2586, line: 34, size: 320, elements: !2797)
!2797 = !{!2798, !2799}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2796, file: !2586, line: 35, baseType: !536, size: 64)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2796, file: !2586, line: 36, baseType: !2800, size: 256, offset: 64)
!2800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2416, size: 256, elements: !2590)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2644, file: !2645, line: 766, baseType: !7, size: 32, offset: 4352)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2644, file: !2645, line: 767, baseType: !7, size: 32, offset: 4384)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2644, file: !2645, line: 768, baseType: !7, size: 32, offset: 4416)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2644, file: !2645, line: 770, baseType: !7, size: 32, offset: 4448)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2644, file: !2645, line: 772, baseType: !517, size: 64, offset: 4480)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2644, file: !2645, line: 775, baseType: !13, size: 32, offset: 4544)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2644, file: !2645, line: 778, baseType: !13, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2644, file: !2645, line: 779, baseType: !13, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2644, file: !2645, line: 780, baseType: !13, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2644, file: !2645, line: 803, baseType: !13, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2644, file: !2645, line: 806, baseType: !13, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2644, file: !2645, line: 807, baseType: !13, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2644, file: !2645, line: 809, baseType: !13, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2644, file: !2645, line: 815, baseType: !13, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2644, file: !2645, line: 831, baseType: !517, size: 64, offset: 4672)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2644, file: !2645, line: 833, baseType: !2817, size: 384, offset: 4736)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !59, line: 25, size: 384, elements: !2818)
!2818 = !{!2819, !2824}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2817, file: !59, line: 26, baseType: !2820, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DISubroutineType(types: !2822)
!2822 = !{!1319, !2823}
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2824 = !DIDerivedType(tag: DW_TAG_member, scope: !2817, file: !59, line: 27, baseType: !2825, size: 320, offset: 64)
!2825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2817, file: !59, line: 27, size: 320, elements: !2826)
!2826 = !{!2827, !2837, !2863}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2825, file: !59, line: 36, baseType: !2828, size: 320)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2825, file: !59, line: 29, size: 320, elements: !2829)
!2829 = !{!2830, !2832, !2833, !2834, !2835, !2836}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2828, file: !59, line: 30, baseType: !2831, size: 64)
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2828, file: !59, line: 31, baseType: !1308, size: 32, offset: 64)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2828, file: !59, line: 32, baseType: !1308, size: 32, offset: 96)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2828, file: !59, line: 33, baseType: !1308, size: 32, offset: 128)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2828, file: !59, line: 34, baseType: !536, size: 64, offset: 192)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2828, file: !59, line: 35, baseType: !2831, size: 64, offset: 256)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2825, file: !59, line: 46, baseType: !2838, size: 192)
!2838 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2825, file: !59, line: 38, size: 192, elements: !2839)
!2839 = !{!2840, !2841, !2842, !2862}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2838, file: !59, line: 39, baseType: !2752, size: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2838, file: !59, line: 40, baseType: !58, size: 32, offset: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, scope: !2838, file: !59, line: 41, baseType: !2843, size: 64, offset: 64)
!2843 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2838, file: !59, line: 41, size: 64, elements: !2844)
!2844 = !{!2845, !2853}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2843, file: !59, line: 42, baseType: !2846, size: 64)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 64)
!2847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2848, line: 7, size: 128, elements: !2849)
!2848 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2849 = !{!2850, !2852}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2847, file: !2848, line: 8, baseType: !2851, size: 64)
!2851 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1360, line: 93, baseType: !584)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2847, file: !2848, line: 9, baseType: !584, size: 64, offset: 64)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2843, file: !59, line: 43, baseType: !2854, size: 64)
!2854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2855, size: 64)
!2855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2856, line: 7, size: 64, elements: !2857)
!2856 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2857 = !{!2858, !2861}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2855, file: !2856, line: 8, baseType: !2859, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2856, line: 5, baseType: !2860)
!2860 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !537, line: 20, baseType: !629)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2855, file: !2856, line: 9, baseType: !2860, size: 32, offset: 32)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2838, file: !59, line: 45, baseType: !536, size: 64, offset: 128)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2825, file: !59, line: 54, baseType: !2864, size: 256)
!2864 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2825, file: !59, line: 48, size: 256, elements: !2865)
!2865 = !{!2866, !2869, !2870, !2871, !2872}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2864, file: !59, line: 49, baseType: !2867, size: 64)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2868 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !59, line: 14, flags: DIFlagFwdDecl)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2864, file: !59, line: 50, baseType: !7, size: 32, offset: 64)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2864, file: !59, line: 51, baseType: !7, size: 32, offset: 96)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2864, file: !59, line: 52, baseType: !517, size: 64, offset: 128)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2864, file: !59, line: 53, baseType: !517, size: 64, offset: 192)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2644, file: !2645, line: 835, baseType: !2874, size: 32, offset: 5120)
!2874 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !482, line: 22, baseType: !2875)
!2875 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1360, line: 28, baseType: !7)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2644, file: !2645, line: 836, baseType: !2874, size: 32, offset: 5152)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2644, file: !2645, line: 840, baseType: !517, size: 64, offset: 5184)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2644, file: !2645, line: 849, baseType: !2643, size: 64, offset: 5248)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2644, file: !2645, line: 852, baseType: !2643, size: 64, offset: 5312)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2644, file: !2645, line: 857, baseType: !489, size: 128, offset: 5376)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2644, file: !2645, line: 858, baseType: !489, size: 128, offset: 5504)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2644, file: !2645, line: 859, baseType: !2643, size: 64, offset: 5632)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2644, file: !2645, line: 867, baseType: !489, size: 128, offset: 5696)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2644, file: !2645, line: 868, baseType: !489, size: 128, offset: 5824)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2644, file: !2645, line: 871, baseType: !2886, size: 64, offset: 5952)
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 64)
!2887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !87, line: 59, size: 768, elements: !2888)
!2888 = !{!2889, !2890, !2891, !2892, !2894, !2895, !2896, !2897}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2887, file: !87, line: 61, baseType: !903, size: 32)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2887, file: !87, line: 62, baseType: !13, size: 32, offset: 32)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2887, file: !87, line: 63, baseType: !1987, offset: 64)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2887, file: !87, line: 65, baseType: !2893, size: 256, offset: 64)
!2893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1898, size: 256, elements: !2590)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2887, file: !87, line: 66, baseType: !1898, size: 64, offset: 320)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2887, file: !87, line: 68, baseType: !2206, size: 128, offset: 384)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2887, file: !87, line: 69, baseType: !504, size: 128, align: 64, offset: 512)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2887, file: !87, line: 70, baseType: !2898, size: 128, offset: 640)
!2898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2899, size: 128, elements: !2787)
!2899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !87, line: 54, size: 128, elements: !2900)
!2900 = !{!2901, !2902}
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2899, file: !87, line: 55, baseType: !7, size: 32)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2899, file: !87, line: 56, baseType: !2903, size: 64, offset: 64)
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 64)
!2904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !2905, line: 20, size: 1088, elements: !2906)
!2905 = !DIFile(filename: "./include/linux/pid_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2906 = !{!2907, !2912, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !3196, !3197, !3198}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !2904, file: !2905, line: 21, baseType: !2908, size: 32)
!2908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2909, line: 19, size: 32, elements: !2910)
!2909 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2910 = !{!2911}
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2908, file: !2909, line: 20, baseType: !903, size: 32)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "idr", scope: !2904, file: !2905, line: 22, baseType: !2913, size: 192, offset: 64)
!2913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !2914, line: 19, size: 192, elements: !2915)
!2914 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!2915 = !{!2916, !2917, !2918}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !2913, file: !2914, line: 20, baseType: !2054, size: 128)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !2913, file: !2914, line: 21, baseType: !13, size: 32, offset: 128)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !2913, file: !2914, line: 22, baseType: !13, size: 32, offset: 160)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2904, file: !2905, line: 23, baseType: !504, size: 128, align: 64, offset: 256)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "pid_allocated", scope: !2904, file: !2905, line: 24, baseType: !13, size: 32, offset: 384)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "child_reaper", scope: !2904, file: !2905, line: 25, baseType: !2643, size: 64, offset: 448)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "pid_cachep", scope: !2904, file: !2905, line: 26, baseType: !2368, size: 64, offset: 512)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2904, file: !2905, line: 27, baseType: !13, size: 32, offset: 576)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2904, file: !2905, line: 28, baseType: !2903, size: 64, offset: 640)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2904, file: !2905, line: 32, baseType: !2926, size: 64, offset: 704)
!2926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2927, size: 64)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2928, line: 56, size: 4160, elements: !2929)
!2928 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2929 = !{!2930, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2969, !2970, !2971, !3076, !3077, !3089, !3181, !3182, !3194}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2927, file: !2928, line: 57, baseType: !2931, size: 576)
!2931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2928, line: 23, size: 576, elements: !2932)
!2932 = !{!2933, !2934}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2931, file: !2928, line: 24, baseType: !1308, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, scope: !2931, file: !2928, line: 25, baseType: !2935, size: 512, offset: 64)
!2935 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2931, file: !2928, line: 25, size: 512, elements: !2936)
!2936 = !{!2937, !2946}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2935, file: !2928, line: 26, baseType: !2938, size: 480)
!2938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2939, size: 480, elements: !2944)
!2939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2928, line: 17, size: 96, elements: !2940)
!2940 = !{!2941, !2942, !2943}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2939, file: !2928, line: 18, baseType: !1308, size: 32)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2939, file: !2928, line: 19, baseType: !1308, size: 32, offset: 32)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2939, file: !2928, line: 20, baseType: !1308, size: 32, offset: 64)
!2944 = !{!2945}
!2945 = !DISubrange(count: 5)
!2946 = !DIDerivedType(tag: DW_TAG_member, scope: !2935, file: !2928, line: 27, baseType: !2947, size: 128)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2935, file: !2928, line: 27, size: 128, elements: !2948)
!2948 = !{!2949, !2951}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2947, file: !2928, line: 28, baseType: !2950, size: 64)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 64)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2947, file: !2928, line: 29, baseType: !2950, size: 64, offset: 64)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2927, file: !2928, line: 58, baseType: !2931, size: 576, offset: 576)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2927, file: !2928, line: 59, baseType: !2931, size: 576, offset: 1152)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2927, file: !2928, line: 60, baseType: !588, size: 32, offset: 1728)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2927, file: !2928, line: 61, baseType: !2926, size: 64, offset: 1792)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2927, file: !2928, line: 62, baseType: !7, size: 32, offset: 1856)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2927, file: !2928, line: 63, baseType: !1700, size: 32, offset: 1888)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2927, file: !2928, line: 64, baseType: !1708, size: 32, offset: 1920)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2927, file: !2928, line: 65, baseType: !2960, size: 192, offset: 1984)
!2960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2961, line: 7, size: 192, elements: !2962)
!2961 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2962 = !{!2963, !2964, !2968}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2960, file: !2961, line: 8, baseType: !576, size: 64)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2960, file: !2961, line: 9, baseType: !2965, size: 64, offset: 64)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 64)
!2966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2967)
!2967 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2961, line: 5, flags: DIFlagFwdDecl)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2960, file: !2961, line: 10, baseType: !13, size: 32, offset: 128)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2927, file: !2928, line: 66, baseType: !517, size: 64, offset: 2176)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2927, file: !2928, line: 74, baseType: !489, size: 128, offset: 2240)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2927, file: !2928, line: 75, baseType: !2972, size: 64, offset: 2368)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 64)
!2973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2974, line: 189, size: 1664, elements: !2975)
!2974 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2975 = !{!2976, !2977, !2980, !2985, !2986, !2989, !2990, !2995, !2996, !2997, !2998, !3000, !3001, !3002, !3003, !3004, !3040, !3061}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2973, file: !2974, line: 190, baseType: !903, size: 32)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2973, file: !2974, line: 191, baseType: !2978, size: 32, offset: 32)
!2978 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2974, line: 28, baseType: !2979)
!2979 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !482, line: 98, baseType: !2860)
!2980 = !DIDerivedType(tag: DW_TAG_member, scope: !2973, file: !2974, line: 192, baseType: !2981, size: 192, offset: 64)
!2981 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2973, file: !2974, line: 192, size: 192, elements: !2982)
!2982 = !{!2983, !2984}
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2981, file: !2974, line: 193, baseType: !489, size: 128)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2981, file: !2974, line: 194, baseType: !774, size: 192, align: 64)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2973, file: !2974, line: 199, baseType: !2072, size: 256, offset: 256)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2973, file: !2974, line: 200, baseType: !2987, size: 64, offset: 512)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!2988 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2974, line: 200, flags: DIFlagFwdDecl)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2973, file: !2974, line: 201, baseType: !622, size: 64, offset: 576)
!2990 = !DIDerivedType(tag: DW_TAG_member, scope: !2973, file: !2974, line: 202, baseType: !2991, size: 64, offset: 640)
!2991 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2973, file: !2974, line: 202, size: 64, elements: !2992)
!2992 = !{!2993, !2994}
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2991, file: !2974, line: 203, baseType: !1801, size: 64)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2991, file: !2974, line: 204, baseType: !1801, size: 64)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2973, file: !2974, line: 206, baseType: !1801, size: 64, offset: 704)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2973, file: !2974, line: 207, baseType: !1700, size: 32, offset: 768)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2973, file: !2974, line: 208, baseType: !1708, size: 32, offset: 800)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2973, file: !2974, line: 209, baseType: !2999, size: 32, offset: 832)
!2999 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2974, line: 31, baseType: !1820)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2973, file: !2974, line: 210, baseType: !611, size: 16, offset: 864)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2973, file: !2974, line: 211, baseType: !611, size: 16, offset: 880)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2973, file: !2974, line: 215, baseType: !641, size: 16, offset: 896)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2973, file: !2974, line: 222, baseType: !517, size: 64, offset: 960)
!3004 = !DIDerivedType(tag: DW_TAG_member, scope: !2973, file: !2974, line: 239, baseType: !3005, size: 320, offset: 1024)
!3005 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2973, file: !2974, line: 239, size: 320, elements: !3006)
!3006 = !{!3007, !3032}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !3005, file: !2974, line: 240, baseType: !3008, size: 320)
!3008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2974, line: 108, size: 320, elements: !3009)
!3009 = !{!3010, !3011, !3021, !3024, !3031}
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3008, file: !2974, line: 110, baseType: !517, size: 64)
!3011 = !DIDerivedType(tag: DW_TAG_member, scope: !3008, file: !2974, line: 111, baseType: !3012, size: 64, offset: 64)
!3012 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3008, file: !2974, line: 111, size: 64, elements: !3013)
!3013 = !{!3014, !3020}
!3014 = !DIDerivedType(tag: DW_TAG_member, scope: !3012, file: !2974, line: 112, baseType: !3015, size: 64)
!3015 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3012, file: !2974, line: 112, size: 64, elements: !3016)
!3016 = !{!3017, !3018}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !3015, file: !2974, line: 114, baseType: !916, size: 16)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3015, file: !2974, line: 115, baseType: !3019, size: 48, offset: 16)
!3019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 48, elements: !1320)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3012, file: !2974, line: 121, baseType: !517, size: 64)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3008, file: !2974, line: 123, baseType: !3022, size: 64, offset: 128)
!3022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3023, size: 64)
!3023 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2974, line: 96, flags: DIFlagFwdDecl)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !3008, file: !2974, line: 124, baseType: !3025, size: 64, offset: 192)
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 64)
!3026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2974, line: 102, size: 192, elements: !3027)
!3027 = !{!3028, !3029, !3030}
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3026, file: !2974, line: 103, baseType: !504, size: 128, align: 64)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !3026, file: !2974, line: 104, baseType: !903, size: 32, offset: 128)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !3026, file: !2974, line: 105, baseType: !1093, size: 8, offset: 160)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3008, file: !2974, line: 125, baseType: !497, size: 64, offset: 256)
!3032 = !DIDerivedType(tag: DW_TAG_member, scope: !3005, file: !2974, line: 241, baseType: !3033, size: 320)
!3033 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3005, file: !2974, line: 241, size: 320, elements: !3034)
!3034 = !{!3035, !3036, !3037, !3038, !3039}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3033, file: !2974, line: 242, baseType: !517, size: 64)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !3033, file: !2974, line: 243, baseType: !517, size: 64, offset: 64)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3033, file: !2974, line: 244, baseType: !3022, size: 64, offset: 128)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !3033, file: !2974, line: 245, baseType: !3025, size: 64, offset: 192)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3033, file: !2974, line: 246, baseType: !676, size: 64, offset: 256)
!3040 = !DIDerivedType(tag: DW_TAG_member, scope: !2973, file: !2974, line: 254, baseType: !3041, size: 256, offset: 1344)
!3041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2973, file: !2974, line: 254, size: 256, elements: !3042)
!3042 = !{!3043, !3049}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !3041, file: !2974, line: 255, baseType: !3044, size: 256)
!3044 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2974, line: 128, size: 256, elements: !3045)
!3045 = !{!3046, !3047}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !3044, file: !2974, line: 129, baseType: !622, size: 64)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3044, file: !2974, line: 130, baseType: !3048, size: 256)
!3048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !622, size: 256, elements: !2590)
!3049 = !DIDerivedType(tag: DW_TAG_member, scope: !3041, file: !2974, line: 256, baseType: !3050, size: 256)
!3050 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3041, file: !2974, line: 256, size: 256, elements: !3051)
!3051 = !{!3052, !3053}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !3050, file: !2974, line: 258, baseType: !489, size: 128)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3050, file: !2974, line: 259, baseType: !3054, size: 128, offset: 128)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !3055, line: 22, size: 128, elements: !3056)
!3055 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!3056 = !{!3057, !3060}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3054, file: !3055, line: 23, baseType: !3058, size: 64)
!3058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3059, size: 64)
!3059 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !3055, line: 23, flags: DIFlagFwdDecl)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !3054, file: !3055, line: 24, baseType: !517, size: 64, offset: 64)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2973, file: !2974, line: 274, baseType: !3062, size: 64, offset: 1600)
!3062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3063, size: 64)
!3063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2974, line: 170, size: 192, elements: !3064)
!3064 = !{!3065, !3074, !3075}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3063, file: !2974, line: 171, baseType: !3066, size: 64)
!3066 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2974, line: 165, baseType: !3067)
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3068, size: 64)
!3068 = !DISubroutineType(types: !3069)
!3069 = !{!7, !2972, !3070, !3072, !2972}
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 64)
!3071 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3023)
!3072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3073, size: 64)
!3073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3044)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3063, file: !2974, line: 172, baseType: !2972, size: 64, offset: 64)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !3063, file: !2974, line: 173, baseType: !3022, size: 64, offset: 128)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2927, file: !2928, line: 76, baseType: !2072, size: 256, offset: 2432)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2927, file: !2928, line: 83, baseType: !3078, size: 256, offset: 2688)
!3078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !3079, line: 102, size: 256, elements: !3080)
!3079 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!3080 = !{!3081, !3082, !3083}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3078, file: !3079, line: 103, baseType: !576, size: 64)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3078, file: !3079, line: 104, baseType: !489, size: 128, offset: 64)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3078, file: !3079, line: 105, baseType: !3084, size: 64, offset: 192)
!3084 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !3079, line: 21, baseType: !3085)
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 64)
!3086 = !DISubroutineType(types: !3087)
!3087 = !{null, !3088}
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2927, file: !2928, line: 85, baseType: !3090, size: 768, offset: 2944)
!3090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !3091, line: 156, size: 768, elements: !3092)
!3091 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!3092 = !{!3093, !3098}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !3090, file: !3091, line: 157, baseType: !3094, size: 64)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 64)
!3095 = !DISubroutineType(types: !3096)
!3096 = !{!7, !3097}
!3097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 64)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3090, file: !3091, line: 158, baseType: !3099, size: 704, offset: 64)
!3099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !3091, line: 150, size: 704, elements: !3100)
!3100 = !{!3101, !3180}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3099, file: !3091, line: 152, baseType: !3102, size: 640)
!3102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !3091, line: 131, size: 640, elements: !3103)
!3103 = !{!3104, !3137, !3149, !3150, !3170, !3171, !3173, !3179}
!3104 = !DIDerivedType(tag: DW_TAG_member, scope: !3102, file: !3091, line: 132, baseType: !3105, size: 192)
!3105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3102, file: !3091, line: 132, size: 192, elements: !3106)
!3106 = !{!3107, !3136}
!3107 = !DIDerivedType(tag: DW_TAG_member, scope: !3105, file: !3091, line: 133, baseType: !3108, size: 192)
!3108 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3105, file: !3091, line: 133, size: 192, elements: !3109)
!3109 = !{!3110, !3133, !3134, !3135}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !3108, file: !3091, line: 134, baseType: !3111, size: 64)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 64)
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !3091, line: 112, size: 512, elements: !3113)
!3113 = !{!3114, !3115, !3116, !3117, !3118, !3119, !3125, !3131, !3132}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !3112, file: !3091, line: 113, baseType: !497, size: 64)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3112, file: !3091, line: 114, baseType: !622, size: 64, offset: 64)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !3112, file: !3091, line: 115, baseType: !7, size: 32, offset: 128)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3112, file: !3091, line: 116, baseType: !1697, size: 16, offset: 160)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3112, file: !3091, line: 117, baseType: !3111, size: 64, offset: 192)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !3112, file: !3091, line: 118, baseType: !3120, size: 64, offset: 256)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !3091, line: 47, baseType: !3122)
!3122 = !DISubroutineType(types: !3123)
!3123 = !{!7, !3111, !7, !622, !3124, !2011}
!3124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3112, file: !3091, line: 119, baseType: !3126, size: 64, offset: 320)
!3126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3127, size: 64)
!3127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !3091, line: 94, size: 192, elements: !3128)
!3128 = !{!3129, !3130}
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3127, file: !3091, line: 95, baseType: !588, size: 32)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3127, file: !3091, line: 96, baseType: !2206, size: 128, offset: 64)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !3112, file: !3091, line: 120, baseType: !622, size: 64, offset: 384)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !3112, file: !3091, line: 121, baseType: !622, size: 64, offset: 448)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !3108, file: !3091, line: 135, baseType: !7, size: 32, offset: 64)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3108, file: !3091, line: 136, baseType: !7, size: 32, offset: 96)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !3108, file: !3091, line: 137, baseType: !7, size: 32, offset: 128)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3105, file: !3091, line: 139, baseType: !504, size: 128, align: 64)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !3102, file: !3091, line: 141, baseType: !3138, size: 64, offset: 192)
!3138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3139, size: 64)
!3139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !3140, line: 26, size: 192, elements: !3141)
!3140 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!3141 = !{!3142, !3143}
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3139, file: !3140, line: 27, baseType: !13, size: 32)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3139, file: !3140, line: 28, baseType: !3144, size: 128, offset: 64)
!3144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !3145, line: 43, size: 128, elements: !3146)
!3145 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!3146 = !{!3147, !3148}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3144, file: !3145, line: 44, baseType: !2078)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !3144, file: !3145, line: 45, baseType: !489, size: 128)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !3102, file: !3091, line: 142, baseType: !3111, size: 64, offset: 256)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3102, file: !3091, line: 143, baseType: !3151, size: 64, offset: 320)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !3091, line: 161, size: 960, elements: !3153)
!3153 = !{!3154, !3155, !3159, !3166}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !3152, file: !3091, line: 162, baseType: !3090, size: 768)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !3152, file: !3091, line: 163, baseType: !3156, size: 64, offset: 768)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = !DISubroutineType(types: !3158)
!3158 = !{!3097, !3151}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !3152, file: !3091, line: 164, baseType: !3160, size: 64, offset: 832)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 64)
!3161 = !DISubroutineType(types: !3162)
!3162 = !{null, !3163, !3111, !3164, !3165}
!3163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3102, size: 64)
!3164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !3152, file: !3091, line: 167, baseType: !3167, size: 64, offset: 896)
!3167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3168, size: 64)
!3168 = !DISubroutineType(types: !3169)
!3169 = !{!7, !3163, !3111}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !3102, file: !3091, line: 144, baseType: !3097, size: 64, offset: 384)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3102, file: !3091, line: 145, baseType: !3172, size: 64, offset: 448)
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3102, file: !3091, line: 146, baseType: !3174, size: 64, offset: 512)
!3174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3175, size: 64)
!3175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !3091, line: 124, size: 256, elements: !3176)
!3176 = !{!3177, !3178}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3175, file: !3091, line: 125, baseType: !774, size: 192, align: 64)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3175, file: !3091, line: 126, baseType: !3163, size: 64, offset: 192)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !3102, file: !3091, line: 147, baseType: !1898, size: 64, offset: 576)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3099, file: !3091, line: 153, baseType: !2067, size: 64, offset: 640)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2927, file: !2928, line: 86, baseType: !3163, size: 64, offset: 3712)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2927, file: !2928, line: 88, baseType: !3183, size: 64, offset: 3776)
!3183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3184, size: 64)
!3184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2928, line: 92, size: 576, elements: !3185)
!3185 = !{!3186, !3187, !3188, !3189, !3190}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3184, file: !2928, line: 93, baseType: !481, size: 128)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3184, file: !2928, line: 94, baseType: !2926, size: 64, offset: 128)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3184, file: !2928, line: 95, baseType: !1700, size: 32, offset: 192)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3184, file: !2928, line: 96, baseType: !7, size: 32, offset: 224)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !3184, file: !2928, line: 97, baseType: !3191, size: 320, offset: 256)
!3191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !588, size: 320, elements: !3192)
!3192 = !{!3193}
!3193 = !DISubrange(count: 10)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2927, file: !2928, line: 89, baseType: !3195, size: 320, offset: 3840)
!3195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 320, elements: !3192)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2904, file: !2905, line: 33, baseType: !3183, size: 64, offset: 768)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "reboot", scope: !2904, file: !2905, line: 34, baseType: !7, size: 32, offset: 832)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2904, file: !2905, line: 35, baseType: !2960, size: 192, offset: 896)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2644, file: !2645, line: 872, baseType: !3200, size: 512, offset: 6016)
!3200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 512, elements: !2590)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2644, file: !2645, line: 873, baseType: !489, size: 128, offset: 6528)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2644, file: !2645, line: 874, baseType: !489, size: 128, offset: 6656)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2644, file: !2645, line: 876, baseType: !3138, size: 64, offset: 6784)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2644, file: !2645, line: 879, baseType: !1321, size: 64, offset: 6848)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2644, file: !2645, line: 882, baseType: !1321, size: 64, offset: 6912)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2644, file: !2645, line: 884, baseType: !536, size: 64, offset: 6976)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2644, file: !2645, line: 885, baseType: !536, size: 64, offset: 7040)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2644, file: !2645, line: 890, baseType: !536, size: 64, offset: 7104)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2644, file: !2645, line: 891, baseType: !3210, size: 128, offset: 7168)
!3210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2645, line: 242, size: 128, elements: !3211)
!3211 = !{!3212, !3213, !3214}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3210, file: !2645, line: 244, baseType: !536, size: 64)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3210, file: !2645, line: 245, baseType: !536, size: 64, offset: 64)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3210, file: !2645, line: 246, baseType: !2078, offset: 128)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2644, file: !2645, line: 900, baseType: !517, size: 64, offset: 7296)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2644, file: !2645, line: 901, baseType: !517, size: 64, offset: 7360)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2644, file: !2645, line: 904, baseType: !536, size: 64, offset: 7424)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2644, file: !2645, line: 907, baseType: !536, size: 64, offset: 7488)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2644, file: !2645, line: 910, baseType: !517, size: 64, offset: 7552)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2644, file: !2645, line: 911, baseType: !517, size: 64, offset: 7616)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2644, file: !2645, line: 914, baseType: !3222, size: 640, offset: 7680)
!3222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !3223, line: 123, size: 640, elements: !3224)
!3223 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!3224 = !{!3225, !3231, !3232}
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !3222, file: !3223, line: 124, baseType: !3226, size: 576)
!3226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3227, size: 576, elements: !1909)
!3227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !3223, line: 108, size: 192, elements: !3228)
!3228 = !{!3229, !3230}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !3227, file: !3223, line: 109, baseType: !536, size: 64)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !3227, file: !3223, line: 110, baseType: !2761, size: 128, offset: 64)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !3222, file: !3223, line: 125, baseType: !13, size: 32, offset: 576)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !3222, file: !3223, line: 126, baseType: !13, size: 32, offset: 608)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2644, file: !2645, line: 917, baseType: !3234, size: 192, offset: 8320)
!3234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !3223, line: 134, size: 192, elements: !3235)
!3235 = !{!3236, !3237}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3234, file: !3223, line: 135, baseType: !504, size: 128, align: 64)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !3234, file: !3223, line: 136, baseType: !13, size: 32, offset: 128)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2644, file: !2645, line: 923, baseType: !3239, size: 64, offset: 8512)
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3240, size: 64)
!3240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3241)
!3241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !3242, line: 111, size: 1280, elements: !3243)
!3242 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!3243 = !{!3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3282}
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !3241, file: !3242, line: 112, baseType: !588, size: 32)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3241, file: !3242, line: 120, baseType: !1700, size: 32, offset: 32)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3241, file: !3242, line: 121, baseType: !1708, size: 32, offset: 64)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !3241, file: !3242, line: 122, baseType: !1700, size: 32, offset: 96)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !3241, file: !3242, line: 123, baseType: !1708, size: 32, offset: 128)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3241, file: !3242, line: 124, baseType: !1700, size: 32, offset: 160)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !3241, file: !3242, line: 125, baseType: !1708, size: 32, offset: 192)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !3241, file: !3242, line: 126, baseType: !1700, size: 32, offset: 224)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !3241, file: !3242, line: 127, baseType: !1708, size: 32, offset: 256)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !3241, file: !3242, line: 128, baseType: !13, size: 32, offset: 288)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !3241, file: !3242, line: 129, baseType: !3255, size: 64, offset: 320)
!3255 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !3256, line: 26, baseType: !3257)
!3256 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!3257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !3256, line: 24, size: 64, elements: !3258)
!3258 = !{!3259}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !3257, file: !3256, line: 25, baseType: !3260, size: 64)
!3260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !650, size: 64, elements: !3261)
!3261 = !{!3262}
!3262 = !DISubrange(count: 2)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !3241, file: !3242, line: 130, baseType: !3255, size: 64, offset: 384)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !3241, file: !3242, line: 131, baseType: !3255, size: 64, offset: 448)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !3241, file: !3242, line: 132, baseType: !3255, size: 64, offset: 512)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !3241, file: !3242, line: 133, baseType: !3255, size: 64, offset: 576)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !3241, file: !3242, line: 135, baseType: !632, size: 8, offset: 640)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !3241, file: !3242, line: 137, baseType: !2972, size: 64, offset: 704)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !3241, file: !3242, line: 138, baseType: !2972, size: 64, offset: 768)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !3241, file: !3242, line: 139, baseType: !2972, size: 64, offset: 832)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !3241, file: !3242, line: 140, baseType: !2972, size: 64, offset: 896)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3241, file: !3242, line: 145, baseType: !2270, size: 64, offset: 960)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3241, file: !3242, line: 146, baseType: !2926, size: 64, offset: 1024)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !3241, file: !3242, line: 147, baseType: !3275, size: 64, offset: 1088)
!3275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3276, size: 64)
!3276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !3242, line: 25, size: 64, elements: !3277)
!3277 = !{!3278, !3279, !3280}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !3276, file: !3242, line: 26, baseType: !588, size: 32)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !3276, file: !3242, line: 27, baseType: !7, size: 32, offset: 32)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3276, file: !3242, line: 28, baseType: !3281, offset: 64)
!3281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1708, elements: !819)
!3282 = !DIDerivedType(tag: DW_TAG_member, scope: !3241, file: !3242, line: 149, baseType: !3283, size: 128, offset: 1152)
!3283 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3241, file: !3242, line: 149, size: 128, elements: !3284)
!3284 = !{!3285, !3286}
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !3283, file: !3242, line: 150, baseType: !7, size: 32)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3283, file: !3242, line: 151, baseType: !504, size: 128, align: 64)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2644, file: !2645, line: 926, baseType: !3239, size: 64, offset: 8576)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2644, file: !2645, line: 929, baseType: !3239, size: 64, offset: 8640)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2644, file: !2645, line: 933, baseType: !2972, size: 64, offset: 8704)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2644, file: !2645, line: 943, baseType: !472, size: 128, offset: 8768)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2644, file: !2645, line: 945, baseType: !3292, size: 64, offset: 8896)
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3293, size: 64)
!3293 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2645, line: 49, flags: DIFlagFwdDecl)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2644, file: !2645, line: 956, baseType: !3295, size: 64, offset: 8960)
!3295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3296, size: 64)
!3296 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2645, line: 45, flags: DIFlagFwdDecl)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2644, file: !2645, line: 959, baseType: !3298, size: 64, offset: 9024)
!3298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3299, size: 64)
!3299 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2645, line: 959, flags: DIFlagFwdDecl)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2644, file: !2645, line: 962, baseType: !3301, size: 64, offset: 9088)
!3301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3302, size: 64)
!3302 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2645, line: 66, flags: DIFlagFwdDecl)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2644, file: !2645, line: 966, baseType: !3304, size: 64, offset: 9152)
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3305, size: 64)
!3305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !3306, line: 31, size: 576, elements: !3307)
!3306 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!3307 = !{!3308, !3309, !3312, !3315, !3318, !3319, !4002, !4005, !4006}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3305, file: !3306, line: 32, baseType: !588, size: 32)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !3305, file: !3306, line: 33, baseType: !3310, size: 64, offset: 64)
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3311, size: 64)
!3311 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !3306, line: 9, flags: DIFlagFwdDecl)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !3305, file: !3306, line: 34, baseType: !3313, size: 64, offset: 128)
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3314, size: 64)
!3314 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !3306, line: 10, flags: DIFlagFwdDecl)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !3305, file: !3306, line: 35, baseType: !3316, size: 64, offset: 192)
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3317, size: 64)
!3317 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !3306, line: 8, flags: DIFlagFwdDecl)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !3305, file: !3306, line: 36, baseType: !2903, size: 64, offset: 256)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !3305, file: !3306, line: 37, baseType: !3320, size: 64, offset: 320)
!3320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3321, size: 64)
!3321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !3322, line: 56, size: 16896, elements: !3323)
!3322 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!3323 = !{!3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3345, !3346, !3347, !3348, !3349, !3352, !3354, !3355, !3370, !3371, !3372, !3373, !3383, !3453, !3459, !3465, !3478, !3787, !3941, !3948, !3951, !3974, !3975, !4001}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !3321, file: !3322, line: 60, baseType: !903, size: 32)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3321, file: !3322, line: 63, baseType: !903, size: 32, offset: 32)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !3321, file: !3322, line: 66, baseType: !1987, offset: 64)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !3321, file: !3322, line: 68, baseType: !13, size: 32, offset: 64)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !3321, file: !3322, line: 70, baseType: !13, size: 32, offset: 96)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !3321, file: !3322, line: 71, baseType: !7, size: 32, offset: 128)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !3321, file: !3322, line: 73, baseType: !1987, offset: 160)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !3321, file: !3322, line: 74, baseType: !588, size: 32, offset: 160)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3321, file: !3322, line: 76, baseType: !489, size: 128, offset: 192)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !3321, file: !3322, line: 77, baseType: !489, size: 128, offset: 320)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !3321, file: !3322, line: 83, baseType: !1641, size: 64, offset: 448)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !3321, file: !3322, line: 86, baseType: !3025, size: 64, offset: 512)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3321, file: !3322, line: 88, baseType: !2926, size: 64, offset: 576)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3321, file: !3322, line: 89, baseType: !3183, size: 64, offset: 640)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !3321, file: !3322, line: 90, baseType: !2913, size: 192, offset: 704)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3321, file: !3322, line: 92, baseType: !2960, size: 192, offset: 896)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !3321, file: !3322, line: 94, baseType: !489, size: 128, offset: 1088)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !3321, file: !3322, line: 95, baseType: !3342, size: 64, offset: 1216)
!3342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3343, size: 64)
!3343 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3344, line: 123, flags: DIFlagFwdDecl)
!3344 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !3321, file: !3322, line: 96, baseType: !3342, size: 64, offset: 1280)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !3321, file: !3322, line: 99, baseType: !3090, size: 768, offset: 1344)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !3321, file: !3322, line: 102, baseType: !786, size: 64, offset: 2112)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !3321, file: !3322, line: 103, baseType: !786, size: 64, offset: 2176)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !3321, file: !3322, line: 105, baseType: !3350, size: 64, offset: 2240)
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 64)
!3351 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !3322, line: 48, flags: DIFlagFwdDecl)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !3321, file: !3322, line: 107, baseType: !3353, size: 64, offset: 2304)
!3353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 64)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !3321, file: !3322, line: 108, baseType: !3353, size: 64, offset: 2368)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !3321, file: !3322, line: 109, baseType: !3356, size: 64, offset: 2432)
!3356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !3357, line: 70, size: 64, elements: !3358)
!3357 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!3358 = !{!3359}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3356, file: !3357, line: 71, baseType: !3360, size: 64)
!3360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3361, size: 64)
!3361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !3357, line: 54, size: 192, elements: !3362)
!3362 = !{!3363, !3368, !3369}
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !3361, file: !3357, line: 55, baseType: !3364, size: 64)
!3364 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !3357, line: 51, baseType: !3365)
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3366, size: 64)
!3366 = !DISubroutineType(types: !3367)
!3367 = !{!7, !3360, !517, !622}
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3361, file: !3357, line: 56, baseType: !3360, size: 64, offset: 64)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !3361, file: !3357, line: 57, baseType: !7, size: 32, offset: 128)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !3321, file: !3322, line: 114, baseType: !1308, size: 32, offset: 2496)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !3321, file: !3322, line: 116, baseType: !495, size: 64, offset: 2560)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !3321, file: !3322, line: 119, baseType: !489, size: 128, offset: 2624)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !3321, file: !3322, line: 121, baseType: !3374, size: 256, offset: 2752)
!3374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !3375, line: 8, size: 256, elements: !3376)
!3375 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!3376 = !{!3377, !3378, !3379, !3380}
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !3374, file: !3375, line: 10, baseType: !3163, size: 64)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !3374, file: !3375, line: 12, baseType: !7, size: 32, offset: 64)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !3374, file: !3375, line: 15, baseType: !1321, size: 64, offset: 128)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !3374, file: !3375, line: 16, baseType: !3381, size: 64, offset: 192)
!3381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3382, size: 64)
!3382 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !3375, line: 6, flags: DIFlagFwdDecl)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !3321, file: !3322, line: 122, baseType: !3384, size: 832, offset: 3008)
!3384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !3385, line: 7, size: 832, elements: !3386)
!3385 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!3386 = !{!3387, !3394, !3405, !3413, !3421, !3422, !3430, !3438, !3439, !3440, !3441, !3442, !3448}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !3384, file: !3385, line: 8, baseType: !3388, size: 64)
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !3390, line: 92, size: 1024, elements: !3391)
!3390 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!3391 = !{!3392}
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3389, file: !3390, line: 93, baseType: !3393, size: 1024)
!3393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !517, size: 1024, elements: !474)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !3384, file: !3385, line: 9, baseType: !3395, size: 64, offset: 64)
!3395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3396, size: 64)
!3396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !3390, line: 51, size: 2368, elements: !3397)
!3397 = !{!3398, !3402}
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3396, file: !3390, line: 53, baseType: !3399, size: 2368)
!3399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 2368, elements: !3400)
!3400 = !{!3401}
!3401 = !DISubrange(count: 37)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3396, file: !3390, line: 54, baseType: !3403, offset: 2368)
!3403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !3404, line: 68, elements: !1904)
!3404 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !3384, file: !3385, line: 10, baseType: !3406, size: 64, offset: 128)
!3406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3407, size: 64)
!3407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !3390, line: 104, size: 7936, elements: !3408)
!3408 = !{!3409}
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3407, file: !3390, line: 105, baseType: !3410, size: 7936)
!3410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !517, size: 7936, elements: !3411)
!3411 = !{!3412}
!3412 = !DISubrange(count: 124)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !3384, file: !3385, line: 11, baseType: !3414, size: 64, offset: 192)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !3390, line: 98, size: 576, elements: !3416)
!3416 = !{!3417}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3415, file: !3390, line: 99, baseType: !3418, size: 576)
!3418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !517, size: 576, elements: !3419)
!3419 = !{!3420}
!3420 = !DISubrange(count: 9)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !3384, file: !3385, line: 12, baseType: !3414, size: 64, offset: 256)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !3384, file: !3385, line: 13, baseType: !3423, size: 64, offset: 320)
!3423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 64)
!3424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !3390, line: 59, size: 1792, elements: !3425)
!3425 = !{!3426}
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3424, file: !3390, line: 60, baseType: !3427, size: 1792)
!3427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !517, size: 1792, elements: !3428)
!3428 = !{!3429}
!3429 = !DISubrange(count: 28)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !3384, file: !3385, line: 14, baseType: !3431, size: 64, offset: 384)
!3431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3432, size: 64)
!3432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !3390, line: 64, size: 32768, elements: !3433)
!3433 = !{!3434}
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3432, file: !3390, line: 65, baseType: !3435, size: 32768)
!3435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 32768, elements: !3436)
!3436 = !{!3437}
!3437 = !DISubrange(count: 512)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !3384, file: !3385, line: 17, baseType: !3342, size: 64, offset: 448)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !3384, file: !3385, line: 18, baseType: !3414, size: 64, offset: 512)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !3384, file: !3385, line: 19, baseType: !3414, size: 64, offset: 576)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !3384, file: !3385, line: 20, baseType: !3395, size: 64, offset: 640)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !3384, file: !3385, line: 21, baseType: !3443, size: 64, offset: 704)
!3443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3444, size: 64)
!3444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !3390, line: 71, size: 384, elements: !3445)
!3445 = !{!3446}
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3444, file: !3390, line: 72, baseType: !3447, size: 384)
!3447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !517, size: 384, elements: !1320)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !3384, file: !3385, line: 22, baseType: !3449, size: 64, offset: 768)
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !3390, line: 81, size: 32768, elements: !3451)
!3451 = !{!3452}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3450, file: !3390, line: 82, baseType: !3435, size: 32768)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !3321, file: !3322, line: 123, baseType: !3454, size: 256, offset: 3840)
!3454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !3455, line: 11, size: 256, elements: !3456)
!3455 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!3456 = !{!3457, !3458}
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !3454, file: !3455, line: 12, baseType: !1982, size: 192)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !3454, file: !3455, line: 13, baseType: !1898, size: 64, offset: 192)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !3321, file: !3322, line: 124, baseType: !3460, size: 128, offset: 4096)
!3460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !3461, line: 9, size: 128, elements: !3462)
!3461 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!3462 = !{!3463, !3464}
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !3460, file: !3461, line: 10, baseType: !7, size: 32)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !3460, file: !3461, line: 11, baseType: !3163, size: 64, offset: 64)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !3321, file: !3322, line: 125, baseType: !3466, size: 512, offset: 4224)
!3466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !3467, line: 11, size: 512, elements: !3468)
!3467 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!3468 = !{!3469, !3470, !3471, !3472, !3473}
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !3466, file: !3467, line: 12, baseType: !2067, size: 64)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !3466, file: !3467, line: 13, baseType: !3353, size: 64, offset: 64)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3466, file: !3467, line: 15, baseType: !13, size: 32, offset: 128)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !3466, file: !3467, line: 16, baseType: !1308, size: 32, offset: 160)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !3466, file: !3467, line: 17, baseType: !3474, size: 320, offset: 192)
!3474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !3357, line: 65, size: 320, elements: !3475)
!3475 = !{!3476, !3477}
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !3474, file: !3357, line: 66, baseType: !2072, size: 256)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3474, file: !3357, line: 67, baseType: !3360, size: 64, offset: 256)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !3321, file: !3322, line: 126, baseType: !3479, size: 5440, offset: 4736)
!3479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !3480, line: 43, size: 5440, elements: !3481)
!3480 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!3481 = !{!3482, !3483, !3484, !3485, !3486, !3487, !3490, !3491, !3494, !3495, !3496, !3497, !3498, !3499, !3501, !3502, !3505, !3506, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3731, !3732, !3733, !3734, !3735, !3743, !3744, !3745, !3749, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3769, !3770, !3772, !3773, !3776, !3777, !3778, !3779, !3780}
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !3479, file: !3480, line: 45, baseType: !3163, size: 64)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3479, file: !3480, line: 46, baseType: !3163, size: 64, offset: 64)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !3479, file: !3480, line: 47, baseType: !3163, size: 64, offset: 128)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3479, file: !3480, line: 48, baseType: !3163, size: 64, offset: 192)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !3479, file: !3480, line: 49, baseType: !3163, size: 64, offset: 256)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3479, file: !3480, line: 51, baseType: !3488, size: 64, offset: 320)
!3488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3489, size: 64)
!3489 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !3480, line: 16, flags: DIFlagFwdDecl)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3479, file: !3480, line: 52, baseType: !3488, size: 64, offset: 384)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !3479, file: !3480, line: 53, baseType: !3492, size: 64, offset: 448)
!3492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3493, size: 64)
!3493 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !3480, line: 53, flags: DIFlagFwdDecl)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !3479, file: !3480, line: 54, baseType: !1982, size: 192, offset: 512)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !3479, file: !3480, line: 62, baseType: !1093, size: 8, offset: 704)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3479, file: !3480, line: 66, baseType: !3353, size: 64, offset: 768)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !3479, file: !3480, line: 67, baseType: !1093, size: 8, offset: 832)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !3479, file: !3480, line: 68, baseType: !786, size: 64, offset: 896)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3479, file: !3480, line: 70, baseType: !3500, size: 64, offset: 960)
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3479, file: !3480, line: 71, baseType: !786, size: 64, offset: 1024)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3479, file: !3480, line: 73, baseType: !3503, size: 64, offset: 1088)
!3503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3504, size: 64)
!3504 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !3480, line: 73, flags: DIFlagFwdDecl)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3479, file: !3480, line: 74, baseType: !3500, size: 64, offset: 1152)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3479, file: !3480, line: 75, baseType: !3507, size: 64, offset: 1216)
!3507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3508, size: 64)
!3508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !3509, line: 9, size: 1728, elements: !3510)
!3509 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!3510 = !{!3511, !3512, !3513, !3514, !3515, !3642, !3643, !3644, !3645, !3646}
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !3508, file: !3509, line: 11, baseType: !1319, size: 64)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !3508, file: !3509, line: 12, baseType: !1319, size: 64, offset: 64)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3508, file: !3509, line: 13, baseType: !7, size: 32, offset: 128)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !3508, file: !3509, line: 14, baseType: !7, size: 32, offset: 160)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3508, file: !3509, line: 15, baseType: !3516, size: 64, offset: 192)
!3516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3517, size: 64)
!3517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !3509, line: 98, size: 960, elements: !3518)
!3518 = !{!3519, !3520, !3592, !3596, !3597, !3598, !3599, !3640, !3641}
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !3517, file: !3509, line: 99, baseType: !13, size: 32)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !3517, file: !3509, line: 101, baseType: !3521, size: 64, offset: 64)
!3521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3522, size: 64)
!3522 = !DISubroutineType(types: !3523)
!3523 = !{null, !3524, !3590}
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64)
!3525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !3509, line: 77, size: 1408, elements: !3526)
!3526 = !{!3527, !3533, !3566, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589}
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3525, file: !3509, line: 78, baseType: !3528, size: 64)
!3528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !3529, line: 17, size: 64, elements: !3530)
!3529 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!3530 = !{!3531}
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3528, file: !3529, line: 18, baseType: !3532, size: 64)
!3532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3528, size: 64)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3525, file: !3509, line: 82, baseType: !3534, size: 352, offset: 64)
!3534 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3525, file: !3509, line: 79, size: 352, elements: !3535)
!3535 = !{!3536, !3546}
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3534, file: !3509, line: 80, baseType: !3537, size: 160)
!3537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !3509, line: 41, size: 160, elements: !3538)
!3538 = !{!3539, !3541, !3542, !3543, !3544, !3545}
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3537, file: !3509, line: 42, baseType: !3540, size: 32)
!3540 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !860, line: 32, baseType: !650)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3537, file: !3509, line: 43, baseType: !3540, size: 32, offset: 32)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3537, file: !3509, line: 44, baseType: !1308, size: 32, offset: 64)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !3537, file: !3509, line: 45, baseType: !1308, size: 32, offset: 96)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3537, file: !3509, line: 46, baseType: !870, size: 16, offset: 128)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3537, file: !3509, line: 47, baseType: !916, size: 16, offset: 144)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3534, file: !3509, line: 81, baseType: !3547, size: 352)
!3547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !3509, line: 50, size: 352, elements: !3548)
!3548 = !{!3549, !3562, !3563, !3564, !3565}
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3547, file: !3509, line: 51, baseType: !3550, size: 128)
!3550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !3551, line: 33, size: 128, elements: !3552)
!3551 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!3552 = !{!3553}
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !3550, file: !3551, line: 40, baseType: !3554, size: 128)
!3554 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3550, file: !3551, line: 34, size: 128, elements: !3555)
!3555 = !{!3556, !3558, !3560}
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !3554, file: !3551, line: 35, baseType: !3557, size: 128)
!3557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 128, elements: !474)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !3554, file: !3551, line: 37, baseType: !3559, size: 128)
!3559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !870, size: 128, elements: !728)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !3554, file: !3551, line: 38, baseType: !3561, size: 128)
!3561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3540, size: 128, elements: !2590)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3547, file: !3509, line: 52, baseType: !3550, size: 128, offset: 128)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3547, file: !3509, line: 53, baseType: !1308, size: 32, offset: 256)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3547, file: !3509, line: 54, baseType: !3540, size: 32, offset: 288)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !3547, file: !3509, line: 55, baseType: !1308, size: 32, offset: 320)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3525, file: !3509, line: 83, baseType: !3567, size: 320, offset: 448)
!3567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3568, line: 11, size: 320, elements: !3569)
!3568 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3569 = !{!3570, !3571, !3572, !3577}
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3567, file: !3568, line: 16, baseType: !481, size: 128)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3567, file: !3568, line: 17, baseType: !517, size: 64, offset: 128)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3567, file: !3568, line: 18, baseType: !3573, size: 64, offset: 192)
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 64)
!3574 = !DISubroutineType(types: !3575)
!3575 = !{null, !3576}
!3576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 64)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3567, file: !3568, line: 19, baseType: !1308, size: 32, offset: 256)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3525, file: !3509, line: 84, baseType: !1987, offset: 768)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3525, file: !3509, line: 85, baseType: !903, size: 32, offset: 768)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !3525, file: !3509, line: 86, baseType: !2067, size: 64, offset: 832)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !3525, file: !3509, line: 87, baseType: !756, size: 64, offset: 896)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !3525, file: !3509, line: 88, baseType: !756, size: 64, offset: 960)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3525, file: !3509, line: 89, baseType: !793, size: 64, offset: 1024)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3525, file: !3509, line: 90, baseType: !7, size: 32, offset: 1088)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !3525, file: !3509, line: 91, baseType: !7, size: 32, offset: 1120)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3525, file: !3509, line: 92, baseType: !631, size: 8, offset: 1152)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3525, file: !3509, line: 93, baseType: !916, size: 16, offset: 1168)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3525, file: !3509, line: 94, baseType: !3507, size: 64, offset: 1216)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3525, file: !3509, line: 95, baseType: !504, size: 128, align: 64, offset: 1280)
!3590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3591, size: 64)
!3591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !3517, file: !3509, line: 103, baseType: !3593, size: 64, offset: 128)
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 64)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{null, !3524}
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !3517, file: !3509, line: 104, baseType: !3573, size: 64, offset: 192)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !3517, file: !3509, line: 105, baseType: !2368, size: 64, offset: 256)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !3517, file: !3509, line: 106, baseType: !497, size: 64, offset: 320)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !3517, file: !3509, line: 107, baseType: !3600, size: 320, offset: 384)
!3600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !3529, line: 56, size: 320, elements: !3601)
!3601 = !{!3602, !3603, !3604, !3605, !3606, !3607, !3608, !3609, !3614, !3616}
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !3600, file: !3529, line: 57, baseType: !916, size: 16)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3600, file: !3529, line: 58, baseType: !916, size: 16, offset: 16)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !3600, file: !3529, line: 59, baseType: !916, size: 16, offset: 32)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !3600, file: !3529, line: 60, baseType: !916, size: 16, offset: 48)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3600, file: !3529, line: 61, baseType: !13, size: 32, offset: 64)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !3600, file: !3529, line: 62, baseType: !916, size: 16, offset: 96)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !3600, file: !3529, line: 63, baseType: !1093, size: 8, offset: 112)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !3600, file: !3529, line: 64, baseType: !3610, size: 64, offset: 128)
!3610 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !3529, line: 38, baseType: !3611)
!3611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3612, size: 64)
!3612 = !DISubroutineType(types: !3613)
!3613 = !{!1308, !3590, !1308, !1308}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !3600, file: !3529, line: 65, baseType: !3615, size: 64, offset: 192)
!3615 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !3529, line: 39, baseType: !3611)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !3600, file: !3529, line: 66, baseType: !3617, size: 64, offset: 256)
!3617 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !3529, line: 40, baseType: !3618)
!3618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!3619 = !DISubroutineType(types: !3620)
!3620 = !{!7, !3621, !3590}
!3621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3622, size: 64)
!3622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !3529, line: 33, size: 128, elements: !3623)
!3623 = !{!3624, !3639}
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !3622, file: !3529, line: 34, baseType: !3625, size: 64)
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3626, size: 64)
!3626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !3529, line: 81, size: 1024, elements: !3627)
!3627 = !{!3628, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !3626, file: !3529, line: 82, baseType: !3629, size: 64)
!3629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3630, size: 64)
!3630 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !3529, line: 26, flags: DIFlagFwdDecl)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3626, file: !3529, line: 83, baseType: !13, size: 32, offset: 64)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !3626, file: !3529, line: 84, baseType: !13, size: 32, offset: 96)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3626, file: !3529, line: 85, baseType: !3600, size: 320, offset: 128)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !3626, file: !3529, line: 86, baseType: !1093, size: 8, offset: 448)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !3626, file: !3529, line: 87, baseType: !3078, size: 256, offset: 512)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3626, file: !3529, line: 88, baseType: !1982, size: 192, offset: 768)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3626, file: !3529, line: 89, baseType: !1987, offset: 960)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !3626, file: !3529, line: 90, baseType: !588, size: 32, offset: 960)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3622, file: !3529, line: 35, baseType: !3590, size: 64, offset: 64)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3517, file: !3509, line: 108, baseType: !903, size: 32, offset: 704)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3517, file: !3509, line: 109, baseType: !3139, size: 192, offset: 768)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !3508, file: !3509, line: 16, baseType: !3320, size: 64, offset: 256)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !3508, file: !3509, line: 17, baseType: !1093, size: 8, offset: 320)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !3508, file: !3509, line: 19, baseType: !3626, size: 1024, offset: 384)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !3508, file: !3509, line: 22, baseType: !576, size: 64, offset: 1408)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !3508, file: !3509, line: 23, baseType: !3078, size: 256, offset: 1472)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !3479, file: !3480, line: 87, baseType: !7, size: 32, offset: 1280)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !3479, file: !3480, line: 88, baseType: !7, size: 32, offset: 1312)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !3479, file: !3480, line: 89, baseType: !7, size: 32, offset: 1344)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !3479, file: !3480, line: 90, baseType: !7, size: 32, offset: 1376)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !3479, file: !3480, line: 91, baseType: !7, size: 32, offset: 1408)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !3479, file: !3480, line: 92, baseType: !7, size: 32, offset: 1440)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !3479, file: !3480, line: 94, baseType: !3654, size: 128, offset: 1472)
!3654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !3480, line: 21, size: 128, elements: !3655)
!3655 = !{!3656, !3662, !3664}
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3654, file: !3480, line: 22, baseType: !3657, size: 32)
!3657 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1662, line: 805, baseType: !3658)
!3658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1662, line: 798, size: 32, elements: !3659)
!3659 = !{!3660, !3661}
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3658, file: !1662, line: 803, baseType: !1661, size: 32)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3658, file: !1662, line: 804, baseType: !1987, offset: 32)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3654, file: !3480, line: 23, baseType: !3663, size: 64, offset: 32)
!3663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !3261)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !3654, file: !3480, line: 24, baseType: !1093, size: 8, offset: 96)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !3479, file: !3480, line: 96, baseType: !7, size: 32, offset: 1600)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !3479, file: !3480, line: 97, baseType: !7, size: 32, offset: 1632)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !3479, file: !3480, line: 99, baseType: !7, size: 32, offset: 1664)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !3479, file: !3480, line: 100, baseType: !7, size: 32, offset: 1696)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !3479, file: !3480, line: 101, baseType: !7, size: 32, offset: 1728)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !3479, file: !3480, line: 102, baseType: !7, size: 32, offset: 1760)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !3479, file: !3480, line: 103, baseType: !7, size: 32, offset: 1792)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !3479, file: !3480, line: 104, baseType: !7, size: 32, offset: 1824)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !3479, file: !3480, line: 106, baseType: !7, size: 32, offset: 1856)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !3479, file: !3480, line: 107, baseType: !7, size: 32, offset: 1888)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !3479, file: !3480, line: 111, baseType: !7, size: 32, offset: 1920)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !3479, file: !3480, line: 112, baseType: !7, size: 32, offset: 1952)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !3479, file: !3480, line: 114, baseType: !7, size: 32, offset: 1984)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !3479, file: !3480, line: 116, baseType: !7, size: 32, offset: 2016)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !3479, file: !3480, line: 117, baseType: !7, size: 32, offset: 2048)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !3479, file: !3480, line: 121, baseType: !7, size: 32, offset: 2080)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !3479, file: !3480, line: 122, baseType: !7, size: 32, offset: 2112)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !3479, file: !3480, line: 123, baseType: !7, size: 32, offset: 2144)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !3479, file: !3480, line: 124, baseType: !7, size: 32, offset: 2176)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !3479, file: !3480, line: 125, baseType: !7, size: 32, offset: 2208)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !3479, file: !3480, line: 126, baseType: !1308, size: 32, offset: 2240)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !3479, file: !3480, line: 128, baseType: !7, size: 32, offset: 2272)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !3479, file: !3480, line: 129, baseType: !7, size: 32, offset: 2304)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !3479, file: !3480, line: 130, baseType: !7, size: 32, offset: 2336)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !3479, file: !3480, line: 132, baseType: !7, size: 32, offset: 2368)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !3479, file: !3480, line: 133, baseType: !7, size: 32, offset: 2400)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !3479, file: !3480, line: 134, baseType: !7, size: 32, offset: 2432)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !3479, file: !3480, line: 135, baseType: !7, size: 32, offset: 2464)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !3479, file: !3480, line: 136, baseType: !7, size: 32, offset: 2496)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !3479, file: !3480, line: 137, baseType: !7, size: 32, offset: 2528)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !3479, file: !3480, line: 138, baseType: !7, size: 32, offset: 2560)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !3479, file: !3480, line: 139, baseType: !7, size: 32, offset: 2592)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !3479, file: !3480, line: 140, baseType: !13, size: 32, offset: 2624)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !3479, file: !3480, line: 141, baseType: !7, size: 32, offset: 2656)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !3479, file: !3480, line: 142, baseType: !7, size: 32, offset: 2688)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !3479, file: !3480, line: 143, baseType: !7, size: 32, offset: 2720)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !3479, file: !3480, line: 144, baseType: !7, size: 32, offset: 2752)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !3479, file: !3480, line: 145, baseType: !7, size: 32, offset: 2784)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !3479, file: !3480, line: 146, baseType: !7, size: 32, offset: 2816)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !3479, file: !3480, line: 147, baseType: !7, size: 32, offset: 2848)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !3479, file: !3480, line: 148, baseType: !7, size: 32, offset: 2880)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !3479, file: !3480, line: 149, baseType: !7, size: 32, offset: 2912)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !3479, file: !3480, line: 150, baseType: !7, size: 32, offset: 2944)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !3479, file: !3480, line: 151, baseType: !7, size: 32, offset: 2976)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !3479, file: !3480, line: 152, baseType: !7, size: 32, offset: 3008)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !3479, file: !3480, line: 153, baseType: !7, size: 32, offset: 3040)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !3479, file: !3480, line: 154, baseType: !7, size: 32, offset: 3072)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !3479, file: !3480, line: 155, baseType: !7, size: 32, offset: 3104)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !3479, file: !3480, line: 156, baseType: !7, size: 32, offset: 3136)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !3479, file: !3480, line: 157, baseType: !7, size: 32, offset: 3168)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !3479, file: !3480, line: 158, baseType: !7, size: 32, offset: 3200)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !3479, file: !3480, line: 159, baseType: !7, size: 32, offset: 3232)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !3479, file: !3480, line: 160, baseType: !7, size: 32, offset: 3264)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !3479, file: !3480, line: 161, baseType: !7, size: 32, offset: 3296)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !3479, file: !3480, line: 162, baseType: !7, size: 32, offset: 3328)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !3479, file: !3480, line: 163, baseType: !7, size: 32, offset: 3360)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !3479, file: !3480, line: 164, baseType: !7, size: 32, offset: 3392)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !3479, file: !3480, line: 165, baseType: !7, size: 32, offset: 3424)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !3479, file: !3480, line: 166, baseType: !7, size: 32, offset: 3456)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !3479, file: !3480, line: 167, baseType: !7, size: 32, offset: 3488)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !3479, file: !3480, line: 168, baseType: !7, size: 32, offset: 3520)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !3479, file: !3480, line: 169, baseType: !7, size: 32, offset: 3552)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !3479, file: !3480, line: 170, baseType: !7, size: 32, offset: 3584)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !3479, file: !3480, line: 171, baseType: !7, size: 32, offset: 3616)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !3479, file: !3480, line: 172, baseType: !3730, size: 96, offset: 3648)
!3730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !1909)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !3479, file: !3480, line: 173, baseType: !3730, size: 96, offset: 3744)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !3479, file: !3480, line: 174, baseType: !7, size: 32, offset: 3840)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !3479, file: !3480, line: 175, baseType: !517, size: 64, offset: 3904)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !3479, file: !3480, line: 176, baseType: !517, size: 64, offset: 3968)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !3479, file: !3480, line: 177, baseType: !3736, size: 192, offset: 4032)
!3736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !3480, line: 34, size: 192, elements: !3737)
!3737 = !{!3738, !3739, !3742}
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !3736, file: !3480, line: 35, baseType: !588, size: 32)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !3736, file: !3480, line: 37, baseType: !3740, size: 64, offset: 64)
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 64)
!3741 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !3480, line: 32, flags: DIFlagFwdDecl)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !3736, file: !3480, line: 38, baseType: !7, size: 32, offset: 128)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !3479, file: !3480, line: 178, baseType: !7, size: 32, offset: 4224)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !3479, file: !3480, line: 179, baseType: !7, size: 32, offset: 4256)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !3479, file: !3480, line: 180, baseType: !3746, size: 64, offset: 4288)
!3746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3747, size: 64)
!3747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3748)
!3748 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !3480, line: 180, flags: DIFlagFwdDecl)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !3479, file: !3480, line: 181, baseType: !3750, size: 64, offset: 4352)
!3750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3751, size: 64)
!3751 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !3480, line: 41, flags: DIFlagFwdDecl)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !3479, file: !3480, line: 182, baseType: !1987, offset: 4416)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !3479, file: !3480, line: 183, baseType: !13, size: 32, offset: 4416)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !3479, file: !3480, line: 184, baseType: !588, size: 32, offset: 4448)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !3479, file: !3480, line: 185, baseType: !517, size: 64, offset: 4480)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !3479, file: !3480, line: 186, baseType: !7, size: 32, offset: 4544)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !3479, file: !3480, line: 188, baseType: !7, size: 32, offset: 4576)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !3479, file: !3480, line: 189, baseType: !7, size: 32, offset: 4608)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !3479, file: !3480, line: 195, baseType: !7, size: 32, offset: 4640)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !3479, file: !3480, line: 196, baseType: !7, size: 32, offset: 4672)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !3479, file: !3480, line: 197, baseType: !7, size: 32, offset: 4704)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !3479, file: !3480, line: 198, baseType: !7, size: 32, offset: 4736)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !3479, file: !3480, line: 200, baseType: !3764, size: 96, offset: 4768)
!3764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !3480, line: 27, size: 96, elements: !3765)
!3765 = !{!3766, !3767}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3764, file: !3480, line: 28, baseType: !3657, size: 32)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3764, file: !3480, line: 29, baseType: !3768, size: 64, offset: 32)
!3768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1708, size: 64, elements: !3261)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3479, file: !3480, line: 202, baseType: !588, size: 32, offset: 4864)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !3479, file: !3480, line: 205, baseType: !3771, size: 64, offset: 4928)
!3771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !3479, file: !3480, line: 206, baseType: !7, size: 32, offset: 4992)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3479, file: !3480, line: 222, baseType: !3774, size: 64, offset: 5056)
!3774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 64)
!3775 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !3480, line: 222, flags: DIFlagFwdDecl)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !3479, file: !3480, line: 223, baseType: !13, size: 32, offset: 5120)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !3479, file: !3480, line: 225, baseType: !3774, size: 64, offset: 5184)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3479, file: !3480, line: 226, baseType: !13, size: 32, offset: 5248)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !3479, file: !3480, line: 228, baseType: !588, size: 32, offset: 5280)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !3479, file: !3480, line: 229, baseType: !3781, size: 128, offset: 5312)
!3781 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !3782, line: 22, baseType: !3783)
!3782 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!3783 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3782, line: 20, size: 128, elements: !3784)
!3784 = !{!3785}
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3783, file: !3782, line: 21, baseType: !3786, size: 128)
!3786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 128, elements: !3261)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !3321, file: !3322, line: 128, baseType: !3788, size: 4608, offset: 10176)
!3788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !3789, line: 56, size: 4608, elements: !3790)
!3789 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!3790 = !{!3791, !3831, !3834, !3835, !3836, !3837, !3840, !3843, !3846, !3847, !3848, !3851, !3852, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929, !3932, !3933, !3934, !3935}
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !3788, file: !3789, line: 57, baseType: !3792, size: 1600)
!3792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !3789, line: 15, size: 1600, elements: !3793)
!3793 = !{!3794, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803, !3804, !3805, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3817, !3818, !3819, !3820, !3821, !3822, !3823, !3824, !3825, !3826, !3827, !3828, !3829, !3830}
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3792, file: !3789, line: 17, baseType: !3163, size: 64)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3792, file: !3789, line: 18, baseType: !3163, size: 64, offset: 64)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !3792, file: !3789, line: 19, baseType: !3163, size: 64, offset: 128)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3792, file: !3789, line: 20, baseType: !3163, size: 64, offset: 192)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !3792, file: !3789, line: 21, baseType: !3163, size: 64, offset: 256)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !3792, file: !3789, line: 23, baseType: !7, size: 32, offset: 320)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !3792, file: !3789, line: 24, baseType: !7, size: 32, offset: 352)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !3792, file: !3789, line: 25, baseType: !7, size: 32, offset: 384)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !3792, file: !3789, line: 26, baseType: !7, size: 32, offset: 416)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !3792, file: !3789, line: 27, baseType: !7, size: 32, offset: 448)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !3792, file: !3789, line: 28, baseType: !7, size: 32, offset: 480)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !3792, file: !3789, line: 29, baseType: !7, size: 32, offset: 512)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !3792, file: !3789, line: 30, baseType: !7, size: 32, offset: 544)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !3792, file: !3789, line: 31, baseType: !7, size: 32, offset: 576)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !3792, file: !3789, line: 32, baseType: !7, size: 32, offset: 608)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !3792, file: !3789, line: 33, baseType: !7, size: 32, offset: 640)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !3792, file: !3789, line: 34, baseType: !7, size: 32, offset: 672)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !3792, file: !3789, line: 35, baseType: !7, size: 32, offset: 704)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !3792, file: !3789, line: 36, baseType: !7, size: 32, offset: 736)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !3792, file: !3789, line: 37, baseType: !7, size: 32, offset: 768)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !3792, file: !3789, line: 38, baseType: !7, size: 32, offset: 800)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !3792, file: !3789, line: 39, baseType: !3816, size: 256, offset: 832)
!3816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !517, size: 256, elements: !2590)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !3792, file: !3789, line: 40, baseType: !3771, size: 64, offset: 1088)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !3792, file: !3789, line: 41, baseType: !7, size: 32, offset: 1152)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !3792, file: !3789, line: 42, baseType: !7, size: 32, offset: 1184)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !3792, file: !3789, line: 43, baseType: !7, size: 32, offset: 1216)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !3792, file: !3789, line: 44, baseType: !7, size: 32, offset: 1248)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !3792, file: !3789, line: 45, baseType: !7, size: 32, offset: 1280)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !3792, file: !3789, line: 46, baseType: !7, size: 32, offset: 1312)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !3792, file: !3789, line: 47, baseType: !7, size: 32, offset: 1344)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !3792, file: !3789, line: 48, baseType: !7, size: 32, offset: 1376)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !3792, file: !3789, line: 49, baseType: !7, size: 32, offset: 1408)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !3792, file: !3789, line: 50, baseType: !7, size: 32, offset: 1440)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !3792, file: !3789, line: 51, baseType: !7, size: 32, offset: 1472)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !3792, file: !3789, line: 52, baseType: !7, size: 32, offset: 1504)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !3792, file: !3789, line: 53, baseType: !1093, size: 8, offset: 1536)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3788, file: !3789, line: 58, baseType: !3832, size: 64, offset: 1600)
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3833, size: 64)
!3833 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !3789, line: 58, flags: DIFlagFwdDecl)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3788, file: !3789, line: 59, baseType: !3832, size: 64, offset: 1664)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3788, file: !3789, line: 60, baseType: !3503, size: 64, offset: 1728)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3788, file: !3789, line: 61, baseType: !3507, size: 64, offset: 1792)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !3788, file: !3789, line: 71, baseType: !3838, size: 64, offset: 1856)
!3838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3839, size: 64)
!3839 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !3789, line: 71, flags: DIFlagFwdDecl)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !3788, file: !3789, line: 72, baseType: !3841, size: 64, offset: 1920)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !3789, line: 72, flags: DIFlagFwdDecl)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !3788, file: !3789, line: 73, baseType: !3844, size: 64, offset: 1984)
!3844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3845, size: 64)
!3845 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !3789, line: 73, flags: DIFlagFwdDecl)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !3788, file: !3789, line: 74, baseType: !3567, size: 320, offset: 2048)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3788, file: !3789, line: 75, baseType: !3353, size: 64, offset: 2368)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !3788, file: !3789, line: 76, baseType: !3849, size: 64, offset: 2432)
!3849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3850, size: 64)
!3850 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !3789, line: 76, flags: DIFlagFwdDecl)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !3788, file: !3789, line: 77, baseType: !489, size: 128, offset: 2496)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !3788, file: !3789, line: 78, baseType: !3853, size: 1088, offset: 2624)
!3853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !1247, line: 15, size: 1088, elements: !3854)
!3854 = !{!3855, !3856, !3857, !3862, !3868, !3874, !3875, !3879, !3883, !3887, !3891, !3892, !3896, !3900, !3904, !3908, !3912, !3913}
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3853, file: !1247, line: 16, baseType: !611, size: 16)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !3853, file: !1247, line: 17, baseType: !13, size: 32, offset: 32)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3853, file: !1247, line: 19, baseType: !3858, size: 64, offset: 64)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 64)
!3859 = !DISubroutineType(types: !3860)
!3860 = !{!7, !3861}
!3861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3853, file: !1247, line: 20, baseType: !3863, size: 64, offset: 128)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{!3866, !3866, !650}
!3866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3867, size: 64)
!3867 = !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !758, line: 956, flags: DIFlagFwdDecl)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !3853, file: !1247, line: 21, baseType: !3869, size: 64, offset: 192)
!3869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3870, size: 64)
!3870 = !DISubroutineType(types: !3871)
!3871 = !{!13, !3872}
!3872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3873, size: 64)
!3873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3867)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !3853, file: !1247, line: 22, baseType: !3869, size: 64, offset: 256)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !3853, file: !1247, line: 23, baseType: !3876, size: 64, offset: 320)
!3876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3877, size: 64)
!3877 = !DISubroutineType(types: !3878)
!3878 = !{!2831, !3866, !517}
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !3853, file: !1247, line: 24, baseType: !3880, size: 64, offset: 384)
!3880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3881, size: 64)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{null, !3866}
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !3853, file: !1247, line: 25, baseType: !3884, size: 64, offset: 448)
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3885, size: 64)
!3885 = !DISubroutineType(types: !3886)
!3886 = !{null, !3866, !495, !7}
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !3853, file: !1247, line: 27, baseType: !3888, size: 64, offset: 512)
!3888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3889, size: 64)
!3889 = !DISubroutineType(types: !3890)
!3890 = !{!3866, !3866}
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !3853, file: !1247, line: 28, baseType: !808, size: 64, offset: 576)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !3853, file: !1247, line: 29, baseType: !3893, size: 64, offset: 640)
!3893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 64)
!3894 = !DISubroutineType(types: !3895)
!3895 = !{null, !3866, !786, !756, !1308, !1093}
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !3853, file: !1247, line: 32, baseType: !3897, size: 64, offset: 704)
!3897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3898, size: 64)
!3898 = !DISubroutineType(types: !3899)
!3899 = !{null, !3866, !786, !756}
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !3853, file: !1247, line: 34, baseType: !3901, size: 64, offset: 768)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3902, size: 64)
!3902 = !DISubroutineType(types: !3903)
!3903 = !{!7, !3320, !786, !756}
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !3853, file: !1247, line: 35, baseType: !3905, size: 64, offset: 832)
!3905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3906, size: 64)
!3906 = !DISubroutineType(types: !3907)
!3907 = !{!1245, !3872, !756, !3590}
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !3853, file: !1247, line: 38, baseType: !3909, size: 64, offset: 896)
!3909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3910, size: 64)
!3910 = !DISubroutineType(types: !3911)
!3911 = !{null, !3872, !3590}
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !3853, file: !1247, line: 41, baseType: !2368, size: 64, offset: 960)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !3853, file: !1247, line: 43, baseType: !3914, size: 64, offset: 1024)
!3914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3915, line: 97, size: 64, elements: !3916)
!3915 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3916 = !{!3917}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3914, file: !3915, line: 98, baseType: !582, size: 64)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !3788, file: !3789, line: 79, baseType: !2229, offset: 3712)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !3788, file: !3789, line: 80, baseType: !1987, offset: 3712)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !3788, file: !3789, line: 81, baseType: !13, size: 32, offset: 3712)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !3788, file: !3789, line: 82, baseType: !517, size: 64, offset: 3776)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3788, file: !3789, line: 94, baseType: !3500, size: 64, offset: 3840)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !3788, file: !3789, line: 95, baseType: !786, size: 64, offset: 3904)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3788, file: !3789, line: 96, baseType: !786, size: 64, offset: 3968)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !3788, file: !3789, line: 97, baseType: !786, size: 64, offset: 4032)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3788, file: !3789, line: 98, baseType: !786, size: 64, offset: 4096)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3788, file: !3789, line: 107, baseType: !588, size: 32, offset: 4160)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !3788, file: !3789, line: 108, baseType: !588, size: 32, offset: 4192)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !3788, file: !3789, line: 109, baseType: !3930, size: 64, offset: 4224)
!3930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3931, size: 64)
!3931 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !3789, line: 109, flags: DIFlagFwdDecl)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3788, file: !3789, line: 110, baseType: !3774, size: 64, offset: 4288)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !3788, file: !3789, line: 111, baseType: !3774, size: 64, offset: 4352)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3788, file: !3789, line: 112, baseType: !13, size: 32, offset: 4416)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !3788, file: !3789, line: 117, baseType: !3936, size: 128, offset: 4480)
!3936 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3788, file: !3789, line: 113, size: 128, elements: !3937)
!3937 = !{!3938, !3939, !3940}
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3936, file: !3789, line: 114, baseType: !1898, size: 64)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3936, file: !3789, line: 115, baseType: !1987, offset: 64)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3936, file: !3789, line: 116, baseType: !1308, size: 32, offset: 64)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !3321, file: !3322, line: 162, baseType: !3942, size: 192, offset: 14784)
!3942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !758, line: 291, size: 192, elements: !3943)
!3943 = !{!3944, !3945, !3946, !3947}
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3942, file: !758, line: 293, baseType: !756, size: 64)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3942, file: !758, line: 294, baseType: !756, size: 64, offset: 64)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !3942, file: !758, line: 296, baseType: !650, size: 32, offset: 128)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3942, file: !758, line: 297, baseType: !1987, offset: 160)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !3321, file: !3322, line: 164, baseType: !3949, size: 64, offset: 14976)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3950, size: 64)
!3950 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !3322, line: 47, flags: DIFlagFwdDecl)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !3321, file: !3322, line: 167, baseType: !3952, size: 512, offset: 15040)
!3952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3953, line: 14, size: 512, elements: !3954)
!3953 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3954 = !{!3955, !3970, !3972}
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3952, file: !3953, line: 16, baseType: !3956, size: 128)
!3956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3957, size: 128, elements: !3261)
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3958, size: 64)
!3958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !95, line: 1037, size: 128, elements: !3959)
!3959 = !{!3960, !3961}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3958, file: !95, line: 1038, baseType: !504, size: 128, align: 64)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3958, file: !95, line: 1039, baseType: !3962, offset: 128)
!3962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3963, elements: !514)
!3963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !95, line: 1032, size: 192, elements: !3964)
!3964 = !{!3965, !3966}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3963, file: !95, line: 1033, baseType: !1407, size: 64)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3963, file: !95, line: 1034, baseType: !3967, size: 128, offset: 64)
!3967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3968, size: 128, elements: !3261)
!3968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3969, size: 64)
!3969 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !95, line: 1034, flags: DIFlagFwdDecl)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3952, file: !3953, line: 17, baseType: !3971, size: 128, offset: 128)
!3971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1407, size: 128, elements: !3261)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3952, file: !3953, line: 18, baseType: !3973, size: 256, offset: 256)
!3973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !489, size: 256, elements: !3261)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !3321, file: !3322, line: 174, baseType: !578, size: 64, offset: 15552)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !3321, file: !3322, line: 183, baseType: !3976, size: 1216, offset: 15616)
!3976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3977, line: 15, size: 1216, elements: !3978)
!3977 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3978 = !{!3979, !3980, !3981, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !3992, !3993, !3994, !3997, !4000}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3976, file: !3977, line: 17, baseType: !3342, size: 64)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3976, file: !3977, line: 18, baseType: !3342, size: 64, offset: 64)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3976, file: !3977, line: 19, baseType: !3342, size: 64, offset: 128)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3976, file: !3977, line: 20, baseType: !3342, size: 64, offset: 192)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3976, file: !3977, line: 21, baseType: !3342, size: 64, offset: 256)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3976, file: !3977, line: 22, baseType: !3342, size: 64, offset: 320)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3976, file: !3977, line: 23, baseType: !3342, size: 64, offset: 384)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3976, file: !3977, line: 24, baseType: !3342, size: 64, offset: 448)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3976, file: !3977, line: 25, baseType: !3342, size: 64, offset: 512)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3976, file: !3977, line: 26, baseType: !3342, size: 64, offset: 576)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3976, file: !3977, line: 30, baseType: !3990, size: 64, offset: 640)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3977, line: 11, flags: DIFlagFwdDecl)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3976, file: !3977, line: 31, baseType: !1987, offset: 704)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3976, file: !3977, line: 32, baseType: !3567, size: 320, offset: 704)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3976, file: !3977, line: 33, baseType: !3995, size: 64, offset: 1024)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3977, line: 12, flags: DIFlagFwdDecl)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3976, file: !3977, line: 34, baseType: !3998, size: 64, offset: 1088)
!3998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3999, size: 64)
!3999 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3977, line: 13, flags: DIFlagFwdDecl)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3976, file: !3977, line: 37, baseType: !1898, size: 64, offset: 1152)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !3321, file: !3322, line: 191, baseType: !786, size: 64, offset: 16832)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !3305, file: !3306, line: 38, baseType: !4003, size: 64, offset: 384)
!4003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4004, size: 64)
!4004 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !3306, line: 38, flags: DIFlagFwdDecl)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !3305, file: !3306, line: 39, baseType: !4003, size: 64, offset: 448)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !3305, file: !3306, line: 40, baseType: !4007, size: 64, offset: 512)
!4007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4008, size: 64)
!4008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !4009, line: 856, size: 448, elements: !4010)
!4009 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!4010 = !{!4011, !4012, !4013, !4014, !4015}
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4008, file: !4009, line: 857, baseType: !903, size: 32)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4008, file: !4009, line: 858, baseType: !2960, size: 192, offset: 64)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !4008, file: !4009, line: 859, baseType: !2926, size: 64, offset: 256)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !4008, file: !4009, line: 860, baseType: !3183, size: 64, offset: 320)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !4008, file: !4009, line: 861, baseType: !4016, size: 64, offset: 384)
!4016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4017, size: 64)
!4017 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !4018, line: 16, flags: DIFlagFwdDecl)
!4018 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2644, file: !2645, line: 969, baseType: !4020, size: 64, offset: 9216)
!4020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4021, size: 64)
!4021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !4022, line: 82, size: 7296, elements: !4023)
!4022 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!4023 = !{!4024, !4025, !4026, !4027, !4028, !4029, !4030, !4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4059, !4068, !4069, !4071, !4072, !4073, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4085, !4086, !4087, !4088, !4089, !4090, !4091, !4092, !4093, !4094, !4095, !4096, !4097, !4098, !4101, !4102, !4109, !4110, !4111, !4112, !4113, !4114}
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !4021, file: !4022, line: 83, baseType: !903, size: 32)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !4021, file: !4022, line: 84, baseType: !588, size: 32, offset: 32)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !4021, file: !4022, line: 85, baseType: !7, size: 32, offset: 64)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !4021, file: !4022, line: 86, baseType: !489, size: 128, offset: 128)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !4021, file: !4022, line: 88, baseType: !2206, size: 128, offset: 256)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !4021, file: !4022, line: 91, baseType: !2643, size: 64, offset: 384)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !4021, file: !4022, line: 94, baseType: !4031, size: 192, offset: 448)
!4031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !4032, line: 30, size: 192, elements: !4033)
!4032 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!4033 = !{!4034, !4035}
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4031, file: !4032, line: 31, baseType: !489, size: 128)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !4031, file: !4032, line: 32, baseType: !4036, size: 64, offset: 128)
!4036 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !4037, line: 25, baseType: !4038)
!4037 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!4038 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4037, line: 23, size: 64, elements: !4039)
!4039 = !{!4040}
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !4038, file: !4037, line: 24, baseType: !2786, size: 64)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !4021, file: !4022, line: 97, baseType: !1898, size: 64, offset: 640)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !4021, file: !4022, line: 100, baseType: !7, size: 32, offset: 704)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !4021, file: !4022, line: 106, baseType: !7, size: 32, offset: 736)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !4021, file: !4022, line: 107, baseType: !2643, size: 64, offset: 768)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !4021, file: !4022, line: 110, baseType: !7, size: 32, offset: 832)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4021, file: !4022, line: 111, baseType: !13, size: 32, offset: 864)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !4021, file: !4022, line: 122, baseType: !13, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !4021, file: !4022, line: 123, baseType: !13, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !4021, file: !4022, line: 128, baseType: !7, size: 32, offset: 928)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !4021, file: !4022, line: 129, baseType: !489, size: 128, offset: 960)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !4021, file: !4022, line: 132, baseType: !2714, size: 512, offset: 1088)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !4021, file: !4022, line: 133, baseType: !793, size: 64, offset: 1600)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !4021, file: !4022, line: 140, baseType: !4054, size: 256, offset: 1664)
!4054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4055, size: 256, elements: !3261)
!4055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !4022, line: 38, size: 128, elements: !4056)
!4056 = !{!4057, !4058}
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4055, file: !4022, line: 39, baseType: !536, size: 64)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !4055, file: !4022, line: 40, baseType: !536, size: 64, offset: 64)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !4021, file: !4022, line: 146, baseType: !4060, size: 192, offset: 1920)
!4060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !4022, line: 66, size: 192, elements: !4061)
!4061 = !{!4062}
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !4060, file: !4022, line: 67, baseType: !4063, size: 192)
!4063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !4022, line: 47, size: 192, elements: !4064)
!4064 = !{!4065, !4066, !4067}
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4063, file: !4022, line: 48, baseType: !578, size: 64)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4063, file: !4022, line: 49, baseType: !578, size: 64, offset: 64)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !4063, file: !4022, line: 50, baseType: !578, size: 64, offset: 128)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !4021, file: !4022, line: 150, baseType: !3222, size: 640, offset: 2112)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !4021, file: !4022, line: 153, baseType: !4070, size: 256, offset: 2752)
!4070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2886, size: 256, elements: !2590)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !4021, file: !4022, line: 159, baseType: !2886, size: 64, offset: 3008)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !4021, file: !4022, line: 162, baseType: !7, size: 32, offset: 3072)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !4021, file: !4022, line: 164, baseType: !4074, size: 64, offset: 3136)
!4074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4075, size: 64)
!4075 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !4022, line: 164, flags: DIFlagFwdDecl)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !4021, file: !4022, line: 175, baseType: !3657, size: 32, offset: 3200)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4021, file: !4022, line: 176, baseType: !536, size: 64, offset: 3264)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4021, file: !4022, line: 176, baseType: !536, size: 64, offset: 3328)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !4021, file: !4022, line: 176, baseType: !536, size: 64, offset: 3392)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !4021, file: !4022, line: 176, baseType: !536, size: 64, offset: 3456)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !4021, file: !4022, line: 177, baseType: !536, size: 64, offset: 3520)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !4021, file: !4022, line: 178, baseType: !536, size: 64, offset: 3584)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !4021, file: !4022, line: 179, baseType: !3210, size: 128, offset: 3648)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !4021, file: !4022, line: 180, baseType: !517, size: 64, offset: 3776)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !4021, file: !4022, line: 180, baseType: !517, size: 64, offset: 3840)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !4021, file: !4022, line: 180, baseType: !517, size: 64, offset: 3904)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !4021, file: !4022, line: 180, baseType: !517, size: 64, offset: 3968)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !4021, file: !4022, line: 181, baseType: !517, size: 64, offset: 4032)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !4021, file: !4022, line: 181, baseType: !517, size: 64, offset: 4096)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !4021, file: !4022, line: 181, baseType: !517, size: 64, offset: 4160)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !4021, file: !4022, line: 181, baseType: !517, size: 64, offset: 4224)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !4021, file: !4022, line: 182, baseType: !517, size: 64, offset: 4288)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !4021, file: !4022, line: 182, baseType: !517, size: 64, offset: 4352)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !4021, file: !4022, line: 182, baseType: !517, size: 64, offset: 4416)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !4021, file: !4022, line: 182, baseType: !517, size: 64, offset: 4480)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !4021, file: !4022, line: 183, baseType: !517, size: 64, offset: 4544)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !4021, file: !4022, line: 183, baseType: !517, size: 64, offset: 4608)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !4021, file: !4022, line: 184, baseType: !4099, offset: 4672)
!4099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !4100, line: 12, elements: !1904)
!4100 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !4021, file: !4022, line: 192, baseType: !540, size: 64, offset: 4672)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !4021, file: !4022, line: 203, baseType: !4103, size: 2048, offset: 4736)
!4103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4104, size: 2048, elements: !474)
!4104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !4105, line: 43, size: 128, elements: !4106)
!4105 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!4106 = !{!4107, !4108}
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !4104, file: !4105, line: 44, baseType: !1361, size: 64)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !4104, file: !4105, line: 45, baseType: !1361, size: 64, offset: 64)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !4021, file: !4022, line: 220, baseType: !1093, size: 8, offset: 6784)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !4021, file: !4022, line: 221, baseType: !641, size: 16, offset: 6800)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !4021, file: !4022, line: 222, baseType: !641, size: 16, offset: 6816)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !4021, file: !4022, line: 224, baseType: !2409, size: 64, offset: 6848)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !4021, file: !4022, line: 227, baseType: !1982, size: 192, offset: 6912)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !4021, file: !4022, line: 233, baseType: !1982, size: 192, offset: 7104)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2644, file: !2645, line: 970, baseType: !4116, size: 64, offset: 9280)
!4116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4117, size: 64)
!4117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !4022, line: 20, size: 16576, elements: !4118)
!4118 = !{!4119, !4120, !4121, !4122}
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !4117, file: !4022, line: 21, baseType: !1987)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4117, file: !4022, line: 22, baseType: !903, size: 32)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !4117, file: !4022, line: 23, baseType: !2206, size: 128, offset: 64)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4117, file: !4022, line: 24, baseType: !4123, size: 16384, offset: 192)
!4123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4124, size: 16384, elements: !4144)
!4124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !4032, line: 49, size: 256, elements: !4125)
!4125 = !{!4126}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !4124, file: !4032, line: 50, baseType: !4127, size: 256)
!4127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !4032, line: 35, size: 256, elements: !4128)
!4128 = !{!4129, !4136, !4137, !4143}
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !4127, file: !4032, line: 37, baseType: !4130, size: 64)
!4130 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !4131, line: 19, baseType: !4132)
!4131 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!4132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4133, size: 64)
!4133 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !4131, line: 18, baseType: !4134)
!4134 = !DISubroutineType(types: !4135)
!4135 = !{null, !7}
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !4127, file: !4032, line: 38, baseType: !517, size: 64, offset: 64)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !4127, file: !4032, line: 44, baseType: !4138, size: 64, offset: 128)
!4138 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !4131, line: 22, baseType: !4139)
!4139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4140, size: 64)
!4140 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !4131, line: 21, baseType: !4141)
!4141 = !DISubroutineType(types: !4142)
!4142 = !{null}
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !4127, file: !4032, line: 46, baseType: !4036, size: 64, offset: 192)
!4144 = !{!4145}
!4145 = !DISubrange(count: 64)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2644, file: !2645, line: 971, baseType: !4036, size: 64, offset: 9344)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2644, file: !2645, line: 972, baseType: !4036, size: 64, offset: 9408)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2644, file: !2645, line: 974, baseType: !4036, size: 64, offset: 9472)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2644, file: !2645, line: 975, baseType: !4031, size: 192, offset: 9536)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2644, file: !2645, line: 976, baseType: !517, size: 64, offset: 9728)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2644, file: !2645, line: 977, baseType: !1358, size: 64, offset: 9792)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2644, file: !2645, line: 978, baseType: !13, size: 32, offset: 9856)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2644, file: !2645, line: 980, baseType: !507, size: 64, offset: 9920)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2644, file: !2645, line: 989, baseType: !4155, size: 128, offset: 9984)
!4155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !4156, line: 35, size: 128, elements: !4157)
!4156 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!4157 = !{!4158, !4159, !4160}
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4155, file: !4156, line: 36, baseType: !7, size: 32)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !4155, file: !4156, line: 37, baseType: !588, size: 32, offset: 32)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4155, file: !4156, line: 38, baseType: !4161, size: 64, offset: 64)
!4161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4162, size: 64)
!4162 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !4156, line: 23, flags: DIFlagFwdDecl)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2644, file: !2645, line: 992, baseType: !536, size: 64, offset: 10112)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2644, file: !2645, line: 993, baseType: !536, size: 64, offset: 10176)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2644, file: !2645, line: 996, baseType: !1987, offset: 10240)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2644, file: !2645, line: 999, baseType: !2078, offset: 10240)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2644, file: !2645, line: 1001, baseType: !4168, size: 64, offset: 10240)
!4168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2645, line: 636, size: 64, elements: !4169)
!4169 = !{!4170}
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4168, file: !2645, line: 637, baseType: !4171, size: 64)
!4171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4168, size: 64)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2644, file: !2645, line: 1005, baseType: !2064, size: 128, offset: 10304)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2644, file: !2645, line: 1007, baseType: !2643, size: 64, offset: 10432)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2644, file: !2645, line: 1009, baseType: !4175, size: 64, offset: 10496)
!4175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4176, size: 64)
!4176 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2645, line: 1009, flags: DIFlagFwdDecl)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2644, file: !2645, line: 1043, baseType: !622, size: 64, offset: 10560)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2644, file: !2645, line: 1046, baseType: !4179, size: 64, offset: 10624)
!4179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4180, size: 64)
!4180 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2645, line: 41, flags: DIFlagFwdDecl)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2644, file: !2645, line: 1050, baseType: !4182, size: 64, offset: 10688)
!4182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4183, size: 64)
!4183 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !2645, line: 42, flags: DIFlagFwdDecl)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2644, file: !2645, line: 1054, baseType: !4185, size: 64, offset: 10752)
!4185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4186, size: 64)
!4186 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !2645, line: 55, flags: DIFlagFwdDecl)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2644, file: !2645, line: 1056, baseType: !4188, size: 64, offset: 10816)
!4188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4189, size: 64)
!4189 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !2645, line: 40, flags: DIFlagFwdDecl)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2644, file: !2645, line: 1058, baseType: !4191, size: 64, offset: 10880)
!4191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4192, size: 64)
!4192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !4193, line: 99, size: 704, elements: !4194)
!4193 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!4194 = !{!4195, !4196, !4197, !4198, !4199, !4200, !4201, !4220, !4221}
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4192, file: !4193, line: 100, baseType: !576, size: 64)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !4192, file: !4193, line: 101, baseType: !588, size: 32, offset: 64)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !4192, file: !4193, line: 102, baseType: !588, size: 32, offset: 96)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4192, file: !4193, line: 105, baseType: !1987, offset: 128)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !4192, file: !4193, line: 107, baseType: !611, size: 16, offset: 128)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !4192, file: !4193, line: 109, baseType: !2054, size: 128, offset: 192)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !4192, file: !4193, line: 110, baseType: !4202, size: 64, offset: 320)
!4202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4203, size: 64)
!4203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !4193, line: 73, size: 448, elements: !4204)
!4204 = !{!4205, !4208, !4209, !4214, !4219}
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !4203, file: !4193, line: 74, baseType: !4206, size: 64)
!4206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4207, size: 64)
!4207 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !4193, line: 74, flags: DIFlagFwdDecl)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !4203, file: !4193, line: 75, baseType: !4191, size: 64, offset: 64)
!4209 = !DIDerivedType(tag: DW_TAG_member, scope: !4203, file: !4193, line: 83, baseType: !4210, size: 128, offset: 128)
!4210 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4203, file: !4193, line: 83, size: 128, elements: !4211)
!4211 = !{!4212, !4213}
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !4210, file: !4193, line: 84, baseType: !489, size: 128)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !4210, file: !4193, line: 85, baseType: !2368, size: 64)
!4214 = !DIDerivedType(tag: DW_TAG_member, scope: !4203, file: !4193, line: 87, baseType: !4215, size: 128, offset: 256)
!4215 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4203, file: !4193, line: 87, size: 128, elements: !4216)
!4216 = !{!4217, !4218}
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !4215, file: !4193, line: 88, baseType: !481, size: 128)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !4215, file: !4193, line: 89, baseType: !504, size: 128, align: 64)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4203, file: !4193, line: 92, baseType: !13, size: 32, offset: 384)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !4192, file: !4193, line: 111, baseType: !1898, size: 64, offset: 384)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !4192, file: !4193, line: 113, baseType: !3078, size: 256, offset: 448)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2644, file: !2645, line: 1061, baseType: !4223, size: 64, offset: 10944)
!4223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4224, size: 64)
!4224 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2645, line: 43, flags: DIFlagFwdDecl)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2644, file: !2645, line: 1064, baseType: !517, size: 64, offset: 11008)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2644, file: !2645, line: 1065, baseType: !4227, size: 64, offset: 11072)
!4227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4228, size: 64)
!4228 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !4032, line: 14, baseType: !4229)
!4229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !4032, line: 12, size: 384, elements: !4230)
!4230 = !{!4231}
!4231 = !DIDerivedType(tag: DW_TAG_member, scope: !4229, file: !4032, line: 13, baseType: !4232, size: 384)
!4232 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4229, file: !4032, line: 13, size: 384, elements: !4233)
!4233 = !{!4234, !4235, !4236, !4237}
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !4232, file: !4032, line: 13, baseType: !7, size: 32)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !4232, file: !4032, line: 13, baseType: !7, size: 32, offset: 32)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !4232, file: !4032, line: 13, baseType: !7, size: 32, offset: 64)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !4232, file: !4032, line: 13, baseType: !4238, size: 256, offset: 128)
!4238 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !4239, line: 32, size: 256, elements: !4240)
!4239 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!4240 = !{!4241, !4246, !4259, !4265, !4274, !4294, !4299}
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !4238, file: !4239, line: 37, baseType: !4242, size: 64)
!4242 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4238, file: !4239, line: 34, size: 64, elements: !4243)
!4243 = !{!4244, !4245}
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4242, file: !4239, line: 35, baseType: !2875, size: 32)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4242, file: !4239, line: 36, baseType: !1706, size: 32, offset: 32)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !4238, file: !4239, line: 45, baseType: !4247, size: 192)
!4247 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4238, file: !4239, line: 40, size: 192, elements: !4248)
!4248 = !{!4249, !4251, !4252, !4258}
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !4247, file: !4239, line: 41, baseType: !4250, size: 32)
!4250 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1360, line: 95, baseType: !7)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !4247, file: !4239, line: 42, baseType: !7, size: 32, offset: 32)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !4247, file: !4239, line: 43, baseType: !4253, size: 64, offset: 64)
!4253 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !4239, line: 11, baseType: !4254)
!4254 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !4239, line: 8, size: 64, elements: !4255)
!4255 = !{!4256, !4257}
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !4254, file: !4239, line: 9, baseType: !7, size: 32)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !4254, file: !4239, line: 10, baseType: !622, size: 64)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !4247, file: !4239, line: 44, baseType: !7, size: 32, offset: 128)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !4238, file: !4239, line: 52, baseType: !4260, size: 128)
!4260 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4238, file: !4239, line: 48, size: 128, elements: !4261)
!4261 = !{!4262, !4263, !4264}
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4260, file: !4239, line: 49, baseType: !2875, size: 32)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4260, file: !4239, line: 50, baseType: !1706, size: 32, offset: 32)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !4260, file: !4239, line: 51, baseType: !4253, size: 64, offset: 64)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !4238, file: !4239, line: 61, baseType: !4266, size: 256)
!4266 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4238, file: !4239, line: 55, size: 256, elements: !4267)
!4267 = !{!4268, !4269, !4270, !4271, !4273}
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4266, file: !4239, line: 56, baseType: !2875, size: 32)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4266, file: !4239, line: 57, baseType: !1706, size: 32, offset: 32)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !4266, file: !4239, line: 58, baseType: !7, size: 32, offset: 64)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !4266, file: !4239, line: 59, baseType: !4272, size: 64, offset: 128)
!4272 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1360, line: 94, baseType: !1841)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !4266, file: !4239, line: 60, baseType: !4272, size: 64, offset: 192)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !4238, file: !4239, line: 95, baseType: !4275, size: 256)
!4275 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4238, file: !4239, line: 64, size: 256, elements: !4276)
!4276 = !{!4277, !4278}
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !4275, file: !4239, line: 65, baseType: !622, size: 64)
!4278 = !DIDerivedType(tag: DW_TAG_member, scope: !4275, file: !4239, line: 77, baseType: !4279, size: 192, offset: 64)
!4279 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4275, file: !4239, line: 77, size: 192, elements: !4280)
!4280 = !{!4281, !4282, !4289}
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !4279, file: !4239, line: 82, baseType: !641, size: 16)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !4279, file: !4239, line: 88, baseType: !4283, size: 192)
!4283 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4279, file: !4239, line: 84, size: 192, elements: !4284)
!4284 = !{!4285, !4287, !4288}
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !4283, file: !4239, line: 85, baseType: !4286, size: 64)
!4286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 64, elements: !728)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !4283, file: !4239, line: 86, baseType: !622, size: 64, offset: 64)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !4283, file: !4239, line: 87, baseType: !622, size: 64, offset: 128)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !4279, file: !4239, line: 93, baseType: !4290, size: 96)
!4290 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4279, file: !4239, line: 90, size: 96, elements: !4291)
!4291 = !{!4292, !4293}
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !4290, file: !4239, line: 91, baseType: !4286, size: 64)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !4290, file: !4239, line: 92, baseType: !650, size: 32, offset: 64)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !4238, file: !4239, line: 101, baseType: !4295, size: 128)
!4295 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4238, file: !4239, line: 98, size: 128, elements: !4296)
!4296 = !{!4297, !4298}
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !4295, file: !4239, line: 99, baseType: !1319, size: 64)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !4295, file: !4239, line: 100, baseType: !7, size: 32, offset: 64)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !4238, file: !4239, line: 108, baseType: !4300, size: 128)
!4300 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4238, file: !4239, line: 104, size: 128, elements: !4301)
!4301 = !{!4302, !4303, !4304}
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !4300, file: !4239, line: 105, baseType: !622, size: 64)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !4300, file: !4239, line: 106, baseType: !7, size: 32, offset: 64)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !4300, file: !4239, line: 107, baseType: !13, size: 32, offset: 96)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2644, file: !2645, line: 1067, baseType: !4099, offset: 11136)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2644, file: !2645, line: 1099, baseType: !4307, size: 64, offset: 11136)
!4307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4308, size: 64)
!4308 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2645, line: 56, flags: DIFlagFwdDecl)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2644, file: !2645, line: 1103, baseType: !489, size: 128, offset: 11200)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2644, file: !2645, line: 1104, baseType: !4311, size: 64, offset: 11328)
!4311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4312, size: 64)
!4312 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2645, line: 46, flags: DIFlagFwdDecl)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2644, file: !2645, line: 1105, baseType: !1982, size: 192, offset: 11392)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2644, file: !2645, line: 1106, baseType: !13, size: 32, offset: 11584)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2644, file: !2645, line: 1109, baseType: !4316, size: 128, offset: 11648)
!4316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4317, size: 128, elements: !3261)
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4318, size: 64)
!4318 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2645, line: 51, flags: DIFlagFwdDecl)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2644, file: !2645, line: 1110, baseType: !1982, size: 192, offset: 11776)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2644, file: !2645, line: 1111, baseType: !489, size: 128, offset: 11968)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2644, file: !2645, line: 1173, baseType: !4322, size: 64, offset: 12096)
!4322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4323, size: 64)
!4323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !4324, line: 62, size: 256, align: 256, elements: !4325)
!4324 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!4325 = !{!4326, !4327, !4328, !4333}
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !4323, file: !4324, line: 75, baseType: !650, size: 32)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !4323, file: !4324, line: 90, baseType: !650, size: 32, offset: 32)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !4323, file: !4324, line: 124, baseType: !4329, size: 64, offset: 64)
!4329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4323, file: !4324, line: 109, size: 64, elements: !4330)
!4330 = !{!4331, !4332}
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !4329, file: !4324, line: 110, baseType: !538, size: 64)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4329, file: !4324, line: 112, baseType: !538, size: 64)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4323, file: !4324, line: 144, baseType: !650, size: 32, offset: 128)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2644, file: !2645, line: 1174, baseType: !1308, size: 32, offset: 12160)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2644, file: !2645, line: 1179, baseType: !517, size: 64, offset: 12224)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2644, file: !2645, line: 1182, baseType: !4337, size: 128, offset: 12288)
!4337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2586, line: 76, size: 128, elements: !4338)
!4338 = !{!4339, !4344, !4345}
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4337, file: !2586, line: 85, baseType: !4340, size: 64)
!4340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !4341, line: 7, size: 64, elements: !4342)
!4341 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!4342 = !{!4343}
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !4340, file: !4341, line: 12, baseType: !2783, size: 64)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !4337, file: !2586, line: 88, baseType: !1093, size: 8, offset: 64)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !4337, file: !2586, line: 95, baseType: !1093, size: 8, offset: 72)
!4346 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 1184, baseType: !4347, size: 128, offset: 12416)
!4347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 1184, size: 128, elements: !4348)
!4348 = !{!4349, !4350}
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !4347, file: !2645, line: 1185, baseType: !903, size: 32)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4347, file: !2645, line: 1186, baseType: !504, size: 128, align: 64)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2644, file: !2645, line: 1190, baseType: !2200, size: 64, offset: 12544)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2644, file: !2645, line: 1192, baseType: !4353, size: 128, offset: 12608)
!4353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2586, line: 64, size: 128, elements: !4354)
!4354 = !{!4355, !4356, !4357}
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4353, file: !2586, line: 65, baseType: !2036, size: 64)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4353, file: !2586, line: 67, baseType: !650, size: 32, offset: 64)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4353, file: !2586, line: 68, baseType: !650, size: 32, offset: 96)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2644, file: !2645, line: 1206, baseType: !7, size: 32, offset: 12736)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2644, file: !2645, line: 1207, baseType: !7, size: 32, offset: 12768)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2644, file: !2645, line: 1209, baseType: !517, size: 64, offset: 12800)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2644, file: !2645, line: 1219, baseType: !536, size: 64, offset: 12864)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2644, file: !2645, line: 1220, baseType: !536, size: 64, offset: 12928)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2644, file: !2645, line: 1317, baseType: !7, size: 32, offset: 12992)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2644, file: !2645, line: 1319, baseType: !2643, size: 64, offset: 13056)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2644, file: !2645, line: 1322, baseType: !4366, size: 64, offset: 13120)
!4366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4367, size: 64)
!4367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4368, line: 56, size: 512, elements: !4369)
!4368 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4369 = !{!4370, !4371, !4372, !4373, !4374, !4375, !4376, !4378}
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4367, file: !4368, line: 57, baseType: !4366, size: 64)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4367, file: !4368, line: 58, baseType: !622, size: 64, offset: 64)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4367, file: !4368, line: 59, baseType: !517, size: 64, offset: 128)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4367, file: !4368, line: 60, baseType: !517, size: 64, offset: 192)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4367, file: !4368, line: 61, baseType: !2118, size: 64, offset: 256)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4367, file: !4368, line: 62, baseType: !13, size: 32, offset: 320)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4367, file: !4368, line: 63, baseType: !4377, size: 64, offset: 384)
!4377 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !482, line: 153, baseType: !536)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4367, file: !4368, line: 64, baseType: !3590, size: 64, offset: 448)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2644, file: !2645, line: 1326, baseType: !903, size: 32, offset: 13184)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2644, file: !2645, line: 1342, baseType: !622, size: 64, offset: 13248)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2644, file: !2645, line: 1343, baseType: !538, size: 64, offset: 13312)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2644, file: !2645, line: 1344, baseType: !536, size: 64, offset: 13376)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2644, file: !2645, line: 1345, baseType: !538, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2644, file: !2645, line: 1346, baseType: !538, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2644, file: !2645, line: 1347, baseType: !538, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2644, file: !2645, line: 1348, baseType: !504, size: 128, align: 64, offset: 13504)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2644, file: !2645, line: 1358, baseType: !4388, size: 34816, offset: 13824)
!4388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4389, line: 485, size: 34816, elements: !4390)
!4389 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4390 = !{!4391, !4409, !4410, !4411, !4412, !4413, !4414, !4415, !4416, !4420, !4421, !4422, !4423, !4424, !4425, !4428, !4429, !4430}
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4388, file: !4389, line: 487, baseType: !4392, size: 192)
!4392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4393, size: 192, elements: !1909)
!4393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4394, line: 16, size: 64, elements: !4395)
!4394 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4395 = !{!4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408}
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4393, file: !4394, line: 17, baseType: !916, size: 16)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4393, file: !4394, line: 18, baseType: !916, size: 16, offset: 16)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4393, file: !4394, line: 19, baseType: !916, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4393, file: !4394, line: 19, baseType: !916, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4393, file: !4394, line: 19, baseType: !916, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4393, file: !4394, line: 19, baseType: !916, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4393, file: !4394, line: 19, baseType: !916, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4393, file: !4394, line: 20, baseType: !916, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4393, file: !4394, line: 20, baseType: !916, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4393, file: !4394, line: 20, baseType: !916, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4393, file: !4394, line: 20, baseType: !916, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4393, file: !4394, line: 20, baseType: !916, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4393, file: !4394, line: 20, baseType: !916, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4388, file: !4389, line: 491, baseType: !517, size: 64, offset: 192)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4388, file: !4389, line: 495, baseType: !611, size: 16, offset: 256)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4388, file: !4389, line: 496, baseType: !611, size: 16, offset: 272)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4388, file: !4389, line: 497, baseType: !611, size: 16, offset: 288)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4388, file: !4389, line: 498, baseType: !611, size: 16, offset: 304)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4388, file: !4389, line: 502, baseType: !517, size: 64, offset: 320)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4388, file: !4389, line: 503, baseType: !517, size: 64, offset: 384)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4388, file: !4389, line: 514, baseType: !4417, size: 256, offset: 448)
!4417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4418, size: 256, elements: !2590)
!4418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4419, size: 64)
!4419 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4389, line: 483, flags: DIFlagFwdDecl)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4388, file: !4389, line: 516, baseType: !517, size: 64, offset: 704)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4388, file: !4389, line: 518, baseType: !517, size: 64, offset: 768)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4388, file: !4389, line: 520, baseType: !517, size: 64, offset: 832)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4388, file: !4389, line: 521, baseType: !517, size: 64, offset: 896)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4388, file: !4389, line: 522, baseType: !517, size: 64, offset: 960)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4388, file: !4389, line: 528, baseType: !4426, size: 64, offset: 1024)
!4426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4427, size: 64)
!4427 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4389, line: 10, flags: DIFlagFwdDecl)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4388, file: !4389, line: 535, baseType: !517, size: 64, offset: 1088)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4388, file: !4389, line: 537, baseType: !13, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4388, file: !4389, line: 540, baseType: !4431, size: 33280, offset: 1536)
!4431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4432, line: 317, size: 33280, elements: !4433)
!4432 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4433 = !{!4434, !4435, !4436}
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4431, file: !4432, line: 330, baseType: !13, size: 32)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4431, file: !4432, line: 337, baseType: !517, size: 64, offset: 64)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4431, file: !4432, line: 348, baseType: !4437, size: 32768, offset: 512)
!4437 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4432, line: 304, size: 32768, elements: !4438)
!4438 = !{!4439, !4452, !4489, !4539, !4552}
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4437, file: !4432, line: 305, baseType: !4440, size: 896)
!4440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4432, line: 12, size: 896, elements: !4441)
!4441 = !{!4442, !4443, !4444, !4445, !4446, !4447, !4448, !4449, !4451}
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4440, file: !4432, line: 13, baseType: !1308, size: 32)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4440, file: !4432, line: 14, baseType: !1308, size: 32, offset: 32)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4440, file: !4432, line: 15, baseType: !1308, size: 32, offset: 64)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4440, file: !4432, line: 16, baseType: !1308, size: 32, offset: 96)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4440, file: !4432, line: 17, baseType: !1308, size: 32, offset: 128)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4440, file: !4432, line: 18, baseType: !1308, size: 32, offset: 160)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4440, file: !4432, line: 19, baseType: !1308, size: 32, offset: 192)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4440, file: !4432, line: 22, baseType: !4450, size: 640, offset: 224)
!4450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1308, size: 640, elements: !1222)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4440, file: !4432, line: 25, baseType: !1308, size: 32, offset: 864)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4437, file: !4432, line: 306, baseType: !4453, size: 4096, align: 128)
!4453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4432, line: 34, size: 4096, align: 128, elements: !4454)
!4454 = !{!4455, !4456, !4457, !4458, !4459, !4474, !4475, !4476, !4478, !4480, !4484}
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4453, file: !4432, line: 35, baseType: !916, size: 16)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4453, file: !4432, line: 36, baseType: !916, size: 16, offset: 16)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4453, file: !4432, line: 37, baseType: !916, size: 16, offset: 32)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4453, file: !4432, line: 38, baseType: !916, size: 16, offset: 48)
!4459 = !DIDerivedType(tag: DW_TAG_member, scope: !4453, file: !4432, line: 39, baseType: !4460, size: 128, offset: 64)
!4460 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4453, file: !4432, line: 39, size: 128, elements: !4461)
!4461 = !{!4462, !4467}
!4462 = !DIDerivedType(tag: DW_TAG_member, scope: !4460, file: !4432, line: 40, baseType: !4463, size: 128)
!4463 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4460, file: !4432, line: 40, size: 128, elements: !4464)
!4464 = !{!4465, !4466}
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4463, file: !4432, line: 41, baseType: !536, size: 64)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4463, file: !4432, line: 42, baseType: !536, size: 64, offset: 64)
!4467 = !DIDerivedType(tag: DW_TAG_member, scope: !4460, file: !4432, line: 44, baseType: !4468, size: 128)
!4468 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4460, file: !4432, line: 44, size: 128, elements: !4469)
!4469 = !{!4470, !4471, !4472, !4473}
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4468, file: !4432, line: 45, baseType: !1308, size: 32)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4468, file: !4432, line: 46, baseType: !1308, size: 32, offset: 32)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4468, file: !4432, line: 47, baseType: !1308, size: 32, offset: 64)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4468, file: !4432, line: 48, baseType: !1308, size: 32, offset: 96)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4453, file: !4432, line: 51, baseType: !1308, size: 32, offset: 192)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4453, file: !4432, line: 52, baseType: !1308, size: 32, offset: 224)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4453, file: !4432, line: 55, baseType: !4477, size: 1024, offset: 256)
!4477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1308, size: 1024, elements: !1141)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4453, file: !4432, line: 58, baseType: !4479, size: 2048, offset: 1280)
!4479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1308, size: 2048, elements: !4144)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4453, file: !4432, line: 60, baseType: !4481, size: 384, offset: 3328)
!4481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1308, size: 384, elements: !4482)
!4482 = !{!4483}
!4483 = !DISubrange(count: 12)
!4484 = !DIDerivedType(tag: DW_TAG_member, scope: !4453, file: !4432, line: 62, baseType: !4485, size: 384, offset: 3712)
!4485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4453, file: !4432, line: 62, size: 384, elements: !4486)
!4486 = !{!4487, !4488}
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4485, file: !4432, line: 63, baseType: !4481, size: 384)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4485, file: !4432, line: 64, baseType: !4481, size: 384)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4437, file: !4432, line: 307, baseType: !4490, size: 1088)
!4490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4432, line: 79, size: 1088, elements: !4491)
!4491 = !{!4492, !4493, !4494, !4495, !4496, !4497, !4498, !4499, !4500, !4501, !4502, !4503, !4504, !4505, !4506, !4538}
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4490, file: !4432, line: 80, baseType: !1308, size: 32)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4490, file: !4432, line: 81, baseType: !1308, size: 32, offset: 32)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4490, file: !4432, line: 82, baseType: !1308, size: 32, offset: 64)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4490, file: !4432, line: 83, baseType: !1308, size: 32, offset: 96)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4490, file: !4432, line: 84, baseType: !1308, size: 32, offset: 128)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4490, file: !4432, line: 85, baseType: !1308, size: 32, offset: 160)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4490, file: !4432, line: 86, baseType: !1308, size: 32, offset: 192)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4490, file: !4432, line: 88, baseType: !4450, size: 640, offset: 224)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4490, file: !4432, line: 89, baseType: !1116, size: 8, offset: 864)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4490, file: !4432, line: 90, baseType: !1116, size: 8, offset: 872)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4490, file: !4432, line: 91, baseType: !1116, size: 8, offset: 880)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4490, file: !4432, line: 92, baseType: !1116, size: 8, offset: 888)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4490, file: !4432, line: 93, baseType: !1116, size: 8, offset: 896)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4490, file: !4432, line: 94, baseType: !1116, size: 8, offset: 904)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4490, file: !4432, line: 95, baseType: !4507, size: 64, offset: 960)
!4507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4508, size: 64)
!4508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4509, line: 11, size: 128, elements: !4510)
!4509 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4510 = !{!4511, !4512}
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4508, file: !4509, line: 12, baseType: !1319, size: 64)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4508, file: !4509, line: 13, baseType: !4513, size: 64, offset: 64)
!4513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4514, size: 64)
!4514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4515, line: 56, size: 1344, elements: !4516)
!4515 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4516 = !{!4517, !4518, !4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4535, !4536, !4537}
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4514, file: !4515, line: 61, baseType: !517, size: 64)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4514, file: !4515, line: 62, baseType: !517, size: 64, offset: 64)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4514, file: !4515, line: 63, baseType: !517, size: 64, offset: 128)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4514, file: !4515, line: 64, baseType: !517, size: 64, offset: 192)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4514, file: !4515, line: 65, baseType: !517, size: 64, offset: 256)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4514, file: !4515, line: 66, baseType: !517, size: 64, offset: 320)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4514, file: !4515, line: 68, baseType: !517, size: 64, offset: 384)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4514, file: !4515, line: 69, baseType: !517, size: 64, offset: 448)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4514, file: !4515, line: 70, baseType: !517, size: 64, offset: 512)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4514, file: !4515, line: 71, baseType: !517, size: 64, offset: 576)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4514, file: !4515, line: 72, baseType: !517, size: 64, offset: 640)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4514, file: !4515, line: 73, baseType: !517, size: 64, offset: 704)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4514, file: !4515, line: 74, baseType: !517, size: 64, offset: 768)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4514, file: !4515, line: 75, baseType: !517, size: 64, offset: 832)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4514, file: !4515, line: 76, baseType: !517, size: 64, offset: 896)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4514, file: !4515, line: 81, baseType: !517, size: 64, offset: 960)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4514, file: !4515, line: 83, baseType: !517, size: 64, offset: 1024)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4514, file: !4515, line: 84, baseType: !517, size: 64, offset: 1088)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4514, file: !4515, line: 85, baseType: !517, size: 64, offset: 1152)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4514, file: !4515, line: 86, baseType: !517, size: 64, offset: 1216)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4514, file: !4515, line: 87, baseType: !517, size: 64, offset: 1280)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4490, file: !4432, line: 96, baseType: !1308, size: 32, offset: 1024)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4437, file: !4432, line: 308, baseType: !4540, size: 4608, align: 512)
!4540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4432, line: 289, size: 4608, align: 512, elements: !4541)
!4541 = !{!4542, !4543, !4550}
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4540, file: !4432, line: 290, baseType: !4453, size: 4096, align: 128)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4540, file: !4432, line: 291, baseType: !4544, size: 512, offset: 4096)
!4544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4432, line: 268, size: 512, elements: !4545)
!4545 = !{!4546, !4547, !4548}
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4544, file: !4432, line: 269, baseType: !536, size: 64)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4544, file: !4432, line: 270, baseType: !536, size: 64, offset: 64)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4544, file: !4432, line: 271, baseType: !4549, size: 384, offset: 128)
!4549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 384, elements: !1320)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4540, file: !4432, line: 292, baseType: !4551, offset: 4608)
!4551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, elements: !819)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4437, file: !4432, line: 309, baseType: !4553, size: 32768)
!4553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 32768, elements: !4554)
!4554 = !{!4555}
!4555 = !DISubrange(count: 4096)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2640, file: !2038, line: 378, baseType: !4557, size: 64, offset: 64)
!4557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 64)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2636, file: !2038, line: 384, baseType: !3139, size: 192, offset: 192)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !2413, file: !2038, line: 500, baseType: !1987, offset: 6656)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !2413, file: !2038, line: 501, baseType: !4561, size: 64, offset: 6656)
!4561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4562, size: 64)
!4562 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !2038, line: 387, flags: DIFlagFwdDecl)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2413, file: !2038, line: 516, baseType: !2926, size: 64, offset: 6720)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !2413, file: !2038, line: 519, baseType: !1634, size: 64, offset: 6784)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !2413, file: !2038, line: 521, baseType: !4566, size: 64, offset: 6848)
!4566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4567, size: 64)
!4567 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !2038, line: 521, flags: DIFlagFwdDecl)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !2413, file: !2038, line: 545, baseType: !588, size: 32, offset: 6912)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !2413, file: !2038, line: 548, baseType: !1093, size: 8, offset: 6944)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !2413, file: !2038, line: 550, baseType: !4571, offset: 6952)
!4571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4572, line: 142, elements: !1904)
!4572 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !2413, file: !2038, line: 554, baseType: !3078, size: 256, offset: 6976)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !2413, file: !2038, line: 557, baseType: !1308, size: 32, offset: 7232)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !2410, file: !2038, line: 565, baseType: !4576, offset: 7296)
!4576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !517, elements: !514)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2406, file: !2038, line: 151, baseType: !588, size: 32)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2398, file: !2038, line: 156, baseType: !1987, offset: 256)
!4579 = !DIDerivedType(tag: DW_TAG_member, scope: !2042, file: !2038, line: 159, baseType: !4580, size: 128)
!4580 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2042, file: !2038, line: 159, size: 128, elements: !4581)
!4581 = !{!4582, !4646}
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !4580, file: !2038, line: 161, baseType: !4583, size: 64)
!4583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4584, size: 64)
!4584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !65, line: 110, size: 1152, elements: !4585)
!4585 = !{!4586, !4596, !4617, !4618, !4619, !4620, !4621, !4633, !4634, !4635}
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !4584, file: !65, line: 111, baseType: !4587, size: 384)
!4587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !65, line: 19, size: 384, elements: !4588)
!4588 = !{!4589, !4591, !4592, !4593, !4594, !4595}
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !4587, file: !65, line: 20, baseType: !4590, size: 64)
!4590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !517)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !4587, file: !65, line: 21, baseType: !4590, size: 64, offset: 64)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !4587, file: !65, line: 22, baseType: !4590, size: 64, offset: 128)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4587, file: !65, line: 23, baseType: !517, size: 64, offset: 192)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4587, file: !65, line: 24, baseType: !517, size: 64, offset: 256)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4587, file: !65, line: 25, baseType: !517, size: 64, offset: 320)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4584, file: !65, line: 112, baseType: !4597, size: 64, offset: 384)
!4597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4598, size: 64)
!4598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !4599, line: 105, size: 128, elements: !4600)
!4599 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!4600 = !{!4601, !4602}
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !4598, file: !4599, line: 110, baseType: !517, size: 64)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4598, file: !4599, line: 118, baseType: !4603, size: 64, offset: 64)
!4603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4604, size: 64)
!4604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !4599, line: 95, size: 448, elements: !4605)
!4605 = !{!4606, !4607, !4612, !4613, !4614, !4615, !4616}
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4604, file: !4599, line: 96, baseType: !576, size: 64)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4604, file: !4599, line: 97, baseType: !4608, size: 64, offset: 64)
!4608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4609, size: 64)
!4609 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !4599, line: 60, baseType: !4610)
!4610 = !DISubroutineType(types: !4611)
!4611 = !{null, !4597}
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !4604, file: !4599, line: 98, baseType: !4608, size: 64, offset: 128)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !4604, file: !4599, line: 99, baseType: !1093, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !4604, file: !4599, line: 100, baseType: !1093, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4604, file: !4599, line: 101, baseType: !504, size: 128, align: 64, offset: 256)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4604, file: !4599, line: 102, baseType: !4597, size: 64, offset: 384)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !4584, file: !65, line: 113, baseType: !4598, size: 128, offset: 448)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4584, file: !65, line: 114, baseType: !3139, size: 192, offset: 576)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4584, file: !65, line: 115, baseType: !64, size: 32, offset: 768)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4584, file: !65, line: 116, baseType: !13, size: 32, offset: 800)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4584, file: !65, line: 117, baseType: !4622, size: 64, offset: 832)
!4622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4623, size: 64)
!4623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4624)
!4624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !65, line: 67, size: 256, elements: !4625)
!4625 = !{!4626, !4627, !4631, !4632}
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !4624, file: !65, line: 73, baseType: !2138, size: 64)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !4624, file: !65, line: 78, baseType: !4628, size: 64, offset: 64)
!4628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4629, size: 64)
!4629 = !DISubroutineType(types: !4630)
!4630 = !{null, !4583}
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4624, file: !65, line: 83, baseType: !4628, size: 64, offset: 128)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !4624, file: !65, line: 89, baseType: !2462, size: 64, offset: 192)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4584, file: !65, line: 118, baseType: !622, size: 64, offset: 896)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !4584, file: !65, line: 119, baseType: !7, size: 32, offset: 960)
!4635 = !DIDerivedType(tag: DW_TAG_member, scope: !4584, file: !65, line: 120, baseType: !4636, size: 128, offset: 1024)
!4636 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4584, file: !65, line: 120, size: 128, elements: !4637)
!4637 = !{!4638, !4644}
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4636, file: !65, line: 121, baseType: !4639, size: 128)
!4639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !4640, line: 6, size: 128, elements: !4641)
!4640 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4641 = !{!4642, !4643}
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4639, file: !4640, line: 7, baseType: !536, size: 64)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4639, file: !4640, line: 8, baseType: !536, size: 64, offset: 64)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4636, file: !65, line: 122, baseType: !4645)
!4645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4639, elements: !819)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !4580, file: !2038, line: 162, baseType: !622, size: 64, offset: 64)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2042, file: !2038, line: 176, baseType: !504, size: 128, align: 64)
!4648 = !DIDerivedType(tag: DW_TAG_member, scope: !2037, file: !2038, line: 179, baseType: !4649, size: 32, offset: 384)
!4649 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2037, file: !2038, line: 179, size: 32, elements: !4650)
!4650 = !{!4651, !4652, !4653, !4654}
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4649, file: !2038, line: 184, baseType: !588, size: 32)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4649, file: !2038, line: 192, baseType: !13, size: 32)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4649, file: !2038, line: 194, baseType: !13, size: 32)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4649, file: !2038, line: 195, baseType: !7, size: 32)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !2037, file: !2038, line: 199, baseType: !588, size: 32, offset: 416)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1917, file: !78, line: 1964, baseType: !4657, size: 64, offset: 1344)
!4657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4658, size: 64)
!4658 = !DISubroutineType(types: !4659)
!4659 = !{!1319, !1863, !4660}
!4660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4661, size: 64)
!4661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !4662, line: 12, size: 256, elements: !4663)
!4662 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!4663 = !{!4664, !4665, !4666, !4667, !4668}
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4661, file: !4662, line: 13, baseType: !2059, size: 32)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !4661, file: !4662, line: 16, baseType: !7, size: 32, offset: 32)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !4661, file: !4662, line: 23, baseType: !517, size: 64, offset: 64)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !4661, file: !4662, line: 30, baseType: !517, size: 64, offset: 128)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !4661, file: !4662, line: 33, baseType: !4669, size: 64, offset: 192)
!4669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4670, size: 64)
!4670 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !2038, line: 27, flags: DIFlagFwdDecl)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1917, file: !78, line: 1966, baseType: !4657, size: 64, offset: 1408)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1864, file: !78, line: 1424, baseType: !4673, size: 64, offset: 448)
!4673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4674, size: 64)
!4674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4675)
!4675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !72, line: 322, size: 704, elements: !4676)
!4676 = !{!4677, !4723, !4727, !4731, !4732, !4733, !4734, !4735, !4740, !4745, !4749}
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !4675, file: !72, line: 323, baseType: !4678, size: 64)
!4678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4679, size: 64)
!4679 = !DISubroutineType(types: !4680)
!4680 = !{!7, !4681}
!4681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4682, size: 64)
!4682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !72, line: 294, size: 1600, elements: !4683)
!4683 = !{!4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4708, !4709, !4710}
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !4682, file: !72, line: 295, baseType: !481, size: 128)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !4682, file: !72, line: 296, baseType: !489, size: 128, offset: 128)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !4682, file: !72, line: 297, baseType: !489, size: 128, offset: 256)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !4682, file: !72, line: 298, baseType: !489, size: 128, offset: 384)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !4682, file: !72, line: 299, baseType: !1982, size: 192, offset: 512)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !4682, file: !72, line: 300, baseType: !1987, offset: 704)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !4682, file: !72, line: 301, baseType: !588, size: 32, offset: 704)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !4682, file: !72, line: 302, baseType: !1863, size: 64, offset: 768)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !4682, file: !72, line: 303, baseType: !4693, size: 64, offset: 832)
!4693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !72, line: 68, size: 64, elements: !4694)
!4694 = !{!4695, !4707}
!4695 = !DIDerivedType(tag: DW_TAG_member, scope: !4693, file: !72, line: 69, baseType: !4696, size: 32)
!4696 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4693, file: !72, line: 69, size: 32, elements: !4697)
!4697 = !{!4698, !4699, !4700}
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4696, file: !72, line: 70, baseType: !1700, size: 32)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4696, file: !72, line: 71, baseType: !1708, size: 32)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !4696, file: !72, line: 72, baseType: !4701, size: 32)
!4701 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !4702, line: 24, baseType: !4703)
!4702 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!4703 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4702, line: 22, size: 32, elements: !4704)
!4704 = !{!4705}
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4703, file: !4702, line: 23, baseType: !4706, size: 32)
!4706 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !4702, line: 20, baseType: !1706)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4693, file: !72, line: 74, baseType: !71, size: 32, offset: 32)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !4682, file: !72, line: 304, baseType: !1794, size: 64, offset: 896)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !4682, file: !72, line: 305, baseType: !517, size: 64, offset: 960)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !4682, file: !72, line: 306, baseType: !4711, size: 576, offset: 1024)
!4711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !72, line: 205, size: 576, elements: !4712)
!4712 = !{!4713, !4715, !4716, !4717, !4718, !4719, !4720, !4721, !4722}
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !4711, file: !72, line: 206, baseType: !4714, size: 64)
!4714 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !72, line: 66, baseType: !584)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !4711, file: !72, line: 207, baseType: !4714, size: 64, offset: 64)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !4711, file: !72, line: 208, baseType: !4714, size: 64, offset: 128)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !4711, file: !72, line: 209, baseType: !4714, size: 64, offset: 192)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !4711, file: !72, line: 210, baseType: !4714, size: 64, offset: 256)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !4711, file: !72, line: 211, baseType: !4714, size: 64, offset: 320)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !4711, file: !72, line: 212, baseType: !4714, size: 64, offset: 384)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !4711, file: !72, line: 213, baseType: !1801, size: 64, offset: 448)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !4711, file: !72, line: 214, baseType: !1801, size: 64, offset: 512)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !4675, file: !72, line: 324, baseType: !4724, size: 64, offset: 64)
!4724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4725, size: 64)
!4725 = !DISubroutineType(types: !4726)
!4726 = !{!4681, !1863, !7}
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !4675, file: !72, line: 325, baseType: !4728, size: 64, offset: 128)
!4728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4729, size: 64)
!4729 = !DISubroutineType(types: !4730)
!4730 = !{null, !4681}
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !4675, file: !72, line: 326, baseType: !4678, size: 64, offset: 192)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !4675, file: !72, line: 327, baseType: !4678, size: 64, offset: 256)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !4675, file: !72, line: 328, baseType: !4678, size: 64, offset: 320)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4675, file: !72, line: 329, baseType: !1945, size: 64, offset: 384)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !4675, file: !72, line: 332, baseType: !4736, size: 64, offset: 448)
!4736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4737, size: 64)
!4737 = !DISubroutineType(types: !4738)
!4738 = !{!4739, !1693}
!4739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4714, size: 64)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !4675, file: !72, line: 333, baseType: !4741, size: 64, offset: 512)
!4741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4742, size: 64)
!4742 = !DISubroutineType(types: !4743)
!4743 = !{!7, !1693, !4744}
!4744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4701, size: 64)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !4675, file: !72, line: 335, baseType: !4746, size: 64, offset: 576)
!4746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4747, size: 64)
!4747 = !DISubroutineType(types: !4748)
!4748 = !{!7, !1693, !4739}
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4675, file: !72, line: 337, baseType: !4750, size: 64, offset: 640)
!4750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4751, size: 64)
!4751 = !DISubroutineType(types: !4752)
!4752 = !{!7, !1863, !4753}
!4753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4693, size: 64)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1864, file: !78, line: 1425, baseType: !4755, size: 64, offset: 512)
!4755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4756, size: 64)
!4756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4757)
!4757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !72, line: 428, size: 704, elements: !4758)
!4758 = !{!4759, !4763, !4764, !4768, !4769, !4770, !4785, !4808, !4812, !4813, !4836}
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !4757, file: !72, line: 429, baseType: !4760, size: 64)
!4760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4761, size: 64)
!4761 = !DISubroutineType(types: !4762)
!4762 = !{!7, !1863, !7, !7, !1810}
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !4757, file: !72, line: 430, baseType: !1945, size: 64, offset: 64)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !4757, file: !72, line: 431, baseType: !4765, size: 64, offset: 128)
!4765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4766, size: 64)
!4766 = !DISubroutineType(types: !4767)
!4767 = !{!7, !1863, !13}
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !4757, file: !72, line: 432, baseType: !4765, size: 64, offset: 192)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !4757, file: !72, line: 433, baseType: !1945, size: 64, offset: 256)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !4757, file: !72, line: 434, baseType: !4771, size: 64, offset: 320)
!4771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4772, size: 64)
!4772 = !DISubroutineType(types: !4773)
!4773 = !{!7, !1863, !7, !4774}
!4774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4775, size: 64)
!4775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !72, line: 415, size: 256, elements: !4776)
!4776 = !{!4777, !4778, !4779, !4780, !4781, !4782, !4783, !4784}
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !4775, file: !72, line: 416, baseType: !7, size: 32)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4775, file: !72, line: 417, baseType: !13, size: 32, offset: 32)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !4775, file: !72, line: 418, baseType: !13, size: 32, offset: 64)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !4775, file: !72, line: 420, baseType: !13, size: 32, offset: 96)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !4775, file: !72, line: 421, baseType: !13, size: 32, offset: 128)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !4775, file: !72, line: 422, baseType: !13, size: 32, offset: 160)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !4775, file: !72, line: 423, baseType: !13, size: 32, offset: 192)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !4775, file: !72, line: 424, baseType: !13, size: 32, offset: 224)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !4757, file: !72, line: 435, baseType: !4786, size: 64, offset: 384)
!4786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4787, size: 64)
!4787 = !DISubroutineType(types: !4788)
!4788 = !{!7, !1863, !4693, !4789}
!4789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4790, size: 64)
!4790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !72, line: 343, size: 960, elements: !4791)
!4791 = !{!4792, !4793, !4794, !4795, !4796, !4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4806, !4807}
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !4790, file: !72, line: 344, baseType: !7, size: 32)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !4790, file: !72, line: 345, baseType: !536, size: 64, offset: 64)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !4790, file: !72, line: 346, baseType: !536, size: 64, offset: 128)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !4790, file: !72, line: 347, baseType: !536, size: 64, offset: 192)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !4790, file: !72, line: 348, baseType: !536, size: 64, offset: 256)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !4790, file: !72, line: 349, baseType: !536, size: 64, offset: 320)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !4790, file: !72, line: 350, baseType: !536, size: 64, offset: 384)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !4790, file: !72, line: 351, baseType: !582, size: 64, offset: 448)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !4790, file: !72, line: 353, baseType: !582, size: 64, offset: 512)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !4790, file: !72, line: 354, baseType: !7, size: 32, offset: 576)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !4790, file: !72, line: 355, baseType: !7, size: 32, offset: 608)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !4790, file: !72, line: 356, baseType: !536, size: 64, offset: 640)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !4790, file: !72, line: 357, baseType: !536, size: 64, offset: 704)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !4790, file: !72, line: 358, baseType: !536, size: 64, offset: 768)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !4790, file: !72, line: 359, baseType: !582, size: 64, offset: 832)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !4790, file: !72, line: 360, baseType: !7, size: 32, offset: 896)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !4757, file: !72, line: 436, baseType: !4809, size: 64, offset: 448)
!4809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4810, size: 64)
!4810 = !DISubroutineType(types: !4811)
!4811 = !{!7, !1863, !4753, !4789}
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !4757, file: !72, line: 438, baseType: !4786, size: 64, offset: 512)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !4757, file: !72, line: 439, baseType: !4814, size: 64, offset: 576)
!4814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4815, size: 64)
!4815 = !DISubroutineType(types: !4816)
!4816 = !{!7, !1863, !4817}
!4817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4818, size: 64)
!4818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !72, line: 409, size: 1408, elements: !4819)
!4819 = !{!4820, !4821}
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !4818, file: !72, line: 410, baseType: !13, size: 32)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !4818, file: !72, line: 411, baseType: !4822, size: 1344, offset: 64)
!4822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4823, size: 1344, elements: !1909)
!4823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !72, line: 395, size: 448, elements: !4824)
!4824 = !{!4825, !4826, !4827, !4828, !4829, !4830, !4831, !4832, !4833, !4835}
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4823, file: !72, line: 396, baseType: !13, size: 32)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !4823, file: !72, line: 397, baseType: !13, size: 32, offset: 32)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !4823, file: !72, line: 399, baseType: !13, size: 32, offset: 64)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !4823, file: !72, line: 400, baseType: !13, size: 32, offset: 96)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !4823, file: !72, line: 401, baseType: !13, size: 32, offset: 128)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !4823, file: !72, line: 402, baseType: !13, size: 32, offset: 160)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !4823, file: !72, line: 403, baseType: !13, size: 32, offset: 192)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4823, file: !72, line: 404, baseType: !540, size: 64, offset: 256)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4823, file: !72, line: 405, baseType: !4834, size: 64, offset: 320)
!4834 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !482, line: 126, baseType: !536)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !4823, file: !72, line: 406, baseType: !4834, size: 64, offset: 384)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !4757, file: !72, line: 440, baseType: !4765, size: 64, offset: 640)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1864, file: !78, line: 1426, baseType: !4838, size: 64, offset: 576)
!4838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4839, size: 64)
!4839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4840)
!4840 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !78, line: 49, flags: DIFlagFwdDecl)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1864, file: !78, line: 1427, baseType: !517, size: 64, offset: 640)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1864, file: !78, line: 1428, baseType: !517, size: 64, offset: 704)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1864, file: !78, line: 1429, baseType: !517, size: 64, offset: 768)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1864, file: !78, line: 1430, baseType: !1656, size: 64, offset: 832)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1864, file: !78, line: 1431, baseType: !2072, size: 256, offset: 896)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1864, file: !78, line: 1432, baseType: !7, size: 32, offset: 1152)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1864, file: !78, line: 1433, baseType: !588, size: 32, offset: 1184)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1864, file: !78, line: 1437, baseType: !4849, size: 64, offset: 1216)
!4849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4850, size: 64)
!4850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4851, size: 64)
!4851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4852)
!4852 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !78, line: 1437, flags: DIFlagFwdDecl)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1864, file: !78, line: 1449, baseType: !4854, size: 64, offset: 1280)
!4854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1672, line: 34, size: 64, elements: !4855)
!4855 = !{!4856}
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4854, file: !1672, line: 35, baseType: !1675, size: 64)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1864, file: !78, line: 1450, baseType: !489, size: 128, offset: 1344)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1864, file: !78, line: 1451, baseType: !4859, size: 64, offset: 1472)
!4859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4860, size: 64)
!4860 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !78, line: 699, flags: DIFlagFwdDecl)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1864, file: !78, line: 1452, baseType: !4188, size: 64, offset: 1536)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1864, file: !78, line: 1453, baseType: !4863, size: 64, offset: 1600)
!4863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4864, size: 64)
!4864 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !78, line: 1453, flags: DIFlagFwdDecl)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1864, file: !78, line: 1454, baseType: !481, size: 128, offset: 1664)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1864, file: !78, line: 1455, baseType: !13, size: 32, offset: 1792)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1864, file: !78, line: 1456, baseType: !4868, size: 2432, offset: 1856)
!4868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !72, line: 518, size: 2432, elements: !4869)
!4869 = !{!4870, !4871, !4872, !4874, !4906}
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4868, file: !72, line: 519, baseType: !13, size: 32)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4868, file: !72, line: 520, baseType: !2072, size: 256, offset: 64)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4868, file: !72, line: 521, baseType: !4873, size: 192, offset: 320)
!4873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1693, size: 192, elements: !1909)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4868, file: !72, line: 522, baseType: !4875, size: 1728, offset: 512)
!4875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4876, size: 1728, elements: !1909)
!4876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !72, line: 222, size: 576, elements: !4877)
!4877 = !{!4878, !4898, !4899, !4900, !4901, !4902, !4903, !4904, !4905}
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4876, file: !72, line: 223, baseType: !4879, size: 64)
!4879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4880, size: 64)
!4880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !72, line: 443, size: 256, elements: !4881)
!4881 = !{!4882, !4883, !4896, !4897}
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4880, file: !72, line: 444, baseType: !7, size: 32)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4880, file: !72, line: 445, baseType: !4884, size: 64, offset: 64)
!4884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4885, size: 64)
!4885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4886)
!4886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !72, line: 310, size: 512, elements: !4887)
!4887 = !{!4888, !4889, !4890, !4891, !4892, !4893, !4894, !4895}
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4886, file: !72, line: 311, baseType: !1945, size: 64)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4886, file: !72, line: 312, baseType: !1945, size: 64, offset: 64)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4886, file: !72, line: 313, baseType: !1945, size: 64, offset: 128)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4886, file: !72, line: 314, baseType: !1945, size: 64, offset: 192)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4886, file: !72, line: 315, baseType: !4678, size: 64, offset: 256)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4886, file: !72, line: 316, baseType: !4678, size: 64, offset: 320)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4886, file: !72, line: 317, baseType: !4678, size: 64, offset: 384)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4886, file: !72, line: 318, baseType: !4750, size: 64, offset: 448)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4880, file: !72, line: 446, baseType: !1301, size: 64, offset: 128)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4880, file: !72, line: 447, baseType: !4879, size: 64, offset: 192)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4876, file: !72, line: 224, baseType: !7, size: 32, offset: 64)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4876, file: !72, line: 226, baseType: !489, size: 128, offset: 128)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4876, file: !72, line: 227, baseType: !517, size: 64, offset: 256)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4876, file: !72, line: 228, baseType: !13, size: 32, offset: 320)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4876, file: !72, line: 229, baseType: !13, size: 32, offset: 352)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4876, file: !72, line: 230, baseType: !4714, size: 64, offset: 384)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4876, file: !72, line: 231, baseType: !4714, size: 64, offset: 448)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4876, file: !72, line: 232, baseType: !622, size: 64, offset: 512)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4868, file: !72, line: 523, baseType: !4907, size: 192, offset: 2240)
!4907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4884, size: 192, elements: !1909)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1864, file: !78, line: 1458, baseType: !4909, size: 2112, offset: 4288)
!4909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !78, line: 1410, size: 2112, elements: !4910)
!4910 = !{!4911, !4912, !4913}
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4909, file: !78, line: 1411, baseType: !7, size: 32)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4909, file: !78, line: 1412, baseType: !2206, size: 128, offset: 64)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4909, file: !78, line: 1413, baseType: !4914, size: 1920, offset: 192)
!4914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4915, size: 1920, elements: !1909)
!4915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4916, line: 12, size: 640, elements: !4917)
!4916 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4917 = !{!4918, !4926, !4928, !4933, !4934}
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4915, file: !4916, line: 13, baseType: !4919, size: 320)
!4919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4920, line: 17, size: 320, elements: !4921)
!4920 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4921 = !{!4922, !4923, !4924, !4925}
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4919, file: !4920, line: 18, baseType: !7, size: 32)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4919, file: !4920, line: 19, baseType: !7, size: 32, offset: 32)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4919, file: !4920, line: 20, baseType: !2206, size: 128, offset: 64)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4919, file: !4920, line: 22, baseType: !504, size: 128, align: 64, offset: 192)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4915, file: !4916, line: 14, baseType: !4927, size: 64, offset: 320)
!4927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4915, file: !4916, line: 15, baseType: !4929, size: 64, offset: 384)
!4929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !4930, line: 16, size: 64, elements: !4931)
!4930 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!4931 = !{!4932}
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4929, file: !4930, line: 17, baseType: !2643, size: 64)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4915, file: !4916, line: 16, baseType: !2206, size: 128, offset: 448)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4915, file: !4916, line: 17, baseType: !588, size: 32, offset: 576)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1864, file: !78, line: 1465, baseType: !622, size: 64, offset: 6400)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1864, file: !78, line: 1468, baseType: !1308, size: 32, offset: 6464)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1864, file: !78, line: 1470, baseType: !1801, size: 64, offset: 6528)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1864, file: !78, line: 1471, baseType: !1801, size: 64, offset: 6592)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1864, file: !78, line: 1473, baseType: !650, size: 32, offset: 6656)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1864, file: !78, line: 1474, baseType: !4941, size: 64, offset: 6720)
!4941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4942, size: 64)
!4942 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !78, line: 603, flags: DIFlagFwdDecl)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1864, file: !78, line: 1477, baseType: !4944, size: 256, offset: 6784)
!4944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 256, elements: !1141)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1864, file: !78, line: 1478, baseType: !4946, size: 128, offset: 7040)
!4946 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !4947, line: 18, baseType: !4948)
!4947 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!4948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4947, line: 16, size: 128, elements: !4949)
!4949 = !{!4950}
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4948, file: !4947, line: 17, baseType: !3557, size: 128)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1864, file: !78, line: 1480, baseType: !13, size: 32, offset: 7168)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1864, file: !78, line: 1481, baseType: !4953, size: 32, offset: 7200)
!4953 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !482, line: 150, baseType: !13)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1864, file: !78, line: 1487, baseType: !1982, size: 192, offset: 7232)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1864, file: !78, line: 1493, baseType: !497, size: 64, offset: 7424)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1864, file: !78, line: 1495, baseType: !4957, size: 64, offset: 7488)
!4957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4958, size: 64)
!4958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4959)
!4959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1654, line: 135, size: 1024, align: 512, elements: !4960)
!4960 = !{!4961, !4965, !4966, !4973, !4979, !4983, !4987, !4991, !4992, !4996, !5000, !5005, !5009}
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !4959, file: !1654, line: 136, baseType: !4962, size: 64)
!4962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4963, size: 64)
!4963 = !DISubroutineType(types: !4964)
!4964 = !{!7, !1656, !13}
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !4959, file: !1654, line: 137, baseType: !4962, size: 64, offset: 64)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !4959, file: !1654, line: 138, baseType: !4967, size: 64, offset: 128)
!4967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4968, size: 64)
!4968 = !DISubroutineType(types: !4969)
!4969 = !{!7, !4970, !4972}
!4970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4971, size: 64)
!4971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1657)
!4972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !4959, file: !1654, line: 139, baseType: !4974, size: 64, offset: 192)
!4974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4975, size: 64)
!4975 = !DISubroutineType(types: !4976)
!4976 = !{!7, !4970, !13, !497, !4977}
!4977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4978, size: 64)
!4978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1680)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !4959, file: !1654, line: 141, baseType: !4980, size: 64, offset: 256)
!4980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4981, size: 64)
!4981 = !DISubroutineType(types: !4982)
!4982 = !{!7, !4970}
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !4959, file: !1654, line: 142, baseType: !4984, size: 64, offset: 320)
!4984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4985, size: 64)
!4985 = !DISubroutineType(types: !4986)
!4986 = !{!7, !1656}
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !4959, file: !1654, line: 143, baseType: !4988, size: 64, offset: 384)
!4988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4989, size: 64)
!4989 = !DISubroutineType(types: !4990)
!4990 = !{null, !1656}
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !4959, file: !1654, line: 144, baseType: !4988, size: 64, offset: 448)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !4959, file: !1654, line: 145, baseType: !4993, size: 64, offset: 512)
!4993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4994, size: 64)
!4994 = !DISubroutineType(types: !4995)
!4995 = !{null, !1656, !1693}
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !4959, file: !1654, line: 146, baseType: !4997, size: 64, offset: 576)
!4997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4998, size: 64)
!4998 = !DISubroutineType(types: !4999)
!4999 = !{!676, !1656, !676, !7}
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !4959, file: !1654, line: 147, baseType: !5001, size: 64, offset: 640)
!5001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5002, size: 64)
!5002 = !DISubroutineType(types: !5003)
!5003 = !{!1652, !5004}
!5004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !4959, file: !1654, line: 148, baseType: !5006, size: 64, offset: 704)
!5006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5007, size: 64)
!5007 = !DISubroutineType(types: !5008)
!5008 = !{!7, !1810, !1093}
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !4959, file: !1654, line: 149, baseType: !5010, size: 64, offset: 768)
!5010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5011, size: 64)
!5011 = !DISubroutineType(types: !5012)
!5012 = !{!1656, !1656, !5013}
!5013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5014, size: 64)
!5014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1694)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1864, file: !78, line: 1500, baseType: !7, size: 32, offset: 7552)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1864, file: !78, line: 1502, baseType: !5017, size: 448, offset: 7616)
!5017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !4662, line: 60, size: 448, elements: !5018)
!5018 = !{!5019, !5024, !5025, !5026, !5027, !5028, !5029}
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !5017, file: !4662, line: 61, baseType: !5020, size: 64)
!5020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5021, size: 64)
!5021 = !DISubroutineType(types: !5022)
!5022 = !{!517, !5023, !4660}
!5023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5017, size: 64)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !5017, file: !4662, line: 63, baseType: !5020, size: 64, offset: 64)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !5017, file: !4662, line: 66, baseType: !1319, size: 64, offset: 128)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !5017, file: !4662, line: 67, baseType: !7, size: 32, offset: 192)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5017, file: !4662, line: 68, baseType: !13, size: 32, offset: 224)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5017, file: !4662, line: 71, baseType: !489, size: 128, offset: 256)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !5017, file: !4662, line: 77, baseType: !5030, size: 64, offset: 384)
!5030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1864, file: !78, line: 1505, baseType: !576, size: 64, offset: 8064)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1864, file: !78, line: 1508, baseType: !576, size: 64, offset: 8128)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1864, file: !78, line: 1511, baseType: !7, size: 32, offset: 8192)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1864, file: !78, line: 1514, baseType: !2342, size: 32, offset: 8224)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1864, file: !78, line: 1517, baseType: !5036, size: 64, offset: 8256)
!5036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5037, size: 64)
!5037 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !3079, line: 18, flags: DIFlagFwdDecl)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1864, file: !78, line: 1518, baseType: !1898, size: 64, offset: 8320)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1864, file: !78, line: 1525, baseType: !2926, size: 64, offset: 8384)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1864, file: !78, line: 1532, baseType: !5041, size: 64, offset: 8448)
!5041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !5042, line: 52, size: 64, elements: !5043)
!5042 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!5043 = !{!5044}
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5041, file: !5042, line: 53, baseType: !5045, size: 64)
!5045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5046, size: 64)
!5046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !5042, line: 40, size: 256, elements: !5047)
!5047 = !{!5048, !5049, !5054}
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5046, file: !5042, line: 42, baseType: !1987)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !5046, file: !5042, line: 44, baseType: !5050, size: 192)
!5050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !5042, line: 28, size: 192, elements: !5051)
!5051 = !{!5052, !5053}
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5050, file: !5042, line: 29, baseType: !489, size: 128)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !5050, file: !5042, line: 31, baseType: !1319, size: 64, offset: 128)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !5046, file: !5042, line: 49, baseType: !1319, size: 64, offset: 192)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1864, file: !78, line: 1533, baseType: !5041, size: 64, offset: 8512)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1864, file: !78, line: 1534, baseType: !504, size: 128, align: 64, offset: 8576)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1864, file: !78, line: 1535, baseType: !3078, size: 256, offset: 8704)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1864, file: !78, line: 1537, baseType: !1982, size: 192, offset: 8960)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1864, file: !78, line: 1542, baseType: !7, size: 32, offset: 9152)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1864, file: !78, line: 1545, baseType: !1987, offset: 9184)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1864, file: !78, line: 1546, baseType: !489, size: 128, offset: 9216)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1864, file: !78, line: 1548, baseType: !1987, offset: 9344)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1864, file: !78, line: 1549, baseType: !489, size: 128, offset: 9344)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1694, file: !78, line: 624, baseType: !2049, size: 64, offset: 256)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1694, file: !78, line: 631, baseType: !517, size: 64, offset: 320)
!5066 = !DIDerivedType(tag: DW_TAG_member, scope: !1694, file: !78, line: 639, baseType: !5067, size: 32, offset: 384)
!5067 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1694, file: !78, line: 639, size: 32, elements: !5068)
!5068 = !{!5069, !5071}
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !5067, file: !78, line: 640, baseType: !5070, size: 32)
!5070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !5067, file: !78, line: 641, baseType: !13, size: 32)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1694, file: !78, line: 643, baseType: !1776, size: 32, offset: 416)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1694, file: !78, line: 644, baseType: !1794, size: 64, offset: 448)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1694, file: !78, line: 645, baseType: !1797, size: 128, offset: 512)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1694, file: !78, line: 646, baseType: !1797, size: 128, offset: 640)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1694, file: !78, line: 647, baseType: !1797, size: 128, offset: 768)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1694, file: !78, line: 648, baseType: !1987, offset: 896)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1694, file: !78, line: 649, baseType: !611, size: 16, offset: 896)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1694, file: !78, line: 650, baseType: !1116, size: 8, offset: 912)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1694, file: !78, line: 651, baseType: !1116, size: 8, offset: 920)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1694, file: !78, line: 652, baseType: !4834, size: 64, offset: 960)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1694, file: !78, line: 659, baseType: !517, size: 64, offset: 1024)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1694, file: !78, line: 660, baseType: !2072, size: 256, offset: 1088)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1694, file: !78, line: 662, baseType: !517, size: 64, offset: 1344)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1694, file: !78, line: 663, baseType: !517, size: 64, offset: 1408)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1694, file: !78, line: 665, baseType: !481, size: 128, offset: 1472)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1694, file: !78, line: 666, baseType: !489, size: 128, offset: 1600)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1694, file: !78, line: 675, baseType: !489, size: 128, offset: 1728)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1694, file: !78, line: 676, baseType: !489, size: 128, offset: 1856)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1694, file: !78, line: 677, baseType: !489, size: 128, offset: 1984)
!5091 = !DIDerivedType(tag: DW_TAG_member, scope: !1694, file: !78, line: 678, baseType: !5092, size: 128, offset: 2112)
!5092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1694, file: !78, line: 678, size: 128, elements: !5093)
!5093 = !{!5094, !5095}
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !5092, file: !78, line: 679, baseType: !1898, size: 64)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !5092, file: !78, line: 680, baseType: !504, size: 128, align: 64)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1694, file: !78, line: 682, baseType: !578, size: 64, offset: 2240)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1694, file: !78, line: 683, baseType: !578, size: 64, offset: 2304)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1694, file: !78, line: 684, baseType: !588, size: 32, offset: 2368)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1694, file: !78, line: 685, baseType: !588, size: 32, offset: 2400)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1694, file: !78, line: 686, baseType: !588, size: 32, offset: 2432)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1694, file: !78, line: 688, baseType: !588, size: 32, offset: 2464)
!5102 = !DIDerivedType(tag: DW_TAG_member, scope: !1694, file: !78, line: 690, baseType: !5103, size: 64, offset: 2496)
!5103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1694, file: !78, line: 690, size: 64, elements: !5104)
!5104 = !{!5105, !5310}
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !5103, file: !78, line: 691, baseType: !5106, size: 64)
!5106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5107, size: 64)
!5107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5108)
!5108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !78, line: 1822, size: 2048, elements: !5109)
!5109 = !{!5110, !5111, !5115, !5119, !5123, !5124, !5125, !5129, !5142, !5143, !5150, !5154, !5155, !5159, !5160, !5164, !5169, !5170, !5174, !5178, !5270, !5274, !5275, !5279, !5280, !5284, !5288, !5293, !5297, !5301, !5305, !5309}
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5108, file: !78, line: 1823, baseType: !1301, size: 64)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !5108, file: !78, line: 1824, baseType: !5112, size: 64, offset: 64)
!5112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5113, size: 64)
!5113 = !DISubroutineType(types: !5114)
!5114 = !{!1794, !1634, !1794, !7}
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !5108, file: !78, line: 1825, baseType: !5116, size: 64, offset: 128)
!5116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5117, size: 64)
!5117 = !DISubroutineType(types: !5118)
!5118 = !{!1839, !1634, !676, !1358, !2011}
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !5108, file: !78, line: 1826, baseType: !5120, size: 64, offset: 192)
!5120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5121, size: 64)
!5121 = !DISubroutineType(types: !5122)
!5122 = !{!1839, !1634, !497, !1358, !2011}
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !5108, file: !78, line: 1827, baseType: !2142, size: 64, offset: 256)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !5108, file: !78, line: 1828, baseType: !2142, size: 64, offset: 320)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !5108, file: !78, line: 1829, baseType: !5126, size: 64, offset: 384)
!5126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5127, size: 64)
!5127 = !DISubroutineType(types: !5128)
!5128 = !{!7, !2145, !1093}
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !5108, file: !78, line: 1830, baseType: !5130, size: 64, offset: 448)
!5130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5131, size: 64)
!5131 = !DISubroutineType(types: !5132)
!5132 = !{!7, !1634, !5133}
!5133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5134, size: 64)
!5134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !78, line: 1776, size: 128, elements: !5135)
!5135 = !{!5136, !5141}
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !5134, file: !78, line: 1777, baseType: !5137, size: 64)
!5137 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !78, line: 1773, baseType: !5138)
!5138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5139, size: 64)
!5139 = !DISubroutineType(types: !5140)
!5140 = !{!7, !5133, !497, !7, !1794, !536, !13}
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !5134, file: !78, line: 1778, baseType: !1794, size: 64, offset: 64)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !5108, file: !78, line: 1831, baseType: !5130, size: 64, offset: 512)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !5108, file: !78, line: 1832, baseType: !5144, size: 64, offset: 576)
!5144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5145, size: 64)
!5145 = !DISubroutineType(types: !5146)
!5146 = !{!5147, !1634, !5148}
!5147 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !860, line: 52, baseType: !13)
!5148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5149, size: 64)
!5149 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !78, line: 56, flags: DIFlagFwdDecl)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !5108, file: !78, line: 1833, baseType: !5151, size: 64, offset: 640)
!5151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5152, size: 64)
!5152 = !DISubroutineType(types: !5153)
!5153 = !{!1319, !1634, !13, !517}
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !5108, file: !78, line: 1834, baseType: !5151, size: 64, offset: 704)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !5108, file: !78, line: 1835, baseType: !5156, size: 64, offset: 768)
!5156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5157, size: 64)
!5157 = !DISubroutineType(types: !5158)
!5158 = !{!7, !1634, !2416}
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !5108, file: !78, line: 1836, baseType: !517, size: 64, offset: 832)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5108, file: !78, line: 1837, baseType: !5161, size: 64, offset: 896)
!5161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5162, size: 64)
!5162 = !DISubroutineType(types: !5163)
!5163 = !{!7, !1693, !1634}
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !5108, file: !78, line: 1838, baseType: !5165, size: 64, offset: 960)
!5165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5166, size: 64)
!5166 = !DISubroutineType(types: !5167)
!5167 = !{!7, !1634, !5168}
!5168 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !78, line: 1007, baseType: !622)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5108, file: !78, line: 1839, baseType: !5161, size: 64, offset: 1024)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !5108, file: !78, line: 1840, baseType: !5171, size: 64, offset: 1088)
!5171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5172, size: 64)
!5172 = !DISubroutineType(types: !5173)
!5173 = !{!7, !1634, !1794, !1794, !7}
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !5108, file: !78, line: 1841, baseType: !5175, size: 64, offset: 1152)
!5175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5176, size: 64)
!5176 = !DISubroutineType(types: !5177)
!5177 = !{!7, !7, !1634, !7}
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5108, file: !78, line: 1842, baseType: !5179, size: 64, offset: 1216)
!5179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5180, size: 64)
!5180 = !DISubroutineType(types: !5181)
!5181 = !{!7, !1634, !7, !5182}
!5182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5183, size: 64)
!5183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !78, line: 1062, size: 1664, elements: !5184)
!5184 = !{!5185, !5186, !5187, !5188, !5189, !5190, !5191, !5192, !5193, !5194, !5195, !5196, !5197, !5198, !5199, !5200, !5201, !5202, !5215, !5246}
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !5183, file: !78, line: 1063, baseType: !5182, size: 64)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !5183, file: !78, line: 1064, baseType: !489, size: 128, offset: 64)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !5183, file: !78, line: 1065, baseType: !481, size: 128, offset: 192)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !5183, file: !78, line: 1066, baseType: !489, size: 128, offset: 320)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !5183, file: !78, line: 1069, baseType: !489, size: 128, offset: 448)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !5183, file: !78, line: 1072, baseType: !5168, size: 64, offset: 576)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !5183, file: !78, line: 1073, baseType: !13, size: 32, offset: 640)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !5183, file: !78, line: 1074, baseType: !632, size: 8, offset: 672)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !5183, file: !78, line: 1075, baseType: !13, size: 32, offset: 704)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !5183, file: !78, line: 1076, baseType: !7, size: 32, offset: 736)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !5183, file: !78, line: 1077, baseType: !2206, size: 128, offset: 768)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !5183, file: !78, line: 1078, baseType: !1634, size: 64, offset: 896)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !5183, file: !78, line: 1079, baseType: !1794, size: 64, offset: 960)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !5183, file: !78, line: 1080, baseType: !1794, size: 64, offset: 1024)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !5183, file: !78, line: 1082, baseType: !2225, size: 64, offset: 1088)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !5183, file: !78, line: 1084, baseType: !517, size: 64, offset: 1152)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !5183, file: !78, line: 1085, baseType: !517, size: 64, offset: 1216)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !5183, file: !78, line: 1087, baseType: !5203, size: 64, offset: 1280)
!5203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5204, size: 64)
!5204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5205)
!5205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !78, line: 1011, size: 128, elements: !5206)
!5206 = !{!5207, !5211}
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !5205, file: !78, line: 1012, baseType: !5208, size: 64)
!5208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5209, size: 64)
!5209 = !DISubroutineType(types: !5210)
!5210 = !{null, !5182, !5182}
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !5205, file: !78, line: 1013, baseType: !5212, size: 64, offset: 64)
!5212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5213, size: 64)
!5213 = !DISubroutineType(types: !5214)
!5214 = !{null, !5182}
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !5183, file: !78, line: 1088, baseType: !5216, size: 64, offset: 1344)
!5216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5217, size: 64)
!5217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5218)
!5218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !78, line: 1016, size: 512, elements: !5219)
!5219 = !{!5220, !5224, !5228, !5229, !5233, !5237, !5241, !5245}
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !5218, file: !78, line: 1017, baseType: !5221, size: 64)
!5221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5222, size: 64)
!5222 = !DISubroutineType(types: !5223)
!5223 = !{!5168, !5168}
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !5218, file: !78, line: 1018, baseType: !5225, size: 64, offset: 64)
!5225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5226, size: 64)
!5226 = !DISubroutineType(types: !5227)
!5227 = !{null, !5168}
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !5218, file: !78, line: 1019, baseType: !5212, size: 64, offset: 128)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !5218, file: !78, line: 1020, baseType: !5230, size: 64, offset: 192)
!5230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5231, size: 64)
!5231 = !DISubroutineType(types: !5232)
!5232 = !{!7, !5182, !7}
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !5218, file: !78, line: 1021, baseType: !5234, size: 64, offset: 256)
!5234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5235, size: 64)
!5235 = !DISubroutineType(types: !5236)
!5236 = !{!1093, !5182}
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !5218, file: !78, line: 1022, baseType: !5238, size: 64, offset: 320)
!5238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5239, size: 64)
!5239 = !DISubroutineType(types: !5240)
!5240 = !{!7, !5182, !7, !492}
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !5218, file: !78, line: 1023, baseType: !5242, size: 64, offset: 384)
!5242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5243, size: 64)
!5243 = !DISubroutineType(types: !5244)
!5244 = !{null, !5182, !2119}
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !5218, file: !78, line: 1024, baseType: !5234, size: 64, offset: 448)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !5183, file: !78, line: 1097, baseType: !5247, size: 256, offset: 1408)
!5247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5183, file: !78, line: 1089, size: 256, elements: !5248)
!5248 = !{!5249, !5258, !5264}
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !5247, file: !78, line: 1090, baseType: !5250, size: 256)
!5250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !5251, line: 10, size: 256, elements: !5252)
!5251 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!5252 = !{!5253, !5254, !5257}
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5250, file: !5251, line: 11, baseType: !1308, size: 32)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5250, file: !5251, line: 12, baseType: !5255, size: 64, offset: 64)
!5255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5256, size: 64)
!5256 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !5251, line: 5, flags: DIFlagFwdDecl)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5250, file: !5251, line: 13, baseType: !489, size: 128, offset: 128)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !5247, file: !78, line: 1091, baseType: !5259, size: 64)
!5259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !5251, line: 17, size: 64, elements: !5260)
!5260 = !{!5261}
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5259, file: !5251, line: 18, baseType: !5262, size: 64)
!5262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5263, size: 64)
!5263 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !5251, line: 16, flags: DIFlagFwdDecl)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !5247, file: !78, line: 1096, baseType: !5265, size: 192)
!5265 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5247, file: !78, line: 1092, size: 192, elements: !5266)
!5266 = !{!5267, !5268, !5269}
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !5265, file: !78, line: 1093, baseType: !489, size: 128)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5265, file: !78, line: 1094, baseType: !7, size: 32, offset: 128)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !5265, file: !78, line: 1095, baseType: !13, size: 32, offset: 160)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !5108, file: !78, line: 1843, baseType: !5271, size: 64, offset: 1280)
!5271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5272, size: 64)
!5272 = !DISubroutineType(types: !5273)
!5273 = !{!1839, !1634, !2036, !7, !1358, !2011, !7}
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !5108, file: !78, line: 1844, baseType: !2536, size: 64, offset: 1344)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !5108, file: !78, line: 1845, baseType: !5276, size: 64, offset: 1408)
!5276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5277, size: 64)
!5277 = !DISubroutineType(types: !5278)
!5278 = !{!7, !7}
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !5108, file: !78, line: 1846, baseType: !5179, size: 64, offset: 1472)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !5108, file: !78, line: 1847, baseType: !5281, size: 64, offset: 1536)
!5281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5282, size: 64)
!5282 = !DISubroutineType(types: !5283)
!5283 = !{!1839, !2200, !1634, !2011, !1358, !13}
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !5108, file: !78, line: 1848, baseType: !5285, size: 64, offset: 1600)
!5285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5286, size: 64)
!5286 = !DISubroutineType(types: !5287)
!5287 = !{!1839, !1634, !2011, !2200, !1358, !13}
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !5108, file: !78, line: 1849, baseType: !5289, size: 64, offset: 1664)
!5289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5290, size: 64)
!5290 = !DISubroutineType(types: !5291)
!5291 = !{!7, !1634, !1319, !5292, !2119}
!5292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5182, size: 64)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !5108, file: !78, line: 1850, baseType: !5294, size: 64, offset: 1728)
!5294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5295, size: 64)
!5295 = !DISubroutineType(types: !5296)
!5296 = !{!1319, !1634, !7, !1794, !1794}
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !5108, file: !78, line: 1852, baseType: !5298, size: 64, offset: 1792)
!5298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5299, size: 64)
!5299 = !DISubroutineType(types: !5300)
!5300 = !{null, !1970, !1634}
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !5108, file: !78, line: 1856, baseType: !5302, size: 64, offset: 1856)
!5302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5303, size: 64)
!5303 = !DISubroutineType(types: !5304)
!5304 = !{!1839, !1634, !1794, !1634, !1794, !1358, !13}
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !5108, file: !78, line: 1858, baseType: !5306, size: 64, offset: 1920)
!5306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5307, size: 64)
!5307 = !DISubroutineType(types: !5308)
!5308 = !{!1794, !1634, !1794, !1634, !1794, !1794, !13}
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !5108, file: !78, line: 1861, baseType: !5171, size: 64, offset: 1984)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !5103, file: !78, line: 692, baseType: !1924, size: 64)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1694, file: !78, line: 694, baseType: !5312, size: 64, offset: 2560)
!5312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5313, size: 64)
!5313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !78, line: 1100, size: 384, elements: !5314)
!5314 = !{!5315, !5316, !5317, !5318}
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !5313, file: !78, line: 1101, baseType: !1987)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !5313, file: !78, line: 1102, baseType: !489, size: 128)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !5313, file: !78, line: 1103, baseType: !489, size: 128, offset: 128)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !5313, file: !78, line: 1104, baseType: !489, size: 128, offset: 256)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1694, file: !78, line: 695, baseType: !2050, size: 1216, align: 64, offset: 2624)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1694, file: !78, line: 696, baseType: !489, size: 128, offset: 3840)
!5321 = !DIDerivedType(tag: DW_TAG_member, scope: !1694, file: !78, line: 697, baseType: !5322, size: 64, offset: 3968)
!5322 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1694, file: !78, line: 697, size: 64, elements: !5323)
!5323 = !{!5324, !5325, !5326, !5329, !5330}
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !5322, file: !78, line: 698, baseType: !2200, size: 64)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !5322, file: !78, line: 699, baseType: !4859, size: 64)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !5322, file: !78, line: 700, baseType: !5327, size: 64)
!5327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5328, size: 64)
!5328 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !78, line: 700, flags: DIFlagFwdDecl)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !5322, file: !78, line: 701, baseType: !676, size: 64)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !5322, file: !78, line: 702, baseType: !13, size: 32)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1694, file: !78, line: 705, baseType: !650, size: 32, offset: 4032)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1694, file: !78, line: 708, baseType: !650, size: 32, offset: 4064)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1694, file: !78, line: 709, baseType: !4941, size: 64, offset: 4096)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1694, file: !78, line: 720, baseType: !622, size: 64, offset: 4160)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1657, file: !1654, line: 98, baseType: !1351, size: 256, offset: 448)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1657, file: !1654, line: 101, baseType: !5337, size: 32, offset: 704)
!5337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !5338, line: 25, size: 32, elements: !5339)
!5338 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!5339 = !{!5340}
!5340 = !DIDerivedType(tag: DW_TAG_member, scope: !5337, file: !5338, line: 26, baseType: !5341, size: 32)
!5341 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5337, file: !5338, line: 26, size: 32, elements: !5342)
!5342 = !{!5343}
!5343 = !DIDerivedType(tag: DW_TAG_member, scope: !5341, file: !5338, line: 30, baseType: !5344, size: 32)
!5344 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5341, file: !5338, line: 30, size: 32, elements: !5345)
!5345 = !{!5346, !5347}
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5344, file: !5338, line: 31, baseType: !1987)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5344, file: !5338, line: 32, baseType: !7, size: 32)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1657, file: !1654, line: 102, baseType: !4957, size: 64, offset: 768)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1657, file: !1654, line: 103, baseType: !1863, size: 64, offset: 832)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1657, file: !1654, line: 104, baseType: !517, size: 64, offset: 896)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1657, file: !1654, line: 105, baseType: !622, size: 64, offset: 960)
!5352 = !DIDerivedType(tag: DW_TAG_member, scope: !1657, file: !1654, line: 107, baseType: !5353, size: 128, offset: 1024)
!5353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1657, file: !1654, line: 107, size: 128, elements: !5354)
!5354 = !{!5355, !5356}
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !5353, file: !1654, line: 108, baseType: !489, size: 128)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !5353, file: !1654, line: 109, baseType: !5357, size: 64)
!5357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 64)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1657, file: !1654, line: 111, baseType: !489, size: 128, offset: 1152)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1657, file: !1654, line: 112, baseType: !489, size: 128, offset: 1280)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1657, file: !1654, line: 120, baseType: !5361, size: 128, offset: 1408)
!5361 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1657, file: !1654, line: 116, size: 128, elements: !5362)
!5362 = !{!5363, !5364, !5365}
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !5361, file: !1654, line: 117, baseType: !481, size: 128)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !5361, file: !1654, line: 118, baseType: !1671, size: 128)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !5361, file: !1654, line: 119, baseType: !504, size: 128, align: 64)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1635, file: !78, line: 922, baseType: !1693, size: 64, offset: 256)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1635, file: !78, line: 923, baseType: !5106, size: 64, offset: 320)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1635, file: !78, line: 929, baseType: !1987, offset: 384)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1635, file: !78, line: 930, baseType: !77, size: 32, offset: 384)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1635, file: !78, line: 931, baseType: !576, size: 64, offset: 448)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1635, file: !78, line: 932, baseType: !13, size: 32, offset: 512)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1635, file: !78, line: 933, baseType: !4953, size: 32, offset: 544)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1635, file: !78, line: 934, baseType: !1982, size: 192, offset: 576)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1635, file: !78, line: 935, baseType: !1794, size: 64, offset: 768)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1635, file: !78, line: 936, baseType: !5376, size: 192, offset: 832)
!5376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !78, line: 885, size: 192, elements: !5377)
!5377 = !{!5378, !5379, !5380, !5381, !5382, !5383}
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5376, file: !78, line: 886, baseType: !2229)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !5376, file: !78, line: 887, baseType: !2886, size: 64)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !5376, file: !78, line: 888, baseType: !86, size: 32, offset: 64)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !5376, file: !78, line: 889, baseType: !1700, size: 32, offset: 96)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !5376, file: !78, line: 889, baseType: !1700, size: 32, offset: 128)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !5376, file: !78, line: 890, baseType: !7, size: 32, offset: 160)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1635, file: !78, line: 937, baseType: !3239, size: 64, offset: 1024)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1635, file: !78, line: 938, baseType: !5386, size: 256, offset: 1088)
!5386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !78, line: 896, size: 256, elements: !5387)
!5387 = !{!5388, !5389, !5390, !5391, !5392, !5393}
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5386, file: !78, line: 897, baseType: !517, size: 64)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5386, file: !78, line: 898, baseType: !13, size: 32, offset: 64)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !5386, file: !78, line: 899, baseType: !13, size: 32, offset: 96)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5386, file: !78, line: 902, baseType: !13, size: 32, offset: 128)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !5386, file: !78, line: 903, baseType: !13, size: 32, offset: 160)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !5386, file: !78, line: 904, baseType: !1794, size: 64, offset: 192)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1635, file: !78, line: 940, baseType: !536, size: 64, offset: 1344)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1635, file: !78, line: 945, baseType: !622, size: 64, offset: 1408)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1635, file: !78, line: 949, baseType: !489, size: 128, offset: 1472)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1635, file: !78, line: 950, baseType: !489, size: 128, offset: 1600)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1635, file: !78, line: 952, baseType: !2049, size: 64, offset: 1728)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1635, file: !78, line: 953, baseType: !2342, size: 32, offset: 1792)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1635, file: !78, line: 954, baseType: !2342, size: 32, offset: 1824)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !1424, file: !95, line: 59, baseType: !5402, size: 64, offset: 192)
!5402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5403, size: 64)
!5403 = !DISubroutineType(types: !5404)
!5404 = !{null, !1629}
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !1424, file: !95, line: 60, baseType: !5406, size: 64, offset: 256)
!5406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5407, size: 64)
!5407 = !DISubroutineType(types: !5408)
!5408 = !{!7, !1629, !622, !622}
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !1424, file: !95, line: 61, baseType: !5402, size: 64, offset: 320)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !1424, file: !95, line: 62, baseType: !5411, size: 64, offset: 384)
!5411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5412, size: 64)
!5412 = !DISubroutineType(types: !5413)
!5413 = !{!622, !1629, !622}
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !1424, file: !95, line: 63, baseType: !5415, size: 64, offset: 448)
!5415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5416, size: 64)
!5416 = !DISubroutineType(types: !5417)
!5417 = !{!7, !1629, !5418, !1430}
!5418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5419, size: 64)
!5419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1431)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !1424, file: !95, line: 65, baseType: !5415, size: 64, offset: 512)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !1424, file: !95, line: 68, baseType: !5415, size: 64, offset: 576)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !1424, file: !95, line: 70, baseType: !5415, size: 64, offset: 640)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !1424, file: !95, line: 74, baseType: !5411, size: 64, offset: 704)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !1424, file: !95, line: 75, baseType: !5425, size: 64, offset: 768)
!5425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5426, size: 64)
!5426 = !DISubroutineType(types: !5427)
!5427 = !{!7, !1629, !622, !622, !536}
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !1424, file: !95, line: 76, baseType: !5429, size: 64, offset: 832)
!5429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5430, size: 64)
!5430 = !DISubroutineType(types: !5431)
!5431 = !{!7, !1629, !622}
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !1424, file: !95, line: 77, baseType: !5433, size: 64, offset: 896)
!5433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5434, size: 64)
!5434 = !DISubroutineType(types: !5435)
!5435 = !{!7, !1629, !622, !536}
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !1424, file: !95, line: 78, baseType: !5429, size: 64, offset: 960)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !1424, file: !95, line: 79, baseType: !5429, size: 64, offset: 1024)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !1424, file: !95, line: 82, baseType: !5439, size: 64, offset: 1088)
!5439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5440, size: 64)
!5440 = !DISubroutineType(types: !5441)
!5441 = !{!622, !1629, !1634, !7}
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !1424, file: !95, line: 84, baseType: !1733, size: 64, offset: 1152)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !1424, file: !95, line: 85, baseType: !5444, size: 64, offset: 1216)
!5444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5445, size: 64)
!5445 = !DISubroutineType(types: !5446)
!5446 = !{!7, !1629, !5447}
!5447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5448, size: 64)
!5448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !126, line: 65, size: 64, elements: !5449)
!5449 = !{!5450, !5451, !5452, !5453, !5454}
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !5448, file: !126, line: 66, baseType: !631, size: 8)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !5448, file: !126, line: 67, baseType: !631, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !5448, file: !126, line: 68, baseType: !631, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !5448, file: !126, line: 69, baseType: !640, size: 16, offset: 16)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !5448, file: !126, line: 70, baseType: !629, size: 32, offset: 32)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !1424, file: !95, line: 86, baseType: !5456, size: 64, offset: 1280)
!5456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5457, size: 64)
!5457 = !DISubroutineType(types: !5458)
!5458 = !{!1308, !622}
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !1424, file: !95, line: 87, baseType: !5460, size: 64, offset: 1344)
!5460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5461, size: 64)
!5461 = !DISubroutineType(types: !5462)
!5462 = !{null, !1629, !622, !1970}
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !1424, file: !95, line: 89, baseType: !5464, size: 64, offset: 1408)
!5464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5465, size: 64)
!5465 = !DISubroutineType(types: !5466)
!5466 = !{!7, !5467, !5469, !5472, !5472}
!5467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5468, size: 64)
!5468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1419)
!5469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5470, size: 64)
!5470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5471)
!5471 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !95, line: 32, flags: DIFlagFwdDecl)
!5472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5473, size: 64)
!5473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5474)
!5474 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !95, line: 33, flags: DIFlagFwdDecl)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !1424, file: !95, line: 95, baseType: !5476, size: 64, offset: 1472)
!5476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5477, size: 64)
!5477 = !DISubroutineType(types: !5478)
!5478 = !{!7, !1629, !5479}
!5479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5480, size: 64)
!5480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !95, line: 757, size: 4928, elements: !5481)
!5481 = !{!5482, !5483, !5484, !5485, !5486, !5487, !5488, !5489, !5490, !5491, !5492, !5493, !5494, !5495, !5503, !5504, !5505, !5548, !5549, !5550, !5551, !5552, !5553, !5554, !5555, !5556, !5557, !5558, !5559, !5560, !5562, !5563, !5582, !5583, !5584, !5593, !5595, !5596, !5597, !5598, !5599, !5601, !5602, !5617, !5619, !5625, !5631, !5639, !5640, !5641, !5642, !5643, !5644, !5652, !5659}
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5480, file: !95, line: 758, baseType: !578, size: 64)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !5480, file: !95, line: 759, baseType: !1308, size: 32, offset: 64)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !5480, file: !95, line: 760, baseType: !1308, size: 32, offset: 96)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !5480, file: !95, line: 761, baseType: !1308, size: 32, offset: 128)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !5480, file: !95, line: 762, baseType: !1308, size: 32, offset: 160)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !5480, file: !95, line: 763, baseType: !1308, size: 32, offset: 192)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5480, file: !95, line: 764, baseType: !1308, size: 32, offset: 224)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !5480, file: !95, line: 765, baseType: !1308, size: 32, offset: 256)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !5480, file: !95, line: 766, baseType: !1308, size: 32, offset: 288)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !5480, file: !95, line: 767, baseType: !1308, size: 32, offset: 320)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !5480, file: !95, line: 768, baseType: !1308, size: 32, offset: 352)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !5480, file: !95, line: 769, baseType: !1308, size: 32, offset: 384)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !5480, file: !95, line: 770, baseType: !1308, size: 32, offset: 416)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !5480, file: !95, line: 771, baseType: !5496, size: 64, offset: 448)
!5496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5497, size: 64)
!5497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5498)
!5498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !95, line: 751, size: 96, elements: !5499)
!5499 = !{!5500, !5501, !5502}
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5498, file: !95, line: 752, baseType: !1308, size: 32)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !5498, file: !95, line: 753, baseType: !94, size: 32, offset: 32)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !5498, file: !95, line: 754, baseType: !1308, size: 32, offset: 64)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !5480, file: !95, line: 772, baseType: !1982, size: 192, offset: 512)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !5480, file: !95, line: 773, baseType: !1407, size: 64, offset: 704)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !5480, file: !95, line: 774, baseType: !5506, size: 64, offset: 768)
!5506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5507, size: 64)
!5507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !95, line: 586, size: 2944, elements: !5508)
!5508 = !{!5509, !5510, !5511, !5512, !5513, !5525, !5526, !5528, !5529, !5530, !5531}
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !5507, file: !95, line: 588, baseType: !481, size: 128)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5507, file: !95, line: 590, baseType: !1982, size: 192, offset: 128)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5507, file: !95, line: 591, baseType: !903, size: 32, offset: 320)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5507, file: !95, line: 592, baseType: !536, size: 64, offset: 384)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5507, file: !95, line: 597, baseType: !5514, size: 256, offset: 448)
!5514 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5507, file: !95, line: 593, size: 256, elements: !5515)
!5515 = !{!5516, !5523, !5524}
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !5514, file: !95, line: 594, baseType: !5517, size: 112)
!5517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !95, line: 509, size: 112, elements: !5518)
!5518 = !{!5519, !5520, !5521}
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !5517, file: !95, line: 510, baseType: !1116, size: 8)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !5517, file: !95, line: 511, baseType: !1116, size: 8, offset: 8)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !5517, file: !95, line: 512, baseType: !5522, size: 96, offset: 16)
!5522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 96, elements: !4482)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5514, file: !95, line: 595, baseType: !622, size: 64, offset: 128)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !5514, file: !95, line: 596, baseType: !1093, size: 8, offset: 192)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !5507, file: !95, line: 602, baseType: !1407, size: 64, offset: 704)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !5507, file: !95, line: 604, baseType: !5527, size: 192, offset: 768)
!5527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1898, size: 192, elements: !1909)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !5507, file: !95, line: 606, baseType: !3730, size: 96, offset: 960)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !5507, file: !95, line: 608, baseType: !622, size: 64, offset: 1088)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !5507, file: !95, line: 609, baseType: !536, size: 64, offset: 1152)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5507, file: !95, line: 610, baseType: !5532, size: 1728, offset: 1216)
!5532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !95, line: 569, size: 1728, elements: !5533)
!5533 = !{!5534, !5535, !5536, !5540, !5541, !5547}
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5532, file: !95, line: 570, baseType: !517, size: 64)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5532, file: !95, line: 571, baseType: !517, size: 64, offset: 64)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5532, file: !95, line: 572, baseType: !5537, size: 1024, offset: 128)
!5537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 1024, elements: !5538)
!5538 = !{!5539}
!5539 = !DISubrange(count: 128)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !5532, file: !95, line: 573, baseType: !489, size: 128, offset: 1152)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !5532, file: !95, line: 574, baseType: !5542, size: 384, offset: 1280)
!5542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !5543, line: 40, size: 384, elements: !5544)
!5543 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!5544 = !{!5545}
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5542, file: !5543, line: 41, baseType: !5546, size: 384)
!5546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !774, size: 384, elements: !3261)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5532, file: !95, line: 575, baseType: !1093, size: 8, offset: 1664)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !5480, file: !95, line: 775, baseType: !125, size: 32, offset: 832)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !5480, file: !95, line: 776, baseType: !159, size: 32, offset: 864)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !5480, file: !95, line: 777, baseType: !1093, size: 8, offset: 896)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !5480, file: !95, line: 778, baseType: !1093, size: 8, offset: 904)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !5480, file: !95, line: 779, baseType: !1093, size: 8, offset: 912)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !5480, file: !95, line: 780, baseType: !1093, size: 8, offset: 920)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !5480, file: !95, line: 781, baseType: !1093, size: 8, offset: 928)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !5480, file: !95, line: 782, baseType: !1093, size: 8, offset: 936)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !5480, file: !95, line: 783, baseType: !200, size: 32, offset: 960)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !5480, file: !95, line: 784, baseType: !481, size: 128, offset: 1024)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !5480, file: !95, line: 786, baseType: !5472, size: 64, offset: 1152)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !5480, file: !95, line: 788, baseType: !497, size: 64, offset: 1216)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5480, file: !95, line: 789, baseType: !5561, size: 64, offset: 1280)
!5561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !5480, file: !95, line: 790, baseType: !622, size: 64, offset: 1344)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !5480, file: !95, line: 791, baseType: !5564, size: 64, offset: 1408)
!5564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5565, size: 64)
!5565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !95, line: 734, size: 384, elements: !5566)
!5566 = !{!5567, !5568, !5569, !5570, !5578, !5579, !5580, !5581}
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !5565, file: !95, line: 735, baseType: !622, size: 64)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !5565, file: !95, line: 736, baseType: !622, size: 64, offset: 64)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !5565, file: !95, line: 737, baseType: !622, size: 64, offset: 128)
!5570 = !DIDerivedType(tag: DW_TAG_member, scope: !5565, file: !95, line: 738, baseType: !5571, size: 128, offset: 192)
!5571 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5565, file: !95, line: 738, size: 128, elements: !5572)
!5572 = !{!5573}
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !5571, file: !95, line: 742, baseType: !5574, size: 128)
!5574 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5571, file: !95, line: 739, size: 128, elements: !5575)
!5575 = !{!5576, !5577}
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !5574, file: !95, line: 740, baseType: !1629, size: 64)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5574, file: !95, line: 741, baseType: !1308, size: 32, offset: 64)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !5565, file: !95, line: 744, baseType: !1093, size: 8, offset: 320)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !5565, file: !95, line: 745, baseType: !1116, size: 8, offset: 328)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !5565, file: !95, line: 746, baseType: !916, size: 16, offset: 336)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !5565, file: !95, line: 747, baseType: !1308, size: 32, offset: 352)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !5480, file: !95, line: 792, baseType: !1308, size: 32, offset: 1472)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5480, file: !95, line: 793, baseType: !5532, size: 1728, offset: 1536)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5480, file: !95, line: 794, baseType: !5585, size: 64, offset: 3264)
!5585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5586, size: 64)
!5586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5587)
!5587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !95, line: 432, size: 64, elements: !5588)
!5588 = !{!5589}
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !5587, file: !95, line: 433, baseType: !5590, size: 64)
!5590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5591, size: 64)
!5591 = !DISubroutineType(types: !5592)
!5592 = !{!7, !1407, !5418, !1430}
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !5480, file: !95, line: 795, baseType: !5594, size: 64, offset: 3328)
!5594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !5480, file: !95, line: 796, baseType: !1982, size: 192, offset: 3392)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5480, file: !95, line: 797, baseType: !1407, size: 64, offset: 3584)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5480, file: !95, line: 798, baseType: !2270, size: 64, offset: 3648)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !5480, file: !95, line: 799, baseType: !536, size: 64, offset: 3712)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !5480, file: !95, line: 800, baseType: !5600, size: 128, offset: 3776)
!5600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1629, size: 128, elements: !3261)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5480, file: !95, line: 801, baseType: !472, size: 128, offset: 3904)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !5480, file: !95, line: 805, baseType: !5603, size: 64, offset: 4032)
!5603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5604, size: 64)
!5604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !95, line: 478, size: 576, elements: !5605)
!5605 = !{!5606, !5607, !5608, !5611, !5612, !5613, !5614, !5615, !5616}
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5604, file: !95, line: 479, baseType: !1407, size: 64)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !5604, file: !95, line: 480, baseType: !495, size: 64, offset: 64)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !5604, file: !95, line: 481, baseType: !5609, size: 64, offset: 128)
!5609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5610, size: 64)
!5610 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !95, line: 209, flags: DIFlagFwdDecl)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !5604, file: !95, line: 482, baseType: !622, size: 64, offset: 192)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !5604, file: !95, line: 483, baseType: !489, size: 128, offset: 256)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !5604, file: !95, line: 484, baseType: !1093, size: 8, offset: 384)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !5604, file: !95, line: 485, baseType: !1093, size: 8, offset: 392)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !5604, file: !95, line: 486, baseType: !622, size: 64, offset: 448)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !5604, file: !95, line: 487, baseType: !1308, size: 32, offset: 512)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !5480, file: !95, line: 806, baseType: !5618, size: 64, offset: 4096)
!5618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5471, size: 64)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !5480, file: !95, line: 807, baseType: !5620, size: 64, offset: 4160)
!5620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5621, size: 64)
!5621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !126, line: 4963, size: 64, elements: !5622)
!5622 = !{!5623, !5624}
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5621, file: !126, line: 4964, baseType: !650, size: 32)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !5621, file: !126, line: 4965, baseType: !650, size: 32, offset: 32)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !5480, file: !95, line: 808, baseType: !5626, size: 64, offset: 4224)
!5626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5627, size: 64)
!5627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !95, line: 724, size: 32, elements: !5628)
!5628 = !{!5629, !5630}
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !5627, file: !95, line: 725, baseType: !916, size: 16)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !5627, file: !95, line: 726, baseType: !1093, size: 8, offset: 16)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !5480, file: !95, line: 815, baseType: !5632, size: 64, offset: 4288)
!5632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5633, size: 64)
!5633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !126, line: 4971, size: 128, elements: !5634)
!5634 = !{!5635, !5636, !5637, !5638}
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5633, file: !126, line: 4972, baseType: !650, size: 32)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !5633, file: !126, line: 4973, baseType: !650, size: 32, offset: 32)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !5633, file: !126, line: 4974, baseType: !650, size: 32, offset: 64)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !5633, file: !126, line: 4975, baseType: !650, size: 32, offset: 96)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !5480, file: !95, line: 823, baseType: !2119, size: 64, offset: 4352)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !5480, file: !95, line: 824, baseType: !1308, size: 32, offset: 4416)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !5480, file: !95, line: 825, baseType: !1308, size: 32, offset: 4448)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !5480, file: !95, line: 830, baseType: !1308, size: 32, offset: 4480)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !5480, file: !95, line: 831, baseType: !1308, size: 32, offset: 4512)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !5480, file: !95, line: 832, baseType: !5645, size: 64, offset: 4544)
!5645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5646, size: 64)
!5646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !5647, line: 17, size: 96, elements: !5648)
!5647 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!5648 = !{!5649, !5650, !5651}
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !5646, file: !5647, line: 18, baseType: !7, size: 32)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !5646, file: !5647, line: 18, baseType: !7, size: 32, offset: 32)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5646, file: !5647, line: 18, baseType: !7, size: 32, offset: 64)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5480, file: !95, line: 833, baseType: !5653, size: 64, offset: 4608)
!5653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5654, size: 64)
!5654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !95, line: 503, size: 128, align: 128, elements: !5655)
!5655 = !{!5656, !5657, !5658}
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !5654, file: !95, line: 504, baseType: !536, size: 64)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !5654, file: !95, line: 505, baseType: !536, size: 64, offset: 64)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !5654, file: !95, line: 506, baseType: !3403, offset: 128)
!5659 = !DIDerivedType(tag: DW_TAG_member, scope: !5480, file: !95, line: 834, baseType: !5660, size: 256, offset: 4672)
!5660 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5480, file: !95, line: 834, size: 256, elements: !5661)
!5661 = !{!5662, !5663}
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5660, file: !95, line: 835, baseType: !3078, size: 256)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5660, file: !95, line: 836, baseType: !504, size: 128, align: 64)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !1424, file: !95, line: 96, baseType: !5665, size: 64, offset: 1536)
!5665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5666, size: 64)
!5666 = !DISubroutineType(types: !5667)
!5667 = !{null, !1629, !5479}
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !1424, file: !95, line: 97, baseType: !5669, size: 64, offset: 1600)
!5669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5670, size: 64)
!5670 = !DISubroutineType(types: !5671)
!5671 = !{null, !1629, !1308, !1407, !1407}
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !1424, file: !95, line: 101, baseType: !5673, size: 64, offset: 1664)
!5673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5674, size: 64)
!5674 = !DISubroutineType(types: !5675)
!5675 = !{!7, !5467, !5676, !1308}
!5676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !1424, file: !95, line: 103, baseType: !5678, size: 64, offset: 1728)
!5678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5679, size: 64)
!5679 = !DISubroutineType(types: !5680)
!5680 = !{!7, !5467, !536, !2831}
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !1424, file: !95, line: 105, baseType: !5682, size: 64, offset: 1792)
!5682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5683, size: 64)
!5683 = !DISubroutineType(types: !5684)
!5684 = !{!7, !1629, !2416}
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !1424, file: !95, line: 106, baseType: !5686, size: 64, offset: 1856)
!5686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5687, size: 64)
!5687 = !DISubroutineType(types: !5688)
!5688 = !{!5147, !1629, !1634, !5148}
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !1424, file: !95, line: 110, baseType: !5690, size: 64, offset: 1920)
!5690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5691, size: 64)
!5691 = !DISubroutineType(types: !5692)
!5692 = !{!7, !5693, !622, !1308}
!5693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5694, size: 64)
!5694 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !95, line: 38, flags: DIFlagFwdDecl)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !1424, file: !95, line: 112, baseType: !5696, size: 64, offset: 1984)
!5696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5697, size: 64)
!5697 = !DISubroutineType(types: !5698)
!5698 = !{null, !5693, !622, !1308}
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !1424, file: !95, line: 114, baseType: !5700, size: 64, offset: 2048)
!5700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5701, size: 64)
!5701 = !DISubroutineType(types: !5702)
!5702 = !{!5703, !622}
!5703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5704, size: 64)
!5704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5705, size: 64)
!5705 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !95, line: 37, flags: DIFlagFwdDecl)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !1424, file: !95, line: 125, baseType: !5707, size: 64, offset: 2112)
!5707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5708, size: 64)
!5708 = !DISubroutineType(types: !5709)
!5709 = !{!1093, !5467, !5467}
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !1424, file: !95, line: 129, baseType: !5711, size: 64, offset: 2176)
!5711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !497)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !1424, file: !95, line: 130, baseType: !1321, size: 64, offset: 2240)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !1424, file: !95, line: 133, baseType: !5714, size: 64, offset: 2304)
!5714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5715, size: 64)
!5715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5716)
!5716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !95, line: 46, size: 256, elements: !5717)
!5717 = !{!5718, !5719, !5726, !5728}
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !5716, file: !95, line: 47, baseType: !2003, size: 64)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !5716, file: !95, line: 48, baseType: !5720, size: 64, offset: 64)
!5720 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !95, line: 43, baseType: !5721)
!5721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5722, size: 64)
!5722 = !DISubroutineType(types: !5723)
!5723 = !{!7, !622, !5724}
!5724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5725, size: 64)
!5725 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !95, line: 36, flags: DIFlagFwdDecl)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !5716, file: !95, line: 49, baseType: !5727, size: 64, offset: 128)
!5727 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !95, line: 45, baseType: !1733)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !5716, file: !95, line: 50, baseType: !1308, size: 32, offset: 192)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !1419, file: !95, line: 146, baseType: !1629, size: 64, offset: 64)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1419, file: !95, line: 150, baseType: !207, size: 32, offset: 128)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1419, file: !95, line: 151, baseType: !1308, size: 32, offset: 160)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1419, file: !95, line: 152, baseType: !1308, size: 32, offset: 192)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1419, file: !95, line: 153, baseType: !1308, size: 32, offset: 224)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1419, file: !95, line: 154, baseType: !1308, size: 32, offset: 256)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !1419, file: !95, line: 155, baseType: !7, size: 32, offset: 288)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1419, file: !95, line: 156, baseType: !1308, size: 32, offset: 320)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1419, file: !95, line: 157, baseType: !7, size: 32, offset: 352)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1419, file: !95, line: 158, baseType: !1308, size: 32, offset: 384)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1419, file: !95, line: 159, baseType: !1308, size: 32, offset: 416)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1419, file: !95, line: 160, baseType: !5618, size: 64, offset: 448)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !1419, file: !95, line: 161, baseType: !5742, size: 128, offset: 512)
!5742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !95, line: 136, size: 128, elements: !5743)
!5743 = !{!5744, !5745}
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5742, file: !95, line: 137, baseType: !1308, size: 32)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5742, file: !95, line: 138, baseType: !2270, size: 64, offset: 64)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1419, file: !95, line: 162, baseType: !472, size: 128, offset: 640)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1419, file: !95, line: 163, baseType: !1308, size: 32, offset: 768)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !1419, file: !95, line: 164, baseType: !1093, size: 8, offset: 800)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1419, file: !95, line: 165, baseType: !1093, size: 8, offset: 808)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1419, file: !95, line: 171, baseType: !578, size: 64, align: 512, offset: 1024)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !1419, file: !95, line: 172, baseType: !578, size: 64, offset: 1088)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1419, file: !95, line: 173, baseType: !3078, size: 256, offset: 1152)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !1419, file: !95, line: 174, baseType: !1982, size: 192, offset: 1408)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !1419, file: !95, line: 175, baseType: !536, size: 64, offset: 1600)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !1416, file: !95, line: 224, baseType: !495, size: 64, offset: 2048)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !1416, file: !95, line: 225, baseType: !5757, size: 64, offset: 2112)
!5757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5758, size: 64)
!5758 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5759)
!5759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !95, line: 212, size: 256, elements: !5760)
!5760 = !{!5761, !5765, !5766, !5770}
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !5759, file: !95, line: 213, baseType: !5762, size: 64)
!5762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5763, size: 64)
!5763 = !DISubroutineType(types: !5764)
!5764 = !{!7, !1415, !622, !622}
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !5759, file: !95, line: 215, baseType: !5762, size: 64, offset: 64)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !5759, file: !95, line: 217, baseType: !5767, size: 64, offset: 128)
!5767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5768, size: 64)
!5768 = !DISubroutineType(types: !5769)
!5769 = !{!7, !1415, !622, !622, !536}
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !5759, file: !95, line: 219, baseType: !5771, size: 64, offset: 192)
!5771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5772, size: 64)
!5772 = !DISubroutineType(types: !5773)
!5773 = !{!7, !1415, !622}
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !1416, file: !95, line: 226, baseType: !622, size: 64, offset: 2176)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !1416, file: !95, line: 227, baseType: !489, size: 128, offset: 2240)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !1400, file: !6, line: 911, baseType: !5777, size: 128)
!5777 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1400, file: !6, line: 908, size: 128, elements: !5778)
!5778 = !{!5779, !5782}
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !5777, file: !6, line: 909, baseType: !5780, size: 64)
!5780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5781, size: 64)
!5781 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !6, line: 909, flags: DIFlagFwdDecl)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !5777, file: !6, line: 910, baseType: !916, size: 16, offset: 64)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !739, file: !6, line: 1481, baseType: !5784, size: 64, offset: 4096)
!5784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5785, size: 64)
!5785 = !DISubroutineType(types: !5786)
!5786 = !{!7, !495, !7, !5787, !1308}
!5787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5788, size: 64)
!5788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5789, size: 64)
!5789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !5790, line: 94, size: 256, elements: !5791)
!5790 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!5791 = !{!5792, !5793, !5794, !5795, !5796, !5797, !5802}
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5789, file: !5790, line: 95, baseType: !622, size: 64)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5789, file: !5790, line: 96, baseType: !916, size: 16, offset: 64)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !5789, file: !5790, line: 97, baseType: !916, size: 16, offset: 80)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !5789, file: !5790, line: 98, baseType: !1308, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !5789, file: !5790, line: 99, baseType: !1308, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !5789, file: !5790, line: 103, baseType: !5798, size: 64, offset: 128)
!5798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !5790, line: 50, size: 64, elements: !5799)
!5799 = !{!5800, !5801}
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5798, file: !5790, line: 51, baseType: !1308, size: 32)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5798, file: !5790, line: 52, baseType: !1308, size: 32, offset: 32)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !5789, file: !5790, line: 104, baseType: !495, size: 64, offset: 192)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !739, file: !6, line: 1484, baseType: !5804, size: 64, offset: 4160)
!5804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5805, size: 64)
!5805 = !DISubroutineType(types: !5806)
!5806 = !{!7, !495, !1308, !1308}
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !739, file: !6, line: 1486, baseType: !5808, size: 64, offset: 4224)
!5808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5809, size: 64)
!5809 = !DISubroutineType(types: !5810)
!5810 = !{!5811, !495}
!5811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5812, size: 64)
!5812 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !6, line: 1486, flags: DIFlagFwdDecl)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !739, file: !6, line: 1487, baseType: !5814, size: 64, offset: 4288)
!5814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5815, size: 64)
!5815 = !DISubroutineType(types: !5816)
!5816 = !{!7, !495, !5817, !7}
!5817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5818, size: 64)
!5818 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !6, line: 56, flags: DIFlagFwdDecl)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !739, file: !6, line: 1489, baseType: !5820, size: 64, offset: 4352)
!5820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5821, size: 64)
!5821 = !DISubroutineType(types: !5822)
!5822 = !{!495, !495}
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !469, file: !6, line: 1917, baseType: !5824, size: 64, offset: 4032)
!5824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5825, size: 64)
!5825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5826)
!5826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !281, line: 421, size: 3904, elements: !5827)
!5827 = !{!5828, !5829, !5849, !5850, !5861, !5873, !5877, !5881, !5885, !5886, !5887, !5904, !5905, !5917, !5918, !5948, !5949, !5965, !5969, !5978, !5989, !5993, !6006, !6010, !6014, !6024, !6025, !6026, !6027, !6031, !6032, !6134, !6138, !6148, !6152, !6153, !6154, !6158, !6166, !6170, !6174, !6190, !6194, !6206, !6210, !6211, !6226, !6238, !6239, !6255, !6256, !6270, !6274, !6278, !6279, !6318, !6324, !6335, !6336, !6337, !6338}
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !5826, file: !281, line: 422, baseType: !1308, size: 32)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !5826, file: !281, line: 423, baseType: !5830, size: 64, offset: 64)
!5830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5831, size: 64)
!5831 = !DISubroutineType(types: !5832)
!5832 = !{null, !495, !5833}
!5833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5834, size: 64)
!5834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !239, line: 177, size: 1568, elements: !5835)
!5835 = !{!5836, !5837, !5838, !5839, !5840, !5841, !5842, !5844, !5845, !5846, !5847, !5848}
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5834, file: !239, line: 178, baseType: !650, size: 32)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5834, file: !239, line: 179, baseType: !4944, size: 256, offset: 32)
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5834, file: !239, line: 180, baseType: !4944, size: 256, offset: 288)
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !5834, file: !239, line: 181, baseType: !4944, size: 256, offset: 544)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !5834, file: !239, line: 182, baseType: !4944, size: 256, offset: 800)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !5834, file: !239, line: 183, baseType: !4944, size: 256, offset: 1056)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !5834, file: !239, line: 184, baseType: !5843, size: 96, offset: 1312)
!5843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 96, elements: !4482)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !5834, file: !239, line: 185, baseType: !650, size: 32, offset: 1408)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !5834, file: !239, line: 186, baseType: !650, size: 32, offset: 1440)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !5834, file: !239, line: 187, baseType: !650, size: 32, offset: 1472)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !5834, file: !239, line: 188, baseType: !650, size: 32, offset: 1504)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !5834, file: !239, line: 189, baseType: !650, size: 32, offset: 1536)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !5826, file: !281, line: 424, baseType: !742, size: 64, offset: 128)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !5826, file: !281, line: 425, baseType: !5851, size: 64, offset: 192)
!5851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5852, size: 64)
!5852 = !DISubroutineType(types: !5853)
!5853 = !{null, !495, !5854, !622}
!5854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5855, size: 64)
!5855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !239, line: 310, size: 96, elements: !5856)
!5856 = !{!5857, !5858, !5859, !5860}
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5855, file: !239, line: 311, baseType: !650, size: 32)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5855, file: !239, line: 312, baseType: !650, size: 32, offset: 32)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5855, file: !239, line: 313, baseType: !650, size: 32, offset: 64)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5855, file: !239, line: 314, baseType: !818, offset: 96)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !5826, file: !281, line: 426, baseType: !5862, size: 64, offset: 256)
!5862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5863, size: 64)
!5863 = !DISubroutineType(types: !5864)
!5864 = !{null, !495, !5865}
!5865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5866, size: 64)
!5866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !239, line: 203, size: 160, elements: !5867)
!5867 = !{!5868, !5869, !5870, !5871}
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5866, file: !239, line: 204, baseType: !650, size: 32)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !5866, file: !239, line: 205, baseType: !650, size: 32, offset: 32)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !5866, file: !239, line: 206, baseType: !650, size: 32, offset: 64)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !5866, file: !239, line: 207, baseType: !5872, size: 48, offset: 96)
!5872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 48, elements: !1320)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !5826, file: !281, line: 427, baseType: !5874, size: 64, offset: 320)
!5874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5875, size: 64)
!5875 = !DISubroutineType(types: !5876)
!5876 = !{!7, !495, !5865}
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !5826, file: !281, line: 428, baseType: !5878, size: 64, offset: 384)
!5878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5879, size: 64)
!5879 = !DISubroutineType(types: !5880)
!5880 = !{!1308, !495}
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !5826, file: !281, line: 429, baseType: !5882, size: 64, offset: 448)
!5882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5883, size: 64)
!5883 = !DISubroutineType(types: !5884)
!5884 = !{null, !495, !1308}
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !5826, file: !281, line: 430, baseType: !742, size: 64, offset: 512)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !5826, file: !281, line: 431, baseType: !5878, size: 64, offset: 576)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !5826, file: !281, line: 432, baseType: !5888, size: 64, offset: 640)
!5888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5889, size: 64)
!5889 = !DISubroutineType(types: !5890)
!5890 = !{!7, !495, !5891}
!5891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5892, size: 64)
!5892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !281, line: 93, size: 64, elements: !5893)
!5893 = !{!5894, !5895}
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !5892, file: !281, line: 94, baseType: !238, size: 32)
!5895 = !DIDerivedType(tag: DW_TAG_member, scope: !5892, file: !281, line: 95, baseType: !5896, size: 32, offset: 32)
!5896 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5892, file: !281, line: 95, size: 32, elements: !5897)
!5897 = !{!5898, !5899, !5900, !5901, !5902, !5903}
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5896, file: !281, line: 96, baseType: !251, size: 32)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !5896, file: !281, line: 97, baseType: !259, size: 32)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !5896, file: !281, line: 98, baseType: !265, size: 32)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !5896, file: !281, line: 99, baseType: !272, size: 32)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !5896, file: !281, line: 100, baseType: !276, size: 32)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !5896, file: !281, line: 101, baseType: !1116, size: 8)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !5826, file: !281, line: 434, baseType: !742, size: 64, offset: 704)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !5826, file: !281, line: 435, baseType: !5906, size: 64, offset: 768)
!5906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5907, size: 64)
!5907 = !DISubroutineType(types: !5908)
!5908 = !{!7, !495, !5909, !1115}
!5909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5910, size: 64)
!5910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !239, line: 335, size: 128, elements: !5911)
!5911 = !{!5912, !5913, !5914, !5915, !5916}
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5910, file: !239, line: 336, baseType: !650, size: 32)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !5910, file: !239, line: 337, baseType: !650, size: 32, offset: 32)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5910, file: !239, line: 338, baseType: !650, size: 32, offset: 64)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5910, file: !239, line: 339, baseType: !650, size: 32, offset: 96)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5910, file: !239, line: 340, baseType: !818, offset: 128)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !5826, file: !281, line: 437, baseType: !5906, size: 64, offset: 832)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !5826, file: !281, line: 439, baseType: !5919, size: 64, offset: 896)
!5919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5920, size: 64)
!5920 = !DISubroutineType(types: !5921)
!5921 = !{!7, !495, !5922}
!5922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5923, size: 64)
!5923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !239, line: 462, size: 736, elements: !5924)
!5924 = !{!5925, !5926, !5927, !5928, !5929, !5930, !5931, !5932, !5933, !5934, !5935, !5936, !5937, !5938, !5939, !5940, !5941, !5942, !5943, !5944, !5945, !5946, !5947}
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5923, file: !239, line: 463, baseType: !650, size: 32)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !5923, file: !239, line: 464, baseType: !650, size: 32, offset: 32)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !5923, file: !239, line: 465, baseType: !650, size: 32, offset: 64)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !5923, file: !239, line: 466, baseType: !650, size: 32, offset: 96)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !5923, file: !239, line: 467, baseType: !650, size: 32, offset: 128)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !5923, file: !239, line: 468, baseType: !650, size: 32, offset: 160)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !5923, file: !239, line: 469, baseType: !650, size: 32, offset: 192)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !5923, file: !239, line: 470, baseType: !650, size: 32, offset: 224)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !5923, file: !239, line: 471, baseType: !650, size: 32, offset: 256)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !5923, file: !239, line: 472, baseType: !650, size: 32, offset: 288)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !5923, file: !239, line: 473, baseType: !650, size: 32, offset: 320)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !5923, file: !239, line: 474, baseType: !650, size: 32, offset: 352)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !5923, file: !239, line: 475, baseType: !650, size: 32, offset: 384)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !5923, file: !239, line: 476, baseType: !650, size: 32, offset: 416)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !5923, file: !239, line: 477, baseType: !650, size: 32, offset: 448)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !5923, file: !239, line: 478, baseType: !650, size: 32, offset: 480)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !5923, file: !239, line: 479, baseType: !650, size: 32, offset: 512)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !5923, file: !239, line: 480, baseType: !650, size: 32, offset: 544)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !5923, file: !239, line: 481, baseType: !650, size: 32, offset: 576)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !5923, file: !239, line: 482, baseType: !650, size: 32, offset: 608)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !5923, file: !239, line: 483, baseType: !650, size: 32, offset: 640)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !5923, file: !239, line: 484, baseType: !650, size: 32, offset: 672)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !5923, file: !239, line: 485, baseType: !650, size: 32, offset: 704)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !5826, file: !281, line: 440, baseType: !5919, size: 64, offset: 960)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !5826, file: !281, line: 441, baseType: !5950, size: 64, offset: 1024)
!5950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5951, size: 64)
!5951 = !DISubroutineType(types: !5952)
!5952 = !{null, !495, !5953}
!5953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5954, size: 64)
!5954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !239, line: 513, size: 288, elements: !5955)
!5955 = !{!5956, !5957, !5958, !5959, !5960, !5961, !5962, !5963, !5964}
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5954, file: !239, line: 514, baseType: !650, size: 32)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !5954, file: !239, line: 515, baseType: !650, size: 32, offset: 32)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !5954, file: !239, line: 516, baseType: !650, size: 32, offset: 64)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !5954, file: !239, line: 517, baseType: !650, size: 32, offset: 96)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !5954, file: !239, line: 518, baseType: !650, size: 32, offset: 128)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !5954, file: !239, line: 519, baseType: !650, size: 32, offset: 160)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !5954, file: !239, line: 520, baseType: !650, size: 32, offset: 192)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !5954, file: !239, line: 521, baseType: !650, size: 32, offset: 224)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !5954, file: !239, line: 522, baseType: !650, size: 32, offset: 256)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !5826, file: !281, line: 443, baseType: !5966, size: 64, offset: 1088)
!5966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5967, size: 64)
!5967 = !DISubroutineType(types: !5968)
!5968 = !{!7, !495, !5953}
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !5826, file: !281, line: 445, baseType: !5970, size: 64, offset: 1152)
!5970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5971, size: 64)
!5971 = !DISubroutineType(types: !5972)
!5972 = !{null, !495, !5973}
!5973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5974, size: 64)
!5974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !281, line: 260, size: 128, elements: !5975)
!5975 = !{!5976, !5977}
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !5974, file: !281, line: 261, baseType: !536, size: 64)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !5974, file: !281, line: 262, baseType: !536, size: 64, offset: 64)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !5826, file: !281, line: 447, baseType: !5979, size: 64, offset: 1216)
!5979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5980, size: 64)
!5980 = !DISubroutineType(types: !5981)
!5981 = !{null, !495, !5982}
!5982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5983, size: 64)
!5983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !239, line: 575, size: 128, elements: !5984)
!5984 = !{!5985, !5986, !5987, !5988}
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5983, file: !239, line: 576, baseType: !650, size: 32)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5983, file: !239, line: 577, baseType: !650, size: 32, offset: 32)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !5983, file: !239, line: 578, baseType: !650, size: 32, offset: 64)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !5983, file: !239, line: 579, baseType: !650, size: 32, offset: 96)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !5826, file: !281, line: 449, baseType: !5990, size: 64, offset: 1280)
!5990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5991, size: 64)
!5991 = !DISubroutineType(types: !5992)
!5992 = !{!7, !495, !5982}
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !5826, file: !281, line: 451, baseType: !5994, size: 64, offset: 1344)
!5994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5995, size: 64)
!5995 = !DISubroutineType(types: !5996)
!5996 = !{null, !495, !5997, !5676}
!5997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5998, size: 64)
!5998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !239, line: 770, size: 128, elements: !5999)
!5999 = !{!6000, !6001, !6002, !6003, !6004}
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5998, file: !239, line: 771, baseType: !650, size: 32)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5998, file: !239, line: 772, baseType: !650, size: 32, offset: 32)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5998, file: !239, line: 773, baseType: !650, size: 32, offset: 64)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5998, file: !239, line: 774, baseType: !650, size: 32, offset: 96)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5998, file: !239, line: 775, baseType: !6005, offset: 128)
!6005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !538, elements: !819)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !5826, file: !281, line: 452, baseType: !6007, size: 64, offset: 1408)
!6007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6008, size: 64)
!6008 = !DISubroutineType(types: !6009)
!6009 = !{null, !495, !1308, !1115}
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !5826, file: !281, line: 453, baseType: !6011, size: 64, offset: 1472)
!6011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6012, size: 64)
!6012 = !DISubroutineType(types: !6013)
!6013 = !{!7, !495, !280}
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !5826, file: !281, line: 454, baseType: !6015, size: 64, offset: 1536)
!6015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6016, size: 64)
!6016 = !DISubroutineType(types: !6017)
!6017 = !{null, !495, !6018, !5676}
!6018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6019, size: 64)
!6019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !239, line: 789, size: 64, elements: !6020)
!6020 = !{!6021, !6022, !6023}
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6019, file: !239, line: 790, baseType: !650, size: 32)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !6019, file: !239, line: 791, baseType: !650, size: 32, offset: 32)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6019, file: !239, line: 792, baseType: !6005, offset: 64)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !5826, file: !281, line: 456, baseType: !742, size: 64, offset: 1600)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !5826, file: !281, line: 457, baseType: !746, size: 64, offset: 1664)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !5826, file: !281, line: 458, baseType: !5878, size: 64, offset: 1728)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !5826, file: !281, line: 459, baseType: !6028, size: 64, offset: 1792)
!6028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6029, size: 64)
!6029 = !DISubroutineType(types: !6030)
!6030 = !{!7, !495, !1308}
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !5826, file: !281, line: 460, baseType: !1044, size: 64, offset: 1856)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !5826, file: !281, line: 461, baseType: !6033, size: 64, offset: 1920)
!6033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6034, size: 64)
!6034 = !DISubroutineType(types: !6035)
!6035 = !{!7, !495, !6036, !2831}
!6036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6037, size: 64)
!6037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !239, line: 1088, size: 1536, elements: !6038)
!6038 = !{!6039, !6040, !6041, !6042, !6128, !6133}
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6037, file: !239, line: 1089, baseType: !650, size: 32)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !6037, file: !239, line: 1090, baseType: !650, size: 32, offset: 32)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6037, file: !239, line: 1091, baseType: !538, size: 64, offset: 64)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !6037, file: !239, line: 1092, baseType: !6043, size: 1344, offset: 128)
!6043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !239, line: 992, size: 1344, elements: !6044)
!6044 = !{!6045, !6046, !6114, !6124, !6125, !6126, !6127}
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !6043, file: !239, line: 993, baseType: !650, size: 32)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !6043, file: !239, line: 994, baseType: !6047, size: 416, offset: 32)
!6047 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !239, line: 939, size: 416, elements: !6048)
!6048 = !{!6049, !6057, !6058, !6059, !6066, !6067, !6076, !6084, !6085, !6086, !6093, !6094, !6102, !6110}
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !6047, file: !239, line: 940, baseType: !6050, size: 128)
!6050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !239, line: 845, size: 128, elements: !6051)
!6051 = !{!6052, !6053, !6054, !6055, !6056}
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !6050, file: !239, line: 846, baseType: !3540, size: 32)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !6050, file: !239, line: 847, baseType: !3540, size: 32, offset: 32)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !6050, file: !239, line: 848, baseType: !870, size: 16, offset: 64)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !6050, file: !239, line: 849, baseType: !870, size: 16, offset: 80)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !6050, file: !239, line: 850, baseType: !631, size: 8, offset: 96)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !6047, file: !239, line: 941, baseType: !6050, size: 128)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !6047, file: !239, line: 942, baseType: !6050, size: 128)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !6047, file: !239, line: 943, baseType: !6060, size: 128)
!6060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !239, line: 862, size: 128, elements: !6061)
!6061 = !{!6062, !6063, !6064, !6065}
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !6060, file: !239, line: 863, baseType: !3540, size: 32)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !6060, file: !239, line: 864, baseType: !3540, size: 32, offset: 32)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !6060, file: !239, line: 865, baseType: !3540, size: 32, offset: 64)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !6060, file: !239, line: 866, baseType: !631, size: 8, offset: 96)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !6047, file: !239, line: 944, baseType: !6060, size: 128)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !6047, file: !239, line: 945, baseType: !6068, size: 128)
!6068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !239, line: 880, size: 128, elements: !6069)
!6069 = !{!6070, !6071, !6072, !6073, !6074, !6075}
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !6068, file: !239, line: 881, baseType: !3540, size: 32)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !6068, file: !239, line: 882, baseType: !3540, size: 32, offset: 32)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !6068, file: !239, line: 883, baseType: !3540, size: 32, offset: 64)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !6068, file: !239, line: 884, baseType: !631, size: 8, offset: 96)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !6068, file: !239, line: 885, baseType: !631, size: 8, offset: 104)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !6068, file: !239, line: 886, baseType: !631, size: 8, offset: 112)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !6047, file: !239, line: 946, baseType: !6077, size: 320)
!6077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !239, line: 899, size: 320, elements: !6078)
!6078 = !{!6079, !6080, !6081, !6082, !6083}
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !6077, file: !239, line: 900, baseType: !3561, size: 128)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !6077, file: !239, line: 901, baseType: !3561, size: 128, offset: 128)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !6077, file: !239, line: 902, baseType: !870, size: 16, offset: 256)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !6077, file: !239, line: 903, baseType: !870, size: 16, offset: 272)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !6077, file: !239, line: 904, baseType: !631, size: 8, offset: 288)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !6047, file: !239, line: 947, baseType: !6077, size: 320)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !6047, file: !239, line: 948, baseType: !6077, size: 320)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !6047, file: !239, line: 949, baseType: !6087, size: 320)
!6087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !239, line: 916, size: 320, elements: !6088)
!6088 = !{!6089, !6090, !6091, !6092}
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !6087, file: !239, line: 917, baseType: !3561, size: 128)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !6087, file: !239, line: 918, baseType: !3561, size: 128, offset: 128)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !6087, file: !239, line: 919, baseType: !3540, size: 32, offset: 256)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !6087, file: !239, line: 920, baseType: !631, size: 8, offset: 288)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !6047, file: !239, line: 950, baseType: !6087, size: 320)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !6047, file: !239, line: 951, baseType: !6095, size: 320)
!6095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !239, line: 931, size: 320, elements: !6096)
!6096 = !{!6097, !6098, !6099, !6100, !6101}
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !6095, file: !239, line: 932, baseType: !3561, size: 128)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !6095, file: !239, line: 933, baseType: !3561, size: 128, offset: 128)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !6095, file: !239, line: 934, baseType: !3540, size: 32, offset: 256)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !6095, file: !239, line: 935, baseType: !631, size: 8, offset: 288)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !6095, file: !239, line: 936, baseType: !631, size: 8, offset: 296)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !6047, file: !239, line: 952, baseType: !6103, size: 112)
!6103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !6104, line: 164, size: 112, elements: !6105)
!6104 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!6105 = !{!6106, !6108, !6109}
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !6103, file: !6104, line: 165, baseType: !6107, size: 48)
!6107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 48, elements: !1320)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !6103, file: !6104, line: 166, baseType: !6107, size: 48, offset: 48)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !6103, file: !6104, line: 167, baseType: !870, size: 16, offset: 96)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !6047, file: !239, line: 953, baseType: !6111, size: 416)
!6111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 416, elements: !6112)
!6112 = !{!6113}
!6113 = !DISubrange(count: 52)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !6043, file: !239, line: 995, baseType: !6115, size: 160, offset: 448)
!6115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !239, line: 967, size: 160, elements: !6116)
!6116 = !{!6117, !6119, !6120, !6121, !6122}
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !6115, file: !239, line: 968, baseType: !6118, size: 16)
!6118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 16, elements: !3261)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !6115, file: !239, line: 969, baseType: !6107, size: 48, offset: 16)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !6115, file: !239, line: 970, baseType: !870, size: 16, offset: 64)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !6115, file: !239, line: 971, baseType: !870, size: 16, offset: 80)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6115, file: !239, line: 972, baseType: !6123, size: 64, offset: 96)
!6123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3540, size: 64, elements: !3261)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !6043, file: !239, line: 996, baseType: !6047, size: 416, offset: 608)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !6043, file: !239, line: 997, baseType: !6115, size: 160, offset: 1024)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !6043, file: !239, line: 998, baseType: !538, size: 64, offset: 1216)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !6043, file: !239, line: 999, baseType: !650, size: 32, offset: 1280)
!6128 = !DIDerivedType(tag: DW_TAG_member, scope: !6037, file: !239, line: 1093, baseType: !6129, size: 32, offset: 1472)
!6129 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6037, file: !239, line: 1093, size: 32, elements: !6130)
!6130 = !{!6131, !6132}
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !6129, file: !239, line: 1094, baseType: !650, size: 32)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !6129, file: !239, line: 1095, baseType: !650, size: 32)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !6037, file: !239, line: 1097, baseType: !828, offset: 1504)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !5826, file: !281, line: 463, baseType: !6135, size: 64, offset: 1984)
!6135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6136, size: 64)
!6136 = !DISubroutineType(types: !6137)
!6137 = !{!7, !495, !6036}
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !5826, file: !281, line: 464, baseType: !6139, size: 64, offset: 2048)
!6139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6140, size: 64)
!6140 = !DISubroutineType(types: !6141)
!6141 = !{!7, !495, !6142}
!6142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6143, size: 64)
!6143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !239, line: 1217, size: 1088, elements: !6144)
!6144 = !{!6145, !6146, !6147}
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6143, file: !239, line: 1218, baseType: !650, size: 32)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !6143, file: !239, line: 1219, baseType: !650, size: 32, offset: 32)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6143, file: !239, line: 1220, baseType: !5537, size: 1024, offset: 64)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5826, file: !281, line: 465, baseType: !6149, size: 64, offset: 2112)
!6149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6150, size: 64)
!6150 = !DISubroutineType(types: !6151)
!6151 = !{!7, !495, !2831}
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !5826, file: !281, line: 466, baseType: !5878, size: 64, offset: 2176)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !5826, file: !281, line: 467, baseType: !5878, size: 64, offset: 2240)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !5826, file: !281, line: 468, baseType: !6155, size: 64, offset: 2304)
!6155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6156, size: 64)
!6156 = !DISubroutineType(types: !6157)
!6157 = !{!7, !495, !2831, !1115, !1115}
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !5826, file: !281, line: 470, baseType: !6159, size: 64, offset: 2368)
!6159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6160, size: 64)
!6160 = !DISubroutineType(types: !6161)
!6161 = !{!7, !495, !6162, !6164, !6165}
!6162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6163, size: 64)
!6163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1308)
!6164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6165, size: 64)
!6165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1116)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !5826, file: !281, line: 472, baseType: !6167, size: 64, offset: 2432)
!6167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6168, size: 64)
!6168 = !DISubroutineType(types: !6169)
!6169 = !{!7, !495, !2831, !1115, !1115, !1308}
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !5826, file: !281, line: 474, baseType: !6171, size: 64, offset: 2496)
!6171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6172, size: 64)
!6172 = !DISubroutineType(types: !6173)
!6173 = !{!7, !495, !6162, !6164, !6165, !2831, !1093}
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !5826, file: !281, line: 477, baseType: !6175, size: 64, offset: 2560)
!6175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6176, size: 64)
!6176 = !DISubroutineType(types: !6177)
!6177 = !{null, !495, !6178}
!6178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6179, size: 64)
!6179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !239, line: 541, size: 288, elements: !6180)
!6180 = !{!6181, !6182, !6183, !6184, !6185, !6186, !6187, !6188, !6189}
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6179, file: !239, line: 542, baseType: !650, size: 32)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !6179, file: !239, line: 543, baseType: !650, size: 32, offset: 32)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !6179, file: !239, line: 544, baseType: !650, size: 32, offset: 64)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !6179, file: !239, line: 545, baseType: !650, size: 32, offset: 96)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !6179, file: !239, line: 546, baseType: !650, size: 32, offset: 128)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !6179, file: !239, line: 547, baseType: !650, size: 32, offset: 160)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !6179, file: !239, line: 548, baseType: !650, size: 32, offset: 192)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !6179, file: !239, line: 549, baseType: !650, size: 32, offset: 224)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !6179, file: !239, line: 550, baseType: !650, size: 32, offset: 256)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !5826, file: !281, line: 478, baseType: !6191, size: 64, offset: 2624)
!6191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6192, size: 64)
!6192 = !DISubroutineType(types: !6193)
!6193 = !{!7, !495, !6178}
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !5826, file: !281, line: 479, baseType: !6195, size: 64, offset: 2688)
!6195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6196, size: 64)
!6196 = !DISubroutineType(types: !6197)
!6197 = !{!7, !495, !6198}
!6198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6199, size: 64)
!6199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !239, line: 1237, size: 128, elements: !6200)
!6200 = !{!6201, !6202, !6203, !6204, !6205}
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6199, file: !239, line: 1238, baseType: !650, size: 32)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !6199, file: !239, line: 1239, baseType: !650, size: 32, offset: 32)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6199, file: !239, line: 1240, baseType: !650, size: 32, offset: 64)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6199, file: !239, line: 1241, baseType: !650, size: 32, offset: 96)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6199, file: !239, line: 1242, baseType: !818, offset: 128)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !5826, file: !281, line: 480, baseType: !6207, size: 64, offset: 2752)
!6207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6208, size: 64)
!6208 = !DISubroutineType(types: !6209)
!6209 = !{!7, !495, !6198, !622}
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !5826, file: !281, line: 482, baseType: !6195, size: 64, offset: 2816)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !5826, file: !281, line: 483, baseType: !6212, size: 64, offset: 2880)
!6212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6213, size: 64)
!6213 = !DISubroutineType(types: !6214)
!6214 = !{!7, !495, !6215}
!6215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6216, size: 64)
!6216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !239, line: 1317, size: 352, elements: !6217)
!6217 = !{!6218, !6219, !6220, !6221, !6222, !6224, !6225}
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6216, file: !239, line: 1318, baseType: !650, size: 32)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !6216, file: !239, line: 1319, baseType: !650, size: 32, offset: 32)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !6216, file: !239, line: 1320, baseType: !629, size: 32, offset: 64)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !6216, file: !239, line: 1321, baseType: !650, size: 32, offset: 96)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !6216, file: !239, line: 1322, baseType: !6223, size: 96, offset: 128)
!6223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !650, size: 96, elements: !1909)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !6216, file: !239, line: 1323, baseType: !650, size: 32, offset: 224)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !6216, file: !239, line: 1324, baseType: !6223, size: 96, offset: 256)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !5826, file: !281, line: 484, baseType: !6227, size: 64, offset: 2944)
!6227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6228, size: 64)
!6228 = !DISubroutineType(types: !6229)
!6229 = !{!7, !495, !6230}
!6230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6231, size: 64)
!6231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !239, line: 382, size: 352, elements: !6232)
!6232 = !{!6233, !6234, !6235, !6236}
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6231, file: !239, line: 383, baseType: !650, size: 32)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6231, file: !239, line: 384, baseType: !650, size: 32, offset: 32)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !6231, file: !239, line: 385, baseType: !650, size: 32, offset: 64)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6231, file: !239, line: 386, baseType: !6237, size: 256, offset: 96)
!6237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !650, size: 256, elements: !728)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !5826, file: !281, line: 486, baseType: !5906, size: 64, offset: 3008)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !5826, file: !281, line: 488, baseType: !6240, size: 64, offset: 3072)
!6240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6241, size: 64)
!6241 = !DISubroutineType(types: !6242)
!6242 = !{!7, !495, !6243}
!6243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6244, size: 64)
!6244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !239, line: 360, size: 320, elements: !6245)
!6245 = !{!6246, !6247, !6248, !6249, !6250, !6251, !6252, !6253, !6254}
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6244, file: !239, line: 361, baseType: !650, size: 32)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !6244, file: !239, line: 362, baseType: !650, size: 32, offset: 32)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !6244, file: !239, line: 363, baseType: !650, size: 32, offset: 64)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !6244, file: !239, line: 364, baseType: !650, size: 32, offset: 96)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !6244, file: !239, line: 365, baseType: !650, size: 32, offset: 128)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !6244, file: !239, line: 366, baseType: !650, size: 32, offset: 160)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !6244, file: !239, line: 367, baseType: !650, size: 32, offset: 192)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !6244, file: !239, line: 368, baseType: !650, size: 32, offset: 224)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6244, file: !239, line: 369, baseType: !3260, size: 64, offset: 256)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !5826, file: !281, line: 489, baseType: !6240, size: 64, offset: 3136)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !5826, file: !281, line: 490, baseType: !6257, size: 64, offset: 3200)
!6257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6258, size: 64)
!6258 = !DISubroutineType(types: !6259)
!6259 = !{!7, !495, !6260, !622}
!6260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6261, size: 64)
!6261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6262)
!6262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !239, line: 244, size: 128, elements: !6263)
!6263 = !{!6264, !6265, !6266, !6267, !6268}
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6262, file: !239, line: 245, baseType: !650, size: 32)
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6262, file: !239, line: 246, baseType: !650, size: 32, offset: 32)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !6262, file: !239, line: 247, baseType: !650, size: 32, offset: 64)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6262, file: !239, line: 248, baseType: !650, size: 32, offset: 96)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6262, file: !239, line: 249, baseType: !6269, offset: 128)
!6269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !622, elements: !819)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !5826, file: !281, line: 492, baseType: !6271, size: 64, offset: 3264)
!6271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6272, size: 64)
!6272 = !DISubroutineType(types: !6273)
!6273 = !{!7, !495, !6260, !3590}
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !5826, file: !281, line: 494, baseType: !6275, size: 64, offset: 3328)
!6275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6276, size: 64)
!6276 = !DISubroutineType(types: !6277)
!6277 = !{!7, !495, !1308, !5922}
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !5826, file: !281, line: 496, baseType: !6275, size: 64, offset: 3392)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !5826, file: !281, line: 498, baseType: !6280, size: 64, offset: 3456)
!6280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6281, size: 64)
!6281 = !DISubroutineType(types: !6282)
!6282 = !{!7, !495, !6283}
!6283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6284, size: 64)
!6284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !281, line: 124, size: 768, elements: !6285)
!6285 = !{!6286, !6311}
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6284, file: !281, line: 125, baseType: !6287, size: 384)
!6287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !239, line: 1996, size: 384, elements: !6288)
!6288 = !{!6289, !6290, !6291, !6292, !6293, !6294, !6295, !6296, !6297, !6298, !6301, !6302, !6303, !6304, !6306, !6310}
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6287, file: !239, line: 1997, baseType: !650, size: 32)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !6287, file: !239, line: 1998, baseType: !650, size: 32, offset: 32)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !6287, file: !239, line: 1999, baseType: !631, size: 8, offset: 64)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !6287, file: !239, line: 2000, baseType: !631, size: 8, offset: 72)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !6287, file: !239, line: 2001, baseType: !631, size: 8, offset: 80)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !6287, file: !239, line: 2002, baseType: !631, size: 8, offset: 88)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !6287, file: !239, line: 2003, baseType: !631, size: 8, offset: 96)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !6287, file: !239, line: 2004, baseType: !631, size: 8, offset: 104)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !6287, file: !239, line: 2005, baseType: !631, size: 8, offset: 112)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !6287, file: !239, line: 2006, baseType: !6299, size: 8, offset: 120)
!6299 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !539, line: 20, baseType: !6300)
!6300 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !6287, file: !239, line: 2007, baseType: !631, size: 8, offset: 128)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !6287, file: !239, line: 2008, baseType: !631, size: 8, offset: 136)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !6287, file: !239, line: 2009, baseType: !631, size: 8, offset: 144)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !6287, file: !239, line: 2010, baseType: !6305, size: 8, offset: 152)
!6305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 8, elements: !2787)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6287, file: !239, line: 2011, baseType: !6307, size: 224, offset: 160)
!6307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !650, size: 224, elements: !6308)
!6308 = !{!6309}
!6309 = !DISubrange(count: 7)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !6287, file: !239, line: 2012, baseType: !828, offset: 384)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !6284, file: !281, line: 130, baseType: !6312, size: 384, offset: 384)
!6312 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6284, file: !281, line: 126, size: 384, elements: !6313)
!6313 = !{!6314, !6316, !6317}
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !6312, file: !281, line: 127, baseType: !6315, size: 128)
!6315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !517, size: 128, elements: !3261)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !6312, file: !281, line: 128, baseType: !6315, size: 128, offset: 128)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !6312, file: !281, line: 129, baseType: !6315, size: 128, offset: 256)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !5826, file: !281, line: 500, baseType: !6319, size: 64, offset: 3520)
!6319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6320, size: 64)
!6320 = !DISubroutineType(types: !6321)
!6321 = !{!7, !495, !6322}
!6322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6323, size: 64)
!6323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6284)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !5826, file: !281, line: 502, baseType: !6325, size: 64, offset: 3584)
!6325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6326, size: 64)
!6326 = !DISubroutineType(types: !6327)
!6327 = !{!7, !495, !6328}
!6328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6329, size: 64)
!6329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !239, line: 1389, size: 128, elements: !6330)
!6330 = !{!6331, !6332, !6333, !6334}
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6329, file: !239, line: 1390, baseType: !650, size: 32)
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !6329, file: !239, line: 1392, baseType: !650, size: 32, offset: 32)
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !6329, file: !239, line: 1393, baseType: !650, size: 32, offset: 64)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6329, file: !239, line: 1394, baseType: !650, size: 32, offset: 96)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !5826, file: !281, line: 504, baseType: !6325, size: 64, offset: 3648)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !5826, file: !281, line: 506, baseType: !6015, size: 64, offset: 3712)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !5826, file: !281, line: 508, baseType: !6257, size: 64, offset: 3776)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !5826, file: !281, line: 510, baseType: !6271, size: 64, offset: 3840)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !469, file: !6, line: 1922, baseType: !6340, size: 64, offset: 4096)
!6340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6341, size: 64)
!6341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6342)
!6342 = !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !6, line: 1922, flags: DIFlagFwdDecl)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !469, file: !6, line: 1933, baseType: !6344, size: 64, offset: 4160)
!6344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6345, size: 64)
!6345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6346)
!6346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !6, line: 270, size: 384, elements: !6347)
!6347 = !{!6348, !6352, !6358, !6371, !6375, !6379}
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !6346, file: !6, line: 271, baseType: !6349, size: 64)
!6349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6350, size: 64)
!6350 = !DISubroutineType(types: !6351)
!6351 = !{!7, !756, !495, !611, !3590, !3590, !13}
!6352 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !6346, file: !6, line: 274, baseType: !6353, size: 64, offset: 64)
!6353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6354, size: 64)
!6354 = !DISubroutineType(types: !6355)
!6355 = !{!7, !6356, !899}
!6356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6357, size: 64)
!6357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !757)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !6346, file: !6, line: 275, baseType: !6359, size: 64, offset: 128)
!6359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6360, size: 64)
!6360 = !DISubroutineType(types: !6361)
!6361 = !{!7, !6362, !6364, !870}
!6362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6363, size: 64)
!6363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1246)
!6364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6365, size: 64)
!6365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !6, line: 244, size: 832, elements: !6366)
!6366 = !{!6367, !6368, !6369}
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !6365, file: !6, line: 245, baseType: !13, size: 32)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !6365, file: !6, line: 246, baseType: !3657, size: 32, offset: 32)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !6365, file: !6, line: 254, baseType: !6370, size: 768, offset: 64)
!6370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !517, size: 768, elements: !4482)
!6371 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !6346, file: !6, line: 276, baseType: !6372, size: 64, offset: 192)
!6372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6373, size: 64)
!6373 = !DISubroutineType(types: !6374)
!6374 = !{null, !6364, !1095, !1267}
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !6346, file: !6, line: 279, baseType: !6376, size: 64, offset: 256)
!6376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6377, size: 64)
!6377 = !DISubroutineType(types: !6378)
!6378 = !{!1093, !497, !13}
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !6346, file: !6, line: 280, baseType: !6380, size: 64, offset: 320)
!6380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6381, size: 64)
!6381 = !DISubroutineType(types: !6382)
!6382 = !{!870, !6356}
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !469, file: !6, line: 1935, baseType: !13, size: 32, offset: 4224)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !469, file: !6, line: 1936, baseType: !13, size: 32, offset: 4256)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !469, file: !6, line: 1938, baseType: !611, size: 16, offset: 4288)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !469, file: !6, line: 1939, baseType: !611, size: 16, offset: 4304)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !469, file: !6, line: 1941, baseType: !632, size: 8, offset: 4320)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !469, file: !6, line: 1942, baseType: !632, size: 8, offset: 4328)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !469, file: !6, line: 1944, baseType: !632, size: 8, offset: 4336)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !469, file: !6, line: 1945, baseType: !632, size: 8, offset: 4344)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !469, file: !6, line: 1952, baseType: !13, size: 32, offset: 4352)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !469, file: !6, line: 1953, baseType: !13, size: 32, offset: 4384)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !469, file: !6, line: 1954, baseType: !13, size: 32, offset: 4416)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !469, file: !6, line: 1955, baseType: !611, size: 16, offset: 4448)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !469, file: !6, line: 1956, baseType: !611, size: 16, offset: 4464)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !469, file: !6, line: 1957, baseType: !632, size: 8, offset: 4480)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !469, file: !6, line: 1958, baseType: !632, size: 8, offset: 4488)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !469, file: !6, line: 1960, baseType: !611, size: 16, offset: 4496)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !469, file: !6, line: 1961, baseType: !611, size: 16, offset: 4512)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !469, file: !6, line: 1964, baseType: !1351, size: 256, offset: 4528)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !469, file: !6, line: 1965, baseType: !632, size: 8, offset: 4784)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !469, file: !6, line: 1966, baseType: !632, size: 8, offset: 4792)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !469, file: !6, line: 1967, baseType: !632, size: 8, offset: 4800)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !469, file: !6, line: 1968, baseType: !632, size: 8, offset: 4808)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !469, file: !6, line: 1970, baseType: !611, size: 16, offset: 4816)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !469, file: !6, line: 1971, baseType: !611, size: 16, offset: 4832)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !469, file: !6, line: 1972, baseType: !611, size: 16, offset: 4848)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !469, file: !6, line: 1973, baseType: !1987, offset: 4864)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !469, file: !6, line: 1975, baseType: !6410, size: 192, offset: 4864)
!6410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !6, line: 224, size: 192, elements: !6411)
!6411 = !{!6412, !6413}
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6410, file: !6, line: 225, baseType: !489, size: 128)
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6410, file: !6, line: 226, baseType: !7, size: 32, offset: 128)
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !469, file: !6, line: 1976, baseType: !6410, size: 192, offset: 5056)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !469, file: !6, line: 1977, baseType: !6410, size: 192, offset: 5248)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !469, file: !6, line: 1980, baseType: !6417, size: 64, offset: 5440)
!6417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6418, size: 64)
!6418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !6419, line: 192, size: 704, elements: !6420)
!6419 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!6420 = !{!6421, !6422, !6423, !6655}
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6418, file: !6419, line: 193, baseType: !489, size: 128)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !6418, file: !6419, line: 194, baseType: !1987, offset: 128)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6418, file: !6419, line: 195, baseType: !6424, size: 512, offset: 128)
!6424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !6419, line: 64, size: 512, elements: !6425)
!6425 = !{!6426, !6427, !6428, !6430, !6431, !6527, !6649, !6650, !6651, !6652, !6653, !6654}
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6424, file: !6419, line: 65, baseType: !497, size: 64)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6424, file: !6419, line: 66, baseType: !489, size: 128, offset: 64)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6424, file: !6419, line: 67, baseType: !6429, size: 64, offset: 192)
!6429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6424, size: 64)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !6424, file: !6419, line: 68, baseType: !6417, size: 64, offset: 256)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !6424, file: !6419, line: 69, baseType: !6432, size: 64, offset: 320)
!6432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6433, size: 64)
!6433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !6419, line: 138, size: 448, elements: !6434)
!6434 = !{!6435, !6439, !6458, !6460, !6493, !6519, !6523}
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6433, file: !6419, line: 139, baseType: !6436, size: 64)
!6436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6437, size: 64)
!6437 = !DISubroutineType(types: !6438)
!6438 = !{null, !6429}
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !6433, file: !6419, line: 140, baseType: !6440, size: 64, offset: 64)
!6440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6441, size: 64)
!6441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6442)
!6442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !6443, line: 230, size: 128, elements: !6444)
!6443 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!6444 = !{!6445, !6454}
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !6442, file: !6443, line: 231, baseType: !6446, size: 64)
!6446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6447, size: 64)
!6447 = !DISubroutineType(types: !6448)
!6448 = !{!1839, !6429, !6449, !676}
!6449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6450, size: 64)
!6450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !6443, line: 30, size: 128, elements: !6451)
!6451 = !{!6452, !6453}
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6450, file: !6443, line: 31, baseType: !497, size: 64)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6450, file: !6443, line: 32, baseType: !1697, size: 16, offset: 64)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !6442, file: !6443, line: 232, baseType: !6455, size: 64, offset: 64)
!6455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6456, size: 64)
!6456 = !DISubroutineType(types: !6457)
!6457 = !{!1839, !6429, !6449, !497, !1358}
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !6433, file: !6419, line: 141, baseType: !6459, size: 64, offset: 128)
!6459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6449, size: 64)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !6433, file: !6419, line: 142, baseType: !6461, size: 64, offset: 192)
!6461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6462, size: 64)
!6462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6463, size: 64)
!6463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6464)
!6464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !6443, line: 84, size: 320, elements: !6465)
!6465 = !{!6466, !6467, !6471, !6490, !6491}
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6464, file: !6443, line: 85, baseType: !497, size: 64)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !6464, file: !6443, line: 86, baseType: !6468, size: 64, offset: 64)
!6468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6469, size: 64)
!6469 = !DISubroutineType(types: !6470)
!6470 = !{!1697, !6429, !6449, !7}
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !6464, file: !6443, line: 88, baseType: !6472, size: 64, offset: 128)
!6472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6473, size: 64)
!6473 = !DISubroutineType(types: !6474)
!6474 = !{!1697, !6429, !6475, !7}
!6475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6476, size: 64)
!6476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !6443, line: 168, size: 448, elements: !6477)
!6477 = !{!6478, !6479, !6480, !6481, !6485, !6486}
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6476, file: !6443, line: 169, baseType: !6450, size: 128)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6476, file: !6443, line: 170, baseType: !1358, size: 64, offset: 128)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !6476, file: !6443, line: 171, baseType: !622, size: 64, offset: 192)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !6476, file: !6443, line: 172, baseType: !6482, size: 64, offset: 256)
!6482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6483, size: 64)
!6483 = !DISubroutineType(types: !6484)
!6484 = !{!1839, !1634, !6429, !6475, !676, !1794, !1358}
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !6476, file: !6443, line: 174, baseType: !6482, size: 64, offset: 320)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6476, file: !6443, line: 176, baseType: !6487, size: 64, offset: 384)
!6487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6488, size: 64)
!6488 = !DISubroutineType(types: !6489)
!6489 = !{!7, !1634, !6429, !6475, !2416}
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !6464, file: !6443, line: 90, baseType: !6459, size: 64, offset: 192)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !6464, file: !6443, line: 91, baseType: !6492, size: 64, offset: 256)
!6492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6475, size: 64)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !6433, file: !6419, line: 143, baseType: !6494, size: 64, offset: 256)
!6494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6495, size: 64)
!6495 = !DISubroutineType(types: !6496)
!6496 = !{!6497, !6429}
!6497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6498, size: 64)
!6498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6499)
!6499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !288, line: 39, size: 384, elements: !6500)
!6500 = !{!6501, !6502, !6506, !6510, !6514, !6518}
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6499, file: !288, line: 40, baseType: !287, size: 32)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !6499, file: !288, line: 41, baseType: !6503, size: 64, offset: 64)
!6503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6504, size: 64)
!6504 = !DISubroutineType(types: !6505)
!6505 = !{!1093}
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !6499, file: !288, line: 42, baseType: !6507, size: 64, offset: 128)
!6507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6508, size: 64)
!6508 = !DISubroutineType(types: !6509)
!6509 = !{!622}
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !6499, file: !288, line: 43, baseType: !6511, size: 64, offset: 192)
!6511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6512, size: 64)
!6512 = !DISubroutineType(types: !6513)
!6513 = !{!3590, !786}
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !6499, file: !288, line: 44, baseType: !6515, size: 64, offset: 256)
!6515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6516, size: 64)
!6516 = !DISubroutineType(types: !6517)
!6517 = !{!3590}
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !6499, file: !288, line: 45, baseType: !1733, size: 64, offset: 320)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !6433, file: !6419, line: 144, baseType: !6520, size: 64, offset: 320)
!6520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6521, size: 64)
!6521 = !DISubroutineType(types: !6522)
!6522 = !{!3590, !6429}
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !6433, file: !6419, line: 145, baseType: !6524, size: 64, offset: 384)
!6524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6525, size: 64)
!6525 = !DISubroutineType(types: !6526)
!6526 = !{null, !6429, !3164, !3165}
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !6424, file: !6419, line: 70, baseType: !6528, size: 64, offset: 384)
!6528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6529, size: 64)
!6529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !6530, line: 123, size: 1024, elements: !6531)
!6530 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!6531 = !{!6532, !6533, !6534, !6535, !6536, !6537, !6538, !6539, !6642, !6643, !6644, !6645, !6646}
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6529, file: !6530, line: 124, baseType: !588, size: 32)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6529, file: !6530, line: 125, baseType: !588, size: 32, offset: 32)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6529, file: !6530, line: 135, baseType: !6528, size: 64, offset: 64)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6529, file: !6530, line: 136, baseType: !497, size: 64, offset: 128)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !6529, file: !6530, line: 138, baseType: !774, size: 192, align: 64, offset: 192)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !6529, file: !6530, line: 140, baseType: !3590, size: 64, offset: 384)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !6529, file: !6530, line: 141, baseType: !13, size: 32, offset: 448)
!6539 = !DIDerivedType(tag: DW_TAG_member, scope: !6529, file: !6530, line: 142, baseType: !6540, size: 256, offset: 512)
!6540 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6529, file: !6530, line: 142, size: 256, elements: !6541)
!6541 = !{!6542, !6582, !6586}
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !6540, file: !6530, line: 143, baseType: !6543, size: 192)
!6543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !6530, line: 91, size: 192, elements: !6544)
!6544 = !{!6545, !6546, !6547}
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !6543, file: !6530, line: 92, baseType: !517, size: 64)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6543, file: !6530, line: 94, baseType: !2067, size: 64, offset: 64)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !6543, file: !6530, line: 100, baseType: !6548, size: 64, offset: 128)
!6548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6549, size: 64)
!6549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !6530, line: 180, size: 704, elements: !6550)
!6550 = !{!6551, !6552, !6553, !6554, !6555, !6556, !6580, !6581}
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !6549, file: !6530, line: 182, baseType: !6528, size: 64)
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6549, file: !6530, line: 183, baseType: !13, size: 32, offset: 64)
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !6549, file: !6530, line: 186, baseType: !2913, size: 192, offset: 128)
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !6549, file: !6530, line: 187, baseType: !1308, size: 32, offset: 320)
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !6549, file: !6530, line: 188, baseType: !1308, size: 32, offset: 352)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !6549, file: !6530, line: 189, baseType: !6557, size: 64, offset: 384)
!6557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6558, size: 64)
!6558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !6530, line: 168, size: 320, elements: !6559)
!6559 = !{!6560, !6564, !6568, !6572, !6576}
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !6558, file: !6530, line: 169, baseType: !6561, size: 64)
!6561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6562, size: 64)
!6562 = !DISubroutineType(types: !6563)
!6563 = !{!7, !1970, !6548}
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !6558, file: !6530, line: 171, baseType: !6565, size: 64, offset: 64)
!6565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6566, size: 64)
!6566 = !DISubroutineType(types: !6567)
!6567 = !{!7, !6528, !497, !1697}
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !6558, file: !6530, line: 173, baseType: !6569, size: 64, offset: 128)
!6569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6570, size: 64)
!6570 = !DISubroutineType(types: !6571)
!6571 = !{!7, !6528}
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !6558, file: !6530, line: 174, baseType: !6573, size: 64, offset: 192)
!6573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6574, size: 64)
!6574 = !DISubroutineType(types: !6575)
!6575 = !{!7, !6528, !6528, !497}
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !6558, file: !6530, line: 176, baseType: !6577, size: 64, offset: 256)
!6577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6578, size: 64)
!6578 = !DISubroutineType(types: !6579)
!6579 = !{!7, !1970, !6528, !6548}
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !6549, file: !6530, line: 192, baseType: !489, size: 128, offset: 448)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !6549, file: !6530, line: 194, baseType: !2206, size: 128, offset: 576)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !6540, file: !6530, line: 144, baseType: !6583, size: 64)
!6583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !6530, line: 103, size: 64, elements: !6584)
!6584 = !{!6585}
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !6583, file: !6530, line: 104, baseType: !6528, size: 64)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6540, file: !6530, line: 145, baseType: !6587, size: 256)
!6587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !6530, line: 107, size: 256, elements: !6588)
!6588 = !{!6589, !6637, !6640, !6641}
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6587, file: !6530, line: 108, baseType: !6590, size: 64)
!6590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6591, size: 64)
!6591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6592)
!6592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !6530, line: 217, size: 768, elements: !6593)
!6593 = !{!6594, !6614, !6618, !6619, !6620, !6621, !6622, !6626, !6627, !6628, !6629, !6633}
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6592, file: !6530, line: 222, baseType: !6595, size: 64)
!6595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6596, size: 64)
!6596 = !DISubroutineType(types: !6597)
!6597 = !{!7, !6598}
!6598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6599, size: 64)
!6599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !6530, line: 197, size: 1088, elements: !6600)
!6600 = !{!6601, !6602, !6603, !6604, !6605, !6606, !6607, !6608, !6609, !6610, !6611, !6612, !6613}
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !6599, file: !6530, line: 199, baseType: !6528, size: 64)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6599, file: !6530, line: 200, baseType: !1634, size: 64, offset: 64)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !6599, file: !6530, line: 201, baseType: !1970, size: 64, offset: 128)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6599, file: !6530, line: 202, baseType: !622, size: 64, offset: 192)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6599, file: !6530, line: 205, baseType: !1982, size: 192, offset: 256)
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !6599, file: !6530, line: 206, baseType: !1982, size: 192, offset: 448)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !6599, file: !6530, line: 207, baseType: !7, size: 32, offset: 640)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6599, file: !6530, line: 208, baseType: !489, size: 128, offset: 704)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !6599, file: !6530, line: 209, baseType: !676, size: 64, offset: 832)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6599, file: !6530, line: 211, baseType: !1358, size: 64, offset: 896)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !6599, file: !6530, line: 212, baseType: !1093, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !6599, file: !6530, line: 213, baseType: !1093, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !6599, file: !6530, line: 214, baseType: !2444, size: 64, offset: 1024)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6592, file: !6530, line: 223, baseType: !6615, size: 64, offset: 64)
!6615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6616, size: 64)
!6616 = !DISubroutineType(types: !6617)
!6617 = !{null, !6598}
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !6592, file: !6530, line: 236, baseType: !2021, size: 64, offset: 128)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !6592, file: !6530, line: 238, baseType: !2008, size: 64, offset: 192)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !6592, file: !6530, line: 239, baseType: !2017, size: 64, offset: 256)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !6592, file: !6530, line: 240, baseType: !2013, size: 64, offset: 320)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !6592, file: !6530, line: 242, baseType: !6623, size: 64, offset: 384)
!6623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6624, size: 64)
!6624 = !DISubroutineType(types: !6625)
!6625 = !{!1839, !6598, !676, !1358, !1794}
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6592, file: !6530, line: 252, baseType: !1358, size: 64, offset: 448)
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !6592, file: !6530, line: 259, baseType: !1093, size: 8, offset: 512)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !6592, file: !6530, line: 260, baseType: !6623, size: 64, offset: 576)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !6592, file: !6530, line: 263, baseType: !6630, size: 64, offset: 640)
!6630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6631, size: 64)
!6631 = !DISubroutineType(types: !6632)
!6632 = !{!5147, !6598, !5148}
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6592, file: !6530, line: 266, baseType: !6634, size: 64, offset: 704)
!6634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6635, size: 64)
!6635 = !DISubroutineType(types: !6636)
!6636 = !{!7, !6598, !2416}
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6587, file: !6530, line: 109, baseType: !6638, size: 64, offset: 64)
!6638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6639, size: 64)
!6639 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !6530, line: 31, flags: DIFlagFwdDecl)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6587, file: !6530, line: 110, baseType: !1794, size: 64, offset: 128)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !6587, file: !6530, line: 111, baseType: !6528, size: 64, offset: 192)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6529, file: !6530, line: 148, baseType: !622, size: 64, offset: 768)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6529, file: !6530, line: 154, baseType: !536, size: 64, offset: 832)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6529, file: !6530, line: 156, baseType: !611, size: 16, offset: 896)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6529, file: !6530, line: 157, baseType: !1697, size: 16, offset: 912)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !6529, file: !6530, line: 158, baseType: !6647, size: 64, offset: 960)
!6647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6648, size: 64)
!6648 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !6530, line: 32, flags: DIFlagFwdDecl)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !6424, file: !6419, line: 71, baseType: !2908, size: 32, offset: 448)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !6424, file: !6419, line: 75, baseType: !13, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !6424, file: !6419, line: 76, baseType: !13, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !6424, file: !6419, line: 77, baseType: !13, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !6424, file: !6419, line: 78, baseType: !13, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !6424, file: !6419, line: 79, baseType: !13, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !6418, file: !6419, line: 196, baseType: !6656, size: 64, offset: 640)
!6656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6657, size: 64)
!6657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6658)
!6658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !6419, line: 156, size: 192, elements: !6659)
!6659 = !{!6660, !6665, !6670}
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !6658, file: !6419, line: 157, baseType: !6661, size: 64)
!6661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6662)
!6662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6663, size: 64)
!6663 = !DISubroutineType(types: !6664)
!6664 = !{!7, !6417, !6429}
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6658, file: !6419, line: 158, baseType: !6666, size: 64, offset: 64)
!6666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6667)
!6667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6668, size: 64)
!6668 = !DISubroutineType(types: !6669)
!6669 = !{!497, !6417, !6429}
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6658, file: !6419, line: 159, baseType: !6671, size: 64, offset: 128)
!6671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6672)
!6672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6673, size: 64)
!6673 = !DISubroutineType(types: !6674)
!6674 = !{!7, !6417, !6429, !6675}
!6675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6676, size: 64)
!6676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !6419, line: 148, size: 20736, elements: !6677)
!6677 = !{!6678, !6680, !6682, !6683, !6687}
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !6676, file: !6419, line: 149, baseType: !6679, size: 192)
!6679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !676, size: 192, elements: !1909)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !6676, file: !6419, line: 150, baseType: !6681, size: 4096, offset: 192)
!6681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !676, size: 4096, elements: !4144)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !6676, file: !6419, line: 151, baseType: !7, size: 32, offset: 4288)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !6676, file: !6419, line: 152, baseType: !6684, size: 16384, offset: 4320)
!6684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 16384, elements: !6685)
!6685 = !{!6686}
!6686 = !DISubrange(count: 2048)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !6676, file: !6419, line: 153, baseType: !7, size: 32, offset: 20704)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !469, file: !6, line: 1985, baseType: !13, size: 32, offset: 5504)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !469, file: !6, line: 1986, baseType: !13, size: 32, offset: 5536)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !469, file: !6, line: 1987, baseType: !1093, size: 8, offset: 5568)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !469, file: !6, line: 1996, baseType: !6692, size: 64, offset: 5632)
!6692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6693, size: 64)
!6693 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !6, line: 1996, flags: DIFlagFwdDecl)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !469, file: !6, line: 2007, baseType: !6695, size: 64, offset: 5696)
!6695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6696, size: 64)
!6696 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !6, line: 2007, flags: DIFlagFwdDecl)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !469, file: !6, line: 2011, baseType: !6698, size: 64, offset: 5760)
!6698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6699, size: 64)
!6699 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !6, line: 2011, flags: DIFlagFwdDecl)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !469, file: !6, line: 2015, baseType: !6701, size: 64, offset: 5824)
!6701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6702, size: 64)
!6702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !294, line: 5241, size: 8000, elements: !6703)
!6703 = !{!6704, !7790, !7791, !7792, !7793, !7794, !7795, !7796, !7797, !7798, !7799, !7800, !7801, !7802, !7803, !7804, !7805, !7808, !7811, !7812, !7813, !7814, !7815, !7816, !7817, !7820, !7829, !7830, !7831, !7832, !7833, !7834, !7835, !7836, !7837, !7838, !7839, !7840, !7841, !7949, !7952, !7953, !7954, !7955}
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "wiphy", scope: !6702, file: !294, line: 5242, baseType: !6705, size: 64)
!6705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6706, size: 64)
!6706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wiphy", file: !294, line: 4883, size: 9728, elements: !6707)
!6707 = !{!6708, !6710, !6711, !6716, !6723, !6742, !6743, !6744, !6745, !6746, !6747, !6748, !6749, !6750, !6752, !6753, !6754, !6755, !6756, !6757, !6758, !6759, !6760, !6761, !6762, !6763, !6764, !6765, !6766, !6767, !6768, !6776, !6777, !6778, !6779, !6780, !6781, !6782, !6783, !6784, !6812, !7092, !7093, !7094, !7095, !7096, !7097, !7098, !7099, !7100, !7109, !7110, !7111, !7206, !7224, !7263, !7685, !7686, !7687, !7699, !7706, !7707, !7712, !7713, !7724, !7745, !7748, !7749, !7750, !7751, !7752, !7753, !7754, !7755, !7756, !7757, !7758, !7759, !7760, !7782, !7788, !7789}
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !6706, file: !294, line: 4886, baseType: !6709, size: 48)
!6709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 48, elements: !1320)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "addr_mask", scope: !6706, file: !294, line: 4887, baseType: !6709, size: 48, offset: 48)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "addresses", scope: !6706, file: !294, line: 4889, baseType: !6712, size: 64, offset: 128)
!6712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6713, size: 64)
!6713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mac_address", file: !294, line: 1077, size: 48, elements: !6714)
!6714 = !{!6715}
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !6713, file: !294, line: 1078, baseType: !6709, size: 48)
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "mgmt_stypes", scope: !6706, file: !294, line: 4891, baseType: !6717, size: 64, offset: 192)
!6717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6718, size: 64)
!6718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6719)
!6719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_txrx_stypes", file: !294, line: 4458, size: 32, elements: !6720)
!6720 = !{!6721, !6722}
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !6719, file: !294, line: 4459, baseType: !916, size: 16)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !6719, file: !294, line: 4459, baseType: !916, size: 16, offset: 16)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "iface_combinations", scope: !6706, file: !294, line: 4893, baseType: !6724, size: 64, offset: 256)
!6724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6725, size: 64)
!6725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6726)
!6726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_iface_combination", file: !294, line: 4400, size: 192, elements: !6727)
!6727 = !{!6728, !6735, !6736, !6737, !6738, !6739, !6740, !6741}
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !6726, file: !294, line: 4405, baseType: !6729, size: 64)
!6729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6730, size: 64)
!6730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6731)
!6731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_iface_limit", file: !294, line: 4336, size: 32, elements: !6732)
!6732 = !{!6733, !6734}
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !6731, file: !294, line: 4337, baseType: !916, size: 16)
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !6731, file: !294, line: 4338, baseType: !916, size: 16, offset: 16)
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "num_different_channels", scope: !6726, file: !294, line: 4411, baseType: !1308, size: 32, offset: 64)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "max_interfaces", scope: !6726, file: !294, line: 4417, baseType: !916, size: 16, offset: 96)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "n_limits", scope: !6726, file: !294, line: 4423, baseType: !1116, size: 8, offset: 112)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "beacon_int_infra_match", scope: !6726, file: !294, line: 4430, baseType: !1093, size: 8, offset: 120)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "radar_detect_widths", scope: !6726, file: !294, line: 4436, baseType: !1116, size: 8, offset: 128)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "radar_detect_regions", scope: !6726, file: !294, line: 4442, baseType: !1116, size: 8, offset: 136)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "beacon_int_min_gcd", scope: !6726, file: !294, line: 4455, baseType: !1308, size: 32, offset: 160)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "n_iface_combinations", scope: !6706, file: !294, line: 4894, baseType: !7, size: 32, offset: 320)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "software_iftypes", scope: !6706, file: !294, line: 4895, baseType: !916, size: 16, offset: 352)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "n_addresses", scope: !6706, file: !294, line: 4897, baseType: !916, size: 16, offset: 368)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "interface_modes", scope: !6706, file: !294, line: 4900, baseType: !916, size: 16, offset: 384)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "max_acl_mac_addrs", scope: !6706, file: !294, line: 4902, baseType: !916, size: 16, offset: 400)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6706, file: !294, line: 4904, baseType: !1308, size: 32, offset: 416)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "regulatory_flags", scope: !6706, file: !294, line: 4904, baseType: !1308, size: 32, offset: 448)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !6706, file: !294, line: 4904, baseType: !1308, size: 32, offset: 480)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "ext_features", scope: !6706, file: !294, line: 4905, baseType: !6751, size: 56, offset: 512)
!6751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 56, elements: !6308)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "ap_sme_capa", scope: !6706, file: !294, line: 4907, baseType: !1308, size: 32, offset: 576)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "signal_type", scope: !6706, file: !294, line: 4909, baseType: !293, size: 32, offset: 608)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "bss_priv_size", scope: !6706, file: !294, line: 4911, baseType: !7, size: 32, offset: 640)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "max_scan_ssids", scope: !6706, file: !294, line: 4912, baseType: !1116, size: 8, offset: 672)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "max_sched_scan_reqs", scope: !6706, file: !294, line: 4913, baseType: !1116, size: 8, offset: 680)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "max_sched_scan_ssids", scope: !6706, file: !294, line: 4914, baseType: !1116, size: 8, offset: 688)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "max_match_sets", scope: !6706, file: !294, line: 4915, baseType: !1116, size: 8, offset: 696)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "max_scan_ie_len", scope: !6706, file: !294, line: 4916, baseType: !916, size: 16, offset: 704)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "max_sched_scan_ie_len", scope: !6706, file: !294, line: 4917, baseType: !916, size: 16, offset: 720)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "max_sched_scan_plans", scope: !6706, file: !294, line: 4918, baseType: !1308, size: 32, offset: 736)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "max_sched_scan_plan_interval", scope: !6706, file: !294, line: 4919, baseType: !1308, size: 32, offset: 768)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "max_sched_scan_plan_iterations", scope: !6706, file: !294, line: 4920, baseType: !1308, size: 32, offset: 800)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "n_cipher_suites", scope: !6706, file: !294, line: 4922, baseType: !7, size: 32, offset: 832)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_suites", scope: !6706, file: !294, line: 4923, baseType: !6162, size: 64, offset: 896)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "n_akm_suites", scope: !6706, file: !294, line: 4925, baseType: !7, size: 32, offset: 960)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "akm_suites", scope: !6706, file: !294, line: 4926, baseType: !6162, size: 64, offset: 1024)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "iftype_akm_suites", scope: !6706, file: !294, line: 4928, baseType: !6769, size: 64, offset: 1088)
!6769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6770, size: 64)
!6770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6771)
!6771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wiphy_iftype_akm_suites", file: !294, line: 4684, size: 192, elements: !6772)
!6772 = !{!6773, !6774, !6775}
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "iftypes_mask", scope: !6771, file: !294, line: 4685, baseType: !916, size: 16)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "akm_suites", scope: !6771, file: !294, line: 4686, baseType: !6162, size: 64, offset: 64)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "n_akm_suites", scope: !6771, file: !294, line: 4687, baseType: !7, size: 32, offset: 128)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "num_iftype_akm_suites", scope: !6706, file: !294, line: 4929, baseType: !13, size: 32, offset: 1152)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "retry_short", scope: !6706, file: !294, line: 4931, baseType: !1116, size: 8, offset: 1184)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "retry_long", scope: !6706, file: !294, line: 4932, baseType: !1116, size: 8, offset: 1192)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "frag_threshold", scope: !6706, file: !294, line: 4933, baseType: !1308, size: 32, offset: 1216)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "rts_threshold", scope: !6706, file: !294, line: 4934, baseType: !1308, size: 32, offset: 1248)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_class", scope: !6706, file: !294, line: 4935, baseType: !1116, size: 8, offset: 1280)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !6706, file: !294, line: 4937, baseType: !4944, size: 256, offset: 1288)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "hw_version", scope: !6706, file: !294, line: 4938, baseType: !1308, size: 32, offset: 1568)
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "wowlan", scope: !6706, file: !294, line: 4941, baseType: !6785, size: 64, offset: 1600)
!6785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6786, size: 64)
!6786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6787)
!6787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wiphy_wowlan_support", file: !294, line: 4514, size: 256, elements: !6788)
!6788 = !{!6789, !6790, !6791, !6792, !6793, !6794, !6795}
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6787, file: !294, line: 4515, baseType: !1308, size: 32)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "n_patterns", scope: !6787, file: !294, line: 4516, baseType: !7, size: 32, offset: 32)
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_max_len", scope: !6787, file: !294, line: 4517, baseType: !7, size: 32, offset: 64)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_min_len", scope: !6787, file: !294, line: 4518, baseType: !7, size: 32, offset: 96)
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !6787, file: !294, line: 4519, baseType: !7, size: 32, offset: 128)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "max_nd_match_sets", scope: !6787, file: !294, line: 4520, baseType: !7, size: 32, offset: 160)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "tcp", scope: !6787, file: !294, line: 4521, baseType: !6796, size: 64, offset: 192)
!6796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6797, size: 64)
!6797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6798)
!6798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wiphy_wowlan_tcp_support", file: !294, line: 4491, size: 192, elements: !6799)
!6799 = !{!6800, !6808, !6809, !6810, !6811}
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "tok", scope: !6798, file: !294, line: 4492, baseType: !6801, size: 64)
!6801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6802, size: 64)
!6802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6803)
!6803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nl80211_wowlan_tcp_data_token_feature", file: !308, line: 5266, size: 96, elements: !6804)
!6804 = !{!6805, !6806, !6807}
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "min_len", scope: !6803, file: !308, line: 5267, baseType: !650, size: 32)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "max_len", scope: !6803, file: !308, line: 5267, baseType: !650, size: 32, offset: 32)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "bufsize", scope: !6803, file: !308, line: 5267, baseType: !650, size: 32, offset: 64)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "data_payload_max", scope: !6798, file: !294, line: 4493, baseType: !1308, size: 32, offset: 64)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "data_interval_max", scope: !6798, file: !294, line: 4494, baseType: !1308, size: 32, offset: 96)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "wake_payload_max", scope: !6798, file: !294, line: 4495, baseType: !1308, size: 32, offset: 128)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !6798, file: !294, line: 4496, baseType: !1093, size: 8, offset: 160)
!6812 = !DIDerivedType(tag: DW_TAG_member, name: "wowlan_config", scope: !6706, file: !294, line: 4942, baseType: !6813, size: 64, offset: 1664)
!6813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6814, size: 64)
!6814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cfg80211_wowlan", file: !294, line: 2963, size: 320, elements: !6815)
!6815 = !{!6816, !6817, !6818, !6819, !6820, !6821, !6822, !6823, !6831, !7016, !7017}
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "any", scope: !6814, file: !294, line: 2964, baseType: !1093, size: 8)
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !6814, file: !294, line: 2964, baseType: !1093, size: 8, offset: 8)
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "magic_pkt", scope: !6814, file: !294, line: 2964, baseType: !1093, size: 8, offset: 16)
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "gtk_rekey_failure", scope: !6814, file: !294, line: 2964, baseType: !1093, size: 8, offset: 24)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "eap_identity_req", scope: !6814, file: !294, line: 2965, baseType: !1093, size: 8, offset: 32)
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "four_way_handshake", scope: !6814, file: !294, line: 2965, baseType: !1093, size: 8, offset: 40)
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "rfkill_release", scope: !6814, file: !294, line: 2966, baseType: !1093, size: 8, offset: 48)
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "patterns", scope: !6814, file: !294, line: 2967, baseType: !6824, size: 64, offset: 64)
!6824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6825, size: 64)
!6825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cfg80211_pkt_pattern", file: !294, line: 2904, size: 192, elements: !6826)
!6826 = !{!6827, !6828, !6829, !6830}
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !6825, file: !294, line: 2905, baseType: !6164, size: 64)
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "pattern", scope: !6825, file: !294, line: 2905, baseType: !6164, size: 64, offset: 64)
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_len", scope: !6825, file: !294, line: 2906, baseType: !7, size: 32, offset: 128)
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_offset", scope: !6825, file: !294, line: 2907, baseType: !7, size: 32, offset: 160)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "tcp", scope: !6814, file: !294, line: 2968, baseType: !6832, size: 64, offset: 128)
!6832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6833, size: 64)
!6833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cfg80211_wowlan_tcp", file: !294, line: 2929, size: 768, elements: !6834)
!6834 = !{!6835, !6991, !6992, !6993, !6994, !6995, !6996, !6997, !6998, !7004, !7005, !7006, !7007, !7008, !7009}
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !6833, file: !294, line: 2930, baseType: !6836, size: 64)
!6836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6837, size: 64)
!6837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket", file: !6838, line: 116, size: 704, elements: !6839)
!6838 = !DIFile(filename: "./include/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!6839 = !{!6840, !6842, !6843, !6844, !6845, !6846, !6984}
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6837, file: !6838, line: 117, baseType: !6841, size: 32)
!6841 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_state", file: !300, line: 54, baseType: !299)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6837, file: !6838, line: 119, baseType: !641, size: 16, offset: 32)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6837, file: !6838, line: 121, baseType: !517, size: 64, offset: 64)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6837, file: !6838, line: 123, baseType: !1634, size: 64, offset: 128)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !6837, file: !6838, line: 124, baseType: !786, size: 64, offset: 192)
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6837, file: !6838, line: 125, baseType: !6847, size: 64, offset: 256)
!6847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6848, size: 64)
!6848 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6849)
!6849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto_ops", file: !6838, line: 139, size: 1728, elements: !6850)
!6850 = !{!6851, !6852, !6853, !6854, !6858, !6863, !6867, !6871, !6875, !6876, !6880, !6884, !6888, !6892, !6893, !6907, !6911, !6915, !6934, !6938, !6942, !6946, !6950, !6954, !6955, !6975, !6979, !6983}
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !6849, file: !6838, line: 140, baseType: !7, size: 32)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6849, file: !6838, line: 141, baseType: !13, size: 32, offset: 32)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6849, file: !6838, line: 142, baseType: !1301, size: 64, offset: 64)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6849, file: !6838, line: 143, baseType: !6855, size: 64, offset: 128)
!6855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6856, size: 64)
!6856 = !DISubroutineType(types: !6857)
!6857 = !{!7, !6836}
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !6849, file: !6838, line: 144, baseType: !6859, size: 64, offset: 192)
!6859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6860, size: 64)
!6860 = !DISubroutineType(types: !6861)
!6861 = !{!7, !6836, !6862, !7}
!6862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !6849, file: !6838, line: 147, baseType: !6864, size: 64, offset: 256)
!6864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6865, size: 64)
!6865 = !DISubroutineType(types: !6866)
!6866 = !{!7, !6836, !6862, !7, !7}
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "socketpair", scope: !6849, file: !6838, line: 150, baseType: !6868, size: 64, offset: 320)
!6868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6869, size: 64)
!6869 = !DISubroutineType(types: !6870)
!6870 = !{!7, !6836, !6836}
!6871 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !6849, file: !6838, line: 152, baseType: !6872, size: 64, offset: 384)
!6872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6873, size: 64)
!6873 = !DISubroutineType(types: !6874)
!6874 = !{!7, !6836, !6836, !7, !1093}
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "getname", scope: !6849, file: !6838, line: 154, baseType: !6859, size: 64, offset: 448)
!6876 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !6849, file: !6838, line: 157, baseType: !6877, size: 64, offset: 512)
!6877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6878, size: 64)
!6878 = !DISubroutineType(types: !6879)
!6879 = !{!5147, !1634, !6836, !5148}
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !6849, file: !6838, line: 159, baseType: !6881, size: 64, offset: 576)
!6881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6882, size: 64)
!6882 = !DISubroutineType(types: !6883)
!6883 = !{!7, !6836, !13, !517}
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "gettstamp", scope: !6849, file: !6838, line: 165, baseType: !6885, size: 64, offset: 640)
!6885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6886, size: 64)
!6886 = !DISubroutineType(types: !6887)
!6887 = !{!7, !6836, !622, !1093, !1093}
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "listen", scope: !6849, file: !6838, line: 167, baseType: !6889, size: 64, offset: 704)
!6889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6890, size: 64)
!6890 = !DISubroutineType(types: !6891)
!6891 = !{!7, !6836, !7}
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6849, file: !6838, line: 168, baseType: !6889, size: 64, offset: 768)
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !6849, file: !6838, line: 169, baseType: !6894, size: 64, offset: 832)
!6894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6895, size: 64)
!6895 = !DISubroutineType(types: !6896)
!6896 = !{!7, !6836, !7, !7, !6897, !13}
!6897 = !DIDerivedType(tag: DW_TAG_typedef, name: "sockptr_t", file: !6898, line: 20, baseType: !6899)
!6898 = !DIFile(filename: "./include/linux/sockptr.h", directory: "/home/lizy2001/genbc/linux")
!6899 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6898, line: 14, size: 128, elements: !6900)
!6900 = !{!6901, !6906}
!6901 = !DIDerivedType(tag: DW_TAG_member, scope: !6899, file: !6898, line: 15, baseType: !6902, size: 64)
!6902 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6899, file: !6898, line: 15, size: 64, elements: !6903)
!6903 = !{!6904, !6905}
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "kernel", scope: !6902, file: !6898, line: 16, baseType: !622, size: 64)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !6902, file: !6898, line: 17, baseType: !622, size: 64)
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "is_kernel", scope: !6899, file: !6898, line: 19, baseType: !1093, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!6907 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !6849, file: !6838, line: 172, baseType: !6908, size: 64, offset: 896)
!6908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6909, size: 64)
!6909 = !DISubroutineType(types: !6910)
!6910 = !{!7, !6836, !7, !7, !676, !1321}
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !6849, file: !6838, line: 174, baseType: !6912, size: 64, offset: 960)
!6912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6913, size: 64)
!6913 = !DISubroutineType(types: !6914)
!6914 = !{null, !1970, !6836}
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !6849, file: !6838, line: 175, baseType: !6916, size: 64, offset: 1024)
!6916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6917, size: 64)
!6917 = !DISubroutineType(types: !6918)
!6918 = !{!7, !6836, !6919, !1358}
!6919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6920, size: 64)
!6920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !663, line: 50, size: 768, elements: !6921)
!6921 = !{!6922, !6923, !6924, !6925, !6930, !6931, !6932, !6933}
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !6920, file: !663, line: 51, baseType: !622, size: 64)
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !6920, file: !663, line: 52, baseType: !7, size: 32, offset: 64)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iter", scope: !6920, file: !663, line: 53, baseType: !2166, size: 320, offset: 128)
!6925 = !DIDerivedType(tag: DW_TAG_member, scope: !6920, file: !663, line: 60, baseType: !6926, size: 64, offset: 448)
!6926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6920, file: !663, line: 60, size: 64, elements: !6927)
!6927 = !{!6928, !6929}
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !6926, file: !663, line: 61, baseType: !622, size: 64)
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_user", scope: !6926, file: !663, line: 62, baseType: !622, size: 64)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_is_user", scope: !6920, file: !663, line: 64, baseType: !1093, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !6920, file: !663, line: 65, baseType: !1359, size: 64, offset: 576)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !6920, file: !663, line: 66, baseType: !13, size: 32, offset: 640)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iocb", scope: !6920, file: !663, line: 67, baseType: !2145, size: 64, offset: 704)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !6849, file: !6838, line: 185, baseType: !6935, size: 64, offset: 1088)
!6935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6936, size: 64)
!6936 = !DISubroutineType(types: !6937)
!6937 = !{!7, !6836, !6919, !1358, !7}
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6849, file: !6838, line: 187, baseType: !6939, size: 64, offset: 1152)
!6939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6940, size: 64)
!6940 = !DISubroutineType(types: !6941)
!6941 = !{!7, !1634, !6836, !2416}
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !6849, file: !6838, line: 189, baseType: !6943, size: 64, offset: 1216)
!6943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6944, size: 64)
!6944 = !DISubroutineType(types: !6945)
!6945 = !{!1839, !6836, !2036, !7, !1358, !7}
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !6849, file: !6838, line: 191, baseType: !6947, size: 64, offset: 1280)
!6947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6948, size: 64)
!6948 = !DISubroutineType(types: !6949)
!6949 = !{!1839, !6836, !2011, !2200, !1358, !13}
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "set_peek_off", scope: !6849, file: !6838, line: 193, baseType: !6951, size: 64, offset: 1344)
!6951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6952, size: 64)
!6952 = !DISubroutineType(types: !6953)
!6953 = !{!7, !786, !7}
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "peek_len", scope: !6849, file: !6838, line: 194, baseType: !6855, size: 64, offset: 1408)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "read_sock", scope: !6849, file: !6838, line: 199, baseType: !6956, size: 64, offset: 1472)
!6956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6957, size: 64)
!6957 = !DISubroutineType(types: !6958)
!6958 = !{!7, !786, !6959, !6971}
!6959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6960, size: 64)
!6960 = !DIDerivedType(tag: DW_TAG_typedef, name: "read_descriptor_t", file: !78, line: 362, baseType: !6961)
!6961 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 354, size: 256, elements: !6962)
!6962 = !{!6963, !6964, !6965, !6970}
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !6961, file: !78, line: 355, baseType: !1358, size: 64)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6961, file: !78, line: 356, baseType: !1358, size: 64, offset: 64)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !6961, file: !78, line: 360, baseType: !6966, size: 64, offset: 128)
!6966 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6961, file: !78, line: 357, size: 64, elements: !6967)
!6967 = !{!6968, !6969}
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !6966, file: !78, line: 358, baseType: !676, size: 64)
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6966, file: !78, line: 359, baseType: !622, size: 64)
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !6961, file: !78, line: 361, baseType: !7, size: 32, offset: 192)
!6971 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_read_actor_t", file: !6838, line: 136, baseType: !6972)
!6972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6973, size: 64)
!6973 = !DISubroutineType(types: !6974)
!6974 = !{!7, !6959, !756, !13, !1358}
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage_locked", scope: !6849, file: !6838, line: 201, baseType: !6976, size: 64, offset: 1536)
!6976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6977, size: 64)
!6977 = !DISubroutineType(types: !6978)
!6978 = !{!7, !786, !2036, !7, !1358, !7}
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg_locked", scope: !6849, file: !6838, line: 203, baseType: !6980, size: 64, offset: 1600)
!6980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6981, size: 64)
!6981 = !DISubroutineType(types: !6982)
!6982 = !{!7, !786, !6919, !1358}
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "set_rcvlowat", scope: !6849, file: !6838, line: 205, baseType: !6951, size: 64, offset: 1664)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !6837, file: !6838, line: 127, baseType: !6985, size: 384, offset: 320)
!6985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket_wq", file: !6838, line: 98, size: 384, elements: !6986)
!6986 = !{!6987, !6988, !6989, !6990}
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !6985, file: !6838, line: 100, baseType: !2206, size: 128)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_list", scope: !6985, file: !6838, line: 101, baseType: !2225, size: 64, offset: 128)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6985, file: !6838, line: 102, baseType: !517, size: 64, offset: 192)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6985, file: !6838, line: 103, baseType: !504, size: 128, align: 64, offset: 256)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !6833, file: !294, line: 2931, baseType: !3540, size: 32, offset: 64)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !6833, file: !294, line: 2931, baseType: !3540, size: 32, offset: 96)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "src_port", scope: !6833, file: !294, line: 2932, baseType: !916, size: 16, offset: 128)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "dst_port", scope: !6833, file: !294, line: 2932, baseType: !916, size: 16, offset: 144)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mac", scope: !6833, file: !294, line: 2933, baseType: !6709, size: 48, offset: 160)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "payload_len", scope: !6833, file: !294, line: 2934, baseType: !7, size: 32, offset: 224)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !6833, file: !294, line: 2935, baseType: !6164, size: 64, offset: 256)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "payload_seq", scope: !6833, file: !294, line: 2936, baseType: !6999, size: 96, offset: 320)
!6999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nl80211_wowlan_tcp_data_seq", file: !308, line: 5244, size: 96, elements: !7000)
!7000 = !{!7001, !7002, !7003}
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6999, file: !308, line: 5245, baseType: !650, size: 32)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6999, file: !308, line: 5245, baseType: !650, size: 32, offset: 32)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6999, file: !308, line: 5245, baseType: !650, size: 32, offset: 64)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "data_interval", scope: !6833, file: !294, line: 2937, baseType: !1308, size: 32, offset: 416)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "wake_len", scope: !6833, file: !294, line: 2938, baseType: !1308, size: 32, offset: 448)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "wake_data", scope: !6833, file: !294, line: 2939, baseType: !6164, size: 64, offset: 512)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "wake_mask", scope: !6833, file: !294, line: 2939, baseType: !6164, size: 64, offset: 576)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "tokens_size", scope: !6833, file: !294, line: 2940, baseType: !1308, size: 32, offset: 640)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "payload_tok", scope: !6833, file: !294, line: 2942, baseType: !7010, size: 64, offset: 672)
!7010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nl80211_wowlan_tcp_data_token", file: !308, line: 5255, size: 64, elements: !7011)
!7011 = !{!7012, !7013, !7014}
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !7010, file: !308, line: 5256, baseType: !650, size: 32)
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7010, file: !308, line: 5256, baseType: !650, size: 32, offset: 32)
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "token_stream", scope: !7010, file: !308, line: 5257, baseType: !7015, offset: 64)
!7015 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, elements: !514)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "n_patterns", scope: !6814, file: !294, line: 2969, baseType: !7, size: 32, offset: 192)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "nd_config", scope: !6814, file: !294, line: 2970, baseType: !7018, size: 64, offset: 256)
!7018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7019, size: 64)
!7019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cfg80211_sched_scan_request", file: !294, line: 2305, size: 1536, elements: !7020)
!7020 = !{!7021, !7022, !7029, !7030, !7031, !7032, !7033, !7034, !7035, !7044, !7045, !7046, !7047, !7053, !7054, !7055, !7056, !7057, !7059, !7064, !7065, !7066, !7067, !7068, !7069, !7070, !7071, !7072}
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "reqid", scope: !7019, file: !294, line: 2306, baseType: !536, size: 64)
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "ssids", scope: !7019, file: !294, line: 2307, baseType: !7023, size: 64, offset: 64)
!7023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7024, size: 64)
!7024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cfg80211_ssid", file: !294, line: 2089, size: 264, elements: !7025)
!7025 = !{!7026, !7028}
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "ssid", scope: !7024, file: !294, line: 2090, baseType: !7027, size: 256)
!7027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 256, elements: !1141)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "ssid_len", scope: !7024, file: !294, line: 2091, baseType: !1116, size: 8, offset: 256)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "n_ssids", scope: !7019, file: !294, line: 2308, baseType: !7, size: 32, offset: 128)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "n_channels", scope: !7019, file: !294, line: 2309, baseType: !1308, size: 32, offset: 160)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "scan_width", scope: !7019, file: !294, line: 2310, baseType: !307, size: 32, offset: 192)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !7019, file: !294, line: 2311, baseType: !6164, size: 64, offset: 256)
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "ie_len", scope: !7019, file: !294, line: 2312, baseType: !1358, size: 64, offset: 320)
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7019, file: !294, line: 2313, baseType: !1308, size: 32, offset: 384)
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "match_sets", scope: !7019, file: !294, line: 2314, baseType: !7036, size: 64, offset: 448)
!7036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7037, size: 64)
!7037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cfg80211_match_set", file: !294, line: 2223, size: 512, elements: !7038)
!7038 = !{!7039, !7040, !7041, !7042}
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "ssid", scope: !7037, file: !294, line: 2224, baseType: !7024, size: 264)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "bssid", scope: !7037, file: !294, line: 2225, baseType: !6709, size: 48, offset: 264)
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "rssi_thold", scope: !7037, file: !294, line: 2226, baseType: !2860, size: 32, offset: 320)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "per_band_rssi_thold", scope: !7037, file: !294, line: 2227, baseType: !7043, size: 160, offset: 352)
!7043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2860, size: 160, elements: !2944)
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "n_match_sets", scope: !7019, file: !294, line: 2315, baseType: !7, size: 32, offset: 512)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "min_rssi_thold", scope: !7019, file: !294, line: 2316, baseType: !2860, size: 32, offset: 544)
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !7019, file: !294, line: 2317, baseType: !1308, size: 32, offset: 576)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "scan_plans", scope: !7019, file: !294, line: 2318, baseType: !7048, size: 64, offset: 640)
!7048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7049, size: 64)
!7049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cfg80211_sched_scan_plan", file: !294, line: 2239, size: 64, elements: !7050)
!7050 = !{!7051, !7052}
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !7049, file: !294, line: 2240, baseType: !1308, size: 32)
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !7049, file: !294, line: 2241, baseType: !1308, size: 32, offset: 32)
!7053 = !DIDerivedType(tag: DW_TAG_member, name: "n_scan_plans", scope: !7019, file: !294, line: 2319, baseType: !7, size: 32, offset: 704)
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "mac_addr", scope: !7019, file: !294, line: 2321, baseType: !6709, size: 48, align: 16, offset: 736)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "mac_addr_mask", scope: !7019, file: !294, line: 2322, baseType: !6709, size: 48, align: 16, offset: 784)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "relative_rssi_set", scope: !7019, file: !294, line: 2324, baseType: !1093, size: 8, offset: 832)
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "relative_rssi", scope: !7019, file: !294, line: 2325, baseType: !7058, size: 8, offset: 840)
!7058 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !537, line: 16, baseType: !6299)
!7059 = !DIDerivedType(tag: DW_TAG_member, name: "rssi_adjust", scope: !7019, file: !294, line: 2326, baseType: !7060, size: 64, offset: 864)
!7060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cfg80211_bss_select_adjust", file: !294, line: 2250, size: 64, elements: !7061)
!7061 = !{!7062, !7063}
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "band", scope: !7060, file: !294, line: 2251, baseType: !315, size: 32)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7060, file: !294, line: 2252, baseType: !7058, size: 8, offset: 32)
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "wiphy", scope: !7019, file: !294, line: 2329, baseType: !6705, size: 64, offset: 960)
!7065 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7019, file: !294, line: 2330, baseType: !495, size: 64, offset: 1024)
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !7019, file: !294, line: 2331, baseType: !517, size: 64, offset: 1088)
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "report_results", scope: !7019, file: !294, line: 2332, baseType: !1093, size: 8, offset: 1152)
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !7019, file: !294, line: 2333, baseType: !504, size: 128, align: 64, offset: 1216)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "owner_nlportid", scope: !7019, file: !294, line: 2334, baseType: !1308, size: 32, offset: 1344)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "nl_owner_dead", scope: !7019, file: !294, line: 2335, baseType: !1093, size: 8, offset: 1376)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7019, file: !294, line: 2336, baseType: !489, size: 128, offset: 1408)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !7019, file: !294, line: 2339, baseType: !7073, offset: 1536)
!7073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7074, elements: !514)
!7074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7075, size: 64)
!7075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_channel", file: !294, line: 165, size: 512, elements: !7076)
!7076 = !{!7077, !7078, !7079, !7080, !7081, !7082, !7083, !7084, !7085, !7086, !7087, !7088, !7089, !7090, !7091}
!7077 = !DIDerivedType(tag: DW_TAG_member, name: "band", scope: !7075, file: !294, line: 166, baseType: !315, size: 32)
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "center_freq", scope: !7075, file: !294, line: 167, baseType: !1308, size: 32, offset: 32)
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "freq_offset", scope: !7075, file: !294, line: 168, baseType: !916, size: 16, offset: 64)
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "hw_value", scope: !7075, file: !294, line: 169, baseType: !916, size: 16, offset: 80)
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7075, file: !294, line: 170, baseType: !1308, size: 32, offset: 96)
!7082 = !DIDerivedType(tag: DW_TAG_member, name: "max_antenna_gain", scope: !7075, file: !294, line: 171, baseType: !7, size: 32, offset: 128)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "max_power", scope: !7075, file: !294, line: 172, baseType: !7, size: 32, offset: 160)
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "max_reg_power", scope: !7075, file: !294, line: 173, baseType: !7, size: 32, offset: 192)
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "beacon_found", scope: !7075, file: !294, line: 174, baseType: !1093, size: 8, offset: 224)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "orig_flags", scope: !7075, file: !294, line: 175, baseType: !1308, size: 32, offset: 256)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "orig_mag", scope: !7075, file: !294, line: 176, baseType: !7, size: 32, offset: 288)
!7088 = !DIDerivedType(tag: DW_TAG_member, name: "orig_mpwr", scope: !7075, file: !294, line: 176, baseType: !7, size: 32, offset: 320)
!7089 = !DIDerivedType(tag: DW_TAG_member, name: "dfs_state", scope: !7075, file: !294, line: 177, baseType: !323, size: 32, offset: 352)
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "dfs_state_entered", scope: !7075, file: !294, line: 178, baseType: !517, size: 64, offset: 384)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "dfs_cac_ms", scope: !7075, file: !294, line: 179, baseType: !13, size: 32, offset: 448)
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "max_remain_on_channel_duration", scope: !6706, file: !294, line: 4945, baseType: !916, size: 16, offset: 1728)
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "max_num_pmkids", scope: !6706, file: !294, line: 4947, baseType: !1116, size: 8, offset: 1744)
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "available_antennas_tx", scope: !6706, file: !294, line: 4949, baseType: !1308, size: 32, offset: 1760)
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "available_antennas_rx", scope: !6706, file: !294, line: 4950, baseType: !1308, size: 32, offset: 1792)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "probe_resp_offload", scope: !6706, file: !294, line: 4952, baseType: !1308, size: 32, offset: 1824)
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "extended_capabilities", scope: !6706, file: !294, line: 4954, baseType: !6164, size: 64, offset: 1856)
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "extended_capabilities_mask", scope: !6706, file: !294, line: 4954, baseType: !6164, size: 64, offset: 1920)
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "extended_capabilities_len", scope: !6706, file: !294, line: 4955, baseType: !1116, size: 8, offset: 1984)
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "iftype_ext_capab", scope: !6706, file: !294, line: 4957, baseType: !7101, size: 64, offset: 2048)
!7101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7102, size: 64)
!7102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7103)
!7103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wiphy_iftype_ext_capab", file: !294, line: 4628, size: 256, elements: !7104)
!7104 = !{!7105, !7106, !7107, !7108}
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "iftype", scope: !7103, file: !294, line: 4629, baseType: !328, size: 32)
!7106 = !DIDerivedType(tag: DW_TAG_member, name: "extended_capabilities", scope: !7103, file: !294, line: 4630, baseType: !6164, size: 64, offset: 64)
!7107 = !DIDerivedType(tag: DW_TAG_member, name: "extended_capabilities_mask", scope: !7103, file: !294, line: 4631, baseType: !6164, size: 64, offset: 128)
!7108 = !DIDerivedType(tag: DW_TAG_member, name: "extended_capabilities_len", scope: !7103, file: !294, line: 4632, baseType: !1116, size: 8, offset: 192)
!7109 = !DIDerivedType(tag: DW_TAG_member, name: "num_iftype_ext_capab", scope: !6706, file: !294, line: 4958, baseType: !13, size: 32, offset: 2112)
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "privid", scope: !6706, file: !294, line: 4960, baseType: !3590, size: 64, offset: 2176)
!7111 = !DIDerivedType(tag: DW_TAG_member, name: "bands", scope: !6706, file: !294, line: 4962, baseType: !7112, size: 320, offset: 2240)
!7112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7113, size: 320, elements: !2944)
!7113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7114, size: 64)
!7114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_supported_band", file: !294, line: 486, size: 832, elements: !7115)
!7115 = !{!7116, !7117, !7125, !7126, !7127, !7128, !7146, !7158, !7165, !7170, !7171}
!7116 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !7114, file: !294, line: 487, baseType: !7074, size: 64)
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "bitrates", scope: !7114, file: !294, line: 488, baseType: !7118, size: 64, offset: 64)
!7118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7119, size: 64)
!7119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_rate", file: !294, line: 262, size: 96, elements: !7120)
!7120 = !{!7121, !7122, !7123, !7124}
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7119, file: !294, line: 263, baseType: !1308, size: 32)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "bitrate", scope: !7119, file: !294, line: 264, baseType: !916, size: 16, offset: 32)
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "hw_value", scope: !7119, file: !294, line: 265, baseType: !916, size: 16, offset: 48)
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "hw_value_short", scope: !7119, file: !294, line: 265, baseType: !916, size: 16, offset: 64)
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "band", scope: !7114, file: !294, line: 489, baseType: !315, size: 32, offset: 128)
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "n_channels", scope: !7114, file: !294, line: 490, baseType: !7, size: 32, offset: 160)
!7127 = !DIDerivedType(tag: DW_TAG_member, name: "n_bitrates", scope: !7114, file: !294, line: 491, baseType: !7, size: 32, offset: 192)
!7128 = !DIDerivedType(tag: DW_TAG_member, name: "ht_cap", scope: !7114, file: !294, line: 492, baseType: !7129, size: 176, offset: 224)
!7129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_sta_ht_cap", file: !294, line: 329, size: 176, elements: !7130)
!7130 = !{!7131, !7132, !7133, !7134, !7135}
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !7129, file: !294, line: 330, baseType: !916, size: 16)
!7132 = !DIDerivedType(tag: DW_TAG_member, name: "ht_supported", scope: !7129, file: !294, line: 331, baseType: !1093, size: 8, offset: 16)
!7133 = !DIDerivedType(tag: DW_TAG_member, name: "ampdu_factor", scope: !7129, file: !294, line: 332, baseType: !1116, size: 8, offset: 24)
!7134 = !DIDerivedType(tag: DW_TAG_member, name: "ampdu_density", scope: !7129, file: !294, line: 333, baseType: !1116, size: 8, offset: 32)
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "mcs", scope: !7129, file: !294, line: 334, baseType: !7136, size: 128, offset: 40)
!7136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_mcs_info", file: !7137, line: 1481, size: 128, elements: !7138)
!7137 = !DIFile(filename: "./include/linux/ieee80211.h", directory: "/home/lizy2001/genbc/linux")
!7138 = !{!7139, !7141, !7143, !7144}
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mask", scope: !7136, file: !7137, line: 1482, baseType: !7140, size: 80)
!7140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 80, elements: !3192)
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "rx_highest", scope: !7136, file: !7137, line: 1483, baseType: !7142, size: 16, offset: 80)
!7142 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !860, line: 29, baseType: !610)
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "tx_params", scope: !7136, file: !7137, line: 1484, baseType: !1116, size: 8, offset: 96)
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7136, file: !7137, line: 1485, baseType: !7145, size: 24, offset: 104)
!7145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 24, elements: !1909)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "vht_cap", scope: !7114, file: !294, line: 493, baseType: !7147, size: 128, offset: 416)
!7147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_sta_vht_cap", file: !294, line: 347, size: 128, elements: !7148)
!7148 = !{!7149, !7150, !7151}
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "vht_supported", scope: !7147, file: !294, line: 348, baseType: !1093, size: 8)
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !7147, file: !294, line: 349, baseType: !1308, size: 32, offset: 32)
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "vht_mcs", scope: !7147, file: !294, line: 350, baseType: !7152, size: 64, offset: 64)
!7152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_vht_mcs_info", file: !7137, line: 1688, size: 64, elements: !7153)
!7153 = !{!7154, !7155, !7156, !7157}
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mcs_map", scope: !7152, file: !7137, line: 1689, baseType: !7142, size: 16)
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "rx_highest", scope: !7152, file: !7137, line: 1690, baseType: !7142, size: 16, offset: 16)
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "tx_mcs_map", scope: !7152, file: !7137, line: 1691, baseType: !7142, size: 16, offset: 32)
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "tx_highest", scope: !7152, file: !7137, line: 1692, baseType: !7142, size: 16, offset: 48)
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "s1g_cap", scope: !7114, file: !294, line: 494, baseType: !7159, size: 128, offset: 544)
!7159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_sta_s1g_cap", file: !294, line: 455, size: 128, elements: !7160)
!7160 = !{!7161, !7162, !7163}
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "s1g", scope: !7159, file: !294, line: 456, baseType: !1093, size: 8)
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !7159, file: !294, line: 457, baseType: !7140, size: 80, offset: 8)
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "nss_mcs", scope: !7159, file: !294, line: 458, baseType: !7164, size: 40, offset: 88)
!7164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 40, elements: !2944)
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "edmg_cap", scope: !7114, file: !294, line: 495, baseType: !7166, size: 64, offset: 672)
!7166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_edmg", file: !294, line: 440, size: 64, elements: !7167)
!7167 = !{!7168, !7169}
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !7166, file: !294, line: 441, baseType: !1116, size: 8)
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "bw_config", scope: !7166, file: !294, line: 442, baseType: !345, size: 32, offset: 32)
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "n_iftype_data", scope: !7114, file: !294, line: 496, baseType: !916, size: 16, offset: 736)
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "iftype_data", scope: !7114, file: !294, line: 497, baseType: !7172, size: 64, offset: 768)
!7172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7173, size: 64)
!7173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7174)
!7174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_sband_iftype_data", file: !294, line: 385, size: 480, elements: !7175)
!7175 = !{!7176, !7177, !7202}
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "types_mask", scope: !7174, file: !294, line: 386, baseType: !916, size: 16)
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "he_cap", scope: !7174, file: !294, line: 387, baseType: !7178, size: 440, offset: 16)
!7178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_sta_he_cap", file: !294, line: 366, size: 440, elements: !7179)
!7179 = !{!7180, !7181, !7189, !7198}
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "has_he", scope: !7178, file: !294, line: 367, baseType: !1093, size: 8)
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "he_cap_elem", scope: !7178, file: !294, line: 368, baseType: !7182, size: 136, offset: 8)
!7182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_he_cap_elem", file: !7137, line: 1774, size: 136, elements: !7183)
!7183 = !{!7184, !7185}
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "mac_cap_info", scope: !7182, file: !7137, line: 1775, baseType: !6709, size: 48)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "phy_cap_info", scope: !7182, file: !7137, line: 1776, baseType: !7186, size: 88, offset: 48)
!7186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 88, elements: !7187)
!7187 = !{!7188}
!7188 = !DISubrange(count: 11)
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "he_mcs_nss_supp", scope: !7178, file: !294, line: 369, baseType: !7190, size: 96, offset: 144)
!7190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_he_mcs_nss_supp", file: !7137, line: 1821, size: 96, elements: !7191)
!7191 = !{!7192, !7193, !7194, !7195, !7196, !7197}
!7192 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mcs_80", scope: !7190, file: !7137, line: 1822, baseType: !7142, size: 16)
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "tx_mcs_80", scope: !7190, file: !7137, line: 1823, baseType: !7142, size: 16, offset: 16)
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mcs_160", scope: !7190, file: !7137, line: 1824, baseType: !7142, size: 16, offset: 32)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "tx_mcs_160", scope: !7190, file: !7137, line: 1825, baseType: !7142, size: 16, offset: 48)
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mcs_80p80", scope: !7190, file: !7137, line: 1826, baseType: !7142, size: 16, offset: 64)
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "tx_mcs_80p80", scope: !7190, file: !7137, line: 1827, baseType: !7142, size: 16, offset: 80)
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "ppe_thres", scope: !7178, file: !294, line: 370, baseType: !7199, size: 200, offset: 240)
!7199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 200, elements: !7200)
!7200 = !{!7201}
!7201 = !DISubrange(count: 25)
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "he_6ghz_capa", scope: !7174, file: !294, line: 388, baseType: !7203, size: 16, offset: 456)
!7203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_he_6ghz_capa", file: !7137, line: 3473, size: 16, elements: !7204)
!7204 = !{!7205}
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "capa", scope: !7203, file: !7137, line: 3475, baseType: !7142, size: 16)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "reg_notifier", scope: !6706, file: !294, line: 4964, baseType: !7207, size: 64, offset: 2560)
!7207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7208, size: 64)
!7208 = !DISubroutineType(types: !7209)
!7209 = !{null, !6705, !7210}
!7210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7211, size: 64)
!7211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "regulatory_request", file: !377, line: 77, size: 512, elements: !7212)
!7212 = !{!7213, !7214, !7215, !7216, !7217, !7219, !7220, !7221, !7222, !7223}
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !7211, file: !377, line: 78, baseType: !504, size: 128, align: 64)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "wiphy_idx", scope: !7211, file: !377, line: 79, baseType: !7, size: 32, offset: 128)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "initiator", scope: !7211, file: !377, line: 80, baseType: !359, size: 32, offset: 160)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "user_reg_hint_type", scope: !7211, file: !377, line: 81, baseType: !365, size: 32, offset: 192)
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "alpha2", scope: !7211, file: !377, line: 82, baseType: !7218, size: 24, offset: 224)
!7218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 24, elements: !1909)
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "dfs_region", scope: !7211, file: !377, line: 83, baseType: !370, size: 32, offset: 256)
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "intersect", scope: !7211, file: !377, line: 84, baseType: !1093, size: 8, offset: 288)
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "processed", scope: !7211, file: !377, line: 85, baseType: !1093, size: 8, offset: 296)
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "country_ie_env", scope: !7211, file: !377, line: 86, baseType: !376, size: 32, offset: 320)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7211, file: !377, line: 87, baseType: !489, size: 128, offset: 384)
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "regd", scope: !6706, file: !294, line: 4969, baseType: !7225, size: 64, offset: 2624)
!7225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7226, size: 64)
!7226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7227)
!7227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_regdomain", file: !377, line: 226, size: 256, elements: !7228)
!7228 = !{!7229, !7230, !7231, !7232, !7233}
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !7227, file: !377, line: 227, baseType: !504, size: 128, align: 64)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "n_reg_rules", scope: !7227, file: !377, line: 228, baseType: !1308, size: 32, offset: 128)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "alpha2", scope: !7227, file: !377, line: 229, baseType: !7218, size: 24, offset: 160)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "dfs_region", scope: !7227, file: !377, line: 230, baseType: !370, size: 32, offset: 192)
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "reg_rules", scope: !7227, file: !377, line: 231, baseType: !7234, offset: 224)
!7234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7235, elements: !514)
!7235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_reg_rule", file: !377, line: 217, size: 768, elements: !7236)
!7236 = !{!7237, !7243, !7248, !7260, !7261, !7262}
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "freq_range", scope: !7235, file: !377, line: 218, baseType: !7238, size: 96)
!7238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_freq_range", file: !377, line: 181, size: 96, elements: !7239)
!7239 = !{!7240, !7241, !7242}
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "start_freq_khz", scope: !7238, file: !377, line: 182, baseType: !1308, size: 32)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "end_freq_khz", scope: !7238, file: !377, line: 183, baseType: !1308, size: 32, offset: 32)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "max_bandwidth_khz", scope: !7238, file: !377, line: 184, baseType: !1308, size: 32, offset: 64)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "power_rule", scope: !7235, file: !377, line: 219, baseType: !7244, size: 64, offset: 96)
!7244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_power_rule", file: !377, line: 187, size: 64, elements: !7245)
!7245 = !{!7246, !7247}
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "max_antenna_gain", scope: !7244, file: !377, line: 188, baseType: !1308, size: 32)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "max_eirp", scope: !7244, file: !377, line: 189, baseType: !1308, size: 32, offset: 32)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "wmm_rule", scope: !7235, file: !377, line: 220, baseType: !7249, size: 512, offset: 160)
!7249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_wmm_rule", file: !377, line: 212, size: 512, elements: !7250)
!7250 = !{!7251, !7259}
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "client", scope: !7249, file: !377, line: 213, baseType: !7252, size: 256)
!7252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7253, size: 256, elements: !2590)
!7253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_wmm_ac", file: !377, line: 205, size: 64, elements: !7254)
!7254 = !{!7255, !7256, !7257, !7258}
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "cw_min", scope: !7253, file: !377, line: 206, baseType: !916, size: 16)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "cw_max", scope: !7253, file: !377, line: 207, baseType: !916, size: 16, offset: 16)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "cot", scope: !7253, file: !377, line: 208, baseType: !916, size: 16, offset: 32)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "aifsn", scope: !7253, file: !377, line: 209, baseType: !1116, size: 8, offset: 48)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !7249, file: !377, line: 214, baseType: !7252, size: 256, offset: 256)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7235, file: !377, line: 221, baseType: !1308, size: 32, offset: 672)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "dfs_cac_ms", scope: !7235, file: !377, line: 222, baseType: !1308, size: 32, offset: 704)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "has_wmm", scope: !7235, file: !377, line: 223, baseType: !1093, size: 8, offset: 736)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6706, file: !294, line: 4971, baseType: !7264, size: 5568, offset: 2688)
!7264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !389, line: 461, size: 5568, elements: !7265)
!7265 = !{!7266, !7267, !7269, !7272, !7273, !7324, !7397, !7398, !7399, !7400, !7401, !7410, !7504, !7517, !7521, !7522, !7526, !7527, !7528, !7529, !7533, !7539, !7540, !7543, !7547, !7637, !7638, !7639, !7640, !7641, !7673, !7674, !7675, !7678, !7681, !7682, !7683, !7684}
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7264, file: !389, line: 462, baseType: !6424, size: 512)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7264, file: !389, line: 463, baseType: !7268, size: 64, offset: 512)
!7268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7264, size: 64)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !7264, file: !389, line: 465, baseType: !7270, size: 64, offset: 576)
!7270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7271, size: 64)
!7271 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !389, line: 36, flags: DIFlagFwdDecl)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !7264, file: !389, line: 467, baseType: !497, size: 64, offset: 640)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7264, file: !389, line: 468, baseType: !7274, size: 64, offset: 704)
!7274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7275, size: 64)
!7275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7276)
!7276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !389, line: 87, size: 384, elements: !7277)
!7277 = !{!7278, !7279, !7280, !7284, !7289, !7293}
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7276, file: !389, line: 88, baseType: !497, size: 64)
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !7276, file: !389, line: 89, baseType: !6461, size: 64, offset: 64)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !7276, file: !389, line: 90, baseType: !7281, size: 64, offset: 128)
!7281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7282, size: 64)
!7282 = !DISubroutineType(types: !7283)
!7283 = !{!7, !7268, !6675}
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !7276, file: !389, line: 91, baseType: !7285, size: 64, offset: 192)
!7285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7286, size: 64)
!7286 = !DISubroutineType(types: !7287)
!7287 = !{!676, !7268, !7288, !3164, !3165}
!7288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !7276, file: !389, line: 93, baseType: !7290, size: 64, offset: 256)
!7290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7291, size: 64)
!7291 = !DISubroutineType(types: !7292)
!7292 = !{null, !7268}
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !7276, file: !389, line: 95, baseType: !7294, size: 64, offset: 320)
!7294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7295, size: 64)
!7295 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7296)
!7296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !396, line: 278, size: 1472, elements: !7297)
!7297 = !{!7298, !7302, !7303, !7304, !7305, !7306, !7307, !7308, !7309, !7310, !7311, !7312, !7313, !7314, !7315, !7316, !7317, !7318, !7319, !7320, !7321, !7322, !7323}
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !7296, file: !396, line: 279, baseType: !7299, size: 64)
!7299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7300, size: 64)
!7300 = !DISubroutineType(types: !7301)
!7301 = !{!7, !7268}
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !7296, file: !396, line: 280, baseType: !7290, size: 64, offset: 64)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !7296, file: !396, line: 281, baseType: !7299, size: 64, offset: 128)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !7296, file: !396, line: 282, baseType: !7299, size: 64, offset: 192)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !7296, file: !396, line: 283, baseType: !7299, size: 64, offset: 256)
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !7296, file: !396, line: 284, baseType: !7299, size: 64, offset: 320)
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !7296, file: !396, line: 285, baseType: !7299, size: 64, offset: 384)
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !7296, file: !396, line: 286, baseType: !7299, size: 64, offset: 448)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !7296, file: !396, line: 287, baseType: !7299, size: 64, offset: 512)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !7296, file: !396, line: 288, baseType: !7299, size: 64, offset: 576)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !7296, file: !396, line: 289, baseType: !7299, size: 64, offset: 640)
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !7296, file: !396, line: 290, baseType: !7299, size: 64, offset: 704)
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !7296, file: !396, line: 291, baseType: !7299, size: 64, offset: 768)
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !7296, file: !396, line: 292, baseType: !7299, size: 64, offset: 832)
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !7296, file: !396, line: 293, baseType: !7299, size: 64, offset: 896)
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !7296, file: !396, line: 294, baseType: !7299, size: 64, offset: 960)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !7296, file: !396, line: 295, baseType: !7299, size: 64, offset: 1024)
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !7296, file: !396, line: 296, baseType: !7299, size: 64, offset: 1088)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !7296, file: !396, line: 297, baseType: !7299, size: 64, offset: 1152)
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !7296, file: !396, line: 298, baseType: !7299, size: 64, offset: 1216)
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !7296, file: !396, line: 299, baseType: !7299, size: 64, offset: 1280)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !7296, file: !396, line: 300, baseType: !7299, size: 64, offset: 1344)
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !7296, file: !396, line: 301, baseType: !7299, size: 64, offset: 1408)
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7264, file: !389, line: 470, baseType: !7325, size: 64, offset: 768)
!7325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7326, size: 64)
!7326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !7327, line: 82, size: 1408, elements: !7328)
!7327 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!7328 = !{!7329, !7330, !7331, !7332, !7333, !7334, !7335, !7376, !7377, !7378, !7379, !7380, !7381, !7382, !7383, !7384, !7385, !7386, !7387, !7388, !7392, !7395, !7396}
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7326, file: !7327, line: 83, baseType: !497, size: 64)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !7326, file: !7327, line: 84, baseType: !497, size: 64, offset: 64)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !7326, file: !7327, line: 85, baseType: !7268, size: 64, offset: 128)
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !7326, file: !7327, line: 86, baseType: !6461, size: 64, offset: 192)
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !7326, file: !7327, line: 87, baseType: !6461, size: 64, offset: 256)
!7334 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !7326, file: !7327, line: 88, baseType: !6461, size: 64, offset: 320)
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !7326, file: !7327, line: 90, baseType: !7336, size: 64, offset: 384)
!7336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7337, size: 64)
!7337 = !DISubroutineType(types: !7338)
!7338 = !{!7, !7268, !7339}
!7339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7340, size: 64)
!7340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !383, line: 95, size: 1152, elements: !7341)
!7341 = !{!7342, !7343, !7344, !7345, !7346, !7347, !7348, !7352, !7356, !7357, !7358, !7359, !7360, !7368, !7369, !7370, !7371, !7372, !7373}
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7340, file: !383, line: 96, baseType: !497, size: 64)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7340, file: !383, line: 97, baseType: !7325, size: 64, offset: 64)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7340, file: !383, line: 99, baseType: !1301, size: 64, offset: 128)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !7340, file: !383, line: 100, baseType: !497, size: 64, offset: 192)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !7340, file: !383, line: 102, baseType: !1093, size: 8, offset: 256)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !7340, file: !383, line: 103, baseType: !382, size: 32, offset: 288)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !7340, file: !383, line: 105, baseType: !7349, size: 64, offset: 320)
!7349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7350, size: 64)
!7350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7351)
!7351 = !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !383, line: 105, flags: DIFlagFwdDecl)
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !7340, file: !383, line: 106, baseType: !7353, size: 64, offset: 384)
!7353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7354, size: 64)
!7354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7355)
!7355 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !383, line: 106, flags: DIFlagFwdDecl)
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !7340, file: !383, line: 108, baseType: !7299, size: 64, offset: 448)
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !7340, file: !383, line: 109, baseType: !7290, size: 64, offset: 512)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !7340, file: !383, line: 110, baseType: !7299, size: 64, offset: 576)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7340, file: !383, line: 111, baseType: !7290, size: 64, offset: 640)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !7340, file: !383, line: 112, baseType: !7361, size: 64, offset: 704)
!7361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7362, size: 64)
!7362 = !DISubroutineType(types: !7363)
!7363 = !{!7, !7268, !7364}
!7364 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !396, line: 52, baseType: !7365)
!7365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !396, line: 50, size: 32, elements: !7366)
!7366 = !{!7367}
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !7365, file: !396, line: 51, baseType: !7, size: 32)
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !7340, file: !383, line: 113, baseType: !7299, size: 64, offset: 768)
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !7340, file: !383, line: 114, baseType: !6461, size: 64, offset: 832)
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !7340, file: !383, line: 115, baseType: !6461, size: 64, offset: 896)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !7340, file: !383, line: 117, baseType: !7294, size: 64, offset: 960)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !7340, file: !383, line: 118, baseType: !7290, size: 64, offset: 1024)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !7340, file: !383, line: 120, baseType: !7374, size: 64, offset: 1088)
!7374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7375, size: 64)
!7375 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !383, line: 120, flags: DIFlagFwdDecl)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !7326, file: !7327, line: 91, baseType: !7281, size: 64, offset: 448)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !7326, file: !7327, line: 92, baseType: !7299, size: 64, offset: 512)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !7326, file: !7327, line: 93, baseType: !7290, size: 64, offset: 576)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !7326, file: !7327, line: 94, baseType: !7299, size: 64, offset: 640)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7326, file: !7327, line: 95, baseType: !7290, size: 64, offset: 704)
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !7326, file: !7327, line: 97, baseType: !7299, size: 64, offset: 768)
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !7326, file: !7327, line: 98, baseType: !7299, size: 64, offset: 832)
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !7326, file: !7327, line: 100, baseType: !7361, size: 64, offset: 896)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !7326, file: !7327, line: 101, baseType: !7299, size: 64, offset: 960)
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !7326, file: !7327, line: 103, baseType: !7299, size: 64, offset: 1024)
!7386 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !7326, file: !7327, line: 105, baseType: !7299, size: 64, offset: 1088)
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !7326, file: !7327, line: 107, baseType: !7294, size: 64, offset: 1152)
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !7326, file: !7327, line: 109, baseType: !7389, size: 64, offset: 1216)
!7389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7390, size: 64)
!7390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7391)
!7391 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !7327, line: 109, flags: DIFlagFwdDecl)
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !7326, file: !7327, line: 111, baseType: !7393, size: 64, offset: 1280)
!7393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7394, size: 64)
!7394 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !7327, line: 111, flags: DIFlagFwdDecl)
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !7326, file: !7327, line: 112, baseType: !1902, offset: 1344)
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !7326, file: !7327, line: 114, baseType: !1093, size: 8, offset: 1344)
!7397 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7264, file: !389, line: 471, baseType: !7339, size: 64, offset: 832)
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !7264, file: !389, line: 473, baseType: !622, size: 64, offset: 896)
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !7264, file: !389, line: 475, baseType: !622, size: 64, offset: 960)
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !7264, file: !389, line: 480, baseType: !1982, size: 192, offset: 1024)
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !7264, file: !389, line: 484, baseType: !7402, size: 576, offset: 1216)
!7402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !389, line: 361, size: 576, elements: !7403)
!7403 = !{!7404, !7405, !7406, !7407, !7408, !7409}
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !7402, file: !389, line: 362, baseType: !489, size: 128)
!7405 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !7402, file: !389, line: 363, baseType: !489, size: 128, offset: 128)
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !7402, file: !389, line: 364, baseType: !489, size: 128, offset: 256)
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !7402, file: !389, line: 365, baseType: !489, size: 128, offset: 384)
!7408 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !7402, file: !389, line: 366, baseType: !1093, size: 8, offset: 512)
!7409 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !7402, file: !389, line: 367, baseType: !388, size: 32, offset: 544)
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !7264, file: !389, line: 485, baseType: !7411, size: 2304, offset: 1792)
!7411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !396, line: 565, size: 2304, elements: !7412)
!7412 = !{!7413, !7414, !7415, !7416, !7417, !7418, !7419, !7420, !7421, !7422, !7423, !7424, !7425, !7426, !7427, !7428, !7455, !7456, !7457, !7458, !7459, !7460, !7461, !7462, !7463, !7464, !7465, !7466, !7467, !7468, !7469, !7470, !7471, !7472, !7473, !7474, !7475, !7476, !7477, !7478, !7479, !7480, !7481, !7482, !7483, !7484, !7485, !7486, !7487, !7497, !7501}
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !7411, file: !396, line: 566, baseType: !7364, size: 32)
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !7411, file: !396, line: 567, baseType: !13, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!7415 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !7411, file: !396, line: 568, baseType: !13, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!7416 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !7411, file: !396, line: 569, baseType: !1093, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !7411, file: !396, line: 570, baseType: !1093, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !7411, file: !396, line: 571, baseType: !1093, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!7419 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !7411, file: !396, line: 572, baseType: !1093, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !7411, file: !396, line: 573, baseType: !1093, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !7411, file: !396, line: 574, baseType: !1093, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!7422 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !7411, file: !396, line: 575, baseType: !1093, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !7411, file: !396, line: 576, baseType: !1093, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !7411, file: !396, line: 577, baseType: !1308, size: 32, offset: 64)
!7425 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7411, file: !396, line: 578, baseType: !1987, offset: 96)
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !7411, file: !396, line: 580, baseType: !489, size: 128, offset: 128)
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !7411, file: !396, line: 581, baseType: !3139, size: 192, offset: 256)
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !7411, file: !396, line: 582, baseType: !7429, size: 64, offset: 448)
!7429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7430, size: 64)
!7430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !7431, line: 43, size: 1472, elements: !7432)
!7431 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!7432 = !{!7433, !7434, !7435, !7436, !7437, !7440, !7441, !7442, !7443, !7444, !7445, !7446, !7447, !7448, !7449, !7450, !7451, !7452, !7453, !7454}
!7433 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7430, file: !7431, line: 44, baseType: !497, size: 64)
!7434 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7430, file: !7431, line: 45, baseType: !7, size: 32, offset: 64)
!7435 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !7430, file: !7431, line: 46, baseType: !489, size: 128, offset: 128)
!7436 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7430, file: !7431, line: 47, baseType: !1987, offset: 256)
!7437 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !7430, file: !7431, line: 48, baseType: !7438, size: 64, offset: 256)
!7438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7439, size: 64)
!7439 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !396, line: 533, flags: DIFlagFwdDecl)
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !7430, file: !7431, line: 49, baseType: !3567, size: 320, offset: 320)
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !7430, file: !7431, line: 50, baseType: !517, size: 64, offset: 640)
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !7430, file: !7431, line: 51, baseType: !793, size: 64, offset: 704)
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !7430, file: !7431, line: 52, baseType: !793, size: 64, offset: 768)
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !7430, file: !7431, line: 53, baseType: !793, size: 64, offset: 832)
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !7430, file: !7431, line: 54, baseType: !793, size: 64, offset: 896)
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !7430, file: !7431, line: 55, baseType: !793, size: 64, offset: 960)
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !7430, file: !7431, line: 56, baseType: !517, size: 64, offset: 1024)
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !7430, file: !7431, line: 57, baseType: !517, size: 64, offset: 1088)
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !7430, file: !7431, line: 58, baseType: !517, size: 64, offset: 1152)
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !7430, file: !7431, line: 59, baseType: !517, size: 64, offset: 1216)
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !7430, file: !7431, line: 60, baseType: !517, size: 64, offset: 1280)
!7452 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7430, file: !7431, line: 61, baseType: !7268, size: 64, offset: 1344)
!7453 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !7430, file: !7431, line: 62, baseType: !1093, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !7430, file: !7431, line: 63, baseType: !1093, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !7411, file: !396, line: 583, baseType: !1093, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !7411, file: !396, line: 584, baseType: !1093, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!7457 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !7411, file: !396, line: 585, baseType: !1093, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !7411, file: !396, line: 586, baseType: !13, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !7411, file: !396, line: 587, baseType: !13, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!7460 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !7411, file: !396, line: 592, baseType: !2714, size: 512, offset: 576)
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !7411, file: !396, line: 593, baseType: !536, size: 64, offset: 1088)
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !7411, file: !396, line: 594, baseType: !3078, size: 256, offset: 1152)
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !7411, file: !396, line: 595, baseType: !2206, size: 128, offset: 1408)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !7411, file: !396, line: 596, baseType: !7438, size: 64, offset: 1536)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !7411, file: !396, line: 597, baseType: !588, size: 32, offset: 1600)
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !7411, file: !396, line: 598, baseType: !588, size: 32, offset: 1632)
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !7411, file: !396, line: 599, baseType: !13, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !7411, file: !396, line: 600, baseType: !13, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !7411, file: !396, line: 601, baseType: !13, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !7411, file: !396, line: 602, baseType: !13, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !7411, file: !396, line: 603, baseType: !13, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !7411, file: !396, line: 604, baseType: !1093, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !7411, file: !396, line: 605, baseType: !13, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !7411, file: !396, line: 606, baseType: !13, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !7411, file: !396, line: 607, baseType: !13, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !7411, file: !396, line: 608, baseType: !13, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !7411, file: !396, line: 609, baseType: !13, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !7411, file: !396, line: 610, baseType: !13, size: 32, offset: 1696)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !7411, file: !396, line: 611, baseType: !395, size: 32, offset: 1728)
!7480 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !7411, file: !396, line: 612, baseType: !403, size: 32, offset: 1760)
!7481 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !7411, file: !396, line: 613, baseType: !7, size: 32, offset: 1792)
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !7411, file: !396, line: 614, baseType: !7, size: 32, offset: 1824)
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !7411, file: !396, line: 615, baseType: !536, size: 64, offset: 1856)
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !7411, file: !396, line: 616, baseType: !536, size: 64, offset: 1920)
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !7411, file: !396, line: 617, baseType: !536, size: 64, offset: 1984)
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !7411, file: !396, line: 618, baseType: !536, size: 64, offset: 2048)
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !7411, file: !396, line: 620, baseType: !7488, size: 64, offset: 2112)
!7488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7489, size: 64)
!7489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !396, line: 536, size: 256, elements: !7490)
!7490 = !{!7491, !7492, !7493, !7494}
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7489, file: !396, line: 537, baseType: !1987)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !7489, file: !396, line: 538, baseType: !13, size: 32)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !7489, file: !396, line: 540, baseType: !489, size: 128, offset: 64)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !7489, file: !396, line: 543, baseType: !7495, size: 64, offset: 192)
!7495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7496, size: 64)
!7496 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !396, line: 534, flags: DIFlagFwdDecl)
!7497 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !7411, file: !396, line: 621, baseType: !7498, size: 64, offset: 2176)
!7498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7499, size: 64)
!7499 = !DISubroutineType(types: !7500)
!7500 = !{null, !7268, !2860}
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !7411, file: !396, line: 622, baseType: !7502, size: 64, offset: 2240)
!7502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7503, size: 64)
!7503 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !396, line: 622, flags: DIFlagFwdDecl)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !7264, file: !389, line: 486, baseType: !7505, size: 64, offset: 4096)
!7505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7506, size: 64)
!7506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !396, line: 642, size: 1792, elements: !7507)
!7507 = !{!7508, !7509, !7510, !7514, !7515, !7516}
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7506, file: !396, line: 643, baseType: !7296, size: 1472)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7506, file: !396, line: 644, baseType: !7299, size: 64, offset: 1472)
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !7506, file: !396, line: 645, baseType: !7511, size: 64, offset: 1536)
!7511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7512, size: 64)
!7512 = !DISubroutineType(types: !7513)
!7513 = !{null, !7268, !1093}
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !7506, file: !396, line: 646, baseType: !7299, size: 64, offset: 1600)
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !7506, file: !396, line: 647, baseType: !7290, size: 64, offset: 1664)
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !7506, file: !396, line: 648, baseType: !7290, size: 64, offset: 1728)
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !7264, file: !389, line: 493, baseType: !7518, size: 64, offset: 4160)
!7518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7519, size: 64)
!7519 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !7520, line: 13, flags: DIFlagFwdDecl)
!7520 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !7264, file: !389, line: 499, baseType: !489, size: 128, offset: 4224)
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !7264, file: !389, line: 502, baseType: !7523, size: 64, offset: 4352)
!7523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7524, size: 64)
!7524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7525)
!7525 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !389, line: 502, flags: DIFlagFwdDecl)
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !7264, file: !389, line: 504, baseType: !5676, size: 64, offset: 4416)
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !7264, file: !389, line: 505, baseType: !536, size: 64, offset: 4480)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !7264, file: !389, line: 510, baseType: !536, size: 64, offset: 4544)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !7264, file: !389, line: 511, baseType: !7530, size: 64, offset: 4608)
!7530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7531, size: 64)
!7531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7532)
!7532 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !389, line: 511, flags: DIFlagFwdDecl)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !7264, file: !389, line: 513, baseType: !7534, size: 64, offset: 4672)
!7534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7535, size: 64)
!7535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !389, line: 288, size: 128, elements: !7536)
!7536 = !{!7537, !7538}
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !7535, file: !389, line: 293, baseType: !13, size: 32)
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !7535, file: !389, line: 294, baseType: !517, size: 64, offset: 64)
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !7264, file: !389, line: 515, baseType: !489, size: 128, offset: 4736)
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !7264, file: !389, line: 526, baseType: !7541, offset: 4864)
!7541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !7542, line: 5, elements: !1904)
!7542 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!7543 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !7264, file: !389, line: 528, baseType: !7544, size: 64, offset: 4864)
!7544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7545, size: 64)
!7545 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !7546, line: 14, flags: DIFlagFwdDecl)
!7546 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !7264, file: !389, line: 529, baseType: !7548, size: 64, offset: 4928)
!7548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7549, size: 64)
!7549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !7550, line: 17, size: 192, elements: !7551)
!7550 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!7551 = !{!7552, !7553, !7636}
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !7549, file: !7550, line: 18, baseType: !7548, size: 64)
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7549, file: !7550, line: 19, baseType: !7554, size: 64, offset: 64)
!7554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7555, size: 64)
!7555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7556)
!7556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !7550, line: 110, size: 1152, elements: !7557)
!7557 = !{!7558, !7562, !7566, !7572, !7578, !7582, !7586, !7591, !7595, !7596, !7600, !7604, !7608, !7619, !7620, !7621, !7622, !7632}
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !7556, file: !7550, line: 111, baseType: !7559, size: 64)
!7559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7560, size: 64)
!7560 = !DISubroutineType(types: !7561)
!7561 = !{!7548, !7548}
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !7556, file: !7550, line: 112, baseType: !7563, size: 64, offset: 64)
!7563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7564, size: 64)
!7564 = !DISubroutineType(types: !7565)
!7565 = !{null, !7548}
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !7556, file: !7550, line: 113, baseType: !7567, size: 64, offset: 128)
!7567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7568, size: 64)
!7568 = !DISubroutineType(types: !7569)
!7569 = !{!1093, !7570}
!7570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7571, size: 64)
!7571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7549)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !7556, file: !7550, line: 114, baseType: !7573, size: 64, offset: 192)
!7573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7574, size: 64)
!7574 = !DISubroutineType(types: !7575)
!7575 = !{!3590, !7570, !7576}
!7576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7577, size: 64)
!7577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7264)
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !7556, file: !7550, line: 116, baseType: !7579, size: 64, offset: 256)
!7579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7580, size: 64)
!7580 = !DISubroutineType(types: !7581)
!7581 = !{!1093, !7570, !497}
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !7556, file: !7550, line: 118, baseType: !7583, size: 64, offset: 320)
!7583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7584, size: 64)
!7584 = !DISubroutineType(types: !7585)
!7585 = !{!7, !7570, !497, !13, !622, !1358}
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !7556, file: !7550, line: 123, baseType: !7587, size: 64, offset: 384)
!7587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7588, size: 64)
!7588 = !DISubroutineType(types: !7589)
!7589 = !{!7, !7570, !497, !7590, !1358}
!7590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !7556, file: !7550, line: 126, baseType: !7592, size: 64, offset: 448)
!7592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7593, size: 64)
!7593 = !DISubroutineType(types: !7594)
!7594 = !{!497, !7570}
!7595 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !7556, file: !7550, line: 127, baseType: !7592, size: 64, offset: 512)
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !7556, file: !7550, line: 128, baseType: !7597, size: 64, offset: 576)
!7597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7598, size: 64)
!7598 = !DISubroutineType(types: !7599)
!7599 = !{!7548, !7570}
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !7556, file: !7550, line: 130, baseType: !7601, size: 64, offset: 640)
!7601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7602, size: 64)
!7602 = !DISubroutineType(types: !7603)
!7603 = !{!7548, !7570, !7548}
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !7556, file: !7550, line: 133, baseType: !7605, size: 64, offset: 704)
!7605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7606, size: 64)
!7606 = !DISubroutineType(types: !7607)
!7607 = !{!7548, !7570, !497}
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !7556, file: !7550, line: 135, baseType: !7609, size: 64, offset: 768)
!7609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7610, size: 64)
!7610 = !DISubroutineType(types: !7611)
!7611 = !{!7, !7570, !497, !497, !13, !13, !7612}
!7612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7613, size: 64)
!7613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !7550, line: 43, size: 640, elements: !7614)
!7614 = !{!7615, !7616, !7617}
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !7613, file: !7550, line: 44, baseType: !7548, size: 64)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !7613, file: !7550, line: 45, baseType: !13, size: 32, offset: 64)
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !7613, file: !7550, line: 46, baseType: !7618, size: 512, offset: 128)
!7618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 512, elements: !728)
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !7556, file: !7550, line: 140, baseType: !7601, size: 64, offset: 832)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !7556, file: !7550, line: 143, baseType: !7597, size: 64, offset: 896)
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !7556, file: !7550, line: 145, baseType: !7559, size: 64, offset: 960)
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !7556, file: !7550, line: 146, baseType: !7623, size: 64, offset: 1024)
!7623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7624, size: 64)
!7624 = !DISubroutineType(types: !7625)
!7625 = !{!7, !7570, !7626}
!7626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7627, size: 64)
!7627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !7550, line: 29, size: 128, elements: !7628)
!7628 = !{!7629, !7630, !7631}
!7629 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7627, file: !7550, line: 30, baseType: !13, size: 32)
!7630 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7627, file: !7550, line: 31, baseType: !13, size: 32, offset: 32)
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !7627, file: !7550, line: 32, baseType: !7570, size: 64, offset: 64)
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !7556, file: !7550, line: 148, baseType: !7633, size: 64, offset: 1088)
!7633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7634, size: 64)
!7634 = !DISubroutineType(types: !7635)
!7635 = !{!7, !7570, !7268}
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7549, file: !7550, line: 20, baseType: !7268, size: 64, offset: 128)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !7264, file: !389, line: 534, baseType: !1776, size: 32, offset: 4992)
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7264, file: !389, line: 535, baseType: !1308, size: 32, offset: 5024)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !7264, file: !389, line: 537, baseType: !1987, offset: 5056)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !7264, file: !389, line: 538, baseType: !489, size: 128, offset: 5056)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7264, file: !389, line: 540, baseType: !7642, size: 64, offset: 5184)
!7642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7643, size: 64)
!7643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !7644, line: 54, size: 960, elements: !7645)
!7644 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!7645 = !{!7646, !7647, !7648, !7649, !7650, !7651, !7652, !7656, !7660, !7661, !7662, !7663, !7667, !7671, !7672}
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7643, file: !7644, line: 55, baseType: !497, size: 64)
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7643, file: !7644, line: 56, baseType: !1301, size: 64, offset: 64)
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !7643, file: !7644, line: 58, baseType: !6461, size: 64, offset: 128)
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !7643, file: !7644, line: 59, baseType: !6461, size: 64, offset: 192)
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !7643, file: !7644, line: 60, baseType: !6429, size: 64, offset: 256)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !7643, file: !7644, line: 62, baseType: !7281, size: 64, offset: 320)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !7643, file: !7644, line: 63, baseType: !7653, size: 64, offset: 384)
!7653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7654, size: 64)
!7654 = !DISubroutineType(types: !7655)
!7655 = !{!676, !7268, !7288}
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !7643, file: !7644, line: 65, baseType: !7657, size: 64, offset: 448)
!7657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7658, size: 64)
!7658 = !DISubroutineType(types: !7659)
!7659 = !{null, !7642}
!7660 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !7643, file: !7644, line: 66, baseType: !7290, size: 64, offset: 512)
!7661 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !7643, file: !7644, line: 68, baseType: !7299, size: 64, offset: 576)
!7662 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !7643, file: !7644, line: 70, baseType: !6497, size: 64, offset: 640)
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !7643, file: !7644, line: 71, baseType: !7664, size: 64, offset: 704)
!7664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7665, size: 64)
!7665 = !DISubroutineType(types: !7666)
!7666 = !{!3590, !7268}
!7667 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !7643, file: !7644, line: 73, baseType: !7668, size: 64, offset: 768)
!7668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7669, size: 64)
!7669 = !DISubroutineType(types: !7670)
!7670 = !{null, !7268, !3164, !3165}
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !7643, file: !7644, line: 75, baseType: !7294, size: 64, offset: 832)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !7643, file: !7644, line: 77, baseType: !7393, size: 64, offset: 896)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !7264, file: !389, line: 541, baseType: !6461, size: 64, offset: 5248)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !7264, file: !389, line: 543, baseType: !7290, size: 64, offset: 5312)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !7264, file: !389, line: 544, baseType: !7676, size: 64, offset: 5376)
!7676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7677, size: 64)
!7677 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !389, line: 45, flags: DIFlagFwdDecl)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !7264, file: !389, line: 545, baseType: !7679, size: 64, offset: 5440)
!7679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7680, size: 64)
!7680 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !389, line: 47, flags: DIFlagFwdDecl)
!7681 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !7264, file: !389, line: 547, baseType: !1093, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!7682 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !7264, file: !389, line: 548, baseType: !1093, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !7264, file: !389, line: 549, baseType: !1093, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !7264, file: !389, line: 550, baseType: !1093, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !6706, file: !294, line: 4973, baseType: !1093, size: 8, offset: 8256)
!7686 = !DIDerivedType(tag: DW_TAG_member, name: "debugfsdir", scope: !6706, file: !294, line: 4975, baseType: !1656, size: 64, offset: 8320)
!7687 = !DIDerivedType(tag: DW_TAG_member, name: "ht_capa_mod_mask", scope: !6706, file: !294, line: 4977, baseType: !7688, size: 64, offset: 8384)
!7688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7689, size: 64)
!7689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7690)
!7690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_ht_cap", file: !7137, line: 1515, size: 208, elements: !7691)
!7691 = !{!7692, !7693, !7694, !7695, !7696, !7698}
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "cap_info", scope: !7690, file: !7137, line: 1516, baseType: !7142, size: 16)
!7693 = !DIDerivedType(tag: DW_TAG_member, name: "ampdu_params_info", scope: !7690, file: !7137, line: 1517, baseType: !1116, size: 8, offset: 16)
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "mcs", scope: !7690, file: !7137, line: 1520, baseType: !7136, size: 128, offset: 24)
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "extended_ht_cap_info", scope: !7690, file: !7137, line: 1522, baseType: !7142, size: 16, offset: 152)
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "tx_BF_cap_info", scope: !7690, file: !7137, line: 1523, baseType: !7697, size: 32, offset: 168)
!7697 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !860, line: 31, baseType: !650)
!7698 = !DIDerivedType(tag: DW_TAG_member, name: "antenna_selection_info", scope: !7690, file: !7137, line: 1524, baseType: !1116, size: 8, offset: 200)
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "vht_capa_mod_mask", scope: !6706, file: !294, line: 4978, baseType: !7700, size: 64, offset: 8448)
!7700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7701, size: 64)
!7701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7702)
!7702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_vht_cap", file: !7137, line: 1731, size: 96, elements: !7703)
!7703 = !{!7704, !7705}
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "vht_cap_info", scope: !7702, file: !7137, line: 1732, baseType: !7697, size: 32)
!7705 = !DIDerivedType(tag: DW_TAG_member, name: "supp_mcs", scope: !7702, file: !7137, line: 1733, baseType: !7152, size: 64, offset: 32)
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "wdev_list", scope: !6706, file: !294, line: 4980, baseType: !489, size: 128, offset: 8512)
!7707 = !DIDerivedType(tag: DW_TAG_member, name: "_net", scope: !6706, file: !294, line: 4982, baseType: !7708, size: 64, offset: 8640)
!7708 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !3322, line: 318, baseType: !7709)
!7709 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3322, line: 314, size: 64, elements: !7710)
!7710 = !{!7711}
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !7709, file: !3322, line: 316, baseType: !3320, size: 64)
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "wext", scope: !6706, file: !294, line: 4985, baseType: !594, size: 64, offset: 8704)
!7713 = !DIDerivedType(tag: DW_TAG_member, name: "coalesce", scope: !6706, file: !294, line: 4988, baseType: !7714, size: 64, offset: 8768)
!7714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7715, size: 64)
!7715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7716)
!7716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wiphy_coalesce_support", file: !294, line: 4534, size: 192, elements: !7717)
!7717 = !{!7718, !7719, !7720, !7721, !7722, !7723}
!7718 = !DIDerivedType(tag: DW_TAG_member, name: "n_rules", scope: !7716, file: !294, line: 4535, baseType: !7, size: 32)
!7719 = !DIDerivedType(tag: DW_TAG_member, name: "max_delay", scope: !7716, file: !294, line: 4536, baseType: !7, size: 32, offset: 32)
!7720 = !DIDerivedType(tag: DW_TAG_member, name: "n_patterns", scope: !7716, file: !294, line: 4537, baseType: !7, size: 32, offset: 64)
!7721 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_max_len", scope: !7716, file: !294, line: 4538, baseType: !7, size: 32, offset: 96)
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_min_len", scope: !7716, file: !294, line: 4539, baseType: !7, size: 32, offset: 128)
!7723 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !7716, file: !294, line: 4540, baseType: !7, size: 32, offset: 160)
!7724 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_commands", scope: !6706, file: !294, line: 4990, baseType: !7725, size: 64, offset: 8832)
!7725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7726, size: 64)
!7726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7727)
!7727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wiphy_vendor_command", file: !294, line: 4605, size: 384, elements: !7728)
!7728 = !{!7729, !7734, !7735, !7739, !7743, !7744}
!7729 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !7727, file: !294, line: 4606, baseType: !7730, size: 64)
!7730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nl80211_vendor_cmd_info", file: !308, line: 6242, size: 64, elements: !7731)
!7731 = !{!7732, !7733}
!7732 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !7730, file: !308, line: 6243, baseType: !650, size: 32)
!7733 = !DIDerivedType(tag: DW_TAG_member, name: "subcmd", scope: !7730, file: !308, line: 6244, baseType: !650, size: 32, offset: 32)
!7734 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7727, file: !294, line: 4607, baseType: !1308, size: 32, offset: 64)
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "doit", scope: !7727, file: !294, line: 4608, baseType: !7736, size: 64, offset: 128)
!7736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7737, size: 64)
!7737 = !DISubroutineType(types: !7738)
!7738 = !{!7, !6705, !6701, !3590, !7}
!7739 = !DIDerivedType(tag: DW_TAG_member, name: "dumpit", scope: !7727, file: !294, line: 4610, baseType: !7740, size: 64, offset: 192)
!7740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7741, size: 64)
!7741 = !DISubroutineType(types: !7742)
!7742 = !{!7, !6705, !6701, !756, !3590, !7, !3771}
!7743 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !7727, file: !294, line: 4613, baseType: !1217, size: 64, offset: 256)
!7744 = !DIDerivedType(tag: DW_TAG_member, name: "maxattr", scope: !7727, file: !294, line: 4614, baseType: !13, size: 32, offset: 320)
!7745 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_events", scope: !6706, file: !294, line: 4991, baseType: !7746, size: 64, offset: 8896)
!7746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7747, size: 64)
!7747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7730)
!7748 = !DIDerivedType(tag: DW_TAG_member, name: "n_vendor_commands", scope: !6706, file: !294, line: 4992, baseType: !7, size: 32, offset: 8960)
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "n_vendor_events", scope: !6706, file: !294, line: 4992, baseType: !7, size: 32, offset: 8992)
!7750 = !DIDerivedType(tag: DW_TAG_member, name: "max_ap_assoc_sta", scope: !6706, file: !294, line: 4994, baseType: !916, size: 16, offset: 9024)
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "max_num_csa_counters", scope: !6706, file: !294, line: 4996, baseType: !1116, size: 8, offset: 9040)
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "bss_select_support", scope: !6706, file: !294, line: 4998, baseType: !1308, size: 32, offset: 9056)
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "nan_supported_bands", scope: !6706, file: !294, line: 5000, baseType: !1116, size: 8, offset: 9088)
!7754 = !DIDerivedType(tag: DW_TAG_member, name: "txq_limit", scope: !6706, file: !294, line: 5002, baseType: !1308, size: 32, offset: 9120)
!7755 = !DIDerivedType(tag: DW_TAG_member, name: "txq_memory_limit", scope: !6706, file: !294, line: 5003, baseType: !1308, size: 32, offset: 9152)
!7756 = !DIDerivedType(tag: DW_TAG_member, name: "txq_quantum", scope: !6706, file: !294, line: 5004, baseType: !1308, size: 32, offset: 9184)
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !6706, file: !294, line: 5006, baseType: !517, size: 64, offset: 9216)
!7758 = !DIDerivedType(tag: DW_TAG_member, name: "support_mbssid", scope: !6706, file: !294, line: 5008, baseType: !1116, size: 1, offset: 9280, flags: DIFlagBitField, extraData: i64 9280)
!7759 = !DIDerivedType(tag: DW_TAG_member, name: "support_only_he_mbssid", scope: !6706, file: !294, line: 5009, baseType: !1116, size: 1, offset: 9281, flags: DIFlagBitField, extraData: i64 9280)
!7760 = !DIDerivedType(tag: DW_TAG_member, name: "pmsr_capa", scope: !6706, file: !294, line: 5011, baseType: !7761, size: 64, offset: 9344)
!7761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7762, size: 64)
!7762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7763)
!7763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cfg80211_pmsr_capabilities", file: !294, line: 4655, size: 160, elements: !7764)
!7764 = !{!7765, !7766, !7767, !7768}
!7765 = !DIDerivedType(tag: DW_TAG_member, name: "max_peers", scope: !7763, file: !294, line: 4656, baseType: !13, size: 32)
!7766 = !DIDerivedType(tag: DW_TAG_member, name: "report_ap_tsf", scope: !7763, file: !294, line: 4657, baseType: !1116, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!7767 = !DIDerivedType(tag: DW_TAG_member, name: "randomize_mac_addr", scope: !7763, file: !294, line: 4658, baseType: !1116, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!7768 = !DIDerivedType(tag: DW_TAG_member, name: "ftm", scope: !7763, file: !294, line: 4672, baseType: !7769, size: 96, offset: 64)
!7769 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7763, file: !294, line: 4660, size: 96, elements: !7770)
!7770 = !{!7771, !7772, !7773, !7774, !7775, !7776, !7777, !7778, !7779, !7780, !7781}
!7771 = !DIDerivedType(tag: DW_TAG_member, name: "preambles", scope: !7769, file: !294, line: 4661, baseType: !1308, size: 32)
!7772 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidths", scope: !7769, file: !294, line: 4662, baseType: !1308, size: 32, offset: 32)
!7773 = !DIDerivedType(tag: DW_TAG_member, name: "max_bursts_exponent", scope: !7769, file: !294, line: 4663, baseType: !7058, size: 8, offset: 64)
!7774 = !DIDerivedType(tag: DW_TAG_member, name: "max_ftms_per_burst", scope: !7769, file: !294, line: 4664, baseType: !1116, size: 8, offset: 72)
!7775 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !7769, file: !294, line: 4665, baseType: !1116, size: 1, offset: 80, flags: DIFlagBitField, extraData: i64 80)
!7776 = !DIDerivedType(tag: DW_TAG_member, name: "asap", scope: !7769, file: !294, line: 4666, baseType: !1116, size: 1, offset: 81, flags: DIFlagBitField, extraData: i64 80)
!7777 = !DIDerivedType(tag: DW_TAG_member, name: "non_asap", scope: !7769, file: !294, line: 4667, baseType: !1116, size: 1, offset: 82, flags: DIFlagBitField, extraData: i64 80)
!7778 = !DIDerivedType(tag: DW_TAG_member, name: "request_lci", scope: !7769, file: !294, line: 4668, baseType: !1116, size: 1, offset: 83, flags: DIFlagBitField, extraData: i64 80)
!7779 = !DIDerivedType(tag: DW_TAG_member, name: "request_civicloc", scope: !7769, file: !294, line: 4669, baseType: !1116, size: 1, offset: 84, flags: DIFlagBitField, extraData: i64 80)
!7780 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_based", scope: !7769, file: !294, line: 4670, baseType: !1116, size: 1, offset: 85, flags: DIFlagBitField, extraData: i64 80)
!7781 = !DIDerivedType(tag: DW_TAG_member, name: "non_trigger_based", scope: !7769, file: !294, line: 4671, baseType: !1116, size: 1, offset: 86, flags: DIFlagBitField, extraData: i64 80)
!7782 = !DIDerivedType(tag: DW_TAG_member, name: "tid_config_support", scope: !6706, file: !294, line: 5016, baseType: !7783, size: 192, offset: 9408)
!7783 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6706, file: !294, line: 5013, size: 192, elements: !7784)
!7784 = !{!7785, !7786, !7787}
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "peer", scope: !7783, file: !294, line: 5014, baseType: !536, size: 64)
!7786 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !7783, file: !294, line: 5014, baseType: !536, size: 64, offset: 64)
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "max_retry", scope: !7783, file: !294, line: 5015, baseType: !1116, size: 8, offset: 128)
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "max_data_retry_count", scope: !6706, file: !294, line: 5018, baseType: !1116, size: 8, offset: 9600)
!7789 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6706, file: !294, line: 5020, baseType: !513, align: 256, offset: 9728)
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "iftype", scope: !6702, file: !294, line: 5243, baseType: !328, size: 32, offset: 64)
!7791 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6702, file: !294, line: 5246, baseType: !489, size: 128, offset: 128)
!7792 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !6702, file: !294, line: 5247, baseType: !495, size: 64, offset: 256)
!7793 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !6702, file: !294, line: 5249, baseType: !1308, size: 32, offset: 320)
!7794 = !DIDerivedType(tag: DW_TAG_member, name: "mgmt_registrations", scope: !6702, file: !294, line: 5251, baseType: !489, size: 128, offset: 384)
!7795 = !DIDerivedType(tag: DW_TAG_member, name: "mgmt_registrations_lock", scope: !6702, file: !294, line: 5252, baseType: !1987, offset: 512)
!7796 = !DIDerivedType(tag: DW_TAG_member, name: "mgmt_registrations_need_update", scope: !6702, file: !294, line: 5253, baseType: !1116, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!7797 = !DIDerivedType(tag: DW_TAG_member, name: "mtx", scope: !6702, file: !294, line: 5255, baseType: !1982, size: 192, offset: 576)
!7798 = !DIDerivedType(tag: DW_TAG_member, name: "use_4addr", scope: !6702, file: !294, line: 5257, baseType: !1093, size: 8, offset: 768)
!7799 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !6702, file: !294, line: 5257, baseType: !1093, size: 8, offset: 776)
!7800 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !6702, file: !294, line: 5259, baseType: !6709, size: 48, align: 16, offset: 784)
!7801 = !DIDerivedType(tag: DW_TAG_member, name: "ssid", scope: !6702, file: !294, line: 5262, baseType: !7027, size: 256, offset: 832)
!7802 = !DIDerivedType(tag: DW_TAG_member, name: "ssid_len", scope: !6702, file: !294, line: 5263, baseType: !1116, size: 8, offset: 1088)
!7803 = !DIDerivedType(tag: DW_TAG_member, name: "mesh_id_len", scope: !6702, file: !294, line: 5263, baseType: !1116, size: 8, offset: 1096)
!7804 = !DIDerivedType(tag: DW_TAG_member, name: "mesh_id_up_len", scope: !6702, file: !294, line: 5263, baseType: !1116, size: 8, offset: 1104)
!7805 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !6702, file: !294, line: 5264, baseType: !7806, size: 64, offset: 1152)
!7806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7807, size: 64)
!7807 = !DICompositeType(tag: DW_TAG_structure_type, name: "cfg80211_conn", file: !294, line: 5153, flags: DIFlagFwdDecl)
!7808 = !DIDerivedType(tag: DW_TAG_member, name: "connect_keys", scope: !6702, file: !294, line: 5265, baseType: !7809, size: 64, offset: 1216)
!7809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7810, size: 64)
!7810 = !DICompositeType(tag: DW_TAG_structure_type, name: "cfg80211_cached_keys", file: !294, line: 5155, flags: DIFlagFwdDecl)
!7811 = !DIDerivedType(tag: DW_TAG_member, name: "conn_bss_type", scope: !6702, file: !294, line: 5266, baseType: !409, size: 32, offset: 1280)
!7812 = !DIDerivedType(tag: DW_TAG_member, name: "conn_owner_nlportid", scope: !6702, file: !294, line: 5267, baseType: !1308, size: 32, offset: 1312)
!7813 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect_wk", scope: !6702, file: !294, line: 5269, baseType: !3078, size: 256, offset: 1344)
!7814 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect_bssid", scope: !6702, file: !294, line: 5270, baseType: !6709, size: 48, offset: 1600)
!7815 = !DIDerivedType(tag: DW_TAG_member, name: "event_list", scope: !6702, file: !294, line: 5272, baseType: !489, size: 128, offset: 1664)
!7816 = !DIDerivedType(tag: DW_TAG_member, name: "event_lock", scope: !6702, file: !294, line: 5273, baseType: !1987, offset: 1792)
!7817 = !DIDerivedType(tag: DW_TAG_member, name: "current_bss", scope: !6702, file: !294, line: 5275, baseType: !7818, size: 64, offset: 1792)
!7818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7819, size: 64)
!7819 = !DICompositeType(tag: DW_TAG_structure_type, name: "cfg80211_internal_bss", file: !294, line: 5154, flags: DIFlagFwdDecl)
!7820 = !DIDerivedType(tag: DW_TAG_member, name: "preset_chandef", scope: !6702, file: !294, line: 5276, baseType: !7821, size: 256, offset: 1856)
!7821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cfg80211_chan_def", file: !294, line: 691, size: 256, elements: !7822)
!7822 = !{!7823, !7824, !7825, !7826, !7827, !7828}
!7823 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !7821, file: !294, line: 692, baseType: !7074, size: 64)
!7824 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !7821, file: !294, line: 693, baseType: !416, size: 32, offset: 64)
!7825 = !DIDerivedType(tag: DW_TAG_member, name: "center_freq1", scope: !7821, file: !294, line: 694, baseType: !1308, size: 32, offset: 96)
!7826 = !DIDerivedType(tag: DW_TAG_member, name: "center_freq2", scope: !7821, file: !294, line: 695, baseType: !1308, size: 32, offset: 128)
!7827 = !DIDerivedType(tag: DW_TAG_member, name: "edmg", scope: !7821, file: !294, line: 696, baseType: !7166, size: 64, offset: 160)
!7828 = !DIDerivedType(tag: DW_TAG_member, name: "freq1_offset", scope: !7821, file: !294, line: 697, baseType: !916, size: 16, offset: 224)
!7829 = !DIDerivedType(tag: DW_TAG_member, name: "chandef", scope: !6702, file: !294, line: 5277, baseType: !7821, size: 256, offset: 2112)
!7830 = !DIDerivedType(tag: DW_TAG_member, name: "ibss_fixed", scope: !6702, file: !294, line: 5279, baseType: !1093, size: 8, offset: 2368)
!7831 = !DIDerivedType(tag: DW_TAG_member, name: "ibss_dfs_possible", scope: !6702, file: !294, line: 5280, baseType: !1093, size: 8, offset: 2376)
!7832 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !6702, file: !294, line: 5282, baseType: !1093, size: 8, offset: 2384)
!7833 = !DIDerivedType(tag: DW_TAG_member, name: "ps_timeout", scope: !6702, file: !294, line: 5283, baseType: !7, size: 32, offset: 2400)
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "beacon_interval", scope: !6702, file: !294, line: 5285, baseType: !7, size: 32, offset: 2432)
!7835 = !DIDerivedType(tag: DW_TAG_member, name: "ap_unexpected_nlportid", scope: !6702, file: !294, line: 5287, baseType: !1308, size: 32, offset: 2464)
!7836 = !DIDerivedType(tag: DW_TAG_member, name: "owner_nlportid", scope: !6702, file: !294, line: 5289, baseType: !1308, size: 32, offset: 2496)
!7837 = !DIDerivedType(tag: DW_TAG_member, name: "nl_owner_dead", scope: !6702, file: !294, line: 5290, baseType: !1093, size: 8, offset: 2528)
!7838 = !DIDerivedType(tag: DW_TAG_member, name: "cac_started", scope: !6702, file: !294, line: 5292, baseType: !1093, size: 8, offset: 2536)
!7839 = !DIDerivedType(tag: DW_TAG_member, name: "cac_start_time", scope: !6702, file: !294, line: 5293, baseType: !517, size: 64, offset: 2560)
!7840 = !DIDerivedType(tag: DW_TAG_member, name: "cac_time_ms", scope: !6702, file: !294, line: 5294, baseType: !13, size: 32, offset: 2624)
!7841 = !DIDerivedType(tag: DW_TAG_member, name: "wext", scope: !6702, file: !294, line: 5309, baseType: !7842, size: 4800, offset: 2688)
!7842 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6702, file: !294, line: 5298, size: 4800, elements: !7843)
!7843 = !{!7844, !7876, !7940, !7941, !7942, !7943, !7944, !7945, !7946, !7947, !7948}
!7844 = !DIDerivedType(tag: DW_TAG_member, name: "ibss", scope: !7842, file: !294, line: 5299, baseType: !7845, size: 1280)
!7845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cfg80211_ibss_params", file: !294, line: 2667, size: 1280, elements: !7846)
!7846 = !{!7847, !7848, !7849, !7850, !7851, !7852, !7853, !7854, !7855, !7856, !7857, !7858, !7859, !7860, !7862, !7863, !7864, !7875}
!7847 = !DIDerivedType(tag: DW_TAG_member, name: "ssid", scope: !7845, file: !294, line: 2668, baseType: !6164, size: 64)
!7848 = !DIDerivedType(tag: DW_TAG_member, name: "bssid", scope: !7845, file: !294, line: 2669, baseType: !6164, size: 64, offset: 64)
!7849 = !DIDerivedType(tag: DW_TAG_member, name: "chandef", scope: !7845, file: !294, line: 2670, baseType: !7821, size: 256, offset: 128)
!7850 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !7845, file: !294, line: 2671, baseType: !6164, size: 64, offset: 384)
!7851 = !DIDerivedType(tag: DW_TAG_member, name: "ssid_len", scope: !7845, file: !294, line: 2672, baseType: !1116, size: 8, offset: 448)
!7852 = !DIDerivedType(tag: DW_TAG_member, name: "ie_len", scope: !7845, file: !294, line: 2672, baseType: !1116, size: 8, offset: 456)
!7853 = !DIDerivedType(tag: DW_TAG_member, name: "beacon_interval", scope: !7845, file: !294, line: 2673, baseType: !916, size: 16, offset: 464)
!7854 = !DIDerivedType(tag: DW_TAG_member, name: "basic_rates", scope: !7845, file: !294, line: 2674, baseType: !1308, size: 32, offset: 480)
!7855 = !DIDerivedType(tag: DW_TAG_member, name: "channel_fixed", scope: !7845, file: !294, line: 2675, baseType: !1093, size: 8, offset: 512)
!7856 = !DIDerivedType(tag: DW_TAG_member, name: "privacy", scope: !7845, file: !294, line: 2676, baseType: !1093, size: 8, offset: 520)
!7857 = !DIDerivedType(tag: DW_TAG_member, name: "control_port", scope: !7845, file: !294, line: 2677, baseType: !1093, size: 8, offset: 528)
!7858 = !DIDerivedType(tag: DW_TAG_member, name: "control_port_over_nl80211", scope: !7845, file: !294, line: 2678, baseType: !1093, size: 8, offset: 536)
!7859 = !DIDerivedType(tag: DW_TAG_member, name: "userspace_handles_dfs", scope: !7845, file: !294, line: 2679, baseType: !1093, size: 8, offset: 544)
!7860 = !DIDerivedType(tag: DW_TAG_member, name: "mcast_rate", scope: !7845, file: !294, line: 2680, baseType: !7861, size: 160, offset: 576)
!7861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 160, elements: !2944)
!7862 = !DIDerivedType(tag: DW_TAG_member, name: "ht_capa", scope: !7845, file: !294, line: 2681, baseType: !7690, size: 208, offset: 736)
!7863 = !DIDerivedType(tag: DW_TAG_member, name: "ht_capa_mask", scope: !7845, file: !294, line: 2682, baseType: !7690, size: 208, offset: 944)
!7864 = !DIDerivedType(tag: DW_TAG_member, name: "wep_keys", scope: !7845, file: !294, line: 2683, baseType: !7865, size: 64, offset: 1152)
!7865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7866, size: 64)
!7866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_params", file: !294, line: 668, size: 320, elements: !7867)
!7867 = !{!7868, !7869, !7870, !7871, !7872, !7873, !7874}
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !7866, file: !294, line: 669, baseType: !6164, size: 64)
!7869 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !7866, file: !294, line: 670, baseType: !6164, size: 64, offset: 64)
!7870 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !7866, file: !294, line: 671, baseType: !7, size: 32, offset: 128)
!7871 = !DIDerivedType(tag: DW_TAG_member, name: "seq_len", scope: !7866, file: !294, line: 672, baseType: !7, size: 32, offset: 160)
!7872 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_id", scope: !7866, file: !294, line: 673, baseType: !916, size: 16, offset: 192)
!7873 = !DIDerivedType(tag: DW_TAG_member, name: "cipher", scope: !7866, file: !294, line: 674, baseType: !1308, size: 32, offset: 224)
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !7866, file: !294, line: 675, baseType: !431, size: 32, offset: 256)
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "wep_tx_key", scope: !7845, file: !294, line: 2684, baseType: !7, size: 32, offset: 1216)
!7876 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !7842, file: !294, line: 5300, baseType: !7877, size: 2944, offset: 1280)
!7877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cfg80211_connect_params", file: !294, line: 2766, size: 2944, elements: !7878)
!7878 = !{!7879, !7880, !7881, !7882, !7883, !7884, !7885, !7886, !7887, !7888, !7889, !7890, !7911, !7912, !7913, !7914, !7915, !7916, !7917, !7918, !7919, !7920, !7921, !7930, !7931, !7932, !7933, !7934, !7935, !7936, !7937, !7938, !7939}
!7879 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !7877, file: !294, line: 2767, baseType: !7074, size: 64)
!7880 = !DIDerivedType(tag: DW_TAG_member, name: "channel_hint", scope: !7877, file: !294, line: 2768, baseType: !7074, size: 64, offset: 64)
!7881 = !DIDerivedType(tag: DW_TAG_member, name: "bssid", scope: !7877, file: !294, line: 2769, baseType: !6164, size: 64, offset: 128)
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "bssid_hint", scope: !7877, file: !294, line: 2770, baseType: !6164, size: 64, offset: 192)
!7883 = !DIDerivedType(tag: DW_TAG_member, name: "ssid", scope: !7877, file: !294, line: 2771, baseType: !6164, size: 64, offset: 256)
!7884 = !DIDerivedType(tag: DW_TAG_member, name: "ssid_len", scope: !7877, file: !294, line: 2772, baseType: !1358, size: 64, offset: 320)
!7885 = !DIDerivedType(tag: DW_TAG_member, name: "auth_type", scope: !7877, file: !294, line: 2773, baseType: !436, size: 32, offset: 384)
!7886 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !7877, file: !294, line: 2774, baseType: !6164, size: 64, offset: 448)
!7887 = !DIDerivedType(tag: DW_TAG_member, name: "ie_len", scope: !7877, file: !294, line: 2775, baseType: !1358, size: 64, offset: 512)
!7888 = !DIDerivedType(tag: DW_TAG_member, name: "privacy", scope: !7877, file: !294, line: 2776, baseType: !1093, size: 8, offset: 576)
!7889 = !DIDerivedType(tag: DW_TAG_member, name: "mfp", scope: !7877, file: !294, line: 2777, baseType: !449, size: 32, offset: 608)
!7890 = !DIDerivedType(tag: DW_TAG_member, name: "crypto", scope: !7877, file: !294, line: 2778, baseType: !7891, size: 768, offset: 640)
!7891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cfg80211_crypto_settings", file: !294, line: 1012, size: 768, elements: !7892)
!7892 = !{!7893, !7894, !7895, !7896, !7898, !7899, !7901, !7902, !7903, !7904, !7905, !7906, !7907, !7908, !7909, !7910}
!7893 = !DIDerivedType(tag: DW_TAG_member, name: "wpa_versions", scope: !7891, file: !294, line: 1013, baseType: !1308, size: 32)
!7894 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_group", scope: !7891, file: !294, line: 1014, baseType: !1308, size: 32, offset: 32)
!7895 = !DIDerivedType(tag: DW_TAG_member, name: "n_ciphers_pairwise", scope: !7891, file: !294, line: 1015, baseType: !7, size: 32, offset: 64)
!7896 = !DIDerivedType(tag: DW_TAG_member, name: "ciphers_pairwise", scope: !7891, file: !294, line: 1016, baseType: !7897, size: 160, offset: 96)
!7897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1308, size: 160, elements: !2944)
!7898 = !DIDerivedType(tag: DW_TAG_member, name: "n_akm_suites", scope: !7891, file: !294, line: 1017, baseType: !7, size: 32, offset: 256)
!7899 = !DIDerivedType(tag: DW_TAG_member, name: "akm_suites", scope: !7891, file: !294, line: 1018, baseType: !7900, size: 64, offset: 288)
!7900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1308, size: 64, elements: !3261)
!7901 = !DIDerivedType(tag: DW_TAG_member, name: "control_port", scope: !7891, file: !294, line: 1019, baseType: !1093, size: 8, offset: 352)
!7902 = !DIDerivedType(tag: DW_TAG_member, name: "control_port_ethertype", scope: !7891, file: !294, line: 1020, baseType: !870, size: 16, offset: 368)
!7903 = !DIDerivedType(tag: DW_TAG_member, name: "control_port_no_encrypt", scope: !7891, file: !294, line: 1021, baseType: !1093, size: 8, offset: 384)
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "control_port_over_nl80211", scope: !7891, file: !294, line: 1022, baseType: !1093, size: 8, offset: 392)
!7905 = !DIDerivedType(tag: DW_TAG_member, name: "control_port_no_preauth", scope: !7891, file: !294, line: 1023, baseType: !1093, size: 8, offset: 400)
!7906 = !DIDerivedType(tag: DW_TAG_member, name: "wep_keys", scope: !7891, file: !294, line: 1024, baseType: !7865, size: 64, offset: 448)
!7907 = !DIDerivedType(tag: DW_TAG_member, name: "wep_tx_key", scope: !7891, file: !294, line: 1025, baseType: !7, size: 32, offset: 512)
!7908 = !DIDerivedType(tag: DW_TAG_member, name: "psk", scope: !7891, file: !294, line: 1026, baseType: !6164, size: 64, offset: 576)
!7909 = !DIDerivedType(tag: DW_TAG_member, name: "sae_pwd", scope: !7891, file: !294, line: 1027, baseType: !6164, size: 64, offset: 640)
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "sae_pwd_len", scope: !7891, file: !294, line: 1028, baseType: !1116, size: 8, offset: 704)
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !7877, file: !294, line: 2779, baseType: !6164, size: 64, offset: 1408)
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !7877, file: !294, line: 2780, baseType: !1116, size: 8, offset: 1472)
!7913 = !DIDerivedType(tag: DW_TAG_member, name: "key_idx", scope: !7877, file: !294, line: 2780, baseType: !1116, size: 8, offset: 1480)
!7914 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7877, file: !294, line: 2781, baseType: !1308, size: 32, offset: 1504)
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "bg_scan_period", scope: !7877, file: !294, line: 2782, baseType: !7, size: 32, offset: 1536)
!7916 = !DIDerivedType(tag: DW_TAG_member, name: "ht_capa", scope: !7877, file: !294, line: 2783, baseType: !7690, size: 208, offset: 1568)
!7917 = !DIDerivedType(tag: DW_TAG_member, name: "ht_capa_mask", scope: !7877, file: !294, line: 2784, baseType: !7690, size: 208, offset: 1776)
!7918 = !DIDerivedType(tag: DW_TAG_member, name: "vht_capa", scope: !7877, file: !294, line: 2785, baseType: !7702, size: 96, offset: 1984)
!7919 = !DIDerivedType(tag: DW_TAG_member, name: "vht_capa_mask", scope: !7877, file: !294, line: 2786, baseType: !7702, size: 96, offset: 2080)
!7920 = !DIDerivedType(tag: DW_TAG_member, name: "pbss", scope: !7877, file: !294, line: 2787, baseType: !1093, size: 8, offset: 2176)
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "bss_select", scope: !7877, file: !294, line: 2788, baseType: !7922, size: 96, offset: 2208)
!7922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cfg80211_bss_selection", file: !294, line: 2695, size: 96, elements: !7923)
!7923 = !{!7924, !7925}
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "behaviour", scope: !7922, file: !294, line: 2696, baseType: !454, size: 32)
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !7922, file: !294, line: 2700, baseType: !7926, size: 64, offset: 32)
!7926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7922, file: !294, line: 2697, size: 64, elements: !7927)
!7927 = !{!7928, !7929}
!7928 = !DIDerivedType(tag: DW_TAG_member, name: "band_pref", scope: !7926, file: !294, line: 2698, baseType: !315, size: 32)
!7929 = !DIDerivedType(tag: DW_TAG_member, name: "adjust", scope: !7926, file: !294, line: 2699, baseType: !7060, size: 64)
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bssid", scope: !7877, file: !294, line: 2789, baseType: !6164, size: 64, offset: 2304)
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "fils_erp_username", scope: !7877, file: !294, line: 2790, baseType: !6164, size: 64, offset: 2368)
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "fils_erp_username_len", scope: !7877, file: !294, line: 2791, baseType: !1358, size: 64, offset: 2432)
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "fils_erp_realm", scope: !7877, file: !294, line: 2792, baseType: !6164, size: 64, offset: 2496)
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "fils_erp_realm_len", scope: !7877, file: !294, line: 2793, baseType: !1358, size: 64, offset: 2560)
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "fils_erp_next_seq_num", scope: !7877, file: !294, line: 2794, baseType: !916, size: 16, offset: 2624)
!7936 = !DIDerivedType(tag: DW_TAG_member, name: "fils_erp_rrk", scope: !7877, file: !294, line: 2795, baseType: !6164, size: 64, offset: 2688)
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "fils_erp_rrk_len", scope: !7877, file: !294, line: 2796, baseType: !1358, size: 64, offset: 2752)
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "want_1x", scope: !7877, file: !294, line: 2797, baseType: !1093, size: 8, offset: 2816)
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "edmg", scope: !7877, file: !294, line: 2798, baseType: !7166, size: 64, offset: 2848)
!7940 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !7842, file: !294, line: 5301, baseType: !7809, size: 64, offset: 4224)
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !7842, file: !294, line: 5302, baseType: !6164, size: 64, offset: 4288)
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "ie_len", scope: !7842, file: !294, line: 5303, baseType: !1358, size: 64, offset: 4352)
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "bssid", scope: !7842, file: !294, line: 5304, baseType: !6709, size: 48, offset: 4416)
!7944 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bssid", scope: !7842, file: !294, line: 5305, baseType: !6709, size: 48, offset: 4464)
!7945 = !DIDerivedType(tag: DW_TAG_member, name: "ssid", scope: !7842, file: !294, line: 5306, baseType: !7027, size: 256, offset: 4512)
!7946 = !DIDerivedType(tag: DW_TAG_member, name: "default_key", scope: !7842, file: !294, line: 5307, baseType: !7058, size: 8, offset: 4768)
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "default_mgmt_key", scope: !7842, file: !294, line: 5307, baseType: !7058, size: 8, offset: 4776)
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bssid_valid", scope: !7842, file: !294, line: 5308, baseType: !1093, size: 8, offset: 4784)
!7949 = !DIDerivedType(tag: DW_TAG_member, name: "cqm_config", scope: !6702, file: !294, line: 5312, baseType: !7950, size: 64, offset: 7488)
!7950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7951, size: 64)
!7951 = !DICompositeType(tag: DW_TAG_structure_type, name: "cfg80211_cqm_config", file: !294, line: 5156, flags: DIFlagFwdDecl)
!7952 = !DIDerivedType(tag: DW_TAG_member, name: "pmsr_list", scope: !6702, file: !294, line: 5314, baseType: !489, size: 128, offset: 7552)
!7953 = !DIDerivedType(tag: DW_TAG_member, name: "pmsr_lock", scope: !6702, file: !294, line: 5315, baseType: !1987, offset: 7680)
!7954 = !DIDerivedType(tag: DW_TAG_member, name: "pmsr_free_wk", scope: !6702, file: !294, line: 5316, baseType: !3078, size: 256, offset: 7680)
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "unprot_beacon_reported", scope: !6702, file: !294, line: 5318, baseType: !517, size: 64, offset: 7936)
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !469, file: !6, line: 2016, baseType: !7957, size: 64, offset: 5888)
!7957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7958, size: 64)
!7958 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !6, line: 64, flags: DIFlagFwdDecl)
!7959 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !469, file: !6, line: 2025, baseType: !899, size: 64, offset: 5952)
!7960 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !469, file: !6, line: 2027, baseType: !7961, size: 64, offset: 6016)
!7961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7962, size: 64)
!7962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !6, line: 736, size: 1536, elements: !7963)
!7963 = !{!7964, !7965, !7966}
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7962, file: !6, line: 741, baseType: !6424, size: 512)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7962, file: !6, line: 742, baseType: !495, size: 64, offset: 512)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !7962, file: !6, line: 743, baseType: !7967, size: 512, align: 512, offset: 1024)
!7967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !5790, line: 57, size: 512, align: 512, elements: !7968)
!7968 = !{!7969, !7970, !7971, !7972}
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7967, file: !5790, line: 58, baseType: !495, size: 64)
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !7967, file: !5790, line: 59, baseType: !1308, size: 32, offset: 64)
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !7967, file: !5790, line: 60, baseType: !1308, size: 32, offset: 96)
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !7967, file: !5790, line: 61, baseType: !5798, size: 64, offset: 128)
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !469, file: !6, line: 2028, baseType: !13, size: 32, offset: 6080)
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !469, file: !6, line: 2029, baseType: !13, size: 32, offset: 6112)
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !469, file: !6, line: 2031, baseType: !1407, size: 64, offset: 6144)
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !469, file: !6, line: 2032, baseType: !517, size: 64, offset: 6208)
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !469, file: !6, line: 2033, baseType: !7, size: 32, offset: 6272)
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !469, file: !6, line: 2034, baseType: !7979, size: 64, offset: 6336)
!7979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7980, size: 64)
!7980 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !6, line: 430, baseType: !7981)
!7981 = !DISubroutineType(types: !7982)
!7982 = !{!7983, !7984}
!7983 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !6, line: 429, baseType: !462)
!7984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !469, file: !6, line: 2035, baseType: !622, size: 64, offset: 6400)
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !469, file: !6, line: 2040, baseType: !7987, size: 64, offset: 6464)
!7987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7988, size: 64)
!7988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !6, line: 584, size: 1600, elements: !7989)
!7989 = !{!7990, !7991, !7994, !7995, !7996, !7997, !7998, !7999, !8000, !8001, !8002, !8003}
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7988, file: !6, line: 588, baseType: !495, size: 64)
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !7988, file: !6, line: 589, baseType: !7992, size: 64, offset: 64)
!7992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7993, size: 64)
!7993 = !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !6, line: 589, flags: DIFlagFwdDecl)
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !7988, file: !6, line: 590, baseType: !7992, size: 64, offset: 128)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7988, file: !6, line: 592, baseType: !6424, size: 512, offset: 192)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !7988, file: !6, line: 597, baseType: !517, size: 64, offset: 704)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !7988, file: !6, line: 602, baseType: !517, size: 64, offset: 768)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !7988, file: !6, line: 605, baseType: !495, size: 64, offset: 832)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !7988, file: !6, line: 612, baseType: !1987, offset: 896)
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !7988, file: !6, line: 613, baseType: !7, size: 32, offset: 896)
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !7988, file: !6, line: 617, baseType: !517, size: 64, offset: 960)
!8002 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7988, file: !6, line: 619, baseType: !517, size: 64, offset: 1024)
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !7988, file: !6, line: 622, baseType: !8004, size: 512, offset: 1088)
!8004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !8005, line: 43, size: 512, elements: !8006)
!8005 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!8006 = !{!8007, !8008, !8009, !8010, !8011, !8012, !8013, !8014, !8015, !8016, !8017, !8018, !8019}
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !8004, file: !8005, line: 45, baseType: !13, size: 32)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !8004, file: !8005, line: 46, baseType: !13, size: 32, offset: 32)
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !8004, file: !8005, line: 47, baseType: !13, size: 32, offset: 64)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !8004, file: !8005, line: 51, baseType: !13, size: 32, offset: 96)
!8011 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !8004, file: !8005, line: 52, baseType: !13, size: 32, offset: 128)
!8012 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !8004, file: !8005, line: 54, baseType: !13, size: 32, offset: 160)
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !8004, file: !8005, line: 55, baseType: !13, size: 32, offset: 192)
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !8004, file: !8005, line: 56, baseType: !13, size: 32, offset: 224)
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !8004, file: !8005, line: 58, baseType: !13, size: 32, offset: 256)
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !8004, file: !8005, line: 59, baseType: !517, size: 64, offset: 320)
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !8004, file: !8005, line: 62, baseType: !13, size: 32, offset: 384)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !8004, file: !8005, line: 63, baseType: !13, size: 32, offset: 416)
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !8004, file: !8005, line: 64, baseType: !13, size: 32, offset: 448)
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !469, file: !6, line: 2045, baseType: !1351, size: 256, offset: 6528)
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !469, file: !6, line: 2049, baseType: !481, size: 128, offset: 6784)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !469, file: !6, line: 2054, baseType: !7987, size: 64, offset: 6912)
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !469, file: !6, line: 2055, baseType: !13, size: 32, offset: 6976)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !469, file: !6, line: 2056, baseType: !13, size: 32, offset: 7008)
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !469, file: !6, line: 2057, baseType: !7992, size: 64, offset: 7040)
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !469, file: !6, line: 2058, baseType: !13, size: 32, offset: 7104)
!8027 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !469, file: !6, line: 2059, baseType: !1987, offset: 7136)
!8028 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !469, file: !6, line: 2061, baseType: !8029, size: 64, offset: 7168)
!8029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8030, size: 64)
!8030 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !6, line: 879, flags: DIFlagFwdDecl)
!8031 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !469, file: !6, line: 2075, baseType: !3567, size: 320, offset: 7232)
!8032 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !469, file: !6, line: 2076, baseType: !7, size: 32, offset: 7552)
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !469, file: !6, line: 2078, baseType: !1308, size: 32, offset: 7584)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !469, file: !6, line: 2080, baseType: !489, size: 128, offset: 7616)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !469, file: !6, line: 2081, baseType: !1321, size: 64, offset: 7744)
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !469, file: !6, line: 2083, baseType: !489, size: 128, offset: 7808)
!8037 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !469, file: !6, line: 2091, baseType: !468, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !469, file: !6, line: 2093, baseType: !1093, size: 8, offset: 7944)
!8039 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !469, file: !6, line: 2098, baseType: !8040, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!8040 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !469, file: !6, line: 2095, baseType: !13, size: 32, elements: !8041)
!8041 = !{!8042, !8043}
!8042 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!8043 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !469, file: !6, line: 2100, baseType: !1093, size: 8, offset: 7968)
!8045 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !469, file: !6, line: 2101, baseType: !746, size: 64, offset: 8000)
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !469, file: !6, line: 2107, baseType: !7708, size: 64, offset: 8064)
!8047 = !DIDerivedType(tag: DW_TAG_member, scope: !469, file: !6, line: 2110, baseType: !8048, size: 64, offset: 8128)
!8048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !469, file: !6, line: 2110, size: 64, elements: !8049)
!8049 = !{!8050, !8051, !8072, !8081}
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !8048, file: !6, line: 2111, baseType: !622, size: 64)
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !8048, file: !6, line: 2112, baseType: !8052, size: 64)
!8052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8053, size: 64)
!8053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !6, line: 2542, size: 128, align: 128, elements: !8054)
!8054 = !{!8055, !8070, !8071}
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !8053, file: !6, line: 2543, baseType: !8056, size: 64)
!8056 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !3404, line: 79, baseType: !8057)
!8057 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3404, line: 77, size: 64, elements: !8058)
!8058 = !{!8059}
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !8057, file: !3404, line: 78, baseType: !8060, size: 64)
!8060 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !8061, line: 26, baseType: !8062)
!8061 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!8062 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8061, line: 24, size: 64, elements: !8063)
!8063 = !{!8064}
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !8062, file: !8061, line: 25, baseType: !8065, size: 64)
!8065 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !8066, line: 12, baseType: !8067)
!8066 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!8067 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8066, line: 10, size: 64, elements: !8068)
!8068 = !{!8069}
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !8067, file: !8066, line: 11, baseType: !576, size: 64)
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !8053, file: !6, line: 2544, baseType: !8056, size: 64, offset: 64)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !8053, file: !6, line: 2545, baseType: !3403, offset: 128)
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !8048, file: !6, line: 2113, baseType: !8073, size: 64)
!8073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8074, size: 64)
!8074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !6, line: 2534, size: 256, align: 256, elements: !8075)
!8075 = !{!8076, !8077, !8078, !8079, !8080}
!8076 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !8074, file: !6, line: 2535, baseType: !536, size: 64)
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !8074, file: !6, line: 2536, baseType: !536, size: 64, offset: 64)
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !8074, file: !6, line: 2537, baseType: !536, size: 64, offset: 128)
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !8074, file: !6, line: 2538, baseType: !536, size: 64, offset: 192)
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !8074, file: !6, line: 2539, baseType: !3403, offset: 256)
!8081 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !8048, file: !6, line: 2114, baseType: !8082, size: 64)
!8082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8083, size: 64)
!8083 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !6, line: 2114, flags: DIFlagFwdDecl)
!8084 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !469, file: !6, line: 2124, baseType: !7264, size: 5568, offset: 8192)
!8085 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !469, file: !6, line: 2125, baseType: !8086, size: 256, offset: 13760)
!8086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6462, size: 256, elements: !2590)
!8087 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !469, file: !6, line: 2126, baseType: !6462, size: 64, offset: 14016)
!8088 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !469, file: !6, line: 2128, baseType: !8089, size: 64, offset: 14080)
!8089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8090, size: 64)
!8090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8091)
!8091 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !6, line: 2128, flags: DIFlagFwdDecl)
!8092 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !469, file: !6, line: 2132, baseType: !13, size: 32, offset: 14144)
!8093 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !469, file: !6, line: 2134, baseType: !916, size: 16, offset: 14176)
!8094 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !469, file: !6, line: 2139, baseType: !2632, size: 16, offset: 14192)
!8095 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !469, file: !6, line: 2140, baseType: !8096, size: 512, offset: 14208)
!8096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8097, size: 512, elements: !474)
!8097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !6, line: 793, size: 32, elements: !8098)
!8098 = !{!8099, !8100}
!8099 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !8097, file: !6, line: 794, baseType: !916, size: 16)
!8100 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !8097, file: !6, line: 795, baseType: !916, size: 16, offset: 16)
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !469, file: !6, line: 2141, baseType: !8102, size: 128, offset: 14720)
!8102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 128, elements: !474)
!8103 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !469, file: !6, line: 2149, baseType: !8104, size: 64, offset: 14848)
!8104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8105, size: 64)
!8105 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !281, line: 536, flags: DIFlagFwdDecl)
!8106 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !469, file: !6, line: 2150, baseType: !8107, size: 64, offset: 14912)
!8107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8108, size: 64)
!8108 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !6, line: 60, flags: DIFlagFwdDecl)
!8109 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !469, file: !6, line: 2151, baseType: !8110, size: 64, offset: 14976)
!8110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!8111 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !469, file: !6, line: 2152, baseType: !8110, size: 64, offset: 15040)
!8112 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !469, file: !6, line: 2153, baseType: !1093, size: 8, offset: 15104)
!8113 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !469, file: !6, line: 2154, baseType: !13, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!8114 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !469, file: !6, line: 2156, baseType: !489, size: 128, offset: 15168)
!8115 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !469, file: !6, line: 2162, baseType: !8116, size: 64, offset: 15296)
!8116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8117, size: 64)
!8117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8118)
!8118 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !6, line: 68, flags: DIFlagFwdDecl)
!8119 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !469, file: !6, line: 2163, baseType: !8120, size: 64, offset: 15360)
!8120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8121, size: 64)
!8121 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !6, line: 69, flags: DIFlagFwdDecl)
!8122 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !469, file: !6, line: 2166, baseType: !8123, size: 384, offset: 15424)
!8123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8124, size: 384, elements: !1909)
!8124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !6, line: 889, size: 128, elements: !8125)
!8125 = !{!8126, !8127}
!8126 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !8124, file: !6, line: 890, baseType: !1407, size: 64)
!8127 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !8124, file: !6, line: 891, baseType: !8128, size: 64, offset: 64)
!8128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8129, size: 64)
!8129 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !6, line: 880, flags: DIFlagFwdDecl)
!8130 = !{!8131, !8132, !8133, !8134, !8135, !8136}
!8131 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!8132 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!8133 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!8134 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!8135 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!8136 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!8137 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !8138, line: 14, baseType: !13, size: 32, elements: !8139)
!8138 = !DIFile(filename: "drivers/net/wireless/atmel/atmel.h", directory: "/home/lizy2001/genbc/linux")
!8139 = !{!8140, !8141, !8142, !8143, !8144, !8145, !8146, !8147, !8148}
!8140 = !DIEnumerator(name: "ATMEL_FW_TYPE_NONE", value: 0, isUnsigned: true)
!8141 = !DIEnumerator(name: "ATMEL_FW_TYPE_502", value: 1, isUnsigned: true)
!8142 = !DIEnumerator(name: "ATMEL_FW_TYPE_502D", value: 2, isUnsigned: true)
!8143 = !DIEnumerator(name: "ATMEL_FW_TYPE_502E", value: 3, isUnsigned: true)
!8144 = !DIEnumerator(name: "ATMEL_FW_TYPE_502_3COM", value: 4, isUnsigned: true)
!8145 = !DIEnumerator(name: "ATMEL_FW_TYPE_504", value: 5, isUnsigned: true)
!8146 = !DIEnumerator(name: "ATMEL_FW_TYPE_504_2958", value: 6, isUnsigned: true)
!8147 = !DIEnumerator(name: "ATMEL_FW_TYPE_504A_2958", value: 7, isUnsigned: true)
!8148 = !DIEnumerator(name: "ATMEL_FW_TYPE_506", value: 8, isUnsigned: true)
!8149 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !8150, file: !3, line: 452, baseType: !13, size: 32, elements: !8301)
!8150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "atmel_private", file: !3, line: 440, size: 58752, elements: !8151)
!8151 = !{!8152, !8153, !8157, !8158, !8160, !8161, !8162, !8163, !8164, !8165, !8166, !8167, !8168, !8169, !8175, !8176, !8177, !8178, !8179, !8180, !8181, !8182, !8183, !8184, !8185, !8186, !8187, !8188, !8189, !8190, !8191, !8192, !8193, !8194, !8195, !8196, !8197, !8201, !8203, !8204, !8205, !8206, !8231, !8242, !8243, !8244, !8245, !8246, !8247, !8248, !8249, !8250, !8251, !8252, !8253, !8254, !8255, !8256, !8257, !8258, !8259, !8260, !8261, !8262, !8263, !8264, !8270, !8271, !8272, !8273, !8274, !8287, !8288, !8289, !8290, !8291, !8292, !8293, !8294, !8295, !8296, !8297}
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "card", scope: !8150, file: !3, line: 441, baseType: !622, size: 64)
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "present_callback", scope: !8150, file: !3, line: 442, baseType: !8154, size: 64, offset: 64)
!8154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8155, size: 64)
!8155 = !DISubroutineType(types: !8156)
!8156 = !{!7, !622}
!8157 = !DIDerivedType(tag: DW_TAG_member, name: "firmware_id", scope: !8150, file: !3, line: 443, baseType: !4944, size: 256, offset: 128)
!8158 = !DIDerivedType(tag: DW_TAG_member, name: "firmware_type", scope: !8150, file: !3, line: 444, baseType: !8159, size: 32, offset: 384)
!8159 = !DIDerivedType(tag: DW_TAG_typedef, name: "AtmelFWType", file: !8138, line: 24, baseType: !8137)
!8160 = !DIDerivedType(tag: DW_TAG_member, name: "firmware", scope: !8150, file: !3, line: 445, baseType: !1115, size: 64, offset: 448)
!8161 = !DIDerivedType(tag: DW_TAG_member, name: "firmware_length", scope: !8150, file: !3, line: 446, baseType: !7, size: 32, offset: 512)
!8162 = !DIDerivedType(tag: DW_TAG_member, name: "management_timer", scope: !8150, file: !3, line: 447, baseType: !3567, size: 320, offset: 576)
!8163 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8150, file: !3, line: 448, baseType: !495, size: 64, offset: 896)
!8164 = !DIDerivedType(tag: DW_TAG_member, name: "sys_dev", scope: !8150, file: !3, line: 449, baseType: !7268, size: 64, offset: 960)
!8165 = !DIDerivedType(tag: DW_TAG_member, name: "wstats", scope: !8150, file: !3, line: 450, baseType: !695, size: 256, offset: 1024)
!8166 = !DIDerivedType(tag: DW_TAG_member, name: "irqlock", scope: !8150, file: !3, line: 451, baseType: !1987, offset: 1280)
!8167 = !DIDerivedType(tag: DW_TAG_member, name: "timerlock", scope: !8150, file: !3, line: 451, baseType: !1987, offset: 1280)
!8168 = !DIDerivedType(tag: DW_TAG_member, name: "bus_type", scope: !8150, file: !3, line: 452, baseType: !8149, size: 32, offset: 1280)
!8169 = !DIDerivedType(tag: DW_TAG_member, name: "card_type", scope: !8150, file: !3, line: 457, baseType: !8170, size: 32, offset: 1312)
!8170 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !8150, file: !3, line: 453, baseType: !13, size: 32, elements: !8171)
!8171 = !{!8172, !8173, !8174}
!8172 = !DIEnumerator(name: "CARD_TYPE_PARALLEL_FLASH", value: 0, isUnsigned: true)
!8173 = !DIEnumerator(name: "CARD_TYPE_SPI_FLASH", value: 1, isUnsigned: true)
!8174 = !DIEnumerator(name: "CARD_TYPE_EEPROM", value: 2, isUnsigned: true)
!8175 = !DIDerivedType(tag: DW_TAG_member, name: "do_rx_crc", scope: !8150, file: !3, line: 458, baseType: !7, size: 32, offset: 1344)
!8176 = !DIDerivedType(tag: DW_TAG_member, name: "probe_crc", scope: !8150, file: !3, line: 459, baseType: !7, size: 32, offset: 1376)
!8177 = !DIDerivedType(tag: DW_TAG_member, name: "crc_ok_cnt", scope: !8150, file: !3, line: 460, baseType: !7, size: 32, offset: 1408)
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "crc_ko_cnt", scope: !8150, file: !3, line: 460, baseType: !7, size: 32, offset: 1440)
!8179 = !DIDerivedType(tag: DW_TAG_member, name: "rx_desc_head", scope: !8150, file: !3, line: 461, baseType: !916, size: 16, offset: 1472)
!8180 = !DIDerivedType(tag: DW_TAG_member, name: "tx_desc_free", scope: !8150, file: !3, line: 462, baseType: !916, size: 16, offset: 1488)
!8181 = !DIDerivedType(tag: DW_TAG_member, name: "tx_desc_head", scope: !8150, file: !3, line: 462, baseType: !916, size: 16, offset: 1504)
!8182 = !DIDerivedType(tag: DW_TAG_member, name: "tx_desc_tail", scope: !8150, file: !3, line: 462, baseType: !916, size: 16, offset: 1520)
!8183 = !DIDerivedType(tag: DW_TAG_member, name: "tx_desc_previous", scope: !8150, file: !3, line: 462, baseType: !916, size: 16, offset: 1536)
!8184 = !DIDerivedType(tag: DW_TAG_member, name: "tx_free_mem", scope: !8150, file: !3, line: 463, baseType: !916, size: 16, offset: 1552)
!8185 = !DIDerivedType(tag: DW_TAG_member, name: "tx_buff_head", scope: !8150, file: !3, line: 463, baseType: !916, size: 16, offset: 1568)
!8186 = !DIDerivedType(tag: DW_TAG_member, name: "tx_buff_tail", scope: !8150, file: !3, line: 463, baseType: !916, size: 16, offset: 1584)
!8187 = !DIDerivedType(tag: DW_TAG_member, name: "frag_seq", scope: !8150, file: !3, line: 465, baseType: !916, size: 16, offset: 1600)
!8188 = !DIDerivedType(tag: DW_TAG_member, name: "frag_len", scope: !8150, file: !3, line: 465, baseType: !916, size: 16, offset: 1616)
!8189 = !DIDerivedType(tag: DW_TAG_member, name: "frag_no", scope: !8150, file: !3, line: 465, baseType: !916, size: 16, offset: 1632)
!8190 = !DIDerivedType(tag: DW_TAG_member, name: "frag_source", scope: !8150, file: !3, line: 466, baseType: !6709, size: 48, offset: 1648)
!8191 = !DIDerivedType(tag: DW_TAG_member, name: "wep_is_on", scope: !8150, file: !3, line: 468, baseType: !1116, size: 8, offset: 1696)
!8192 = !DIDerivedType(tag: DW_TAG_member, name: "default_key", scope: !8150, file: !3, line: 468, baseType: !1116, size: 8, offset: 1704)
!8193 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_unencrypted", scope: !8150, file: !3, line: 468, baseType: !1116, size: 8, offset: 1712)
!8194 = !DIDerivedType(tag: DW_TAG_member, name: "encryption_level", scope: !8150, file: !3, line: 468, baseType: !1116, size: 8, offset: 1720)
!8195 = !DIDerivedType(tag: DW_TAG_member, name: "group_cipher_suite", scope: !8150, file: !3, line: 469, baseType: !1116, size: 8, offset: 1728)
!8196 = !DIDerivedType(tag: DW_TAG_member, name: "pairwise_cipher_suite", scope: !8150, file: !3, line: 469, baseType: !1116, size: 8, offset: 1736)
!8197 = !DIDerivedType(tag: DW_TAG_member, name: "wep_keys", scope: !8150, file: !3, line: 470, baseType: !8198, size: 1280, offset: 1744)
!8198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 1280, elements: !8199)
!8199 = !{!2591, !8200}
!8200 = !DISubrange(count: 40)
!8201 = !DIDerivedType(tag: DW_TAG_member, name: "wep_key_len", scope: !8150, file: !3, line: 471, baseType: !8202, size: 128, offset: 3040)
!8202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !2590)
!8203 = !DIDerivedType(tag: DW_TAG_member, name: "use_wpa", scope: !8150, file: !3, line: 472, baseType: !7, size: 32, offset: 3168)
!8204 = !DIDerivedType(tag: DW_TAG_member, name: "radio_on_broken", scope: !8150, file: !3, line: 472, baseType: !7, size: 32, offset: 3200)
!8205 = !DIDerivedType(tag: DW_TAG_member, name: "host_info_base", scope: !8150, file: !3, line: 474, baseType: !916, size: 16, offset: 3232)
!8206 = !DIDerivedType(tag: DW_TAG_member, name: "host_info", scope: !8150, file: !3, line: 502, baseType: !8207, size: 288, offset: 3248)
!8207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "host_info_struct", file: !3, line: 475, size: 288, elements: !8208)
!8208 = !{!8209, !8211, !8212, !8213, !8214, !8215, !8216, !8217, !8218, !8219, !8220, !8221, !8222, !8223, !8224, !8225, !8226, !8227, !8228, !8229}
!8209 = !DIDerivedType(tag: DW_TAG_member, name: "int_status", scope: !8207, file: !3, line: 477, baseType: !8210, size: 8)
!8210 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1116)
!8211 = !DIDerivedType(tag: DW_TAG_member, name: "int_mask", scope: !8207, file: !3, line: 478, baseType: !8210, size: 8, offset: 8)
!8212 = !DIDerivedType(tag: DW_TAG_member, name: "lockout_host", scope: !8207, file: !3, line: 479, baseType: !8210, size: 8, offset: 16)
!8213 = !DIDerivedType(tag: DW_TAG_member, name: "lockout_mac", scope: !8207, file: !3, line: 480, baseType: !8210, size: 8, offset: 24)
!8214 = !DIDerivedType(tag: DW_TAG_member, name: "tx_buff_pos", scope: !8207, file: !3, line: 482, baseType: !916, size: 16, offset: 32)
!8215 = !DIDerivedType(tag: DW_TAG_member, name: "tx_buff_size", scope: !8207, file: !3, line: 483, baseType: !916, size: 16, offset: 48)
!8216 = !DIDerivedType(tag: DW_TAG_member, name: "tx_desc_pos", scope: !8207, file: !3, line: 484, baseType: !916, size: 16, offset: 64)
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "tx_desc_count", scope: !8207, file: !3, line: 485, baseType: !916, size: 16, offset: 80)
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "rx_buff_pos", scope: !8207, file: !3, line: 487, baseType: !916, size: 16, offset: 96)
!8219 = !DIDerivedType(tag: DW_TAG_member, name: "rx_buff_size", scope: !8207, file: !3, line: 488, baseType: !916, size: 16, offset: 112)
!8220 = !DIDerivedType(tag: DW_TAG_member, name: "rx_desc_pos", scope: !8207, file: !3, line: 489, baseType: !916, size: 16, offset: 128)
!8221 = !DIDerivedType(tag: DW_TAG_member, name: "rx_desc_count", scope: !8207, file: !3, line: 490, baseType: !916, size: 16, offset: 144)
!8222 = !DIDerivedType(tag: DW_TAG_member, name: "build_version", scope: !8207, file: !3, line: 492, baseType: !916, size: 16, offset: 160)
!8223 = !DIDerivedType(tag: DW_TAG_member, name: "command_pos", scope: !8207, file: !3, line: 493, baseType: !916, size: 16, offset: 176)
!8224 = !DIDerivedType(tag: DW_TAG_member, name: "major_version", scope: !8207, file: !3, line: 495, baseType: !916, size: 16, offset: 192)
!8225 = !DIDerivedType(tag: DW_TAG_member, name: "minor_version", scope: !8207, file: !3, line: 496, baseType: !916, size: 16, offset: 208)
!8226 = !DIDerivedType(tag: DW_TAG_member, name: "func_ctrl", scope: !8207, file: !3, line: 498, baseType: !916, size: 16, offset: 224)
!8227 = !DIDerivedType(tag: DW_TAG_member, name: "mac_status", scope: !8207, file: !3, line: 499, baseType: !916, size: 16, offset: 240)
!8228 = !DIDerivedType(tag: DW_TAG_member, name: "generic_IRQ_type", scope: !8207, file: !3, line: 500, baseType: !916, size: 16, offset: 256)
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8207, file: !3, line: 501, baseType: !8230, size: 16, offset: 272)
!8230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 16, elements: !3261)
!8231 = !DIDerivedType(tag: DW_TAG_member, name: "station_state", scope: !8150, file: !3, line: 513, baseType: !8232, size: 32, offset: 3552)
!8232 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !8150, file: !3, line: 504, baseType: !13, size: 32, elements: !8233)
!8233 = !{!8234, !8235, !8236, !8237, !8238, !8239, !8240, !8241}
!8234 = !DIEnumerator(name: "STATION_STATE_SCANNING", value: 0, isUnsigned: true)
!8235 = !DIEnumerator(name: "STATION_STATE_JOINNING", value: 1, isUnsigned: true)
!8236 = !DIEnumerator(name: "STATION_STATE_AUTHENTICATING", value: 2, isUnsigned: true)
!8237 = !DIEnumerator(name: "STATION_STATE_ASSOCIATING", value: 3, isUnsigned: true)
!8238 = !DIEnumerator(name: "STATION_STATE_READY", value: 4, isUnsigned: true)
!8239 = !DIEnumerator(name: "STATION_STATE_REASSOCIATING", value: 5, isUnsigned: true)
!8240 = !DIEnumerator(name: "STATION_STATE_DOWN", value: 6, isUnsigned: true)
!8241 = !DIEnumerator(name: "STATION_STATE_MGMT_ERROR", value: 7, isUnsigned: true)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "operating_mode", scope: !8150, file: !3, line: 515, baseType: !7, size: 32, offset: 3584)
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "power_mode", scope: !8150, file: !3, line: 515, baseType: !7, size: 32, offset: 3616)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "last_qual", scope: !8150, file: !3, line: 516, baseType: !517, size: 64, offset: 3648)
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "beacons_this_sec", scope: !8150, file: !3, line: 517, baseType: !7, size: 32, offset: 3712)
!8246 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !8150, file: !3, line: 518, baseType: !7, size: 32, offset: 3744)
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "reg_domain", scope: !8150, file: !3, line: 519, baseType: !7, size: 32, offset: 3776)
!8248 = !DIDerivedType(tag: DW_TAG_member, name: "config_reg_domain", scope: !8150, file: !3, line: 519, baseType: !7, size: 32, offset: 3808)
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rate", scope: !8150, file: !3, line: 520, baseType: !7, size: 32, offset: 3840)
!8250 = !DIDerivedType(tag: DW_TAG_member, name: "auto_tx_rate", scope: !8150, file: !3, line: 521, baseType: !7, size: 32, offset: 3872)
!8251 = !DIDerivedType(tag: DW_TAG_member, name: "rts_threshold", scope: !8150, file: !3, line: 522, baseType: !7, size: 32, offset: 3904)
!8252 = !DIDerivedType(tag: DW_TAG_member, name: "frag_threshold", scope: !8150, file: !3, line: 523, baseType: !7, size: 32, offset: 3936)
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "long_retry", scope: !8150, file: !3, line: 524, baseType: !7, size: 32, offset: 3968)
!8254 = !DIDerivedType(tag: DW_TAG_member, name: "short_retry", scope: !8150, file: !3, line: 524, baseType: !7, size: 32, offset: 4000)
!8255 = !DIDerivedType(tag: DW_TAG_member, name: "preamble", scope: !8150, file: !3, line: 525, baseType: !7, size: 32, offset: 4032)
!8256 = !DIDerivedType(tag: DW_TAG_member, name: "default_beacon_period", scope: !8150, file: !3, line: 526, baseType: !7, size: 32, offset: 4064)
!8257 = !DIDerivedType(tag: DW_TAG_member, name: "beacon_period", scope: !8150, file: !3, line: 526, baseType: !7, size: 32, offset: 4096)
!8258 = !DIDerivedType(tag: DW_TAG_member, name: "listen_interval", scope: !8150, file: !3, line: 526, baseType: !7, size: 32, offset: 4128)
!8259 = !DIDerivedType(tag: DW_TAG_member, name: "CurrentAuthentTransactionSeqNum", scope: !8150, file: !3, line: 527, baseType: !7, size: 32, offset: 4160)
!8260 = !DIDerivedType(tag: DW_TAG_member, name: "ExpectedAuthentTransactionSeqNum", scope: !8150, file: !3, line: 527, baseType: !7, size: 32, offset: 4192)
!8261 = !DIDerivedType(tag: DW_TAG_member, name: "AuthenticationRequestRetryCnt", scope: !8150, file: !3, line: 528, baseType: !7, size: 32, offset: 4224)
!8262 = !DIDerivedType(tag: DW_TAG_member, name: "AssociationRequestRetryCnt", scope: !8150, file: !3, line: 528, baseType: !7, size: 32, offset: 4256)
!8263 = !DIDerivedType(tag: DW_TAG_member, name: "ReAssociationRequestRetryCnt", scope: !8150, file: !3, line: 528, baseType: !7, size: 32, offset: 4288)
!8264 = !DIDerivedType(tag: DW_TAG_member, name: "site_survey_state", scope: !8150, file: !3, line: 533, baseType: !8265, size: 32, offset: 4320)
!8265 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !8150, file: !3, line: 529, baseType: !13, size: 32, elements: !8266)
!8266 = !{!8267, !8268, !8269}
!8267 = !DIEnumerator(name: "SITE_SURVEY_IDLE", value: 0, isUnsigned: true)
!8268 = !DIEnumerator(name: "SITE_SURVEY_IN_PROGRESS", value: 1, isUnsigned: true)
!8269 = !DIEnumerator(name: "SITE_SURVEY_COMPLETED", value: 2, isUnsigned: true)
!8270 = !DIDerivedType(tag: DW_TAG_member, name: "last_survey", scope: !8150, file: !3, line: 534, baseType: !517, size: 64, offset: 4352)
!8271 = !DIDerivedType(tag: DW_TAG_member, name: "station_was_associated", scope: !8150, file: !3, line: 536, baseType: !7, size: 32, offset: 4416)
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "station_is_associated", scope: !8150, file: !3, line: 536, baseType: !7, size: 32, offset: 4448)
!8273 = !DIDerivedType(tag: DW_TAG_member, name: "fast_scan", scope: !8150, file: !3, line: 537, baseType: !7, size: 32, offset: 4480)
!8274 = !DIDerivedType(tag: DW_TAG_member, name: "BSSinfo", scope: !8150, file: !3, line: 549, baseType: !8275, size: 34816, offset: 4512)
!8275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8276, size: 34816, elements: !4144)
!8276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bss_info", file: !3, line: 539, size: 544, elements: !8277)
!8277 = !{!8278, !8279, !8280, !8281, !8282, !8283, !8284, !8285, !8286}
!8278 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !8276, file: !3, line: 540, baseType: !7, size: 32)
!8279 = !DIDerivedType(tag: DW_TAG_member, name: "SSIDsize", scope: !8276, file: !3, line: 541, baseType: !7, size: 32, offset: 32)
!8280 = !DIDerivedType(tag: DW_TAG_member, name: "RSSI", scope: !8276, file: !3, line: 542, baseType: !7, size: 32, offset: 64)
!8281 = !DIDerivedType(tag: DW_TAG_member, name: "UsingWEP", scope: !8276, file: !3, line: 543, baseType: !7, size: 32, offset: 96)
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "preamble", scope: !8276, file: !3, line: 544, baseType: !7, size: 32, offset: 128)
!8283 = !DIDerivedType(tag: DW_TAG_member, name: "beacon_period", scope: !8276, file: !3, line: 545, baseType: !7, size: 32, offset: 160)
!8284 = !DIDerivedType(tag: DW_TAG_member, name: "BSStype", scope: !8276, file: !3, line: 546, baseType: !7, size: 32, offset: 192)
!8285 = !DIDerivedType(tag: DW_TAG_member, name: "BSSID", scope: !8276, file: !3, line: 547, baseType: !6709, size: 48, offset: 224)
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "SSID", scope: !8276, file: !3, line: 548, baseType: !7027, size: 256, offset: 272)
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "BSS_list_entries", scope: !8150, file: !3, line: 550, baseType: !7, size: 32, offset: 39328)
!8288 = !DIDerivedType(tag: DW_TAG_member, name: "current_BSS", scope: !8150, file: !3, line: 550, baseType: !7, size: 32, offset: 39360)
!8289 = !DIDerivedType(tag: DW_TAG_member, name: "connect_to_any_BSS", scope: !8150, file: !3, line: 551, baseType: !7, size: 32, offset: 39392)
!8290 = !DIDerivedType(tag: DW_TAG_member, name: "SSID_size", scope: !8150, file: !3, line: 552, baseType: !7, size: 32, offset: 39424)
!8291 = !DIDerivedType(tag: DW_TAG_member, name: "new_SSID_size", scope: !8150, file: !3, line: 552, baseType: !7, size: 32, offset: 39456)
!8292 = !DIDerivedType(tag: DW_TAG_member, name: "CurrentBSSID", scope: !8150, file: !3, line: 553, baseType: !6709, size: 48, offset: 39488)
!8293 = !DIDerivedType(tag: DW_TAG_member, name: "BSSID", scope: !8150, file: !3, line: 553, baseType: !6709, size: 48, offset: 39536)
!8294 = !DIDerivedType(tag: DW_TAG_member, name: "SSID", scope: !8150, file: !3, line: 554, baseType: !7027, size: 256, offset: 39584)
!8295 = !DIDerivedType(tag: DW_TAG_member, name: "new_SSID", scope: !8150, file: !3, line: 554, baseType: !7027, size: 256, offset: 39840)
!8296 = !DIDerivedType(tag: DW_TAG_member, name: "last_beacon_timestamp", scope: !8150, file: !3, line: 555, baseType: !536, size: 64, offset: 40128)
!8297 = !DIDerivedType(tag: DW_TAG_member, name: "rx_buf", scope: !8150, file: !3, line: 556, baseType: !8298, size: 18528, offset: 40192)
!8298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 18528, elements: !8299)
!8299 = !{!8300}
!8300 = !DISubrange(count: 2316)
!8301 = !{!8302, !8303}
!8302 = !DIEnumerator(name: "BUS_TYPE_PCCARD", value: 0, isUnsigned: true)
!8303 = !DIEnumerator(name: "BUS_TYPE_PCI", value: 1, isUnsigned: true)
!8304 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_queue_state_t", file: !6, line: 558, baseType: !13, size: 32, elements: !8305)
!8305 = !{!8306, !8307, !8308}
!8306 = !DIEnumerator(name: "__QUEUE_STATE_DRV_XOFF", value: 0, isUnsigned: true)
!8307 = !DIEnumerator(name: "__QUEUE_STATE_STACK_XOFF", value: 1, isUnsigned: true)
!8308 = !DIEnumerator(name: "__QUEUE_STATE_FROZEN", value: 2, isUnsigned: true)
!8309 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !8310, line: 10, baseType: !13, size: 32, elements: !8311)
!8310 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!8311 = !{!8312, !8313}
!8312 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!8313 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!8314 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_state_t", file: !6, line: 288, baseType: !13, size: 32, elements: !8315)
!8315 = !{!8316, !8317, !8318, !8319, !8320, !8321}
!8316 = !DIEnumerator(name: "__LINK_STATE_START", value: 0, isUnsigned: true)
!8317 = !DIEnumerator(name: "__LINK_STATE_PRESENT", value: 1, isUnsigned: true)
!8318 = !DIEnumerator(name: "__LINK_STATE_NOCARRIER", value: 2, isUnsigned: true)
!8319 = !DIEnumerator(name: "__LINK_STATE_LINKWATCH_PENDING", value: 3, isUnsigned: true)
!8320 = !DIEnumerator(name: "__LINK_STATE_DORMANT", value: 4, isUnsigned: true)
!8321 = !DIEnumerator(name: "__LINK_STATE_TESTING", value: 5, isUnsigned: true)
!8322 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !8323, line: 11, baseType: !13, size: 32, elements: !8324)
!8323 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!8324 = !{!8325, !8326, !8327}
!8325 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!8326 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!8327 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!8328 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ieee80211_statuscode", file: !7137, line: 2568, baseType: !13, size: 32, elements: !8329)
!8329 = !{!8330, !8331, !8332, !8333, !8334, !8335, !8336, !8337, !8338, !8339, !8340, !8341, !8342, !8343, !8344, !8345, !8346, !8347, !8348, !8349, !8350, !8351, !8352, !8353, !8354, !8355, !8356, !8357, !8358, !8359, !8360, !8361, !8362, !8363, !8364, !8365, !8366, !8367, !8368, !8369, !8370, !8371, !8372, !8373, !8374, !8375, !8376, !8377, !8378, !8379, !8380, !8381, !8382, !8383, !8384, !8385}
!8330 = !DIEnumerator(name: "WLAN_STATUS_SUCCESS", value: 0, isUnsigned: true)
!8331 = !DIEnumerator(name: "WLAN_STATUS_UNSPECIFIED_FAILURE", value: 1, isUnsigned: true)
!8332 = !DIEnumerator(name: "WLAN_STATUS_CAPS_UNSUPPORTED", value: 10, isUnsigned: true)
!8333 = !DIEnumerator(name: "WLAN_STATUS_REASSOC_NO_ASSOC", value: 11, isUnsigned: true)
!8334 = !DIEnumerator(name: "WLAN_STATUS_ASSOC_DENIED_UNSPEC", value: 12, isUnsigned: true)
!8335 = !DIEnumerator(name: "WLAN_STATUS_NOT_SUPPORTED_AUTH_ALG", value: 13, isUnsigned: true)
!8336 = !DIEnumerator(name: "WLAN_STATUS_UNKNOWN_AUTH_TRANSACTION", value: 14, isUnsigned: true)
!8337 = !DIEnumerator(name: "WLAN_STATUS_CHALLENGE_FAIL", value: 15, isUnsigned: true)
!8338 = !DIEnumerator(name: "WLAN_STATUS_AUTH_TIMEOUT", value: 16, isUnsigned: true)
!8339 = !DIEnumerator(name: "WLAN_STATUS_AP_UNABLE_TO_HANDLE_NEW_STA", value: 17, isUnsigned: true)
!8340 = !DIEnumerator(name: "WLAN_STATUS_ASSOC_DENIED_RATES", value: 18, isUnsigned: true)
!8341 = !DIEnumerator(name: "WLAN_STATUS_ASSOC_DENIED_NOSHORTPREAMBLE", value: 19, isUnsigned: true)
!8342 = !DIEnumerator(name: "WLAN_STATUS_ASSOC_DENIED_NOPBCC", value: 20, isUnsigned: true)
!8343 = !DIEnumerator(name: "WLAN_STATUS_ASSOC_DENIED_NOAGILITY", value: 21, isUnsigned: true)
!8344 = !DIEnumerator(name: "WLAN_STATUS_ASSOC_DENIED_NOSPECTRUM", value: 22, isUnsigned: true)
!8345 = !DIEnumerator(name: "WLAN_STATUS_ASSOC_REJECTED_BAD_POWER", value: 23, isUnsigned: true)
!8346 = !DIEnumerator(name: "WLAN_STATUS_ASSOC_REJECTED_BAD_SUPP_CHAN", value: 24, isUnsigned: true)
!8347 = !DIEnumerator(name: "WLAN_STATUS_ASSOC_DENIED_NOSHORTTIME", value: 25, isUnsigned: true)
!8348 = !DIEnumerator(name: "WLAN_STATUS_ASSOC_DENIED_NODSSSOFDM", value: 26, isUnsigned: true)
!8349 = !DIEnumerator(name: "WLAN_STATUS_ASSOC_REJECTED_TEMPORARILY", value: 30, isUnsigned: true)
!8350 = !DIEnumerator(name: "WLAN_STATUS_ROBUST_MGMT_FRAME_POLICY_VIOLATION", value: 31, isUnsigned: true)
!8351 = !DIEnumerator(name: "WLAN_STATUS_INVALID_IE", value: 40, isUnsigned: true)
!8352 = !DIEnumerator(name: "WLAN_STATUS_INVALID_GROUP_CIPHER", value: 41, isUnsigned: true)
!8353 = !DIEnumerator(name: "WLAN_STATUS_INVALID_PAIRWISE_CIPHER", value: 42, isUnsigned: true)
!8354 = !DIEnumerator(name: "WLAN_STATUS_INVALID_AKMP", value: 43, isUnsigned: true)
!8355 = !DIEnumerator(name: "WLAN_STATUS_UNSUPP_RSN_VERSION", value: 44, isUnsigned: true)
!8356 = !DIEnumerator(name: "WLAN_STATUS_INVALID_RSN_IE_CAP", value: 45, isUnsigned: true)
!8357 = !DIEnumerator(name: "WLAN_STATUS_CIPHER_SUITE_REJECTED", value: 46, isUnsigned: true)
!8358 = !DIEnumerator(name: "WLAN_STATUS_UNSPECIFIED_QOS", value: 32, isUnsigned: true)
!8359 = !DIEnumerator(name: "WLAN_STATUS_ASSOC_DENIED_NOBANDWIDTH", value: 33, isUnsigned: true)
!8360 = !DIEnumerator(name: "WLAN_STATUS_ASSOC_DENIED_LOWACK", value: 34, isUnsigned: true)
!8361 = !DIEnumerator(name: "WLAN_STATUS_ASSOC_DENIED_UNSUPP_QOS", value: 35, isUnsigned: true)
!8362 = !DIEnumerator(name: "WLAN_STATUS_REQUEST_DECLINED", value: 37, isUnsigned: true)
!8363 = !DIEnumerator(name: "WLAN_STATUS_INVALID_QOS_PARAM", value: 38, isUnsigned: true)
!8364 = !DIEnumerator(name: "WLAN_STATUS_CHANGE_TSPEC", value: 39, isUnsigned: true)
!8365 = !DIEnumerator(name: "WLAN_STATUS_WAIT_TS_DELAY", value: 47, isUnsigned: true)
!8366 = !DIEnumerator(name: "WLAN_STATUS_NO_DIRECT_LINK", value: 48, isUnsigned: true)
!8367 = !DIEnumerator(name: "WLAN_STATUS_STA_NOT_PRESENT", value: 49, isUnsigned: true)
!8368 = !DIEnumerator(name: "WLAN_STATUS_STA_NOT_QSTA", value: 50, isUnsigned: true)
!8369 = !DIEnumerator(name: "WLAN_STATUS_ANTI_CLOG_REQUIRED", value: 76, isUnsigned: true)
!8370 = !DIEnumerator(name: "WLAN_STATUS_FCG_NOT_SUPP", value: 78, isUnsigned: true)
!8371 = !DIEnumerator(name: "WLAN_STATUS_STA_NO_TBTT", value: 78, isUnsigned: true)
!8372 = !DIEnumerator(name: "WLAN_STATUS_REJECTED_WITH_SUGGESTED_CHANGES", value: 39, isUnsigned: true)
!8373 = !DIEnumerator(name: "WLAN_STATUS_REJECTED_FOR_DELAY_PERIOD", value: 47, isUnsigned: true)
!8374 = !DIEnumerator(name: "WLAN_STATUS_REJECT_WITH_SCHEDULE", value: 83, isUnsigned: true)
!8375 = !DIEnumerator(name: "WLAN_STATUS_PENDING_ADMITTING_FST_SESSION", value: 86, isUnsigned: true)
!8376 = !DIEnumerator(name: "WLAN_STATUS_PERFORMING_FST_NOW", value: 87, isUnsigned: true)
!8377 = !DIEnumerator(name: "WLAN_STATUS_PENDING_GAP_IN_BA_WINDOW", value: 88, isUnsigned: true)
!8378 = !DIEnumerator(name: "WLAN_STATUS_REJECT_U_PID_SETTING", value: 89, isUnsigned: true)
!8379 = !DIEnumerator(name: "WLAN_STATUS_REJECT_DSE_BAND", value: 96, isUnsigned: true)
!8380 = !DIEnumerator(name: "WLAN_STATUS_DENIED_WITH_SUGGESTED_BAND_AND_CHANNEL", value: 99, isUnsigned: true)
!8381 = !DIEnumerator(name: "WLAN_STATUS_DENIED_DUE_TO_SPECTRUM_MANAGEMENT", value: 103, isUnsigned: true)
!8382 = !DIEnumerator(name: "WLAN_STATUS_FILS_AUTHENTICATION_FAILURE", value: 108, isUnsigned: true)
!8383 = !DIEnumerator(name: "WLAN_STATUS_UNKNOWN_AUTHENTICATION_SERVER", value: 109, isUnsigned: true)
!8384 = !DIEnumerator(name: "WLAN_STATUS_SAE_HASH_TO_ELEMENT", value: 126, isUnsigned: true)
!8385 = !DIEnumerator(name: "WLAN_STATUS_SAE_PK", value: 127, isUnsigned: true)
!8386 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ieee80211_eid", file: !7137, line: 2697, baseType: !13, size: 32, elements: !8387)
!8387 = !{!8388, !8389, !8390, !8391, !8392, !8393, !8394, !8395, !8396, !8397, !8398, !8399, !8400, !8401, !8402, !8403, !8404, !8405, !8406, !8407, !8408, !8409, !8410, !8411, !8412, !8413, !8414, !8415, !8416, !8417, !8418, !8419, !8420, !8421, !8422, !8423, !8424, !8425, !8426, !8427, !8428, !8429, !8430, !8431, !8432, !8433, !8434, !8435, !8436, !8437, !8438, !8439, !8440, !8441, !8442, !8443, !8444, !8445, !8446, !8447, !8448, !8449, !8450, !8451, !8452, !8453, !8454, !8455, !8456, !8457, !8458, !8459, !8460, !8461, !8462, !8463, !8464, !8465, !8466, !8467, !8468, !8469, !8470, !8471, !8472, !8473, !8474, !8475, !8476, !8477, !8478, !8479, !8480, !8481, !8482, !8483, !8484, !8485, !8486, !8487, !8488, !8489, !8490, !8491, !8492, !8493, !8494, !8495, !8496, !8497, !8498, !8499, !8500, !8501, !8502, !8503, !8504, !8505, !8506, !8507, !8508, !8509, !8510, !8511, !8512, !8513, !8514, !8515, !8516, !8517, !8518, !8519, !8520, !8521, !8522, !8523, !8524, !8525, !8526, !8527, !8528, !8529, !8530, !8531, !8532, !8533, !8534, !8535, !8536, !8537, !8538, !8539, !8540, !8541, !8542, !8543, !8544, !8545, !8546, !8547, !8548, !8549, !8550, !8551, !8552, !8553, !8554, !8555, !8556, !8557, !8558, !8559, !8560, !8561, !8562, !8563, !8564, !8565, !8566, !8567, !8568, !8569}
!8388 = !DIEnumerator(name: "WLAN_EID_SSID", value: 0, isUnsigned: true)
!8389 = !DIEnumerator(name: "WLAN_EID_SUPP_RATES", value: 1, isUnsigned: true)
!8390 = !DIEnumerator(name: "WLAN_EID_FH_PARAMS", value: 2, isUnsigned: true)
!8391 = !DIEnumerator(name: "WLAN_EID_DS_PARAMS", value: 3, isUnsigned: true)
!8392 = !DIEnumerator(name: "WLAN_EID_CF_PARAMS", value: 4, isUnsigned: true)
!8393 = !DIEnumerator(name: "WLAN_EID_TIM", value: 5, isUnsigned: true)
!8394 = !DIEnumerator(name: "WLAN_EID_IBSS_PARAMS", value: 6, isUnsigned: true)
!8395 = !DIEnumerator(name: "WLAN_EID_COUNTRY", value: 7, isUnsigned: true)
!8396 = !DIEnumerator(name: "WLAN_EID_REQUEST", value: 10, isUnsigned: true)
!8397 = !DIEnumerator(name: "WLAN_EID_QBSS_LOAD", value: 11, isUnsigned: true)
!8398 = !DIEnumerator(name: "WLAN_EID_EDCA_PARAM_SET", value: 12, isUnsigned: true)
!8399 = !DIEnumerator(name: "WLAN_EID_TSPEC", value: 13, isUnsigned: true)
!8400 = !DIEnumerator(name: "WLAN_EID_TCLAS", value: 14, isUnsigned: true)
!8401 = !DIEnumerator(name: "WLAN_EID_SCHEDULE", value: 15, isUnsigned: true)
!8402 = !DIEnumerator(name: "WLAN_EID_CHALLENGE", value: 16, isUnsigned: true)
!8403 = !DIEnumerator(name: "WLAN_EID_PWR_CONSTRAINT", value: 32, isUnsigned: true)
!8404 = !DIEnumerator(name: "WLAN_EID_PWR_CAPABILITY", value: 33, isUnsigned: true)
!8405 = !DIEnumerator(name: "WLAN_EID_TPC_REQUEST", value: 34, isUnsigned: true)
!8406 = !DIEnumerator(name: "WLAN_EID_TPC_REPORT", value: 35, isUnsigned: true)
!8407 = !DIEnumerator(name: "WLAN_EID_SUPPORTED_CHANNELS", value: 36, isUnsigned: true)
!8408 = !DIEnumerator(name: "WLAN_EID_CHANNEL_SWITCH", value: 37, isUnsigned: true)
!8409 = !DIEnumerator(name: "WLAN_EID_MEASURE_REQUEST", value: 38, isUnsigned: true)
!8410 = !DIEnumerator(name: "WLAN_EID_MEASURE_REPORT", value: 39, isUnsigned: true)
!8411 = !DIEnumerator(name: "WLAN_EID_QUIET", value: 40, isUnsigned: true)
!8412 = !DIEnumerator(name: "WLAN_EID_IBSS_DFS", value: 41, isUnsigned: true)
!8413 = !DIEnumerator(name: "WLAN_EID_ERP_INFO", value: 42, isUnsigned: true)
!8414 = !DIEnumerator(name: "WLAN_EID_TS_DELAY", value: 43, isUnsigned: true)
!8415 = !DIEnumerator(name: "WLAN_EID_TCLAS_PROCESSING", value: 44, isUnsigned: true)
!8416 = !DIEnumerator(name: "WLAN_EID_HT_CAPABILITY", value: 45, isUnsigned: true)
!8417 = !DIEnumerator(name: "WLAN_EID_QOS_CAPA", value: 46, isUnsigned: true)
!8418 = !DIEnumerator(name: "WLAN_EID_RSN", value: 48, isUnsigned: true)
!8419 = !DIEnumerator(name: "WLAN_EID_802_15_COEX", value: 49, isUnsigned: true)
!8420 = !DIEnumerator(name: "WLAN_EID_EXT_SUPP_RATES", value: 50, isUnsigned: true)
!8421 = !DIEnumerator(name: "WLAN_EID_AP_CHAN_REPORT", value: 51, isUnsigned: true)
!8422 = !DIEnumerator(name: "WLAN_EID_NEIGHBOR_REPORT", value: 52, isUnsigned: true)
!8423 = !DIEnumerator(name: "WLAN_EID_RCPI", value: 53, isUnsigned: true)
!8424 = !DIEnumerator(name: "WLAN_EID_MOBILITY_DOMAIN", value: 54, isUnsigned: true)
!8425 = !DIEnumerator(name: "WLAN_EID_FAST_BSS_TRANSITION", value: 55, isUnsigned: true)
!8426 = !DIEnumerator(name: "WLAN_EID_TIMEOUT_INTERVAL", value: 56, isUnsigned: true)
!8427 = !DIEnumerator(name: "WLAN_EID_RIC_DATA", value: 57, isUnsigned: true)
!8428 = !DIEnumerator(name: "WLAN_EID_DSE_REGISTERED_LOCATION", value: 58, isUnsigned: true)
!8429 = !DIEnumerator(name: "WLAN_EID_SUPPORTED_REGULATORY_CLASSES", value: 59, isUnsigned: true)
!8430 = !DIEnumerator(name: "WLAN_EID_EXT_CHANSWITCH_ANN", value: 60, isUnsigned: true)
!8431 = !DIEnumerator(name: "WLAN_EID_HT_OPERATION", value: 61, isUnsigned: true)
!8432 = !DIEnumerator(name: "WLAN_EID_SECONDARY_CHANNEL_OFFSET", value: 62, isUnsigned: true)
!8433 = !DIEnumerator(name: "WLAN_EID_BSS_AVG_ACCESS_DELAY", value: 63, isUnsigned: true)
!8434 = !DIEnumerator(name: "WLAN_EID_ANTENNA_INFO", value: 64, isUnsigned: true)
!8435 = !DIEnumerator(name: "WLAN_EID_RSNI", value: 65, isUnsigned: true)
!8436 = !DIEnumerator(name: "WLAN_EID_MEASUREMENT_PILOT_TX_INFO", value: 66, isUnsigned: true)
!8437 = !DIEnumerator(name: "WLAN_EID_BSS_AVAILABLE_CAPACITY", value: 67, isUnsigned: true)
!8438 = !DIEnumerator(name: "WLAN_EID_BSS_AC_ACCESS_DELAY", value: 68, isUnsigned: true)
!8439 = !DIEnumerator(name: "WLAN_EID_TIME_ADVERTISEMENT", value: 69, isUnsigned: true)
!8440 = !DIEnumerator(name: "WLAN_EID_RRM_ENABLED_CAPABILITIES", value: 70, isUnsigned: true)
!8441 = !DIEnumerator(name: "WLAN_EID_MULTIPLE_BSSID", value: 71, isUnsigned: true)
!8442 = !DIEnumerator(name: "WLAN_EID_BSS_COEX_2040", value: 72, isUnsigned: true)
!8443 = !DIEnumerator(name: "WLAN_EID_BSS_INTOLERANT_CHL_REPORT", value: 73, isUnsigned: true)
!8444 = !DIEnumerator(name: "WLAN_EID_OVERLAP_BSS_SCAN_PARAM", value: 74, isUnsigned: true)
!8445 = !DIEnumerator(name: "WLAN_EID_RIC_DESCRIPTOR", value: 75, isUnsigned: true)
!8446 = !DIEnumerator(name: "WLAN_EID_MMIE", value: 76, isUnsigned: true)
!8447 = !DIEnumerator(name: "WLAN_EID_ASSOC_COMEBACK_TIME", value: 77, isUnsigned: true)
!8448 = !DIEnumerator(name: "WLAN_EID_EVENT_REQUEST", value: 78, isUnsigned: true)
!8449 = !DIEnumerator(name: "WLAN_EID_EVENT_REPORT", value: 79, isUnsigned: true)
!8450 = !DIEnumerator(name: "WLAN_EID_DIAGNOSTIC_REQUEST", value: 80, isUnsigned: true)
!8451 = !DIEnumerator(name: "WLAN_EID_DIAGNOSTIC_REPORT", value: 81, isUnsigned: true)
!8452 = !DIEnumerator(name: "WLAN_EID_LOCATION_PARAMS", value: 82, isUnsigned: true)
!8453 = !DIEnumerator(name: "WLAN_EID_NON_TX_BSSID_CAP", value: 83, isUnsigned: true)
!8454 = !DIEnumerator(name: "WLAN_EID_SSID_LIST", value: 84, isUnsigned: true)
!8455 = !DIEnumerator(name: "WLAN_EID_MULTI_BSSID_IDX", value: 85, isUnsigned: true)
!8456 = !DIEnumerator(name: "WLAN_EID_FMS_DESCRIPTOR", value: 86, isUnsigned: true)
!8457 = !DIEnumerator(name: "WLAN_EID_FMS_REQUEST", value: 87, isUnsigned: true)
!8458 = !DIEnumerator(name: "WLAN_EID_FMS_RESPONSE", value: 88, isUnsigned: true)
!8459 = !DIEnumerator(name: "WLAN_EID_QOS_TRAFFIC_CAPA", value: 89, isUnsigned: true)
!8460 = !DIEnumerator(name: "WLAN_EID_BSS_MAX_IDLE_PERIOD", value: 90, isUnsigned: true)
!8461 = !DIEnumerator(name: "WLAN_EID_TSF_REQUEST", value: 91, isUnsigned: true)
!8462 = !DIEnumerator(name: "WLAN_EID_TSF_RESPOSNE", value: 92, isUnsigned: true)
!8463 = !DIEnumerator(name: "WLAN_EID_WNM_SLEEP_MODE", value: 93, isUnsigned: true)
!8464 = !DIEnumerator(name: "WLAN_EID_TIM_BCAST_REQ", value: 94, isUnsigned: true)
!8465 = !DIEnumerator(name: "WLAN_EID_TIM_BCAST_RESP", value: 95, isUnsigned: true)
!8466 = !DIEnumerator(name: "WLAN_EID_COLL_IF_REPORT", value: 96, isUnsigned: true)
!8467 = !DIEnumerator(name: "WLAN_EID_CHANNEL_USAGE", value: 97, isUnsigned: true)
!8468 = !DIEnumerator(name: "WLAN_EID_TIME_ZONE", value: 98, isUnsigned: true)
!8469 = !DIEnumerator(name: "WLAN_EID_DMS_REQUEST", value: 99, isUnsigned: true)
!8470 = !DIEnumerator(name: "WLAN_EID_DMS_RESPONSE", value: 100, isUnsigned: true)
!8471 = !DIEnumerator(name: "WLAN_EID_LINK_ID", value: 101, isUnsigned: true)
!8472 = !DIEnumerator(name: "WLAN_EID_WAKEUP_SCHEDUL", value: 102, isUnsigned: true)
!8473 = !DIEnumerator(name: "WLAN_EID_CHAN_SWITCH_TIMING", value: 104, isUnsigned: true)
!8474 = !DIEnumerator(name: "WLAN_EID_PTI_CONTROL", value: 105, isUnsigned: true)
!8475 = !DIEnumerator(name: "WLAN_EID_PU_BUFFER_STATUS", value: 106, isUnsigned: true)
!8476 = !DIEnumerator(name: "WLAN_EID_INTERWORKING", value: 107, isUnsigned: true)
!8477 = !DIEnumerator(name: "WLAN_EID_ADVERTISEMENT_PROTOCOL", value: 108, isUnsigned: true)
!8478 = !DIEnumerator(name: "WLAN_EID_EXPEDITED_BW_REQ", value: 109, isUnsigned: true)
!8479 = !DIEnumerator(name: "WLAN_EID_QOS_MAP_SET", value: 110, isUnsigned: true)
!8480 = !DIEnumerator(name: "WLAN_EID_ROAMING_CONSORTIUM", value: 111, isUnsigned: true)
!8481 = !DIEnumerator(name: "WLAN_EID_EMERGENCY_ALERT", value: 112, isUnsigned: true)
!8482 = !DIEnumerator(name: "WLAN_EID_MESH_CONFIG", value: 113, isUnsigned: true)
!8483 = !DIEnumerator(name: "WLAN_EID_MESH_ID", value: 114, isUnsigned: true)
!8484 = !DIEnumerator(name: "WLAN_EID_LINK_METRIC_REPORT", value: 115, isUnsigned: true)
!8485 = !DIEnumerator(name: "WLAN_EID_CONGESTION_NOTIFICATION", value: 116, isUnsigned: true)
!8486 = !DIEnumerator(name: "WLAN_EID_PEER_MGMT", value: 117, isUnsigned: true)
!8487 = !DIEnumerator(name: "WLAN_EID_CHAN_SWITCH_PARAM", value: 118, isUnsigned: true)
!8488 = !DIEnumerator(name: "WLAN_EID_MESH_AWAKE_WINDOW", value: 119, isUnsigned: true)
!8489 = !DIEnumerator(name: "WLAN_EID_BEACON_TIMING", value: 120, isUnsigned: true)
!8490 = !DIEnumerator(name: "WLAN_EID_MCCAOP_SETUP_REQ", value: 121, isUnsigned: true)
!8491 = !DIEnumerator(name: "WLAN_EID_MCCAOP_SETUP_RESP", value: 122, isUnsigned: true)
!8492 = !DIEnumerator(name: "WLAN_EID_MCCAOP_ADVERT", value: 123, isUnsigned: true)
!8493 = !DIEnumerator(name: "WLAN_EID_MCCAOP_TEARDOWN", value: 124, isUnsigned: true)
!8494 = !DIEnumerator(name: "WLAN_EID_GANN", value: 125, isUnsigned: true)
!8495 = !DIEnumerator(name: "WLAN_EID_RANN", value: 126, isUnsigned: true)
!8496 = !DIEnumerator(name: "WLAN_EID_EXT_CAPABILITY", value: 127, isUnsigned: true)
!8497 = !DIEnumerator(name: "WLAN_EID_PREQ", value: 130, isUnsigned: true)
!8498 = !DIEnumerator(name: "WLAN_EID_PREP", value: 131, isUnsigned: true)
!8499 = !DIEnumerator(name: "WLAN_EID_PERR", value: 132, isUnsigned: true)
!8500 = !DIEnumerator(name: "WLAN_EID_PXU", value: 137, isUnsigned: true)
!8501 = !DIEnumerator(name: "WLAN_EID_PXUC", value: 138, isUnsigned: true)
!8502 = !DIEnumerator(name: "WLAN_EID_AUTH_MESH_PEER_EXCH", value: 139, isUnsigned: true)
!8503 = !DIEnumerator(name: "WLAN_EID_MIC", value: 140, isUnsigned: true)
!8504 = !DIEnumerator(name: "WLAN_EID_DESTINATION_URI", value: 141, isUnsigned: true)
!8505 = !DIEnumerator(name: "WLAN_EID_UAPSD_COEX", value: 142, isUnsigned: true)
!8506 = !DIEnumerator(name: "WLAN_EID_WAKEUP_SCHEDULE", value: 143, isUnsigned: true)
!8507 = !DIEnumerator(name: "WLAN_EID_EXT_SCHEDULE", value: 144, isUnsigned: true)
!8508 = !DIEnumerator(name: "WLAN_EID_STA_AVAILABILITY", value: 145, isUnsigned: true)
!8509 = !DIEnumerator(name: "WLAN_EID_DMG_TSPEC", value: 146, isUnsigned: true)
!8510 = !DIEnumerator(name: "WLAN_EID_DMG_AT", value: 147, isUnsigned: true)
!8511 = !DIEnumerator(name: "WLAN_EID_DMG_CAP", value: 148, isUnsigned: true)
!8512 = !DIEnumerator(name: "WLAN_EID_CISCO_VENDOR_SPECIFIC", value: 150, isUnsigned: true)
!8513 = !DIEnumerator(name: "WLAN_EID_DMG_OPERATION", value: 151, isUnsigned: true)
!8514 = !DIEnumerator(name: "WLAN_EID_DMG_BSS_PARAM_CHANGE", value: 152, isUnsigned: true)
!8515 = !DIEnumerator(name: "WLAN_EID_DMG_BEAM_REFINEMENT", value: 153, isUnsigned: true)
!8516 = !DIEnumerator(name: "WLAN_EID_CHANNEL_MEASURE_FEEDBACK", value: 154, isUnsigned: true)
!8517 = !DIEnumerator(name: "WLAN_EID_AWAKE_WINDOW", value: 157, isUnsigned: true)
!8518 = !DIEnumerator(name: "WLAN_EID_MULTI_BAND", value: 158, isUnsigned: true)
!8519 = !DIEnumerator(name: "WLAN_EID_ADDBA_EXT", value: 159, isUnsigned: true)
!8520 = !DIEnumerator(name: "WLAN_EID_NEXT_PCP_LIST", value: 160, isUnsigned: true)
!8521 = !DIEnumerator(name: "WLAN_EID_PCP_HANDOVER", value: 161, isUnsigned: true)
!8522 = !DIEnumerator(name: "WLAN_EID_DMG_LINK_MARGIN", value: 162, isUnsigned: true)
!8523 = !DIEnumerator(name: "WLAN_EID_SWITCHING_STREAM", value: 163, isUnsigned: true)
!8524 = !DIEnumerator(name: "WLAN_EID_SESSION_TRANSITION", value: 164, isUnsigned: true)
!8525 = !DIEnumerator(name: "WLAN_EID_DYN_TONE_PAIRING_REPORT", value: 165, isUnsigned: true)
!8526 = !DIEnumerator(name: "WLAN_EID_CLUSTER_REPORT", value: 166, isUnsigned: true)
!8527 = !DIEnumerator(name: "WLAN_EID_RELAY_CAP", value: 167, isUnsigned: true)
!8528 = !DIEnumerator(name: "WLAN_EID_RELAY_XFER_PARAM_SET", value: 168, isUnsigned: true)
!8529 = !DIEnumerator(name: "WLAN_EID_BEAM_LINK_MAINT", value: 169, isUnsigned: true)
!8530 = !DIEnumerator(name: "WLAN_EID_MULTIPLE_MAC_ADDR", value: 170, isUnsigned: true)
!8531 = !DIEnumerator(name: "WLAN_EID_U_PID", value: 171, isUnsigned: true)
!8532 = !DIEnumerator(name: "WLAN_EID_DMG_LINK_ADAPT_ACK", value: 172, isUnsigned: true)
!8533 = !DIEnumerator(name: "WLAN_EID_MCCAOP_ADV_OVERVIEW", value: 174, isUnsigned: true)
!8534 = !DIEnumerator(name: "WLAN_EID_QUIET_PERIOD_REQ", value: 175, isUnsigned: true)
!8535 = !DIEnumerator(name: "WLAN_EID_QUIET_PERIOD_RESP", value: 177, isUnsigned: true)
!8536 = !DIEnumerator(name: "WLAN_EID_EPAC_POLICY", value: 182, isUnsigned: true)
!8537 = !DIEnumerator(name: "WLAN_EID_CLISTER_TIME_OFF", value: 183, isUnsigned: true)
!8538 = !DIEnumerator(name: "WLAN_EID_INTER_AC_PRIO", value: 184, isUnsigned: true)
!8539 = !DIEnumerator(name: "WLAN_EID_SCS_DESCRIPTOR", value: 185, isUnsigned: true)
!8540 = !DIEnumerator(name: "WLAN_EID_QLOAD_REPORT", value: 186, isUnsigned: true)
!8541 = !DIEnumerator(name: "WLAN_EID_HCCA_TXOP_UPDATE_COUNT", value: 187, isUnsigned: true)
!8542 = !DIEnumerator(name: "WLAN_EID_HL_STREAM_ID", value: 188, isUnsigned: true)
!8543 = !DIEnumerator(name: "WLAN_EID_GCR_GROUP_ADDR", value: 189, isUnsigned: true)
!8544 = !DIEnumerator(name: "WLAN_EID_ANTENNA_SECTOR_ID_PATTERN", value: 190, isUnsigned: true)
!8545 = !DIEnumerator(name: "WLAN_EID_VHT_CAPABILITY", value: 191, isUnsigned: true)
!8546 = !DIEnumerator(name: "WLAN_EID_VHT_OPERATION", value: 192, isUnsigned: true)
!8547 = !DIEnumerator(name: "WLAN_EID_EXTENDED_BSS_LOAD", value: 193, isUnsigned: true)
!8548 = !DIEnumerator(name: "WLAN_EID_WIDE_BW_CHANNEL_SWITCH", value: 194, isUnsigned: true)
!8549 = !DIEnumerator(name: "WLAN_EID_VHT_TX_POWER_ENVELOPE", value: 195, isUnsigned: true)
!8550 = !DIEnumerator(name: "WLAN_EID_CHANNEL_SWITCH_WRAPPER", value: 196, isUnsigned: true)
!8551 = !DIEnumerator(name: "WLAN_EID_AID", value: 197, isUnsigned: true)
!8552 = !DIEnumerator(name: "WLAN_EID_QUIET_CHANNEL", value: 198, isUnsigned: true)
!8553 = !DIEnumerator(name: "WLAN_EID_OPMODE_NOTIF", value: 199, isUnsigned: true)
!8554 = !DIEnumerator(name: "WLAN_EID_REDUCED_NEIGHBOR_REPORT", value: 201, isUnsigned: true)
!8555 = !DIEnumerator(name: "WLAN_EID_AID_REQUEST", value: 210, isUnsigned: true)
!8556 = !DIEnumerator(name: "WLAN_EID_AID_RESPONSE", value: 211, isUnsigned: true)
!8557 = !DIEnumerator(name: "WLAN_EID_S1G_BCN_COMPAT", value: 213, isUnsigned: true)
!8558 = !DIEnumerator(name: "WLAN_EID_S1G_SHORT_BCN_INTERVAL", value: 214, isUnsigned: true)
!8559 = !DIEnumerator(name: "WLAN_EID_S1G_CAPABILITIES", value: 217, isUnsigned: true)
!8560 = !DIEnumerator(name: "WLAN_EID_VENDOR_SPECIFIC", value: 221, isUnsigned: true)
!8561 = !DIEnumerator(name: "WLAN_EID_QOS_PARAMETER", value: 222, isUnsigned: true)
!8562 = !DIEnumerator(name: "WLAN_EID_S1G_OPERATION", value: 232, isUnsigned: true)
!8563 = !DIEnumerator(name: "WLAN_EID_CAG_NUMBER", value: 237, isUnsigned: true)
!8564 = !DIEnumerator(name: "WLAN_EID_AP_CSN", value: 239, isUnsigned: true)
!8565 = !DIEnumerator(name: "WLAN_EID_FILS_INDICATION", value: 240, isUnsigned: true)
!8566 = !DIEnumerator(name: "WLAN_EID_DILS", value: 241, isUnsigned: true)
!8567 = !DIEnumerator(name: "WLAN_EID_FRAGMENT", value: 242, isUnsigned: true)
!8568 = !DIEnumerator(name: "WLAN_EID_RSNX", value: 244, isUnsigned: true)
!8569 = !DIEnumerator(name: "WLAN_EID_EXTENSION", value: 255, isUnsigned: true)
!8570 = !{!7, !676, !517, !8571, !622, !8573, !3771, !7142, !610, !899, !1308, !8574, !1319, !495, !2831, !2059, !8582, !538, !8600, !8609, !1115, !8621, !8634, !8685, !8587}
!8571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8572, size: 64)
!8572 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !473)
!8573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 64)
!8574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8575, size: 64)
!8575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iwreq", file: !615, line: 939, size: 256, elements: !8576)
!8576 = !{!8577, !8581}
!8577 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !8575, file: !615, line: 943, baseType: !8578, size: 128)
!8578 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8575, file: !615, line: 940, size: 128, elements: !8579)
!8579 = !{!8580}
!8580 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !8578, file: !615, line: 942, baseType: !472, size: 128)
!8581 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !8575, file: !615, line: 946, baseType: !614, size: 128, offset: 128)
!8582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8583, size: 64)
!8583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "beacon_format", scope: !8584, file: !3, line: 3320, size: 192, elements: !8598)
!8584 = distinct !DISubprogram(name: "atmel_management_frame", scope: !3, file: !3, line: 3306, type: !8585, scopeLine: 3309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!8585 = !DISubroutineType(types: !8586)
!8586 = !{null, !8587, !8588, !916, !1116}
!8587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8150, size: 64)
!8588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8589, size: 64)
!8589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee80211_hdr", file: !7137, line: 297, size: 240, align: 16, elements: !8590)
!8590 = !{!8591, !8592, !8593, !8594, !8595, !8596, !8597}
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "frame_control", scope: !8589, file: !7137, line: 298, baseType: !7142, size: 16)
!8592 = !DIDerivedType(tag: DW_TAG_member, name: "duration_id", scope: !8589, file: !7137, line: 299, baseType: !7142, size: 16, offset: 16)
!8593 = !DIDerivedType(tag: DW_TAG_member, name: "addr1", scope: !8589, file: !7137, line: 300, baseType: !6709, size: 48, offset: 32)
!8594 = !DIDerivedType(tag: DW_TAG_member, name: "addr2", scope: !8589, file: !7137, line: 301, baseType: !6709, size: 48, offset: 80)
!8595 = !DIDerivedType(tag: DW_TAG_member, name: "addr3", scope: !8589, file: !7137, line: 302, baseType: !6709, size: 48, offset: 128)
!8596 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ctrl", scope: !8589, file: !7137, line: 303, baseType: !7142, size: 16, offset: 176)
!8597 = !DIDerivedType(tag: DW_TAG_member, name: "addr4", scope: !8589, file: !7137, line: 304, baseType: !6709, size: 48, offset: 192)
!8598 = !{!8599, !8601, !8602, !8603, !8604, !8605, !8606, !8607, !8608}
!8599 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !8583, file: !3, line: 3321, baseType: !8600, size: 64)
!8600 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le64", file: !860, line: 33, baseType: !538)
!8601 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !8583, file: !3, line: 3322, baseType: !7142, size: 16, offset: 64)
!8602 = !DIDerivedType(tag: DW_TAG_member, name: "capability", scope: !8583, file: !3, line: 3323, baseType: !7142, size: 16, offset: 80)
!8603 = !DIDerivedType(tag: DW_TAG_member, name: "ssid_el_id", scope: !8583, file: !3, line: 3324, baseType: !1116, size: 8, offset: 96)
!8604 = !DIDerivedType(tag: DW_TAG_member, name: "ssid_length", scope: !8583, file: !3, line: 3325, baseType: !1116, size: 8, offset: 104)
!8605 = !DIDerivedType(tag: DW_TAG_member, name: "rates_el_id", scope: !8583, file: !3, line: 3327, baseType: !1116, size: 8, offset: 112)
!8606 = !DIDerivedType(tag: DW_TAG_member, name: "rates_length", scope: !8583, file: !3, line: 3328, baseType: !1116, size: 8, offset: 120)
!8607 = !DIDerivedType(tag: DW_TAG_member, name: "ds_el_id", scope: !8583, file: !3, line: 3330, baseType: !1116, size: 8, offset: 128)
!8608 = !DIDerivedType(tag: DW_TAG_member, name: "ds_length", scope: !8583, file: !3, line: 3331, baseType: !1116, size: 8, offset: 136)
!8609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8610, size: 64)
!8610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "auth_body", file: !3, line: 2694, size: 2096, elements: !8611)
!8611 = !{!8612, !8613, !8614, !8615, !8616, !8617}
!8612 = !DIDerivedType(tag: DW_TAG_member, name: "alg", scope: !8610, file: !3, line: 2695, baseType: !7142, size: 16)
!8613 = !DIDerivedType(tag: DW_TAG_member, name: "trans_seq", scope: !8610, file: !3, line: 2696, baseType: !7142, size: 16, offset: 16)
!8614 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !8610, file: !3, line: 2697, baseType: !7142, size: 16, offset: 32)
!8615 = !DIDerivedType(tag: DW_TAG_member, name: "el_id", scope: !8610, file: !3, line: 2698, baseType: !1116, size: 8, offset: 48)
!8616 = !DIDerivedType(tag: DW_TAG_member, name: "chall_text_len", scope: !8610, file: !3, line: 2699, baseType: !1116, size: 8, offset: 56)
!8617 = !DIDerivedType(tag: DW_TAG_member, name: "chall_text", scope: !8610, file: !3, line: 2700, baseType: !8618, size: 2024, offset: 64)
!8618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 2024, elements: !8619)
!8619 = !{!8620}
!8620 = !DISubrange(count: 253)
!8621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8622, size: 64)
!8622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ass_resp_format", scope: !8623, file: !3, line: 3111, size: 96, elements: !8626)
!8623 = distinct !DISubprogram(name: "associate", scope: !3, file: !3, line: 3109, type: !8624, scopeLine: 3110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!8624 = !DISubroutineType(types: !8625)
!8625 = !{null, !8587, !916, !916}
!8626 = !{!8627, !8628, !8629, !8630, !8631, !8632}
!8627 = !DIDerivedType(tag: DW_TAG_member, name: "capability", scope: !8622, file: !3, line: 3112, baseType: !7142, size: 16)
!8628 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !8622, file: !3, line: 3113, baseType: !7142, size: 16, offset: 16)
!8629 = !DIDerivedType(tag: DW_TAG_member, name: "ass_id", scope: !8622, file: !3, line: 3114, baseType: !7142, size: 16, offset: 32)
!8630 = !DIDerivedType(tag: DW_TAG_member, name: "el_id", scope: !8622, file: !3, line: 3115, baseType: !1116, size: 8, offset: 48)
!8631 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8622, file: !3, line: 3116, baseType: !1116, size: 8, offset: 56)
!8632 = !DIDerivedType(tag: DW_TAG_member, name: "rates", scope: !8622, file: !3, line: 3117, baseType: !8633, size: 32, offset: 64)
!8633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 32, elements: !2590)
!8634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8635, size: 64)
!8635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iw_range", file: !615, line: 959, size: 4544, elements: !8636)
!8636 = !{!8637, !8638, !8639, !8640, !8641, !8642, !8643, !8645, !8646, !8647, !8648, !8649, !8651, !8652, !8653, !8654, !8655, !8656, !8657, !8658, !8659, !8660, !8661, !8662, !8664, !8665, !8666, !8667, !8668, !8669, !8671, !8672, !8673, !8674, !8675, !8676, !8677, !8678, !8679, !8680, !8681, !8682, !8684}
!8637 = !DIDerivedType(tag: DW_TAG_member, name: "throughput", scope: !8635, file: !615, line: 961, baseType: !650, size: 32)
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "min_nwid", scope: !8635, file: !615, line: 970, baseType: !650, size: 32, offset: 32)
!8639 = !DIDerivedType(tag: DW_TAG_member, name: "max_nwid", scope: !8635, file: !615, line: 971, baseType: !650, size: 32, offset: 64)
!8640 = !DIDerivedType(tag: DW_TAG_member, name: "old_num_channels", scope: !8635, file: !615, line: 974, baseType: !610, size: 16, offset: 96)
!8641 = !DIDerivedType(tag: DW_TAG_member, name: "old_num_frequency", scope: !8635, file: !615, line: 975, baseType: !631, size: 8, offset: 112)
!8642 = !DIDerivedType(tag: DW_TAG_member, name: "scan_capa", scope: !8635, file: !615, line: 978, baseType: !631, size: 8, offset: 120)
!8643 = !DIDerivedType(tag: DW_TAG_member, name: "event_capa", scope: !8635, file: !615, line: 981, baseType: !8644, size: 192, offset: 128)
!8644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !650, size: 192, elements: !1320)
!8645 = !DIDerivedType(tag: DW_TAG_member, name: "sensitivity", scope: !8635, file: !615, line: 984, baseType: !629, size: 32, offset: 320)
!8646 = !DIDerivedType(tag: DW_TAG_member, name: "max_qual", scope: !8635, file: !615, line: 991, baseType: !655, size: 32, offset: 352)
!8647 = !DIDerivedType(tag: DW_TAG_member, name: "avg_qual", scope: !8635, file: !615, line: 1001, baseType: !655, size: 32, offset: 384)
!8648 = !DIDerivedType(tag: DW_TAG_member, name: "num_bitrates", scope: !8635, file: !615, line: 1004, baseType: !631, size: 8, offset: 416)
!8649 = !DIDerivedType(tag: DW_TAG_member, name: "bitrate", scope: !8635, file: !615, line: 1005, baseType: !8650, size: 1024, offset: 448)
!8650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !629, size: 1024, elements: !1141)
!8651 = !DIDerivedType(tag: DW_TAG_member, name: "min_rts", scope: !8635, file: !615, line: 1008, baseType: !629, size: 32, offset: 1472)
!8652 = !DIDerivedType(tag: DW_TAG_member, name: "max_rts", scope: !8635, file: !615, line: 1009, baseType: !629, size: 32, offset: 1504)
!8653 = !DIDerivedType(tag: DW_TAG_member, name: "min_frag", scope: !8635, file: !615, line: 1012, baseType: !629, size: 32, offset: 1536)
!8654 = !DIDerivedType(tag: DW_TAG_member, name: "max_frag", scope: !8635, file: !615, line: 1013, baseType: !629, size: 32, offset: 1568)
!8655 = !DIDerivedType(tag: DW_TAG_member, name: "min_pmp", scope: !8635, file: !615, line: 1016, baseType: !629, size: 32, offset: 1600)
!8656 = !DIDerivedType(tag: DW_TAG_member, name: "max_pmp", scope: !8635, file: !615, line: 1017, baseType: !629, size: 32, offset: 1632)
!8657 = !DIDerivedType(tag: DW_TAG_member, name: "min_pmt", scope: !8635, file: !615, line: 1018, baseType: !629, size: 32, offset: 1664)
!8658 = !DIDerivedType(tag: DW_TAG_member, name: "max_pmt", scope: !8635, file: !615, line: 1019, baseType: !629, size: 32, offset: 1696)
!8659 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_flags", scope: !8635, file: !615, line: 1020, baseType: !610, size: 16, offset: 1728)
!8660 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_flags", scope: !8635, file: !615, line: 1021, baseType: !610, size: 16, offset: 1744)
!8661 = !DIDerivedType(tag: DW_TAG_member, name: "pm_capa", scope: !8635, file: !615, line: 1022, baseType: !610, size: 16, offset: 1760)
!8662 = !DIDerivedType(tag: DW_TAG_member, name: "encoding_size", scope: !8635, file: !615, line: 1025, baseType: !8663, size: 128, offset: 1776)
!8663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 128, elements: !728)
!8664 = !DIDerivedType(tag: DW_TAG_member, name: "num_encoding_sizes", scope: !8635, file: !615, line: 1026, baseType: !631, size: 8, offset: 1904)
!8665 = !DIDerivedType(tag: DW_TAG_member, name: "max_encoding_tokens", scope: !8635, file: !615, line: 1027, baseType: !631, size: 8, offset: 1912)
!8666 = !DIDerivedType(tag: DW_TAG_member, name: "encoding_login_index", scope: !8635, file: !615, line: 1029, baseType: !631, size: 8, offset: 1920)
!8667 = !DIDerivedType(tag: DW_TAG_member, name: "txpower_capa", scope: !8635, file: !615, line: 1032, baseType: !610, size: 16, offset: 1936)
!8668 = !DIDerivedType(tag: DW_TAG_member, name: "num_txpower", scope: !8635, file: !615, line: 1033, baseType: !631, size: 8, offset: 1952)
!8669 = !DIDerivedType(tag: DW_TAG_member, name: "txpower", scope: !8635, file: !615, line: 1034, baseType: !8670, size: 256, offset: 1984)
!8670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !629, size: 256, elements: !728)
!8671 = !DIDerivedType(tag: DW_TAG_member, name: "we_version_compiled", scope: !8635, file: !615, line: 1037, baseType: !631, size: 8, offset: 2240)
!8672 = !DIDerivedType(tag: DW_TAG_member, name: "we_version_source", scope: !8635, file: !615, line: 1038, baseType: !631, size: 8, offset: 2248)
!8673 = !DIDerivedType(tag: DW_TAG_member, name: "retry_capa", scope: !8635, file: !615, line: 1041, baseType: !610, size: 16, offset: 2256)
!8674 = !DIDerivedType(tag: DW_TAG_member, name: "retry_flags", scope: !8635, file: !615, line: 1042, baseType: !610, size: 16, offset: 2272)
!8675 = !DIDerivedType(tag: DW_TAG_member, name: "r_time_flags", scope: !8635, file: !615, line: 1043, baseType: !610, size: 16, offset: 2288)
!8676 = !DIDerivedType(tag: DW_TAG_member, name: "min_retry", scope: !8635, file: !615, line: 1044, baseType: !629, size: 32, offset: 2304)
!8677 = !DIDerivedType(tag: DW_TAG_member, name: "max_retry", scope: !8635, file: !615, line: 1045, baseType: !629, size: 32, offset: 2336)
!8678 = !DIDerivedType(tag: DW_TAG_member, name: "min_r_time", scope: !8635, file: !615, line: 1046, baseType: !629, size: 32, offset: 2368)
!8679 = !DIDerivedType(tag: DW_TAG_member, name: "max_r_time", scope: !8635, file: !615, line: 1047, baseType: !629, size: 32, offset: 2400)
!8680 = !DIDerivedType(tag: DW_TAG_member, name: "num_channels", scope: !8635, file: !615, line: 1050, baseType: !610, size: 16, offset: 2432)
!8681 = !DIDerivedType(tag: DW_TAG_member, name: "num_frequency", scope: !8635, file: !615, line: 1051, baseType: !631, size: 8, offset: 2448)
!8682 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !8635, file: !615, line: 1052, baseType: !8683, size: 2048, offset: 2464)
!8683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !636, size: 2048, elements: !1141)
!8684 = !DIDerivedType(tag: DW_TAG_member, name: "enc_capa", scope: !8635, file: !615, line: 1056, baseType: !650, size: 32, offset: 4512)
!8685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8686, size: 64)
!8686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iw_encode_ext", file: !615, line: 829, size: 320, elements: !8687)
!8687 = !{!8688, !8689, !8691, !8692, !8693, !8694, !8695}
!8688 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !8686, file: !615, line: 830, baseType: !650, size: 32)
!8689 = !DIDerivedType(tag: DW_TAG_member, name: "tx_seq", scope: !8686, file: !615, line: 831, baseType: !8690, size: 64, offset: 32)
!8690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 64, elements: !728)
!8691 = !DIDerivedType(tag: DW_TAG_member, name: "rx_seq", scope: !8686, file: !615, line: 832, baseType: !8690, size: 64, offset: 96)
!8692 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !8686, file: !615, line: 833, baseType: !662, size: 128, offset: 160)
!8693 = !DIDerivedType(tag: DW_TAG_member, name: "alg", scope: !8686, file: !615, line: 836, baseType: !610, size: 16, offset: 288)
!8694 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !8686, file: !615, line: 837, baseType: !610, size: 16, offset: 304)
!8695 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8686, file: !615, line: 838, baseType: !818, offset: 320)
!8696 = !{!0, !8697, !8702, !8705, !8710, !8759, !8764, !8769, !8774, !8779, !8784, !8786, !8788, !8793, !8795, !8797, !8799, !8801, !8803, !8805, !8809, !8811, !8813, !8818, !8820, !8830, !8832, !8839, !8841, !8843, !8848, !8854, !8856, !8859, !8862, !8865, !8870, !8873}
!8697 = !DIGlobalVariableExpression(var: !8698, expr: !DIExpression())
!8698 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description333", scope: !2, file: !3, line: 76, type: !8699, isLocal: true, isDefinition: true, align: 8)
!8699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !498, size: 616, elements: !8700)
!8700 = !{!8701}
!8701 = !DISubrange(count: 77)
!8702 = !DIGlobalVariableExpression(var: !8703, expr: !DIExpression())
!8703 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file334", scope: !2, file: !3, line: 77, type: !8704, isLocal: true, isDefinition: true, align: 8)
!8704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !498, size: 352, elements: !2582)
!8705 = !DIGlobalVariableExpression(var: !8706, expr: !DIExpression())
!8706 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license335", scope: !2, file: !3, line: 77, type: !8707, isLocal: true, isDefinition: true, align: 8)
!8707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !498, size: 144, elements: !8708)
!8708 = !{!8709}
!8709 = !DISubrange(count: 18)
!8710 = !DIGlobalVariableExpression(var: !8711, expr: !DIExpression())
!8711 = distinct !DIGlobalVariable(name: "__param_firmware", scope: !2, file: !3, line: 83, type: !8712, isLocal: true, isDefinition: true, align: 64)
!8712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8713)
!8713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !8714, line: 69, size: 320, elements: !8715)
!8714 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!8715 = !{!8716, !8717, !8718, !8734, !8736, !8737, !8738}
!8716 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8713, file: !8714, line: 70, baseType: !497, size: 64)
!8717 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !8713, file: !8714, line: 71, baseType: !1301, size: 64, offset: 64)
!8718 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8713, file: !8714, line: 72, baseType: !8719, size: 64, offset: 128)
!8719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8720, size: 64)
!8720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8721)
!8721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !8714, line: 47, size: 256, elements: !8722)
!8722 = !{!8723, !8724, !8729, !8733}
!8723 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8721, file: !8714, line: 49, baseType: !13, size: 32)
!8724 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !8721, file: !8714, line: 51, baseType: !8725, size: 64, offset: 64)
!8725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8726, size: 64)
!8726 = !DISubroutineType(types: !8727)
!8727 = !{!7, !497, !8728}
!8728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8712, size: 64)
!8729 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !8721, file: !8714, line: 53, baseType: !8730, size: 64, offset: 128)
!8730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8731, size: 64)
!8731 = !DISubroutineType(types: !8732)
!8732 = !{!7, !676, !8728}
!8733 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !8721, file: !8714, line: 55, baseType: !1733, size: 64, offset: 192)
!8734 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !8713, file: !8714, line: 73, baseType: !8735, size: 16, offset: 192)
!8735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !916)
!8736 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !8713, file: !8714, line: 74, baseType: !7058, size: 8, offset: 208)
!8737 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8713, file: !8714, line: 75, baseType: !1116, size: 8, offset: 216)
!8738 = !DIDerivedType(tag: DW_TAG_member, scope: !8713, file: !8714, line: 76, baseType: !8739, size: 64, offset: 256)
!8739 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8713, file: !8714, line: 76, size: 64, elements: !8740)
!8740 = !{!8741, !8742, !8749}
!8741 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !8739, file: !8714, line: 77, baseType: !622, size: 64)
!8742 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !8739, file: !8714, line: 78, baseType: !8743, size: 64)
!8743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8744, size: 64)
!8744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8745)
!8745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !8714, line: 86, size: 128, elements: !8746)
!8746 = !{!8747, !8748}
!8747 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !8745, file: !8714, line: 87, baseType: !13, size: 32)
!8748 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !8745, file: !8714, line: 88, baseType: !676, size: 64, offset: 64)
!8749 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !8739, file: !8714, line: 79, baseType: !8750, size: 64)
!8750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8751, size: 64)
!8751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8752)
!8752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !8714, line: 92, size: 256, elements: !8753)
!8753 = !{!8754, !8755, !8756, !8757, !8758}
!8754 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !8752, file: !8714, line: 94, baseType: !13, size: 32)
!8755 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !8752, file: !8714, line: 95, baseType: !13, size: 32, offset: 32)
!8756 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !8752, file: !8714, line: 96, baseType: !4927, size: 64, offset: 64)
!8757 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8752, file: !8714, line: 97, baseType: !8719, size: 64, offset: 128)
!8758 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !8752, file: !8714, line: 98, baseType: !622, size: 64, offset: 192)
!8759 = !DIGlobalVariableExpression(var: !8760, expr: !DIExpression())
!8760 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmwaretype336", scope: !2, file: !3, line: 83, type: !8761, isLocal: true, isDefinition: true, align: 8)
!8761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !498, size: 240, elements: !8762)
!8762 = !{!8763}
!8763 = !DISubrange(count: 30)
!8764 = !DIGlobalVariableExpression(var: !8765, expr: !DIExpression())
!8765 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware337", scope: !2, file: !3, line: 101, type: !8766, isLocal: true, isDefinition: true, align: 8)
!8766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !498, size: 304, elements: !8767)
!8767 = !{!8768}
!8768 = !DISubrange(count: 38)
!8769 = !DIGlobalVariableExpression(var: !8770, expr: !DIExpression())
!8770 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware338", scope: !2, file: !3, line: 102, type: !8771, isLocal: true, isDefinition: true, align: 8)
!8771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !498, size: 272, elements: !8772)
!8772 = !{!8773}
!8773 = !DISubrange(count: 34)
!8774 = !DIGlobalVariableExpression(var: !8775, expr: !DIExpression())
!8775 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware339", scope: !2, file: !3, line: 103, type: !8776, isLocal: true, isDefinition: true, align: 8)
!8776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !498, size: 312, elements: !8777)
!8777 = !{!8778}
!8778 = !DISubrange(count: 39)
!8779 = !DIGlobalVariableExpression(var: !8780, expr: !DIExpression())
!8780 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware340", scope: !2, file: !3, line: 104, type: !8781, isLocal: true, isDefinition: true, align: 8)
!8781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !498, size: 280, elements: !8782)
!8782 = !{!8783}
!8783 = !DISubrange(count: 35)
!8784 = !DIGlobalVariableExpression(var: !8785, expr: !DIExpression())
!8785 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware341", scope: !2, file: !3, line: 105, type: !8776, isLocal: true, isDefinition: true, align: 8)
!8786 = !DIGlobalVariableExpression(var: !8787, expr: !DIExpression())
!8787 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware342", scope: !2, file: !3, line: 106, type: !8781, isLocal: true, isDefinition: true, align: 8)
!8788 = !DIGlobalVariableExpression(var: !8789, expr: !DIExpression())
!8789 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware343", scope: !2, file: !3, line: 107, type: !8790, isLocal: true, isDefinition: true, align: 8)
!8790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !498, size: 344, elements: !8791)
!8791 = !{!8792}
!8792 = !DISubrange(count: 43)
!8793 = !DIGlobalVariableExpression(var: !8794, expr: !DIExpression())
!8794 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware344", scope: !2, file: !3, line: 108, type: !8776, isLocal: true, isDefinition: true, align: 8)
!8795 = !DIGlobalVariableExpression(var: !8796, expr: !DIExpression())
!8796 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware345", scope: !2, file: !3, line: 109, type: !8766, isLocal: true, isDefinition: true, align: 8)
!8797 = !DIGlobalVariableExpression(var: !8798, expr: !DIExpression())
!8798 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware346", scope: !2, file: !3, line: 110, type: !8771, isLocal: true, isDefinition: true, align: 8)
!8799 = !DIGlobalVariableExpression(var: !8800, expr: !DIExpression())
!8800 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware347", scope: !2, file: !3, line: 111, type: !8790, isLocal: true, isDefinition: true, align: 8)
!8801 = !DIGlobalVariableExpression(var: !8802, expr: !DIExpression())
!8802 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware348", scope: !2, file: !3, line: 112, type: !8776, isLocal: true, isDefinition: true, align: 8)
!8803 = !DIGlobalVariableExpression(var: !8804, expr: !DIExpression())
!8804 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware349", scope: !2, file: !3, line: 113, type: !8704, isLocal: true, isDefinition: true, align: 8)
!8805 = !DIGlobalVariableExpression(var: !8806, expr: !DIExpression())
!8806 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware350", scope: !2, file: !3, line: 114, type: !8807, isLocal: true, isDefinition: true, align: 8)
!8807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !498, size: 320, elements: !8808)
!8808 = !{!8200}
!8809 = !DIGlobalVariableExpression(var: !8810, expr: !DIExpression())
!8810 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware351", scope: !2, file: !3, line: 115, type: !8766, isLocal: true, isDefinition: true, align: 8)
!8811 = !DIGlobalVariableExpression(var: !8812, expr: !DIExpression())
!8812 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware352", scope: !2, file: !3, line: 116, type: !8771, isLocal: true, isDefinition: true, align: 8)
!8813 = !DIGlobalVariableExpression(var: !8814, expr: !DIExpression())
!8814 = distinct !DIGlobalVariable(name: "__param_str_firmware", scope: !2, file: !3, line: 83, type: !8815, isLocal: true, isDefinition: true)
!8815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !498, size: 120, elements: !8816)
!8816 = !{!8817}
!8817 = !DISubrange(count: 15)
!8818 = !DIGlobalVariableExpression(var: !8819, expr: !DIExpression())
!8819 = distinct !DIGlobalVariable(name: "firmware", scope: !2, file: !3, line: 82, type: !676, isLocal: true, isDefinition: true)
!8820 = !DIGlobalVariableExpression(var: !8821, expr: !DIExpression())
!8821 = distinct !DIGlobalVariable(name: "channel_table", scope: !2, file: !3, line: 565, type: !8822, isLocal: true, isDefinition: true)
!8822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8823, size: 1536, elements: !728)
!8823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8824)
!8824 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 561, size: 192, elements: !8825)
!8825 = !{!8826, !8827, !8828, !8829}
!8826 = !DIDerivedType(tag: DW_TAG_member, name: "reg_domain", scope: !8824, file: !3, line: 562, baseType: !7, size: 32)
!8827 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !8824, file: !3, line: 563, baseType: !7, size: 32, offset: 32)
!8828 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !8824, file: !3, line: 563, baseType: !7, size: 32, offset: 64)
!8829 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8824, file: !3, line: 564, baseType: !676, size: 64, offset: 128)
!8830 = !DIGlobalVariableExpression(var: !8831, expr: !DIExpression())
!8831 = distinct !DIGlobalVariable(name: "atmel_netdev_ops", scope: !2, file: !3, line: 1486, type: !738, isLocal: true, isDefinition: true)
!8832 = !DIGlobalVariableExpression(var: !8833, expr: !DIExpression())
!8833 = distinct !DIGlobalVariable(name: "irq_order", scope: !8834, file: !3, line: 1161, type: !8838, isLocal: true, isDefinition: true)
!8834 = distinct !DISubprogram(name: "service_interrupt", scope: !3, file: !3, line: 1155, type: !8835, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!8835 = !DISubroutineType(types: !8836)
!8836 = !{!8837, !7, !622}
!8837 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !8323, line: 17, baseType: !8322)
!8838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6165, size: 64, elements: !728)
!8839 = !DIGlobalVariableExpression(var: !8840, expr: !DIExpression())
!8840 = distinct !DIGlobalVariable(name: "atmel_basic_rates", scope: !2, file: !3, line: 559, type: !8633, isLocal: true, isDefinition: true)
!8841 = !DIGlobalVariableExpression(var: !8842, expr: !DIExpression())
!8842 = distinct !DIGlobalVariable(name: "atmel_handler_def", scope: !2, file: !3, line: 2614, type: !595, isLocal: true, isDefinition: true)
!8843 = !DIGlobalVariableExpression(var: !8844, expr: !DIExpression())
!8844 = distinct !DIGlobalVariable(name: "atmel_handler", scope: !2, file: !3, line: 2517, type: !8845, isLocal: true, isDefinition: true)
!8845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !601, size: 3520, elements: !8846)
!8846 = !{!8847}
!8847 = !DISubrange(count: 55)
!8848 = !DIGlobalVariableExpression(var: !8849, expr: !DIExpression())
!8849 = distinct !DIGlobalVariable(name: "any", scope: !8850, file: !3, line: 2474, type: !8853, isLocal: true, isDefinition: true)
!8850 = distinct !DISubprogram(name: "atmel_set_wap", scope: !3, file: !3, line: 2467, type: !8851, scopeLine: 2471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!8851 = !DISubroutineType(types: !8852)
!8852 = !{!7, !495, !606, !6862, !676}
!8853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6165, size: 48, elements: !1320)
!8854 = !DIGlobalVariableExpression(var: !8855, expr: !DIExpression())
!8855 = distinct !DIGlobalVariable(name: "off", scope: !8850, file: !3, line: 2475, type: !8853, isLocal: true, isDefinition: true)
!8856 = !DIGlobalVariableExpression(var: !8857, expr: !DIExpression())
!8857 = distinct !DIGlobalVariable(name: "atmel_private_handler", scope: !2, file: !3, line: 2576, type: !8858, isLocal: true, isDefinition: true)
!8858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !601, size: 64, elements: !2787)
!8859 = !DIGlobalVariableExpression(var: !8860, expr: !DIExpression())
!8860 = distinct !DIGlobalVariable(name: "atmel_private_args", scope: !2, file: !3, line: 2593, type: !8861, isLocal: true, isDefinition: true)
!8861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 576, elements: !1909)
!8862 = !DIGlobalVariableExpression(var: !8863, expr: !DIExpression())
!8863 = distinct !DIGlobalVariable(name: "default_mac", scope: !8864, file: !3, line: 3730, type: !8853, isLocal: true, isDefinition: true)
!8864 = distinct !DISubprogram(name: "probe_atmel_card", scope: !3, file: !3, line: 3669, type: !743, scopeLine: 3670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!8865 = !DIGlobalVariableExpression(var: !8866, expr: !DIExpression())
!8866 = distinct !DIGlobalVariable(name: "mac_reader", scope: !2, file: !3, line: 395, type: !8867, isLocal: true, isDefinition: true)
!8867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 5280, elements: !8868)
!8868 = !{!8869}
!8869 = !DISubrange(count: 660)
!8870 = !DIGlobalVariableExpression(var: !8871, expr: !DIExpression())
!8871 = distinct !DIGlobalVariable(name: "firmware_modifier", scope: !8872, file: !3, line: 3865, type: !6679, isLocal: true, isDefinition: true)
!8872 = distinct !DISubprogram(name: "reset_atmel_card", scope: !3, file: !3, line: 3841, type: !743, scopeLine: 3842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!8873 = !DIGlobalVariableExpression(var: !8874, expr: !DIExpression())
!8874 = distinct !DIGlobalVariable(name: "fw_table", scope: !2, file: !3, line: 90, type: !8875, isLocal: true, isDefinition: true)
!8875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8876, size: 1728, elements: !3419)
!8876 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 86, size: 192, elements: !8877)
!8877 = !{!8878, !8879, !8880}
!8878 = !DIDerivedType(tag: DW_TAG_member, name: "fw_type", scope: !8876, file: !3, line: 87, baseType: !8159, size: 32)
!8879 = !DIDerivedType(tag: DW_TAG_member, name: "fw_file", scope: !8876, file: !3, line: 88, baseType: !497, size: 64, offset: 64)
!8880 = !DIDerivedType(tag: DW_TAG_member, name: "fw_file_ext", scope: !8876, file: !3, line: 89, baseType: !497, size: 64, offset: 128)
!8881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !498, size: 208, elements: !8882)
!8882 = !{!8883}
!8883 = !DISubrange(count: 26)
!8884 = !{!"rsp"}
!8885 = !{i32 7, !"Dwarf Version", i32 4}
!8886 = !{i32 2, !"Debug Info Version", i32 3}
!8887 = !{i32 1, !"wchar_size", i32 2}
!8888 = !{i32 1, !"Code Model", i32 2}
!8889 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!8890 = distinct !DISubprogram(name: "atmel_open", scope: !3, file: !3, line: 1306, type: !743, scopeLine: 1307, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!8891 = !DILocalVariable(name: "dev", arg: 1, scope: !8890, file: !3, line: 1306, type: !495)
!8892 = !DILocation(line: 1306, column: 35, scope: !8890)
!8893 = !DILocalVariable(name: "priv", scope: !8890, file: !3, line: 1308, type: !8587)
!8894 = !DILocation(line: 1308, column: 24, scope: !8890)
!8895 = !DILocation(line: 1308, column: 43, scope: !8890)
!8896 = !DILocation(line: 1308, column: 31, scope: !8890)
!8897 = !DILocalVariable(name: "i", scope: !8890, file: !3, line: 1309, type: !7)
!8898 = !DILocation(line: 1309, column: 6, scope: !8890)
!8899 = !DILocalVariable(name: "channel", scope: !8890, file: !3, line: 1309, type: !7)
!8900 = !DILocation(line: 1309, column: 9, scope: !8890)
!8901 = !DILocalVariable(name: "err", scope: !8890, file: !3, line: 1309, type: !7)
!8902 = !DILocation(line: 1309, column: 18, scope: !8890)
!8903 = !DILocation(line: 1312, column: 2, scope: !8890)
!8904 = !DILocation(line: 1315, column: 2, scope: !8890)
!8905 = !DILocation(line: 1315, column: 8, scope: !8890)
!8906 = !DILocation(line: 1315, column: 22, scope: !8890)
!8907 = !DILocation(line: 1317, column: 6, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8890, file: !3, line: 1317, column: 6)
!8909 = !DILocation(line: 1317, column: 12, scope: !8908)
!8910 = !DILocation(line: 1317, column: 6, scope: !8890)
!8911 = !DILocation(line: 1318, column: 10, scope: !8912)
!8912 = distinct !DILexicalBlock(scope: !8908, file: !3, line: 1317, column: 27)
!8913 = !DILocation(line: 1318, column: 16, scope: !8912)
!8914 = !DILocation(line: 1318, column: 3, scope: !8912)
!8915 = !DILocation(line: 1318, column: 22, scope: !8912)
!8916 = !DILocation(line: 1318, column: 28, scope: !8912)
!8917 = !DILocation(line: 1318, column: 38, scope: !8912)
!8918 = !DILocation(line: 1318, column: 44, scope: !8912)
!8919 = !DILocation(line: 1319, column: 21, scope: !8912)
!8920 = !DILocation(line: 1319, column: 27, scope: !8912)
!8921 = !DILocation(line: 1319, column: 3, scope: !8912)
!8922 = !DILocation(line: 1319, column: 9, scope: !8912)
!8923 = !DILocation(line: 1319, column: 19, scope: !8912)
!8924 = !DILocation(line: 1320, column: 3, scope: !8912)
!8925 = !DILocation(line: 1320, column: 9, scope: !8912)
!8926 = !DILocation(line: 1320, column: 23, scope: !8912)
!8927 = !DILocation(line: 1321, column: 2, scope: !8912)
!8928 = !DILocation(line: 1322, column: 2, scope: !8890)
!8929 = !DILocation(line: 1322, column: 8, scope: !8890)
!8930 = !DILocation(line: 1322, column: 25, scope: !8890)
!8931 = !DILocation(line: 1324, column: 2, scope: !8890)
!8932 = !DILocation(line: 1324, column: 8, scope: !8890)
!8933 = !DILocation(line: 1324, column: 38, scope: !8890)
!8934 = !DILocation(line: 1325, column: 2, scope: !8890)
!8935 = !DILocation(line: 1325, column: 8, scope: !8890)
!8936 = !DILocation(line: 1325, column: 35, scope: !8890)
!8937 = !DILocation(line: 1326, column: 2, scope: !8890)
!8938 = !DILocation(line: 1326, column: 8, scope: !8890)
!8939 = !DILocation(line: 1326, column: 37, scope: !8890)
!8940 = !DILocation(line: 1327, column: 2, scope: !8890)
!8941 = !DILocation(line: 1327, column: 8, scope: !8890)
!8942 = !DILocation(line: 1327, column: 40, scope: !8890)
!8943 = !DILocation(line: 1328, column: 2, scope: !8890)
!8944 = !DILocation(line: 1328, column: 8, scope: !8890)
!8945 = !DILocation(line: 1328, column: 41, scope: !8890)
!8946 = !DILocation(line: 1330, column: 2, scope: !8890)
!8947 = !DILocation(line: 1330, column: 8, scope: !8890)
!8948 = !DILocation(line: 1330, column: 26, scope: !8890)
!8949 = !DILocation(line: 1331, column: 2, scope: !8890)
!8950 = !DILocation(line: 1331, column: 8, scope: !8890)
!8951 = !DILocation(line: 1331, column: 30, scope: !8890)
!8952 = !DILocation(line: 1333, column: 25, scope: !8890)
!8953 = !DILocation(line: 1333, column: 8, scope: !8890)
!8954 = !DILocation(line: 1333, column: 6, scope: !8890)
!8955 = !DILocation(line: 1334, column: 6, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8890, file: !3, line: 1334, column: 6)
!8957 = !DILocation(line: 1334, column: 6, scope: !8890)
!8958 = !DILocation(line: 1335, column: 10, scope: !8956)
!8959 = !DILocation(line: 1335, column: 3, scope: !8956)
!8960 = !DILocation(line: 1337, column: 6, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8890, file: !3, line: 1337, column: 6)
!8962 = !DILocation(line: 1337, column: 12, scope: !8961)
!8963 = !DILocation(line: 1337, column: 6, scope: !8890)
!8964 = !DILocation(line: 1338, column: 22, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 1337, column: 31)
!8966 = !DILocation(line: 1338, column: 28, scope: !8965)
!8967 = !DILocation(line: 1338, column: 3, scope: !8965)
!8968 = !DILocation(line: 1338, column: 9, scope: !8965)
!8969 = !DILocation(line: 1338, column: 20, scope: !8965)
!8970 = !DILocation(line: 1339, column: 18, scope: !8965)
!8971 = !DILocation(line: 1339, column: 62, scope: !8965)
!8972 = !DILocation(line: 1339, column: 68, scope: !8965)
!8973 = !DILocation(line: 1339, column: 3, scope: !8965)
!8974 = !DILocation(line: 1340, column: 2, scope: !8965)
!8975 = !DILocation(line: 1341, column: 37, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 1340, column: 9)
!8977 = !DILocation(line: 1341, column: 22, scope: !8976)
!8978 = !DILocation(line: 1341, column: 3, scope: !8976)
!8979 = !DILocation(line: 1341, column: 9, scope: !8976)
!8980 = !DILocation(line: 1341, column: 20, scope: !8976)
!8981 = !DILocation(line: 1342, column: 10, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8976, file: !3, line: 1342, column: 3)
!8983 = !DILocation(line: 1342, column: 8, scope: !8982)
!8984 = !DILocation(line: 1342, column: 15, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8982, file: !3, line: 1342, column: 3)
!8986 = !DILocation(line: 1342, column: 17, scope: !8985)
!8987 = !DILocation(line: 1342, column: 3, scope: !8982)
!8988 = !DILocation(line: 1343, column: 8, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8985, file: !3, line: 1343, column: 8)
!8990 = !DILocation(line: 1343, column: 14, scope: !8989)
!8991 = !DILocation(line: 1343, column: 42, scope: !8989)
!8992 = !DILocation(line: 1343, column: 28, scope: !8989)
!8993 = !DILocation(line: 1343, column: 45, scope: !8989)
!8994 = !DILocation(line: 1343, column: 25, scope: !8989)
!8995 = !DILocation(line: 1343, column: 8, scope: !8985)
!8996 = !DILocation(line: 1344, column: 5, scope: !8989)
!8997 = !DILocation(line: 1342, column: 47, scope: !8985)
!8998 = !DILocation(line: 1342, column: 3, scope: !8985)
!8999 = distinct !{!8999, !8987, !9000}
!9000 = !DILocation(line: 1344, column: 5, scope: !8982)
!9001 = !DILocation(line: 1345, column: 7, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8976, file: !3, line: 1345, column: 7)
!9003 = !DILocation(line: 1345, column: 9, scope: !9002)
!9004 = !DILocation(line: 1345, column: 7, scope: !8976)
!9005 = !DILocation(line: 1346, column: 4, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !9002, file: !3, line: 1345, column: 39)
!9007 = !DILocation(line: 1346, column: 10, scope: !9006)
!9008 = !DILocation(line: 1346, column: 21, scope: !9006)
!9009 = !DILocation(line: 1347, column: 79, scope: !9006)
!9010 = !DILocation(line: 1347, column: 84, scope: !9006)
!9011 = !DILocation(line: 1347, column: 4, scope: !9006)
!9012 = !DILocation(line: 1348, column: 3, scope: !9006)
!9013 = !DILocation(line: 1351, column: 40, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !8890, file: !3, line: 1351, column: 6)
!9015 = !DILocation(line: 1351, column: 46, scope: !9014)
!9016 = !DILocation(line: 1351, column: 52, scope: !9014)
!9017 = !DILocation(line: 1351, column: 17, scope: !9014)
!9018 = !DILocation(line: 1351, column: 15, scope: !9014)
!9019 = !DILocation(line: 1351, column: 6, scope: !8890)
!9020 = !DILocation(line: 1352, column: 19, scope: !9014)
!9021 = !DILocation(line: 1352, column: 3, scope: !9014)
!9022 = !DILocation(line: 1352, column: 9, scope: !9014)
!9023 = !DILocation(line: 1352, column: 17, scope: !9014)
!9024 = !DILocation(line: 1355, column: 13, scope: !8890)
!9025 = !DILocation(line: 1355, column: 2, scope: !8890)
!9026 = !DILocation(line: 1357, column: 16, scope: !8890)
!9027 = !DILocation(line: 1357, column: 22, scope: !8890)
!9028 = !DILocation(line: 1357, column: 2, scope: !8890)
!9029 = !DILocation(line: 1358, column: 2, scope: !8890)
!9030 = !DILocation(line: 1359, column: 1, scope: !8890)
!9031 = distinct !DISubprogram(name: "netdev_priv", scope: !6, file: !6, line: 2322, type: !9032, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!9032 = !DISubroutineType(types: !9033)
!9033 = !{!622, !1095}
!9034 = !DILocalVariable(name: "dev", arg: 1, scope: !9031, file: !6, line: 2322, type: !1095)
!9035 = !DILocation(line: 2322, column: 58, scope: !9031)
!9036 = !DILocation(line: 2324, column: 17, scope: !9031)
!9037 = !DILocation(line: 2324, column: 9, scope: !9031)
!9038 = !DILocation(line: 2324, column: 21, scope: !9031)
!9039 = !DILocation(line: 2324, column: 2, scope: !9031)
!9040 = !DILocalVariable(name: "dev", arg: 1, scope: !8872, file: !3, line: 3841, type: !495)
!9041 = !DILocation(line: 3841, column: 48, scope: !8872)
!9042 = !DILocalVariable(name: "priv", scope: !8872, file: !3, line: 3857, type: !8587)
!9043 = !DILocation(line: 3857, column: 24, scope: !8872)
!9044 = !DILocation(line: 3857, column: 43, scope: !8872)
!9045 = !DILocation(line: 3857, column: 31, scope: !8872)
!9046 = !DILocalVariable(name: "configuration", scope: !8872, file: !3, line: 3858, type: !1116)
!9047 = !DILocation(line: 3858, column: 5, scope: !8872)
!9048 = !DILocalVariable(name: "old_state", scope: !8872, file: !3, line: 3859, type: !7)
!9049 = !DILocation(line: 3859, column: 6, scope: !8872)
!9050 = !DILocation(line: 3859, column: 18, scope: !8872)
!9051 = !DILocation(line: 3859, column: 24, scope: !8872)
!9052 = !DILocalVariable(name: "err", scope: !8872, file: !3, line: 3860, type: !7)
!9053 = !DILocation(line: 3860, column: 6, scope: !8872)
!9054 = !DILocation(line: 3872, column: 6, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 3872, column: 6)
!9056 = !DILocation(line: 3872, column: 12, scope: !9055)
!9057 = !DILocation(line: 3872, column: 21, scope: !9055)
!9058 = !DILocation(line: 3872, column: 6, scope: !8872)
!9059 = !DILocation(line: 3873, column: 17, scope: !9055)
!9060 = !DILocation(line: 3873, column: 23, scope: !9055)
!9061 = !DILocation(line: 3873, column: 3, scope: !9055)
!9062 = !DILocation(line: 3876, column: 16, scope: !8872)
!9063 = !DILocation(line: 3876, column: 22, scope: !8872)
!9064 = !DILocation(line: 3876, column: 2, scope: !8872)
!9065 = !DILocation(line: 3878, column: 6, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 3878, column: 6)
!9067 = !DILocation(line: 3878, column: 12, scope: !9066)
!9068 = !DILocation(line: 3878, column: 22, scope: !9066)
!9069 = !DILocation(line: 3878, column: 6, scope: !8872)
!9070 = !DILocalVariable(name: "fw_entry", scope: !9071, file: !3, line: 3880, type: !9072)
!9071 = distinct !DILexicalBlock(scope: !9066, file: !3, line: 3878, column: 43)
!9072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9073, size: 64)
!9073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9074)
!9074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "firmware", file: !9075, line: 12, size: 192, elements: !9076)
!9075 = !DIFile(filename: "./include/linux/firmware.h", directory: "/home/lizy2001/genbc/linux")
!9076 = !{!9077, !9078, !9079}
!9077 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9074, file: !9075, line: 13, baseType: !1358, size: 64)
!9078 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9074, file: !9075, line: 14, baseType: !6164, size: 64, offset: 64)
!9079 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !9074, file: !9075, line: 17, baseType: !622, size: 64, offset: 128)
!9080 = !DILocation(line: 3880, column: 26, scope: !9071)
!9081 = !DILocalVariable(name: "fw", scope: !9071, file: !3, line: 3881, type: !1267)
!9082 = !DILocation(line: 3881, column: 24, scope: !9071)
!9083 = !DILocalVariable(name: "len", scope: !9071, file: !3, line: 3882, type: !7)
!9084 = !DILocation(line: 3882, column: 7, scope: !9071)
!9085 = !DILocation(line: 3882, column: 13, scope: !9071)
!9086 = !DILocation(line: 3882, column: 19, scope: !9071)
!9087 = !DILocation(line: 3883, column: 14, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9071, file: !3, line: 3883, column: 7)
!9089 = !DILocation(line: 3883, column: 20, scope: !9088)
!9090 = !DILocation(line: 3883, column: 12, scope: !9088)
!9091 = !DILocation(line: 3883, column: 7, scope: !9071)
!9092 = !DILocation(line: 3884, column: 8, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9094, file: !3, line: 3884, column: 8)
!9094 = distinct !DILexicalBlock(scope: !9088, file: !3, line: 3883, column: 31)
!9095 = !DILocation(line: 3884, column: 14, scope: !9093)
!9096 = !DILocation(line: 3884, column: 28, scope: !9093)
!9097 = !DILocation(line: 3884, column: 8, scope: !9094)
!9098 = !DILocation(line: 3885, column: 16, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9100, file: !3, line: 3885, column: 9)
!9100 = distinct !DILexicalBlock(scope: !9093, file: !3, line: 3884, column: 51)
!9101 = !DILocation(line: 3885, column: 22, scope: !9099)
!9102 = !DILocation(line: 3885, column: 9, scope: !9099)
!9103 = !DILocation(line: 3885, column: 35, scope: !9099)
!9104 = !DILocation(line: 3885, column: 9, scope: !9100)
!9105 = !DILocation(line: 3888, column: 13, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 3885, column: 41)
!9107 = !DILocation(line: 3888, column: 18, scope: !9106)
!9108 = !DILocation(line: 3886, column: 6, scope: !9106)
!9109 = !DILocation(line: 3891, column: 13, scope: !9106)
!9110 = !DILocation(line: 3891, column: 18, scope: !9106)
!9111 = !DILocation(line: 3889, column: 6, scope: !9106)
!9112 = !DILocation(line: 3892, column: 13, scope: !9106)
!9113 = !DILocation(line: 3892, column: 19, scope: !9106)
!9114 = !DILocation(line: 3892, column: 6, scope: !9106)
!9115 = !DILocation(line: 3893, column: 5, scope: !9106)
!9116 = !DILocation(line: 3894, column: 39, scope: !9100)
!9117 = !DILocation(line: 3894, column: 45, scope: !9100)
!9118 = !DILocation(line: 3894, column: 58, scope: !9100)
!9119 = !DILocation(line: 3894, column: 64, scope: !9100)
!9120 = !DILocation(line: 3894, column: 11, scope: !9100)
!9121 = !DILocation(line: 3894, column: 9, scope: !9100)
!9122 = !DILocation(line: 3895, column: 9, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9100, file: !3, line: 3895, column: 9)
!9124 = !DILocation(line: 3895, column: 13, scope: !9123)
!9125 = !DILocation(line: 3895, column: 9, scope: !9100)
!9126 = !DILocation(line: 3898, column: 13, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 3895, column: 19)
!9128 = !DILocation(line: 3898, column: 18, scope: !9127)
!9129 = !DILocation(line: 3898, column: 24, scope: !9127)
!9130 = !DILocation(line: 3898, column: 30, scope: !9127)
!9131 = !DILocation(line: 3896, column: 6, scope: !9127)
!9132 = !DILocation(line: 3899, column: 13, scope: !9127)
!9133 = !DILocation(line: 3899, column: 6, scope: !9127)
!9134 = !DILocation(line: 3901, column: 4, scope: !9100)
!9135 = !DILocalVariable(name: "fw_index", scope: !9136, file: !3, line: 3902, type: !7)
!9136 = distinct !DILexicalBlock(scope: !9093, file: !3, line: 3901, column: 11)
!9137 = !DILocation(line: 3902, column: 9, scope: !9136)
!9138 = !DILocalVariable(name: "success", scope: !9136, file: !3, line: 3903, type: !7)
!9139 = !DILocation(line: 3903, column: 9, scope: !9136)
!9140 = !DILocation(line: 3906, column: 5, scope: !9136)
!9141 = !DILocation(line: 3906, column: 21, scope: !9136)
!9142 = !DILocation(line: 3906, column: 12, scope: !9136)
!9143 = !DILocation(line: 3906, column: 31, scope: !9136)
!9144 = !DILocation(line: 3906, column: 42, scope: !9136)
!9145 = !DILocation(line: 3906, column: 48, scope: !9136)
!9146 = !DILocation(line: 3906, column: 39, scope: !9136)
!9147 = !DILocation(line: 3907, column: 7, scope: !9136)
!9148 = !DILocation(line: 3907, column: 19, scope: !9136)
!9149 = !DILocation(line: 3907, column: 10, scope: !9136)
!9150 = !DILocation(line: 3907, column: 29, scope: !9136)
!9151 = !DILocation(line: 3907, column: 37, scope: !9136)
!9152 = !DILocation(line: 0, scope: !9136)
!9153 = !DILocation(line: 3908, column: 14, scope: !9136)
!9154 = distinct !{!9154, !9140, !9153}
!9155 = !DILocation(line: 3911, column: 18, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9136, file: !3, line: 3911, column: 9)
!9157 = !DILocation(line: 3911, column: 9, scope: !9156)
!9158 = !DILocation(line: 3911, column: 28, scope: !9156)
!9159 = !DILocation(line: 3911, column: 36, scope: !9156)
!9160 = !DILocation(line: 3911, column: 9, scope: !9136)
!9161 = !DILocalVariable(name: "i", scope: !9162, file: !3, line: 3912, type: !7)
!9162 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 3911, column: 59)
!9163 = !DILocation(line: 3912, column: 10, scope: !9162)
!9164 = !DILocation(line: 3913, column: 13, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9162, file: !3, line: 3913, column: 6)
!9166 = !DILocation(line: 3913, column: 11, scope: !9165)
!9167 = !DILocation(line: 3913, column: 36, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9165, file: !3, line: 3913, column: 6)
!9169 = !DILocation(line: 3913, column: 18, scope: !9168)
!9170 = !DILocation(line: 3913, column: 6, scope: !9165)
!9171 = !DILocation(line: 3914, column: 16, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9168, file: !3, line: 3913, column: 45)
!9173 = !DILocation(line: 3914, column: 22, scope: !9172)
!9174 = !DILocation(line: 3914, column: 59, scope: !9172)
!9175 = !DILocation(line: 3914, column: 50, scope: !9172)
!9176 = !DILocation(line: 3914, column: 69, scope: !9172)
!9177 = !DILocation(line: 3915, column: 26, scope: !9172)
!9178 = !DILocation(line: 3915, column: 8, scope: !9172)
!9179 = !DILocation(line: 3915, column: 39, scope: !9172)
!9180 = !DILocation(line: 3915, column: 30, scope: !9172)
!9181 = !DILocation(line: 3915, column: 49, scope: !9172)
!9182 = !DILocation(line: 3914, column: 7, scope: !9172)
!9183 = !DILocation(line: 3916, column: 7, scope: !9172)
!9184 = !DILocation(line: 3916, column: 13, scope: !9172)
!9185 = !DILocation(line: 3916, column: 29, scope: !9172)
!9186 = !DILocation(line: 3917, column: 39, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9172, file: !3, line: 3917, column: 11)
!9188 = !DILocation(line: 3917, column: 45, scope: !9187)
!9189 = !DILocation(line: 3917, column: 58, scope: !9187)
!9190 = !DILocation(line: 3917, column: 64, scope: !9187)
!9191 = !DILocation(line: 3917, column: 11, scope: !9187)
!9192 = !DILocation(line: 3917, column: 73, scope: !9187)
!9193 = !DILocation(line: 3917, column: 11, scope: !9172)
!9194 = !DILocation(line: 3918, column: 16, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9187, file: !3, line: 3917, column: 79)
!9196 = !DILocation(line: 3919, column: 8, scope: !9195)
!9197 = !DILocation(line: 3921, column: 6, scope: !9172)
!9198 = !DILocation(line: 3913, column: 41, scope: !9168)
!9199 = !DILocation(line: 3913, column: 6, scope: !9168)
!9200 = distinct !{!9200, !9170, !9201}
!9201 = !DILocation(line: 3921, column: 6, scope: !9165)
!9202 = !DILocation(line: 3922, column: 5, scope: !9162)
!9203 = !DILocation(line: 3923, column: 10, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9136, file: !3, line: 3923, column: 9)
!9205 = !DILocation(line: 3923, column: 9, scope: !9136)
!9206 = !DILocation(line: 3926, column: 13, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9204, file: !3, line: 3923, column: 19)
!9208 = !DILocation(line: 3926, column: 18, scope: !9207)
!9209 = !DILocation(line: 3926, column: 24, scope: !9207)
!9210 = !DILocation(line: 3926, column: 30, scope: !9207)
!9211 = !DILocation(line: 3924, column: 6, scope: !9207)
!9212 = !DILocation(line: 3927, column: 6, scope: !9207)
!9213 = !DILocation(line: 3927, column: 12, scope: !9207)
!9214 = !DILocation(line: 3927, column: 27, scope: !9207)
!9215 = !DILocation(line: 3928, column: 6, scope: !9207)
!9216 = !DILocation(line: 3932, column: 9, scope: !9094)
!9217 = !DILocation(line: 3932, column: 19, scope: !9094)
!9218 = !DILocation(line: 3932, column: 7, scope: !9094)
!9219 = !DILocation(line: 3933, column: 10, scope: !9094)
!9220 = !DILocation(line: 3933, column: 20, scope: !9094)
!9221 = !DILocation(line: 3933, column: 8, scope: !9094)
!9222 = !DILocation(line: 3934, column: 3, scope: !9094)
!9223 = !DILocation(line: 3936, column: 7, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9071, file: !3, line: 3936, column: 7)
!9225 = !DILocation(line: 3936, column: 11, scope: !9224)
!9226 = !DILocation(line: 3936, column: 7, scope: !9071)
!9227 = !DILocation(line: 3937, column: 18, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9224, file: !3, line: 3936, column: 22)
!9229 = !DILocation(line: 3937, column: 24, scope: !9228)
!9230 = !DILocation(line: 3937, column: 4, scope: !9228)
!9231 = !DILocation(line: 3938, column: 23, scope: !9228)
!9232 = !DILocation(line: 3938, column: 29, scope: !9228)
!9233 = !DILocation(line: 3938, column: 37, scope: !9228)
!9234 = !DILocation(line: 3938, column: 41, scope: !9228)
!9235 = !DILocation(line: 3938, column: 4, scope: !9228)
!9236 = !DILocation(line: 3939, column: 18, scope: !9228)
!9237 = !DILocation(line: 3939, column: 24, scope: !9228)
!9238 = !DILocation(line: 3939, column: 4, scope: !9228)
!9239 = !DILocation(line: 3940, column: 3, scope: !9228)
!9240 = !DILocation(line: 3942, column: 18, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9224, file: !3, line: 3940, column: 10)
!9242 = !DILocation(line: 3942, column: 24, scope: !9241)
!9243 = !DILocation(line: 3942, column: 4, scope: !9241)
!9244 = !DILocation(line: 3943, column: 18, scope: !9241)
!9245 = !DILocation(line: 3943, column: 24, scope: !9241)
!9246 = !DILocation(line: 3943, column: 4, scope: !9241)
!9247 = !DILocation(line: 3944, column: 23, scope: !9241)
!9248 = !DILocation(line: 3944, column: 29, scope: !9241)
!9249 = !DILocation(line: 3944, column: 37, scope: !9241)
!9250 = !DILocation(line: 3944, column: 4, scope: !9241)
!9251 = !DILocation(line: 3945, column: 18, scope: !9241)
!9252 = !DILocation(line: 3945, column: 24, scope: !9241)
!9253 = !DILocation(line: 3945, column: 4, scope: !9241)
!9254 = !DILocation(line: 3946, column: 23, scope: !9241)
!9255 = !DILocation(line: 3946, column: 29, scope: !9241)
!9256 = !DILocation(line: 3946, column: 43, scope: !9241)
!9257 = !DILocation(line: 3946, column: 55, scope: !9241)
!9258 = !DILocation(line: 3946, column: 59, scope: !9241)
!9259 = !DILocation(line: 3946, column: 4, scope: !9241)
!9260 = !DILocation(line: 3949, column: 20, scope: !9071)
!9261 = !DILocation(line: 3949, column: 3, scope: !9071)
!9262 = !DILocation(line: 3950, column: 2, scope: !9071)
!9263 = !DILocation(line: 3952, column: 30, scope: !8872)
!9264 = !DILocation(line: 3952, column: 8, scope: !8872)
!9265 = !DILocation(line: 3952, column: 6, scope: !8872)
!9266 = !DILocation(line: 3953, column: 6, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 3953, column: 6)
!9268 = !DILocation(line: 3953, column: 10, scope: !9267)
!9269 = !DILocation(line: 3953, column: 6, scope: !8872)
!9270 = !DILocation(line: 3954, column: 10, scope: !9267)
!9271 = !DILocation(line: 3954, column: 3, scope: !9267)
!9272 = !DILocation(line: 3961, column: 19, scope: !8872)
!9273 = !DILocation(line: 3961, column: 25, scope: !8872)
!9274 = !DILocation(line: 3961, column: 35, scope: !8872)
!9275 = !DILocation(line: 3961, column: 49, scope: !8872)
!9276 = !DILocation(line: 3961, column: 2, scope: !8872)
!9277 = !DILocation(line: 3961, column: 8, scope: !8872)
!9278 = !DILocation(line: 3961, column: 16, scope: !8872)
!9279 = !DILocation(line: 3962, column: 27, scope: !8872)
!9280 = !DILocation(line: 3962, column: 33, scope: !8872)
!9281 = !DILocation(line: 3962, column: 43, scope: !8872)
!9282 = !DILocation(line: 3962, column: 57, scope: !8872)
!9283 = !DILocation(line: 3962, column: 2, scope: !8872)
!9284 = !DILocation(line: 3962, column: 8, scope: !8872)
!9285 = !DILocation(line: 3962, column: 24, scope: !8872)
!9286 = !DILocation(line: 3965, column: 14, scope: !8872)
!9287 = !DILocation(line: 3965, column: 29, scope: !8872)
!9288 = !DILocation(line: 3965, column: 20, scope: !8872)
!9289 = !DILocation(line: 3965, column: 2, scope: !8872)
!9290 = !DILocation(line: 3968, column: 14, scope: !8872)
!9291 = !DILocation(line: 3968, column: 29, scope: !8872)
!9292 = !DILocation(line: 3968, column: 20, scope: !8872)
!9293 = !DILocation(line: 3968, column: 2, scope: !8872)
!9294 = !DILocation(line: 3969, column: 15, scope: !8872)
!9295 = !DILocation(line: 3969, column: 30, scope: !8872)
!9296 = !DILocation(line: 3969, column: 21, scope: !8872)
!9297 = !DILocation(line: 3969, column: 2, scope: !8872)
!9298 = !DILocation(line: 3970, column: 15, scope: !8872)
!9299 = !DILocation(line: 3970, column: 30, scope: !8872)
!9300 = !DILocation(line: 3970, column: 21, scope: !8872)
!9301 = !DILocation(line: 3970, column: 2, scope: !8872)
!9302 = !DILocation(line: 3971, column: 15, scope: !8872)
!9303 = !DILocation(line: 3971, column: 30, scope: !8872)
!9304 = !DILocation(line: 3971, column: 21, scope: !8872)
!9305 = !DILocation(line: 3971, column: 2, scope: !8872)
!9306 = !DILocation(line: 3973, column: 23, scope: !8872)
!9307 = !DILocation(line: 3973, column: 29, scope: !8872)
!9308 = !DILocation(line: 3973, column: 39, scope: !8872)
!9309 = !DILocation(line: 3973, column: 2, scope: !8872)
!9310 = !DILocation(line: 3973, column: 8, scope: !8872)
!9311 = !DILocation(line: 3973, column: 21, scope: !8872)
!9312 = !DILocation(line: 3974, column: 2, scope: !8872)
!9313 = !DILocation(line: 3974, column: 8, scope: !8872)
!9314 = !DILocation(line: 3974, column: 21, scope: !8872)
!9315 = !DILocation(line: 3975, column: 2, scope: !8872)
!9316 = !DILocation(line: 3975, column: 8, scope: !8872)
!9317 = !DILocation(line: 3975, column: 21, scope: !8872)
!9318 = !DILocation(line: 3976, column: 2, scope: !8872)
!9319 = !DILocation(line: 3976, column: 8, scope: !8872)
!9320 = !DILocation(line: 3976, column: 25, scope: !8872)
!9321 = !DILocation(line: 3977, column: 22, scope: !8872)
!9322 = !DILocation(line: 3977, column: 28, scope: !8872)
!9323 = !DILocation(line: 3977, column: 38, scope: !8872)
!9324 = !DILocation(line: 3977, column: 2, scope: !8872)
!9325 = !DILocation(line: 3977, column: 8, scope: !8872)
!9326 = !DILocation(line: 3977, column: 20, scope: !8872)
!9327 = !DILocation(line: 3978, column: 2, scope: !8872)
!9328 = !DILocation(line: 3978, column: 8, scope: !8872)
!9329 = !DILocation(line: 3978, column: 21, scope: !8872)
!9330 = !DILocation(line: 3979, column: 2, scope: !8872)
!9331 = !DILocation(line: 3979, column: 8, scope: !8872)
!9332 = !DILocation(line: 3979, column: 21, scope: !8872)
!9333 = !DILocation(line: 3981, column: 30, scope: !8872)
!9334 = !DILocation(line: 3981, column: 45, scope: !8872)
!9335 = !DILocation(line: 3981, column: 36, scope: !8872)
!9336 = !DILocation(line: 3981, column: 18, scope: !8872)
!9337 = !DILocation(line: 3981, column: 16, scope: !8872)
!9338 = !DILocation(line: 3982, column: 14, scope: !8872)
!9339 = !DILocation(line: 3982, column: 29, scope: !8872)
!9340 = !DILocation(line: 3982, column: 20, scope: !8872)
!9341 = !DILocation(line: 3983, column: 8, scope: !8872)
!9342 = !DILocation(line: 3983, column: 22, scope: !8872)
!9343 = !DILocation(line: 3982, column: 2, scope: !8872)
!9344 = !DILocation(line: 3986, column: 2, scope: !8872)
!9345 = !DILocation(line: 3986, column: 8, scope: !8872)
!9346 = !DILocation(line: 3986, column: 21, scope: !8872)
!9347 = !DILocation(line: 3988, column: 30, scope: !8872)
!9348 = !DILocation(line: 3988, column: 45, scope: !8872)
!9349 = !DILocation(line: 3988, column: 36, scope: !8872)
!9350 = !DILocation(line: 3988, column: 18, scope: !8872)
!9351 = !DILocation(line: 3988, column: 16, scope: !8872)
!9352 = !DILocation(line: 3989, column: 14, scope: !8872)
!9353 = !DILocation(line: 3989, column: 29, scope: !8872)
!9354 = !DILocation(line: 3989, column: 20, scope: !8872)
!9355 = !DILocation(line: 3990, column: 8, scope: !8872)
!9356 = !DILocation(line: 3990, column: 22, scope: !8872)
!9357 = !DILocation(line: 3989, column: 2, scope: !8872)
!9358 = !DILocation(line: 3992, column: 7, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 3992, column: 6)
!9360 = !DILocation(line: 3992, column: 13, scope: !9359)
!9361 = !DILocation(line: 3992, column: 6, scope: !8872)
!9362 = !DILocation(line: 3993, column: 31, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 3993, column: 7)
!9364 = distinct !DILexicalBlock(scope: !9359, file: !3, line: 3992, column: 30)
!9365 = !DILocation(line: 3993, column: 7, scope: !9363)
!9366 = !DILocation(line: 3993, column: 63, scope: !9363)
!9367 = !DILocation(line: 3993, column: 7, scope: !9364)
!9368 = !DILocation(line: 3996, column: 11, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9363, file: !3, line: 3994, column: 38)
!9370 = !DILocation(line: 3996, column: 16, scope: !9369)
!9371 = !DILocation(line: 3995, column: 4, scope: !9369)
!9372 = !DILocation(line: 3997, column: 4, scope: !9369)
!9373 = !DILocation(line: 3999, column: 2, scope: !9364)
!9374 = !DILocation(line: 4002, column: 17, scope: !8872)
!9375 = !DILocation(line: 4002, column: 67, scope: !8872)
!9376 = !DILocation(line: 4002, column: 73, scope: !8872)
!9377 = !DILocation(line: 4002, column: 2, scope: !8872)
!9378 = !DILocation(line: 4003, column: 17, scope: !8872)
!9379 = !DILocation(line: 4003, column: 2, scope: !8872)
!9380 = !DILocation(line: 4004, column: 18, scope: !8872)
!9381 = !DILocation(line: 4004, column: 65, scope: !8872)
!9382 = !DILocation(line: 4004, column: 71, scope: !8872)
!9383 = !DILocation(line: 4004, column: 2, scope: !8872)
!9384 = !DILocation(line: 4005, column: 18, scope: !8872)
!9385 = !DILocation(line: 4005, column: 66, scope: !8872)
!9386 = !DILocation(line: 4005, column: 72, scope: !8872)
!9387 = !DILocation(line: 4005, column: 2, scope: !8872)
!9388 = !DILocation(line: 4006, column: 17, scope: !8872)
!9389 = !DILocation(line: 4006, column: 62, scope: !8872)
!9390 = !DILocation(line: 4006, column: 68, scope: !8872)
!9391 = !DILocation(line: 4006, column: 2, scope: !8872)
!9392 = !DILocation(line: 4007, column: 17, scope: !8872)
!9393 = !DILocation(line: 4007, column: 61, scope: !8872)
!9394 = !DILocation(line: 4007, column: 67, scope: !8872)
!9395 = !DILocation(line: 4007, column: 2, scope: !8872)
!9396 = !DILocation(line: 4008, column: 17, scope: !8872)
!9397 = !DILocation(line: 4008, column: 64, scope: !8872)
!9398 = !DILocation(line: 4008, column: 70, scope: !8872)
!9399 = !DILocation(line: 4008, column: 2, scope: !8872)
!9400 = !DILocation(line: 4009, column: 16, scope: !8872)
!9401 = !DILocation(line: 4010, column: 9, scope: !8872)
!9402 = !DILocation(line: 4010, column: 15, scope: !8872)
!9403 = !DILocation(line: 4010, column: 20, scope: !8872)
!9404 = !DILocation(line: 4009, column: 2, scope: !8872)
!9405 = !DILocation(line: 4011, column: 17, scope: !8872)
!9406 = !DILocation(line: 4011, column: 2, scope: !8872)
!9407 = !DILocation(line: 4012, column: 18, scope: !8872)
!9408 = !DILocation(line: 4012, column: 2, scope: !8872)
!9409 = !DILocation(line: 4013, column: 18, scope: !8872)
!9410 = !DILocation(line: 4013, column: 72, scope: !8872)
!9411 = !DILocation(line: 4013, column: 78, scope: !8872)
!9412 = !DILocation(line: 4013, column: 2, scope: !8872)
!9413 = !DILocation(line: 4014, column: 16, scope: !8872)
!9414 = !DILocation(line: 4014, column: 2, scope: !8872)
!9415 = !DILocation(line: 4015, column: 17, scope: !8872)
!9416 = !DILocation(line: 4015, column: 72, scope: !8872)
!9417 = !DILocation(line: 4015, column: 78, scope: !8872)
!9418 = !DILocation(line: 4015, column: 2, scope: !8872)
!9419 = !DILocation(line: 4016, column: 6, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 4016, column: 6)
!9421 = !DILocation(line: 4016, column: 12, scope: !9420)
!9422 = !DILocation(line: 4016, column: 6, scope: !8872)
!9423 = !DILocation(line: 4017, column: 17, scope: !9420)
!9424 = !DILocation(line: 4017, column: 3, scope: !9420)
!9425 = !DILocation(line: 4019, column: 17, scope: !9420)
!9426 = !DILocation(line: 4019, column: 3, scope: !9420)
!9427 = !DILocation(line: 4021, column: 6, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 4021, column: 6)
!9429 = !DILocation(line: 4021, column: 16, scope: !9428)
!9430 = !DILocation(line: 4021, column: 6, scope: !8872)
!9431 = !DILocalVariable(name: "wrqu", scope: !9432, file: !3, line: 4022, type: !614)
!9432 = distinct !DILexicalBlock(scope: !9428, file: !3, line: 4021, column: 40)
!9433 = !DILocation(line: 4022, column: 20, scope: !9432)
!9434 = !DILocation(line: 4024, column: 8, scope: !9432)
!9435 = !DILocation(line: 4024, column: 13, scope: !9432)
!9436 = !DILocation(line: 4024, column: 20, scope: !9432)
!9437 = !DILocation(line: 4025, column: 8, scope: !9432)
!9438 = !DILocation(line: 4025, column: 13, scope: !9432)
!9439 = !DILocation(line: 4025, column: 19, scope: !9432)
!9440 = !DILocation(line: 4026, column: 8, scope: !9432)
!9441 = !DILocation(line: 4026, column: 16, scope: !9432)
!9442 = !DILocation(line: 4026, column: 26, scope: !9432)
!9443 = !DILocation(line: 4027, column: 22, scope: !9432)
!9444 = !DILocation(line: 4027, column: 30, scope: !9432)
!9445 = !DILocation(line: 4027, column: 17, scope: !9432)
!9446 = !DILocation(line: 4027, column: 3, scope: !9432)
!9447 = !DILocation(line: 4028, column: 23, scope: !9432)
!9448 = !DILocation(line: 4028, column: 29, scope: !9432)
!9449 = !DILocation(line: 4028, column: 3, scope: !9432)
!9450 = !DILocation(line: 4029, column: 2, scope: !9432)
!9451 = !DILocation(line: 4031, column: 2, scope: !8872)
!9452 = !DILocation(line: 4032, column: 1, scope: !8872)
!9453 = distinct !DISubprogram(name: "atmel_set_mib8", scope: !3, file: !3, line: 4082, type: !9454, scopeLine: 4083, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!9454 = !DISubroutineType(types: !9455)
!9455 = !{null, !8587, !1116, !1116, !1116}
!9456 = !DILocalVariable(name: "priv", arg: 1, scope: !9453, file: !3, line: 4082, type: !8587)
!9457 = !DILocation(line: 4082, column: 50, scope: !9453)
!9458 = !DILocalVariable(name: "type", arg: 2, scope: !9453, file: !3, line: 4082, type: !1116)
!9459 = !DILocation(line: 4082, column: 59, scope: !9453)
!9460 = !DILocalVariable(name: "index", arg: 3, scope: !9453, file: !3, line: 4082, type: !1116)
!9461 = !DILocation(line: 4082, column: 68, scope: !9453)
!9462 = !DILocalVariable(name: "data", arg: 4, scope: !9453, file: !3, line: 4082, type: !1116)
!9463 = !DILocation(line: 4082, column: 78, scope: !9453)
!9464 = !DILocalVariable(name: "m", scope: !9453, file: !3, line: 4084, type: !9465)
!9465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "get_set_mib", file: !3, line: 157, size: 1728, elements: !9466)
!9466 = !{!9467, !9468, !9469, !9470, !9471}
!9467 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9465, file: !3, line: 158, baseType: !1116, size: 8)
!9468 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9465, file: !3, line: 159, baseType: !1116, size: 8, offset: 8)
!9469 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9465, file: !3, line: 160, baseType: !1116, size: 8, offset: 16)
!9470 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !9465, file: !3, line: 161, baseType: !1116, size: 8, offset: 24)
!9471 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9465, file: !3, line: 162, baseType: !9472, size: 1696, offset: 32)
!9472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 1696, elements: !9473)
!9473 = !{!9474}
!9474 = !DISubrange(count: 212)
!9475 = !DILocation(line: 4084, column: 21, scope: !9453)
!9476 = !DILocation(line: 4085, column: 11, scope: !9453)
!9477 = !DILocation(line: 4085, column: 4, scope: !9453)
!9478 = !DILocation(line: 4085, column: 9, scope: !9453)
!9479 = !DILocation(line: 4086, column: 4, scope: !9453)
!9480 = !DILocation(line: 4086, column: 9, scope: !9453)
!9481 = !DILocation(line: 4087, column: 12, scope: !9453)
!9482 = !DILocation(line: 4087, column: 4, scope: !9453)
!9483 = !DILocation(line: 4087, column: 10, scope: !9453)
!9484 = !DILocation(line: 4088, column: 14, scope: !9453)
!9485 = !DILocation(line: 4088, column: 4, scope: !9453)
!9486 = !DILocation(line: 4088, column: 2, scope: !9453)
!9487 = !DILocation(line: 4088, column: 12, scope: !9453)
!9488 = !DILocation(line: 4090, column: 26, scope: !9453)
!9489 = !DILocation(line: 4090, column: 50, scope: !9453)
!9490 = !DILocation(line: 4090, column: 2, scope: !9453)
!9491 = !DILocation(line: 4091, column: 1, scope: !9453)
!9492 = distinct !DISubprogram(name: "atmel_get_mib8", scope: !3, file: !3, line: 4071, type: !9493, scopeLine: 4072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!9493 = !DISubroutineType(types: !9494)
!9494 = !{!1116, !8587, !1116, !1116}
!9495 = !DILocalVariable(name: "priv", arg: 1, scope: !9492, file: !3, line: 4071, type: !8587)
!9496 = !DILocation(line: 4071, column: 48, scope: !9492)
!9497 = !DILocalVariable(name: "type", arg: 2, scope: !9492, file: !3, line: 4071, type: !1116)
!9498 = !DILocation(line: 4071, column: 57, scope: !9492)
!9499 = !DILocalVariable(name: "index", arg: 3, scope: !9492, file: !3, line: 4071, type: !1116)
!9500 = !DILocation(line: 4071, column: 66, scope: !9492)
!9501 = !DILocalVariable(name: "m", scope: !9492, file: !3, line: 4073, type: !9465)
!9502 = !DILocation(line: 4073, column: 21, scope: !9492)
!9503 = !DILocation(line: 4074, column: 11, scope: !9492)
!9504 = !DILocation(line: 4074, column: 4, scope: !9492)
!9505 = !DILocation(line: 4074, column: 9, scope: !9492)
!9506 = !DILocation(line: 4075, column: 4, scope: !9492)
!9507 = !DILocation(line: 4075, column: 9, scope: !9492)
!9508 = !DILocation(line: 4076, column: 12, scope: !9492)
!9509 = !DILocation(line: 4076, column: 4, scope: !9492)
!9510 = !DILocation(line: 4076, column: 10, scope: !9492)
!9511 = !DILocation(line: 4078, column: 26, scope: !9492)
!9512 = !DILocation(line: 4078, column: 50, scope: !9492)
!9513 = !DILocation(line: 4078, column: 2, scope: !9492)
!9514 = !DILocation(line: 4079, column: 21, scope: !9492)
!9515 = !DILocation(line: 4079, column: 36, scope: !9492)
!9516 = !DILocation(line: 4079, column: 27, scope: !9492)
!9517 = !DILocation(line: 4079, column: 9, scope: !9492)
!9518 = !DILocation(line: 4079, column: 2, scope: !9492)
!9519 = distinct !DISubprogram(name: "atmel_validate_channel", scope: !3, file: !3, line: 1384, type: !9520, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!9520 = !DISubroutineType(types: !9521)
!9521 = !{!7, !8587, !7}
!9522 = !DILocalVariable(name: "priv", arg: 1, scope: !9519, file: !3, line: 1384, type: !8587)
!9523 = !DILocation(line: 1384, column: 57, scope: !9519)
!9524 = !DILocalVariable(name: "channel", arg: 2, scope: !9519, file: !3, line: 1384, type: !7)
!9525 = !DILocation(line: 1384, column: 67, scope: !9519)
!9526 = !DILocalVariable(name: "i", scope: !9519, file: !3, line: 1388, type: !7)
!9527 = !DILocation(line: 1388, column: 6, scope: !9519)
!9528 = !DILocation(line: 1390, column: 9, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 1390, column: 2)
!9530 = !DILocation(line: 1390, column: 7, scope: !9529)
!9531 = !DILocation(line: 1390, column: 14, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 1390, column: 2)
!9533 = !DILocation(line: 1390, column: 16, scope: !9532)
!9534 = !DILocation(line: 1390, column: 2, scope: !9529)
!9535 = !DILocation(line: 1391, column: 7, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9532, file: !3, line: 1391, column: 7)
!9537 = !DILocation(line: 1391, column: 13, scope: !9536)
!9538 = !DILocation(line: 1391, column: 41, scope: !9536)
!9539 = !DILocation(line: 1391, column: 27, scope: !9536)
!9540 = !DILocation(line: 1391, column: 44, scope: !9536)
!9541 = !DILocation(line: 1391, column: 24, scope: !9536)
!9542 = !DILocation(line: 1391, column: 7, scope: !9532)
!9543 = !DILocation(line: 1392, column: 8, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9545, file: !3, line: 1392, column: 8)
!9545 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 1391, column: 56)
!9546 = !DILocation(line: 1392, column: 33, scope: !9544)
!9547 = !DILocation(line: 1392, column: 19, scope: !9544)
!9548 = !DILocation(line: 1392, column: 36, scope: !9544)
!9549 = !DILocation(line: 1392, column: 16, scope: !9544)
!9550 = !DILocation(line: 1392, column: 40, scope: !9544)
!9551 = !DILocation(line: 1393, column: 8, scope: !9544)
!9552 = !DILocation(line: 1393, column: 33, scope: !9544)
!9553 = !DILocation(line: 1393, column: 19, scope: !9544)
!9554 = !DILocation(line: 1393, column: 36, scope: !9544)
!9555 = !DILocation(line: 1393, column: 16, scope: !9544)
!9556 = !DILocation(line: 1392, column: 8, scope: !9545)
!9557 = !DILocation(line: 1394, column: 5, scope: !9544)
!9558 = !DILocation(line: 1396, column: 26, scope: !9544)
!9559 = !DILocation(line: 1396, column: 12, scope: !9544)
!9560 = !DILocation(line: 1396, column: 29, scope: !9544)
!9561 = !DILocation(line: 1396, column: 5, scope: !9544)
!9562 = !DILocation(line: 1390, column: 46, scope: !9532)
!9563 = !DILocation(line: 1390, column: 2, scope: !9532)
!9564 = distinct !{!9564, !9534, !9565}
!9565 = !DILocation(line: 1397, column: 3, scope: !9529)
!9566 = !DILocation(line: 1398, column: 2, scope: !9519)
!9567 = !DILocation(line: 1399, column: 1, scope: !9519)
!9568 = distinct !DISubprogram(name: "atmel_scan", scope: !3, file: !3, line: 2725, type: !9569, scopeLine: 2726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!9569 = !DISubroutineType(types: !9570)
!9570 = !{null, !8587, !7}
!9571 = !DILocalVariable(name: "priv", arg: 1, scope: !9568, file: !3, line: 2725, type: !8587)
!9572 = !DILocation(line: 2725, column: 46, scope: !9568)
!9573 = !DILocalVariable(name: "specific_ssid", arg: 2, scope: !9568, file: !3, line: 2725, type: !7)
!9574 = !DILocation(line: 2725, column: 56, scope: !9568)
!9575 = !DILocalVariable(name: "cmd", scope: !9568, file: !3, line: 2737, type: !9576)
!9576 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9568, file: !3, line: 2727, size: 384, elements: !9577)
!9577 = !{!9578, !9579, !9580, !9581, !9582, !9583, !9584, !9585, !9586}
!9578 = !DIDerivedType(tag: DW_TAG_member, name: "BSSID", scope: !9576, file: !3, line: 2728, baseType: !6709, size: 48)
!9579 = !DIDerivedType(tag: DW_TAG_member, name: "SSID", scope: !9576, file: !3, line: 2729, baseType: !7027, size: 256, offset: 48)
!9580 = !DIDerivedType(tag: DW_TAG_member, name: "scan_type", scope: !9576, file: !3, line: 2730, baseType: !1116, size: 8, offset: 304)
!9581 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !9576, file: !3, line: 2731, baseType: !1116, size: 8, offset: 312)
!9582 = !DIDerivedType(tag: DW_TAG_member, name: "BSS_type", scope: !9576, file: !3, line: 2732, baseType: !7142, size: 16, offset: 320)
!9583 = !DIDerivedType(tag: DW_TAG_member, name: "min_channel_time", scope: !9576, file: !3, line: 2733, baseType: !7142, size: 16, offset: 336)
!9584 = !DIDerivedType(tag: DW_TAG_member, name: "max_channel_time", scope: !9576, file: !3, line: 2734, baseType: !7142, size: 16, offset: 352)
!9585 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !9576, file: !3, line: 2735, baseType: !1116, size: 8, offset: 368)
!9586 = !DIDerivedType(tag: DW_TAG_member, name: "SSID_size", scope: !9576, file: !3, line: 2736, baseType: !1116, size: 8, offset: 376)
!9587 = !DILocation(line: 2737, column: 4, scope: !9568)
!9588 = !DILocation(line: 2739, column: 25, scope: !9568)
!9589 = !DILocation(line: 2739, column: 21, scope: !9568)
!9590 = !DILocation(line: 2739, column: 2, scope: !9568)
!9591 = !DILocation(line: 2741, column: 6, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 2741, column: 6)
!9593 = !DILocation(line: 2741, column: 12, scope: !9592)
!9594 = !DILocation(line: 2741, column: 6, scope: !9568)
!9595 = !DILocation(line: 2742, column: 19, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9592, file: !3, line: 2741, column: 23)
!9597 = !DILocation(line: 2742, column: 25, scope: !9596)
!9598 = !DILocation(line: 2742, column: 7, scope: !9596)
!9599 = !DILocation(line: 2742, column: 17, scope: !9596)
!9600 = !DILocation(line: 2743, column: 14, scope: !9596)
!9601 = !DILocation(line: 2743, column: 3, scope: !9596)
!9602 = !DILocation(line: 2743, column: 20, scope: !9596)
!9603 = !DILocation(line: 2743, column: 26, scope: !9596)
!9604 = !DILocation(line: 2743, column: 32, scope: !9596)
!9605 = !DILocation(line: 2743, column: 38, scope: !9596)
!9606 = !DILocation(line: 2744, column: 7, scope: !9596)
!9607 = !DILocation(line: 2744, column: 24, scope: !9596)
!9608 = !DILocation(line: 2745, column: 7, scope: !9596)
!9609 = !DILocation(line: 2745, column: 24, scope: !9596)
!9610 = !DILocation(line: 2746, column: 2, scope: !9596)
!9611 = !DILocation(line: 2747, column: 3, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9592, file: !3, line: 2746, column: 9)
!9613 = !DILocation(line: 2747, column: 9, scope: !9612)
!9614 = !DILocation(line: 2747, column: 26, scope: !9612)
!9615 = !DILocation(line: 2748, column: 7, scope: !9612)
!9616 = !DILocation(line: 2748, column: 17, scope: !9612)
!9617 = !DILocation(line: 2749, column: 7, scope: !9612)
!9618 = !DILocation(line: 2749, column: 24, scope: !9612)
!9619 = !DILocation(line: 2750, column: 7, scope: !9612)
!9620 = !DILocation(line: 2750, column: 24, scope: !9612)
!9621 = !DILocation(line: 2753, column: 6, scope: !9568)
!9622 = !DILocation(line: 2753, column: 14, scope: !9568)
!9623 = !DILocation(line: 2755, column: 7, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 2755, column: 6)
!9625 = !DILocation(line: 2755, column: 6, scope: !9568)
!9626 = !DILocation(line: 2756, column: 7, scope: !9624)
!9627 = !DILocation(line: 2756, column: 15, scope: !9624)
!9628 = !DILocation(line: 2756, column: 3, scope: !9624)
!9629 = !DILocation(line: 2758, column: 17, scope: !9568)
!9630 = !DILocation(line: 2758, column: 23, scope: !9568)
!9631 = !DILocation(line: 2758, column: 31, scope: !9568)
!9632 = !DILocation(line: 2758, column: 16, scope: !9568)
!9633 = !DILocation(line: 2758, column: 6, scope: !9568)
!9634 = !DILocation(line: 2758, column: 14, scope: !9568)
!9635 = !DILocation(line: 2759, column: 6, scope: !9568)
!9636 = !DILocation(line: 2759, column: 16, scope: !9568)
!9637 = !DILocation(line: 2760, column: 17, scope: !9568)
!9638 = !DILocation(line: 2760, column: 6, scope: !9568)
!9639 = !DILocation(line: 2760, column: 15, scope: !9568)
!9640 = !DILocation(line: 2763, column: 21, scope: !9568)
!9641 = !DILocation(line: 2763, column: 37, scope: !9568)
!9642 = !DILocation(line: 2763, column: 2, scope: !9568)
!9643 = !DILocation(line: 2767, column: 20, scope: !9568)
!9644 = !DILocation(line: 2767, column: 2, scope: !9568)
!9645 = !DILocation(line: 2768, column: 1, scope: !9568)
!9646 = distinct !DISubprogram(name: "atmel_set_gcr", scope: !3, file: !3, line: 4182, type: !9647, scopeLine: 4183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!9647 = !DISubroutineType(types: !9648)
!9648 = !{null, !495, !916}
!9649 = !DILocalVariable(name: "dev", arg: 1, scope: !9646, file: !3, line: 4182, type: !495)
!9650 = !DILocation(line: 4182, column: 46, scope: !9646)
!9651 = !DILocalVariable(name: "mask", arg: 2, scope: !9646, file: !3, line: 4182, type: !916)
!9652 = !DILocation(line: 4182, column: 55, scope: !9646)
!9653 = !DILocation(line: 4184, column: 11, scope: !9646)
!9654 = !DILocation(line: 4184, column: 16, scope: !9646)
!9655 = !DILocation(line: 4184, column: 26, scope: !9646)
!9656 = !DILocation(line: 4184, column: 7, scope: !9646)
!9657 = !DILocation(line: 4184, column: 35, scope: !9646)
!9658 = !DILocation(line: 4184, column: 33, scope: !9646)
!9659 = !DILocation(line: 4184, column: 41, scope: !9646)
!9660 = !DILocation(line: 4184, column: 46, scope: !9646)
!9661 = !DILocation(line: 4184, column: 56, scope: !9646)
!9662 = !DILocation(line: 4184, column: 2, scope: !9646)
!9663 = !DILocation(line: 4185, column: 1, scope: !9646)
!9664 = distinct !DISubprogram(name: "init_atmel_card", scope: !3, file: !3, line: 1495, type: !9665, scopeLine: 1499, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!9665 = !DISubroutineType(types: !9666)
!9666 = !{!495, !611, !517, !9667, !7268, !8154, !622}
!9667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8159)
!9668 = !DILocalVariable(name: "lock", arg: 1, scope: !9669, file: !9670, line: 327, type: !2499)
!9669 = distinct !DISubprogram(name: "spinlock_check", scope: !9670, file: !9670, line: 327, type: !9671, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!9670 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!9671 = !DISubroutineType(types: !9672)
!9672 = !{!9673, !2499}
!9673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!9674 = !DILocation(line: 327, column: 67, scope: !9669, inlinedAt: !9675)
!9675 = distinct !DILocation(line: 1572, column: 2, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 1572, column: 2)
!9677 = !DILocation(line: 327, column: 67, scope: !9669, inlinedAt: !9678)
!9678 = distinct !DILocation(line: 1571, column: 2, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 1571, column: 2)
!9680 = !DILocalVariable(name: "irq", arg: 1, scope: !9664, file: !3, line: 1495, type: !611)
!9681 = !DILocation(line: 1495, column: 51, scope: !9664)
!9682 = !DILocalVariable(name: "port", arg: 2, scope: !9664, file: !3, line: 1495, type: !517)
!9683 = !DILocation(line: 1495, column: 70, scope: !9664)
!9684 = !DILocalVariable(name: "fw_type", arg: 3, scope: !9664, file: !3, line: 1496, type: !9667)
!9685 = !DILocation(line: 1496, column: 26, scope: !9664)
!9686 = !DILocalVariable(name: "sys_dev", arg: 4, scope: !9664, file: !3, line: 1497, type: !7268)
!9687 = !DILocation(line: 1497, column: 23, scope: !9664)
!9688 = !DILocalVariable(name: "card_present", arg: 5, scope: !9664, file: !3, line: 1498, type: !8154)
!9689 = !DILocation(line: 1498, column: 14, scope: !9664)
!9690 = !DILocalVariable(name: "card", arg: 6, scope: !9664, file: !3, line: 1498, type: !622)
!9691 = !DILocation(line: 1498, column: 43, scope: !9664)
!9692 = !DILocalVariable(name: "dev", scope: !9664, file: !3, line: 1500, type: !495)
!9693 = !DILocation(line: 1500, column: 21, scope: !9664)
!9694 = !DILocalVariable(name: "priv", scope: !9664, file: !3, line: 1501, type: !8587)
!9695 = !DILocation(line: 1501, column: 24, scope: !9664)
!9696 = !DILocalVariable(name: "rc", scope: !9664, file: !3, line: 1502, type: !7)
!9697 = !DILocation(line: 1502, column: 6, scope: !9664)
!9698 = !DILocation(line: 1505, column: 8, scope: !9664)
!9699 = !DILocation(line: 1505, column: 6, scope: !9664)
!9700 = !DILocation(line: 1506, column: 7, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 1506, column: 6)
!9702 = !DILocation(line: 1506, column: 6, scope: !9664)
!9703 = !DILocation(line: 1507, column: 3, scope: !9701)
!9704 = !DILocation(line: 1509, column: 21, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 1509, column: 6)
!9706 = !DILocation(line: 1509, column: 26, scope: !9705)
!9707 = !DILocation(line: 1509, column: 31, scope: !9705)
!9708 = !DILocation(line: 1509, column: 6, scope: !9705)
!9709 = !DILocation(line: 1509, column: 37, scope: !9705)
!9710 = !DILocation(line: 1509, column: 6, scope: !9664)
!9711 = !DILocation(line: 1510, column: 3, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9705, file: !3, line: 1509, column: 42)
!9713 = !DILocation(line: 1511, column: 3, scope: !9712)
!9714 = !DILocation(line: 1514, column: 21, scope: !9664)
!9715 = !DILocation(line: 1514, column: 9, scope: !9664)
!9716 = !DILocation(line: 1514, column: 7, scope: !9664)
!9717 = !DILocation(line: 1515, column: 14, scope: !9664)
!9718 = !DILocation(line: 1515, column: 2, scope: !9664)
!9719 = !DILocation(line: 1515, column: 8, scope: !9664)
!9720 = !DILocation(line: 1515, column: 12, scope: !9664)
!9721 = !DILocation(line: 1516, column: 18, scope: !9664)
!9722 = !DILocation(line: 1516, column: 2, scope: !9664)
!9723 = !DILocation(line: 1516, column: 8, scope: !9664)
!9724 = !DILocation(line: 1516, column: 16, scope: !9664)
!9725 = !DILocation(line: 1517, column: 27, scope: !9664)
!9726 = !DILocation(line: 1517, column: 2, scope: !9664)
!9727 = !DILocation(line: 1517, column: 8, scope: !9664)
!9728 = !DILocation(line: 1517, column: 25, scope: !9664)
!9729 = !DILocation(line: 1518, column: 15, scope: !9664)
!9730 = !DILocation(line: 1518, column: 2, scope: !9664)
!9731 = !DILocation(line: 1518, column: 8, scope: !9664)
!9732 = !DILocation(line: 1518, column: 13, scope: !9664)
!9733 = !DILocation(line: 1519, column: 2, scope: !9664)
!9734 = !DILocation(line: 1519, column: 8, scope: !9664)
!9735 = !DILocation(line: 1519, column: 17, scope: !9664)
!9736 = !DILocation(line: 1520, column: 24, scope: !9664)
!9737 = !DILocation(line: 1520, column: 2, scope: !9664)
!9738 = !DILocation(line: 1520, column: 8, scope: !9664)
!9739 = !DILocation(line: 1520, column: 22, scope: !9664)
!9740 = !DILocation(line: 1521, column: 6, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 1521, column: 6)
!9742 = !DILocation(line: 1521, column: 6, scope: !9664)
!9743 = !DILocation(line: 1522, column: 11, scope: !9741)
!9744 = !DILocation(line: 1522, column: 17, scope: !9741)
!9745 = !DILocation(line: 1522, column: 30, scope: !9741)
!9746 = !DILocation(line: 1522, column: 3, scope: !9741)
!9747 = !DILocation(line: 1523, column: 19, scope: !9664)
!9748 = !DILocation(line: 1523, column: 2, scope: !9664)
!9749 = !DILocation(line: 1523, column: 8, scope: !9664)
!9750 = !DILocation(line: 1523, column: 17, scope: !9664)
!9751 = !DILocation(line: 1524, column: 2, scope: !9664)
!9752 = !DILocation(line: 1524, column: 8, scope: !9664)
!9753 = !DILocation(line: 1524, column: 22, scope: !9664)
!9754 = !DILocation(line: 1525, column: 2, scope: !9664)
!9755 = !DILocation(line: 1525, column: 8, scope: !9664)
!9756 = !DILocation(line: 1525, column: 18, scope: !9664)
!9757 = !DILocation(line: 1528, column: 6, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 1528, column: 6)
!9759 = !DILocation(line: 1528, column: 12, scope: !9758)
!9760 = !DILocation(line: 1528, column: 21, scope: !9758)
!9761 = !DILocation(line: 1528, column: 6, scope: !9664)
!9762 = !DILocation(line: 1529, column: 3, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9758, file: !3, line: 1528, column: 41)
!9764 = !DILocation(line: 1529, column: 9, scope: !9763)
!9765 = !DILocation(line: 1529, column: 19, scope: !9763)
!9766 = !DILocation(line: 1530, column: 22, scope: !9763)
!9767 = !DILocation(line: 1530, column: 28, scope: !9763)
!9768 = !DILocation(line: 1530, column: 39, scope: !9763)
!9769 = !DILocation(line: 1530, column: 3, scope: !9763)
!9770 = !DILocation(line: 1530, column: 9, scope: !9763)
!9771 = !DILocation(line: 1530, column: 20, scope: !9763)
!9772 = !DILocation(line: 1531, column: 2, scope: !9763)
!9773 = !DILocation(line: 1532, column: 3, scope: !9758)
!9774 = !DILocation(line: 1532, column: 9, scope: !9758)
!9775 = !DILocation(line: 1532, column: 19, scope: !9758)
!9776 = !DILocation(line: 1533, column: 20, scope: !9664)
!9777 = !DILocation(line: 1533, column: 2, scope: !9664)
!9778 = !DILocation(line: 1533, column: 8, scope: !9664)
!9779 = !DILocation(line: 1533, column: 18, scope: !9664)
!9780 = !DILocation(line: 1534, column: 2, scope: !9664)
!9781 = !DILocation(line: 1534, column: 8, scope: !9664)
!9782 = !DILocation(line: 1534, column: 30, scope: !9664)
!9783 = !DILocation(line: 1535, column: 9, scope: !9664)
!9784 = !DILocation(line: 1535, column: 15, scope: !9664)
!9785 = !DILocation(line: 1535, column: 2, scope: !9664)
!9786 = !DILocation(line: 1536, column: 16, scope: !9664)
!9787 = !DILocation(line: 1536, column: 22, scope: !9664)
!9788 = !DILocation(line: 1536, column: 2, scope: !9664)
!9789 = !DILocation(line: 1537, column: 2, scope: !9664)
!9790 = !DILocation(line: 1537, column: 8, scope: !9664)
!9791 = !DILocation(line: 1537, column: 24, scope: !9664)
!9792 = !DILocation(line: 1538, column: 2, scope: !9664)
!9793 = !DILocation(line: 1538, column: 8, scope: !9664)
!9794 = !DILocation(line: 1538, column: 31, scope: !9664)
!9795 = !DILocation(line: 1540, column: 22, scope: !9664)
!9796 = !DILocation(line: 1540, column: 2, scope: !9664)
!9797 = !DILocation(line: 1540, column: 8, scope: !9664)
!9798 = !DILocation(line: 1540, column: 20, scope: !9664)
!9799 = !DILocation(line: 1541, column: 2, scope: !9664)
!9800 = !DILocation(line: 1541, column: 8, scope: !9664)
!9801 = !DILocation(line: 1541, column: 17, scope: !9664)
!9802 = !DILocation(line: 1542, column: 2, scope: !9664)
!9803 = !DILocation(line: 1542, column: 8, scope: !9664)
!9804 = !DILocation(line: 1542, column: 23, scope: !9664)
!9805 = !DILocation(line: 1543, column: 2, scope: !9664)
!9806 = !DILocation(line: 1543, column: 8, scope: !9664)
!9807 = !DILocation(line: 1543, column: 27, scope: !9664)
!9808 = !DILocation(line: 1544, column: 2, scope: !9664)
!9809 = !DILocation(line: 1544, column: 8, scope: !9664)
!9810 = !DILocation(line: 1544, column: 26, scope: !9664)
!9811 = !DILocation(line: 1545, column: 2, scope: !9664)
!9812 = !DILocation(line: 1545, column: 8, scope: !9664)
!9813 = !DILocation(line: 1545, column: 19, scope: !9664)
!9814 = !DILocation(line: 1546, column: 2, scope: !9664)
!9815 = !DILocation(line: 1546, column: 8, scope: !9664)
!9816 = !DILocation(line: 1546, column: 16, scope: !9664)
!9817 = !DILocation(line: 1547, column: 2, scope: !9664)
!9818 = !DILocation(line: 1547, column: 8, scope: !9664)
!9819 = !DILocation(line: 1547, column: 21, scope: !9664)
!9820 = !DILocation(line: 1548, column: 2, scope: !9664)
!9821 = !DILocation(line: 1548, column: 8, scope: !9664)
!9822 = !DILocation(line: 1548, column: 16, scope: !9664)
!9823 = !DILocation(line: 1549, column: 2, scope: !9664)
!9824 = !DILocation(line: 1549, column: 8, scope: !9664)
!9825 = !DILocation(line: 1549, column: 19, scope: !9664)
!9826 = !DILocation(line: 1550, column: 2, scope: !9664)
!9827 = !DILocation(line: 1550, column: 8, scope: !9664)
!9828 = !DILocation(line: 1550, column: 16, scope: !9664)
!9829 = !DILocation(line: 1551, column: 2, scope: !9664)
!9830 = !DILocation(line: 1551, column: 8, scope: !9664)
!9831 = !DILocation(line: 1551, column: 18, scope: !9664)
!9832 = !DILocation(line: 1552, column: 2, scope: !9664)
!9833 = !DILocation(line: 1552, column: 8, scope: !9664)
!9834 = !DILocation(line: 1552, column: 22, scope: !9664)
!9835 = !DILocation(line: 1553, column: 2, scope: !9664)
!9836 = !DILocation(line: 1553, column: 8, scope: !9664)
!9837 = !DILocation(line: 1553, column: 23, scope: !9664)
!9838 = !DILocation(line: 1554, column: 2, scope: !9664)
!9839 = !DILocation(line: 1554, column: 8, scope: !9664)
!9840 = !DILocation(line: 1554, column: 22, scope: !9664)
!9841 = !DILocation(line: 1555, column: 2, scope: !9664)
!9842 = !DILocation(line: 1555, column: 8, scope: !9664)
!9843 = !DILocation(line: 1555, column: 20, scope: !9664)
!9844 = !DILocation(line: 1556, column: 2, scope: !9664)
!9845 = !DILocation(line: 1556, column: 8, scope: !9664)
!9846 = !DILocation(line: 1556, column: 19, scope: !9664)
!9847 = !DILocation(line: 1558, column: 2, scope: !9664)
!9848 = !DILocation(line: 1558, column: 8, scope: !9664)
!9849 = !DILocation(line: 1558, column: 18, scope: !9664)
!9850 = !DILocation(line: 1559, column: 2, scope: !9664)
!9851 = !DILocation(line: 1559, column: 8, scope: !9664)
!9852 = !DILocation(line: 1559, column: 20, scope: !9664)
!9853 = !DILocation(line: 1560, column: 2, scope: !9664)
!9854 = !DILocation(line: 1560, column: 8, scope: !9664)
!9855 = !DILocation(line: 1560, column: 25, scope: !9664)
!9856 = !DILocation(line: 1561, column: 2, scope: !9664)
!9857 = !DILocation(line: 1561, column: 8, scope: !9664)
!9858 = !DILocation(line: 1561, column: 28, scope: !9664)
!9859 = !DILocation(line: 1562, column: 29, scope: !9664)
!9860 = !DILocation(line: 1562, column: 35, scope: !9664)
!9861 = !DILocation(line: 1562, column: 57, scope: !9664)
!9862 = !DILocation(line: 1562, column: 2, scope: !9664)
!9863 = !DILocation(line: 1562, column: 8, scope: !9664)
!9864 = !DILocation(line: 1562, column: 27, scope: !9664)
!9865 = !DILocation(line: 1563, column: 2, scope: !9664)
!9866 = !DILocation(line: 1563, column: 8, scope: !9664)
!9867 = !DILocation(line: 1563, column: 16, scope: !9664)
!9868 = !DILocation(line: 1564, column: 9, scope: !9664)
!9869 = !DILocation(line: 1564, column: 15, scope: !9664)
!9870 = !DILocation(line: 1564, column: 2, scope: !9664)
!9871 = !DILocation(line: 1565, column: 9, scope: !9664)
!9872 = !DILocation(line: 1565, column: 15, scope: !9664)
!9873 = !DILocation(line: 1565, column: 2, scope: !9664)
!9874 = !DILocation(line: 1567, column: 32, scope: !9664)
!9875 = !DILocation(line: 1567, column: 38, scope: !9664)
!9876 = !DILocation(line: 1567, column: 52, scope: !9664)
!9877 = !DILocation(line: 1567, column: 2, scope: !9664)
!9878 = !DILocation(line: 1567, column: 8, scope: !9664)
!9879 = !DILocation(line: 1567, column: 30, scope: !9664)
!9880 = !DILocation(line: 1568, column: 2, scope: !9664)
!9881 = !DILocation(line: 1568, column: 8, scope: !9664)
!9882 = !DILocation(line: 1568, column: 24, scope: !9664)
!9883 = !DILocation(line: 1570, column: 2, scope: !9664)
!9884 = !DILocation(line: 1571, column: 2, scope: !9664)
!9885 = !DILocation(line: 1571, column: 2, scope: !9679)
!9886 = !DILocation(line: 329, column: 10, scope: !9669, inlinedAt: !9678)
!9887 = !DILocation(line: 329, column: 16, scope: !9669, inlinedAt: !9678)
!9888 = !DILocation(line: 1572, column: 2, scope: !9664)
!9889 = !DILocation(line: 1572, column: 2, scope: !9676)
!9890 = !DILocation(line: 329, column: 10, scope: !9669, inlinedAt: !9675)
!9891 = !DILocation(line: 329, column: 16, scope: !9669, inlinedAt: !9675)
!9892 = !DILocation(line: 1574, column: 2, scope: !9664)
!9893 = !DILocation(line: 1574, column: 7, scope: !9664)
!9894 = !DILocation(line: 1574, column: 18, scope: !9664)
!9895 = !DILocation(line: 1575, column: 2, scope: !9664)
!9896 = !DILocation(line: 1575, column: 7, scope: !9664)
!9897 = !DILocation(line: 1575, column: 25, scope: !9664)
!9898 = !DILocation(line: 1576, column: 13, scope: !9664)
!9899 = !DILocation(line: 1576, column: 2, scope: !9664)
!9900 = !DILocation(line: 1576, column: 7, scope: !9664)
!9901 = !DILocation(line: 1576, column: 11, scope: !9664)
!9902 = !DILocation(line: 1577, column: 19, scope: !9664)
!9903 = !DILocation(line: 1577, column: 2, scope: !9664)
!9904 = !DILocation(line: 1577, column: 7, scope: !9664)
!9905 = !DILocation(line: 1577, column: 17, scope: !9664)
!9906 = !DILocation(line: 1580, column: 2, scope: !9664)
!9907 = !DILocation(line: 1580, column: 7, scope: !9664)
!9908 = !DILocation(line: 1580, column: 15, scope: !9664)
!9909 = !DILocation(line: 1581, column: 2, scope: !9664)
!9910 = !DILocation(line: 1581, column: 7, scope: !9664)
!9911 = !DILocation(line: 1581, column: 15, scope: !9664)
!9912 = !DILocation(line: 1583, column: 2, scope: !9664)
!9913 = !DILocation(line: 1585, column: 24, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 1585, column: 6)
!9915 = !DILocation(line: 1585, column: 29, scope: !9914)
!9916 = !DILocation(line: 1585, column: 66, scope: !9914)
!9917 = !DILocation(line: 1585, column: 71, scope: !9914)
!9918 = !DILocation(line: 1585, column: 77, scope: !9914)
!9919 = !DILocation(line: 1585, column: 12, scope: !9914)
!9920 = !DILocation(line: 1585, column: 10, scope: !9914)
!9921 = !DILocation(line: 1585, column: 6, scope: !9664)
!9922 = !DILocation(line: 1586, column: 64, scope: !9923)
!9923 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 1585, column: 84)
!9924 = !DILocation(line: 1586, column: 69, scope: !9923)
!9925 = !DILocation(line: 1586, column: 75, scope: !9923)
!9926 = !DILocation(line: 1586, column: 80, scope: !9923)
!9927 = !DILocation(line: 1586, column: 3, scope: !9923)
!9928 = !DILocation(line: 1587, column: 3, scope: !9923)
!9929 = !DILocation(line: 1590, column: 7, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 1590, column: 6)
!9931 = !DILocation(line: 1590, column: 6, scope: !9664)
!9932 = !DILocation(line: 1592, column: 3, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9930, file: !3, line: 1591, column: 72)
!9934 = !DILocation(line: 1595, column: 22, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 1595, column: 6)
!9936 = !DILocation(line: 1595, column: 6, scope: !9935)
!9937 = !DILocation(line: 1595, column: 6, scope: !9664)
!9938 = !DILocation(line: 1596, column: 3, scope: !9935)
!9939 = !DILocation(line: 1598, column: 24, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 1598, column: 6)
!9941 = !DILocation(line: 1598, column: 7, scope: !9940)
!9942 = !DILocation(line: 1598, column: 6, scope: !9664)
!9943 = !DILocation(line: 1599, column: 21, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9940, file: !3, line: 1598, column: 30)
!9945 = !DILocation(line: 1599, column: 3, scope: !9944)
!9946 = !DILocation(line: 1600, column: 3, scope: !9944)
!9947 = !DILocation(line: 1603, column: 20, scope: !9664)
!9948 = !DILocation(line: 1603, column: 2, scope: !9664)
!9949 = !DILocation(line: 1606, column: 4, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 1605, column: 6)
!9951 = !DILocation(line: 1605, column: 7, scope: !9950)
!9952 = !DILocation(line: 1605, column: 6, scope: !9664)
!9953 = !DILocation(line: 1607, column: 3, scope: !9950)
!9954 = !DILocation(line: 1610, column: 9, scope: !9664)
!9955 = !DILocation(line: 1610, column: 14, scope: !9664)
!9956 = !DILocation(line: 1610, column: 48, scope: !9664)
!9957 = !DILocation(line: 1610, column: 53, scope: !9664)
!9958 = !DILocation(line: 1609, column: 2, scope: !9664)
!9959 = !DILocation(line: 1612, column: 9, scope: !9664)
!9960 = !DILocation(line: 1612, column: 2, scope: !9664)
!9961 = !DILabel(scope: !9664, name: "err_out_res", file: !3, line: 1614)
!9962 = !DILocation(line: 1614, column: 1, scope: !9664)
!9963 = !DILocation(line: 1615, column: 2, scope: !9664)
!9964 = !DILabel(scope: !9664, name: "err_out_irq", file: !3, line: 1616)
!9965 = !DILocation(line: 1616, column: 1, scope: !9664)
!9966 = !DILocation(line: 1617, column: 11, scope: !9664)
!9967 = !DILocation(line: 1617, column: 16, scope: !9664)
!9968 = !DILocation(line: 1617, column: 21, scope: !9664)
!9969 = !DILocation(line: 1617, column: 2, scope: !9664)
!9970 = !DILabel(scope: !9664, name: "err_out_free", file: !3, line: 1618)
!9971 = !DILocation(line: 1618, column: 1, scope: !9664)
!9972 = !DILocation(line: 1619, column: 14, scope: !9664)
!9973 = !DILocation(line: 1619, column: 2, scope: !9664)
!9974 = !DILocation(line: 1620, column: 2, scope: !9664)
!9975 = !DILocation(line: 1621, column: 1, scope: !9664)
!9976 = distinct !DISubprogram(name: "eth_zero_addr", scope: !9977, file: !9977, line: 249, type: !9978, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!9977 = !DIFile(filename: "./include/linux/etherdevice.h", directory: "/home/lizy2001/genbc/linux")
!9978 = !DISubroutineType(types: !9979)
!9979 = !{null, !1115}
!9980 = !DILocalVariable(name: "addr", arg: 1, scope: !9976, file: !9977, line: 249, type: !1115)
!9981 = !DILocation(line: 249, column: 38, scope: !9976)
!9982 = !DILocation(line: 251, column: 9, scope: !9976)
!9983 = !DILocation(line: 251, column: 2, scope: !9976)
!9984 = !DILocation(line: 252, column: 1, scope: !9976)
!9985 = distinct !DISubprogram(name: "atmel_management_timer", scope: !3, file: !3, line: 3420, type: !3574, scopeLine: 3421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!9986 = !DILocalVariable(name: "lock", arg: 1, scope: !9987, file: !9670, line: 407, type: !2499)
!9987 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !9670, file: !9670, line: 407, type: !9988, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!9988 = !DISubroutineType(types: !9989)
!9989 = !{null, !2499, !517}
!9990 = !DILocation(line: 407, column: 64, scope: !9987, inlinedAt: !9991)
!9991 = distinct !DILocation(line: 3481, column: 2, scope: !9985)
!9992 = !DILocalVariable(name: "flags", arg: 2, scope: !9987, file: !9670, line: 407, type: !517)
!9993 = !DILocation(line: 407, column: 84, scope: !9987, inlinedAt: !9991)
!9994 = !DILocation(line: 327, column: 67, scope: !9669, inlinedAt: !9995)
!9995 = distinct !DILocation(line: 3430, column: 2, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9997, file: !3, line: 3430, column: 2)
!9997 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 3430, column: 2)
!9998 = distinct !DILexicalBlock(scope: !9999, file: !3, line: 3430, column: 2)
!9999 = distinct !DILexicalBlock(scope: !10000, file: !3, line: 3430, column: 2)
!10000 = distinct !DILexicalBlock(scope: !9985, file: !3, line: 3430, column: 2)
!10001 = !DILocalVariable(name: "t", arg: 1, scope: !9985, file: !3, line: 3420, type: !3576)
!10002 = !DILocation(line: 3420, column: 55, scope: !9985)
!10003 = !DILocalVariable(name: "priv", scope: !9985, file: !3, line: 3422, type: !8587)
!10004 = !DILocation(line: 3422, column: 24, scope: !9985)
!10005 = !DILocalVariable(name: "__mptr", scope: !10006, file: !3, line: 3422, type: !622)
!10006 = distinct !DILexicalBlock(scope: !9985, file: !3, line: 3422, column: 31)
!10007 = !DILocation(line: 3422, column: 31, scope: !10006)
!10008 = !DILocation(line: 3422, column: 31, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10006, file: !3, line: 3422, column: 31)
!10010 = !DILocalVariable(name: "flags", scope: !9985, file: !3, line: 3423, type: !517)
!10011 = !DILocation(line: 3423, column: 16, scope: !9985)
!10012 = !DILocation(line: 3426, column: 6, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !9985, file: !3, line: 3426, column: 6)
!10014 = !DILocation(line: 3426, column: 12, scope: !10013)
!10015 = !DILocation(line: 3426, column: 17, scope: !10013)
!10016 = !DILocation(line: 3426, column: 20, scope: !10013)
!10017 = !DILocation(line: 3426, column: 26, scope: !10013)
!10018 = !DILocation(line: 3426, column: 43, scope: !10013)
!10019 = !DILocation(line: 3427, column: 6, scope: !10013)
!10020 = !DILocation(line: 3427, column: 12, scope: !10013)
!10021 = !DILocation(line: 3427, column: 30, scope: !10013)
!10022 = !DILocation(line: 3427, column: 36, scope: !10013)
!10023 = !DILocation(line: 3427, column: 4, scope: !10013)
!10024 = !DILocation(line: 3426, column: 6, scope: !9985)
!10025 = !DILocation(line: 3428, column: 3, scope: !10013)
!10026 = !DILocation(line: 3430, column: 2, scope: !9985)
!10027 = !DILocation(line: 3430, column: 2, scope: !10000)
!10028 = !DILocalVariable(name: "__dummy", scope: !10029, file: !3, line: 3430, type: !517)
!10029 = distinct !DILexicalBlock(scope: !9999, file: !3, line: 3430, column: 2)
!10030 = !DILocation(line: 3430, column: 2, scope: !10029)
!10031 = !DILocalVariable(name: "__dummy2", scope: !10029, file: !3, line: 3430, type: !517)
!10032 = !DILocation(line: 3430, column: 2, scope: !9999)
!10033 = !DILocation(line: 3430, column: 2, scope: !9998)
!10034 = !DILocation(line: 3430, column: 2, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 3430, column: 2)
!10036 = !DILocalVariable(name: "__dummy", scope: !10037, file: !3, line: 3430, type: !517)
!10037 = distinct !DILexicalBlock(scope: !10038, file: !3, line: 3430, column: 2)
!10038 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 3430, column: 2)
!10039 = !DILocation(line: 3430, column: 2, scope: !10037)
!10040 = !DILocalVariable(name: "__dummy2", scope: !10037, file: !3, line: 3430, type: !517)
!10041 = !DILocation(line: 3430, column: 2, scope: !10038)
!10042 = !DILocation(line: 3430, column: 2, scope: !9997)
!10043 = !{i32 -2139074377}
!10044 = !DILocation(line: 3430, column: 2, scope: !9996)
!10045 = !DILocation(line: 329, column: 10, scope: !9669, inlinedAt: !9995)
!10046 = !DILocation(line: 329, column: 16, scope: !9669, inlinedAt: !9995)
!10047 = !DILocation(line: 3432, column: 10, scope: !9985)
!10048 = !DILocation(line: 3432, column: 16, scope: !9985)
!10049 = !DILocation(line: 3432, column: 2, scope: !9985)
!10050 = !DILocation(line: 3435, column: 7, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10052, file: !3, line: 3435, column: 7)
!10052 = distinct !DILexicalBlock(scope: !9985, file: !3, line: 3432, column: 31)
!10053 = !DILocation(line: 3435, column: 13, scope: !10051)
!10054 = !DILocation(line: 3435, column: 43, scope: !10051)
!10055 = !DILocation(line: 3435, column: 7, scope: !10052)
!10056 = !DILocation(line: 3436, column: 22, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10051, file: !3, line: 3435, column: 74)
!10058 = !DILocation(line: 3436, column: 4, scope: !10057)
!10059 = !DILocation(line: 3437, column: 4, scope: !10057)
!10060 = !DILocation(line: 3437, column: 10, scope: !10057)
!10061 = !DILocation(line: 3437, column: 32, scope: !10057)
!10062 = !DILocation(line: 3438, column: 4, scope: !10057)
!10063 = !DILocation(line: 3438, column: 10, scope: !10057)
!10064 = !DILocation(line: 3438, column: 40, scope: !10057)
!10065 = !DILocation(line: 3439, column: 19, scope: !10057)
!10066 = !DILocation(line: 3439, column: 4, scope: !10057)
!10067 = !DILocation(line: 3440, column: 3, scope: !10057)
!10068 = !DILocalVariable(name: "auth", scope: !10069, file: !3, line: 3441, type: !7)
!10069 = distinct !DILexicalBlock(scope: !10051, file: !3, line: 3440, column: 10)
!10070 = !DILocation(line: 3441, column: 8, scope: !10069)
!10071 = !DILocation(line: 3442, column: 4, scope: !10069)
!10072 = !DILocation(line: 3442, column: 10, scope: !10069)
!10073 = !DILocation(line: 3442, column: 39, scope: !10069)
!10074 = !DILocation(line: 3443, column: 4, scope: !10069)
!10075 = !DILocation(line: 3443, column: 10, scope: !10069)
!10076 = !DILocation(line: 3443, column: 42, scope: !10069)
!10077 = !DILocation(line: 3444, column: 15, scope: !10069)
!10078 = !DILocation(line: 3444, column: 21, scope: !10069)
!10079 = !DILocation(line: 3444, column: 39, scope: !10069)
!10080 = !DILocation(line: 3444, column: 47, scope: !10069)
!10081 = !DILocation(line: 3444, column: 4, scope: !10069)
!10082 = !DILocation(line: 3445, column: 8, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10069, file: !3, line: 3445, column: 8)
!10084 = !DILocation(line: 3445, column: 14, scope: !10083)
!10085 = !DILocation(line: 3445, column: 24, scope: !10083)
!10086 = !DILocation(line: 3445, column: 27, scope: !10083)
!10087 = !DILocation(line: 3445, column: 33, scope: !10083)
!10088 = !DILocation(line: 3445, column: 8, scope: !10069)
!10089 = !DILocation(line: 3446, column: 10, scope: !10083)
!10090 = !DILocation(line: 3446, column: 5, scope: !10083)
!10091 = !DILocation(line: 3447, column: 32, scope: !10069)
!10092 = !DILocation(line: 3447, column: 38, scope: !10069)
!10093 = !DILocation(line: 3447, column: 4, scope: !10069)
!10094 = !DILocation(line: 3449, column: 4, scope: !10052)
!10095 = !DILocation(line: 3452, column: 7, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10052, file: !3, line: 3452, column: 7)
!10097 = !DILocation(line: 3452, column: 13, scope: !10096)
!10098 = !DILocation(line: 3452, column: 40, scope: !10096)
!10099 = !DILocation(line: 3452, column: 7, scope: !10052)
!10100 = !DILocation(line: 3453, column: 22, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 3452, column: 68)
!10102 = !DILocation(line: 3453, column: 4, scope: !10101)
!10103 = !DILocation(line: 3454, column: 4, scope: !10101)
!10104 = !DILocation(line: 3454, column: 10, scope: !10101)
!10105 = !DILocation(line: 3454, column: 32, scope: !10101)
!10106 = !DILocation(line: 3455, column: 4, scope: !10101)
!10107 = !DILocation(line: 3455, column: 10, scope: !10101)
!10108 = !DILocation(line: 3455, column: 37, scope: !10101)
!10109 = !DILocation(line: 3456, column: 19, scope: !10101)
!10110 = !DILocation(line: 3456, column: 4, scope: !10101)
!10111 = !DILocation(line: 3457, column: 3, scope: !10101)
!10112 = !DILocation(line: 3458, column: 4, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 3457, column: 10)
!10114 = !DILocation(line: 3458, column: 10, scope: !10113)
!10115 = !DILocation(line: 3458, column: 36, scope: !10113)
!10116 = !DILocation(line: 3459, column: 15, scope: !10113)
!10117 = !DILocation(line: 3459, column: 21, scope: !10113)
!10118 = !DILocation(line: 3459, column: 39, scope: !10113)
!10119 = !DILocation(line: 3459, column: 47, scope: !10113)
!10120 = !DILocation(line: 3459, column: 4, scope: !10113)
!10121 = !DILocation(line: 3460, column: 29, scope: !10113)
!10122 = !DILocation(line: 3460, column: 4, scope: !10113)
!10123 = !DILocation(line: 3462, column: 4, scope: !10052)
!10124 = !DILocation(line: 3465, column: 7, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10052, file: !3, line: 3465, column: 7)
!10126 = !DILocation(line: 3465, column: 13, scope: !10125)
!10127 = !DILocation(line: 3465, column: 42, scope: !10125)
!10128 = !DILocation(line: 3465, column: 7, scope: !10052)
!10129 = !DILocation(line: 3466, column: 22, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10125, file: !3, line: 3465, column: 70)
!10131 = !DILocation(line: 3466, column: 4, scope: !10130)
!10132 = !DILocation(line: 3467, column: 4, scope: !10130)
!10133 = !DILocation(line: 3467, column: 10, scope: !10130)
!10134 = !DILocation(line: 3467, column: 32, scope: !10130)
!10135 = !DILocation(line: 3468, column: 4, scope: !10130)
!10136 = !DILocation(line: 3468, column: 10, scope: !10130)
!10137 = !DILocation(line: 3468, column: 39, scope: !10130)
!10138 = !DILocation(line: 3469, column: 19, scope: !10130)
!10139 = !DILocation(line: 3469, column: 4, scope: !10130)
!10140 = !DILocation(line: 3470, column: 3, scope: !10130)
!10141 = !DILocation(line: 3471, column: 4, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10125, file: !3, line: 3470, column: 10)
!10143 = !DILocation(line: 3471, column: 10, scope: !10142)
!10144 = !DILocation(line: 3471, column: 38, scope: !10142)
!10145 = !DILocation(line: 3472, column: 15, scope: !10142)
!10146 = !DILocation(line: 3472, column: 21, scope: !10142)
!10147 = !DILocation(line: 3472, column: 39, scope: !10142)
!10148 = !DILocation(line: 3472, column: 47, scope: !10142)
!10149 = !DILocation(line: 3472, column: 4, scope: !10142)
!10150 = !DILocation(line: 3473, column: 29, scope: !10142)
!10151 = !DILocation(line: 3473, column: 4, scope: !10142)
!10152 = !DILocation(line: 3475, column: 3, scope: !10052)
!10153 = !DILocation(line: 3478, column: 3, scope: !10052)
!10154 = !DILocation(line: 3481, column: 26, scope: !9985)
!10155 = !DILocation(line: 3481, column: 32, scope: !9985)
!10156 = !DILocation(line: 3481, column: 41, scope: !9985)
!10157 = !DILocalVariable(name: "__dummy", scope: !10158, file: !9670, line: 409, type: !517)
!10158 = distinct !DILexicalBlock(scope: !10159, file: !9670, line: 409, column: 2)
!10159 = distinct !DILexicalBlock(scope: !9987, file: !9670, line: 409, column: 2)
!10160 = !DILocation(line: 409, column: 2, scope: !10158, inlinedAt: !9991)
!10161 = !DILocalVariable(name: "__dummy2", scope: !10158, file: !9670, line: 409, type: !517)
!10162 = !DILocalVariable(name: "__dummy", scope: !10163, file: !9670, line: 409, type: !517)
!10163 = distinct !DILexicalBlock(scope: !10164, file: !9670, line: 409, column: 2)
!10164 = distinct !DILexicalBlock(scope: !10165, file: !9670, line: 409, column: 2)
!10165 = distinct !DILexicalBlock(scope: !10166, file: !9670, line: 409, column: 2)
!10166 = distinct !DILexicalBlock(scope: !10159, file: !9670, line: 409, column: 2)
!10167 = !DILocation(line: 409, column: 2, scope: !10163, inlinedAt: !9991)
!10168 = !DILocalVariable(name: "__dummy2", scope: !10163, file: !9670, line: 409, type: !517)
!10169 = !DILocation(line: 409, column: 2, scope: !10164, inlinedAt: !9991)
!10170 = !DILocation(line: 409, column: 2, scope: !10171, inlinedAt: !9991)
!10171 = distinct !DILexicalBlock(scope: !10166, file: !9670, line: 409, column: 2)
!10172 = !{i32 -2145224998}
!10173 = !DILocation(line: 409, column: 2, scope: !10174, inlinedAt: !9991)
!10174 = distinct !DILexicalBlock(scope: !10171, file: !9670, line: 409, column: 2)
!10175 = !DILocation(line: 3482, column: 1, scope: !9985)
!10176 = distinct !DISubprogram(name: "request_irq", scope: !3344, file: !3344, line: 157, type: !10177, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!10177 = !DISubroutineType(types: !10178)
!10178 = !{!7, !13, !10179, !517, !497, !622}
!10179 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !3344, line: 92, baseType: !10180)
!10180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8835, size: 64)
!10181 = !DILocalVariable(name: "irq", arg: 1, scope: !10176, file: !3344, line: 157, type: !13)
!10182 = !DILocation(line: 157, column: 26, scope: !10176)
!10183 = !DILocalVariable(name: "handler", arg: 2, scope: !10176, file: !3344, line: 157, type: !10179)
!10184 = !DILocation(line: 157, column: 45, scope: !10176)
!10185 = !DILocalVariable(name: "flags", arg: 3, scope: !10176, file: !3344, line: 157, type: !517)
!10186 = !DILocation(line: 157, column: 68, scope: !10176)
!10187 = !DILocalVariable(name: "name", arg: 4, scope: !10176, file: !3344, line: 158, type: !497)
!10188 = !DILocation(line: 158, column: 18, scope: !10176)
!10189 = !DILocalVariable(name: "dev", arg: 5, scope: !10176, file: !3344, line: 158, type: !622)
!10190 = !DILocation(line: 158, column: 30, scope: !10176)
!10191 = !DILocation(line: 160, column: 30, scope: !10176)
!10192 = !DILocation(line: 160, column: 35, scope: !10176)
!10193 = !DILocation(line: 160, column: 50, scope: !10176)
!10194 = !DILocation(line: 160, column: 57, scope: !10176)
!10195 = !DILocation(line: 160, column: 63, scope: !10176)
!10196 = !DILocation(line: 160, column: 9, scope: !10176)
!10197 = !DILocation(line: 160, column: 2, scope: !10176)
!10198 = !DILocalVariable(name: "irq", arg: 1, scope: !8834, file: !3, line: 1155, type: !7)
!10199 = !DILocation(line: 1155, column: 42, scope: !8834)
!10200 = !DILocalVariable(name: "dev_id", arg: 2, scope: !8834, file: !3, line: 1155, type: !622)
!10201 = !DILocation(line: 1155, column: 53, scope: !8834)
!10202 = !DILocalVariable(name: "dev", scope: !8834, file: !3, line: 1157, type: !495)
!10203 = !DILocation(line: 1157, column: 21, scope: !8834)
!10204 = !DILocation(line: 1157, column: 49, scope: !8834)
!10205 = !DILocation(line: 1157, column: 27, scope: !8834)
!10206 = !DILocalVariable(name: "priv", scope: !8834, file: !3, line: 1158, type: !8587)
!10207 = !DILocation(line: 1158, column: 24, scope: !8834)
!10208 = !DILocation(line: 1158, column: 43, scope: !8834)
!10209 = !DILocation(line: 1158, column: 31, scope: !8834)
!10210 = !DILocalVariable(name: "isr", scope: !8834, file: !3, line: 1159, type: !1116)
!10211 = !DILocation(line: 1159, column: 5, scope: !8834)
!10212 = !DILocalVariable(name: "i", scope: !8834, file: !3, line: 1160, type: !7)
!10213 = !DILocation(line: 1160, column: 6, scope: !8834)
!10214 = !DILocation(line: 1172, column: 6, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !8834, file: !3, line: 1172, column: 6)
!10216 = !DILocation(line: 1172, column: 12, scope: !10215)
!10217 = !DILocation(line: 1172, column: 17, scope: !10215)
!10218 = !DILocation(line: 1172, column: 20, scope: !10215)
!10219 = !DILocation(line: 1172, column: 26, scope: !10215)
!10220 = !DILocation(line: 1172, column: 43, scope: !10215)
!10221 = !DILocation(line: 1173, column: 9, scope: !10215)
!10222 = !DILocation(line: 1173, column: 15, scope: !10215)
!10223 = !DILocation(line: 1173, column: 33, scope: !10215)
!10224 = !DILocation(line: 1173, column: 39, scope: !10215)
!10225 = !DILocation(line: 1173, column: 7, scope: !10215)
!10226 = !DILocation(line: 1172, column: 6, scope: !8834)
!10227 = !DILocation(line: 1174, column: 3, scope: !10215)
!10228 = !DILocation(line: 1181, column: 6, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !8834, file: !3, line: 1181, column: 6)
!10230 = !DILocation(line: 1181, column: 12, scope: !10229)
!10231 = !DILocation(line: 1181, column: 26, scope: !10229)
!10232 = !DILocation(line: 1181, column: 6, scope: !8834)
!10233 = !DILocation(line: 1182, column: 3, scope: !10229)
!10234 = !DILocation(line: 1184, column: 18, scope: !8834)
!10235 = !DILocation(line: 1184, column: 2, scope: !8834)
!10236 = !DILocation(line: 1186, column: 2, scope: !8834)
!10237 = !DILocation(line: 1187, column: 23, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 1187, column: 7)
!10239 = distinct !DILexicalBlock(scope: !8834, file: !3, line: 1186, column: 12)
!10240 = !DILocation(line: 1187, column: 8, scope: !10238)
!10241 = !DILocation(line: 1187, column: 7, scope: !10239)
!10242 = !DILocation(line: 1189, column: 54, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10238, file: !3, line: 1187, column: 30)
!10244 = !DILocation(line: 1189, column: 59, scope: !10243)
!10245 = !DILocation(line: 1189, column: 4, scope: !10243)
!10246 = !DILocation(line: 1190, column: 4, scope: !10243)
!10247 = !DILocation(line: 1193, column: 21, scope: !10239)
!10248 = !DILocation(line: 1193, column: 36, scope: !10239)
!10249 = !DILocation(line: 1193, column: 27, scope: !10239)
!10250 = !DILocation(line: 1193, column: 9, scope: !10239)
!10251 = !DILocation(line: 1193, column: 7, scope: !10239)
!10252 = !DILocation(line: 1194, column: 15, scope: !10239)
!10253 = !DILocation(line: 1194, column: 30, scope: !10239)
!10254 = !DILocation(line: 1194, column: 21, scope: !10239)
!10255 = !DILocation(line: 1194, column: 3, scope: !10239)
!10256 = !DILocation(line: 1196, column: 8, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 1196, column: 7)
!10258 = !DILocation(line: 1196, column: 7, scope: !10239)
!10259 = !DILocation(line: 1197, column: 18, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10257, file: !3, line: 1196, column: 13)
!10261 = !DILocation(line: 1197, column: 4, scope: !10260)
!10262 = !DILocation(line: 1198, column: 11, scope: !10260)
!10263 = !DILocation(line: 1198, column: 13, scope: !10260)
!10264 = !DILocation(line: 1198, column: 4, scope: !10260)
!10265 = !DILocation(line: 1201, column: 17, scope: !10239)
!10266 = !DILocation(line: 1201, column: 3, scope: !10239)
!10267 = !DILocation(line: 1203, column: 10, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 1203, column: 3)
!10269 = !DILocation(line: 1203, column: 8, scope: !10268)
!10270 = !DILocation(line: 1203, column: 15, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 1203, column: 3)
!10272 = !DILocation(line: 1203, column: 17, scope: !10271)
!10273 = !DILocation(line: 1203, column: 3, scope: !10268)
!10274 = !DILocation(line: 1204, column: 8, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 1204, column: 8)
!10276 = !DILocation(line: 1204, column: 24, scope: !10275)
!10277 = !DILocation(line: 1204, column: 14, scope: !10275)
!10278 = !DILocation(line: 1204, column: 12, scope: !10275)
!10279 = !DILocation(line: 1204, column: 8, scope: !10271)
!10280 = !DILocation(line: 1205, column: 5, scope: !10275)
!10281 = !DILocation(line: 1204, column: 25, scope: !10275)
!10282 = !DILocation(line: 1203, column: 43, scope: !10271)
!10283 = !DILocation(line: 1203, column: 3, scope: !10271)
!10284 = distinct !{!10284, !10273, !10285}
!10285 = !DILocation(line: 1205, column: 5, scope: !10268)
!10286 = !DILocation(line: 1207, column: 23, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 1207, column: 7)
!10288 = !DILocation(line: 1207, column: 8, scope: !10287)
!10289 = !DILocation(line: 1207, column: 7, scope: !10239)
!10290 = !DILocation(line: 1209, column: 54, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10287, file: !3, line: 1207, column: 30)
!10292 = !DILocation(line: 1209, column: 59, scope: !10291)
!10293 = !DILocation(line: 1209, column: 4, scope: !10291)
!10294 = !DILocation(line: 1210, column: 4, scope: !10291)
!10295 = !DILocation(line: 1213, column: 21, scope: !10239)
!10296 = !DILocation(line: 1213, column: 36, scope: !10239)
!10297 = !DILocation(line: 1213, column: 27, scope: !10239)
!10298 = !DILocation(line: 1213, column: 9, scope: !10239)
!10299 = !DILocation(line: 1213, column: 7, scope: !10239)
!10300 = !DILocation(line: 1214, column: 20, scope: !10239)
!10301 = !DILocation(line: 1214, column: 10, scope: !10239)
!10302 = !DILocation(line: 1214, column: 7, scope: !10239)
!10303 = !DILocation(line: 1215, column: 15, scope: !10239)
!10304 = !DILocation(line: 1215, column: 30, scope: !10239)
!10305 = !DILocation(line: 1215, column: 21, scope: !10239)
!10306 = !DILocation(line: 1215, column: 62, scope: !10239)
!10307 = !DILocation(line: 1215, column: 3, scope: !10239)
!10308 = !DILocation(line: 1216, column: 15, scope: !10239)
!10309 = !DILocation(line: 1216, column: 30, scope: !10239)
!10310 = !DILocation(line: 1216, column: 21, scope: !10239)
!10311 = !DILocation(line: 1216, column: 3, scope: !10239)
!10312 = !DILocation(line: 1218, column: 21, scope: !10239)
!10313 = !DILocation(line: 1218, column: 11, scope: !10239)
!10314 = !DILocation(line: 1218, column: 3, scope: !10239)
!10315 = !DILocation(line: 1221, column: 8, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10317, file: !3, line: 1221, column: 8)
!10317 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 1218, column: 25)
!10318 = !DILocation(line: 1221, column: 14, scope: !10316)
!10319 = !DILocation(line: 1221, column: 29, scope: !10316)
!10320 = !DILocation(line: 1221, column: 46, scope: !10316)
!10321 = !DILocation(line: 1222, column: 8, scope: !10316)
!10322 = !DILocation(line: 1222, column: 14, scope: !10316)
!10323 = !DILocation(line: 1222, column: 28, scope: !10316)
!10324 = !DILocation(line: 1221, column: 8, scope: !10317)
!10325 = !DILocation(line: 1223, column: 5, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1222, column: 52)
!10327 = !DILocation(line: 1223, column: 11, scope: !10326)
!10328 = !DILocation(line: 1223, column: 33, scope: !10326)
!10329 = !DILocation(line: 1224, column: 16, scope: !10326)
!10330 = !DILocation(line: 1224, column: 5, scope: !10326)
!10331 = !DILocation(line: 1225, column: 4, scope: !10326)
!10332 = !DILocation(line: 1226, column: 4, scope: !10317)
!10333 = !DILocation(line: 1229, column: 4, scope: !10317)
!10334 = !DILocation(line: 1229, column: 10, scope: !10317)
!10335 = !DILocation(line: 1229, column: 17, scope: !10317)
!10336 = !DILocation(line: 1229, column: 25, scope: !10317)
!10337 = !DILocation(line: 1229, column: 29, scope: !10317)
!10338 = !DILocation(line: 1232, column: 16, scope: !10317)
!10339 = !DILocation(line: 1232, column: 4, scope: !10317)
!10340 = !DILocation(line: 1233, column: 4, scope: !10317)
!10341 = !DILocation(line: 1236, column: 16, scope: !10317)
!10342 = !DILocation(line: 1236, column: 4, scope: !10317)
!10343 = !DILocation(line: 1237, column: 4, scope: !10317)
!10344 = !DILocation(line: 1240, column: 61, scope: !10317)
!10345 = !DILocation(line: 1240, column: 66, scope: !10317)
!10346 = !DILocation(line: 1240, column: 4, scope: !10317)
!10347 = !DILocation(line: 1241, column: 22, scope: !10317)
!10348 = !DILocation(line: 1241, column: 4, scope: !10317)
!10349 = !DILocation(line: 1242, column: 4, scope: !10317)
!10350 = !DILocation(line: 1245, column: 22, scope: !10317)
!10351 = !DILocation(line: 1245, column: 4, scope: !10317)
!10352 = !DILocation(line: 1246, column: 4, scope: !10317)
!10353 = !DILocation(line: 1249, column: 18, scope: !10317)
!10354 = !DILocation(line: 1250, column: 11, scope: !10317)
!10355 = !DILocation(line: 1250, column: 17, scope: !10317)
!10356 = !DILocation(line: 1249, column: 4, scope: !10317)
!10357 = !DILocation(line: 1252, column: 8, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10317, file: !3, line: 1252, column: 8)
!10359 = !DILocation(line: 1252, column: 14, scope: !10358)
!10360 = !DILocation(line: 1252, column: 8, scope: !10317)
!10361 = !DILocation(line: 1253, column: 19, scope: !10358)
!10362 = !DILocation(line: 1253, column: 5, scope: !10358)
!10363 = !DILocation(line: 1254, column: 4, scope: !10317)
!10364 = !DILocation(line: 1256, column: 52, scope: !10317)
!10365 = !DILocation(line: 1256, column: 57, scope: !10317)
!10366 = !DILocation(line: 1256, column: 4, scope: !10317)
!10367 = !DILocation(line: 1257, column: 4, scope: !10317)
!10368 = distinct !{!10368, !10236, !10369}
!10369 = !DILocation(line: 1259, column: 2, scope: !8834)
!10370 = !DILocation(line: 1260, column: 1, scope: !8834)
!10371 = !DILocalVariable(name: "dev", arg: 1, scope: !8864, file: !3, line: 3669, type: !495)
!10372 = !DILocation(line: 3669, column: 48, scope: !8864)
!10373 = !DILocalVariable(name: "rc", scope: !8864, file: !3, line: 3671, type: !7)
!10374 = !DILocation(line: 3671, column: 6, scope: !8864)
!10375 = !DILocalVariable(name: "priv", scope: !8864, file: !3, line: 3672, type: !8587)
!10376 = !DILocation(line: 3672, column: 24, scope: !8864)
!10377 = !DILocation(line: 3672, column: 43, scope: !8864)
!10378 = !DILocation(line: 3672, column: 31, scope: !8864)
!10379 = !DILocation(line: 3675, column: 6, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 3675, column: 6)
!10381 = !DILocation(line: 3675, column: 12, scope: !10380)
!10382 = !DILocation(line: 3675, column: 21, scope: !10380)
!10383 = !DILocation(line: 3675, column: 6, scope: !8864)
!10384 = !DILocation(line: 3676, column: 17, scope: !10380)
!10385 = !DILocation(line: 3676, column: 3, scope: !10380)
!10386 = !DILocation(line: 3678, column: 16, scope: !8864)
!10387 = !DILocation(line: 3678, column: 2, scope: !8864)
!10388 = !DILocation(line: 3679, column: 2, scope: !8864)
!10389 = !DILocation(line: 3681, column: 19, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 3681, column: 6)
!10391 = !DILocation(line: 3681, column: 6, scope: !10390)
!10392 = !DILocation(line: 3681, column: 29, scope: !10390)
!10393 = !DILocation(line: 3681, column: 6, scope: !8864)
!10394 = !DILocalVariable(name: "i", scope: !10395, file: !3, line: 3684, type: !7)
!10395 = distinct !DILexicalBlock(scope: !10390, file: !3, line: 3681, column: 35)
!10396 = !DILocation(line: 3684, column: 7, scope: !10395)
!10397 = !DILocation(line: 3685, column: 3, scope: !10395)
!10398 = !DILocation(line: 3685, column: 9, scope: !10395)
!10399 = !DILocation(line: 3685, column: 19, scope: !10395)
!10400 = !DILocation(line: 3686, column: 17, scope: !10395)
!10401 = !DILocation(line: 3686, column: 3, scope: !10395)
!10402 = !DILocation(line: 3687, column: 22, scope: !10395)
!10403 = !DILocation(line: 3687, column: 3, scope: !10395)
!10404 = !DILocation(line: 3688, column: 17, scope: !10395)
!10405 = !DILocation(line: 3688, column: 3, scope: !10395)
!10406 = !DILocation(line: 3689, column: 19, scope: !10395)
!10407 = !DILocation(line: 3689, column: 25, scope: !10395)
!10408 = !DILocation(line: 3689, column: 3, scope: !10395)
!10409 = !DILocation(line: 3690, column: 17, scope: !10395)
!10410 = !DILocation(line: 3690, column: 3, scope: !10395)
!10411 = !DILocation(line: 3691, column: 10, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10395, file: !3, line: 3691, column: 3)
!10413 = !DILocation(line: 3691, column: 8, scope: !10412)
!10414 = !DILocation(line: 3691, column: 30, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10412, file: !3, line: 3691, column: 3)
!10416 = !DILocation(line: 3691, column: 3, scope: !10412)
!10417 = !DILocation(line: 3692, column: 21, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 3692, column: 8)
!10419 = !DILocation(line: 3692, column: 8, scope: !10418)
!10420 = !DILocation(line: 3692, column: 31, scope: !10418)
!10421 = !DILocation(line: 3692, column: 8, scope: !10415)
!10422 = !DILocation(line: 3693, column: 5, scope: !10418)
!10423 = !DILocation(line: 3692, column: 33, scope: !10418)
!10424 = !DILocation(line: 3691, column: 34, scope: !10415)
!10425 = !DILocation(line: 3691, column: 3, scope: !10415)
!10426 = distinct !{!10426, !10416, !10427}
!10427 = !DILocation(line: 3693, column: 5, scope: !10412)
!10428 = !DILocation(line: 3694, column: 7, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10395, file: !3, line: 3694, column: 7)
!10430 = !DILocation(line: 3694, column: 9, scope: !10429)
!10431 = !DILocation(line: 3694, column: 7, scope: !10395)
!10432 = !DILocation(line: 3695, column: 70, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10429, file: !3, line: 3694, column: 15)
!10434 = !DILocation(line: 3695, column: 75, scope: !10433)
!10435 = !DILocation(line: 3695, column: 4, scope: !10433)
!10436 = !DILocation(line: 3696, column: 3, scope: !10433)
!10437 = !DILocation(line: 3697, column: 23, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10429, file: !3, line: 3696, column: 10)
!10439 = !DILocation(line: 3697, column: 28, scope: !10438)
!10440 = !DILocation(line: 3697, column: 33, scope: !10438)
!10441 = !DILocation(line: 3697, column: 56, scope: !10438)
!10442 = !DILocation(line: 3697, column: 43, scope: !10438)
!10443 = !DILocation(line: 3697, column: 4, scope: !10438)
!10444 = !DILocation(line: 3700, column: 8, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10438, file: !3, line: 3700, column: 8)
!10446 = !DILocation(line: 3700, column: 14, scope: !10445)
!10447 = !DILocation(line: 3700, column: 23, scope: !10445)
!10448 = !DILocation(line: 3700, column: 8, scope: !10438)
!10449 = !DILocation(line: 3701, column: 19, scope: !10445)
!10450 = !DILocation(line: 3701, column: 5, scope: !10445)
!10451 = !DILocation(line: 3702, column: 18, scope: !10438)
!10452 = !DILocation(line: 3702, column: 4, scope: !10438)
!10453 = !DILocation(line: 3703, column: 7, scope: !10438)
!10454 = !DILocation(line: 3705, column: 2, scope: !10395)
!10455 = !DILocation(line: 3705, column: 26, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10390, file: !3, line: 3705, column: 13)
!10457 = !DILocation(line: 3705, column: 13, scope: !10456)
!10458 = !DILocation(line: 3705, column: 36, scope: !10456)
!10459 = !DILocation(line: 3705, column: 13, scope: !10390)
!10460 = !DILocation(line: 3707, column: 3, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10456, file: !3, line: 3705, column: 42)
!10462 = !DILocation(line: 3707, column: 9, scope: !10461)
!10463 = !DILocation(line: 3707, column: 19, scope: !10461)
!10464 = !DILocation(line: 3708, column: 17, scope: !10461)
!10465 = !DILocation(line: 3708, column: 3, scope: !10461)
!10466 = !DILocation(line: 3709, column: 22, scope: !10461)
!10467 = !DILocation(line: 3709, column: 27, scope: !10461)
!10468 = !DILocation(line: 3709, column: 32, scope: !10461)
!10469 = !DILocation(line: 3709, column: 3, scope: !10461)
!10470 = !DILocation(line: 3710, column: 17, scope: !10461)
!10471 = !DILocation(line: 3710, column: 3, scope: !10461)
!10472 = !DILocation(line: 3711, column: 6, scope: !10461)
!10473 = !DILocation(line: 3712, column: 2, scope: !10461)
!10474 = !DILocation(line: 3715, column: 3, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10456, file: !3, line: 3712, column: 9)
!10476 = !DILocation(line: 3715, column: 9, scope: !10475)
!10477 = !DILocation(line: 3715, column: 19, scope: !10475)
!10478 = !DILocation(line: 3716, column: 29, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10475, file: !3, line: 3716, column: 7)
!10480 = !DILocation(line: 3716, column: 7, scope: !10479)
!10481 = !DILocation(line: 3716, column: 35, scope: !10479)
!10482 = !DILocation(line: 3716, column: 7, scope: !10475)
!10483 = !DILocation(line: 3717, column: 18, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10479, file: !3, line: 3716, column: 41)
!10485 = !DILocation(line: 3717, column: 49, scope: !10484)
!10486 = !DILocation(line: 3717, column: 54, scope: !10484)
!10487 = !DILocation(line: 3717, column: 4, scope: !10484)
!10488 = !DILocation(line: 3721, column: 8, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 3721, column: 8)
!10490 = !DILocation(line: 3721, column: 14, scope: !10489)
!10491 = !DILocation(line: 3721, column: 23, scope: !10489)
!10492 = !DILocation(line: 3721, column: 8, scope: !10484)
!10493 = !DILocation(line: 3722, column: 19, scope: !10489)
!10494 = !DILocation(line: 3722, column: 5, scope: !10489)
!10495 = !DILocation(line: 3723, column: 18, scope: !10484)
!10496 = !DILocation(line: 3723, column: 4, scope: !10484)
!10497 = !DILocation(line: 3724, column: 7, scope: !10484)
!10498 = !DILocation(line: 3725, column: 3, scope: !10484)
!10499 = !DILocation(line: 3728, column: 6, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 3728, column: 6)
!10501 = !DILocation(line: 3728, column: 6, scope: !8864)
!10502 = !DILocation(line: 3729, column: 7, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10504, file: !3, line: 3729, column: 7)
!10504 = distinct !DILexicalBlock(scope: !10500, file: !3, line: 3728, column: 10)
!10505 = !DILocation(line: 3729, column: 12, scope: !10503)
!10506 = !DILocation(line: 3729, column: 24, scope: !10503)
!10507 = !DILocation(line: 3729, column: 7, scope: !10504)
!10508 = !DILocation(line: 3733, column: 78, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 3729, column: 33)
!10510 = !DILocation(line: 3733, column: 83, scope: !10509)
!10511 = !DILocation(line: 3733, column: 4, scope: !10509)
!10512 = !DILocation(line: 3734, column: 11, scope: !10509)
!10513 = !DILocation(line: 3734, column: 16, scope: !10509)
!10514 = !DILocation(line: 3734, column: 4, scope: !10509)
!10515 = !DILocation(line: 3735, column: 3, scope: !10509)
!10516 = !DILocation(line: 3736, column: 2, scope: !10504)
!10517 = !DILocation(line: 3738, column: 9, scope: !8864)
!10518 = !DILocation(line: 3738, column: 2, scope: !8864)
!10519 = distinct !DISubprogram(name: "atmel_proc_show", scope: !3, file: !3, line: 1402, type: !2022, scopeLine: 1403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!10520 = !DILocalVariable(name: "m", arg: 1, scope: !10519, file: !3, line: 1402, type: !1970)
!10521 = !DILocation(line: 1402, column: 45, scope: !10519)
!10522 = !DILocalVariable(name: "v", arg: 2, scope: !10519, file: !3, line: 1402, type: !622)
!10523 = !DILocation(line: 1402, column: 54, scope: !10519)
!10524 = !DILocalVariable(name: "priv", scope: !10519, file: !3, line: 1404, type: !8587)
!10525 = !DILocation(line: 1404, column: 24, scope: !10519)
!10526 = !DILocation(line: 1404, column: 31, scope: !10519)
!10527 = !DILocation(line: 1404, column: 34, scope: !10519)
!10528 = !DILocalVariable(name: "i", scope: !10519, file: !3, line: 1405, type: !7)
!10529 = !DILocation(line: 1405, column: 6, scope: !10519)
!10530 = !DILocalVariable(name: "s", scope: !10519, file: !3, line: 1406, type: !676)
!10531 = !DILocation(line: 1406, column: 8, scope: !10519)
!10532 = !DILocalVariable(name: "r", scope: !10519, file: !3, line: 1406, type: !676)
!10533 = !DILocation(line: 1406, column: 12, scope: !10519)
!10534 = !DILocalVariable(name: "c", scope: !10519, file: !3, line: 1406, type: !676)
!10535 = !DILocation(line: 1406, column: 16, scope: !10519)
!10536 = !DILocation(line: 1408, column: 13, scope: !10519)
!10537 = !DILocation(line: 1408, column: 2, scope: !10519)
!10538 = !DILocation(line: 1410, column: 6, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10519, file: !3, line: 1410, column: 6)
!10540 = !DILocation(line: 1410, column: 12, scope: !10539)
!10541 = !DILocation(line: 1410, column: 26, scope: !10539)
!10542 = !DILocation(line: 1410, column: 6, scope: !10519)
!10543 = !DILocation(line: 1411, column: 14, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10539, file: !3, line: 1410, column: 49)
!10545 = !DILocation(line: 1414, column: 7, scope: !10544)
!10546 = !DILocation(line: 1414, column: 13, scope: !10544)
!10547 = !DILocation(line: 1414, column: 23, scope: !10544)
!10548 = !DILocation(line: 1415, column: 7, scope: !10544)
!10549 = !DILocation(line: 1415, column: 13, scope: !10544)
!10550 = !DILocation(line: 1415, column: 23, scope: !10544)
!10551 = !DILocation(line: 1416, column: 7, scope: !10544)
!10552 = !DILocation(line: 1416, column: 13, scope: !10544)
!10553 = !DILocation(line: 1416, column: 23, scope: !10544)
!10554 = !DILocation(line: 1411, column: 3, scope: !10544)
!10555 = !DILocation(line: 1418, column: 7, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 1418, column: 7)
!10557 = !DILocation(line: 1418, column: 13, scope: !10556)
!10558 = !DILocation(line: 1418, column: 23, scope: !10556)
!10559 = !DILocation(line: 1418, column: 7, scope: !10544)
!10560 = !DILocation(line: 1419, column: 13, scope: !10556)
!10561 = !DILocation(line: 1419, column: 4, scope: !10556)
!10562 = !DILocation(line: 1420, column: 12, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10556, file: !3, line: 1420, column: 12)
!10564 = !DILocation(line: 1420, column: 18, scope: !10563)
!10565 = !DILocation(line: 1420, column: 12, scope: !10556)
!10566 = !DILocation(line: 1421, column: 15, scope: !10563)
!10567 = !DILocation(line: 1421, column: 41, scope: !10563)
!10568 = !DILocation(line: 1421, column: 47, scope: !10563)
!10569 = !DILocation(line: 1421, column: 4, scope: !10563)
!10570 = !DILocation(line: 1423, column: 15, scope: !10563)
!10571 = !DILocation(line: 1423, column: 44, scope: !10563)
!10572 = !DILocation(line: 1423, column: 50, scope: !10563)
!10573 = !DILocation(line: 1423, column: 4, scope: !10563)
!10574 = !DILocation(line: 1425, column: 11, scope: !10544)
!10575 = !DILocation(line: 1425, column: 17, scope: !10544)
!10576 = !DILocation(line: 1425, column: 3, scope: !10544)
!10577 = !DILocation(line: 1427, column: 6, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 1425, column: 28)
!10579 = !DILocation(line: 1428, column: 4, scope: !10578)
!10580 = !DILocation(line: 1430, column: 6, scope: !10578)
!10581 = !DILocation(line: 1431, column: 4, scope: !10578)
!10582 = !DILocation(line: 1433, column: 6, scope: !10578)
!10583 = !DILocation(line: 1434, column: 4, scope: !10578)
!10584 = !DILocation(line: 1436, column: 6, scope: !10578)
!10585 = !DILocation(line: 1437, column: 3, scope: !10578)
!10586 = !DILocation(line: 1439, column: 5, scope: !10544)
!10587 = !DILocation(line: 1440, column: 10, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 1440, column: 3)
!10589 = !DILocation(line: 1440, column: 8, scope: !10588)
!10590 = !DILocation(line: 1440, column: 15, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 1440, column: 3)
!10592 = !DILocation(line: 1440, column: 17, scope: !10591)
!10593 = !DILocation(line: 1440, column: 3, scope: !10588)
!10594 = !DILocation(line: 1441, column: 8, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10591, file: !3, line: 1441, column: 8)
!10596 = !DILocation(line: 1441, column: 14, scope: !10595)
!10597 = !DILocation(line: 1441, column: 42, scope: !10595)
!10598 = !DILocation(line: 1441, column: 28, scope: !10595)
!10599 = !DILocation(line: 1441, column: 45, scope: !10595)
!10600 = !DILocation(line: 1441, column: 25, scope: !10595)
!10601 = !DILocation(line: 1441, column: 8, scope: !10591)
!10602 = !DILocation(line: 1442, column: 23, scope: !10595)
!10603 = !DILocation(line: 1442, column: 9, scope: !10595)
!10604 = !DILocation(line: 1442, column: 26, scope: !10595)
!10605 = !DILocation(line: 1442, column: 7, scope: !10595)
!10606 = !DILocation(line: 1442, column: 5, scope: !10595)
!10607 = !DILocation(line: 1440, column: 47, scope: !10591)
!10608 = !DILocation(line: 1440, column: 3, scope: !10591)
!10609 = distinct !{!10609, !10593, !10610}
!10610 = !DILocation(line: 1442, column: 26, scope: !10588)
!10611 = !DILocation(line: 1444, column: 14, scope: !10544)
!10612 = !DILocation(line: 1444, column: 43, scope: !10544)
!10613 = !DILocation(line: 1444, column: 3, scope: !10544)
!10614 = !DILocation(line: 1445, column: 14, scope: !10544)
!10615 = !DILocation(line: 1445, column: 45, scope: !10544)
!10616 = !DILocation(line: 1445, column: 3, scope: !10544)
!10617 = !DILocation(line: 1446, column: 14, scope: !10544)
!10618 = !DILocation(line: 1447, column: 5, scope: !10544)
!10619 = !DILocation(line: 1447, column: 11, scope: !10544)
!10620 = !DILocation(line: 1446, column: 3, scope: !10544)
!10621 = !DILocation(line: 1448, column: 14, scope: !10544)
!10622 = !DILocation(line: 1449, column: 5, scope: !10544)
!10623 = !DILocation(line: 1449, column: 11, scope: !10544)
!10624 = !DILocation(line: 1448, column: 3, scope: !10544)
!10625 = !DILocation(line: 1450, column: 2, scope: !10544)
!10626 = !DILocation(line: 1452, column: 10, scope: !10519)
!10627 = !DILocation(line: 1452, column: 16, scope: !10519)
!10628 = !DILocation(line: 1452, column: 2, scope: !10519)
!10629 = !DILocation(line: 1454, column: 5, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10519, file: !3, line: 1452, column: 31)
!10631 = !DILocation(line: 1455, column: 3, scope: !10630)
!10632 = !DILocation(line: 1457, column: 5, scope: !10630)
!10633 = !DILocation(line: 1458, column: 3, scope: !10630)
!10634 = !DILocation(line: 1460, column: 5, scope: !10630)
!10635 = !DILocation(line: 1461, column: 3, scope: !10630)
!10636 = !DILocation(line: 1463, column: 5, scope: !10630)
!10637 = !DILocation(line: 1464, column: 3, scope: !10630)
!10638 = !DILocation(line: 1466, column: 5, scope: !10630)
!10639 = !DILocation(line: 1467, column: 3, scope: !10630)
!10640 = !DILocation(line: 1469, column: 5, scope: !10630)
!10641 = !DILocation(line: 1470, column: 3, scope: !10630)
!10642 = !DILocation(line: 1472, column: 5, scope: !10630)
!10643 = !DILocation(line: 1473, column: 3, scope: !10630)
!10644 = !DILocation(line: 1475, column: 5, scope: !10630)
!10645 = !DILocation(line: 1476, column: 3, scope: !10630)
!10646 = !DILocation(line: 1478, column: 5, scope: !10630)
!10647 = !DILocation(line: 1479, column: 2, scope: !10630)
!10648 = !DILocation(line: 1481, column: 13, scope: !10519)
!10649 = !DILocation(line: 1481, column: 42, scope: !10519)
!10650 = !DILocation(line: 1481, column: 2, scope: !10519)
!10651 = !DILocation(line: 1482, column: 2, scope: !10519)
!10652 = distinct !DISubprogram(name: "stop_atmel_card", scope: !3, file: !3, line: 1625, type: !747, scopeLine: 1626, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!10653 = !DILocalVariable(name: "dev", arg: 1, scope: !10652, file: !3, line: 1625, type: !495)
!10654 = !DILocation(line: 1625, column: 41, scope: !10652)
!10655 = !DILocalVariable(name: "priv", scope: !10652, file: !3, line: 1627, type: !8587)
!10656 = !DILocation(line: 1627, column: 24, scope: !10652)
!10657 = !DILocation(line: 1627, column: 43, scope: !10652)
!10658 = !DILocation(line: 1627, column: 31, scope: !10652)
!10659 = !DILocation(line: 1630, column: 6, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10652, file: !3, line: 1630, column: 6)
!10661 = !DILocation(line: 1630, column: 12, scope: !10660)
!10662 = !DILocation(line: 1630, column: 21, scope: !10660)
!10663 = !DILocation(line: 1630, column: 6, scope: !10652)
!10664 = !DILocation(line: 1631, column: 17, scope: !10660)
!10665 = !DILocation(line: 1631, column: 3, scope: !10660)
!10666 = !DILocation(line: 1632, column: 16, scope: !10652)
!10667 = !DILocation(line: 1632, column: 2, scope: !10652)
!10668 = !DILocation(line: 1634, column: 2, scope: !10652)
!10669 = !DILocation(line: 1635, column: 20, scope: !10652)
!10670 = !DILocation(line: 1635, column: 2, scope: !10652)
!10671 = !DILocation(line: 1636, column: 2, scope: !10652)
!10672 = !DILocation(line: 1637, column: 11, scope: !10652)
!10673 = !DILocation(line: 1637, column: 16, scope: !10652)
!10674 = !DILocation(line: 1637, column: 21, scope: !10652)
!10675 = !DILocation(line: 1637, column: 2, scope: !10652)
!10676 = !DILocation(line: 1638, column: 8, scope: !10652)
!10677 = !DILocation(line: 1638, column: 14, scope: !10652)
!10678 = !DILocation(line: 1638, column: 2, scope: !10652)
!10679 = !DILocation(line: 1639, column: 2, scope: !10652)
!10680 = !DILocation(line: 1640, column: 14, scope: !10652)
!10681 = !DILocation(line: 1640, column: 2, scope: !10652)
!10682 = !DILocation(line: 1641, column: 1, scope: !10652)
!10683 = distinct !DISubprogram(name: "atmel_write16", scope: !3, file: !3, line: 651, type: !10684, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!10684 = !DISubroutineType(types: !10685)
!10685 = !{null, !495, !916, !916}
!10686 = !DILocalVariable(name: "dev", arg: 1, scope: !10683, file: !3, line: 651, type: !495)
!10687 = !DILocation(line: 651, column: 53, scope: !10683)
!10688 = !DILocalVariable(name: "offset", arg: 2, scope: !10683, file: !3, line: 651, type: !916)
!10689 = !DILocation(line: 651, column: 62, scope: !10683)
!10690 = !DILocalVariable(name: "data", arg: 3, scope: !10683, file: !3, line: 651, type: !916)
!10691 = !DILocation(line: 651, column: 74, scope: !10683)
!10692 = !DILocation(line: 653, column: 7, scope: !10683)
!10693 = !DILocation(line: 653, column: 13, scope: !10683)
!10694 = !DILocation(line: 653, column: 18, scope: !10683)
!10695 = !DILocation(line: 653, column: 30, scope: !10683)
!10696 = !DILocation(line: 653, column: 28, scope: !10683)
!10697 = !DILocation(line: 653, column: 2, scope: !10683)
!10698 = !DILocation(line: 654, column: 1, scope: !10683)
!10699 = distinct !DISubprogram(name: "atmel_close", scope: !3, file: !3, line: 1361, type: !743, scopeLine: 1362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!10700 = !DILocalVariable(name: "dev", arg: 1, scope: !10699, file: !3, line: 1361, type: !495)
!10701 = !DILocation(line: 1361, column: 43, scope: !10699)
!10702 = !DILocalVariable(name: "priv", scope: !10699, file: !3, line: 1363, type: !8587)
!10703 = !DILocation(line: 1363, column: 24, scope: !10699)
!10704 = !DILocation(line: 1363, column: 43, scope: !10699)
!10705 = !DILocation(line: 1363, column: 31, scope: !10699)
!10706 = !DILocation(line: 1366, column: 6, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10699, file: !3, line: 1366, column: 6)
!10708 = !DILocation(line: 1366, column: 12, scope: !10707)
!10709 = !DILocation(line: 1366, column: 26, scope: !10707)
!10710 = !DILocation(line: 1366, column: 6, scope: !10699)
!10711 = !DILocalVariable(name: "wrqu", scope: !10712, file: !3, line: 1367, type: !614)
!10712 = distinct !DILexicalBlock(scope: !10707, file: !3, line: 1366, column: 50)
!10713 = !DILocation(line: 1367, column: 20, scope: !10712)
!10714 = !DILocation(line: 1369, column: 8, scope: !10712)
!10715 = !DILocation(line: 1369, column: 13, scope: !10712)
!10716 = !DILocation(line: 1369, column: 20, scope: !10712)
!10717 = !DILocation(line: 1370, column: 8, scope: !10712)
!10718 = !DILocation(line: 1370, column: 13, scope: !10712)
!10719 = !DILocation(line: 1370, column: 19, scope: !10712)
!10720 = !DILocation(line: 1371, column: 8, scope: !10712)
!10721 = !DILocation(line: 1371, column: 16, scope: !10712)
!10722 = !DILocation(line: 1371, column: 26, scope: !10712)
!10723 = !DILocation(line: 1372, column: 22, scope: !10712)
!10724 = !DILocation(line: 1372, column: 30, scope: !10712)
!10725 = !DILocation(line: 1372, column: 17, scope: !10712)
!10726 = !DILocation(line: 1372, column: 3, scope: !10712)
!10727 = !DILocation(line: 1373, column: 23, scope: !10712)
!10728 = !DILocation(line: 1373, column: 29, scope: !10712)
!10729 = !DILocation(line: 1373, column: 3, scope: !10712)
!10730 = !DILocation(line: 1374, column: 2, scope: !10712)
!10731 = !DILocation(line: 1376, column: 20, scope: !10699)
!10732 = !DILocation(line: 1376, column: 2, scope: !10699)
!10733 = !DILocation(line: 1378, column: 6, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10699, file: !3, line: 1378, column: 6)
!10735 = !DILocation(line: 1378, column: 12, scope: !10734)
!10736 = !DILocation(line: 1378, column: 21, scope: !10734)
!10737 = !DILocation(line: 1378, column: 6, scope: !10699)
!10738 = !DILocation(line: 1379, column: 17, scope: !10734)
!10739 = !DILocation(line: 1379, column: 3, scope: !10734)
!10740 = !DILocation(line: 1380, column: 16, scope: !10699)
!10741 = !DILocation(line: 1380, column: 2, scope: !10699)
!10742 = !DILocation(line: 1381, column: 2, scope: !10699)
!10743 = distinct !DISubprogram(name: "start_tx", scope: !3, file: !3, line: 799, type: !753, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!10744 = !DILocation(line: 407, column: 64, scope: !9987, inlinedAt: !10745)
!10745 = distinct !DILocation(line: 868, column: 2, scope: !10743)
!10746 = !DILocation(line: 407, column: 84, scope: !9987, inlinedAt: !10745)
!10747 = !DILocation(line: 407, column: 64, scope: !9987, inlinedAt: !10748)
!10748 = distinct !DILocation(line: 832, column: 3, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10750, file: !3, line: 830, column: 46)
!10750 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 830, column: 6)
!10751 = !DILocation(line: 407, column: 84, scope: !9987, inlinedAt: !10748)
!10752 = !DILocation(line: 327, column: 67, scope: !9669, inlinedAt: !10753)
!10753 = distinct !DILocation(line: 822, column: 2, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10755, file: !3, line: 822, column: 2)
!10755 = distinct !DILexicalBlock(scope: !10756, file: !3, line: 822, column: 2)
!10756 = distinct !DILexicalBlock(scope: !10757, file: !3, line: 822, column: 2)
!10757 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 822, column: 2)
!10758 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 822, column: 2)
!10759 = !DILocalVariable(name: "skb", arg: 1, scope: !10743, file: !3, line: 799, type: !756)
!10760 = !DILocation(line: 799, column: 45, scope: !10743)
!10761 = !DILocalVariable(name: "dev", arg: 2, scope: !10743, file: !3, line: 799, type: !495)
!10762 = !DILocation(line: 799, column: 69, scope: !10743)
!10763 = !DILocalVariable(name: "priv", scope: !10743, file: !3, line: 801, type: !8587)
!10764 = !DILocation(line: 801, column: 24, scope: !10743)
!10765 = !DILocation(line: 801, column: 43, scope: !10743)
!10766 = !DILocation(line: 801, column: 31, scope: !10743)
!10767 = !DILocalVariable(name: "header", scope: !10743, file: !3, line: 802, type: !8589)
!10768 = !DILocation(line: 802, column: 23, scope: !10743)
!10769 = !DILocalVariable(name: "flags", scope: !10743, file: !3, line: 803, type: !517)
!10770 = !DILocation(line: 803, column: 16, scope: !10743)
!10771 = !DILocalVariable(name: "buff", scope: !10743, file: !3, line: 804, type: !916)
!10772 = !DILocation(line: 804, column: 6, scope: !10743)
!10773 = !DILocalVariable(name: "frame_ctl", scope: !10743, file: !3, line: 804, type: !916)
!10774 = !DILocation(line: 804, column: 12, scope: !10743)
!10775 = !DILocalVariable(name: "len", scope: !10743, file: !3, line: 804, type: !916)
!10776 = !DILocation(line: 804, column: 23, scope: !10743)
!10777 = !DILocation(line: 804, column: 41, scope: !10743)
!10778 = !DILocation(line: 804, column: 46, scope: !10743)
!10779 = !DILocation(line: 804, column: 39, scope: !10743)
!10780 = !DILocation(line: 804, column: 29, scope: !10743)
!10781 = !DILocation(line: 804, column: 53, scope: !10743)
!10782 = !DILocation(line: 804, column: 58, scope: !10743)
!10783 = !DILocation(line: 806, column: 6, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 806, column: 6)
!10785 = !DILocation(line: 806, column: 12, scope: !10784)
!10786 = !DILocation(line: 806, column: 17, scope: !10784)
!10787 = !DILocation(line: 806, column: 20, scope: !10784)
!10788 = !DILocation(line: 806, column: 26, scope: !10784)
!10789 = !DILocation(line: 806, column: 43, scope: !10784)
!10790 = !DILocation(line: 807, column: 9, scope: !10784)
!10791 = !DILocation(line: 807, column: 15, scope: !10784)
!10792 = !DILocation(line: 807, column: 33, scope: !10784)
!10793 = !DILocation(line: 807, column: 39, scope: !10784)
!10794 = !DILocation(line: 807, column: 7, scope: !10784)
!10795 = !DILocation(line: 806, column: 6, scope: !10743)
!10796 = !DILocation(line: 808, column: 3, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10784, file: !3, line: 807, column: 46)
!10798 = !DILocation(line: 808, column: 8, scope: !10797)
!10799 = !DILocation(line: 808, column: 14, scope: !10797)
!10800 = !DILocation(line: 808, column: 23, scope: !10797)
!10801 = !DILocation(line: 809, column: 3, scope: !10797)
!10802 = !DILocation(line: 810, column: 3, scope: !10797)
!10803 = !DILocation(line: 813, column: 6, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 813, column: 6)
!10805 = !DILocation(line: 813, column: 12, scope: !10804)
!10806 = !DILocation(line: 813, column: 26, scope: !10804)
!10807 = !DILocation(line: 813, column: 6, scope: !10743)
!10808 = !DILocation(line: 814, column: 3, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10804, file: !3, line: 813, column: 50)
!10810 = !DILocation(line: 814, column: 8, scope: !10809)
!10811 = !DILocation(line: 814, column: 14, scope: !10809)
!10812 = !DILocation(line: 814, column: 23, scope: !10809)
!10813 = !DILocation(line: 815, column: 3, scope: !10809)
!10814 = !DILocation(line: 816, column: 3, scope: !10809)
!10815 = !DILocation(line: 820, column: 16, scope: !10743)
!10816 = !DILocation(line: 820, column: 22, scope: !10743)
!10817 = !DILocation(line: 820, column: 2, scope: !10743)
!10818 = !DILocation(line: 822, column: 2, scope: !10743)
!10819 = !DILocation(line: 822, column: 2, scope: !10758)
!10820 = !DILocalVariable(name: "__dummy", scope: !10821, file: !3, line: 822, type: !517)
!10821 = distinct !DILexicalBlock(scope: !10757, file: !3, line: 822, column: 2)
!10822 = !DILocation(line: 822, column: 2, scope: !10821)
!10823 = !DILocalVariable(name: "__dummy2", scope: !10821, file: !3, line: 822, type: !517)
!10824 = !DILocation(line: 822, column: 2, scope: !10757)
!10825 = !DILocation(line: 822, column: 2, scope: !10756)
!10826 = !DILocation(line: 822, column: 2, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10756, file: !3, line: 822, column: 2)
!10828 = !DILocalVariable(name: "__dummy", scope: !10829, file: !3, line: 822, type: !517)
!10829 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 822, column: 2)
!10830 = distinct !DILexicalBlock(scope: !10827, file: !3, line: 822, column: 2)
!10831 = !DILocation(line: 822, column: 2, scope: !10829)
!10832 = !DILocalVariable(name: "__dummy2", scope: !10829, file: !3, line: 822, type: !517)
!10833 = !DILocation(line: 822, column: 2, scope: !10830)
!10834 = !DILocation(line: 822, column: 2, scope: !10755)
!10835 = !{i32 -2139093046}
!10836 = !DILocation(line: 822, column: 2, scope: !10754)
!10837 = !DILocation(line: 329, column: 10, scope: !9669, inlinedAt: !10753)
!10838 = !DILocation(line: 329, column: 16, scope: !9669, inlinedAt: !10753)
!10839 = !DILocation(line: 830, column: 28, scope: !10750)
!10840 = !DILocation(line: 830, column: 34, scope: !10750)
!10841 = !DILocation(line: 830, column: 38, scope: !10750)
!10842 = !DILocation(line: 830, column: 15, scope: !10750)
!10843 = !DILocation(line: 830, column: 13, scope: !10750)
!10844 = !DILocation(line: 830, column: 6, scope: !10743)
!10845 = !DILocation(line: 831, column: 3, scope: !10749)
!10846 = !DILocation(line: 831, column: 8, scope: !10749)
!10847 = !DILocation(line: 831, column: 14, scope: !10749)
!10848 = !DILocation(line: 831, column: 24, scope: !10749)
!10849 = !DILocation(line: 832, column: 27, scope: !10749)
!10850 = !DILocation(line: 832, column: 33, scope: !10749)
!10851 = !DILocation(line: 832, column: 42, scope: !10749)
!10852 = !DILocation(line: 409, column: 2, scope: !10158, inlinedAt: !10748)
!10853 = !DILocation(line: 409, column: 2, scope: !10163, inlinedAt: !10748)
!10854 = !DILocation(line: 409, column: 2, scope: !10164, inlinedAt: !10748)
!10855 = !DILocation(line: 409, column: 2, scope: !10171, inlinedAt: !10748)
!10856 = !DILocation(line: 409, column: 2, scope: !10174, inlinedAt: !10748)
!10857 = !DILocation(line: 833, column: 19, scope: !10749)
!10858 = !DILocation(line: 833, column: 25, scope: !10749)
!10859 = !DILocation(line: 833, column: 3, scope: !10749)
!10860 = !DILocation(line: 834, column: 20, scope: !10749)
!10861 = !DILocation(line: 834, column: 3, scope: !10749)
!10862 = !DILocation(line: 835, column: 3, scope: !10749)
!10863 = !DILocation(line: 838, column: 12, scope: !10743)
!10864 = !DILocation(line: 839, column: 9, scope: !10743)
!10865 = !DILocation(line: 839, column: 21, scope: !10743)
!10866 = !DILocation(line: 840, column: 9, scope: !10743)
!10867 = !DILocation(line: 840, column: 18, scope: !10743)
!10868 = !DILocation(line: 841, column: 6, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 841, column: 6)
!10870 = !DILocation(line: 841, column: 12, scope: !10869)
!10871 = !DILocation(line: 841, column: 6, scope: !10743)
!10872 = !DILocation(line: 842, column: 13, scope: !10869)
!10873 = !DILocation(line: 842, column: 3, scope: !10869)
!10874 = !DILocation(line: 843, column: 6, scope: !10875)
!10875 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 843, column: 6)
!10876 = !DILocation(line: 843, column: 12, scope: !10875)
!10877 = !DILocation(line: 843, column: 27, scope: !10875)
!10878 = !DILocation(line: 843, column: 6, scope: !10743)
!10879 = !DILocation(line: 844, column: 29, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10875, file: !3, line: 843, column: 45)
!10881 = !DILocation(line: 844, column: 42, scope: !10880)
!10882 = !DILocation(line: 844, column: 34, scope: !10880)
!10883 = !DILocation(line: 844, column: 3, scope: !10880)
!10884 = !DILocation(line: 845, column: 18, scope: !10880)
!10885 = !DILocation(line: 845, column: 3, scope: !10880)
!10886 = !DILocation(line: 845, column: 25, scope: !10880)
!10887 = !DILocation(line: 845, column: 30, scope: !10880)
!10888 = !DILocation(line: 846, column: 18, scope: !10880)
!10889 = !DILocation(line: 846, column: 3, scope: !10880)
!10890 = !DILocation(line: 846, column: 25, scope: !10880)
!10891 = !DILocation(line: 846, column: 31, scope: !10880)
!10892 = !DILocation(line: 847, column: 2, scope: !10880)
!10893 = !DILocation(line: 848, column: 13, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10875, file: !3, line: 847, column: 9)
!10895 = !DILocation(line: 849, column: 18, scope: !10894)
!10896 = !DILocation(line: 849, column: 3, scope: !10894)
!10897 = !DILocation(line: 849, column: 25, scope: !10894)
!10898 = !DILocation(line: 849, column: 31, scope: !10894)
!10899 = !DILocation(line: 850, column: 18, scope: !10894)
!10900 = !DILocation(line: 850, column: 3, scope: !10894)
!10901 = !DILocation(line: 850, column: 25, scope: !10894)
!10902 = !DILocation(line: 850, column: 30, scope: !10894)
!10903 = !DILocation(line: 851, column: 29, scope: !10894)
!10904 = !DILocation(line: 851, column: 42, scope: !10894)
!10905 = !DILocation(line: 851, column: 34, scope: !10894)
!10906 = !DILocation(line: 851, column: 3, scope: !10894)
!10907 = !DILocation(line: 854, column: 6, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 854, column: 6)
!10909 = !DILocation(line: 854, column: 12, scope: !10908)
!10910 = !DILocation(line: 854, column: 6, scope: !10743)
!10911 = !DILocation(line: 855, column: 18, scope: !10908)
!10912 = !DILocation(line: 855, column: 3, scope: !10908)
!10913 = !DILocation(line: 857, column: 25, scope: !10743)
!10914 = !DILocation(line: 857, column: 9, scope: !10743)
!10915 = !DILocation(line: 857, column: 23, scope: !10743)
!10916 = !DILocation(line: 859, column: 21, scope: !10743)
!10917 = !DILocation(line: 859, column: 26, scope: !10743)
!10918 = !DILocation(line: 859, column: 32, scope: !10743)
!10919 = !DILocation(line: 859, column: 2, scope: !10743)
!10920 = !DILocation(line: 861, column: 21, scope: !10743)
!10921 = !DILocation(line: 861, column: 26, scope: !10743)
!10922 = !DILocation(line: 861, column: 31, scope: !10743)
!10923 = !DILocation(line: 861, column: 60, scope: !10743)
!10924 = !DILocation(line: 861, column: 65, scope: !10743)
!10925 = !DILocation(line: 861, column: 70, scope: !10743)
!10926 = !DILocation(line: 861, column: 76, scope: !10743)
!10927 = !DILocation(line: 861, column: 80, scope: !10743)
!10928 = !DILocation(line: 861, column: 2, scope: !10743)
!10929 = !DILocation(line: 862, column: 24, scope: !10743)
!10930 = !DILocation(line: 862, column: 28, scope: !10743)
!10931 = !DILocation(line: 862, column: 33, scope: !10743)
!10932 = !DILocation(line: 862, column: 2, scope: !10743)
!10933 = !DILocation(line: 862, column: 8, scope: !10743)
!10934 = !DILocation(line: 862, column: 21, scope: !10743)
!10935 = !DILocation(line: 865, column: 23, scope: !10743)
!10936 = !DILocation(line: 865, column: 31, scope: !10743)
!10937 = !DILocation(line: 865, column: 36, scope: !10743)
!10938 = !DILocation(line: 865, column: 29, scope: !10743)
!10939 = !DILocation(line: 865, column: 42, scope: !10743)
!10940 = !DILocation(line: 865, column: 50, scope: !10743)
!10941 = !DILocation(line: 865, column: 54, scope: !10743)
!10942 = !DILocation(line: 865, column: 60, scope: !10743)
!10943 = !DILocation(line: 865, column: 2, scope: !10743)
!10944 = !DILocation(line: 866, column: 25, scope: !10743)
!10945 = !DILocation(line: 866, column: 2, scope: !10743)
!10946 = !DILocation(line: 866, column: 7, scope: !10743)
!10947 = !DILocation(line: 866, column: 13, scope: !10743)
!10948 = !DILocation(line: 866, column: 22, scope: !10743)
!10949 = !DILocation(line: 868, column: 26, scope: !10743)
!10950 = !DILocation(line: 868, column: 32, scope: !10743)
!10951 = !DILocation(line: 868, column: 41, scope: !10743)
!10952 = !DILocation(line: 409, column: 2, scope: !10158, inlinedAt: !10745)
!10953 = !DILocation(line: 409, column: 2, scope: !10163, inlinedAt: !10745)
!10954 = !DILocation(line: 409, column: 2, scope: !10164, inlinedAt: !10745)
!10955 = !DILocation(line: 409, column: 2, scope: !10171, inlinedAt: !10745)
!10956 = !DILocation(line: 409, column: 2, scope: !10174, inlinedAt: !10745)
!10957 = !DILocation(line: 869, column: 18, scope: !10743)
!10958 = !DILocation(line: 869, column: 24, scope: !10743)
!10959 = !DILocation(line: 869, column: 2, scope: !10743)
!10960 = !DILocation(line: 870, column: 2, scope: !10743)
!10961 = !DILocation(line: 872, column: 2, scope: !10743)
!10962 = !DILocation(line: 873, column: 1, scope: !10743)
!10963 = distinct !DISubprogram(name: "atmel_set_mac_address", scope: !3, file: !3, line: 1296, type: !924, scopeLine: 1297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!10964 = !DILocalVariable(name: "dev", arg: 1, scope: !10963, file: !3, line: 1296, type: !495)
!10965 = !DILocation(line: 1296, column: 53, scope: !10963)
!10966 = !DILocalVariable(name: "p", arg: 2, scope: !10963, file: !3, line: 1296, type: !622)
!10967 = !DILocation(line: 1296, column: 64, scope: !10963)
!10968 = !DILocalVariable(name: "addr", scope: !10963, file: !3, line: 1298, type: !6862)
!10969 = !DILocation(line: 1298, column: 19, scope: !10963)
!10970 = !DILocation(line: 1298, column: 26, scope: !10963)
!10971 = !DILocation(line: 1300, column: 10, scope: !10963)
!10972 = !DILocation(line: 1300, column: 15, scope: !10963)
!10973 = !DILocation(line: 1300, column: 25, scope: !10963)
!10974 = !DILocation(line: 1300, column: 31, scope: !10963)
!10975 = !DILocation(line: 1300, column: 2, scope: !10963)
!10976 = !DILocation(line: 1300, column: 40, scope: !10963)
!10977 = !DILocation(line: 1300, column: 45, scope: !10963)
!10978 = !DILocation(line: 1301, column: 20, scope: !10963)
!10979 = !DILocation(line: 1301, column: 9, scope: !10963)
!10980 = !DILocation(line: 1301, column: 2, scope: !10963)
!10981 = distinct !DISubprogram(name: "atmel_ioctl", scope: !3, file: !3, line: 2624, type: !929, scopeLine: 2625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!10982 = !DILocalVariable(name: "addr", arg: 1, scope: !10983, file: !10984, line: 138, type: !3590)
!10983 = distinct !DISubprogram(name: "check_copy_size", scope: !10984, file: !10984, line: 138, type: !10985, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!10984 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!10985 = !DISubroutineType(types: !10986)
!10986 = !{!1093, !3590, !1358, !1093}
!10987 = !DILocation(line: 138, column: 29, scope: !10983, inlinedAt: !10988)
!10988 = distinct !DILocation(line: 191, column: 6, scope: !10989, inlinedAt: !10994)
!10989 = distinct !DILexicalBlock(scope: !10991, file: !10990, line: 191, column: 6)
!10990 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!10991 = distinct !DISubprogram(name: "copy_from_user", scope: !10990, file: !10990, line: 189, type: !10992, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!10992 = !DISubroutineType(types: !10993)
!10993 = !{!517, !622, !3590, !517}
!10994 = distinct !DILocation(line: 2664, column: 7, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 2664, column: 7)
!10996 = distinct !DILexicalBlock(scope: !10981, file: !3, line: 2633, column: 15)
!10997 = !DILocalVariable(name: "bytes", arg: 2, scope: !10983, file: !10984, line: 138, type: !1358)
!10998 = !DILocation(line: 138, column: 42, scope: !10983, inlinedAt: !10988)
!10999 = !DILocalVariable(name: "is_source", arg: 3, scope: !10983, file: !10984, line: 138, type: !1093)
!11000 = !DILocation(line: 138, column: 54, scope: !10983, inlinedAt: !10988)
!11001 = !DILocalVariable(name: "sz", scope: !10983, file: !10984, line: 140, type: !7)
!11002 = !DILocation(line: 140, column: 6, scope: !10983, inlinedAt: !10988)
!11003 = !DILocalVariable(name: "__ret_warn_on", scope: !11004, file: !10984, line: 150, type: !7)
!11004 = distinct !DILexicalBlock(scope: !11005, file: !10984, line: 150, column: 6)
!11005 = distinct !DILexicalBlock(scope: !10983, file: !10984, line: 150, column: 6)
!11006 = !DILocation(line: 150, column: 6, scope: !11004, inlinedAt: !10988)
!11007 = !DILocalVariable(name: "to", arg: 1, scope: !10991, file: !10990, line: 189, type: !622)
!11008 = !DILocation(line: 189, column: 22, scope: !10991, inlinedAt: !10994)
!11009 = !DILocalVariable(name: "from", arg: 2, scope: !10991, file: !10990, line: 189, type: !3590)
!11010 = !DILocation(line: 189, column: 45, scope: !10991, inlinedAt: !10994)
!11011 = !DILocalVariable(name: "n", arg: 3, scope: !10991, file: !10990, line: 189, type: !517)
!11012 = !DILocation(line: 189, column: 65, scope: !10991, inlinedAt: !10994)
!11013 = !DILocation(line: 138, column: 29, scope: !10983, inlinedAt: !11014)
!11014 = distinct !DILocation(line: 191, column: 6, scope: !10989, inlinedAt: !11015)
!11015 = distinct !DILocation(line: 2639, column: 7, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 2639, column: 7)
!11017 = !DILocation(line: 138, column: 42, scope: !10983, inlinedAt: !11014)
!11018 = !DILocation(line: 138, column: 54, scope: !10983, inlinedAt: !11014)
!11019 = !DILocation(line: 140, column: 6, scope: !10983, inlinedAt: !11014)
!11020 = !DILocation(line: 150, column: 6, scope: !11004, inlinedAt: !11014)
!11021 = !DILocation(line: 189, column: 22, scope: !10991, inlinedAt: !11015)
!11022 = !DILocation(line: 189, column: 45, scope: !10991, inlinedAt: !11015)
!11023 = !DILocation(line: 189, column: 65, scope: !10991, inlinedAt: !11015)
!11024 = !DILocalVariable(name: "dev", arg: 1, scope: !10981, file: !3, line: 2624, type: !495)
!11025 = !DILocation(line: 2624, column: 43, scope: !10981)
!11026 = !DILocalVariable(name: "rq", arg: 2, scope: !10981, file: !3, line: 2624, type: !931)
!11027 = !DILocation(line: 2624, column: 62, scope: !10981)
!11028 = !DILocalVariable(name: "cmd", arg: 3, scope: !10981, file: !3, line: 2624, type: !7)
!11029 = !DILocation(line: 2624, column: 70, scope: !10981)
!11030 = !DILocalVariable(name: "i", scope: !10981, file: !3, line: 2626, type: !7)
!11031 = !DILocation(line: 2626, column: 6, scope: !10981)
!11032 = !DILocalVariable(name: "rc", scope: !10981, file: !3, line: 2626, type: !7)
!11033 = !DILocation(line: 2626, column: 9, scope: !10981)
!11034 = !DILocalVariable(name: "priv", scope: !10981, file: !3, line: 2627, type: !8587)
!11035 = !DILocation(line: 2627, column: 24, scope: !10981)
!11036 = !DILocation(line: 2627, column: 43, scope: !10981)
!11037 = !DILocation(line: 2627, column: 31, scope: !10981)
!11038 = !DILocalVariable(name: "com", scope: !10981, file: !3, line: 2628, type: !11039)
!11039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "atmel_priv_ioctl", file: !3, line: 2581, size: 384, elements: !11040)
!11040 = !{!11041, !11042, !11043}
!11041 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11039, file: !3, line: 2582, baseType: !4944, size: 256)
!11042 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11039, file: !3, line: 2583, baseType: !899, size: 64, offset: 256)
!11043 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !11039, file: !3, line: 2584, baseType: !611, size: 16, offset: 320)
!11044 = !DILocation(line: 2628, column: 26, scope: !10981)
!11045 = !DILocalVariable(name: "wrq", scope: !10981, file: !3, line: 2629, type: !8574)
!11046 = !DILocation(line: 2629, column: 16, scope: !10981)
!11047 = !DILocation(line: 2629, column: 39, scope: !10981)
!11048 = !DILocation(line: 2629, column: 22, scope: !10981)
!11049 = !DILocalVariable(name: "new_firmware", scope: !10981, file: !3, line: 2630, type: !899)
!11050 = !DILocation(line: 2630, column: 17, scope: !10981)
!11051 = !DILocalVariable(name: "domain", scope: !10981, file: !3, line: 2631, type: !11052)
!11052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 168, elements: !11053)
!11053 = !{!11054}
!11054 = !DISubrange(count: 21)
!11055 = !DILocation(line: 2631, column: 7, scope: !10981)
!11056 = !DILocation(line: 2633, column: 10, scope: !10981)
!11057 = !DILocation(line: 2633, column: 2, scope: !10981)
!11058 = !DILocation(line: 2635, column: 3, scope: !10996)
!11059 = !DILocation(line: 2635, column: 8, scope: !10996)
!11060 = !DILocation(line: 2635, column: 10, scope: !10996)
!11061 = !DILocation(line: 2635, column: 16, scope: !10996)
!11062 = !DILocation(line: 2635, column: 22, scope: !10996)
!11063 = !DILocation(line: 2636, column: 3, scope: !10996)
!11064 = !DILocation(line: 2639, column: 22, scope: !11016)
!11065 = !DILocation(line: 2639, column: 28, scope: !11016)
!11066 = !DILocation(line: 2639, column: 32, scope: !11016)
!11067 = !DILocation(line: 191, column: 6, scope: !10989, inlinedAt: !11015)
!11068 = !DILocation(line: 141, column: 6, scope: !11069, inlinedAt: !11014)
!11069 = distinct !DILexicalBlock(scope: !10983, file: !10984, line: 141, column: 6)
!11070 = !DILocation(line: 0, scope: !11069, inlinedAt: !11014)
!11071 = !DILocation(line: 141, column: 6, scope: !10983, inlinedAt: !11014)
!11072 = !DILocation(line: 142, column: 29, scope: !11073, inlinedAt: !11014)
!11073 = distinct !DILexicalBlock(scope: !11074, file: !10984, line: 142, column: 7)
!11074 = distinct !DILexicalBlock(scope: !11069, file: !10984, line: 141, column: 39)
!11075 = !DILocation(line: 142, column: 8, scope: !11073, inlinedAt: !11014)
!11076 = !DILocation(line: 142, column: 7, scope: !11074, inlinedAt: !11014)
!11077 = !DILocation(line: 143, column: 18, scope: !11073, inlinedAt: !11014)
!11078 = !DILocation(line: 143, column: 22, scope: !11073, inlinedAt: !11014)
!11079 = !DILocation(line: 143, column: 4, scope: !11073, inlinedAt: !11014)
!11080 = !DILocation(line: 144, column: 12, scope: !11081, inlinedAt: !11014)
!11081 = distinct !DILexicalBlock(scope: !11073, file: !10984, line: 144, column: 12)
!11082 = !DILocation(line: 144, column: 12, scope: !11073, inlinedAt: !11014)
!11083 = !DILocation(line: 145, column: 4, scope: !11081, inlinedAt: !11014)
!11084 = !DILocation(line: 147, column: 4, scope: !11081, inlinedAt: !11014)
!11085 = !DILocation(line: 148, column: 3, scope: !11074, inlinedAt: !11014)
!11086 = !DILocation(line: 150, column: 6, scope: !11087, inlinedAt: !11014)
!11087 = distinct !DILexicalBlock(scope: !11004, file: !10984, line: 150, column: 6)
!11088 = !DILocation(line: 150, column: 6, scope: !11089, inlinedAt: !11014)
!11089 = distinct !DILexicalBlock(scope: !11090, file: !10984, line: 150, column: 6)
!11090 = distinct !DILexicalBlock(scope: !11087, file: !10984, line: 150, column: 6)
!11091 = !{i32 -2145553971, i32 -2145553942, i32 -2145553896, i32 -2145553838, i32 -2145553784, i32 -2145553730, i32 -2145553675, i32 -2145553644}
!11092 = !DILocation(line: 150, column: 6, scope: !11093, inlinedAt: !11014)
!11093 = distinct !DILexicalBlock(scope: !11090, file: !10984, line: 150, column: 6)
!11094 = !{i32 -2145553224, i32 -2145553217, i32 -2145553165, i32 -2145553134, i32 -2145553104}
!11095 = !DILocation(line: 150, column: 6, scope: !11090, inlinedAt: !11014)
!11096 = !DILocation(line: 150, column: 6, scope: !11005, inlinedAt: !11014)
!11097 = !DILocation(line: 150, column: 6, scope: !10983, inlinedAt: !11014)
!11098 = !DILocation(line: 151, column: 3, scope: !11005, inlinedAt: !11014)
!11099 = !DILocation(line: 152, column: 20, scope: !10983, inlinedAt: !11014)
!11100 = !DILocation(line: 152, column: 26, scope: !10983, inlinedAt: !11014)
!11101 = !DILocation(line: 152, column: 33, scope: !10983, inlinedAt: !11014)
!11102 = !DILocation(line: 152, column: 2, scope: !10983, inlinedAt: !11014)
!11103 = !DILocation(line: 153, column: 2, scope: !10983, inlinedAt: !11014)
!11104 = !DILocation(line: 154, column: 1, scope: !10983, inlinedAt: !11014)
!11105 = !DILocation(line: 191, column: 6, scope: !10991, inlinedAt: !11015)
!11106 = !DILocation(line: 192, column: 23, scope: !10989, inlinedAt: !11015)
!11107 = !DILocation(line: 192, column: 27, scope: !10989, inlinedAt: !11015)
!11108 = !DILocation(line: 192, column: 33, scope: !10989, inlinedAt: !11015)
!11109 = !DILocation(line: 192, column: 7, scope: !10989, inlinedAt: !11015)
!11110 = !DILocation(line: 192, column: 5, scope: !10989, inlinedAt: !11015)
!11111 = !DILocation(line: 192, column: 3, scope: !10989, inlinedAt: !11015)
!11112 = !DILocation(line: 193, column: 9, scope: !10991, inlinedAt: !11015)
!11113 = !DILocation(line: 2639, column: 7, scope: !11016)
!11114 = !DILocation(line: 2639, column: 7, scope: !10996)
!11115 = !DILocation(line: 2640, column: 7, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11016, file: !3, line: 2639, column: 56)
!11117 = !DILocation(line: 2641, column: 4, scope: !11116)
!11118 = !DILocation(line: 2644, column: 8, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 2644, column: 7)
!11120 = !DILocation(line: 2644, column: 7, scope: !10996)
!11121 = !DILocation(line: 2645, column: 7, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11119, file: !3, line: 2644, column: 32)
!11123 = !DILocation(line: 2646, column: 4, scope: !11122)
!11124 = !DILocation(line: 2649, column: 34, scope: !10996)
!11125 = !DILocation(line: 2649, column: 44, scope: !10996)
!11126 = !DILocation(line: 2649, column: 40, scope: !10996)
!11127 = !DILocation(line: 2649, column: 18, scope: !10996)
!11128 = !DILocation(line: 2649, column: 16, scope: !10996)
!11129 = !DILocation(line: 2650, column: 14, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 2650, column: 7)
!11131 = !DILocation(line: 2650, column: 7, scope: !11130)
!11132 = !DILocation(line: 2650, column: 7, scope: !10996)
!11133 = !DILocation(line: 2651, column: 17, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11130, file: !3, line: 2650, column: 29)
!11135 = !DILocation(line: 2651, column: 9, scope: !11134)
!11136 = !DILocation(line: 2651, column: 7, scope: !11134)
!11137 = !DILocation(line: 2652, column: 4, scope: !11134)
!11138 = !DILocation(line: 2655, column: 9, scope: !10996)
!11139 = !DILocation(line: 2655, column: 15, scope: !10996)
!11140 = !DILocation(line: 2655, column: 3, scope: !10996)
!11141 = !DILocation(line: 2657, column: 20, scope: !10996)
!11142 = !DILocation(line: 2657, column: 3, scope: !10996)
!11143 = !DILocation(line: 2657, column: 9, scope: !10996)
!11144 = !DILocation(line: 2657, column: 18, scope: !10996)
!11145 = !DILocation(line: 2658, column: 31, scope: !10996)
!11146 = !DILocation(line: 2658, column: 27, scope: !10996)
!11147 = !DILocation(line: 2658, column: 3, scope: !10996)
!11148 = !DILocation(line: 2658, column: 9, scope: !10996)
!11149 = !DILocation(line: 2658, column: 25, scope: !10996)
!11150 = !DILocation(line: 2659, column: 11, scope: !10996)
!11151 = !DILocation(line: 2659, column: 17, scope: !10996)
!11152 = !DILocation(line: 2659, column: 34, scope: !10996)
!11153 = !DILocation(line: 2659, column: 30, scope: !10996)
!11154 = !DILocation(line: 2659, column: 3, scope: !10996)
!11155 = !DILocation(line: 2660, column: 3, scope: !10996)
!11156 = !DILocation(line: 2660, column: 9, scope: !10996)
!11157 = !DILocation(line: 2660, column: 25, scope: !10996)
!11158 = !DILocation(line: 2661, column: 3, scope: !10996)
!11159 = !DILocation(line: 2664, column: 22, scope: !10995)
!11160 = !DILocation(line: 2664, column: 30, scope: !10995)
!11161 = !DILocation(line: 2664, column: 34, scope: !10995)
!11162 = !DILocation(line: 191, column: 6, scope: !10989, inlinedAt: !10994)
!11163 = !DILocation(line: 141, column: 6, scope: !11069, inlinedAt: !10988)
!11164 = !DILocation(line: 0, scope: !11069, inlinedAt: !10988)
!11165 = !DILocation(line: 141, column: 6, scope: !10983, inlinedAt: !10988)
!11166 = !DILocation(line: 142, column: 29, scope: !11073, inlinedAt: !10988)
!11167 = !DILocation(line: 142, column: 8, scope: !11073, inlinedAt: !10988)
!11168 = !DILocation(line: 142, column: 7, scope: !11074, inlinedAt: !10988)
!11169 = !DILocation(line: 143, column: 18, scope: !11073, inlinedAt: !10988)
!11170 = !DILocation(line: 143, column: 22, scope: !11073, inlinedAt: !10988)
!11171 = !DILocation(line: 143, column: 4, scope: !11073, inlinedAt: !10988)
!11172 = !DILocation(line: 144, column: 12, scope: !11081, inlinedAt: !10988)
!11173 = !DILocation(line: 144, column: 12, scope: !11073, inlinedAt: !10988)
!11174 = !DILocation(line: 145, column: 4, scope: !11081, inlinedAt: !10988)
!11175 = !DILocation(line: 147, column: 4, scope: !11081, inlinedAt: !10988)
!11176 = !DILocation(line: 148, column: 3, scope: !11074, inlinedAt: !10988)
!11177 = !DILocation(line: 150, column: 6, scope: !11087, inlinedAt: !10988)
!11178 = !DILocation(line: 150, column: 6, scope: !11089, inlinedAt: !10988)
!11179 = !DILocation(line: 150, column: 6, scope: !11093, inlinedAt: !10988)
!11180 = !DILocation(line: 150, column: 6, scope: !11090, inlinedAt: !10988)
!11181 = !DILocation(line: 150, column: 6, scope: !11005, inlinedAt: !10988)
!11182 = !DILocation(line: 150, column: 6, scope: !10983, inlinedAt: !10988)
!11183 = !DILocation(line: 151, column: 3, scope: !11005, inlinedAt: !10988)
!11184 = !DILocation(line: 152, column: 20, scope: !10983, inlinedAt: !10988)
!11185 = !DILocation(line: 152, column: 26, scope: !10983, inlinedAt: !10988)
!11186 = !DILocation(line: 152, column: 33, scope: !10983, inlinedAt: !10988)
!11187 = !DILocation(line: 152, column: 2, scope: !10983, inlinedAt: !10988)
!11188 = !DILocation(line: 153, column: 2, scope: !10983, inlinedAt: !10988)
!11189 = !DILocation(line: 154, column: 1, scope: !10983, inlinedAt: !10988)
!11190 = !DILocation(line: 191, column: 6, scope: !10991, inlinedAt: !10994)
!11191 = !DILocation(line: 192, column: 23, scope: !10989, inlinedAt: !10994)
!11192 = !DILocation(line: 192, column: 27, scope: !10989, inlinedAt: !10994)
!11193 = !DILocation(line: 192, column: 33, scope: !10989, inlinedAt: !10994)
!11194 = !DILocation(line: 192, column: 7, scope: !10989, inlinedAt: !10994)
!11195 = !DILocation(line: 192, column: 5, scope: !10989, inlinedAt: !10994)
!11196 = !DILocation(line: 192, column: 3, scope: !10989, inlinedAt: !10994)
!11197 = !DILocation(line: 193, column: 9, scope: !10991, inlinedAt: !10994)
!11198 = !DILocation(line: 2664, column: 7, scope: !10995)
!11199 = !DILocation(line: 2664, column: 7, scope: !10996)
!11200 = !DILocation(line: 2665, column: 7, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !10995, file: !3, line: 2664, column: 58)
!11202 = !DILocation(line: 2666, column: 4, scope: !11201)
!11203 = !DILocation(line: 2669, column: 8, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 2669, column: 7)
!11205 = !DILocation(line: 2669, column: 7, scope: !10996)
!11206 = !DILocation(line: 2670, column: 7, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11204, file: !3, line: 2669, column: 32)
!11208 = !DILocation(line: 2671, column: 4, scope: !11207)
!11209 = !DILocation(line: 2674, column: 3, scope: !10996)
!11210 = !DILocation(line: 2674, column: 23, scope: !10996)
!11211 = !DILocation(line: 2675, column: 6, scope: !10996)
!11212 = !DILocation(line: 2676, column: 10, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 2676, column: 3)
!11214 = !DILocation(line: 2676, column: 8, scope: !11213)
!11215 = !DILocation(line: 2676, column: 15, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11213, file: !3, line: 2676, column: 3)
!11217 = !DILocation(line: 2676, column: 17, scope: !11216)
!11218 = !DILocation(line: 2676, column: 3, scope: !11213)
!11219 = !DILocation(line: 2677, column: 34, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11221, file: !3, line: 2677, column: 8)
!11221 = distinct !DILexicalBlock(scope: !11216, file: !3, line: 2676, column: 51)
!11222 = !DILocation(line: 2677, column: 20, scope: !11220)
!11223 = !DILocation(line: 2677, column: 37, scope: !11220)
!11224 = !DILocation(line: 2677, column: 43, scope: !11220)
!11225 = !DILocation(line: 2677, column: 9, scope: !11220)
!11226 = !DILocation(line: 2677, column: 8, scope: !11221)
!11227 = !DILocation(line: 2678, column: 45, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11220, file: !3, line: 2677, column: 52)
!11229 = !DILocation(line: 2678, column: 31, scope: !11228)
!11230 = !DILocation(line: 2678, column: 48, scope: !11228)
!11231 = !DILocation(line: 2678, column: 5, scope: !11228)
!11232 = !DILocation(line: 2678, column: 11, scope: !11228)
!11233 = !DILocation(line: 2678, column: 29, scope: !11228)
!11234 = !DILocation(line: 2679, column: 8, scope: !11228)
!11235 = !DILocation(line: 2680, column: 4, scope: !11228)
!11236 = !DILocation(line: 2681, column: 3, scope: !11221)
!11237 = !DILocation(line: 2676, column: 47, scope: !11216)
!11238 = !DILocation(line: 2676, column: 3, scope: !11216)
!11239 = distinct !{!11239, !11218, !11240}
!11240 = !DILocation(line: 2681, column: 3, scope: !11213)
!11241 = !DILocation(line: 2683, column: 7, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 2683, column: 7)
!11243 = !DILocation(line: 2683, column: 10, scope: !11242)
!11244 = !DILocation(line: 2683, column: 15, scope: !11242)
!11245 = !DILocation(line: 2683, column: 19, scope: !11242)
!11246 = !DILocation(line: 2683, column: 25, scope: !11242)
!11247 = !DILocation(line: 2683, column: 39, scope: !11242)
!11248 = !DILocation(line: 2683, column: 7, scope: !10996)
!11249 = !DILocation(line: 2684, column: 20, scope: !11242)
!11250 = !DILocation(line: 2684, column: 9, scope: !11242)
!11251 = !DILocation(line: 2684, column: 7, scope: !11242)
!11252 = !DILocation(line: 2684, column: 4, scope: !11242)
!11253 = !DILocation(line: 2685, column: 3, scope: !10996)
!11254 = !DILocation(line: 2688, column: 6, scope: !10996)
!11255 = !DILocation(line: 2689, column: 2, scope: !10996)
!11256 = !DILocation(line: 2691, column: 9, scope: !10981)
!11257 = !DILocation(line: 2691, column: 2, scope: !10981)
!11258 = distinct !DISubprogram(name: "atmel_enter_state", scope: !3, file: !3, line: 2703, type: !9569, scopeLine: 2704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11259 = !DILocalVariable(name: "priv", arg: 1, scope: !11258, file: !3, line: 2703, type: !8587)
!11260 = !DILocation(line: 2703, column: 53, scope: !11258)
!11261 = !DILocalVariable(name: "new_state", arg: 2, scope: !11258, file: !3, line: 2703, type: !7)
!11262 = !DILocation(line: 2703, column: 63, scope: !11258)
!11263 = !DILocalVariable(name: "old_state", scope: !11258, file: !3, line: 2705, type: !7)
!11264 = !DILocation(line: 2705, column: 6, scope: !11258)
!11265 = !DILocation(line: 2705, column: 18, scope: !11258)
!11266 = !DILocation(line: 2705, column: 24, scope: !11258)
!11267 = !DILocation(line: 2707, column: 6, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11258, file: !3, line: 2707, column: 6)
!11269 = !DILocation(line: 2707, column: 19, scope: !11268)
!11270 = !DILocation(line: 2707, column: 16, scope: !11268)
!11271 = !DILocation(line: 2707, column: 6, scope: !11258)
!11272 = !DILocation(line: 2708, column: 3, scope: !11268)
!11273 = !DILocation(line: 2710, column: 24, scope: !11258)
!11274 = !DILocation(line: 2710, column: 2, scope: !11258)
!11275 = !DILocation(line: 2710, column: 8, scope: !11258)
!11276 = !DILocation(line: 2710, column: 22, scope: !11258)
!11277 = !DILocation(line: 2712, column: 6, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11258, file: !3, line: 2712, column: 6)
!11279 = !DILocation(line: 2712, column: 16, scope: !11278)
!11280 = !DILocation(line: 2712, column: 6, scope: !11258)
!11281 = !DILocation(line: 2713, column: 21, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 2712, column: 40)
!11283 = !DILocation(line: 2713, column: 27, scope: !11282)
!11284 = !DILocation(line: 2713, column: 3, scope: !11282)
!11285 = !DILocation(line: 2714, column: 20, scope: !11282)
!11286 = !DILocation(line: 2714, column: 26, scope: !11282)
!11287 = !DILocation(line: 2714, column: 3, scope: !11282)
!11288 = !DILocation(line: 2715, column: 2, scope: !11282)
!11289 = !DILocation(line: 2717, column: 6, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11258, file: !3, line: 2717, column: 6)
!11291 = !DILocation(line: 2717, column: 16, scope: !11290)
!11292 = !DILocation(line: 2717, column: 6, scope: !11258)
!11293 = !DILocation(line: 2718, column: 21, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11290, file: !3, line: 2717, column: 40)
!11295 = !DILocation(line: 2718, column: 27, scope: !11294)
!11296 = !DILocation(line: 2718, column: 3, scope: !11294)
!11297 = !DILocation(line: 2719, column: 21, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11294, file: !3, line: 2719, column: 7)
!11299 = !DILocation(line: 2719, column: 27, scope: !11298)
!11300 = !DILocation(line: 2719, column: 7, scope: !11298)
!11301 = !DILocation(line: 2719, column: 7, scope: !11294)
!11302 = !DILocation(line: 2720, column: 21, scope: !11298)
!11303 = !DILocation(line: 2720, column: 27, scope: !11298)
!11304 = !DILocation(line: 2720, column: 4, scope: !11298)
!11305 = !DILocation(line: 2721, column: 3, scope: !11294)
!11306 = !DILocation(line: 2721, column: 9, scope: !11294)
!11307 = !DILocation(line: 2721, column: 31, scope: !11294)
!11308 = !DILocation(line: 2722, column: 2, scope: !11294)
!11309 = !DILocation(line: 2723, column: 1, scope: !11258)
!11310 = distinct !DISubprogram(name: "netif_start_queue", scope: !6, file: !6, line: 3285, type: !747, scopeLine: 3286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11311 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !11312, file: !6, line: 3274, type: !7987)
!11312 = distinct !DISubprogram(name: "netif_tx_start_queue", scope: !6, file: !6, line: 3274, type: !11313, scopeLine: 3275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11313 = !DISubroutineType(types: !11314)
!11314 = !{null, !7987}
!11315 = !DILocation(line: 3274, column: 71, scope: !11312, inlinedAt: !11316)
!11316 = distinct !DILocation(line: 3287, column: 2, scope: !11310)
!11317 = !DILocalVariable(name: "dev", arg: 1, scope: !11310, file: !6, line: 3285, type: !495)
!11318 = !DILocation(line: 3285, column: 57, scope: !11310)
!11319 = !DILocation(line: 3287, column: 43, scope: !11310)
!11320 = !DILocation(line: 3287, column: 23, scope: !11310)
!11321 = !DILocation(line: 3276, column: 37, scope: !11312, inlinedAt: !11316)
!11322 = !DILocation(line: 3276, column: 48, scope: !11312, inlinedAt: !11316)
!11323 = !DILocation(line: 3276, column: 2, scope: !11312, inlinedAt: !11316)
!11324 = !DILocation(line: 3288, column: 1, scope: !11310)
!11325 = distinct !DISubprogram(name: "netif_running", scope: !6, file: !6, line: 3556, type: !11326, scopeLine: 3557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11326 = !DISubroutineType(types: !11327)
!11327 = !{!1093, !1095}
!11328 = !DILocalVariable(name: "dev", arg: 1, scope: !11325, file: !6, line: 3556, type: !1095)
!11329 = !DILocation(line: 3556, column: 59, scope: !11325)
!11330 = !DILocation(line: 3558, column: 39, scope: !11325)
!11331 = !DILocation(line: 3558, column: 44, scope: !11325)
!11332 = !DILocation(line: 3558, column: 9, scope: !11325)
!11333 = !DILocation(line: 3558, column: 2, scope: !11325)
!11334 = distinct !DISubprogram(name: "netif_stop_queue", scope: !6, file: !6, line: 3336, type: !747, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11335 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !11336, file: !6, line: 3324, type: !7987)
!11336 = distinct !DISubprogram(name: "netif_tx_stop_queue", scope: !6, file: !6, line: 3324, type: !11313, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11337 = !DILocation(line: 3324, column: 70, scope: !11336, inlinedAt: !11338)
!11338 = distinct !DILocation(line: 3338, column: 2, scope: !11334)
!11339 = !DILocalVariable(name: "dev", arg: 1, scope: !11334, file: !6, line: 3336, type: !495)
!11340 = !DILocation(line: 3336, column: 56, scope: !11334)
!11341 = !DILocation(line: 3338, column: 42, scope: !11334)
!11342 = !DILocation(line: 3338, column: 22, scope: !11334)
!11343 = !DILocation(line: 3326, column: 35, scope: !11336, inlinedAt: !11338)
!11344 = !DILocation(line: 3326, column: 46, scope: !11336, inlinedAt: !11338)
!11345 = !DILocation(line: 3326, column: 2, scope: !11336, inlinedAt: !11338)
!11346 = !DILocation(line: 3339, column: 1, scope: !11334)
!11347 = distinct !DISubprogram(name: "netdev_get_tx_queue", scope: !6, file: !6, line: 2234, type: !11348, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11348 = !DISubroutineType(types: !11349)
!11349 = !{!7987, !1095, !13}
!11350 = !DILocalVariable(name: "dev", arg: 1, scope: !11347, file: !6, line: 2234, type: !1095)
!11351 = !DILocation(line: 2234, column: 67, scope: !11347)
!11352 = !DILocalVariable(name: "index", arg: 2, scope: !11347, file: !6, line: 2235, type: !13)
!11353 = !DILocation(line: 2235, column: 20, scope: !11347)
!11354 = !DILocation(line: 2237, column: 10, scope: !11347)
!11355 = !DILocation(line: 2237, column: 15, scope: !11347)
!11356 = !DILocation(line: 2237, column: 19, scope: !11347)
!11357 = !DILocation(line: 2237, column: 2, scope: !11347)
!11358 = distinct !DISubprogram(name: "clear_bit", scope: !11359, file: !11359, line: 39, type: !11360, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11359 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!11360 = !DISubroutineType(types: !11361)
!11361 = !{null, !1319, !11362}
!11362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11363, size: 64)
!11363 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !517)
!11364 = !DILocalVariable(name: "nr", arg: 1, scope: !11365, file: !11366, line: 72, type: !1319)
!11365 = distinct !DISubprogram(name: "arch_clear_bit", scope: !11366, file: !11366, line: 72, type: !11360, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11366 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!11367 = !DILocation(line: 72, column: 21, scope: !11365, inlinedAt: !11368)
!11368 = distinct !DILocation(line: 42, column: 2, scope: !11358)
!11369 = !DILocalVariable(name: "addr", arg: 2, scope: !11365, file: !11366, line: 72, type: !11362)
!11370 = !DILocation(line: 72, column: 49, scope: !11365, inlinedAt: !11368)
!11371 = !DILocalVariable(name: "v", arg: 1, scope: !11372, file: !11373, line: 84, type: !11376)
!11372 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !11373, file: !11373, line: 84, type: !11374, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11373 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!11374 = !DISubroutineType(types: !11375)
!11375 = !{null, !11376, !1358}
!11376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11377, size: 64)
!11377 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11378)
!11378 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!11379 = !DILocation(line: 84, column: 74, scope: !11372, inlinedAt: !11380)
!11380 = distinct !DILocation(line: 41, column: 2, scope: !11358)
!11381 = !DILocalVariable(name: "size", arg: 2, scope: !11372, file: !11373, line: 84, type: !1358)
!11382 = !DILocation(line: 84, column: 84, scope: !11372, inlinedAt: !11380)
!11383 = !DILocalVariable(name: "nr", arg: 1, scope: !11358, file: !11359, line: 39, type: !1319)
!11384 = !DILocation(line: 39, column: 35, scope: !11358)
!11385 = !DILocalVariable(name: "addr", arg: 2, scope: !11358, file: !11359, line: 39, type: !11362)
!11386 = !DILocation(line: 39, column: 63, scope: !11358)
!11387 = !DILocation(line: 41, column: 26, scope: !11358)
!11388 = !DILocation(line: 41, column: 33, scope: !11358)
!11389 = !DILocation(line: 41, column: 31, scope: !11358)
!11390 = !DILocation(line: 86, column: 20, scope: !11372, inlinedAt: !11380)
!11391 = !DILocation(line: 86, column: 23, scope: !11372, inlinedAt: !11380)
!11392 = !DILocation(line: 86, column: 2, scope: !11372, inlinedAt: !11380)
!11393 = !DILocation(line: 87, column: 2, scope: !11372, inlinedAt: !11380)
!11394 = !DILocation(line: 42, column: 17, scope: !11358)
!11395 = !DILocation(line: 42, column: 21, scope: !11358)
!11396 = !DILocation(line: 74, column: 27, scope: !11397, inlinedAt: !11368)
!11397 = distinct !DILexicalBlock(scope: !11365, file: !11366, line: 74, column: 6)
!11398 = !DILocation(line: 74, column: 6, scope: !11397, inlinedAt: !11368)
!11399 = !DILocation(line: 74, column: 6, scope: !11365, inlinedAt: !11368)
!11400 = !DILocation(line: 76, column: 6, scope: !11401, inlinedAt: !11368)
!11401 = distinct !DILexicalBlock(scope: !11397, file: !11366, line: 74, column: 32)
!11402 = !DILocation(line: 77, column: 13, scope: !11401, inlinedAt: !11368)
!11403 = !DILocation(line: 77, column: 12, scope: !11401, inlinedAt: !11368)
!11404 = !DILocation(line: 75, column: 3, scope: !11401, inlinedAt: !11368)
!11405 = !{i32 -2147055340}
!11406 = !DILocation(line: 78, column: 2, scope: !11401, inlinedAt: !11368)
!11407 = !DILocation(line: 80, column: 8, scope: !11408, inlinedAt: !11368)
!11408 = distinct !DILexicalBlock(scope: !11397, file: !11366, line: 78, column: 9)
!11409 = !DILocation(line: 80, column: 32, scope: !11408, inlinedAt: !11368)
!11410 = !DILocation(line: 79, column: 3, scope: !11408, inlinedAt: !11368)
!11411 = !{i32 -2147055208}
!11412 = !DILocation(line: 43, column: 1, scope: !11358)
!11413 = distinct !DISubprogram(name: "kasan_check_write", scope: !11414, file: !11414, line: 38, type: !11415, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11414 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!11415 = !DISubroutineType(types: !11416)
!11416 = !{!1093, !11376, !13}
!11417 = !DILocalVariable(name: "p", arg: 1, scope: !11413, file: !11414, line: 38, type: !11376)
!11418 = !DILocation(line: 38, column: 59, scope: !11413)
!11419 = !DILocalVariable(name: "size", arg: 2, scope: !11413, file: !11414, line: 38, type: !13)
!11420 = !DILocation(line: 38, column: 75, scope: !11413)
!11421 = !DILocation(line: 40, column: 2, scope: !11413)
!11422 = distinct !DISubprogram(name: "kcsan_check_access", scope: !11423, file: !11423, line: 178, type: !11424, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11423 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!11424 = !DISubroutineType(types: !11425)
!11425 = !{null, !11376, !1358, !7}
!11426 = !DILocalVariable(name: "ptr", arg: 1, scope: !11422, file: !11423, line: 178, type: !11376)
!11427 = !DILocation(line: 178, column: 60, scope: !11422)
!11428 = !DILocalVariable(name: "size", arg: 2, scope: !11422, file: !11423, line: 178, type: !1358)
!11429 = !DILocation(line: 178, column: 72, scope: !11422)
!11430 = !DILocalVariable(name: "type", arg: 3, scope: !11422, file: !11423, line: 179, type: !7)
!11431 = !DILocation(line: 179, column: 15, scope: !11422)
!11432 = !DILocation(line: 179, column: 23, scope: !11422)
!11433 = distinct !DISubprogram(name: "test_bit", scope: !11434, file: !11434, line: 132, type: !11435, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11434 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!11435 = !DISubroutineType(types: !11436)
!11436 = !{!1093, !1319, !11437}
!11437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11438, size: 64)
!11438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11363)
!11439 = !DILocalVariable(name: "nr", arg: 1, scope: !11440, file: !11366, line: 210, type: !1319)
!11440 = distinct !DISubprogram(name: "variable_test_bit", scope: !11366, file: !11366, line: 210, type: !11435, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11441 = !DILocation(line: 210, column: 52, scope: !11440, inlinedAt: !11442)
!11442 = distinct !DILocation(line: 135, column: 9, scope: !11433)
!11443 = !DILocalVariable(name: "addr", arg: 2, scope: !11440, file: !11366, line: 210, type: !11437)
!11444 = !DILocation(line: 210, column: 86, scope: !11440, inlinedAt: !11442)
!11445 = !DILocalVariable(name: "oldbit", scope: !11440, file: !11366, line: 212, type: !1093)
!11446 = !DILocation(line: 212, column: 7, scope: !11440, inlinedAt: !11442)
!11447 = !DILocalVariable(name: "nr", arg: 1, scope: !11448, file: !11366, line: 204, type: !1319)
!11448 = distinct !DISubprogram(name: "constant_test_bit", scope: !11366, file: !11366, line: 204, type: !11435, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11449 = !DILocation(line: 204, column: 52, scope: !11448, inlinedAt: !11450)
!11450 = distinct !DILocation(line: 135, column: 9, scope: !11433)
!11451 = !DILocalVariable(name: "addr", arg: 2, scope: !11448, file: !11366, line: 204, type: !11437)
!11452 = !DILocation(line: 204, column: 86, scope: !11448, inlinedAt: !11450)
!11453 = !DILocalVariable(name: "v", arg: 1, scope: !11454, file: !11373, line: 69, type: !11376)
!11454 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !11373, file: !11373, line: 69, type: !11374, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11455 = !DILocation(line: 69, column: 73, scope: !11454, inlinedAt: !11456)
!11456 = distinct !DILocation(line: 134, column: 2, scope: !11433)
!11457 = !DILocalVariable(name: "size", arg: 2, scope: !11454, file: !11373, line: 69, type: !1358)
!11458 = !DILocation(line: 69, column: 83, scope: !11454, inlinedAt: !11456)
!11459 = !DILocalVariable(name: "nr", arg: 1, scope: !11433, file: !11434, line: 132, type: !1319)
!11460 = !DILocation(line: 132, column: 34, scope: !11433)
!11461 = !DILocalVariable(name: "addr", arg: 2, scope: !11433, file: !11434, line: 132, type: !11437)
!11462 = !DILocation(line: 132, column: 68, scope: !11433)
!11463 = !DILocation(line: 134, column: 25, scope: !11433)
!11464 = !DILocation(line: 134, column: 32, scope: !11433)
!11465 = !DILocation(line: 134, column: 30, scope: !11433)
!11466 = !DILocation(line: 71, column: 19, scope: !11454, inlinedAt: !11456)
!11467 = !DILocation(line: 71, column: 22, scope: !11454, inlinedAt: !11456)
!11468 = !DILocation(line: 71, column: 2, scope: !11454, inlinedAt: !11456)
!11469 = !DILocation(line: 72, column: 2, scope: !11454, inlinedAt: !11456)
!11470 = !DILocation(line: 135, column: 9, scope: !11433)
!11471 = !DILocation(line: 206, column: 19, scope: !11448, inlinedAt: !11450)
!11472 = !DILocation(line: 206, column: 22, scope: !11448, inlinedAt: !11450)
!11473 = !DILocation(line: 206, column: 15, scope: !11448, inlinedAt: !11450)
!11474 = !DILocation(line: 207, column: 4, scope: !11448, inlinedAt: !11450)
!11475 = !DILocation(line: 207, column: 9, scope: !11448, inlinedAt: !11450)
!11476 = !DILocation(line: 207, column: 12, scope: !11448, inlinedAt: !11450)
!11477 = !DILocation(line: 206, column: 44, scope: !11448, inlinedAt: !11450)
!11478 = !DILocation(line: 207, column: 37, scope: !11448, inlinedAt: !11450)
!11479 = !DILocation(line: 217, column: 33, scope: !11440, inlinedAt: !11442)
!11480 = !DILocation(line: 217, column: 46, scope: !11440, inlinedAt: !11442)
!11481 = !DILocation(line: 214, column: 2, scope: !11440, inlinedAt: !11442)
!11482 = !{i32 -2147047046, i32 -2147046986}
!11483 = !DILocation(line: 219, column: 9, scope: !11440, inlinedAt: !11442)
!11484 = !DILocation(line: 135, column: 2, scope: !11433)
!11485 = distinct !DISubprogram(name: "kasan_check_read", scope: !11414, file: !11414, line: 34, type: !11415, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11486 = !DILocalVariable(name: "p", arg: 1, scope: !11485, file: !11414, line: 34, type: !11376)
!11487 = !DILocation(line: 34, column: 58, scope: !11485)
!11488 = !DILocalVariable(name: "size", arg: 2, scope: !11485, file: !11414, line: 34, type: !13)
!11489 = !DILocation(line: 34, column: 74, scope: !11485)
!11490 = !DILocation(line: 36, column: 2, scope: !11485)
!11491 = distinct !DISubprogram(name: "set_bit", scope: !11359, file: !11359, line: 26, type: !11360, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11492 = !DILocalVariable(name: "nr", arg: 1, scope: !11493, file: !11366, line: 52, type: !1319)
!11493 = distinct !DISubprogram(name: "arch_set_bit", scope: !11366, file: !11366, line: 52, type: !11360, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11494 = !DILocation(line: 52, column: 19, scope: !11493, inlinedAt: !11495)
!11495 = distinct !DILocation(line: 29, column: 2, scope: !11491)
!11496 = !DILocalVariable(name: "addr", arg: 2, scope: !11493, file: !11366, line: 52, type: !11362)
!11497 = !DILocation(line: 52, column: 47, scope: !11493, inlinedAt: !11495)
!11498 = !DILocation(line: 84, column: 74, scope: !11372, inlinedAt: !11499)
!11499 = distinct !DILocation(line: 28, column: 2, scope: !11491)
!11500 = !DILocation(line: 84, column: 84, scope: !11372, inlinedAt: !11499)
!11501 = !DILocalVariable(name: "nr", arg: 1, scope: !11491, file: !11359, line: 26, type: !1319)
!11502 = !DILocation(line: 26, column: 33, scope: !11491)
!11503 = !DILocalVariable(name: "addr", arg: 2, scope: !11491, file: !11359, line: 26, type: !11362)
!11504 = !DILocation(line: 26, column: 61, scope: !11491)
!11505 = !DILocation(line: 28, column: 26, scope: !11491)
!11506 = !DILocation(line: 28, column: 33, scope: !11491)
!11507 = !DILocation(line: 28, column: 31, scope: !11491)
!11508 = !DILocation(line: 86, column: 20, scope: !11372, inlinedAt: !11499)
!11509 = !DILocation(line: 86, column: 23, scope: !11372, inlinedAt: !11499)
!11510 = !DILocation(line: 86, column: 2, scope: !11372, inlinedAt: !11499)
!11511 = !DILocation(line: 87, column: 2, scope: !11372, inlinedAt: !11499)
!11512 = !DILocation(line: 29, column: 15, scope: !11491)
!11513 = !DILocation(line: 29, column: 19, scope: !11491)
!11514 = !DILocation(line: 54, column: 27, scope: !11515, inlinedAt: !11495)
!11515 = distinct !DILexicalBlock(scope: !11493, file: !11366, line: 54, column: 6)
!11516 = !DILocation(line: 54, column: 6, scope: !11515, inlinedAt: !11495)
!11517 = !DILocation(line: 54, column: 6, scope: !11493, inlinedAt: !11495)
!11518 = !DILocation(line: 56, column: 6, scope: !11519, inlinedAt: !11495)
!11519 = distinct !DILexicalBlock(scope: !11515, file: !11366, line: 54, column: 32)
!11520 = !DILocation(line: 57, column: 12, scope: !11519, inlinedAt: !11495)
!11521 = !DILocation(line: 55, column: 3, scope: !11519, inlinedAt: !11495)
!11522 = !{i32 -2147056294}
!11523 = !DILocation(line: 59, column: 2, scope: !11519, inlinedAt: !11495)
!11524 = !DILocation(line: 61, column: 8, scope: !11525, inlinedAt: !11495)
!11525 = distinct !DILexicalBlock(scope: !11515, file: !11366, line: 59, column: 9)
!11526 = !DILocation(line: 61, column: 32, scope: !11525, inlinedAt: !11495)
!11527 = !DILocation(line: 60, column: 3, scope: !11525, inlinedAt: !11495)
!11528 = !{i32 -2147056162}
!11529 = !DILocation(line: 30, column: 1, scope: !11491)
!11530 = distinct !DISubprogram(name: "consume_skb", scope: !758, file: !758, line: 1063, type: !809, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11531 = !DILocalVariable(name: "skb", arg: 1, scope: !11530, file: !758, line: 1063, type: !756)
!11532 = !DILocation(line: 1063, column: 48, scope: !11530)
!11533 = !DILocation(line: 1065, column: 19, scope: !11530)
!11534 = !DILocation(line: 1065, column: 9, scope: !11530)
!11535 = !DILocation(line: 1065, column: 2, scope: !11530)
!11536 = distinct !DISubprogram(name: "spin_lock_bh", scope: !9670, file: !9670, line: 357, type: !11537, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11537 = !DISubroutineType(types: !11538)
!11538 = !{null, !2499}
!11539 = !DILocalVariable(name: "val", arg: 1, scope: !11540, file: !11541, line: 77, type: !7)
!11540 = distinct !DISubprogram(name: "__preempt_count_add", scope: !11541, file: !11541, line: 77, type: !4134, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11541 = !DIFile(filename: "./arch/x86/include/asm/preempt.h", directory: "/home/lizy2001/genbc/linux")
!11542 = !DILocation(line: 77, column: 53, scope: !11540, inlinedAt: !11543)
!11543 = distinct !DILocation(line: 12, column: 2, scope: !11544, inlinedAt: !11548)
!11544 = distinct !DISubprogram(name: "__local_bh_disable_ip", scope: !11545, file: !11545, line: 10, type: !11546, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11545 = !DIFile(filename: "./include/linux/bottom_half.h", directory: "/home/lizy2001/genbc/linux")
!11546 = !DISubroutineType(types: !11547)
!11547 = !{null, !517, !13}
!11548 = distinct !DILocation(line: 359, column: 2, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11536, file: !9670, line: 359, column: 2)
!11550 = !DILocalVariable(name: "pao_ID__", scope: !11551, file: !11541, line: 79, type: !11552)
!11551 = distinct !DILexicalBlock(scope: !11540, file: !11541, line: 79, column: 2)
!11552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!11553 = !DILocation(line: 79, column: 2, scope: !11551, inlinedAt: !11543)
!11554 = !DILocalVariable(name: "pto_val__", scope: !11555, file: !11541, line: 79, type: !1308)
!11555 = distinct !DILexicalBlock(scope: !11556, file: !11541, line: 79, column: 2)
!11556 = distinct !DILexicalBlock(scope: !11557, file: !11541, line: 79, column: 2)
!11557 = distinct !DILexicalBlock(scope: !11551, file: !11541, line: 79, column: 2)
!11558 = !DILocation(line: 79, column: 2, scope: !11555, inlinedAt: !11543)
!11559 = !DILocalVariable(name: "ip", arg: 1, scope: !11544, file: !11545, line: 10, type: !517)
!11560 = !DILocation(line: 10, column: 65, scope: !11544, inlinedAt: !11548)
!11561 = !DILocalVariable(name: "cnt", arg: 2, scope: !11544, file: !11545, line: 10, type: !13)
!11562 = !DILocation(line: 10, column: 82, scope: !11544, inlinedAt: !11548)
!11563 = !DILocalVariable(name: "lock", arg: 1, scope: !11536, file: !9670, line: 357, type: !2499)
!11564 = !DILocation(line: 357, column: 54, scope: !11536)
!11565 = !DILocation(line: 359, column: 2, scope: !11536)
!11566 = !DILocation(line: 359, column: 2, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11549, file: !9670, line: 359, column: 2)
!11568 = !DILabel(scope: !11567, name: "__here", file: !9670, line: 359)
!11569 = !DILocation(line: 12, column: 2, scope: !11544, inlinedAt: !11548)
!11570 = !{i32 -2145546026}
!11571 = !DILocation(line: 13, column: 2, scope: !11544, inlinedAt: !11548)
!11572 = !{i32 -2145346963}
!11573 = !DILocation(line: 359, column: 2, scope: !11549)
!11574 = !DILocation(line: 359, column: 2, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11549, file: !9670, line: 359, column: 2)
!11576 = !DILocation(line: 360, column: 1, scope: !11536)
!11577 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !11578, file: !11578, line: 666, type: !11579, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11578 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!11579 = !DISubroutineType(types: !11580)
!11580 = !{!517}
!11581 = !DILocalVariable(name: "f", scope: !11577, file: !11578, line: 668, type: !517)
!11582 = !DILocation(line: 668, column: 16, scope: !11577)
!11583 = !DILocation(line: 670, column: 6, scope: !11577)
!11584 = !DILocation(line: 670, column: 4, scope: !11577)
!11585 = !DILocation(line: 671, column: 2, scope: !11577)
!11586 = !DILocation(line: 672, column: 9, scope: !11577)
!11587 = !DILocation(line: 672, column: 2, scope: !11577)
!11588 = distinct !DISubprogram(name: "find_tx_buff", scope: !3, file: !3, line: 719, type: !11589, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11589 = !DISubroutineType(types: !11590)
!11590 = !{!916, !8587, !916}
!11591 = !DILocalVariable(name: "priv", arg: 1, scope: !11588, file: !3, line: 719, type: !8587)
!11592 = !DILocation(line: 719, column: 47, scope: !11588)
!11593 = !DILocalVariable(name: "len", arg: 2, scope: !11588, file: !3, line: 719, type: !916)
!11594 = !DILocation(line: 719, column: 57, scope: !11588)
!11595 = !DILocalVariable(name: "bottom_free", scope: !11588, file: !3, line: 721, type: !916)
!11596 = !DILocation(line: 721, column: 6, scope: !11588)
!11597 = !DILocation(line: 721, column: 20, scope: !11588)
!11598 = !DILocation(line: 721, column: 26, scope: !11588)
!11599 = !DILocation(line: 721, column: 36, scope: !11588)
!11600 = !DILocation(line: 721, column: 51, scope: !11588)
!11601 = !DILocation(line: 721, column: 57, scope: !11588)
!11602 = !DILocation(line: 721, column: 49, scope: !11588)
!11603 = !DILocation(line: 723, column: 6, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11588, file: !3, line: 723, column: 6)
!11605 = !DILocation(line: 723, column: 12, scope: !11604)
!11606 = !DILocation(line: 723, column: 25, scope: !11604)
!11607 = !DILocation(line: 723, column: 30, scope: !11604)
!11608 = !DILocation(line: 723, column: 33, scope: !11604)
!11609 = !DILocation(line: 723, column: 39, scope: !11604)
!11610 = !DILocation(line: 723, column: 53, scope: !11604)
!11611 = !DILocation(line: 723, column: 51, scope: !11604)
!11612 = !DILocation(line: 723, column: 6, scope: !11588)
!11613 = !DILocation(line: 724, column: 3, scope: !11604)
!11614 = !DILocation(line: 726, column: 6, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11588, file: !3, line: 726, column: 6)
!11616 = !DILocation(line: 726, column: 21, scope: !11615)
!11617 = !DILocation(line: 726, column: 18, scope: !11615)
!11618 = !DILocation(line: 726, column: 6, scope: !11588)
!11619 = !DILocation(line: 727, column: 10, scope: !11615)
!11620 = !DILocation(line: 727, column: 16, scope: !11615)
!11621 = !DILocation(line: 727, column: 26, scope: !11615)
!11622 = !DILocation(line: 727, column: 40, scope: !11615)
!11623 = !DILocation(line: 727, column: 46, scope: !11615)
!11624 = !DILocation(line: 727, column: 38, scope: !11615)
!11625 = !DILocation(line: 727, column: 3, scope: !11615)
!11626 = !DILocation(line: 729, column: 6, scope: !11627)
!11627 = distinct !DILexicalBlock(scope: !11588, file: !3, line: 729, column: 6)
!11628 = !DILocation(line: 729, column: 12, scope: !11627)
!11629 = !DILocation(line: 729, column: 26, scope: !11627)
!11630 = !DILocation(line: 729, column: 24, scope: !11627)
!11631 = !DILocation(line: 729, column: 41, scope: !11627)
!11632 = !DILocation(line: 729, column: 38, scope: !11627)
!11633 = !DILocation(line: 729, column: 6, scope: !11588)
!11634 = !DILocation(line: 730, column: 3, scope: !11635)
!11635 = distinct !DILexicalBlock(scope: !11627, file: !3, line: 729, column: 46)
!11636 = !DILocation(line: 730, column: 9, scope: !11635)
!11637 = !DILocation(line: 730, column: 22, scope: !11635)
!11638 = !DILocation(line: 731, column: 10, scope: !11635)
!11639 = !DILocation(line: 731, column: 16, scope: !11635)
!11640 = !DILocation(line: 731, column: 26, scope: !11635)
!11641 = !DILocation(line: 731, column: 3, scope: !11635)
!11642 = !DILocation(line: 734, column: 2, scope: !11588)
!11643 = !DILocation(line: 735, column: 1, scope: !11588)
!11644 = distinct !DISubprogram(name: "spin_unlock_bh", scope: !9670, file: !9670, line: 397, type: !11537, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11645 = !DILocalVariable(name: "lock", arg: 1, scope: !11644, file: !9670, line: 397, type: !2499)
!11646 = !DILocation(line: 397, column: 56, scope: !11644)
!11647 = !DILocation(line: 399, column: 2, scope: !11644)
!11648 = !DILocation(line: 399, column: 2, scope: !11649)
!11649 = distinct !DILexicalBlock(scope: !11650, file: !9670, line: 399, column: 2)
!11650 = distinct !DILexicalBlock(scope: !11644, file: !9670, line: 399, column: 2)
!11651 = !DILabel(scope: !11649, name: "__here", file: !9670, line: 399)
!11652 = !DILocation(line: 399, column: 2, scope: !11650)
!11653 = !DILocation(line: 399, column: 2, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11650, file: !9670, line: 399, column: 2)
!11655 = !DILocation(line: 400, column: 1, scope: !11644)
!11656 = distinct !DISubprogram(name: "skb_copy_from_linear_data", scope: !758, file: !758, line: 3649, type: !11657, scopeLine: 3652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11657 = !DISubroutineType(types: !11658)
!11658 = !{null, !6356, !622, !5070}
!11659 = !DILocalVariable(name: "skb", arg: 1, scope: !11656, file: !758, line: 3649, type: !6356)
!11660 = !DILocation(line: 3649, column: 68, scope: !11656)
!11661 = !DILocalVariable(name: "to", arg: 2, scope: !11656, file: !758, line: 3650, type: !622)
!11662 = !DILocation(line: 3650, column: 17, scope: !11656)
!11663 = !DILocalVariable(name: "len", arg: 3, scope: !11656, file: !758, line: 3651, type: !5070)
!11664 = !DILocation(line: 3651, column: 30, scope: !11656)
!11665 = !DILocation(line: 3653, column: 9, scope: !11656)
!11666 = !DILocation(line: 3653, column: 13, scope: !11656)
!11667 = !DILocation(line: 3653, column: 18, scope: !11656)
!11668 = !DILocation(line: 3653, column: 24, scope: !11656)
!11669 = !DILocation(line: 3653, column: 2, scope: !11656)
!11670 = !DILocation(line: 3654, column: 1, scope: !11656)
!11671 = distinct !DISubprogram(name: "atmel_copy_to_card", scope: !3, file: !3, line: 4146, type: !11672, scopeLine: 4148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11672 = !DISubroutineType(types: !11673)
!11673 = !{null, !495, !916, !1267, !916}
!11674 = !DILocalVariable(name: "dev", arg: 1, scope: !11671, file: !3, line: 4146, type: !495)
!11675 = !DILocation(line: 4146, column: 51, scope: !11671)
!11676 = !DILocalVariable(name: "dest", arg: 2, scope: !11671, file: !3, line: 4146, type: !916)
!11677 = !DILocation(line: 4146, column: 60, scope: !11671)
!11678 = !DILocalVariable(name: "src", arg: 3, scope: !11671, file: !3, line: 4147, type: !1267)
!11679 = !DILocation(line: 4147, column: 32, scope: !11671)
!11680 = !DILocalVariable(name: "len", arg: 4, scope: !11671, file: !3, line: 4147, type: !916)
!11681 = !DILocation(line: 4147, column: 41, scope: !11671)
!11682 = !DILocalVariable(name: "i", scope: !11671, file: !3, line: 4149, type: !7)
!11683 = !DILocation(line: 4149, column: 6, scope: !11671)
!11684 = !DILocation(line: 4150, column: 16, scope: !11671)
!11685 = !DILocation(line: 4150, column: 21, scope: !11671)
!11686 = !DILocation(line: 4150, column: 2, scope: !11671)
!11687 = !DILocation(line: 4151, column: 6, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11671, file: !3, line: 4151, column: 6)
!11689 = !DILocation(line: 4151, column: 11, scope: !11688)
!11690 = !DILocation(line: 4151, column: 6, scope: !11671)
!11691 = !DILocation(line: 4152, column: 16, scope: !11692)
!11692 = distinct !DILexicalBlock(scope: !11688, file: !3, line: 4151, column: 16)
!11693 = !DILocation(line: 4152, column: 26, scope: !11692)
!11694 = !DILocation(line: 4152, column: 25, scope: !11692)
!11695 = !DILocation(line: 4152, column: 3, scope: !11692)
!11696 = !DILocation(line: 4153, column: 6, scope: !11692)
!11697 = !DILocation(line: 4153, column: 13, scope: !11692)
!11698 = !DILocation(line: 4154, column: 2, scope: !11692)
!11699 = !DILocation(line: 4155, column: 11, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11671, file: !3, line: 4155, column: 2)
!11701 = !DILocation(line: 4155, column: 9, scope: !11700)
!11702 = !DILocation(line: 4155, column: 7, scope: !11700)
!11703 = !DILocation(line: 4155, column: 16, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11700, file: !3, line: 4155, column: 2)
!11705 = !DILocation(line: 4155, column: 18, scope: !11704)
!11706 = !DILocation(line: 4155, column: 2, scope: !11700)
!11707 = !DILocalVariable(name: "lb", scope: !11708, file: !3, line: 4156, type: !1116)
!11708 = distinct !DILexicalBlock(scope: !11704, file: !3, line: 4155, column: 32)
!11709 = !DILocation(line: 4156, column: 6, scope: !11708)
!11710 = !DILocation(line: 4156, column: 15, scope: !11708)
!11711 = !DILocation(line: 4156, column: 11, scope: !11708)
!11712 = !DILocalVariable(name: "hb", scope: !11708, file: !3, line: 4157, type: !1116)
!11713 = !DILocation(line: 4157, column: 6, scope: !11708)
!11714 = !DILocation(line: 4157, column: 15, scope: !11708)
!11715 = !DILocation(line: 4157, column: 11, scope: !11708)
!11716 = !DILocation(line: 4158, column: 17, scope: !11708)
!11717 = !DILocation(line: 4158, column: 26, scope: !11708)
!11718 = !DILocation(line: 4158, column: 32, scope: !11708)
!11719 = !DILocation(line: 4158, column: 35, scope: !11708)
!11720 = !DILocation(line: 4158, column: 29, scope: !11708)
!11721 = !DILocation(line: 4158, column: 3, scope: !11708)
!11722 = !DILocation(line: 4159, column: 2, scope: !11708)
!11723 = !DILocation(line: 4155, column: 26, scope: !11704)
!11724 = !DILocation(line: 4155, column: 2, scope: !11704)
!11725 = distinct !{!11725, !11706, !11726}
!11726 = !DILocation(line: 4159, column: 2, scope: !11700)
!11727 = !DILocation(line: 4160, column: 6, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11671, file: !3, line: 4160, column: 6)
!11729 = !DILocation(line: 4160, column: 6, scope: !11671)
!11730 = !DILocation(line: 4161, column: 16, scope: !11728)
!11731 = !DILocation(line: 4161, column: 26, scope: !11728)
!11732 = !DILocation(line: 4161, column: 25, scope: !11728)
!11733 = !DILocation(line: 4161, column: 3, scope: !11728)
!11734 = !DILocation(line: 4162, column: 1, scope: !11671)
!11735 = distinct !DISubprogram(name: "tx_update_descriptor", scope: !3, file: !3, line: 737, type: !11736, scopeLine: 739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11736 = !DISubroutineType(types: !11737)
!11737 = !{null, !8587, !7, !916, !916, !1116}
!11738 = !DILocalVariable(name: "priv", arg: 1, scope: !11735, file: !3, line: 737, type: !8587)
!11739 = !DILocation(line: 737, column: 56, scope: !11735)
!11740 = !DILocalVariable(name: "is_bcast", arg: 2, scope: !11735, file: !3, line: 737, type: !7)
!11741 = !DILocation(line: 737, column: 66, scope: !11735)
!11742 = !DILocalVariable(name: "len", arg: 3, scope: !11735, file: !3, line: 738, type: !916)
!11743 = !DILocation(line: 738, column: 10, scope: !11735)
!11744 = !DILocalVariable(name: "buff", arg: 4, scope: !11735, file: !3, line: 738, type: !916)
!11745 = !DILocation(line: 738, column: 19, scope: !11735)
!11746 = !DILocalVariable(name: "type", arg: 5, scope: !11735, file: !3, line: 738, type: !1116)
!11747 = !DILocation(line: 738, column: 28, scope: !11735)
!11748 = !DILocation(line: 740, column: 15, scope: !11735)
!11749 = !DILocation(line: 740, column: 30, scope: !11735)
!11750 = !DILocation(line: 740, column: 56, scope: !11735)
!11751 = !DILocation(line: 740, column: 62, scope: !11735)
!11752 = !DILocation(line: 740, column: 21, scope: !11735)
!11753 = !DILocation(line: 740, column: 77, scope: !11735)
!11754 = !DILocation(line: 740, column: 2, scope: !11735)
!11755 = !DILocation(line: 741, column: 15, scope: !11735)
!11756 = !DILocation(line: 741, column: 30, scope: !11735)
!11757 = !DILocation(line: 741, column: 57, scope: !11735)
!11758 = !DILocation(line: 741, column: 63, scope: !11735)
!11759 = !DILocation(line: 741, column: 21, scope: !11735)
!11760 = !DILocation(line: 741, column: 78, scope: !11735)
!11761 = !DILocation(line: 741, column: 2, scope: !11735)
!11762 = !DILocation(line: 742, column: 7, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 742, column: 6)
!11764 = !DILocation(line: 742, column: 13, scope: !11763)
!11765 = !DILocation(line: 742, column: 6, scope: !11735)
!11766 = !DILocation(line: 743, column: 16, scope: !11763)
!11767 = !DILocation(line: 743, column: 31, scope: !11763)
!11768 = !DILocation(line: 743, column: 65, scope: !11763)
!11769 = !DILocation(line: 743, column: 71, scope: !11763)
!11770 = !DILocation(line: 743, column: 22, scope: !11763)
!11771 = !DILocation(line: 743, column: 86, scope: !11763)
!11772 = !DILocation(line: 743, column: 3, scope: !11763)
!11773 = !DILocation(line: 744, column: 14, scope: !11735)
!11774 = !DILocation(line: 744, column: 29, scope: !11735)
!11775 = !DILocation(line: 744, column: 63, scope: !11735)
!11776 = !DILocation(line: 744, column: 69, scope: !11735)
!11777 = !DILocation(line: 744, column: 20, scope: !11735)
!11778 = !DILocation(line: 744, column: 84, scope: !11735)
!11779 = !DILocation(line: 744, column: 2, scope: !11735)
!11780 = !DILocation(line: 745, column: 14, scope: !11735)
!11781 = !DILocation(line: 745, column: 29, scope: !11735)
!11782 = !DILocation(line: 745, column: 56, scope: !11735)
!11783 = !DILocation(line: 745, column: 62, scope: !11735)
!11784 = !DILocation(line: 745, column: 20, scope: !11735)
!11785 = !DILocation(line: 745, column: 77, scope: !11735)
!11786 = !DILocation(line: 745, column: 83, scope: !11735)
!11787 = !DILocation(line: 745, column: 2, scope: !11735)
!11788 = !DILocation(line: 746, column: 14, scope: !11735)
!11789 = !DILocation(line: 746, column: 29, scope: !11735)
!11790 = !DILocation(line: 746, column: 57, scope: !11735)
!11791 = !DILocation(line: 746, column: 63, scope: !11735)
!11792 = !DILocation(line: 746, column: 20, scope: !11735)
!11793 = !DILocation(line: 746, column: 2, scope: !11735)
!11794 = !DILocation(line: 747, column: 6, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 747, column: 6)
!11796 = !DILocation(line: 747, column: 12, scope: !11795)
!11797 = !DILocation(line: 747, column: 6, scope: !11735)
!11798 = !DILocalVariable(name: "cipher_type", scope: !11799, file: !3, line: 748, type: !7)
!11799 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 747, column: 21)
!11800 = !DILocation(line: 748, column: 7, scope: !11799)
!11801 = !DILocalVariable(name: "cipher_length", scope: !11799, file: !3, line: 748, type: !7)
!11802 = !DILocation(line: 748, column: 20, scope: !11799)
!11803 = !DILocation(line: 749, column: 7, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11799, file: !3, line: 749, column: 7)
!11805 = !DILocation(line: 749, column: 7, scope: !11799)
!11806 = !DILocation(line: 750, column: 18, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11804, file: !3, line: 749, column: 17)
!11808 = !DILocation(line: 750, column: 24, scope: !11807)
!11809 = !DILocation(line: 750, column: 16, scope: !11807)
!11810 = !DILocation(line: 751, column: 8, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 751, column: 8)
!11812 = !DILocation(line: 751, column: 20, scope: !11811)
!11813 = !DILocation(line: 751, column: 43, scope: !11811)
!11814 = !DILocation(line: 752, column: 8, scope: !11811)
!11815 = !DILocation(line: 752, column: 20, scope: !11811)
!11816 = !DILocation(line: 751, column: 8, scope: !11807)
!11817 = !DILocation(line: 753, column: 19, scope: !11811)
!11818 = !DILocation(line: 753, column: 5, scope: !11811)
!11819 = !DILocation(line: 754, column: 13, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11811, file: !3, line: 754, column: 13)
!11821 = !DILocation(line: 754, column: 25, scope: !11820)
!11822 = !DILocation(line: 754, column: 13, scope: !11811)
!11823 = !DILocation(line: 755, column: 19, scope: !11820)
!11824 = !DILocation(line: 755, column: 5, scope: !11820)
!11825 = !DILocation(line: 756, column: 13, scope: !11826)
!11826 = distinct !DILexicalBlock(scope: !11820, file: !3, line: 756, column: 13)
!11827 = !DILocation(line: 756, column: 19, scope: !11826)
!11828 = !DILocation(line: 756, column: 41, scope: !11826)
!11829 = !DILocation(line: 756, column: 64, scope: !11826)
!11830 = !DILocation(line: 757, column: 6, scope: !11826)
!11831 = !DILocation(line: 757, column: 12, scope: !11826)
!11832 = !DILocation(line: 757, column: 34, scope: !11826)
!11833 = !DILocation(line: 756, column: 13, scope: !11820)
!11834 = !DILocation(line: 758, column: 19, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11826, file: !3, line: 757, column: 59)
!11836 = !DILocation(line: 758, column: 25, scope: !11835)
!11837 = !DILocation(line: 758, column: 17, scope: !11835)
!11838 = !DILocation(line: 759, column: 19, scope: !11835)
!11839 = !DILocation(line: 760, column: 4, scope: !11835)
!11840 = !DILocation(line: 761, column: 17, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11826, file: !3, line: 760, column: 11)
!11842 = !DILocation(line: 762, column: 19, scope: !11841)
!11843 = !DILocation(line: 764, column: 3, scope: !11807)
!11844 = !DILocation(line: 765, column: 18, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11804, file: !3, line: 764, column: 10)
!11846 = !DILocation(line: 765, column: 24, scope: !11845)
!11847 = !DILocation(line: 765, column: 16, scope: !11845)
!11848 = !DILocation(line: 766, column: 8, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11845, file: !3, line: 766, column: 8)
!11850 = !DILocation(line: 766, column: 20, scope: !11849)
!11851 = !DILocation(line: 766, column: 43, scope: !11849)
!11852 = !DILocation(line: 767, column: 8, scope: !11849)
!11853 = !DILocation(line: 767, column: 20, scope: !11849)
!11854 = !DILocation(line: 766, column: 8, scope: !11845)
!11855 = !DILocation(line: 768, column: 19, scope: !11849)
!11856 = !DILocation(line: 768, column: 5, scope: !11849)
!11857 = !DILocation(line: 769, column: 13, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11849, file: !3, line: 769, column: 13)
!11859 = !DILocation(line: 769, column: 25, scope: !11858)
!11860 = !DILocation(line: 769, column: 13, scope: !11849)
!11861 = !DILocation(line: 770, column: 19, scope: !11858)
!11862 = !DILocation(line: 770, column: 5, scope: !11858)
!11863 = !DILocation(line: 771, column: 13, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11858, file: !3, line: 771, column: 13)
!11865 = !DILocation(line: 771, column: 19, scope: !11864)
!11866 = !DILocation(line: 771, column: 38, scope: !11864)
!11867 = !DILocation(line: 771, column: 61, scope: !11864)
!11868 = !DILocation(line: 772, column: 6, scope: !11864)
!11869 = !DILocation(line: 772, column: 12, scope: !11864)
!11870 = !DILocation(line: 772, column: 31, scope: !11864)
!11871 = !DILocation(line: 771, column: 13, scope: !11858)
!11872 = !DILocation(line: 773, column: 19, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11864, file: !3, line: 772, column: 56)
!11874 = !DILocation(line: 773, column: 25, scope: !11873)
!11875 = !DILocation(line: 773, column: 17, scope: !11873)
!11876 = !DILocation(line: 774, column: 19, scope: !11873)
!11877 = !DILocation(line: 775, column: 4, scope: !11873)
!11878 = !DILocation(line: 776, column: 17, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11864, file: !3, line: 775, column: 11)
!11880 = !DILocation(line: 777, column: 19, scope: !11879)
!11881 = !DILocation(line: 781, column: 15, scope: !11799)
!11882 = !DILocation(line: 781, column: 30, scope: !11799)
!11883 = !DILocation(line: 781, column: 64, scope: !11799)
!11884 = !DILocation(line: 781, column: 70, scope: !11799)
!11885 = !DILocation(line: 781, column: 21, scope: !11799)
!11886 = !DILocation(line: 782, column: 8, scope: !11799)
!11887 = !DILocation(line: 781, column: 3, scope: !11799)
!11888 = !DILocation(line: 783, column: 15, scope: !11799)
!11889 = !DILocation(line: 783, column: 30, scope: !11799)
!11890 = !DILocation(line: 783, column: 66, scope: !11799)
!11891 = !DILocation(line: 783, column: 72, scope: !11799)
!11892 = !DILocation(line: 783, column: 21, scope: !11799)
!11893 = !DILocation(line: 784, column: 8, scope: !11799)
!11894 = !DILocation(line: 783, column: 3, scope: !11799)
!11895 = !DILocation(line: 785, column: 2, scope: !11799)
!11896 = !DILocation(line: 786, column: 15, scope: !11735)
!11897 = !DILocation(line: 786, column: 30, scope: !11735)
!11898 = !DILocation(line: 786, column: 57, scope: !11735)
!11899 = !DILocation(line: 786, column: 63, scope: !11735)
!11900 = !DILocation(line: 786, column: 21, scope: !11735)
!11901 = !DILocation(line: 786, column: 2, scope: !11735)
!11902 = !DILocation(line: 787, column: 14, scope: !11735)
!11903 = !DILocation(line: 787, column: 29, scope: !11735)
!11904 = !DILocation(line: 787, column: 57, scope: !11735)
!11905 = !DILocation(line: 787, column: 63, scope: !11735)
!11906 = !DILocation(line: 787, column: 20, scope: !11735)
!11907 = !DILocation(line: 787, column: 2, scope: !11735)
!11908 = !DILocation(line: 788, column: 6, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 788, column: 6)
!11910 = !DILocation(line: 788, column: 12, scope: !11909)
!11911 = !DILocation(line: 788, column: 32, scope: !11909)
!11912 = !DILocation(line: 788, column: 38, scope: !11909)
!11913 = !DILocation(line: 788, column: 29, scope: !11909)
!11914 = !DILocation(line: 788, column: 6, scope: !11735)
!11915 = !DILocation(line: 789, column: 16, scope: !11909)
!11916 = !DILocation(line: 789, column: 31, scope: !11909)
!11917 = !DILocation(line: 789, column: 58, scope: !11909)
!11918 = !DILocation(line: 789, column: 64, scope: !11909)
!11919 = !DILocation(line: 789, column: 22, scope: !11909)
!11920 = !DILocation(line: 789, column: 3, scope: !11909)
!11921 = !DILocation(line: 790, column: 27, scope: !11735)
!11922 = !DILocation(line: 790, column: 33, scope: !11735)
!11923 = !DILocation(line: 790, column: 2, scope: !11735)
!11924 = !DILocation(line: 790, column: 8, scope: !11735)
!11925 = !DILocation(line: 790, column: 25, scope: !11735)
!11926 = !DILocation(line: 791, column: 6, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 791, column: 6)
!11928 = !DILocation(line: 791, column: 12, scope: !11927)
!11929 = !DILocation(line: 791, column: 28, scope: !11927)
!11930 = !DILocation(line: 791, column: 34, scope: !11927)
!11931 = !DILocation(line: 791, column: 44, scope: !11927)
!11932 = !DILocation(line: 791, column: 58, scope: !11927)
!11933 = !DILocation(line: 791, column: 25, scope: !11927)
!11934 = !DILocation(line: 791, column: 6, scope: !11735)
!11935 = !DILocation(line: 792, column: 3, scope: !11927)
!11936 = !DILocation(line: 792, column: 9, scope: !11927)
!11937 = !DILocation(line: 792, column: 21, scope: !11927)
!11938 = !DILocation(line: 794, column: 3, scope: !11927)
!11939 = !DILocation(line: 794, column: 9, scope: !11927)
!11940 = !DILocation(line: 794, column: 22, scope: !11927)
!11941 = !DILocation(line: 795, column: 2, scope: !11735)
!11942 = !DILocation(line: 795, column: 8, scope: !11735)
!11943 = !DILocation(line: 795, column: 20, scope: !11735)
!11944 = !DILocation(line: 796, column: 23, scope: !11735)
!11945 = !DILocation(line: 796, column: 2, scope: !11735)
!11946 = !DILocation(line: 796, column: 8, scope: !11735)
!11947 = !DILocation(line: 796, column: 20, scope: !11735)
!11948 = !DILocation(line: 797, column: 1, scope: !11735)
!11949 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !11578, file: !11578, line: 646, type: !11579, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11950 = !DILocalVariable(name: "__ret", scope: !11951, file: !11578, line: 648, type: !517)
!11951 = distinct !DILexicalBlock(scope: !11949, file: !11578, line: 648, column: 9)
!11952 = !DILocation(line: 648, column: 9, scope: !11951)
!11953 = !DILocalVariable(name: "__edi", scope: !11951, file: !11578, line: 648, type: !517)
!11954 = !DILocalVariable(name: "__esi", scope: !11951, file: !11578, line: 648, type: !517)
!11955 = !DILocalVariable(name: "__edx", scope: !11951, file: !11578, line: 648, type: !517)
!11956 = !DILocalVariable(name: "__ecx", scope: !11951, file: !11578, line: 648, type: !517)
!11957 = !DILocalVariable(name: "__eax", scope: !11951, file: !11578, line: 648, type: !517)
!11958 = !DILocation(line: 648, column: 9, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11960, file: !11578, line: 648, column: 9)
!11960 = distinct !DILexicalBlock(scope: !11951, file: !11578, line: 648, column: 9)
!11961 = !{i32 -2145645387, i32 -2145643072, i32 -2145642838, i32 -2145642787, i32 -2145642759, i32 -2145642734, i32 -2145643050, i32 -2145643037, i32 -2145642599, i32 -2145642480, i32 -2145642945, i32 -2145642918, i32 -2145642890, i32 -2145642860}
!11962 = !DILocalVariable(name: "__mask", scope: !11963, file: !11578, line: 648, type: !517)
!11963 = distinct !DILexicalBlock(scope: !11959, file: !11578, line: 648, column: 9)
!11964 = !DILocation(line: 648, column: 9, scope: !11963)
!11965 = !DILocation(line: 648, column: 9, scope: !11960)
!11966 = !DILocation(line: 648, column: 2, scope: !11949)
!11967 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !11578, file: !11578, line: 656, type: !4141, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11968 = !DILocalVariable(name: "__edi", scope: !11969, file: !11578, line: 658, type: !517)
!11969 = distinct !DILexicalBlock(scope: !11967, file: !11578, line: 658, column: 2)
!11970 = !DILocation(line: 658, column: 2, scope: !11969)
!11971 = !DILocalVariable(name: "__esi", scope: !11969, file: !11578, line: 658, type: !517)
!11972 = !DILocalVariable(name: "__edx", scope: !11969, file: !11578, line: 658, type: !517)
!11973 = !DILocalVariable(name: "__ecx", scope: !11969, file: !11578, line: 658, type: !517)
!11974 = !DILocalVariable(name: "__eax", scope: !11969, file: !11578, line: 658, type: !517)
!11975 = !{i32 -2145638293, i32 -2145637561, i32 -2145637327, i32 -2145637276, i32 -2145637248, i32 -2145637223, i32 -2145637539, i32 -2145637526, i32 -2145637088, i32 -2145636969, i32 -2145637434, i32 -2145637407, i32 -2145637379, i32 -2145637349}
!11976 = !DILocation(line: 659, column: 1, scope: !11967)
!11977 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !11578, file: !11578, line: 651, type: !11978, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11978 = !DISubroutineType(types: !11979)
!11979 = !{null, !517}
!11980 = !DILocalVariable(name: "f", arg: 1, scope: !11977, file: !11578, line: 651, type: !517)
!11981 = !DILocation(line: 651, column: 65, scope: !11977)
!11982 = !DILocalVariable(name: "__edi", scope: !11983, file: !11578, line: 653, type: !517)
!11983 = distinct !DILexicalBlock(scope: !11977, file: !11578, line: 653, column: 2)
!11984 = !DILocation(line: 653, column: 2, scope: !11983)
!11985 = !DILocalVariable(name: "__esi", scope: !11983, file: !11578, line: 653, type: !517)
!11986 = !DILocalVariable(name: "__edx", scope: !11983, file: !11578, line: 653, type: !517)
!11987 = !DILocalVariable(name: "__ecx", scope: !11983, file: !11578, line: 653, type: !517)
!11988 = !DILocalVariable(name: "__eax", scope: !11983, file: !11578, line: 653, type: !517)
!11989 = !{i32 -2145640920, i32 -2145640170, i32 -2145639936, i32 -2145639885, i32 -2145639857, i32 -2145639832, i32 -2145640148, i32 -2145640135, i32 -2145639697, i32 -2145639578, i32 -2145640043, i32 -2145640016, i32 -2145639988, i32 -2145639958}
!11990 = !DILocation(line: 654, column: 1, scope: !11977)
!11991 = distinct !DISubprogram(name: "atmel_writeAR", scope: !3, file: !3, line: 4137, type: !9647, scopeLine: 4138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!11992 = !DILocalVariable(name: "dev", arg: 1, scope: !11991, file: !3, line: 4137, type: !495)
!11993 = !DILocation(line: 4137, column: 46, scope: !11991)
!11994 = !DILocalVariable(name: "data", arg: 2, scope: !11991, file: !3, line: 4137, type: !916)
!11995 = !DILocation(line: 4137, column: 55, scope: !11991)
!11996 = !DILocalVariable(name: "i", scope: !11991, file: !3, line: 4139, type: !7)
!11997 = !DILocation(line: 4139, column: 6, scope: !11991)
!11998 = !DILocation(line: 4140, column: 7, scope: !11991)
!11999 = !DILocation(line: 4140, column: 13, scope: !11991)
!12000 = !DILocation(line: 4140, column: 18, scope: !11991)
!12001 = !DILocation(line: 4140, column: 28, scope: !11991)
!12002 = !DILocation(line: 4140, column: 2, scope: !11991)
!12003 = !DILocation(line: 4142, column: 9, scope: !12004)
!12004 = distinct !DILexicalBlock(scope: !11991, file: !3, line: 4142, column: 2)
!12005 = !DILocation(line: 4142, column: 7, scope: !12004)
!12006 = !DILocation(line: 4142, column: 14, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12004, file: !3, line: 4142, column: 2)
!12008 = !DILocation(line: 4142, column: 26, scope: !12007)
!12009 = !DILocation(line: 4142, column: 31, scope: !12007)
!12010 = !DILocation(line: 4142, column: 41, scope: !12007)
!12011 = !DILocation(line: 4142, column: 22, scope: !12007)
!12012 = !DILocation(line: 4142, column: 19, scope: !12007)
!12013 = !DILocation(line: 4142, column: 47, scope: !12007)
!12014 = !DILocation(line: 4142, column: 50, scope: !12007)
!12015 = !DILocation(line: 4142, column: 52, scope: !12007)
!12016 = !DILocation(line: 0, scope: !12007)
!12017 = !DILocation(line: 4142, column: 2, scope: !12004)
!12018 = !DILocation(line: 4143, column: 8, scope: !12007)
!12019 = !DILocation(line: 4143, column: 14, scope: !12007)
!12020 = !DILocation(line: 4143, column: 19, scope: !12007)
!12021 = !DILocation(line: 4143, column: 29, scope: !12007)
!12022 = !DILocation(line: 4143, column: 3, scope: !12007)
!12023 = !DILocation(line: 4142, column: 59, scope: !12007)
!12024 = !DILocation(line: 4142, column: 2, scope: !12007)
!12025 = distinct !{!12025, !12017, !12026}
!12026 = !DILocation(line: 4143, column: 33, scope: !12004)
!12027 = !DILocation(line: 4144, column: 1, scope: !11991)
!12028 = distinct !DISubprogram(name: "atmel_write8", scope: !3, file: !3, line: 641, type: !12029, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12029 = !DISubroutineType(types: !12030)
!12030 = !{null, !495, !916, !1116}
!12031 = !DILocalVariable(name: "dev", arg: 1, scope: !12028, file: !3, line: 641, type: !495)
!12032 = !DILocation(line: 641, column: 52, scope: !12028)
!12033 = !DILocalVariable(name: "offset", arg: 2, scope: !12028, file: !3, line: 641, type: !916)
!12034 = !DILocation(line: 641, column: 61, scope: !12028)
!12035 = !DILocalVariable(name: "data", arg: 3, scope: !12028, file: !3, line: 641, type: !1116)
!12036 = !DILocation(line: 641, column: 72, scope: !12028)
!12037 = !DILocation(line: 643, column: 7, scope: !12028)
!12038 = !DILocation(line: 643, column: 13, scope: !12028)
!12039 = !DILocation(line: 643, column: 18, scope: !12028)
!12040 = !DILocation(line: 643, column: 30, scope: !12028)
!12041 = !DILocation(line: 643, column: 28, scope: !12028)
!12042 = !DILocation(line: 643, column: 2, scope: !12028)
!12043 = !DILocation(line: 644, column: 1, scope: !12028)
!12044 = distinct !DISubprogram(name: "outw", scope: !12045, file: !12045, line: 335, type: !12046, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12045 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!12046 = !DISubroutineType(types: !12047)
!12047 = !{null, !611, !7}
!12048 = !DILocalVariable(name: "value", arg: 1, scope: !12044, file: !12045, line: 335, type: !611)
!12049 = !DILocation(line: 335, column: 1, scope: !12044)
!12050 = !DILocalVariable(name: "port", arg: 2, scope: !12044, file: !12045, line: 335, type: !7)
!12051 = !{i32 -2142391902}
!12052 = distinct !DISubprogram(name: "inw", scope: !12045, file: !12045, line: 335, type: !12053, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12053 = !DISubroutineType(types: !12054)
!12054 = !{!611, !7}
!12055 = !DILocalVariable(name: "port", arg: 1, scope: !12052, file: !12045, line: 335, type: !7)
!12056 = !DILocation(line: 335, column: 1, scope: !12052)
!12057 = !DILocalVariable(name: "value", scope: !12052, file: !12045, line: 335, type: !611)
!12058 = !{i32 -2142391700}
!12059 = distinct !DISubprogram(name: "outb", scope: !12045, file: !12045, line: 334, type: !12060, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12060 = !DISubroutineType(types: !12061)
!12061 = !{null, !632, !7}
!12062 = !DILocalVariable(name: "value", arg: 1, scope: !12059, file: !12045, line: 334, type: !632)
!12063 = !DILocation(line: 334, column: 1, scope: !12059)
!12064 = !DILocalVariable(name: "port", arg: 2, scope: !12059, file: !12045, line: 334, type: !7)
!12065 = !{i32 -2142394645}
!12066 = distinct !DISubprogram(name: "atmel_wmem16", scope: !3, file: !3, line: 674, type: !8624, scopeLine: 675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12067 = !DILocalVariable(name: "priv", arg: 1, scope: !12066, file: !3, line: 674, type: !8587)
!12068 = !DILocation(line: 674, column: 55, scope: !12066)
!12069 = !DILocalVariable(name: "pos", arg: 2, scope: !12066, file: !3, line: 674, type: !916)
!12070 = !DILocation(line: 674, column: 65, scope: !12066)
!12071 = !DILocalVariable(name: "data", arg: 3, scope: !12066, file: !3, line: 674, type: !916)
!12072 = !DILocation(line: 674, column: 74, scope: !12066)
!12073 = !DILocation(line: 676, column: 16, scope: !12066)
!12074 = !DILocation(line: 676, column: 22, scope: !12066)
!12075 = !DILocation(line: 676, column: 27, scope: !12066)
!12076 = !DILocation(line: 676, column: 2, scope: !12066)
!12077 = !DILocation(line: 677, column: 16, scope: !12066)
!12078 = !DILocation(line: 677, column: 22, scope: !12066)
!12079 = !DILocation(line: 677, column: 31, scope: !12066)
!12080 = !DILocation(line: 677, column: 2, scope: !12066)
!12081 = !DILocation(line: 678, column: 1, scope: !12066)
!12082 = distinct !DISubprogram(name: "atmel_tx", scope: !3, file: !3, line: 631, type: !12083, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12083 = !DISubroutineType(types: !12084)
!12084 = !{!916, !8587, !916, !916}
!12085 = !DILocalVariable(name: "priv", arg: 1, scope: !12082, file: !3, line: 631, type: !8587)
!12086 = !DILocation(line: 631, column: 50, scope: !12082)
!12087 = !DILocalVariable(name: "offset", arg: 2, scope: !12082, file: !3, line: 631, type: !916)
!12088 = !DILocation(line: 631, column: 60, scope: !12082)
!12089 = !DILocalVariable(name: "desc", arg: 3, scope: !12082, file: !3, line: 631, type: !916)
!12090 = !DILocation(line: 631, column: 72, scope: !12082)
!12091 = !DILocation(line: 633, column: 9, scope: !12082)
!12092 = !DILocation(line: 633, column: 15, scope: !12082)
!12093 = !DILocation(line: 633, column: 25, scope: !12082)
!12094 = !DILocation(line: 633, column: 65, scope: !12082)
!12095 = !DILocation(line: 633, column: 63, scope: !12082)
!12096 = !DILocation(line: 633, column: 37, scope: !12082)
!12097 = !DILocation(line: 633, column: 73, scope: !12082)
!12098 = !DILocation(line: 633, column: 71, scope: !12082)
!12099 = !DILocation(line: 633, column: 2, scope: !12082)
!12100 = distinct !DISubprogram(name: "atmel_wmem8", scope: !3, file: !3, line: 662, type: !8624, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12101 = !DILocalVariable(name: "priv", arg: 1, scope: !12100, file: !3, line: 662, type: !8587)
!12102 = !DILocation(line: 662, column: 54, scope: !12100)
!12103 = !DILocalVariable(name: "pos", arg: 2, scope: !12100, file: !3, line: 662, type: !916)
!12104 = !DILocation(line: 662, column: 64, scope: !12100)
!12105 = !DILocalVariable(name: "data", arg: 3, scope: !12100, file: !3, line: 662, type: !916)
!12106 = !DILocation(line: 662, column: 73, scope: !12100)
!12107 = !DILocation(line: 664, column: 16, scope: !12100)
!12108 = !DILocation(line: 664, column: 22, scope: !12100)
!12109 = !DILocation(line: 664, column: 27, scope: !12100)
!12110 = !DILocation(line: 664, column: 2, scope: !12100)
!12111 = !DILocation(line: 665, column: 15, scope: !12100)
!12112 = !DILocation(line: 665, column: 21, scope: !12100)
!12113 = !DILocation(line: 665, column: 30, scope: !12100)
!12114 = !DILocation(line: 665, column: 2, scope: !12100)
!12115 = !DILocation(line: 666, column: 1, scope: !12100)
!12116 = distinct !DISubprogram(name: "atmel_wmem32", scope: !3, file: !3, line: 4216, type: !12117, scopeLine: 4217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12117 = !DISubroutineType(types: !12118)
!12118 = !{null, !8587, !916, !1308}
!12119 = !DILocalVariable(name: "priv", arg: 1, scope: !12116, file: !3, line: 4216, type: !8587)
!12120 = !DILocation(line: 4216, column: 48, scope: !12116)
!12121 = !DILocalVariable(name: "pos", arg: 2, scope: !12116, file: !3, line: 4216, type: !916)
!12122 = !DILocation(line: 4216, column: 58, scope: !12116)
!12123 = !DILocalVariable(name: "data", arg: 3, scope: !12116, file: !3, line: 4216, type: !1308)
!12124 = !DILocation(line: 4216, column: 67, scope: !12116)
!12125 = !DILocation(line: 4218, column: 16, scope: !12116)
!12126 = !DILocation(line: 4218, column: 22, scope: !12116)
!12127 = !DILocation(line: 4218, column: 27, scope: !12116)
!12128 = !DILocation(line: 4218, column: 2, scope: !12116)
!12129 = !DILocation(line: 4219, column: 16, scope: !12116)
!12130 = !DILocation(line: 4219, column: 22, scope: !12116)
!12131 = !DILocation(line: 4219, column: 31, scope: !12116)
!12132 = !DILocation(line: 4219, column: 2, scope: !12116)
!12133 = !DILocation(line: 4220, column: 16, scope: !12116)
!12134 = !DILocation(line: 4220, column: 22, scope: !12116)
!12135 = !DILocation(line: 4220, column: 31, scope: !12116)
!12136 = !DILocation(line: 4220, column: 36, scope: !12116)
!12137 = !DILocation(line: 4220, column: 2, scope: !12116)
!12138 = !DILocation(line: 4221, column: 1, scope: !12116)
!12139 = distinct !DISubprogram(name: "IS_ERR", scope: !12140, file: !12140, line: 34, type: !12141, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12140 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!12141 = !DISubroutineType(types: !12142)
!12142 = !{!1093, !3590}
!12143 = !DILocalVariable(name: "ptr", arg: 1, scope: !12139, file: !12140, line: 34, type: !3590)
!12144 = !DILocation(line: 34, column: 60, scope: !12139)
!12145 = !DILocation(line: 36, column: 9, scope: !12139)
!12146 = !DILocation(line: 36, column: 2, scope: !12139)
!12147 = distinct !DISubprogram(name: "PTR_ERR", scope: !12140, file: !12140, line: 29, type: !12148, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12148 = !DISubroutineType(types: !12149)
!12149 = !{!1319, !3590}
!12150 = !DILocalVariable(name: "ptr", arg: 1, scope: !12147, file: !12140, line: 29, type: !3590)
!12151 = !DILocation(line: 29, column: 61, scope: !12147)
!12152 = !DILocation(line: 31, column: 16, scope: !12147)
!12153 = !DILocation(line: 31, column: 9, scope: !12147)
!12154 = !DILocation(line: 31, column: 2, scope: !12147)
!12155 = distinct !DISubprogram(name: "copy_overflow", scope: !10984, file: !10984, line: 132, type: !12156, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12156 = !DISubroutineType(types: !12157)
!12157 = !{null, !7, !517}
!12158 = !DILocalVariable(name: "size", arg: 1, scope: !12155, file: !10984, line: 132, type: !7)
!12159 = !DILocation(line: 132, column: 38, scope: !12155)
!12160 = !DILocalVariable(name: "count", arg: 2, scope: !12155, file: !10984, line: 132, type: !517)
!12161 = !DILocation(line: 132, column: 58, scope: !12155)
!12162 = !DILocalVariable(name: "__ret_warn_on", scope: !12163, file: !10984, line: 134, type: !7)
!12163 = distinct !DILexicalBlock(scope: !12155, file: !10984, line: 134, column: 2)
!12164 = !DILocation(line: 134, column: 2, scope: !12163)
!12165 = !DILocation(line: 134, column: 2, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12163, file: !10984, line: 134, column: 2)
!12167 = !DILocation(line: 134, column: 2, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12166, file: !10984, line: 134, column: 2)
!12169 = !DILocation(line: 134, column: 2, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12168, file: !10984, line: 134, column: 2)
!12171 = !DILocation(line: 134, column: 2, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12168, file: !10984, line: 134, column: 2)
!12173 = !DILocation(line: 134, column: 2, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12172, file: !10984, line: 134, column: 2)
!12175 = !DILocation(line: 134, column: 2, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12172, file: !10984, line: 134, column: 2)
!12177 = !{i32 -2145555795, i32 -2145555766, i32 -2145555720, i32 -2145555662, i32 -2145555608, i32 -2145555554, i32 -2145555499, i32 -2145555468}
!12178 = !DILocation(line: 134, column: 2, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12172, file: !10984, line: 134, column: 2)
!12180 = !{i32 -2145555048, i32 -2145555041, i32 -2145554989, i32 -2145554958, i32 -2145554928}
!12181 = !DILocation(line: 134, column: 2, scope: !12182)
!12182 = distinct !DILexicalBlock(scope: !12172, file: !10984, line: 134, column: 2)
!12183 = !DILocation(line: 134, column: 2, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12168, file: !10984, line: 134, column: 2)
!12185 = !DILocation(line: 135, column: 1, scope: !12155)
!12186 = distinct !DISubprogram(name: "check_object_size", scope: !10984, file: !10984, line: 122, type: !12187, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12187 = !DISubroutineType(types: !12188)
!12188 = !{null, !3590, !517, !1093}
!12189 = !DILocalVariable(name: "ptr", arg: 1, scope: !12186, file: !10984, line: 122, type: !3590)
!12190 = !DILocation(line: 122, column: 50, scope: !12186)
!12191 = !DILocalVariable(name: "n", arg: 2, scope: !12186, file: !10984, line: 122, type: !517)
!12192 = !DILocation(line: 122, column: 69, scope: !12186)
!12193 = !DILocalVariable(name: "to_user", arg: 3, scope: !12186, file: !10984, line: 123, type: !1093)
!12194 = !DILocation(line: 123, column: 15, scope: !12186)
!12195 = !DILocation(line: 124, column: 3, scope: !12186)
!12196 = distinct !DISubprogram(name: "atmel_clear_gcr", scope: !3, file: !3, line: 4187, type: !9647, scopeLine: 4188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12197 = !DILocalVariable(name: "dev", arg: 1, scope: !12196, file: !3, line: 4187, type: !495)
!12198 = !DILocation(line: 4187, column: 48, scope: !12196)
!12199 = !DILocalVariable(name: "mask", arg: 2, scope: !12196, file: !3, line: 4187, type: !916)
!12200 = !DILocation(line: 4187, column: 57, scope: !12196)
!12201 = !DILocation(line: 4189, column: 11, scope: !12196)
!12202 = !DILocation(line: 4189, column: 16, scope: !12196)
!12203 = !DILocation(line: 4189, column: 26, scope: !12196)
!12204 = !DILocation(line: 4189, column: 7, scope: !12196)
!12205 = !DILocation(line: 4189, column: 36, scope: !12196)
!12206 = !DILocation(line: 4189, column: 35, scope: !12196)
!12207 = !DILocation(line: 4189, column: 33, scope: !12196)
!12208 = !DILocation(line: 4189, column: 42, scope: !12196)
!12209 = !DILocation(line: 4189, column: 47, scope: !12196)
!12210 = !DILocation(line: 4189, column: 57, scope: !12196)
!12211 = !DILocation(line: 4189, column: 2, scope: !12196)
!12212 = !DILocation(line: 4190, column: 1, scope: !12196)
!12213 = distinct !DISubprogram(name: "atmel_lock_mac", scope: !3, file: !3, line: 4192, type: !12214, scopeLine: 4193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12214 = !DISubroutineType(types: !12215)
!12215 = !{!7, !8587}
!12216 = !DILocalVariable(name: "priv", arg: 1, scope: !12213, file: !3, line: 4192, type: !8587)
!12217 = !DILocation(line: 4192, column: 49, scope: !12213)
!12218 = !DILocalVariable(name: "i", scope: !12213, file: !3, line: 4194, type: !7)
!12219 = !DILocation(line: 4194, column: 6, scope: !12213)
!12220 = !DILocalVariable(name: "j", scope: !12213, file: !3, line: 4194, type: !7)
!12221 = !DILocation(line: 4194, column: 9, scope: !12213)
!12222 = !DILocation(line: 4194, column: 2, scope: !12213)
!12223 = !DILabel(scope: !12213, name: "retry", file: !3, line: 4195)
!12224 = !DILocation(line: 4195, column: 2, scope: !12213)
!12225 = !DILocation(line: 4196, column: 9, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12213, file: !3, line: 4196, column: 2)
!12227 = !DILocation(line: 4196, column: 7, scope: !12226)
!12228 = !DILocation(line: 4196, column: 17, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12226, file: !3, line: 4196, column: 2)
!12230 = !DILocation(line: 4196, column: 2, scope: !12226)
!12231 = !DILocation(line: 4197, column: 20, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12233, file: !3, line: 4197, column: 7)
!12233 = distinct !DILexicalBlock(scope: !12229, file: !3, line: 4196, column: 25)
!12234 = !DILocation(line: 4197, column: 35, scope: !12232)
!12235 = !DILocation(line: 4197, column: 26, scope: !12232)
!12236 = !DILocation(line: 4197, column: 8, scope: !12232)
!12237 = !DILocation(line: 4197, column: 7, scope: !12233)
!12238 = !DILocation(line: 4198, column: 4, scope: !12232)
!12239 = !DILocation(line: 4199, column: 3, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !12241, file: !3, line: 4199, column: 3)
!12241 = distinct !DILexicalBlock(scope: !12242, file: !3, line: 4199, column: 3)
!12242 = distinct !DILexicalBlock(scope: !12243, file: !3, line: 4199, column: 3)
!12243 = distinct !DILexicalBlock(scope: !12233, file: !3, line: 4199, column: 3)
!12244 = !DILocation(line: 4200, column: 2, scope: !12233)
!12245 = !DILocation(line: 4196, column: 21, scope: !12229)
!12246 = !DILocation(line: 4196, column: 2, scope: !12229)
!12247 = distinct !{!12247, !12230, !12248}
!12248 = !DILocation(line: 4200, column: 2, scope: !12226)
!12249 = !DILocation(line: 4202, column: 7, scope: !12250)
!12250 = distinct !DILexicalBlock(scope: !12213, file: !3, line: 4202, column: 6)
!12251 = !DILocation(line: 4202, column: 6, scope: !12213)
!12252 = !DILocation(line: 4203, column: 3, scope: !12250)
!12253 = !DILocation(line: 4205, column: 14, scope: !12213)
!12254 = !DILocation(line: 4205, column: 29, scope: !12213)
!12255 = !DILocation(line: 4205, column: 20, scope: !12213)
!12256 = !DILocation(line: 4205, column: 2, scope: !12213)
!12257 = !DILocation(line: 4206, column: 18, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12213, file: !3, line: 4206, column: 6)
!12259 = !DILocation(line: 4206, column: 33, scope: !12258)
!12260 = !DILocation(line: 4206, column: 24, scope: !12258)
!12261 = !DILocation(line: 4206, column: 6, scope: !12258)
!12262 = !DILocation(line: 4206, column: 6, scope: !12213)
!12263 = !DILocation(line: 4207, column: 15, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12258, file: !3, line: 4206, column: 68)
!12265 = !DILocation(line: 4207, column: 30, scope: !12264)
!12266 = !DILocation(line: 4207, column: 21, scope: !12264)
!12267 = !DILocation(line: 4207, column: 3, scope: !12264)
!12268 = !DILocation(line: 4208, column: 9, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12264, file: !3, line: 4208, column: 7)
!12270 = !DILocation(line: 4208, column: 7, scope: !12264)
!12271 = !DILocation(line: 4209, column: 4, scope: !12269)
!12272 = !DILocation(line: 4210, column: 3, scope: !12264)
!12273 = !DILocation(line: 4213, column: 2, scope: !12213)
!12274 = !DILocation(line: 4214, column: 1, scope: !12213)
!12275 = distinct !DISubprogram(name: "atmel_rmem8", scope: !3, file: !3, line: 656, type: !12276, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12276 = !DISubroutineType(types: !12277)
!12277 = !{!1116, !8587, !916}
!12278 = !DILocalVariable(name: "priv", arg: 1, scope: !12275, file: !3, line: 656, type: !8587)
!12279 = !DILocation(line: 656, column: 52, scope: !12275)
!12280 = !DILocalVariable(name: "pos", arg: 2, scope: !12275, file: !3, line: 656, type: !916)
!12281 = !DILocation(line: 656, column: 62, scope: !12275)
!12282 = !DILocation(line: 658, column: 16, scope: !12275)
!12283 = !DILocation(line: 658, column: 22, scope: !12275)
!12284 = !DILocation(line: 658, column: 27, scope: !12275)
!12285 = !DILocation(line: 658, column: 2, scope: !12275)
!12286 = !DILocation(line: 659, column: 21, scope: !12275)
!12287 = !DILocation(line: 659, column: 27, scope: !12275)
!12288 = !DILocation(line: 659, column: 9, scope: !12275)
!12289 = !DILocation(line: 659, column: 2, scope: !12275)
!12290 = distinct !DISubprogram(name: "atmel_hi", scope: !3, file: !3, line: 616, type: !11589, scopeLine: 617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12291 = !DILocalVariable(name: "priv", arg: 1, scope: !12290, file: !3, line: 616, type: !8587)
!12292 = !DILocation(line: 616, column: 50, scope: !12290)
!12293 = !DILocalVariable(name: "offset", arg: 2, scope: !12290, file: !3, line: 616, type: !916)
!12294 = !DILocation(line: 616, column: 60, scope: !12290)
!12295 = !DILocation(line: 618, column: 9, scope: !12290)
!12296 = !DILocation(line: 618, column: 15, scope: !12290)
!12297 = !DILocation(line: 618, column: 32, scope: !12290)
!12298 = !DILocation(line: 618, column: 30, scope: !12290)
!12299 = !DILocation(line: 618, column: 2, scope: !12290)
!12300 = distinct !DISubprogram(name: "rx_done_irq", scope: !3, file: !3, line: 1051, type: !12301, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12301 = !DISubroutineType(types: !12302)
!12302 = !{null, !8587}
!12303 = !DILocalVariable(name: "priv", arg: 1, scope: !12300, file: !3, line: 1051, type: !8587)
!12304 = !DILocation(line: 1051, column: 47, scope: !12300)
!12305 = !DILocalVariable(name: "i", scope: !12300, file: !3, line: 1053, type: !7)
!12306 = !DILocation(line: 1053, column: 6, scope: !12300)
!12307 = !DILocalVariable(name: "header", scope: !12300, file: !3, line: 1054, type: !8589)
!12308 = !DILocation(line: 1054, column: 23, scope: !12300)
!12309 = !DILocation(line: 1056, column: 9, scope: !12310)
!12310 = distinct !DILexicalBlock(scope: !12300, file: !3, line: 1056, column: 2)
!12311 = !DILocation(line: 1056, column: 7, scope: !12310)
!12312 = !DILocation(line: 1057, column: 19, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12310, file: !3, line: 1056, column: 2)
!12314 = !DILocation(line: 1057, column: 34, scope: !12313)
!12315 = !DILocation(line: 1057, column: 62, scope: !12313)
!12316 = !DILocation(line: 1057, column: 68, scope: !12313)
!12317 = !DILocation(line: 1057, column: 25, scope: !12313)
!12318 = !DILocation(line: 1057, column: 7, scope: !12313)
!12319 = !DILocation(line: 1057, column: 83, scope: !12313)
!12320 = !DILocation(line: 1057, column: 105, scope: !12313)
!12321 = !DILocation(line: 1058, column: 8, scope: !12313)
!12322 = !DILocation(line: 1058, column: 12, scope: !12313)
!12323 = !DILocation(line: 1058, column: 18, scope: !12313)
!12324 = !DILocation(line: 1058, column: 28, scope: !12313)
!12325 = !DILocation(line: 1058, column: 10, scope: !12313)
!12326 = !DILocation(line: 0, scope: !12313)
!12327 = !DILocation(line: 1056, column: 2, scope: !12310)
!12328 = !DILocalVariable(name: "msdu_size", scope: !12329, file: !3, line: 1061, type: !916)
!12329 = distinct !DILexicalBlock(scope: !12313, file: !3, line: 1059, column: 12)
!12330 = !DILocation(line: 1061, column: 7, scope: !12329)
!12331 = !DILocalVariable(name: "rx_packet_loc", scope: !12329, file: !3, line: 1061, type: !916)
!12332 = !DILocation(line: 1061, column: 18, scope: !12329)
!12333 = !DILocalVariable(name: "frame_ctl", scope: !12329, file: !3, line: 1061, type: !916)
!12334 = !DILocation(line: 1061, column: 33, scope: !12329)
!12335 = !DILocalVariable(name: "seq_control", scope: !12329, file: !3, line: 1061, type: !916)
!12336 = !DILocation(line: 1061, column: 44, scope: !12329)
!12337 = !DILocalVariable(name: "status", scope: !12329, file: !3, line: 1062, type: !1116)
!12338 = !DILocation(line: 1062, column: 6, scope: !12329)
!12339 = !DILocation(line: 1062, column: 27, scope: !12329)
!12340 = !DILocation(line: 1062, column: 42, scope: !12329)
!12341 = !DILocation(line: 1062, column: 71, scope: !12329)
!12342 = !DILocation(line: 1062, column: 77, scope: !12329)
!12343 = !DILocation(line: 1062, column: 33, scope: !12329)
!12344 = !DILocation(line: 1062, column: 15, scope: !12329)
!12345 = !DILocalVariable(name: "crc", scope: !12329, file: !3, line: 1063, type: !1308)
!12346 = !DILocation(line: 1063, column: 7, scope: !12329)
!12347 = !DILocation(line: 1065, column: 7, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 1065, column: 7)
!12349 = !DILocation(line: 1065, column: 14, scope: !12348)
!12350 = !DILocation(line: 1065, column: 7, scope: !12329)
!12351 = !DILocation(line: 1066, column: 8, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12353, file: !3, line: 1066, column: 8)
!12353 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 1065, column: 36)
!12354 = !DILocation(line: 1066, column: 15, scope: !12352)
!12355 = !DILocation(line: 1066, column: 8, scope: !12353)
!12356 = !DILocation(line: 1067, column: 5, scope: !12352)
!12357 = !DILocation(line: 1067, column: 11, scope: !12352)
!12358 = !DILocation(line: 1067, column: 18, scope: !12352)
!12359 = !DILocation(line: 1067, column: 26, scope: !12352)
!12360 = !DILocation(line: 1067, column: 30, scope: !12352)
!12361 = !DILocation(line: 1069, column: 5, scope: !12352)
!12362 = !DILocation(line: 1069, column: 11, scope: !12352)
!12363 = !DILocation(line: 1069, column: 16, scope: !12352)
!12364 = !DILocation(line: 1069, column: 22, scope: !12352)
!12365 = !DILocation(line: 1069, column: 31, scope: !12352)
!12366 = !DILocation(line: 1070, column: 4, scope: !12353)
!12367 = !DILocation(line: 1073, column: 28, scope: !12329)
!12368 = !DILocation(line: 1073, column: 43, scope: !12329)
!12369 = !DILocation(line: 1073, column: 75, scope: !12329)
!12370 = !DILocation(line: 1073, column: 81, scope: !12329)
!12371 = !DILocation(line: 1073, column: 34, scope: !12329)
!12372 = !DILocation(line: 1073, column: 15, scope: !12329)
!12373 = !DILocation(line: 1073, column: 13, scope: !12329)
!12374 = !DILocation(line: 1074, column: 32, scope: !12329)
!12375 = !DILocation(line: 1074, column: 47, scope: !12329)
!12376 = !DILocation(line: 1074, column: 78, scope: !12329)
!12377 = !DILocation(line: 1074, column: 84, scope: !12329)
!12378 = !DILocation(line: 1074, column: 38, scope: !12329)
!12379 = !DILocation(line: 1074, column: 19, scope: !12329)
!12380 = !DILocation(line: 1074, column: 17, scope: !12329)
!12381 = !DILocation(line: 1076, column: 7, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 1076, column: 7)
!12383 = !DILocation(line: 1076, column: 17, scope: !12382)
!12384 = !DILocation(line: 1076, column: 7, scope: !12329)
!12385 = !DILocation(line: 1077, column: 4, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !12382, file: !3, line: 1076, column: 23)
!12387 = !DILocation(line: 1077, column: 10, scope: !12386)
!12388 = !DILocation(line: 1077, column: 15, scope: !12386)
!12389 = !DILocation(line: 1077, column: 21, scope: !12386)
!12390 = !DILocation(line: 1077, column: 30, scope: !12386)
!12391 = !DILocation(line: 1078, column: 4, scope: !12386)
!12392 = !DILocation(line: 1082, column: 22, scope: !12329)
!12393 = !DILocation(line: 1082, column: 28, scope: !12329)
!12394 = !DILocation(line: 1082, column: 33, scope: !12329)
!12395 = !DILocation(line: 1082, column: 50, scope: !12329)
!12396 = !DILocation(line: 1082, column: 3, scope: !12329)
!12397 = !DILocation(line: 1083, column: 15, scope: !12329)
!12398 = !DILocation(line: 1083, column: 13, scope: !12329)
!12399 = !DILocation(line: 1084, column: 17, scope: !12329)
!12400 = !DILocation(line: 1084, column: 15, scope: !12329)
!12401 = !DILocation(line: 1089, column: 7, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 1089, column: 7)
!12403 = !DILocation(line: 1089, column: 13, scope: !12402)
!12404 = !DILocation(line: 1089, column: 7, scope: !12329)
!12405 = !DILocation(line: 1090, column: 9, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12407, file: !3, line: 1090, column: 8)
!12407 = distinct !DILexicalBlock(scope: !12402, file: !3, line: 1089, column: 24)
!12408 = !DILocation(line: 1090, column: 15, scope: !12406)
!12409 = !DILocation(line: 1090, column: 25, scope: !12406)
!12410 = !DILocation(line: 1090, column: 30, scope: !12406)
!12411 = !DILocation(line: 1090, column: 40, scope: !12406)
!12412 = !DILocation(line: 1090, column: 8, scope: !12407)
!12413 = !DILocation(line: 1091, column: 33, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12406, file: !3, line: 1090, column: 69)
!12415 = !DILocation(line: 1091, column: 39, scope: !12414)
!12416 = !DILocation(line: 1091, column: 54, scope: !12414)
!12417 = !DILocation(line: 1091, column: 23, scope: !12414)
!12418 = !DILocation(line: 1091, column: 5, scope: !12414)
!12419 = !DILocation(line: 1091, column: 11, scope: !12414)
!12420 = !DILocation(line: 1091, column: 21, scope: !12414)
!12421 = !DILocation(line: 1092, column: 4, scope: !12414)
!12422 = !DILocation(line: 1093, column: 33, scope: !12423)
!12423 = distinct !DILexicalBlock(scope: !12406, file: !3, line: 1092, column: 11)
!12424 = !DILocation(line: 1093, column: 39, scope: !12423)
!12425 = !DILocation(line: 1093, column: 53, scope: !12423)
!12426 = !DILocation(line: 1093, column: 59, scope: !12423)
!12427 = !DILocation(line: 1093, column: 69, scope: !12423)
!12428 = !DILocation(line: 1093, column: 23, scope: !12423)
!12429 = !DILocation(line: 1093, column: 5, scope: !12423)
!12430 = !DILocation(line: 1093, column: 11, scope: !12423)
!12431 = !DILocation(line: 1093, column: 21, scope: !12423)
!12432 = !DILocation(line: 1095, column: 8, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12407, file: !3, line: 1095, column: 8)
!12434 = !DILocation(line: 1095, column: 14, scope: !12433)
!12435 = !DILocation(line: 1095, column: 8, scope: !12407)
!12436 = !DILocation(line: 1096, column: 9, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12438, file: !3, line: 1096, column: 9)
!12438 = distinct !DILexicalBlock(scope: !12433, file: !3, line: 1095, column: 25)
!12439 = !DILocation(line: 1096, column: 15, scope: !12437)
!12440 = !DILocation(line: 1096, column: 25, scope: !12437)
!12441 = !DILocation(line: 1096, column: 28, scope: !12437)
!12442 = !DILocation(line: 1096, column: 9, scope: !12438)
!12443 = !DILocation(line: 1097, column: 6, scope: !12437)
!12444 = !DILocation(line: 1097, column: 12, scope: !12437)
!12445 = !DILocation(line: 1097, column: 22, scope: !12437)
!12446 = !DILocation(line: 1098, column: 4, scope: !12438)
!12447 = !DILocation(line: 1099, column: 9, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12449, file: !3, line: 1099, column: 9)
!12449 = distinct !DILexicalBlock(scope: !12433, file: !3, line: 1098, column: 11)
!12450 = !DILocation(line: 1099, column: 15, scope: !12448)
!12451 = !DILocation(line: 1099, column: 25, scope: !12448)
!12452 = !DILocation(line: 1099, column: 28, scope: !12448)
!12453 = !DILocation(line: 1099, column: 9, scope: !12449)
!12454 = !DILocation(line: 1100, column: 6, scope: !12448)
!12455 = !DILocation(line: 1100, column: 12, scope: !12448)
!12456 = !DILocation(line: 1100, column: 22, scope: !12448)
!12457 = !DILocation(line: 1102, column: 3, scope: !12407)
!12458 = !DILocation(line: 1105, column: 7, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 1105, column: 7)
!12460 = !DILocation(line: 1105, column: 13, scope: !12459)
!12461 = !DILocation(line: 1105, column: 23, scope: !12459)
!12462 = !DILocation(line: 1105, column: 28, scope: !12459)
!12463 = !DILocation(line: 1105, column: 34, scope: !12459)
!12464 = !DILocation(line: 1105, column: 44, scope: !12459)
!12465 = !DILocation(line: 1105, column: 49, scope: !12459)
!12466 = !DILocation(line: 1105, column: 59, scope: !12459)
!12467 = !DILocation(line: 1105, column: 7, scope: !12329)
!12468 = !DILocation(line: 1106, column: 31, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12459, file: !3, line: 1105, column: 89)
!12470 = !DILocation(line: 1106, column: 10, scope: !12469)
!12471 = !DILocation(line: 1106, column: 8, scope: !12469)
!12472 = !DILocation(line: 1107, column: 3, scope: !12469)
!12473 = !DILocation(line: 1108, column: 13, scope: !12329)
!12474 = !DILocation(line: 1110, column: 8, scope: !12475)
!12475 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 1110, column: 7)
!12476 = !DILocation(line: 1110, column: 18, scope: !12475)
!12477 = !DILocation(line: 1110, column: 42, scope: !12475)
!12478 = !DILocation(line: 1110, column: 7, scope: !12329)
!12479 = !DILocalVariable(name: "more_fragments", scope: !12480, file: !3, line: 1111, type: !7)
!12480 = distinct !DILexicalBlock(scope: !12475, file: !3, line: 1110, column: 67)
!12481 = !DILocation(line: 1111, column: 8, scope: !12480)
!12482 = !DILocation(line: 1111, column: 25, scope: !12480)
!12483 = !DILocation(line: 1111, column: 35, scope: !12480)
!12484 = !DILocalVariable(name: "packet_fragment_no", scope: !12480, file: !3, line: 1112, type: !1116)
!12485 = !DILocation(line: 1112, column: 7, scope: !12480)
!12486 = !DILocation(line: 1112, column: 28, scope: !12480)
!12487 = !DILocation(line: 1112, column: 40, scope: !12480)
!12488 = !DILocalVariable(name: "packet_sequence_no", scope: !12480, file: !3, line: 1113, type: !916)
!12489 = !DILocation(line: 1113, column: 8, scope: !12480)
!12490 = !DILocation(line: 1113, column: 30, scope: !12480)
!12491 = !DILocation(line: 1113, column: 42, scope: !12480)
!12492 = !DILocation(line: 1113, column: 64, scope: !12480)
!12493 = !DILocation(line: 1113, column: 29, scope: !12480)
!12494 = !DILocation(line: 1115, column: 9, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12480, file: !3, line: 1115, column: 8)
!12496 = !DILocation(line: 1115, column: 24, scope: !12495)
!12497 = !DILocation(line: 1115, column: 27, scope: !12495)
!12498 = !DILocation(line: 1115, column: 46, scope: !12495)
!12499 = !DILocation(line: 1115, column: 8, scope: !12480)
!12500 = !DILocation(line: 1116, column: 18, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !12495, file: !3, line: 1115, column: 52)
!12502 = !DILocation(line: 1116, column: 33, scope: !12501)
!12503 = !DILocation(line: 1116, column: 44, scope: !12501)
!12504 = !DILocation(line: 1116, column: 59, scope: !12501)
!12505 = !DILocation(line: 1116, column: 5, scope: !12501)
!12506 = !DILocation(line: 1117, column: 4, scope: !12501)
!12507 = !DILocation(line: 1118, column: 18, scope: !12508)
!12508 = distinct !DILexicalBlock(scope: !12495, file: !3, line: 1117, column: 11)
!12509 = !DILocation(line: 1118, column: 33, scope: !12508)
!12510 = !DILocation(line: 1118, column: 44, scope: !12508)
!12511 = !DILocation(line: 1118, column: 59, scope: !12508)
!12512 = !DILocation(line: 1119, column: 11, scope: !12508)
!12513 = !DILocation(line: 1119, column: 31, scope: !12508)
!12514 = !DILocation(line: 1119, column: 51, scope: !12508)
!12515 = !DILocation(line: 1118, column: 5, scope: !12508)
!12516 = !DILocation(line: 1121, column: 3, scope: !12480)
!12517 = !DILocation(line: 1123, column: 8, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 1123, column: 7)
!12519 = !DILocation(line: 1123, column: 18, scope: !12518)
!12520 = !DILocation(line: 1123, column: 42, scope: !12518)
!12521 = !DILocation(line: 1123, column: 7, scope: !12329)
!12522 = !DILocation(line: 1125, column: 23, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12518, file: !3, line: 1123, column: 67)
!12524 = !DILocation(line: 1125, column: 29, scope: !12523)
!12525 = !DILocation(line: 1125, column: 52, scope: !12523)
!12526 = !DILocation(line: 1125, column: 58, scope: !12523)
!12527 = !DILocation(line: 1125, column: 34, scope: !12523)
!12528 = !DILocation(line: 1125, column: 66, scope: !12523)
!12529 = !DILocation(line: 1125, column: 80, scope: !12523)
!12530 = !DILocation(line: 1125, column: 86, scope: !12523)
!12531 = !DILocation(line: 1125, column: 4, scope: !12523)
!12532 = !DILocation(line: 1128, column: 23, scope: !12523)
!12533 = !DILocation(line: 1128, column: 29, scope: !12523)
!12534 = !DILocation(line: 1128, column: 4, scope: !12523)
!12535 = !DILocation(line: 1130, column: 8, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12523, file: !3, line: 1130, column: 8)
!12537 = !DILocation(line: 1130, column: 14, scope: !12536)
!12538 = !DILocation(line: 1130, column: 8, scope: !12523)
!12539 = !DILocation(line: 1132, column: 15, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12536, file: !3, line: 1130, column: 25)
!12541 = !DILocation(line: 1133, column: 20, scope: !12540)
!12542 = !DILocation(line: 1133, column: 43, scope: !12540)
!12543 = !DILocation(line: 1133, column: 49, scope: !12540)
!12544 = !DILocation(line: 1133, column: 25, scope: !12540)
!12545 = !DILocation(line: 1133, column: 57, scope: !12540)
!12546 = !DILocation(line: 1133, column: 11, scope: !12540)
!12547 = !DILocation(line: 1133, column: 9, scope: !12540)
!12548 = !DILocation(line: 1134, column: 10, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !12540, file: !3, line: 1134, column: 9)
!12550 = !DILocation(line: 1134, column: 14, scope: !12549)
!12551 = !DILocation(line: 1134, column: 42, scope: !12549)
!12552 = !DILocation(line: 1134, column: 48, scope: !12549)
!12553 = !DILocation(line: 1134, column: 55, scope: !12549)
!12554 = !DILocation(line: 1134, column: 32, scope: !12549)
!12555 = !DILocation(line: 1134, column: 28, scope: !12549)
!12556 = !DILocation(line: 1134, column: 9, scope: !12540)
!12557 = !DILocation(line: 1135, column: 6, scope: !12558)
!12558 = distinct !DILexicalBlock(scope: !12549, file: !3, line: 1134, column: 69)
!12559 = !DILocation(line: 1135, column: 12, scope: !12558)
!12560 = !DILocation(line: 1135, column: 17, scope: !12558)
!12561 = !DILocation(line: 1135, column: 23, scope: !12558)
!12562 = !DILocation(line: 1135, column: 36, scope: !12558)
!12563 = !DILocation(line: 1136, column: 6, scope: !12558)
!12564 = !DILocation(line: 1138, column: 4, scope: !12540)
!12565 = !DILocation(line: 1140, column: 27, scope: !12523)
!12566 = !DILocation(line: 1140, column: 42, scope: !12523)
!12567 = !DILocation(line: 1141, column: 25, scope: !12523)
!12568 = !DILocation(line: 1141, column: 40, scope: !12523)
!12569 = !DILocation(line: 1141, column: 67, scope: !12523)
!12570 = !DILocation(line: 1141, column: 73, scope: !12523)
!12571 = !DILocation(line: 1141, column: 31, scope: !12523)
!12572 = !DILocation(line: 1141, column: 13, scope: !12523)
!12573 = !DILocation(line: 1140, column: 4, scope: !12523)
!12574 = !DILocation(line: 1142, column: 3, scope: !12523)
!12575 = !DILocation(line: 1123, column: 45, scope: !12518)
!12576 = !DILabel(scope: !12329, name: "next", file: !3, line: 1144)
!12577 = !DILocation(line: 1144, column: 1, scope: !12329)
!12578 = !DILocation(line: 1146, column: 15, scope: !12329)
!12579 = !DILocation(line: 1146, column: 30, scope: !12329)
!12580 = !DILocation(line: 1146, column: 58, scope: !12329)
!12581 = !DILocation(line: 1146, column: 64, scope: !12329)
!12582 = !DILocation(line: 1146, column: 21, scope: !12329)
!12583 = !DILocation(line: 1146, column: 3, scope: !12329)
!12584 = !DILocation(line: 1148, column: 7, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 1148, column: 7)
!12586 = !DILocation(line: 1148, column: 13, scope: !12585)
!12587 = !DILocation(line: 1148, column: 29, scope: !12585)
!12588 = !DILocation(line: 1148, column: 35, scope: !12585)
!12589 = !DILocation(line: 1148, column: 45, scope: !12585)
!12590 = !DILocation(line: 1148, column: 59, scope: !12585)
!12591 = !DILocation(line: 1148, column: 26, scope: !12585)
!12592 = !DILocation(line: 1148, column: 7, scope: !12329)
!12593 = !DILocation(line: 1149, column: 4, scope: !12585)
!12594 = !DILocation(line: 1149, column: 10, scope: !12585)
!12595 = !DILocation(line: 1149, column: 22, scope: !12585)
!12596 = !DILocation(line: 1151, column: 4, scope: !12585)
!12597 = !DILocation(line: 1151, column: 10, scope: !12585)
!12598 = !DILocation(line: 1151, column: 23, scope: !12585)
!12599 = !DILocation(line: 1152, column: 2, scope: !12329)
!12600 = !DILocation(line: 1059, column: 8, scope: !12313)
!12601 = !DILocation(line: 1056, column: 2, scope: !12313)
!12602 = distinct !{!12602, !12327, !12603}
!12603 = !DILocation(line: 1152, column: 2, scope: !12310)
!12604 = !DILocation(line: 1153, column: 1, scope: !12300)
!12605 = distinct !DISubprogram(name: "tx_done_irq", scope: !3, file: !3, line: 682, type: !12301, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12606 = !DILocalVariable(name: "priv", arg: 1, scope: !12605, file: !3, line: 682, type: !8587)
!12607 = !DILocation(line: 682, column: 47, scope: !12605)
!12608 = !DILocalVariable(name: "i", scope: !12605, file: !3, line: 684, type: !7)
!12609 = !DILocation(line: 684, column: 6, scope: !12605)
!12610 = !DILocation(line: 686, column: 9, scope: !12611)
!12611 = distinct !DILexicalBlock(scope: !12605, file: !3, line: 686, column: 2)
!12612 = !DILocation(line: 686, column: 7, scope: !12611)
!12613 = !DILocation(line: 687, column: 19, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12611, file: !3, line: 686, column: 2)
!12615 = !DILocation(line: 687, column: 34, scope: !12614)
!12616 = !DILocation(line: 687, column: 62, scope: !12614)
!12617 = !DILocation(line: 687, column: 68, scope: !12614)
!12618 = !DILocation(line: 687, column: 25, scope: !12614)
!12619 = !DILocation(line: 687, column: 7, scope: !12614)
!12620 = !DILocation(line: 687, column: 83, scope: !12614)
!12621 = !DILocation(line: 687, column: 94, scope: !12614)
!12622 = !DILocation(line: 688, column: 8, scope: !12614)
!12623 = !DILocation(line: 688, column: 12, scope: !12614)
!12624 = !DILocation(line: 688, column: 18, scope: !12614)
!12625 = !DILocation(line: 688, column: 28, scope: !12614)
!12626 = !DILocation(line: 688, column: 10, scope: !12614)
!12627 = !DILocation(line: 0, scope: !12614)
!12628 = !DILocation(line: 686, column: 2, scope: !12611)
!12629 = !DILocalVariable(name: "status", scope: !12630, file: !3, line: 690, type: !1116)
!12630 = distinct !DILexicalBlock(scope: !12614, file: !3, line: 689, column: 12)
!12631 = !DILocation(line: 690, column: 6, scope: !12630)
!12632 = !DILocation(line: 690, column: 27, scope: !12630)
!12633 = !DILocation(line: 690, column: 42, scope: !12630)
!12634 = !DILocation(line: 690, column: 71, scope: !12630)
!12635 = !DILocation(line: 690, column: 77, scope: !12630)
!12636 = !DILocation(line: 690, column: 33, scope: !12630)
!12637 = !DILocation(line: 690, column: 15, scope: !12630)
!12638 = !DILocalVariable(name: "msdu_size", scope: !12630, file: !3, line: 691, type: !916)
!12639 = !DILocation(line: 691, column: 7, scope: !12630)
!12640 = !DILocation(line: 691, column: 32, scope: !12630)
!12641 = !DILocation(line: 691, column: 47, scope: !12630)
!12642 = !DILocation(line: 691, column: 74, scope: !12630)
!12643 = !DILocation(line: 691, column: 80, scope: !12630)
!12644 = !DILocation(line: 691, column: 38, scope: !12630)
!12645 = !DILocation(line: 691, column: 19, scope: !12630)
!12646 = !DILocalVariable(name: "type", scope: !12630, file: !3, line: 692, type: !1116)
!12647 = !DILocation(line: 692, column: 6, scope: !12630)
!12648 = !DILocation(line: 692, column: 25, scope: !12630)
!12649 = !DILocation(line: 692, column: 40, scope: !12630)
!12650 = !DILocation(line: 692, column: 74, scope: !12630)
!12651 = !DILocation(line: 692, column: 80, scope: !12630)
!12652 = !DILocation(line: 692, column: 31, scope: !12630)
!12653 = !DILocation(line: 692, column: 13, scope: !12630)
!12654 = !DILocation(line: 694, column: 15, scope: !12630)
!12655 = !DILocation(line: 694, column: 30, scope: !12630)
!12656 = !DILocation(line: 694, column: 58, scope: !12630)
!12657 = !DILocation(line: 694, column: 64, scope: !12630)
!12658 = !DILocation(line: 694, column: 21, scope: !12630)
!12659 = !DILocation(line: 694, column: 3, scope: !12630)
!12660 = !DILocation(line: 696, column: 24, scope: !12630)
!12661 = !DILocation(line: 696, column: 3, scope: !12630)
!12662 = !DILocation(line: 696, column: 9, scope: !12630)
!12663 = !DILocation(line: 696, column: 21, scope: !12630)
!12664 = !DILocation(line: 697, column: 3, scope: !12630)
!12665 = !DILocation(line: 697, column: 9, scope: !12630)
!12666 = !DILocation(line: 697, column: 21, scope: !12630)
!12667 = !DILocation(line: 699, column: 7, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12630, file: !3, line: 699, column: 7)
!12669 = !DILocation(line: 699, column: 13, scope: !12668)
!12670 = !DILocation(line: 699, column: 28, scope: !12668)
!12671 = !DILocation(line: 699, column: 26, scope: !12668)
!12672 = !DILocation(line: 699, column: 41, scope: !12668)
!12673 = !DILocation(line: 699, column: 47, scope: !12668)
!12674 = !DILocation(line: 699, column: 57, scope: !12668)
!12675 = !DILocation(line: 699, column: 71, scope: !12668)
!12676 = !DILocation(line: 699, column: 77, scope: !12668)
!12677 = !DILocation(line: 699, column: 87, scope: !12668)
!12678 = !DILocation(line: 699, column: 69, scope: !12668)
!12679 = !DILocation(line: 699, column: 38, scope: !12668)
!12680 = !DILocation(line: 699, column: 7, scope: !12630)
!12681 = !DILocation(line: 700, column: 4, scope: !12668)
!12682 = !DILocation(line: 700, column: 10, scope: !12668)
!12683 = !DILocation(line: 700, column: 23, scope: !12668)
!12684 = !DILocation(line: 702, column: 26, scope: !12668)
!12685 = !DILocation(line: 702, column: 4, scope: !12668)
!12686 = !DILocation(line: 702, column: 10, scope: !12668)
!12687 = !DILocation(line: 702, column: 23, scope: !12668)
!12688 = !DILocation(line: 704, column: 7, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12630, file: !3, line: 704, column: 7)
!12690 = !DILocation(line: 704, column: 13, scope: !12689)
!12691 = !DILocation(line: 704, column: 29, scope: !12689)
!12692 = !DILocation(line: 704, column: 35, scope: !12689)
!12693 = !DILocation(line: 704, column: 45, scope: !12689)
!12694 = !DILocation(line: 704, column: 59, scope: !12689)
!12695 = !DILocation(line: 704, column: 26, scope: !12689)
!12696 = !DILocation(line: 704, column: 7, scope: !12630)
!12697 = !DILocation(line: 705, column: 4, scope: !12689)
!12698 = !DILocation(line: 705, column: 10, scope: !12689)
!12699 = !DILocation(line: 705, column: 22, scope: !12689)
!12700 = !DILocation(line: 707, column: 4, scope: !12689)
!12701 = !DILocation(line: 707, column: 10, scope: !12689)
!12702 = !DILocation(line: 707, column: 23, scope: !12689)
!12703 = !DILocation(line: 709, column: 7, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12630, file: !3, line: 709, column: 7)
!12705 = !DILocation(line: 709, column: 12, scope: !12704)
!12706 = !DILocation(line: 709, column: 7, scope: !12630)
!12707 = !DILocation(line: 710, column: 8, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12709, file: !3, line: 710, column: 8)
!12709 = distinct !DILexicalBlock(scope: !12704, file: !3, line: 709, column: 36)
!12710 = !DILocation(line: 710, column: 15, scope: !12708)
!12711 = !DILocation(line: 710, column: 8, scope: !12709)
!12712 = !DILocation(line: 711, column: 5, scope: !12708)
!12713 = !DILocation(line: 711, column: 11, scope: !12708)
!12714 = !DILocation(line: 711, column: 16, scope: !12708)
!12715 = !DILocation(line: 711, column: 22, scope: !12708)
!12716 = !DILocation(line: 711, column: 32, scope: !12708)
!12717 = !DILocation(line: 713, column: 5, scope: !12708)
!12718 = !DILocation(line: 713, column: 11, scope: !12708)
!12719 = !DILocation(line: 713, column: 16, scope: !12708)
!12720 = !DILocation(line: 713, column: 22, scope: !12708)
!12721 = !DILocation(line: 713, column: 31, scope: !12708)
!12722 = !DILocation(line: 714, column: 21, scope: !12709)
!12723 = !DILocation(line: 714, column: 27, scope: !12709)
!12724 = !DILocation(line: 714, column: 4, scope: !12709)
!12725 = !DILocation(line: 715, column: 3, scope: !12709)
!12726 = !DILocation(line: 716, column: 2, scope: !12630)
!12727 = !DILocation(line: 689, column: 8, scope: !12614)
!12728 = !DILocation(line: 686, column: 2, scope: !12614)
!12729 = distinct !{!12729, !12628, !12730}
!12730 = !DILocation(line: 716, column: 2, scope: !12611)
!12731 = !DILocation(line: 717, column: 1, scope: !12605)
!12732 = distinct !DISubprogram(name: "atmel_command_irq", scope: !3, file: !3, line: 3484, type: !12301, scopeLine: 3485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12733 = !DILocalVariable(name: "priv", arg: 1, scope: !12732, file: !3, line: 3484, type: !8587)
!12734 = !DILocation(line: 3484, column: 53, scope: !12732)
!12735 = !DILocalVariable(name: "status", scope: !12732, file: !3, line: 3486, type: !1116)
!12736 = !DILocation(line: 3486, column: 5, scope: !12732)
!12737 = !DILocation(line: 3486, column: 26, scope: !12732)
!12738 = !DILocation(line: 3486, column: 41, scope: !12732)
!12739 = !DILocation(line: 3486, column: 32, scope: !12732)
!12740 = !DILocation(line: 3486, column: 14, scope: !12732)
!12741 = !DILocalVariable(name: "command", scope: !12732, file: !3, line: 3487, type: !1116)
!12742 = !DILocation(line: 3487, column: 5, scope: !12732)
!12743 = !DILocation(line: 3487, column: 27, scope: !12732)
!12744 = !DILocation(line: 3487, column: 42, scope: !12732)
!12745 = !DILocation(line: 3487, column: 33, scope: !12732)
!12746 = !DILocation(line: 3487, column: 15, scope: !12732)
!12747 = !DILocalVariable(name: "fast_scan", scope: !12732, file: !3, line: 3488, type: !7)
!12748 = !DILocation(line: 3488, column: 6, scope: !12732)
!12749 = !DILocalVariable(name: "wrqu", scope: !12732, file: !3, line: 3489, type: !614)
!12750 = !DILocation(line: 3489, column: 19, scope: !12732)
!12751 = !DILocation(line: 3491, column: 6, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12732, file: !3, line: 3491, column: 6)
!12753 = !DILocation(line: 3491, column: 13, scope: !12752)
!12754 = !DILocation(line: 3491, column: 32, scope: !12752)
!12755 = !DILocation(line: 3492, column: 6, scope: !12752)
!12756 = !DILocation(line: 3492, column: 13, scope: !12752)
!12757 = !DILocation(line: 3491, column: 6, scope: !12732)
!12758 = !DILocation(line: 3493, column: 3, scope: !12752)
!12759 = !DILocation(line: 3495, column: 10, scope: !12732)
!12760 = !DILocation(line: 3495, column: 2, scope: !12732)
!12761 = !DILocation(line: 3497, column: 7, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12763, file: !3, line: 3497, column: 7)
!12763 = distinct !DILexicalBlock(scope: !12732, file: !3, line: 3495, column: 19)
!12764 = !DILocation(line: 3497, column: 14, scope: !12762)
!12765 = !DILocation(line: 3497, column: 7, scope: !12763)
!12766 = !DILocation(line: 3498, column: 35, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12762, file: !3, line: 3497, column: 38)
!12768 = !DILocation(line: 3498, column: 41, scope: !12767)
!12769 = !DILocation(line: 3498, column: 4, scope: !12767)
!12770 = !DILocation(line: 3498, column: 10, scope: !12767)
!12771 = !DILocation(line: 3498, column: 33, scope: !12767)
!12772 = !DILocation(line: 3499, column: 18, scope: !12767)
!12773 = !DILocation(line: 3500, column: 17, scope: !12767)
!12774 = !DILocation(line: 3500, column: 23, scope: !12767)
!12775 = !DILocation(line: 3499, column: 4, scope: !12767)
!12776 = !DILocation(line: 3501, column: 22, scope: !12767)
!12777 = !DILocation(line: 3501, column: 4, scope: !12767)
!12778 = !DILocation(line: 3502, column: 3, scope: !12767)
!12779 = !DILocation(line: 3503, column: 3, scope: !12763)
!12780 = !DILocation(line: 3506, column: 15, scope: !12763)
!12781 = !DILocation(line: 3506, column: 21, scope: !12763)
!12782 = !DILocation(line: 3506, column: 13, scope: !12763)
!12783 = !DILocation(line: 3507, column: 3, scope: !12763)
!12784 = !DILocation(line: 3507, column: 9, scope: !12763)
!12785 = !DILocation(line: 3507, column: 19, scope: !12763)
!12786 = !DILocation(line: 3509, column: 7, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !12763, file: !3, line: 3509, column: 7)
!12788 = !DILocation(line: 3509, column: 14, scope: !12787)
!12789 = !DILocation(line: 3509, column: 7, scope: !12763)
!12790 = !DILocation(line: 3510, column: 15, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12787, file: !3, line: 3509, column: 38)
!12792 = !DILocation(line: 3510, column: 4, scope: !12791)
!12793 = !DILocation(line: 3511, column: 3, scope: !12791)
!12794 = !DILocalVariable(name: "bss_index", scope: !12795, file: !3, line: 3512, type: !7)
!12795 = distinct !DILexicalBlock(scope: !12787, file: !3, line: 3511, column: 10)
!12796 = !DILocation(line: 3512, column: 8, scope: !12795)
!12797 = !DILocation(line: 3512, column: 33, scope: !12795)
!12798 = !DILocation(line: 3512, column: 20, scope: !12795)
!12799 = !DILocalVariable(name: "notify_scan_complete", scope: !12795, file: !3, line: 3513, type: !7)
!12800 = !DILocation(line: 3513, column: 8, scope: !12795)
!12801 = !DILocation(line: 3514, column: 8, scope: !12802)
!12802 = distinct !DILexicalBlock(scope: !12795, file: !3, line: 3514, column: 8)
!12803 = !DILocation(line: 3514, column: 18, scope: !12802)
!12804 = !DILocation(line: 3514, column: 8, scope: !12795)
!12805 = !DILocation(line: 3515, column: 20, scope: !12806)
!12806 = distinct !DILexicalBlock(scope: !12802, file: !3, line: 3514, column: 25)
!12807 = !DILocation(line: 3515, column: 26, scope: !12806)
!12808 = !DILocation(line: 3515, column: 5, scope: !12806)
!12809 = !DILocation(line: 3516, column: 4, scope: !12806)
!12810 = !DILocation(line: 3516, column: 15, scope: !12811)
!12811 = distinct !DILexicalBlock(scope: !12802, file: !3, line: 3516, column: 15)
!12812 = !DILocation(line: 3516, column: 21, scope: !12811)
!12813 = !DILocation(line: 3516, column: 36, scope: !12811)
!12814 = !DILocation(line: 3516, column: 53, scope: !12811)
!12815 = !DILocation(line: 3517, column: 8, scope: !12811)
!12816 = !DILocation(line: 3517, column: 14, scope: !12811)
!12817 = !DILocation(line: 3517, column: 24, scope: !12811)
!12818 = !DILocation(line: 3516, column: 15, scope: !12802)
!12819 = !DILocation(line: 3518, column: 11, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12811, file: !3, line: 3517, column: 30)
!12821 = !DILocation(line: 3518, column: 5, scope: !12820)
!12822 = !DILocation(line: 3519, column: 4, scope: !12820)
!12823 = !DILocation(line: 3520, column: 24, scope: !12824)
!12824 = distinct !DILexicalBlock(scope: !12811, file: !3, line: 3519, column: 11)
!12825 = !DILocation(line: 3520, column: 23, scope: !12824)
!12826 = !DILocation(line: 3520, column: 5, scope: !12824)
!12827 = !DILocation(line: 3520, column: 11, scope: !12824)
!12828 = !DILocation(line: 3520, column: 21, scope: !12824)
!12829 = !DILocation(line: 3521, column: 16, scope: !12824)
!12830 = !DILocation(line: 3521, column: 5, scope: !12824)
!12831 = !DILocation(line: 3522, column: 26, scope: !12824)
!12832 = !DILocation(line: 3524, column: 4, scope: !12795)
!12833 = !DILocation(line: 3524, column: 10, scope: !12795)
!12834 = !DILocation(line: 3524, column: 28, scope: !12795)
!12835 = !DILocation(line: 3525, column: 8, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12795, file: !3, line: 3525, column: 8)
!12837 = !DILocation(line: 3525, column: 8, scope: !12795)
!12838 = !DILocation(line: 3526, column: 10, scope: !12839)
!12839 = distinct !DILexicalBlock(scope: !12836, file: !3, line: 3525, column: 30)
!12840 = !DILocation(line: 3526, column: 15, scope: !12839)
!12841 = !DILocation(line: 3526, column: 22, scope: !12839)
!12842 = !DILocation(line: 3527, column: 10, scope: !12839)
!12843 = !DILocation(line: 3527, column: 15, scope: !12839)
!12844 = !DILocation(line: 3527, column: 21, scope: !12839)
!12845 = !DILocation(line: 3528, column: 25, scope: !12839)
!12846 = !DILocation(line: 3528, column: 31, scope: !12839)
!12847 = !DILocation(line: 3528, column: 5, scope: !12839)
!12848 = !DILocation(line: 3529, column: 4, scope: !12839)
!12849 = !DILocation(line: 3531, column: 3, scope: !12763)
!12850 = !DILocation(line: 3534, column: 3, scope: !12763)
!12851 = !DILocation(line: 3534, column: 9, scope: !12763)
!12852 = !DILocation(line: 3534, column: 19, scope: !12763)
!12853 = !DILocation(line: 3536, column: 7, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12763, file: !3, line: 3536, column: 7)
!12855 = !DILocation(line: 3536, column: 14, scope: !12854)
!12856 = !DILocation(line: 3536, column: 7, scope: !12763)
!12857 = !DILocation(line: 3537, column: 4, scope: !12854)
!12858 = !DILocation(line: 3539, column: 3, scope: !12763)
!12859 = !DILocation(line: 3539, column: 9, scope: !12763)
!12860 = !DILocation(line: 3539, column: 27, scope: !12763)
!12861 = !DILocation(line: 3540, column: 7, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12763, file: !3, line: 3540, column: 7)
!12863 = !DILocation(line: 3540, column: 13, scope: !12862)
!12864 = !DILocation(line: 3540, column: 7, scope: !12763)
!12865 = !DILocation(line: 3541, column: 22, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12862, file: !3, line: 3540, column: 36)
!12867 = !DILocation(line: 3541, column: 4, scope: !12866)
!12868 = !DILocation(line: 3542, column: 9, scope: !12866)
!12869 = !DILocation(line: 3542, column: 14, scope: !12866)
!12870 = !DILocation(line: 3542, column: 21, scope: !12866)
!12871 = !DILocation(line: 3543, column: 9, scope: !12866)
!12872 = !DILocation(line: 3543, column: 14, scope: !12866)
!12873 = !DILocation(line: 3543, column: 20, scope: !12866)
!12874 = !DILocation(line: 3544, column: 24, scope: !12866)
!12875 = !DILocation(line: 3544, column: 30, scope: !12866)
!12876 = !DILocation(line: 3544, column: 4, scope: !12866)
!12877 = !DILocation(line: 3545, column: 3, scope: !12866)
!12878 = !DILocation(line: 3546, column: 15, scope: !12879)
!12879 = distinct !DILexicalBlock(scope: !12862, file: !3, line: 3545, column: 10)
!12880 = !DILocation(line: 3546, column: 4, scope: !12879)
!12881 = !DILocation(line: 3548, column: 3, scope: !12763)
!12882 = !DILocation(line: 3551, column: 7, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12763, file: !3, line: 3551, column: 7)
!12884 = !DILocation(line: 3551, column: 14, scope: !12883)
!12885 = !DILocation(line: 3551, column: 7, scope: !12763)
!12886 = !DILocation(line: 3552, column: 8, scope: !12887)
!12887 = distinct !DILexicalBlock(scope: !12888, file: !3, line: 3552, column: 8)
!12888 = distinct !DILexicalBlock(scope: !12883, file: !3, line: 3551, column: 38)
!12889 = !DILocation(line: 3552, column: 14, scope: !12887)
!12890 = !DILocation(line: 3552, column: 29, scope: !12887)
!12891 = !DILocation(line: 3552, column: 8, scope: !12888)
!12892 = !DILocation(line: 3553, column: 36, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12887, file: !3, line: 3552, column: 47)
!12894 = !DILocation(line: 3553, column: 42, scope: !12893)
!12895 = !DILocation(line: 3553, column: 5, scope: !12893)
!12896 = !DILocation(line: 3553, column: 11, scope: !12893)
!12897 = !DILocation(line: 3553, column: 34, scope: !12893)
!12898 = !DILocation(line: 3554, column: 23, scope: !12893)
!12899 = !DILocation(line: 3554, column: 5, scope: !12893)
!12900 = !DILocation(line: 3555, column: 4, scope: !12893)
!12901 = !DILocalVariable(name: "auth", scope: !12902, file: !3, line: 3556, type: !7)
!12902 = distinct !DILexicalBlock(scope: !12887, file: !3, line: 3555, column: 11)
!12903 = !DILocation(line: 3556, column: 9, scope: !12902)
!12904 = !DILocation(line: 3557, column: 5, scope: !12902)
!12905 = !DILocation(line: 3557, column: 11, scope: !12902)
!12906 = !DILocation(line: 3557, column: 41, scope: !12902)
!12907 = !DILocation(line: 3558, column: 23, scope: !12902)
!12908 = !DILocation(line: 3558, column: 5, scope: !12902)
!12909 = !DILocation(line: 3560, column: 16, scope: !12902)
!12910 = !DILocation(line: 3560, column: 22, scope: !12902)
!12911 = !DILocation(line: 3560, column: 40, scope: !12902)
!12912 = !DILocation(line: 3560, column: 48, scope: !12902)
!12913 = !DILocation(line: 3560, column: 5, scope: !12902)
!12914 = !DILocation(line: 3561, column: 5, scope: !12902)
!12915 = !DILocation(line: 3561, column: 11, scope: !12902)
!12916 = !DILocation(line: 3561, column: 43, scope: !12902)
!12917 = !DILocation(line: 3562, column: 9, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12902, file: !3, line: 3562, column: 9)
!12919 = !DILocation(line: 3562, column: 15, scope: !12918)
!12920 = !DILocation(line: 3562, column: 25, scope: !12918)
!12921 = !DILocation(line: 3562, column: 28, scope: !12918)
!12922 = !DILocation(line: 3562, column: 34, scope: !12918)
!12923 = !DILocation(line: 3562, column: 9, scope: !12902)
!12924 = !DILocation(line: 3563, column: 11, scope: !12918)
!12925 = !DILocation(line: 3563, column: 6, scope: !12918)
!12926 = !DILocation(line: 3564, column: 33, scope: !12902)
!12927 = !DILocation(line: 3564, column: 39, scope: !12902)
!12928 = !DILocation(line: 3564, column: 5, scope: !12902)
!12929 = !DILocation(line: 3566, column: 4, scope: !12888)
!12930 = !DILocation(line: 3569, column: 14, scope: !12763)
!12931 = !DILocation(line: 3569, column: 3, scope: !12763)
!12932 = !DILocation(line: 3570, column: 2, scope: !12763)
!12933 = !DILocation(line: 3571, column: 1, scope: !12732)
!12934 = distinct !DISubprogram(name: "atmel_get_mib", scope: !3, file: !3, line: 4121, type: !12935, scopeLine: 4123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12935 = !DISubroutineType(types: !12936)
!12936 = !{null, !8587, !1116, !1116, !1115, !7}
!12937 = !DILocalVariable(name: "priv", arg: 1, scope: !12934, file: !3, line: 4121, type: !8587)
!12938 = !DILocation(line: 4121, column: 49, scope: !12934)
!12939 = !DILocalVariable(name: "type", arg: 2, scope: !12934, file: !3, line: 4121, type: !1116)
!12940 = !DILocation(line: 4121, column: 58, scope: !12934)
!12941 = !DILocalVariable(name: "index", arg: 3, scope: !12934, file: !3, line: 4121, type: !1116)
!12942 = !DILocation(line: 4121, column: 67, scope: !12934)
!12943 = !DILocalVariable(name: "data", arg: 4, scope: !12934, file: !3, line: 4122, type: !1115)
!12944 = !DILocation(line: 4122, column: 10, scope: !12934)
!12945 = !DILocalVariable(name: "data_len", arg: 5, scope: !12934, file: !3, line: 4122, type: !7)
!12946 = !DILocation(line: 4122, column: 20, scope: !12934)
!12947 = !DILocalVariable(name: "m", scope: !12934, file: !3, line: 4124, type: !9465)
!12948 = !DILocation(line: 4124, column: 21, scope: !12934)
!12949 = !DILocation(line: 4125, column: 11, scope: !12934)
!12950 = !DILocation(line: 4125, column: 4, scope: !12934)
!12951 = !DILocation(line: 4125, column: 9, scope: !12934)
!12952 = !DILocation(line: 4126, column: 11, scope: !12934)
!12953 = !DILocation(line: 4126, column: 4, scope: !12934)
!12954 = !DILocation(line: 4126, column: 9, scope: !12934)
!12955 = !DILocation(line: 4127, column: 12, scope: !12934)
!12956 = !DILocation(line: 4127, column: 4, scope: !12934)
!12957 = !DILocation(line: 4127, column: 10, scope: !12934)
!12958 = !DILocation(line: 4129, column: 6, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12934, file: !3, line: 4129, column: 6)
!12960 = !DILocation(line: 4129, column: 15, scope: !12959)
!12961 = !DILocation(line: 4129, column: 6, scope: !12934)
!12962 = !DILocation(line: 4130, column: 52, scope: !12959)
!12963 = !DILocation(line: 4130, column: 58, scope: !12959)
!12964 = !DILocation(line: 4130, column: 63, scope: !12959)
!12965 = !DILocation(line: 4130, column: 3, scope: !12959)
!12966 = !DILocation(line: 4132, column: 26, scope: !12934)
!12967 = !DILocation(line: 4132, column: 50, scope: !12934)
!12968 = !DILocation(line: 4132, column: 72, scope: !12934)
!12969 = !DILocation(line: 4132, column: 70, scope: !12934)
!12970 = !DILocation(line: 4132, column: 2, scope: !12934)
!12971 = !DILocation(line: 4133, column: 21, scope: !12934)
!12972 = !DILocation(line: 4133, column: 27, scope: !12934)
!12973 = !DILocation(line: 4133, column: 32, scope: !12934)
!12974 = !DILocation(line: 4134, column: 16, scope: !12934)
!12975 = !DILocation(line: 4134, column: 7, scope: !12934)
!12976 = !DILocation(line: 4134, column: 70, scope: !12934)
!12977 = !DILocation(line: 4133, column: 2, scope: !12934)
!12978 = !DILocation(line: 4135, column: 1, scope: !12934)
!12979 = distinct !DISubprogram(name: "build_wpa_mib", scope: !3, file: !3, line: 3780, type: !12301, scopeLine: 3781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!12980 = !DILocalVariable(name: "priv", arg: 1, scope: !12979, file: !3, line: 3780, type: !8587)
!12981 = !DILocation(line: 3780, column: 49, scope: !12979)
!12982 = !DILocalVariable(name: "mib", scope: !12979, file: !3, line: 3798, type: !12983)
!12983 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12979, file: !3, line: 3784, size: 1696, elements: !12984)
!12984 = !{!12985, !12986, !12987, !12988, !12989, !12990, !12991, !12992, !12993, !12994, !12995}
!12985 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_default_key_value", scope: !12983, file: !3, line: 3785, baseType: !8198, size: 1280)
!12986 = !DIDerivedType(tag: DW_TAG_member, name: "receiver_address", scope: !12983, file: !3, line: 3786, baseType: !6709, size: 48, offset: 1280)
!12987 = !DIDerivedType(tag: DW_TAG_member, name: "wep_is_on", scope: !12983, file: !3, line: 3787, baseType: !1116, size: 8, offset: 1328)
!12988 = !DIDerivedType(tag: DW_TAG_member, name: "default_key", scope: !12983, file: !3, line: 3788, baseType: !1116, size: 8, offset: 1336)
!12989 = !DIDerivedType(tag: DW_TAG_member, name: "group_key", scope: !12983, file: !3, line: 3789, baseType: !1116, size: 8, offset: 1344)
!12990 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_unencrypted", scope: !12983, file: !3, line: 3790, baseType: !1116, size: 8, offset: 1352)
!12991 = !DIDerivedType(tag: DW_TAG_member, name: "encryption_type", scope: !12983, file: !3, line: 3791, baseType: !1116, size: 8, offset: 1360)
!12992 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !12983, file: !3, line: 3792, baseType: !1116, size: 8, offset: 1368)
!12993 = !DIDerivedType(tag: DW_TAG_member, name: "WEPICV_error_count", scope: !12983, file: !3, line: 3794, baseType: !1308, size: 32, offset: 1376)
!12994 = !DIDerivedType(tag: DW_TAG_member, name: "WEP_excluded_count", scope: !12983, file: !3, line: 3795, baseType: !1308, size: 32, offset: 1408)
!12995 = !DIDerivedType(tag: DW_TAG_member, name: "key_RSC", scope: !12983, file: !3, line: 3797, baseType: !12996, size: 256, offset: 1440)
!12996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 256, elements: !12997)
!12997 = !{!2591, !724}
!12998 = !DILocation(line: 3798, column: 4, scope: !12979)
!12999 = !DILocalVariable(name: "i", scope: !12979, file: !3, line: 3800, type: !7)
!13000 = !DILocation(line: 3800, column: 6, scope: !12979)
!13001 = !DILocation(line: 3802, column: 18, scope: !12979)
!13002 = !DILocation(line: 3802, column: 24, scope: !12979)
!13003 = !DILocation(line: 3802, column: 6, scope: !12979)
!13004 = !DILocation(line: 3802, column: 16, scope: !12979)
!13005 = !DILocation(line: 3803, column: 28, scope: !12979)
!13006 = !DILocation(line: 3803, column: 34, scope: !12979)
!13007 = !DILocation(line: 3803, column: 6, scope: !12979)
!13008 = !DILocation(line: 3803, column: 26, scope: !12979)
!13009 = !DILocation(line: 3804, column: 13, scope: !12979)
!13010 = !DILocation(line: 3804, column: 2, scope: !12979)
!13011 = !DILocation(line: 3804, column: 31, scope: !12979)
!13012 = !DILocation(line: 3804, column: 37, scope: !12979)
!13013 = !DILocation(line: 3807, column: 13, scope: !12979)
!13014 = !DILocation(line: 3807, column: 2, scope: !12979)
!13015 = !DILocation(line: 3809, column: 6, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !12979, file: !3, line: 3809, column: 6)
!13017 = !DILocation(line: 3809, column: 12, scope: !13016)
!13018 = !DILocation(line: 3809, column: 6, scope: !12979)
!13019 = !DILocation(line: 3813, column: 14, scope: !13020)
!13020 = distinct !DILexicalBlock(scope: !13016, file: !3, line: 3809, column: 23)
!13021 = !DILocation(line: 3813, column: 3, scope: !13020)
!13022 = !DILocation(line: 3815, column: 25, scope: !13020)
!13023 = !DILocation(line: 3815, column: 35, scope: !13020)
!13024 = !DILocation(line: 3815, column: 7, scope: !13020)
!13025 = !DILocation(line: 3815, column: 19, scope: !13020)
!13026 = !DILocation(line: 3816, column: 10, scope: !13027)
!13027 = distinct !DILexicalBlock(scope: !13020, file: !3, line: 3816, column: 3)
!13028 = !DILocation(line: 3816, column: 8, scope: !13027)
!13029 = !DILocation(line: 3816, column: 15, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !13027, file: !3, line: 3816, column: 3)
!13031 = !DILocation(line: 3816, column: 17, scope: !13030)
!13032 = !DILocation(line: 3816, column: 3, scope: !13027)
!13033 = !DILocation(line: 3817, column: 8, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !13035, file: !3, line: 3817, column: 8)
!13035 = distinct !DILexicalBlock(scope: !13030, file: !3, line: 3816, column: 45)
!13036 = !DILocation(line: 3817, column: 14, scope: !13034)
!13037 = !DILocation(line: 3817, column: 26, scope: !13034)
!13038 = !DILocation(line: 3817, column: 29, scope: !13034)
!13039 = !DILocation(line: 3817, column: 8, scope: !13035)
!13040 = !DILocation(line: 3818, column: 16, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13034, file: !3, line: 3817, column: 34)
!13042 = !DILocation(line: 3818, column: 41, scope: !13041)
!13043 = !DILocation(line: 3818, column: 12, scope: !13041)
!13044 = !DILocation(line: 3818, column: 5, scope: !13041)
!13045 = !DILocation(line: 3818, column: 45, scope: !13041)
!13046 = !DILocation(line: 3818, column: 51, scope: !13041)
!13047 = !DILocation(line: 3818, column: 60, scope: !13041)
!13048 = !DILocation(line: 3819, column: 9, scope: !13049)
!13049 = distinct !DILexicalBlock(scope: !13041, file: !3, line: 3819, column: 9)
!13050 = !DILocation(line: 3819, column: 14, scope: !13049)
!13051 = !DILocation(line: 3819, column: 20, scope: !13049)
!13052 = !DILocation(line: 3819, column: 11, scope: !13049)
!13053 = !DILocation(line: 3819, column: 9, scope: !13041)
!13054 = !DILocation(line: 3820, column: 24, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !13049, file: !3, line: 3819, column: 33)
!13056 = !DILocation(line: 3820, column: 10, scope: !13055)
!13057 = !DILocation(line: 3820, column: 22, scope: !13055)
!13058 = !DILocation(line: 3821, column: 10, scope: !13055)
!13059 = !DILocation(line: 3821, column: 35, scope: !13055)
!13060 = !DILocation(line: 3821, column: 6, scope: !13055)
!13061 = !DILocation(line: 3821, column: 65, scope: !13055)
!13062 = !DILocation(line: 3822, column: 67, scope: !13055)
!13063 = !DILocation(line: 3822, column: 73, scope: !13055)
!13064 = !DILocation(line: 3822, column: 10, scope: !13055)
!13065 = !DILocation(line: 3822, column: 35, scope: !13055)
!13066 = !DILocation(line: 3822, column: 6, scope: !13055)
!13067 = !DILocation(line: 3822, column: 65, scope: !13055)
!13068 = !DILocation(line: 3823, column: 5, scope: !13055)
!13069 = !DILocation(line: 3824, column: 22, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13049, file: !3, line: 3823, column: 12)
!13071 = !DILocation(line: 3824, column: 10, scope: !13070)
!13072 = !DILocation(line: 3824, column: 20, scope: !13070)
!13073 = !DILocation(line: 3825, column: 33, scope: !13070)
!13074 = !DILocation(line: 3825, column: 39, scope: !13070)
!13075 = !DILocation(line: 3825, column: 6, scope: !13070)
!13076 = !DILocation(line: 3825, column: 12, scope: !13070)
!13077 = !DILocation(line: 3825, column: 31, scope: !13070)
!13078 = !DILocation(line: 3826, column: 10, scope: !13070)
!13079 = !DILocation(line: 3826, column: 35, scope: !13070)
!13080 = !DILocation(line: 3826, column: 6, scope: !13070)
!13081 = !DILocation(line: 3826, column: 65, scope: !13070)
!13082 = !DILocation(line: 3827, column: 67, scope: !13070)
!13083 = !DILocation(line: 3827, column: 73, scope: !13070)
!13084 = !DILocation(line: 3827, column: 10, scope: !13070)
!13085 = !DILocation(line: 3827, column: 35, scope: !13070)
!13086 = !DILocation(line: 3827, column: 6, scope: !13070)
!13087 = !DILocation(line: 3827, column: 65, scope: !13070)
!13088 = !DILocation(line: 3829, column: 4, scope: !13041)
!13089 = !DILocation(line: 3830, column: 3, scope: !13035)
!13090 = !DILocation(line: 3816, column: 41, scope: !13030)
!13091 = !DILocation(line: 3816, column: 3, scope: !13030)
!13092 = distinct !{!13092, !13032, !13093}
!13093 = !DILocation(line: 3830, column: 3, scope: !13027)
!13094 = !DILocation(line: 3831, column: 11, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13020, file: !3, line: 3831, column: 7)
!13096 = !DILocation(line: 3831, column: 7, scope: !13095)
!13097 = !DILocation(line: 3831, column: 23, scope: !13095)
!13098 = !DILocation(line: 3831, column: 7, scope: !13020)
!13099 = !DILocation(line: 3832, column: 26, scope: !13095)
!13100 = !DILocation(line: 3832, column: 22, scope: !13095)
!13101 = !DILocation(line: 3832, column: 36, scope: !13095)
!13102 = !DILocation(line: 3832, column: 49, scope: !13095)
!13103 = !DILocation(line: 3832, column: 45, scope: !13095)
!13104 = !DILocation(line: 3832, column: 8, scope: !13095)
!13105 = !DILocation(line: 3832, column: 20, scope: !13095)
!13106 = !DILocation(line: 3832, column: 4, scope: !13095)
!13107 = !DILocation(line: 3833, column: 11, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13020, file: !3, line: 3833, column: 7)
!13109 = !DILocation(line: 3833, column: 7, scope: !13108)
!13110 = !DILocation(line: 3833, column: 21, scope: !13108)
!13111 = !DILocation(line: 3833, column: 7, scope: !13020)
!13112 = !DILocation(line: 3834, column: 24, scope: !13108)
!13113 = !DILocation(line: 3834, column: 8, scope: !13108)
!13114 = !DILocation(line: 3834, column: 18, scope: !13108)
!13115 = !DILocation(line: 3834, column: 4, scope: !13108)
!13116 = !DILocation(line: 3836, column: 2, scope: !13020)
!13117 = !DILocation(line: 3838, column: 16, scope: !12979)
!13118 = !DILocation(line: 3838, column: 43, scope: !12979)
!13119 = !DILocation(line: 3838, column: 2, scope: !12979)
!13120 = !DILocation(line: 3839, column: 1, scope: !12979)
!13121 = distinct !DISubprogram(name: "atmel_read8", scope: !3, file: !3, line: 636, type: !13122, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!13122 = !DISubroutineType(types: !13123)
!13123 = !{!1116, !495, !916}
!13124 = !DILocalVariable(name: "dev", arg: 1, scope: !13121, file: !3, line: 636, type: !495)
!13125 = !DILocation(line: 636, column: 49, scope: !13121)
!13126 = !DILocalVariable(name: "offset", arg: 2, scope: !13121, file: !3, line: 636, type: !916)
!13127 = !DILocation(line: 636, column: 58, scope: !13121)
!13128 = !DILocation(line: 638, column: 13, scope: !13121)
!13129 = !DILocation(line: 638, column: 18, scope: !13121)
!13130 = !DILocation(line: 638, column: 30, scope: !13121)
!13131 = !DILocation(line: 638, column: 28, scope: !13121)
!13132 = !DILocation(line: 638, column: 9, scope: !13121)
!13133 = !DILocation(line: 638, column: 2, scope: !13121)
!13134 = distinct !DISubprogram(name: "inb", scope: !12045, file: !12045, line: 334, type: !13135, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!13135 = !DISubroutineType(types: !13136)
!13136 = !{!632, !7}
!13137 = !DILocalVariable(name: "port", arg: 1, scope: !13134, file: !12045, line: 334, type: !7)
!13138 = !DILocation(line: 334, column: 1, scope: !13134)
!13139 = !DILocalVariable(name: "value", scope: !13134, file: !12045, line: 334, type: !632)
!13140 = !{i32 -2142394443}
!13141 = distinct !DISubprogram(name: "atmel_rx", scope: !3, file: !3, line: 626, type: !12083, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!13142 = !DILocalVariable(name: "priv", arg: 1, scope: !13141, file: !3, line: 626, type: !8587)
!13143 = !DILocation(line: 626, column: 50, scope: !13141)
!13144 = !DILocalVariable(name: "offset", arg: 2, scope: !13141, file: !3, line: 626, type: !916)
!13145 = !DILocation(line: 626, column: 60, scope: !13141)
!13146 = !DILocalVariable(name: "desc", arg: 3, scope: !13141, file: !3, line: 626, type: !916)
!13147 = !DILocation(line: 626, column: 72, scope: !13141)
!13148 = !DILocation(line: 628, column: 9, scope: !13141)
!13149 = !DILocation(line: 628, column: 15, scope: !13141)
!13150 = !DILocation(line: 628, column: 25, scope: !13141)
!13151 = !DILocation(line: 628, column: 65, scope: !13141)
!13152 = !DILocation(line: 628, column: 63, scope: !13141)
!13153 = !DILocation(line: 628, column: 37, scope: !13141)
!13154 = !DILocation(line: 628, column: 73, scope: !13141)
!13155 = !DILocation(line: 628, column: 71, scope: !13141)
!13156 = !DILocation(line: 628, column: 2, scope: !13141)
!13157 = distinct !DISubprogram(name: "atmel_rmem16", scope: !3, file: !3, line: 668, type: !11589, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!13158 = !DILocalVariable(name: "priv", arg: 1, scope: !13157, file: !3, line: 668, type: !8587)
!13159 = !DILocation(line: 668, column: 54, scope: !13157)
!13160 = !DILocalVariable(name: "pos", arg: 2, scope: !13157, file: !3, line: 668, type: !916)
!13161 = !DILocation(line: 668, column: 64, scope: !13157)
!13162 = !DILocation(line: 670, column: 16, scope: !13157)
!13163 = !DILocation(line: 670, column: 22, scope: !13157)
!13164 = !DILocation(line: 670, column: 27, scope: !13157)
!13165 = !DILocation(line: 670, column: 2, scope: !13157)
!13166 = !DILocation(line: 671, column: 22, scope: !13157)
!13167 = !DILocation(line: 671, column: 28, scope: !13157)
!13168 = !DILocation(line: 671, column: 9, scope: !13157)
!13169 = !DILocation(line: 671, column: 2, scope: !13157)
!13170 = distinct !DISubprogram(name: "atmel_copy_to_host", scope: !3, file: !3, line: 4164, type: !13171, scopeLine: 4166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!13171 = !DISubroutineType(types: !13172)
!13172 = !{null, !495, !899, !916, !916}
!13173 = !DILocalVariable(name: "dev", arg: 1, scope: !13170, file: !3, line: 4164, type: !495)
!13174 = !DILocation(line: 4164, column: 51, scope: !13170)
!13175 = !DILocalVariable(name: "dest", arg: 2, scope: !13170, file: !3, line: 4164, type: !899)
!13176 = !DILocation(line: 4164, column: 71, scope: !13170)
!13177 = !DILocalVariable(name: "src", arg: 3, scope: !13170, file: !3, line: 4165, type: !916)
!13178 = !DILocation(line: 4165, column: 15, scope: !13170)
!13179 = !DILocalVariable(name: "len", arg: 4, scope: !13170, file: !3, line: 4165, type: !916)
!13180 = !DILocation(line: 4165, column: 24, scope: !13170)
!13181 = !DILocalVariable(name: "i", scope: !13170, file: !3, line: 4167, type: !7)
!13182 = !DILocation(line: 4167, column: 6, scope: !13170)
!13183 = !DILocation(line: 4168, column: 16, scope: !13170)
!13184 = !DILocation(line: 4168, column: 21, scope: !13170)
!13185 = !DILocation(line: 4168, column: 2, scope: !13170)
!13186 = !DILocation(line: 4169, column: 6, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !13170, file: !3, line: 4169, column: 6)
!13188 = !DILocation(line: 4169, column: 10, scope: !13187)
!13189 = !DILocation(line: 4169, column: 6, scope: !13170)
!13190 = !DILocation(line: 4170, column: 23, scope: !13191)
!13191 = distinct !DILexicalBlock(scope: !13187, file: !3, line: 4169, column: 15)
!13192 = !DILocation(line: 4170, column: 11, scope: !13191)
!13193 = !DILocation(line: 4170, column: 4, scope: !13191)
!13194 = !DILocation(line: 4170, column: 9, scope: !13191)
!13195 = !DILocation(line: 4171, column: 7, scope: !13191)
!13196 = !DILocation(line: 4171, column: 14, scope: !13191)
!13197 = !DILocation(line: 4172, column: 2, scope: !13191)
!13198 = !DILocation(line: 4173, column: 11, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13170, file: !3, line: 4173, column: 2)
!13200 = !DILocation(line: 4173, column: 9, scope: !13199)
!13201 = !DILocation(line: 4173, column: 7, scope: !13199)
!13202 = !DILocation(line: 4173, column: 16, scope: !13203)
!13203 = distinct !DILexicalBlock(scope: !13199, file: !3, line: 4173, column: 2)
!13204 = !DILocation(line: 4173, column: 18, scope: !13203)
!13205 = !DILocation(line: 4173, column: 2, scope: !13199)
!13206 = !DILocalVariable(name: "hw", scope: !13207, file: !3, line: 4174, type: !916)
!13207 = distinct !DILexicalBlock(scope: !13203, file: !3, line: 4173, column: 32)
!13208 = !DILocation(line: 4174, column: 7, scope: !13207)
!13209 = !DILocation(line: 4174, column: 25, scope: !13207)
!13210 = !DILocation(line: 4174, column: 12, scope: !13207)
!13211 = !DILocation(line: 4175, column: 13, scope: !13207)
!13212 = !DILocation(line: 4175, column: 8, scope: !13207)
!13213 = !DILocation(line: 4175, column: 11, scope: !13207)
!13214 = !DILocation(line: 4176, column: 13, scope: !13207)
!13215 = !DILocation(line: 4176, column: 16, scope: !13207)
!13216 = !DILocation(line: 4176, column: 8, scope: !13207)
!13217 = !DILocation(line: 4176, column: 11, scope: !13207)
!13218 = !DILocation(line: 4177, column: 2, scope: !13207)
!13219 = !DILocation(line: 4173, column: 26, scope: !13203)
!13220 = !DILocation(line: 4173, column: 2, scope: !13203)
!13221 = distinct !{!13221, !13205, !13222}
!13222 = !DILocation(line: 4177, column: 2, scope: !13199)
!13223 = !DILocation(line: 4178, column: 6, scope: !13224)
!13224 = distinct !DILexicalBlock(scope: !13170, file: !3, line: 4178, column: 6)
!13225 = !DILocation(line: 4178, column: 6, scope: !13170)
!13226 = !DILocation(line: 4179, column: 23, scope: !13224)
!13227 = !DILocation(line: 4179, column: 11, scope: !13224)
!13228 = !DILocation(line: 4179, column: 4, scope: !13224)
!13229 = !DILocation(line: 4179, column: 9, scope: !13224)
!13230 = !DILocation(line: 4179, column: 3, scope: !13224)
!13231 = !DILocation(line: 4180, column: 1, scope: !13170)
!13232 = distinct !DISubprogram(name: "probe_crc", scope: !3, file: !3, line: 945, type: !13233, scopeLine: 946, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!13233 = !DISubroutineType(types: !13234)
!13234 = !{!7, !8587, !916, !916}
!13235 = !DILocalVariable(name: "priv", arg: 1, scope: !13232, file: !3, line: 945, type: !8587)
!13236 = !DILocation(line: 945, column: 44, scope: !13232)
!13237 = !DILocalVariable(name: "packet_loc", arg: 2, scope: !13232, file: !3, line: 945, type: !916)
!13238 = !DILocation(line: 945, column: 54, scope: !13232)
!13239 = !DILocalVariable(name: "msdu_size", arg: 3, scope: !13232, file: !3, line: 945, type: !916)
!13240 = !DILocation(line: 945, column: 70, scope: !13232)
!13241 = !DILocalVariable(name: "i", scope: !13232, file: !3, line: 947, type: !7)
!13242 = !DILocation(line: 947, column: 6, scope: !13232)
!13243 = !DILocation(line: 947, column: 10, scope: !13232)
!13244 = !DILocation(line: 947, column: 20, scope: !13232)
!13245 = !DILocalVariable(name: "netcrc", scope: !13232, file: !3, line: 948, type: !1308)
!13246 = !DILocation(line: 948, column: 6, scope: !13232)
!13247 = !DILocalVariable(name: "crc", scope: !13232, file: !3, line: 948, type: !1308)
!13248 = !DILocation(line: 948, column: 14, scope: !13232)
!13249 = !DILocation(line: 950, column: 6, scope: !13250)
!13250 = distinct !DILexicalBlock(scope: !13232, file: !3, line: 950, column: 6)
!13251 = !DILocation(line: 950, column: 16, scope: !13250)
!13252 = !DILocation(line: 950, column: 6, scope: !13232)
!13253 = !DILocation(line: 951, column: 3, scope: !13250)
!13254 = !DILocation(line: 953, column: 21, scope: !13232)
!13255 = !DILocation(line: 953, column: 27, scope: !13232)
!13256 = !DILocation(line: 953, column: 32, scope: !13232)
!13257 = !DILocation(line: 953, column: 49, scope: !13232)
!13258 = !DILocation(line: 953, column: 62, scope: !13232)
!13259 = !DILocation(line: 953, column: 60, scope: !13232)
!13260 = !DILocation(line: 953, column: 2, scope: !13232)
!13261 = !DILocation(line: 955, column: 16, scope: !13232)
!13262 = !DILocation(line: 955, column: 22, scope: !13232)
!13263 = !DILocation(line: 955, column: 27, scope: !13232)
!13264 = !DILocation(line: 955, column: 2, scope: !13232)
!13265 = !DILocation(line: 956, column: 2, scope: !13232)
!13266 = !DILocation(line: 956, column: 10, scope: !13232)
!13267 = !DILocalVariable(name: "octet", scope: !13268, file: !3, line: 957, type: !1116)
!13268 = distinct !DILexicalBlock(scope: !13232, file: !3, line: 956, column: 14)
!13269 = !DILocation(line: 957, column: 6, scope: !13268)
!13270 = !DILocation(line: 957, column: 26, scope: !13268)
!13271 = !DILocation(line: 957, column: 32, scope: !13268)
!13272 = !DILocation(line: 957, column: 14, scope: !13268)
!13273 = !DILocation(line: 958, column: 18, scope: !13268)
!13274 = !DILocation(line: 958, column: 9, scope: !13268)
!13275 = !DILocation(line: 958, column: 7, scope: !13268)
!13276 = distinct !{!13276, !13265, !13277}
!13277 = !DILocation(line: 959, column: 2, scope: !13232)
!13278 = !DILocation(line: 961, column: 10, scope: !13232)
!13279 = !DILocation(line: 961, column: 14, scope: !13232)
!13280 = !DILocation(line: 961, column: 31, scope: !13232)
!13281 = !DILocation(line: 961, column: 28, scope: !13232)
!13282 = !DILocation(line: 961, column: 2, scope: !13232)
!13283 = !DILocation(line: 962, column: 1, scope: !13232)
!13284 = distinct !DISubprogram(name: "fast_rx_path", scope: !3, file: !3, line: 891, type: !13285, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!13285 = !DISubroutineType(types: !13286)
!13286 = !{null, !8587, !8588, !916, !916, !1308}
!13287 = !DILocalVariable(name: "priv", arg: 1, scope: !13284, file: !3, line: 891, type: !8587)
!13288 = !DILocation(line: 891, column: 48, scope: !13284)
!13289 = !DILocalVariable(name: "header", arg: 2, scope: !13284, file: !3, line: 892, type: !8588)
!13290 = !DILocation(line: 892, column: 27, scope: !13284)
!13291 = !DILocalVariable(name: "msdu_size", arg: 3, scope: !13284, file: !3, line: 893, type: !916)
!13292 = !DILocation(line: 893, column: 9, scope: !13284)
!13293 = !DILocalVariable(name: "rx_packet_loc", arg: 4, scope: !13284, file: !3, line: 893, type: !916)
!13294 = !DILocation(line: 893, column: 24, scope: !13284)
!13295 = !DILocalVariable(name: "crc", arg: 5, scope: !13284, file: !3, line: 893, type: !1308)
!13296 = !DILocation(line: 893, column: 43, scope: !13284)
!13297 = !DILocalVariable(name: "mac4", scope: !13284, file: !3, line: 896, type: !6709)
!13298 = !DILocation(line: 896, column: 5, scope: !13284)
!13299 = !DILocalVariable(name: "skb", scope: !13284, file: !3, line: 897, type: !756)
!13300 = !DILocation(line: 897, column: 18, scope: !13284)
!13301 = !DILocalVariable(name: "skbp", scope: !13284, file: !3, line: 898, type: !899)
!13302 = !DILocation(line: 898, column: 17, scope: !13284)
!13303 = !DILocation(line: 901, column: 21, scope: !13284)
!13304 = !DILocation(line: 901, column: 27, scope: !13284)
!13305 = !DILocation(line: 901, column: 32, scope: !13284)
!13306 = !DILocation(line: 901, column: 38, scope: !13284)
!13307 = !DILocation(line: 901, column: 52, scope: !13284)
!13308 = !DILocation(line: 901, column: 2, scope: !13284)
!13309 = !DILocation(line: 902, column: 12, scope: !13284)
!13310 = !DILocation(line: 904, column: 6, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13284, file: !3, line: 904, column: 6)
!13312 = !DILocation(line: 904, column: 12, scope: !13311)
!13313 = !DILocation(line: 904, column: 6, scope: !13284)
!13314 = !DILocation(line: 905, column: 18, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13311, file: !3, line: 904, column: 23)
!13316 = !DILocation(line: 905, column: 23, scope: !13315)
!13317 = !DILocation(line: 905, column: 9, scope: !13315)
!13318 = !DILocation(line: 905, column: 7, scope: !13315)
!13319 = !DILocation(line: 906, column: 13, scope: !13315)
!13320 = !DILocation(line: 907, column: 2, scope: !13315)
!13321 = !DILocation(line: 909, column: 28, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13284, file: !3, line: 909, column: 6)
!13323 = !DILocation(line: 909, column: 38, scope: !13322)
!13324 = !DILocation(line: 909, column: 14, scope: !13322)
!13325 = !DILocation(line: 909, column: 12, scope: !13322)
!13326 = !DILocation(line: 909, column: 6, scope: !13284)
!13327 = !DILocation(line: 910, column: 3, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !13322, file: !3, line: 909, column: 46)
!13329 = !DILocation(line: 910, column: 9, scope: !13328)
!13330 = !DILocation(line: 910, column: 14, scope: !13328)
!13331 = !DILocation(line: 910, column: 20, scope: !13328)
!13332 = !DILocation(line: 910, column: 30, scope: !13328)
!13333 = !DILocation(line: 911, column: 3, scope: !13328)
!13334 = !DILocation(line: 914, column: 14, scope: !13284)
!13335 = !DILocation(line: 914, column: 2, scope: !13284)
!13336 = !DILocation(line: 915, column: 17, scope: !13284)
!13337 = !DILocation(line: 915, column: 22, scope: !13284)
!13338 = !DILocation(line: 915, column: 32, scope: !13284)
!13339 = !DILocation(line: 915, column: 9, scope: !13284)
!13340 = !DILocation(line: 915, column: 7, scope: !13284)
!13341 = !DILocation(line: 916, column: 21, scope: !13284)
!13342 = !DILocation(line: 916, column: 27, scope: !13284)
!13343 = !DILocation(line: 916, column: 32, scope: !13284)
!13344 = !DILocation(line: 916, column: 37, scope: !13284)
!13345 = !DILocation(line: 916, column: 43, scope: !13284)
!13346 = !DILocation(line: 916, column: 57, scope: !13284)
!13347 = !DILocation(line: 916, column: 63, scope: !13284)
!13348 = !DILocation(line: 916, column: 2, scope: !13284)
!13349 = !DILocation(line: 918, column: 6, scope: !13350)
!13350 = distinct !DILexicalBlock(scope: !13284, file: !3, line: 918, column: 6)
!13351 = !DILocation(line: 918, column: 12, scope: !13350)
!13352 = !DILocation(line: 918, column: 6, scope: !13284)
!13353 = !DILocalVariable(name: "netcrc", scope: !13354, file: !3, line: 919, type: !1308)
!13354 = distinct !DILexicalBlock(scope: !13350, file: !3, line: 918, column: 23)
!13355 = !DILocation(line: 919, column: 7, scope: !13354)
!13356 = !DILocation(line: 920, column: 18, scope: !13354)
!13357 = !DILocation(line: 920, column: 23, scope: !13354)
!13358 = !DILocation(line: 920, column: 28, scope: !13354)
!13359 = !DILocation(line: 920, column: 34, scope: !13354)
!13360 = !DILocation(line: 920, column: 9, scope: !13354)
!13361 = !DILocation(line: 920, column: 7, scope: !13354)
!13362 = !DILocation(line: 921, column: 22, scope: !13354)
!13363 = !DILocation(line: 921, column: 28, scope: !13354)
!13364 = !DILocation(line: 921, column: 33, scope: !13354)
!13365 = !DILocation(line: 921, column: 50, scope: !13354)
!13366 = !DILocation(line: 921, column: 64, scope: !13354)
!13367 = !DILocation(line: 921, column: 71, scope: !13354)
!13368 = !DILocation(line: 921, column: 69, scope: !13354)
!13369 = !DILocation(line: 921, column: 3, scope: !13354)
!13370 = !DILocation(line: 922, column: 8, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13354, file: !3, line: 922, column: 7)
!13372 = !DILocation(line: 922, column: 12, scope: !13371)
!13373 = !DILocation(line: 922, column: 29, scope: !13371)
!13374 = !DILocation(line: 922, column: 26, scope: !13371)
!13375 = !DILocation(line: 922, column: 7, scope: !13354)
!13376 = !DILocation(line: 923, column: 4, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 922, column: 37)
!13378 = !DILocation(line: 923, column: 10, scope: !13377)
!13379 = !DILocation(line: 923, column: 15, scope: !13377)
!13380 = !DILocation(line: 923, column: 21, scope: !13377)
!13381 = !DILocation(line: 923, column: 34, scope: !13377)
!13382 = !DILocation(line: 924, column: 4, scope: !13377)
!13383 = !DILocation(line: 925, column: 4, scope: !13377)
!13384 = !DILocation(line: 927, column: 2, scope: !13354)
!13385 = !DILocation(line: 929, column: 9, scope: !13284)
!13386 = !DILocation(line: 929, column: 15, scope: !13284)
!13387 = !DILocation(line: 929, column: 23, scope: !13284)
!13388 = !DILocation(line: 929, column: 2, scope: !13284)
!13389 = !DILocation(line: 930, column: 6, scope: !13390)
!13390 = distinct !DILexicalBlock(scope: !13284, file: !3, line: 930, column: 6)
!13391 = !DILocation(line: 930, column: 41, scope: !13390)
!13392 = !DILocation(line: 930, column: 6, scope: !13284)
!13393 = !DILocation(line: 931, column: 11, scope: !13390)
!13394 = !DILocation(line: 931, column: 27, scope: !13390)
!13395 = !DILocation(line: 931, column: 35, scope: !13390)
!13396 = !DILocation(line: 931, column: 3, scope: !13390)
!13397 = !DILocation(line: 933, column: 11, scope: !13390)
!13398 = !DILocation(line: 933, column: 27, scope: !13390)
!13399 = !DILocation(line: 933, column: 35, scope: !13390)
!13400 = !DILocation(line: 933, column: 3, scope: !13390)
!13401 = !DILocation(line: 935, column: 33, scope: !13284)
!13402 = !DILocation(line: 935, column: 38, scope: !13284)
!13403 = !DILocation(line: 935, column: 44, scope: !13284)
!13404 = !DILocation(line: 935, column: 18, scope: !13284)
!13405 = !DILocation(line: 935, column: 2, scope: !13284)
!13406 = !DILocation(line: 935, column: 7, scope: !13284)
!13407 = !DILocation(line: 935, column: 16, scope: !13284)
!13408 = !DILocation(line: 936, column: 2, scope: !13284)
!13409 = !DILocation(line: 936, column: 7, scope: !13284)
!13410 = !DILocation(line: 936, column: 17, scope: !13284)
!13411 = !DILocation(line: 937, column: 11, scope: !13284)
!13412 = !DILocation(line: 937, column: 2, scope: !13284)
!13413 = !DILocation(line: 938, column: 36, scope: !13284)
!13414 = !DILocation(line: 938, column: 34, scope: !13284)
!13415 = !DILocation(line: 938, column: 31, scope: !13284)
!13416 = !DILocation(line: 938, column: 2, scope: !13284)
!13417 = !DILocation(line: 938, column: 8, scope: !13284)
!13418 = !DILocation(line: 938, column: 13, scope: !13284)
!13419 = !DILocation(line: 938, column: 19, scope: !13284)
!13420 = !DILocation(line: 938, column: 28, scope: !13284)
!13421 = !DILocation(line: 939, column: 2, scope: !13284)
!13422 = !DILocation(line: 939, column: 8, scope: !13284)
!13423 = !DILocation(line: 939, column: 13, scope: !13284)
!13424 = !DILocation(line: 939, column: 19, scope: !13284)
!13425 = !DILocation(line: 939, column: 29, scope: !13284)
!13426 = !DILocation(line: 940, column: 1, scope: !13284)
!13427 = distinct !DISubprogram(name: "frag_rx_path", scope: !3, file: !3, line: 964, type: !13428, scopeLine: 968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!13428 = !DISubroutineType(types: !13429)
!13429 = !{null, !8587, !8588, !916, !916, !1308, !916, !1116, !7}
!13430 = !DILocalVariable(name: "priv", arg: 1, scope: !13427, file: !3, line: 964, type: !8587)
!13431 = !DILocation(line: 964, column: 48, scope: !13427)
!13432 = !DILocalVariable(name: "header", arg: 2, scope: !13427, file: !3, line: 965, type: !8588)
!13433 = !DILocation(line: 965, column: 27, scope: !13427)
!13434 = !DILocalVariable(name: "msdu_size", arg: 3, scope: !13427, file: !3, line: 966, type: !916)
!13435 = !DILocation(line: 966, column: 9, scope: !13427)
!13436 = !DILocalVariable(name: "rx_packet_loc", arg: 4, scope: !13427, file: !3, line: 966, type: !916)
!13437 = !DILocation(line: 966, column: 24, scope: !13427)
!13438 = !DILocalVariable(name: "crc", arg: 5, scope: !13427, file: !3, line: 966, type: !1308)
!13439 = !DILocation(line: 966, column: 43, scope: !13427)
!13440 = !DILocalVariable(name: "seq_no", arg: 6, scope: !13427, file: !3, line: 966, type: !916)
!13441 = !DILocation(line: 966, column: 52, scope: !13427)
!13442 = !DILocalVariable(name: "frag_no", arg: 7, scope: !13427, file: !3, line: 967, type: !1116)
!13443 = !DILocation(line: 967, column: 8, scope: !13427)
!13444 = !DILocalVariable(name: "more_frags", arg: 8, scope: !13427, file: !3, line: 967, type: !7)
!13445 = !DILocation(line: 967, column: 21, scope: !13427)
!13446 = !DILocalVariable(name: "mac4", scope: !13427, file: !3, line: 969, type: !6709)
!13447 = !DILocation(line: 969, column: 5, scope: !13427)
!13448 = !DILocalVariable(name: "source", scope: !13427, file: !3, line: 970, type: !6709)
!13449 = !DILocation(line: 970, column: 5, scope: !13427)
!13450 = !DILocalVariable(name: "skb", scope: !13427, file: !3, line: 971, type: !756)
!13451 = !DILocation(line: 971, column: 18, scope: !13427)
!13452 = !DILocation(line: 973, column: 6, scope: !13453)
!13453 = distinct !DILexicalBlock(scope: !13427, file: !3, line: 973, column: 6)
!13454 = !DILocation(line: 973, column: 41, scope: !13453)
!13455 = !DILocation(line: 973, column: 6, scope: !13427)
!13456 = !DILocation(line: 974, column: 3, scope: !13453)
!13457 = !DILocation(line: 974, column: 18, scope: !13453)
!13458 = !DILocation(line: 974, column: 26, scope: !13453)
!13459 = !DILocation(line: 976, column: 3, scope: !13453)
!13460 = !DILocation(line: 976, column: 18, scope: !13453)
!13461 = !DILocation(line: 976, column: 26, scope: !13453)
!13462 = !DILocation(line: 978, column: 16, scope: !13427)
!13463 = !DILocation(line: 980, column: 6, scope: !13464)
!13464 = distinct !DILexicalBlock(scope: !13427, file: !3, line: 980, column: 6)
!13465 = !DILocation(line: 980, column: 12, scope: !13464)
!13466 = !DILocation(line: 980, column: 6, scope: !13427)
!13467 = !DILocation(line: 981, column: 13, scope: !13464)
!13468 = !DILocation(line: 981, column: 3, scope: !13464)
!13469 = !DILocation(line: 983, column: 6, scope: !13470)
!13470 = distinct !DILexicalBlock(scope: !13427, file: !3, line: 983, column: 6)
!13471 = !DILocation(line: 983, column: 14, scope: !13470)
!13472 = !DILocation(line: 983, column: 6, scope: !13427)
!13473 = !DILocation(line: 984, column: 22, scope: !13474)
!13474 = distinct !DILexicalBlock(scope: !13470, file: !3, line: 983, column: 20)
!13475 = !DILocation(line: 984, column: 28, scope: !13474)
!13476 = !DILocation(line: 984, column: 33, scope: !13474)
!13477 = !DILocation(line: 984, column: 39, scope: !13474)
!13478 = !DILocation(line: 984, column: 3, scope: !13474)
!13479 = !DILocation(line: 985, column: 13, scope: !13474)
!13480 = !DILocation(line: 986, column: 17, scope: !13474)
!13481 = !DILocation(line: 988, column: 7, scope: !13482)
!13482 = distinct !DILexicalBlock(scope: !13474, file: !3, line: 988, column: 7)
!13483 = !DILocation(line: 988, column: 13, scope: !13482)
!13484 = !DILocation(line: 988, column: 7, scope: !13474)
!13485 = !DILocation(line: 989, column: 19, scope: !13482)
!13486 = !DILocation(line: 989, column: 24, scope: !13482)
!13487 = !DILocation(line: 989, column: 10, scope: !13482)
!13488 = !DILocation(line: 989, column: 8, scope: !13482)
!13489 = !DILocation(line: 989, column: 4, scope: !13482)
!13490 = !DILocation(line: 991, column: 20, scope: !13474)
!13491 = !DILocation(line: 991, column: 3, scope: !13474)
!13492 = !DILocation(line: 991, column: 9, scope: !13474)
!13493 = !DILocation(line: 991, column: 18, scope: !13474)
!13494 = !DILocation(line: 992, column: 3, scope: !13474)
!13495 = !DILocation(line: 992, column: 9, scope: !13474)
!13496 = !DILocation(line: 992, column: 17, scope: !13474)
!13497 = !DILocation(line: 993, column: 20, scope: !13474)
!13498 = !DILocation(line: 993, column: 3, scope: !13474)
!13499 = !DILocation(line: 993, column: 9, scope: !13474)
!13500 = !DILocation(line: 993, column: 18, scope: !13474)
!13501 = !DILocation(line: 994, column: 10, scope: !13474)
!13502 = !DILocation(line: 994, column: 16, scope: !13474)
!13503 = !DILocation(line: 994, column: 3, scope: !13474)
!13504 = !DILocation(line: 995, column: 11, scope: !13474)
!13505 = !DILocation(line: 995, column: 17, scope: !13474)
!13506 = !DILocation(line: 995, column: 3, scope: !13474)
!13507 = !DILocation(line: 996, column: 10, scope: !13474)
!13508 = !DILocation(line: 996, column: 16, scope: !13474)
!13509 = !DILocation(line: 996, column: 3, scope: !13474)
!13510 = !DILocation(line: 996, column: 24, scope: !13474)
!13511 = !DILocation(line: 996, column: 32, scope: !13474)
!13512 = !DILocation(line: 998, column: 22, scope: !13474)
!13513 = !DILocation(line: 998, column: 28, scope: !13474)
!13514 = !DILocation(line: 998, column: 34, scope: !13474)
!13515 = !DILocation(line: 998, column: 40, scope: !13474)
!13516 = !DILocation(line: 998, column: 52, scope: !13474)
!13517 = !DILocation(line: 998, column: 67, scope: !13474)
!13518 = !DILocation(line: 998, column: 3, scope: !13474)
!13519 = !DILocation(line: 1000, column: 7, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13474, file: !3, line: 1000, column: 7)
!13521 = !DILocation(line: 1000, column: 13, scope: !13520)
!13522 = !DILocation(line: 1000, column: 7, scope: !13474)
!13523 = !DILocalVariable(name: "netcrc", scope: !13524, file: !3, line: 1001, type: !1308)
!13524 = distinct !DILexicalBlock(scope: !13520, file: !3, line: 1000, column: 24)
!13525 = !DILocation(line: 1001, column: 8, scope: !13524)
!13526 = !DILocation(line: 1002, column: 19, scope: !13524)
!13527 = !DILocation(line: 1002, column: 25, scope: !13524)
!13528 = !DILocation(line: 1002, column: 31, scope: !13524)
!13529 = !DILocation(line: 1002, column: 43, scope: !13524)
!13530 = !DILocation(line: 1002, column: 10, scope: !13524)
!13531 = !DILocation(line: 1002, column: 8, scope: !13524)
!13532 = !DILocation(line: 1003, column: 23, scope: !13524)
!13533 = !DILocation(line: 1003, column: 29, scope: !13524)
!13534 = !DILocation(line: 1003, column: 34, scope: !13524)
!13535 = !DILocation(line: 1003, column: 51, scope: !13524)
!13536 = !DILocation(line: 1003, column: 67, scope: !13524)
!13537 = !DILocation(line: 1003, column: 65, scope: !13524)
!13538 = !DILocation(line: 1003, column: 4, scope: !13524)
!13539 = !DILocation(line: 1004, column: 9, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13524, file: !3, line: 1004, column: 8)
!13541 = !DILocation(line: 1004, column: 13, scope: !13540)
!13542 = !DILocation(line: 1004, column: 30, scope: !13540)
!13543 = !DILocation(line: 1004, column: 27, scope: !13540)
!13544 = !DILocation(line: 1004, column: 8, scope: !13524)
!13545 = !DILocation(line: 1005, column: 5, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13540, file: !3, line: 1004, column: 38)
!13547 = !DILocation(line: 1005, column: 11, scope: !13546)
!13548 = !DILocation(line: 1005, column: 16, scope: !13546)
!13549 = !DILocation(line: 1005, column: 22, scope: !13546)
!13550 = !DILocation(line: 1005, column: 35, scope: !13546)
!13551 = !DILocation(line: 1006, column: 24, scope: !13546)
!13552 = !DILocation(line: 1006, column: 30, scope: !13546)
!13553 = !DILocation(line: 1006, column: 5, scope: !13546)
!13554 = !DILocation(line: 1007, column: 4, scope: !13546)
!13555 = !DILocation(line: 1008, column: 3, scope: !13524)
!13556 = !DILocation(line: 1010, column: 2, scope: !13474)
!13557 = !DILocation(line: 1010, column: 13, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13470, file: !3, line: 1010, column: 13)
!13559 = !DILocation(line: 1010, column: 19, scope: !13558)
!13560 = !DILocation(line: 1010, column: 30, scope: !13558)
!13561 = !DILocation(line: 1010, column: 27, scope: !13558)
!13562 = !DILocation(line: 1010, column: 38, scope: !13558)
!13563 = !DILocation(line: 1011, column: 6, scope: !13558)
!13564 = !DILocation(line: 1011, column: 12, scope: !13558)
!13565 = !DILocation(line: 1011, column: 24, scope: !13558)
!13566 = !DILocation(line: 1011, column: 21, scope: !13558)
!13567 = !DILocation(line: 1011, column: 31, scope: !13558)
!13568 = !DILocation(line: 1012, column: 13, scope: !13558)
!13569 = !DILocation(line: 1012, column: 19, scope: !13558)
!13570 = !DILocation(line: 1012, column: 32, scope: !13558)
!13571 = !DILocation(line: 1012, column: 6, scope: !13558)
!13572 = !DILocation(line: 1012, column: 50, scope: !13558)
!13573 = !DILocation(line: 1010, column: 13, scope: !13470)
!13574 = !DILocation(line: 1014, column: 22, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 1012, column: 56)
!13576 = !DILocation(line: 1014, column: 28, scope: !13575)
!13577 = !DILocation(line: 1014, column: 34, scope: !13575)
!13578 = !DILocation(line: 1014, column: 40, scope: !13575)
!13579 = !DILocation(line: 1014, column: 52, scope: !13575)
!13580 = !DILocation(line: 1014, column: 58, scope: !13575)
!13581 = !DILocation(line: 1014, column: 50, scope: !13575)
!13582 = !DILocation(line: 1015, column: 8, scope: !13575)
!13583 = !DILocation(line: 1015, column: 23, scope: !13575)
!13584 = !DILocation(line: 1014, column: 3, scope: !13575)
!13585 = !DILocation(line: 1016, column: 7, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !13575, file: !3, line: 1016, column: 7)
!13587 = !DILocation(line: 1016, column: 13, scope: !13586)
!13588 = !DILocation(line: 1016, column: 7, scope: !13575)
!13589 = !DILocalVariable(name: "netcrc", scope: !13590, file: !3, line: 1017, type: !1308)
!13590 = distinct !DILexicalBlock(scope: !13586, file: !3, line: 1016, column: 24)
!13591 = !DILocation(line: 1017, column: 8, scope: !13590)
!13592 = !DILocation(line: 1018, column: 19, scope: !13590)
!13593 = !DILocation(line: 1019, column: 13, scope: !13590)
!13594 = !DILocation(line: 1019, column: 19, scope: !13590)
!13595 = !DILocation(line: 1019, column: 31, scope: !13590)
!13596 = !DILocation(line: 1019, column: 37, scope: !13590)
!13597 = !DILocation(line: 1019, column: 29, scope: !13590)
!13598 = !DILocation(line: 1020, column: 12, scope: !13590)
!13599 = !DILocation(line: 1018, column: 10, scope: !13590)
!13600 = !DILocation(line: 1018, column: 8, scope: !13590)
!13601 = !DILocation(line: 1021, column: 23, scope: !13590)
!13602 = !DILocation(line: 1021, column: 29, scope: !13590)
!13603 = !DILocation(line: 1021, column: 34, scope: !13590)
!13604 = !DILocation(line: 1021, column: 51, scope: !13590)
!13605 = !DILocation(line: 1021, column: 67, scope: !13590)
!13606 = !DILocation(line: 1021, column: 65, scope: !13590)
!13607 = !DILocation(line: 1021, column: 4, scope: !13590)
!13608 = !DILocation(line: 1022, column: 9, scope: !13609)
!13609 = distinct !DILexicalBlock(scope: !13590, file: !3, line: 1022, column: 8)
!13610 = !DILocation(line: 1022, column: 13, scope: !13609)
!13611 = !DILocation(line: 1022, column: 30, scope: !13609)
!13612 = !DILocation(line: 1022, column: 27, scope: !13609)
!13613 = !DILocation(line: 1022, column: 8, scope: !13590)
!13614 = !DILocation(line: 1023, column: 5, scope: !13615)
!13615 = distinct !DILexicalBlock(scope: !13609, file: !3, line: 1022, column: 38)
!13616 = !DILocation(line: 1023, column: 11, scope: !13615)
!13617 = !DILocation(line: 1023, column: 16, scope: !13615)
!13618 = !DILocation(line: 1023, column: 22, scope: !13615)
!13619 = !DILocation(line: 1023, column: 35, scope: !13615)
!13620 = !DILocation(line: 1024, column: 24, scope: !13615)
!13621 = !DILocation(line: 1024, column: 30, scope: !13615)
!13622 = !DILocation(line: 1024, column: 5, scope: !13615)
!13623 = !DILocation(line: 1025, column: 16, scope: !13615)
!13624 = !DILocation(line: 1026, column: 4, scope: !13615)
!13625 = !DILocation(line: 1027, column: 3, scope: !13590)
!13626 = !DILocation(line: 1029, column: 21, scope: !13575)
!13627 = !DILocation(line: 1029, column: 3, scope: !13575)
!13628 = !DILocation(line: 1029, column: 9, scope: !13575)
!13629 = !DILocation(line: 1029, column: 18, scope: !13575)
!13630 = !DILocation(line: 1030, column: 3, scope: !13575)
!13631 = !DILocation(line: 1030, column: 9, scope: !13575)
!13632 = !DILocation(line: 1030, column: 16, scope: !13575)
!13633 = !DILocation(line: 1032, column: 8, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !13575, file: !3, line: 1032, column: 7)
!13635 = !DILocation(line: 1032, column: 7, scope: !13575)
!13636 = !DILocation(line: 1033, column: 23, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13634, file: !3, line: 1032, column: 20)
!13638 = !DILocation(line: 1033, column: 29, scope: !13637)
!13639 = !DILocation(line: 1033, column: 4, scope: !13637)
!13640 = !DILocation(line: 1034, column: 30, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13637, file: !3, line: 1034, column: 8)
!13642 = !DILocation(line: 1034, column: 36, scope: !13641)
!13643 = !DILocation(line: 1034, column: 45, scope: !13641)
!13644 = !DILocation(line: 1034, column: 16, scope: !13641)
!13645 = !DILocation(line: 1034, column: 14, scope: !13641)
!13646 = !DILocation(line: 1034, column: 8, scope: !13637)
!13647 = !DILocation(line: 1035, column: 5, scope: !13648)
!13648 = distinct !DILexicalBlock(scope: !13641, file: !3, line: 1034, column: 53)
!13649 = !DILocation(line: 1035, column: 11, scope: !13648)
!13650 = !DILocation(line: 1035, column: 16, scope: !13648)
!13651 = !DILocation(line: 1035, column: 22, scope: !13648)
!13652 = !DILocation(line: 1035, column: 32, scope: !13648)
!13653 = !DILocation(line: 1036, column: 4, scope: !13648)
!13654 = !DILocation(line: 1037, column: 17, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13641, file: !3, line: 1036, column: 11)
!13656 = !DILocation(line: 1037, column: 5, scope: !13655)
!13657 = !DILocation(line: 1038, column: 18, scope: !13655)
!13658 = !DILocation(line: 1038, column: 23, scope: !13655)
!13659 = !DILocation(line: 1038, column: 29, scope: !13655)
!13660 = !DILocation(line: 1039, column: 18, scope: !13655)
!13661 = !DILocation(line: 1039, column: 24, scope: !13655)
!13662 = !DILocation(line: 1039, column: 33, scope: !13655)
!13663 = !DILocation(line: 1038, column: 5, scope: !13655)
!13664 = !DILocation(line: 1040, column: 36, scope: !13655)
!13665 = !DILocation(line: 1040, column: 41, scope: !13655)
!13666 = !DILocation(line: 1040, column: 47, scope: !13655)
!13667 = !DILocation(line: 1040, column: 21, scope: !13655)
!13668 = !DILocation(line: 1040, column: 5, scope: !13655)
!13669 = !DILocation(line: 1040, column: 10, scope: !13655)
!13670 = !DILocation(line: 1040, column: 19, scope: !13655)
!13671 = !DILocation(line: 1041, column: 5, scope: !13655)
!13672 = !DILocation(line: 1041, column: 10, scope: !13655)
!13673 = !DILocation(line: 1041, column: 20, scope: !13655)
!13674 = !DILocation(line: 1042, column: 14, scope: !13655)
!13675 = !DILocation(line: 1042, column: 5, scope: !13655)
!13676 = !DILocation(line: 1043, column: 34, scope: !13655)
!13677 = !DILocation(line: 1043, column: 40, scope: !13655)
!13678 = !DILocation(line: 1043, column: 49, scope: !13655)
!13679 = !DILocation(line: 1043, column: 5, scope: !13655)
!13680 = !DILocation(line: 1043, column: 11, scope: !13655)
!13681 = !DILocation(line: 1043, column: 16, scope: !13655)
!13682 = !DILocation(line: 1043, column: 22, scope: !13655)
!13683 = !DILocation(line: 1043, column: 31, scope: !13655)
!13684 = !DILocation(line: 1044, column: 5, scope: !13655)
!13685 = !DILocation(line: 1044, column: 11, scope: !13655)
!13686 = !DILocation(line: 1044, column: 16, scope: !13655)
!13687 = !DILocation(line: 1044, column: 22, scope: !13655)
!13688 = !DILocation(line: 1044, column: 32, scope: !13655)
!13689 = !DILocation(line: 1046, column: 3, scope: !13637)
!13690 = !DILocation(line: 1047, column: 2, scope: !13575)
!13691 = !DILocation(line: 1048, column: 3, scope: !13558)
!13692 = !DILocation(line: 1048, column: 9, scope: !13558)
!13693 = !DILocation(line: 1048, column: 16, scope: !13558)
!13694 = !DILocation(line: 1048, column: 24, scope: !13558)
!13695 = !DILocation(line: 1048, column: 32, scope: !13558)
!13696 = !DILocation(line: 1049, column: 1, scope: !13427)
!13697 = distinct !DISubprogram(name: "eth_broadcast_addr", scope: !9977, file: !9977, line: 238, type: !9978, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!13698 = !DILocalVariable(name: "addr", arg: 1, scope: !13697, file: !9977, line: 238, type: !1115)
!13699 = !DILocation(line: 238, column: 43, scope: !13697)
!13700 = !DILocation(line: 240, column: 9, scope: !13697)
!13701 = !DILocation(line: 240, column: 2, scope: !13697)
!13702 = !DILocation(line: 241, column: 1, scope: !13697)
!13703 = !DILocalVariable(name: "priv", arg: 1, scope: !8584, file: !3, line: 3306, type: !8587)
!13704 = !DILocation(line: 3306, column: 58, scope: !8584)
!13705 = !DILocalVariable(name: "header", arg: 2, scope: !8584, file: !3, line: 3307, type: !8588)
!13706 = !DILocation(line: 3307, column: 30, scope: !8584)
!13707 = !DILocalVariable(name: "frame_len", arg: 3, scope: !8584, file: !3, line: 3308, type: !916)
!13708 = !DILocation(line: 3308, column: 12, scope: !8584)
!13709 = !DILocalVariable(name: "rssi", arg: 4, scope: !8584, file: !3, line: 3308, type: !1116)
!13710 = !DILocation(line: 3308, column: 26, scope: !8584)
!13711 = !DILocalVariable(name: "subtype", scope: !8584, file: !3, line: 3310, type: !916)
!13712 = !DILocation(line: 3310, column: 6, scope: !8584)
!13713 = !DILocation(line: 3312, column: 12, scope: !8584)
!13714 = !DILocation(line: 3312, column: 47, scope: !8584)
!13715 = !DILocation(line: 3312, column: 10, scope: !8584)
!13716 = !DILocation(line: 3313, column: 10, scope: !8584)
!13717 = !DILocation(line: 3313, column: 2, scope: !8584)
!13718 = !DILocalVariable(name: "beacon", scope: !13719, file: !3, line: 3333, type: !8582)
!13719 = distinct !DILexicalBlock(scope: !13720, file: !3, line: 3319, column: 3)
!13720 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 3313, column: 19)
!13721 = !DILocation(line: 3333, column: 7, scope: !13719)
!13722 = !DILocation(line: 3333, column: 40, scope: !13719)
!13723 = !DILocation(line: 3333, column: 46, scope: !13719)
!13724 = !DILocation(line: 3333, column: 16, scope: !13719)
!13725 = !DILocalVariable(name: "channel", scope: !13719, file: !3, line: 3335, type: !1116)
!13726 = !DILocation(line: 3335, column: 7, scope: !13719)
!13727 = !DILocalVariable(name: "rates_length", scope: !13719, file: !3, line: 3335, type: !1116)
!13728 = !DILocation(line: 3335, column: 16, scope: !13719)
!13729 = !DILocalVariable(name: "ssid_length", scope: !13719, file: !3, line: 3335, type: !1116)
!13730 = !DILocation(line: 3335, column: 30, scope: !13719)
!13731 = !DILocalVariable(name: "timestamp", scope: !13719, file: !3, line: 3336, type: !536)
!13732 = !DILocation(line: 3336, column: 8, scope: !13719)
!13733 = !DILocation(line: 3336, column: 20, scope: !13719)
!13734 = !DILocalVariable(name: "beacon_interval", scope: !13719, file: !3, line: 3337, type: !916)
!13735 = !DILocation(line: 3337, column: 8, scope: !13719)
!13736 = !DILocation(line: 3337, column: 26, scope: !13719)
!13737 = !DILocalVariable(name: "capability", scope: !13719, file: !3, line: 3338, type: !916)
!13738 = !DILocation(line: 3338, column: 8, scope: !13719)
!13739 = !DILocation(line: 3338, column: 21, scope: !13719)
!13740 = !DILocalVariable(name: "beaconp", scope: !13719, file: !3, line: 3339, type: !1115)
!13741 = !DILocation(line: 3339, column: 8, scope: !13719)
!13742 = !DILocation(line: 3339, column: 18, scope: !13719)
!13743 = !DILocation(line: 3339, column: 24, scope: !13719)
!13744 = !DILocation(line: 3340, column: 18, scope: !13719)
!13745 = !DILocation(line: 3340, column: 26, scope: !13719)
!13746 = !DILocation(line: 3340, column: 16, scope: !13719)
!13747 = !DILocation(line: 3342, column: 8, scope: !13748)
!13748 = distinct !DILexicalBlock(scope: !13719, file: !3, line: 3342, column: 8)
!13749 = !DILocation(line: 3342, column: 18, scope: !13748)
!13750 = !DILocation(line: 3342, column: 23, scope: !13748)
!13751 = !DILocation(line: 3342, column: 26, scope: !13748)
!13752 = !DILocation(line: 3342, column: 38, scope: !13748)
!13753 = !DILocation(line: 3342, column: 50, scope: !13748)
!13754 = !DILocation(line: 3342, column: 36, scope: !13748)
!13755 = !DILocation(line: 3342, column: 8, scope: !13719)
!13756 = !DILocation(line: 3343, column: 5, scope: !13748)
!13757 = !DILocation(line: 3344, column: 19, scope: !13719)
!13758 = !DILocation(line: 3344, column: 27, scope: !13719)
!13759 = !DILocation(line: 3344, column: 35, scope: !13719)
!13760 = !DILocation(line: 3344, column: 47, scope: !13719)
!13761 = !DILocation(line: 3344, column: 17, scope: !13719)
!13762 = !DILocation(line: 3345, column: 8, scope: !13763)
!13763 = distinct !DILexicalBlock(scope: !13719, file: !3, line: 3345, column: 8)
!13764 = !DILocation(line: 3345, column: 20, scope: !13763)
!13765 = !DILocation(line: 3345, column: 34, scope: !13763)
!13766 = !DILocation(line: 3345, column: 32, scope: !13763)
!13767 = !DILocation(line: 3345, column: 47, scope: !13763)
!13768 = !DILocation(line: 3345, column: 18, scope: !13763)
!13769 = !DILocation(line: 3345, column: 8, scope: !13719)
!13770 = !DILocation(line: 3346, column: 5, scope: !13763)
!13771 = !DILocation(line: 3347, column: 8, scope: !13772)
!13772 = distinct !DILexicalBlock(scope: !13719, file: !3, line: 3347, column: 8)
!13773 = !DILocation(line: 3347, column: 20, scope: !13772)
!13774 = !DILocation(line: 3347, column: 8, scope: !13719)
!13775 = !DILocation(line: 3348, column: 5, scope: !13772)
!13776 = !DILocation(line: 3349, column: 14, scope: !13719)
!13777 = !DILocation(line: 3349, column: 22, scope: !13719)
!13778 = !DILocation(line: 3349, column: 36, scope: !13719)
!13779 = !DILocation(line: 3349, column: 34, scope: !13719)
!13780 = !DILocation(line: 3349, column: 49, scope: !13719)
!13781 = !DILocation(line: 3349, column: 12, scope: !13719)
!13782 = !DILocation(line: 3351, column: 8, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13719, file: !3, line: 3351, column: 8)
!13784 = !DILocation(line: 3351, column: 14, scope: !13783)
!13785 = !DILocation(line: 3351, column: 28, scope: !13783)
!13786 = !DILocation(line: 3351, column: 8, scope: !13719)
!13787 = !DILocation(line: 3352, column: 17, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13783, file: !3, line: 3351, column: 52)
!13789 = !DILocation(line: 3352, column: 23, scope: !13788)
!13790 = !DILocation(line: 3352, column: 5, scope: !13788)
!13791 = !DILocation(line: 3353, column: 35, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13788, file: !3, line: 3353, column: 9)
!13793 = !DILocation(line: 3353, column: 41, scope: !13792)
!13794 = !DILocation(line: 3353, column: 9, scope: !13792)
!13795 = !DILocation(line: 3353, column: 9, scope: !13788)
!13796 = !DILocation(line: 3354, column: 6, scope: !13797)
!13797 = distinct !DILexicalBlock(scope: !13792, file: !3, line: 3353, column: 50)
!13798 = !DILocation(line: 3354, column: 12, scope: !13797)
!13799 = !DILocation(line: 3354, column: 28, scope: !13797)
!13800 = !DILocation(line: 3355, column: 24, scope: !13797)
!13801 = !DILocation(line: 3355, column: 6, scope: !13797)
!13802 = !DILocation(line: 3356, column: 10, scope: !13803)
!13803 = distinct !DILexicalBlock(scope: !13797, file: !3, line: 3356, column: 10)
!13804 = !DILocation(line: 3356, column: 16, scope: !13803)
!13805 = !DILocation(line: 3356, column: 10, scope: !13797)
!13806 = !DILocalVariable(name: "beacon_delay", scope: !13807, file: !3, line: 3358, type: !1308)
!13807 = distinct !DILexicalBlock(scope: !13803, file: !3, line: 3356, column: 39)
!13808 = !DILocation(line: 3358, column: 11, scope: !13807)
!13809 = !DILocation(line: 3358, column: 26, scope: !13807)
!13810 = !DILocation(line: 3358, column: 38, scope: !13807)
!13811 = !DILocation(line: 3358, column: 44, scope: !13807)
!13812 = !DILocation(line: 3358, column: 36, scope: !13807)
!13813 = !DILocalVariable(name: "beacons", scope: !13807, file: !3, line: 3359, type: !7)
!13814 = !DILocation(line: 3359, column: 11, scope: !13807)
!13815 = !DILocation(line: 3359, column: 21, scope: !13807)
!13816 = !DILocation(line: 3359, column: 37, scope: !13807)
!13817 = !DILocation(line: 3359, column: 53, scope: !13807)
!13818 = !DILocation(line: 3359, column: 34, scope: !13807)
!13819 = !DILocation(line: 3360, column: 11, scope: !13820)
!13820 = distinct !DILexicalBlock(scope: !13807, file: !3, line: 3360, column: 11)
!13821 = !DILocation(line: 3360, column: 19, scope: !13820)
!13822 = !DILocation(line: 3360, column: 11, scope: !13807)
!13823 = !DILocation(line: 3361, column: 36, scope: !13820)
!13824 = !DILocation(line: 3361, column: 44, scope: !13820)
!13825 = !DILocation(line: 3361, column: 8, scope: !13820)
!13826 = !DILocation(line: 3361, column: 14, scope: !13820)
!13827 = !DILocation(line: 3361, column: 21, scope: !13820)
!13828 = !DILocation(line: 3361, column: 26, scope: !13820)
!13829 = !DILocation(line: 3361, column: 33, scope: !13820)
!13830 = !DILocation(line: 3362, column: 6, scope: !13807)
!13831 = !DILocation(line: 3363, column: 36, scope: !13797)
!13832 = !DILocation(line: 3363, column: 6, scope: !13797)
!13833 = !DILocation(line: 3363, column: 12, scope: !13797)
!13834 = !DILocation(line: 3363, column: 34, scope: !13797)
!13835 = !DILocation(line: 3364, column: 26, scope: !13797)
!13836 = !DILocation(line: 3364, column: 32, scope: !13797)
!13837 = !DILocation(line: 3364, column: 44, scope: !13797)
!13838 = !DILocation(line: 3364, column: 6, scope: !13797)
!13839 = !DILocation(line: 3365, column: 5, scope: !13797)
!13840 = !DILocation(line: 3366, column: 4, scope: !13788)
!13841 = !DILocation(line: 3368, column: 8, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !13719, file: !3, line: 3368, column: 8)
!13843 = !DILocation(line: 3368, column: 14, scope: !13842)
!13844 = !DILocation(line: 3368, column: 28, scope: !13842)
!13845 = !DILocation(line: 3368, column: 8, scope: !13719)
!13846 = !DILocation(line: 3369, column: 20, scope: !13842)
!13847 = !DILocation(line: 3369, column: 26, scope: !13842)
!13848 = !DILocation(line: 3369, column: 34, scope: !13842)
!13849 = !DILocation(line: 3370, column: 13, scope: !13842)
!13850 = !DILocation(line: 3370, column: 30, scope: !13842)
!13851 = !DILocation(line: 3370, column: 39, scope: !13842)
!13852 = !DILocation(line: 3371, column: 13, scope: !13842)
!13853 = !DILocation(line: 3372, column: 14, scope: !13842)
!13854 = !DILocation(line: 3372, column: 22, scope: !13842)
!13855 = !DILocation(line: 3373, column: 13, scope: !13842)
!13856 = !DILocation(line: 3373, column: 21, scope: !13842)
!13857 = !DILocation(line: 3369, column: 5, scope: !13842)
!13858 = !DILocation(line: 3375, column: 3, scope: !13720)
!13859 = !DILocation(line: 3379, column: 7, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13720, file: !3, line: 3379, column: 7)
!13861 = !DILocation(line: 3379, column: 13, scope: !13860)
!13862 = !DILocation(line: 3379, column: 27, scope: !13860)
!13863 = !DILocation(line: 3379, column: 7, scope: !13720)
!13864 = !DILocation(line: 3380, column: 17, scope: !13860)
!13865 = !DILocation(line: 3380, column: 23, scope: !13860)
!13866 = !DILocation(line: 3380, column: 4, scope: !13860)
!13867 = !DILocation(line: 3382, column: 3, scope: !13720)
!13868 = !DILocation(line: 3387, column: 7, scope: !13869)
!13869 = distinct !DILexicalBlock(scope: !13720, file: !3, line: 3387, column: 7)
!13870 = !DILocation(line: 3387, column: 13, scope: !13869)
!13871 = !DILocation(line: 3387, column: 27, scope: !13869)
!13872 = !DILocation(line: 3387, column: 56, scope: !13869)
!13873 = !DILocation(line: 3388, column: 7, scope: !13869)
!13874 = !DILocation(line: 3388, column: 13, scope: !13869)
!13875 = !DILocation(line: 3388, column: 27, scope: !13869)
!13876 = !DILocation(line: 3387, column: 7, scope: !13720)
!13877 = !DILocation(line: 3389, column: 14, scope: !13869)
!13878 = !DILocation(line: 3389, column: 20, scope: !13869)
!13879 = !DILocation(line: 3389, column: 31, scope: !13869)
!13880 = !DILocation(line: 3389, column: 4, scope: !13869)
!13881 = !DILocation(line: 3391, column: 3, scope: !13720)
!13882 = !DILocation(line: 3394, column: 7, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13720, file: !3, line: 3394, column: 7)
!13884 = !DILocation(line: 3394, column: 13, scope: !13883)
!13885 = !DILocation(line: 3394, column: 35, scope: !13883)
!13886 = !DILocation(line: 3395, column: 7, scope: !13883)
!13887 = !DILocation(line: 3395, column: 13, scope: !13883)
!13888 = !DILocation(line: 3395, column: 28, scope: !13883)
!13889 = !DILocation(line: 3395, column: 45, scope: !13883)
!13890 = !DILocation(line: 3396, column: 33, scope: !13883)
!13891 = !DILocation(line: 3396, column: 39, scope: !13883)
!13892 = !DILocation(line: 3396, column: 7, scope: !13883)
!13893 = !DILocation(line: 3394, column: 7, scope: !13720)
!13894 = !DILocation(line: 3397, column: 4, scope: !13895)
!13895 = distinct !DILexicalBlock(scope: !13883, file: !3, line: 3396, column: 48)
!13896 = !DILocation(line: 3397, column: 10, scope: !13895)
!13897 = !DILocation(line: 3397, column: 33, scope: !13895)
!13898 = !DILocation(line: 3398, column: 4, scope: !13895)
!13899 = !DILocation(line: 3398, column: 10, scope: !13895)
!13900 = !DILocation(line: 3398, column: 32, scope: !13895)
!13901 = !DILocation(line: 3400, column: 22, scope: !13895)
!13902 = !DILocation(line: 3400, column: 4, scope: !13895)
!13903 = !DILocation(line: 3401, column: 9, scope: !13895)
!13904 = !DILocation(line: 3401, column: 4, scope: !13895)
!13905 = !DILocation(line: 3402, column: 3, scope: !13895)
!13906 = !DILocation(line: 3404, column: 3, scope: !13720)
!13907 = !DILocation(line: 3407, column: 7, scope: !13908)
!13908 = distinct !DILexicalBlock(scope: !13720, file: !3, line: 3407, column: 7)
!13909 = !DILocation(line: 3407, column: 13, scope: !13908)
!13910 = !DILocation(line: 3407, column: 28, scope: !13908)
!13911 = !DILocation(line: 3407, column: 45, scope: !13908)
!13912 = !DILocation(line: 3408, column: 33, scope: !13908)
!13913 = !DILocation(line: 3408, column: 39, scope: !13908)
!13914 = !DILocation(line: 3408, column: 7, scope: !13908)
!13915 = !DILocation(line: 3407, column: 7, scope: !13720)
!13916 = !DILocation(line: 3409, column: 4, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13908, file: !3, line: 3408, column: 48)
!13918 = !DILocation(line: 3409, column: 10, scope: !13917)
!13919 = !DILocation(line: 3409, column: 33, scope: !13917)
!13920 = !DILocation(line: 3411, column: 22, scope: !13917)
!13921 = !DILocation(line: 3411, column: 4, scope: !13917)
!13922 = !DILocation(line: 3412, column: 9, scope: !13917)
!13923 = !DILocation(line: 3412, column: 4, scope: !13917)
!13924 = !DILocation(line: 3413, column: 3, scope: !13917)
!13925 = !DILocation(line: 3415, column: 3, scope: !13720)
!13926 = !DILocation(line: 3417, column: 1, scope: !8584)
!13927 = distinct !DISubprogram(name: "atmel_read16", scope: !3, file: !3, line: 646, type: !13928, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!13928 = !DISubroutineType(types: !13929)
!13929 = !{!916, !495, !916}
!13930 = !DILocalVariable(name: "dev", arg: 1, scope: !13927, file: !3, line: 646, type: !495)
!13931 = !DILocation(line: 646, column: 51, scope: !13927)
!13932 = !DILocalVariable(name: "offset", arg: 2, scope: !13927, file: !3, line: 646, type: !916)
!13933 = !DILocation(line: 646, column: 60, scope: !13927)
!13934 = !DILocation(line: 648, column: 13, scope: !13927)
!13935 = !DILocation(line: 648, column: 18, scope: !13927)
!13936 = !DILocation(line: 648, column: 30, scope: !13927)
!13937 = !DILocation(line: 648, column: 28, scope: !13927)
!13938 = !DILocation(line: 648, column: 9, scope: !13927)
!13939 = !DILocation(line: 648, column: 2, scope: !13927)
!13940 = distinct !DISubprogram(name: "dev_alloc_skb", scope: !758, file: !758, line: 2837, type: !13941, scopeLine: 2838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!13941 = !DISubroutineType(types: !13942)
!13942 = !{!756, !13}
!13943 = !DILocalVariable(name: "length", arg: 1, scope: !13940, file: !758, line: 2837, type: !13)
!13944 = !DILocation(line: 2837, column: 58, scope: !13940)
!13945 = !DILocation(line: 2839, column: 32, scope: !13940)
!13946 = !DILocation(line: 2839, column: 9, scope: !13940)
!13947 = !DILocation(line: 2839, column: 2, scope: !13940)
!13948 = distinct !DISubprogram(name: "skb_reserve", scope: !758, file: !758, line: 2378, type: !13949, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!13949 = !DISubroutineType(types: !13950)
!13950 = !{null, !756, !7}
!13951 = !DILocalVariable(name: "skb", arg: 1, scope: !13948, file: !758, line: 2378, type: !756)
!13952 = !DILocation(line: 2378, column: 48, scope: !13948)
!13953 = !DILocalVariable(name: "len", arg: 2, scope: !13948, file: !758, line: 2378, type: !7)
!13954 = !DILocation(line: 2378, column: 57, scope: !13948)
!13955 = !DILocation(line: 2380, column: 15, scope: !13948)
!13956 = !DILocation(line: 2380, column: 2, scope: !13948)
!13957 = !DILocation(line: 2380, column: 7, scope: !13948)
!13958 = !DILocation(line: 2380, column: 12, scope: !13948)
!13959 = !DILocation(line: 2381, column: 15, scope: !13948)
!13960 = !DILocation(line: 2381, column: 2, scope: !13948)
!13961 = !DILocation(line: 2381, column: 7, scope: !13948)
!13962 = !DILocation(line: 2381, column: 12, scope: !13948)
!13963 = !DILocation(line: 2382, column: 1, scope: !13948)
!13964 = distinct !DISubprogram(name: "netdev_alloc_skb", scope: !758, file: !758, line: 2823, type: !13965, scopeLine: 2825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!13965 = !DISubroutineType(types: !13966)
!13966 = !{!756, !495, !13}
!13967 = !DILocalVariable(name: "dev", arg: 1, scope: !13964, file: !758, line: 2823, type: !495)
!13968 = !DILocation(line: 2823, column: 67, scope: !13964)
!13969 = !DILocalVariable(name: "length", arg: 2, scope: !13964, file: !758, line: 2824, type: !13)
!13970 = !DILocation(line: 2824, column: 26, scope: !13964)
!13971 = !DILocation(line: 2826, column: 28, scope: !13964)
!13972 = !DILocation(line: 2826, column: 33, scope: !13964)
!13973 = !DILocation(line: 2826, column: 9, scope: !13964)
!13974 = !DILocation(line: 2826, column: 2, scope: !13964)
!13975 = distinct !DISubprogram(name: "skb_put_data", scope: !758, file: !758, line: 2270, type: !13976, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!13976 = !DISubroutineType(types: !13977)
!13977 = !{!622, !756, !3590, !13}
!13978 = !DILocalVariable(name: "skb", arg: 1, scope: !13975, file: !758, line: 2270, type: !756)
!13979 = !DILocation(line: 2270, column: 50, scope: !13975)
!13980 = !DILocalVariable(name: "data", arg: 2, scope: !13975, file: !758, line: 2270, type: !3590)
!13981 = !DILocation(line: 2270, column: 67, scope: !13975)
!13982 = !DILocalVariable(name: "len", arg: 3, scope: !13975, file: !758, line: 2271, type: !13)
!13983 = !DILocation(line: 2271, column: 19, scope: !13975)
!13984 = !DILocalVariable(name: "tmp", scope: !13975, file: !758, line: 2273, type: !622)
!13985 = !DILocation(line: 2273, column: 8, scope: !13975)
!13986 = !DILocation(line: 2273, column: 22, scope: !13975)
!13987 = !DILocation(line: 2273, column: 27, scope: !13975)
!13988 = !DILocation(line: 2273, column: 14, scope: !13975)
!13989 = !DILocation(line: 2275, column: 9, scope: !13975)
!13990 = !DILocation(line: 2275, column: 14, scope: !13975)
!13991 = !DILocation(line: 2275, column: 20, scope: !13975)
!13992 = !DILocation(line: 2275, column: 2, scope: !13975)
!13993 = !DILocation(line: 2277, column: 9, scope: !13975)
!13994 = !DILocation(line: 2277, column: 2, scope: !13975)
!13995 = distinct !DISubprogram(name: "smooth_rssi", scope: !3, file: !3, line: 3269, type: !13996, scopeLine: 3270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!13996 = !DISubroutineType(types: !13997)
!13997 = !{null, !8587, !1116}
!13998 = !DILocalVariable(name: "priv", arg: 1, scope: !13995, file: !3, line: 3269, type: !8587)
!13999 = !DILocation(line: 3269, column: 47, scope: !13995)
!14000 = !DILocalVariable(name: "rssi", arg: 2, scope: !13995, file: !3, line: 3269, type: !1116)
!14001 = !DILocation(line: 3269, column: 56, scope: !13995)
!14002 = !DILocalVariable(name: "old", scope: !13995, file: !3, line: 3271, type: !1116)
!14003 = !DILocation(line: 3271, column: 5, scope: !13995)
!14004 = !DILocation(line: 3271, column: 11, scope: !13995)
!14005 = !DILocation(line: 3271, column: 17, scope: !13995)
!14006 = !DILocation(line: 3271, column: 24, scope: !13995)
!14007 = !DILocation(line: 3271, column: 29, scope: !13995)
!14008 = !DILocalVariable(name: "max_rssi", scope: !13995, file: !3, line: 3272, type: !1116)
!14009 = !DILocation(line: 3272, column: 5, scope: !13995)
!14010 = !DILocation(line: 3274, column: 10, scope: !13995)
!14011 = !DILocation(line: 3274, column: 16, scope: !13995)
!14012 = !DILocation(line: 3274, column: 2, scope: !13995)
!14013 = !DILocation(line: 3276, column: 12, scope: !14014)
!14014 = distinct !DILexicalBlock(scope: !13995, file: !3, line: 3274, column: 31)
!14015 = !DILocation(line: 3277, column: 3, scope: !14014)
!14016 = !DILocation(line: 3279, column: 3, scope: !14014)
!14017 = !DILocation(line: 3282, column: 9, scope: !13995)
!14018 = !DILocation(line: 3282, column: 14, scope: !13995)
!14019 = !DILocation(line: 3282, column: 22, scope: !13995)
!14020 = !DILocation(line: 3282, column: 20, scope: !13995)
!14021 = !DILocation(line: 3282, column: 7, scope: !13995)
!14022 = !DILocation(line: 3283, column: 7, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !13995, file: !3, line: 3283, column: 6)
!14024 = !DILocation(line: 3283, column: 14, scope: !14023)
!14025 = !DILocation(line: 3283, column: 12, scope: !14023)
!14026 = !DILocation(line: 3283, column: 19, scope: !14023)
!14027 = !DILocation(line: 3283, column: 6, scope: !13995)
!14028 = !DILocation(line: 3284, column: 30, scope: !14023)
!14029 = !DILocation(line: 3284, column: 37, scope: !14023)
!14030 = !DILocation(line: 3284, column: 35, scope: !14023)
!14031 = !DILocation(line: 3284, column: 42, scope: !14023)
!14032 = !DILocation(line: 3284, column: 46, scope: !14023)
!14033 = !DILocation(line: 3284, column: 29, scope: !14023)
!14034 = !DILocation(line: 3284, column: 3, scope: !14023)
!14035 = !DILocation(line: 3284, column: 9, scope: !14023)
!14036 = !DILocation(line: 3284, column: 16, scope: !14023)
!14037 = !DILocation(line: 3284, column: 21, scope: !14023)
!14038 = !DILocation(line: 3284, column: 27, scope: !14023)
!14039 = !DILocation(line: 3286, column: 30, scope: !14023)
!14040 = !DILocation(line: 3286, column: 37, scope: !14023)
!14041 = !DILocation(line: 3286, column: 35, scope: !14023)
!14042 = !DILocation(line: 3286, column: 42, scope: !14023)
!14043 = !DILocation(line: 3286, column: 29, scope: !14023)
!14044 = !DILocation(line: 3286, column: 3, scope: !14023)
!14045 = !DILocation(line: 3286, column: 9, scope: !14023)
!14046 = !DILocation(line: 3286, column: 16, scope: !14023)
!14047 = !DILocation(line: 3286, column: 21, scope: !14023)
!14048 = !DILocation(line: 3286, column: 27, scope: !14023)
!14049 = !DILocation(line: 3287, column: 2, scope: !13995)
!14050 = !DILocation(line: 3287, column: 8, scope: !13995)
!14051 = !DILocation(line: 3287, column: 15, scope: !13995)
!14052 = !DILocation(line: 3287, column: 20, scope: !13995)
!14053 = !DILocation(line: 3287, column: 28, scope: !13995)
!14054 = !DILocation(line: 3288, column: 2, scope: !13995)
!14055 = !DILocation(line: 3288, column: 8, scope: !13995)
!14056 = !DILocation(line: 3288, column: 15, scope: !13995)
!14057 = !DILocation(line: 3288, column: 20, scope: !13995)
!14058 = !DILocation(line: 3288, column: 28, scope: !13995)
!14059 = !DILocation(line: 3289, column: 1, scope: !13995)
!14060 = distinct !DISubprogram(name: "is_frame_from_current_bss", scope: !3, file: !3, line: 2930, type: !14061, scopeLine: 2932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!14061 = !DISubroutineType(types: !14062)
!14062 = !{!7, !8587, !8588}
!14063 = !DILocalVariable(name: "priv", arg: 1, scope: !14060, file: !3, line: 2930, type: !8587)
!14064 = !DILocation(line: 2930, column: 60, scope: !14060)
!14065 = !DILocalVariable(name: "header", arg: 2, scope: !14060, file: !3, line: 2931, type: !8588)
!14066 = !DILocation(line: 2931, column: 32, scope: !14060)
!14067 = !DILocation(line: 2933, column: 6, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !14060, file: !3, line: 2933, column: 6)
!14069 = !DILocation(line: 2933, column: 41, scope: !14068)
!14070 = !DILocation(line: 2933, column: 6, scope: !14060)
!14071 = !DILocation(line: 2934, column: 17, scope: !14068)
!14072 = !DILocation(line: 2934, column: 25, scope: !14068)
!14073 = !DILocation(line: 2934, column: 32, scope: !14068)
!14074 = !DILocation(line: 2934, column: 38, scope: !14068)
!14075 = !DILocation(line: 2934, column: 10, scope: !14068)
!14076 = !DILocation(line: 2934, column: 55, scope: !14068)
!14077 = !DILocation(line: 2934, column: 3, scope: !14068)
!14078 = !DILocation(line: 2936, column: 17, scope: !14068)
!14079 = !DILocation(line: 2936, column: 25, scope: !14068)
!14080 = !DILocation(line: 2936, column: 32, scope: !14068)
!14081 = !DILocation(line: 2936, column: 38, scope: !14068)
!14082 = !DILocation(line: 2936, column: 10, scope: !14068)
!14083 = !DILocation(line: 2936, column: 55, scope: !14068)
!14084 = !DILocation(line: 2936, column: 3, scope: !14068)
!14085 = !DILocation(line: 2937, column: 1, scope: !14060)
!14086 = distinct !DISubprogram(name: "atmel_smooth_qual", scope: !3, file: !3, line: 3291, type: !12301, scopeLine: 3292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!14087 = !DILocalVariable(name: "priv", arg: 1, scope: !14086, file: !3, line: 3291, type: !8587)
!14088 = !DILocation(line: 3291, column: 53, scope: !14086)
!14089 = !DILocalVariable(name: "time_diff", scope: !14086, file: !3, line: 3293, type: !517)
!14090 = !DILocation(line: 3293, column: 16, scope: !14086)
!14091 = !DILocation(line: 3293, column: 29, scope: !14086)
!14092 = !DILocation(line: 3293, column: 39, scope: !14086)
!14093 = !DILocation(line: 3293, column: 45, scope: !14086)
!14094 = !DILocation(line: 3293, column: 37, scope: !14086)
!14095 = !DILocation(line: 3293, column: 56, scope: !14086)
!14096 = !DILocation(line: 3294, column: 2, scope: !14086)
!14097 = !DILocation(line: 3294, column: 18, scope: !14086)
!14098 = !DILocation(line: 3295, column: 3, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !14086, file: !3, line: 3294, column: 22)
!14100 = !DILocation(line: 3295, column: 9, scope: !14099)
!14101 = !DILocation(line: 3295, column: 19, scope: !14099)
!14102 = !DILocation(line: 3296, column: 28, scope: !14099)
!14103 = !DILocation(line: 3296, column: 34, scope: !14099)
!14104 = !DILocation(line: 3296, column: 41, scope: !14099)
!14105 = !DILocation(line: 3296, column: 46, scope: !14099)
!14106 = !DILocation(line: 3296, column: 51, scope: !14099)
!14107 = !DILocation(line: 3296, column: 3, scope: !14099)
!14108 = !DILocation(line: 3296, column: 9, scope: !14099)
!14109 = !DILocation(line: 3296, column: 16, scope: !14099)
!14110 = !DILocation(line: 3296, column: 21, scope: !14099)
!14111 = !DILocation(line: 3296, column: 26, scope: !14099)
!14112 = !DILocation(line: 3298, column: 4, scope: !14099)
!14113 = !DILocation(line: 3298, column: 10, scope: !14099)
!14114 = !DILocation(line: 3298, column: 29, scope: !14099)
!14115 = !DILocation(line: 3298, column: 35, scope: !14099)
!14116 = !DILocation(line: 3298, column: 27, scope: !14099)
!14117 = !DILocation(line: 3298, column: 52, scope: !14099)
!14118 = !DILocation(line: 3298, column: 58, scope: !14099)
!14119 = !DILocation(line: 3298, column: 65, scope: !14099)
!14120 = !DILocation(line: 3298, column: 70, scope: !14099)
!14121 = !DILocation(line: 3298, column: 76, scope: !14099)
!14122 = !DILocation(line: 3298, column: 49, scope: !14099)
!14123 = !DILocation(line: 3298, column: 83, scope: !14099)
!14124 = !DILocation(line: 3297, column: 3, scope: !14099)
!14125 = !DILocation(line: 3297, column: 9, scope: !14099)
!14126 = !DILocation(line: 3297, column: 16, scope: !14099)
!14127 = !DILocation(line: 3297, column: 21, scope: !14099)
!14128 = !DILocation(line: 3297, column: 26, scope: !14099)
!14129 = !DILocation(line: 3299, column: 3, scope: !14099)
!14130 = !DILocation(line: 3299, column: 9, scope: !14099)
!14131 = !DILocation(line: 3299, column: 26, scope: !14099)
!14132 = distinct !{!14132, !14096, !14133}
!14133 = !DILocation(line: 3300, column: 2, scope: !14086)
!14134 = !DILocation(line: 3301, column: 2, scope: !14086)
!14135 = !DILocation(line: 3301, column: 8, scope: !14086)
!14136 = !DILocation(line: 3301, column: 15, scope: !14086)
!14137 = !DILocation(line: 3301, column: 20, scope: !14086)
!14138 = !DILocation(line: 3301, column: 28, scope: !14086)
!14139 = !DILocation(line: 3302, column: 2, scope: !14086)
!14140 = !DILocation(line: 3302, column: 8, scope: !14086)
!14141 = !DILocation(line: 3302, column: 15, scope: !14086)
!14142 = !DILocation(line: 3302, column: 20, scope: !14086)
!14143 = !DILocation(line: 3302, column: 28, scope: !14086)
!14144 = !DILocation(line: 3303, column: 1, scope: !14086)
!14145 = distinct !DISubprogram(name: "handle_beacon_probe", scope: !3, file: !3, line: 2812, type: !14146, scopeLine: 2814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!14146 = !DISubroutineType(types: !14147)
!14147 = !{null, !8587, !916, !1116}
!14148 = !DILocalVariable(name: "priv", arg: 1, scope: !14145, file: !3, line: 2812, type: !8587)
!14149 = !DILocation(line: 2812, column: 55, scope: !14145)
!14150 = !DILocalVariable(name: "capability", arg: 2, scope: !14145, file: !3, line: 2812, type: !916)
!14151 = !DILocation(line: 2812, column: 65, scope: !14145)
!14152 = !DILocalVariable(name: "channel", arg: 3, scope: !14145, file: !3, line: 2813, type: !1116)
!14153 = !DILocation(line: 2813, column: 8, scope: !14145)
!14154 = !DILocalVariable(name: "rejoin", scope: !14145, file: !3, line: 2815, type: !7)
!14155 = !DILocation(line: 2815, column: 6, scope: !14145)
!14156 = !DILocalVariable(name: "new", scope: !14145, file: !3, line: 2816, type: !7)
!14157 = !DILocation(line: 2816, column: 6, scope: !14145)
!14158 = !DILocation(line: 2816, column: 12, scope: !14145)
!14159 = !DILocation(line: 2816, column: 23, scope: !14145)
!14160 = !DILocation(line: 2819, column: 6, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14145, file: !3, line: 2819, column: 6)
!14162 = !DILocation(line: 2819, column: 12, scope: !14161)
!14163 = !DILocation(line: 2819, column: 24, scope: !14161)
!14164 = !DILocation(line: 2819, column: 21, scope: !14161)
!14165 = !DILocation(line: 2819, column: 6, scope: !14145)
!14166 = !DILocation(line: 2820, column: 20, scope: !14167)
!14167 = distinct !DILexicalBlock(scope: !14161, file: !3, line: 2819, column: 29)
!14168 = !DILocation(line: 2820, column: 3, scope: !14167)
!14169 = !DILocation(line: 2820, column: 9, scope: !14167)
!14170 = !DILocation(line: 2820, column: 18, scope: !14167)
!14171 = !DILocation(line: 2821, column: 10, scope: !14167)
!14172 = !DILocation(line: 2822, column: 18, scope: !14167)
!14173 = !DILocation(line: 2822, column: 65, scope: !14167)
!14174 = !DILocation(line: 2822, column: 3, scope: !14167)
!14175 = !DILocation(line: 2823, column: 2, scope: !14167)
!14176 = !DILocation(line: 2825, column: 6, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !14145, file: !3, line: 2825, column: 6)
!14178 = !DILocation(line: 2825, column: 12, scope: !14177)
!14179 = !DILocation(line: 2825, column: 23, scope: !14177)
!14180 = !DILocation(line: 2825, column: 20, scope: !14177)
!14181 = !DILocation(line: 2825, column: 6, scope: !14145)
!14182 = !DILocation(line: 2826, column: 19, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14177, file: !3, line: 2825, column: 32)
!14184 = !DILocation(line: 2826, column: 3, scope: !14183)
!14185 = !DILocation(line: 2826, column: 9, scope: !14183)
!14186 = !DILocation(line: 2826, column: 17, scope: !14183)
!14187 = !DILocation(line: 2827, column: 10, scope: !14183)
!14188 = !DILocation(line: 2828, column: 18, scope: !14183)
!14189 = !DILocation(line: 2828, column: 59, scope: !14183)
!14190 = !DILocation(line: 2828, column: 3, scope: !14183)
!14191 = !DILocation(line: 2829, column: 2, scope: !14183)
!14192 = !DILocation(line: 2831, column: 6, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !14145, file: !3, line: 2831, column: 6)
!14194 = !DILocation(line: 2831, column: 6, scope: !14145)
!14195 = !DILocation(line: 2832, column: 3, scope: !14196)
!14196 = distinct !DILexicalBlock(scope: !14193, file: !3, line: 2831, column: 14)
!14197 = !DILocation(line: 2832, column: 9, scope: !14196)
!14198 = !DILocation(line: 2832, column: 31, scope: !14196)
!14199 = !DILocation(line: 2833, column: 21, scope: !14196)
!14200 = !DILocation(line: 2833, column: 3, scope: !14196)
!14201 = !DILocation(line: 2835, column: 7, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !14196, file: !3, line: 2835, column: 7)
!14203 = !DILocation(line: 2835, column: 13, scope: !14202)
!14204 = !DILocation(line: 2835, column: 28, scope: !14202)
!14205 = !DILocation(line: 2835, column: 7, scope: !14196)
!14206 = !DILocation(line: 2836, column: 9, scope: !14202)
!14207 = !DILocation(line: 2836, column: 4, scope: !14202)
!14208 = !DILocation(line: 2838, column: 9, scope: !14202)
!14209 = !DILocation(line: 2838, column: 4, scope: !14202)
!14210 = !DILocation(line: 2839, column: 2, scope: !14196)
!14211 = !DILocation(line: 2840, column: 1, scope: !14145)
!14212 = distinct !DISubprogram(name: "store_bss_info", scope: !3, file: !3, line: 2980, type: !14213, scopeLine: 2984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!14213 = !DISubroutineType(types: !14214)
!14214 = !{null, !8587, !8588, !916, !916, !1116, !1116, !1116, !1115, !7}
!14215 = !DILocalVariable(name: "priv", arg: 1, scope: !14212, file: !3, line: 2980, type: !8587)
!14216 = !DILocation(line: 2980, column: 50, scope: !14212)
!14217 = !DILocalVariable(name: "header", arg: 2, scope: !14212, file: !3, line: 2981, type: !8588)
!14218 = !DILocation(line: 2981, column: 29, scope: !14212)
!14219 = !DILocalVariable(name: "capability", arg: 3, scope: !14212, file: !3, line: 2981, type: !916)
!14220 = !DILocation(line: 2981, column: 41, scope: !14212)
!14221 = !DILocalVariable(name: "beacon_period", arg: 4, scope: !14212, file: !3, line: 2982, type: !916)
!14222 = !DILocation(line: 2982, column: 11, scope: !14212)
!14223 = !DILocalVariable(name: "channel", arg: 5, scope: !14212, file: !3, line: 2982, type: !1116)
!14224 = !DILocation(line: 2982, column: 29, scope: !14212)
!14225 = !DILocalVariable(name: "rssi", arg: 6, scope: !14212, file: !3, line: 2982, type: !1116)
!14226 = !DILocation(line: 2982, column: 41, scope: !14212)
!14227 = !DILocalVariable(name: "ssid_len", arg: 7, scope: !14212, file: !3, line: 2982, type: !1116)
!14228 = !DILocation(line: 2982, column: 50, scope: !14212)
!14229 = !DILocalVariable(name: "ssid", arg: 8, scope: !14212, file: !3, line: 2983, type: !1115)
!14230 = !DILocation(line: 2983, column: 11, scope: !14212)
!14231 = !DILocalVariable(name: "is_beacon", arg: 9, scope: !14212, file: !3, line: 2983, type: !7)
!14232 = !DILocation(line: 2983, column: 21, scope: !14212)
!14233 = !DILocalVariable(name: "bss", scope: !14212, file: !3, line: 2985, type: !1115)
!14234 = !DILocation(line: 2985, column: 6, scope: !14212)
!14235 = !DILocation(line: 2985, column: 12, scope: !14212)
!14236 = !DILocation(line: 2985, column: 23, scope: !14212)
!14237 = !DILocation(line: 2985, column: 47, scope: !14212)
!14238 = !DILocation(line: 2985, column: 55, scope: !14212)
!14239 = !DILocation(line: 2985, column: 63, scope: !14212)
!14240 = !DILocation(line: 2985, column: 71, scope: !14212)
!14241 = !DILocalVariable(name: "i", scope: !14212, file: !3, line: 2986, type: !7)
!14242 = !DILocation(line: 2986, column: 6, scope: !14212)
!14243 = !DILocalVariable(name: "index", scope: !14212, file: !3, line: 2986, type: !7)
!14244 = !DILocation(line: 2986, column: 9, scope: !14212)
!14245 = !DILocation(line: 2988, column: 13, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14212, file: !3, line: 2988, column: 2)
!14247 = !DILocation(line: 2988, column: 21, scope: !14246)
!14248 = !DILocation(line: 2988, column: 7, scope: !14246)
!14249 = !DILocation(line: 2988, column: 26, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14246, file: !3, line: 2988, column: 2)
!14251 = !DILocation(line: 2988, column: 30, scope: !14250)
!14252 = !DILocation(line: 2988, column: 36, scope: !14250)
!14253 = !DILocation(line: 2988, column: 28, scope: !14250)
!14254 = !DILocation(line: 2988, column: 2, scope: !14246)
!14255 = !DILocation(line: 2989, column: 14, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14250, file: !3, line: 2989, column: 7)
!14257 = !DILocation(line: 2989, column: 19, scope: !14256)
!14258 = !DILocation(line: 2989, column: 25, scope: !14256)
!14259 = !DILocation(line: 2989, column: 33, scope: !14256)
!14260 = !DILocation(line: 2989, column: 36, scope: !14256)
!14261 = !DILocation(line: 2989, column: 7, scope: !14256)
!14262 = !DILocation(line: 2989, column: 53, scope: !14256)
!14263 = !DILocation(line: 2989, column: 7, scope: !14250)
!14264 = !DILocation(line: 2990, column: 12, scope: !14256)
!14265 = !DILocation(line: 2990, column: 10, scope: !14256)
!14266 = !DILocation(line: 2990, column: 4, scope: !14256)
!14267 = !DILocation(line: 2989, column: 56, scope: !14256)
!14268 = !DILocation(line: 2988, column: 55, scope: !14250)
!14269 = !DILocation(line: 2988, column: 2, scope: !14250)
!14270 = distinct !{!14270, !14254, !14271}
!14271 = !DILocation(line: 2990, column: 12, scope: !14246)
!14272 = !DILocation(line: 2996, column: 6, scope: !14273)
!14273 = distinct !DILexicalBlock(scope: !14212, file: !3, line: 2996, column: 6)
!14274 = !DILocation(line: 2996, column: 12, scope: !14273)
!14275 = !DILocation(line: 2996, column: 6, scope: !14212)
!14276 = !DILocation(line: 2997, column: 7, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14278, file: !3, line: 2997, column: 7)
!14278 = distinct !DILexicalBlock(scope: !14273, file: !3, line: 2996, column: 19)
!14279 = !DILocation(line: 2997, column: 13, scope: !14277)
!14280 = !DILocation(line: 2997, column: 30, scope: !14277)
!14281 = !DILocation(line: 2997, column: 7, scope: !14278)
!14282 = !DILocation(line: 2998, column: 4, scope: !14277)
!14283 = !DILocation(line: 2999, column: 11, scope: !14278)
!14284 = !DILocation(line: 2999, column: 17, scope: !14278)
!14285 = !DILocation(line: 2999, column: 33, scope: !14278)
!14286 = !DILocation(line: 2999, column: 9, scope: !14278)
!14287 = !DILocation(line: 3000, column: 10, scope: !14278)
!14288 = !DILocation(line: 3000, column: 16, scope: !14278)
!14289 = !DILocation(line: 3000, column: 24, scope: !14278)
!14290 = !DILocation(line: 3000, column: 31, scope: !14278)
!14291 = !DILocation(line: 3000, column: 3, scope: !14278)
!14292 = !DILocation(line: 3000, column: 38, scope: !14278)
!14293 = !DILocation(line: 3001, column: 31, scope: !14278)
!14294 = !DILocation(line: 3001, column: 3, scope: !14278)
!14295 = !DILocation(line: 3001, column: 9, scope: !14278)
!14296 = !DILocation(line: 3001, column: 17, scope: !14278)
!14297 = !DILocation(line: 3001, column: 24, scope: !14278)
!14298 = !DILocation(line: 3001, column: 29, scope: !14278)
!14299 = !DILocation(line: 3002, column: 2, scope: !14278)
!14300 = !DILocation(line: 3003, column: 7, scope: !14301)
!14301 = distinct !DILexicalBlock(scope: !14302, file: !3, line: 3003, column: 7)
!14302 = distinct !DILexicalBlock(scope: !14273, file: !3, line: 3002, column: 9)
!14303 = !DILocation(line: 3003, column: 14, scope: !14301)
!14304 = !DILocation(line: 3003, column: 20, scope: !14301)
!14305 = !DILocation(line: 3003, column: 28, scope: !14301)
!14306 = !DILocation(line: 3003, column: 35, scope: !14301)
!14307 = !DILocation(line: 3003, column: 12, scope: !14301)
!14308 = !DILocation(line: 3003, column: 7, scope: !14302)
!14309 = !DILocation(line: 3004, column: 32, scope: !14301)
!14310 = !DILocation(line: 3004, column: 4, scope: !14301)
!14311 = !DILocation(line: 3004, column: 10, scope: !14301)
!14312 = !DILocation(line: 3004, column: 18, scope: !14301)
!14313 = !DILocation(line: 3004, column: 25, scope: !14301)
!14314 = !DILocation(line: 3004, column: 30, scope: !14301)
!14315 = !DILocation(line: 3005, column: 7, scope: !14316)
!14316 = distinct !DILexicalBlock(scope: !14302, file: !3, line: 3005, column: 7)
!14317 = !DILocation(line: 3005, column: 7, scope: !14302)
!14318 = !DILocation(line: 3006, column: 4, scope: !14316)
!14319 = !DILocation(line: 3009, column: 33, scope: !14212)
!14320 = !DILocation(line: 3009, column: 2, scope: !14212)
!14321 = !DILocation(line: 3009, column: 8, scope: !14212)
!14322 = !DILocation(line: 3009, column: 16, scope: !14212)
!14323 = !DILocation(line: 3009, column: 23, scope: !14212)
!14324 = !DILocation(line: 3009, column: 31, scope: !14212)
!14325 = !DILocation(line: 3010, column: 39, scope: !14212)
!14326 = !DILocation(line: 3010, column: 2, scope: !14212)
!14327 = !DILocation(line: 3010, column: 8, scope: !14212)
!14328 = !DILocation(line: 3010, column: 16, scope: !14212)
!14329 = !DILocation(line: 3010, column: 23, scope: !14212)
!14330 = !DILocation(line: 3010, column: 37, scope: !14212)
!14331 = !DILocation(line: 3011, column: 34, scope: !14212)
!14332 = !DILocation(line: 3011, column: 45, scope: !14212)
!14333 = !DILocation(line: 3011, column: 2, scope: !14212)
!14334 = !DILocation(line: 3011, column: 8, scope: !14212)
!14335 = !DILocation(line: 3011, column: 16, scope: !14212)
!14336 = !DILocation(line: 3011, column: 23, scope: !14212)
!14337 = !DILocation(line: 3011, column: 32, scope: !14212)
!14338 = !DILocation(line: 3012, column: 9, scope: !14212)
!14339 = !DILocation(line: 3012, column: 15, scope: !14212)
!14340 = !DILocation(line: 3012, column: 23, scope: !14212)
!14341 = !DILocation(line: 3012, column: 30, scope: !14212)
!14342 = !DILocation(line: 3012, column: 2, scope: !14212)
!14343 = !DILocation(line: 3012, column: 36, scope: !14212)
!14344 = !DILocation(line: 3012, column: 42, scope: !14212)
!14345 = !DILocation(line: 3013, column: 34, scope: !14212)
!14346 = !DILocation(line: 3013, column: 2, scope: !14212)
!14347 = !DILocation(line: 3013, column: 8, scope: !14212)
!14348 = !DILocation(line: 3013, column: 16, scope: !14212)
!14349 = !DILocation(line: 3013, column: 23, scope: !14212)
!14350 = !DILocation(line: 3013, column: 32, scope: !14212)
!14351 = !DILocation(line: 3015, column: 6, scope: !14352)
!14352 = distinct !DILexicalBlock(scope: !14212, file: !3, line: 3015, column: 6)
!14353 = !DILocation(line: 3015, column: 17, scope: !14352)
!14354 = !DILocation(line: 3015, column: 6, scope: !14212)
!14355 = !DILocation(line: 3016, column: 3, scope: !14352)
!14356 = !DILocation(line: 3016, column: 9, scope: !14352)
!14357 = !DILocation(line: 3016, column: 17, scope: !14352)
!14358 = !DILocation(line: 3016, column: 24, scope: !14352)
!14359 = !DILocation(line: 3016, column: 32, scope: !14352)
!14360 = !DILocation(line: 3017, column: 11, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14352, file: !3, line: 3017, column: 11)
!14362 = !DILocation(line: 3017, column: 22, scope: !14361)
!14363 = !DILocation(line: 3017, column: 11, scope: !14352)
!14364 = !DILocation(line: 3018, column: 3, scope: !14361)
!14365 = !DILocation(line: 3018, column: 9, scope: !14361)
!14366 = !DILocation(line: 3018, column: 17, scope: !14361)
!14367 = !DILocation(line: 3018, column: 24, scope: !14361)
!14368 = !DILocation(line: 3018, column: 32, scope: !14361)
!14369 = !DILocation(line: 3020, column: 34, scope: !14212)
!14370 = !DILocation(line: 3020, column: 45, scope: !14212)
!14371 = !DILocation(line: 3020, column: 2, scope: !14212)
!14372 = !DILocation(line: 3020, column: 8, scope: !14212)
!14373 = !DILocation(line: 3020, column: 16, scope: !14212)
!14374 = !DILocation(line: 3020, column: 23, scope: !14212)
!14375 = !DILocation(line: 3020, column: 32, scope: !14212)
!14376 = !DILocation(line: 3022, column: 1, scope: !14212)
!14377 = distinct !DISubprogram(name: "authenticate", scope: !3, file: !3, line: 3024, type: !14378, scopeLine: 3025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!14378 = !DISubroutineType(types: !14379)
!14379 = !{null, !8587, !916}
!14380 = !DILocalVariable(name: "priv", arg: 1, scope: !14377, file: !3, line: 3024, type: !8587)
!14381 = !DILocation(line: 3024, column: 48, scope: !14377)
!14382 = !DILocalVariable(name: "frame_len", arg: 2, scope: !14377, file: !3, line: 3024, type: !916)
!14383 = !DILocation(line: 3024, column: 58, scope: !14377)
!14384 = !DILocalVariable(name: "auth", scope: !14377, file: !3, line: 3026, type: !8609)
!14385 = !DILocation(line: 3026, column: 20, scope: !14377)
!14386 = !DILocation(line: 3026, column: 47, scope: !14377)
!14387 = !DILocation(line: 3026, column: 53, scope: !14377)
!14388 = !DILocation(line: 3026, column: 27, scope: !14377)
!14389 = !DILocalVariable(name: "status", scope: !14377, file: !3, line: 3027, type: !916)
!14390 = !DILocation(line: 3027, column: 6, scope: !14377)
!14391 = !DILocation(line: 3027, column: 15, scope: !14377)
!14392 = !DILocalVariable(name: "trans_seq_no", scope: !14377, file: !3, line: 3028, type: !916)
!14393 = !DILocation(line: 3028, column: 6, scope: !14377)
!14394 = !DILocation(line: 3028, column: 21, scope: !14377)
!14395 = !DILocalVariable(name: "system", scope: !14377, file: !3, line: 3029, type: !916)
!14396 = !DILocation(line: 3029, column: 6, scope: !14377)
!14397 = !DILocation(line: 3029, column: 15, scope: !14377)
!14398 = !DILocation(line: 3031, column: 6, scope: !14399)
!14399 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 3031, column: 6)
!14400 = !DILocation(line: 3031, column: 13, scope: !14399)
!14401 = !DILocation(line: 3031, column: 36, scope: !14399)
!14402 = !DILocation(line: 3031, column: 40, scope: !14399)
!14403 = !DILocation(line: 3031, column: 46, scope: !14399)
!14404 = !DILocation(line: 3031, column: 6, scope: !14377)
!14405 = !DILocation(line: 3033, column: 7, scope: !14406)
!14406 = distinct !DILexicalBlock(scope: !14407, file: !3, line: 3033, column: 7)
!14407 = distinct !DILexicalBlock(scope: !14399, file: !3, line: 3031, column: 57)
!14408 = !DILocation(line: 3033, column: 13, scope: !14406)
!14409 = !DILocation(line: 3033, column: 7, scope: !14407)
!14410 = !DILocation(line: 3034, column: 22, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14406, file: !3, line: 3033, column: 37)
!14412 = !DILocation(line: 3034, column: 4, scope: !14411)
!14413 = !DILocation(line: 3035, column: 29, scope: !14411)
!14414 = !DILocation(line: 3035, column: 4, scope: !14411)
!14415 = !DILocation(line: 3036, column: 4, scope: !14411)
!14416 = !DILocation(line: 3038, column: 22, scope: !14417)
!14417 = distinct !DILexicalBlock(scope: !14406, file: !3, line: 3037, column: 10)
!14418 = !DILocation(line: 3038, column: 4, scope: !14417)
!14419 = !DILocation(line: 3039, column: 29, scope: !14417)
!14420 = !DILocation(line: 3039, column: 4, scope: !14417)
!14421 = !DILocation(line: 3040, column: 4, scope: !14417)
!14422 = !DILocation(line: 3044, column: 6, scope: !14423)
!14423 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 3044, column: 6)
!14424 = !DILocation(line: 3044, column: 13, scope: !14423)
!14425 = !DILocation(line: 3044, column: 36, scope: !14423)
!14426 = !DILocation(line: 3044, column: 39, scope: !14423)
!14427 = !DILocation(line: 3044, column: 45, scope: !14423)
!14428 = !DILocation(line: 3044, column: 6, scope: !14377)
!14429 = !DILocalVariable(name: "should_associate", scope: !14430, file: !3, line: 3045, type: !7)
!14430 = distinct !DILexicalBlock(scope: !14423, file: !3, line: 3044, column: 56)
!14431 = !DILocation(line: 3045, column: 7, scope: !14430)
!14432 = !DILocation(line: 3047, column: 7, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14430, file: !3, line: 3047, column: 7)
!14434 = !DILocation(line: 3047, column: 23, scope: !14433)
!14435 = !DILocation(line: 3047, column: 29, scope: !14433)
!14436 = !DILocation(line: 3047, column: 20, scope: !14433)
!14437 = !DILocation(line: 3047, column: 7, scope: !14430)
!14438 = !DILocation(line: 3048, column: 4, scope: !14433)
!14439 = !DILocation(line: 3050, column: 7, scope: !14440)
!14440 = distinct !DILexicalBlock(scope: !14430, file: !3, line: 3050, column: 7)
!14441 = !DILocation(line: 3050, column: 14, scope: !14440)
!14442 = !DILocation(line: 3050, column: 7, scope: !14430)
!14443 = !DILocation(line: 3051, column: 8, scope: !14444)
!14444 = distinct !DILexicalBlock(scope: !14445, file: !3, line: 3051, column: 8)
!14445 = distinct !DILexicalBlock(scope: !14440, file: !3, line: 3050, column: 33)
!14446 = !DILocation(line: 3051, column: 21, scope: !14444)
!14447 = !DILocation(line: 3051, column: 8, scope: !14445)
!14448 = !DILocation(line: 3052, column: 22, scope: !14449)
!14449 = distinct !DILexicalBlock(scope: !14444, file: !3, line: 3051, column: 32)
!14450 = !DILocation(line: 3053, column: 4, scope: !14449)
!14451 = !DILocation(line: 3054, column: 3, scope: !14445)
!14452 = !DILocation(line: 3054, column: 14, scope: !14453)
!14453 = distinct !DILexicalBlock(scope: !14440, file: !3, line: 3054, column: 14)
!14454 = !DILocation(line: 3054, column: 21, scope: !14453)
!14455 = !DILocation(line: 3054, column: 14, scope: !14440)
!14456 = !DILocation(line: 3055, column: 8, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14458, file: !3, line: 3055, column: 8)
!14458 = distinct !DILexicalBlock(scope: !14453, file: !3, line: 3054, column: 46)
!14459 = !DILocation(line: 3055, column: 21, scope: !14457)
!14460 = !DILocation(line: 3055, column: 31, scope: !14457)
!14461 = !DILocation(line: 3056, column: 8, scope: !14457)
!14462 = !DILocation(line: 3056, column: 14, scope: !14457)
!14463 = !DILocation(line: 3056, column: 20, scope: !14457)
!14464 = !DILocation(line: 3055, column: 8, scope: !14458)
!14465 = !DILocation(line: 3057, column: 33, scope: !14466)
!14466 = distinct !DILexicalBlock(scope: !14457, file: !3, line: 3056, column: 43)
!14467 = !DILocation(line: 3057, column: 39, scope: !14466)
!14468 = !DILocation(line: 3057, column: 47, scope: !14466)
!14469 = !DILocation(line: 3057, column: 53, scope: !14466)
!14470 = !DILocation(line: 3057, column: 65, scope: !14466)
!14471 = !DILocation(line: 3057, column: 71, scope: !14466)
!14472 = !DILocation(line: 3057, column: 5, scope: !14466)
!14473 = !DILocation(line: 3058, column: 5, scope: !14466)
!14474 = !DILocation(line: 3059, column: 15, scope: !14475)
!14475 = distinct !DILexicalBlock(scope: !14457, file: !3, line: 3059, column: 15)
!14476 = !DILocation(line: 3059, column: 28, scope: !14475)
!14477 = !DILocation(line: 3059, column: 15, scope: !14457)
!14478 = !DILocation(line: 3060, column: 22, scope: !14479)
!14479 = distinct !DILexicalBlock(scope: !14475, file: !3, line: 3059, column: 39)
!14480 = !DILocation(line: 3061, column: 4, scope: !14479)
!14481 = !DILocation(line: 3062, column: 3, scope: !14458)
!14482 = !DILocation(line: 3064, column: 7, scope: !14483)
!14483 = distinct !DILexicalBlock(scope: !14430, file: !3, line: 3064, column: 7)
!14484 = !DILocation(line: 3064, column: 7, scope: !14430)
!14485 = !DILocation(line: 3065, column: 8, scope: !14486)
!14486 = distinct !DILexicalBlock(scope: !14487, file: !3, line: 3065, column: 8)
!14487 = distinct !DILexicalBlock(scope: !14483, file: !3, line: 3064, column: 25)
!14488 = !DILocation(line: 3065, column: 14, scope: !14486)
!14489 = !DILocation(line: 3065, column: 8, scope: !14487)
!14490 = !DILocation(line: 3066, column: 23, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14486, file: !3, line: 3065, column: 38)
!14492 = !DILocation(line: 3066, column: 5, scope: !14491)
!14493 = !DILocation(line: 3067, column: 30, scope: !14491)
!14494 = !DILocation(line: 3067, column: 5, scope: !14491)
!14495 = !DILocation(line: 3068, column: 5, scope: !14491)
!14496 = !DILocation(line: 3070, column: 23, scope: !14497)
!14497 = distinct !DILexicalBlock(scope: !14486, file: !3, line: 3069, column: 11)
!14498 = !DILocation(line: 3070, column: 5, scope: !14497)
!14499 = !DILocation(line: 3071, column: 30, scope: !14497)
!14500 = !DILocation(line: 3071, column: 5, scope: !14497)
!14501 = !DILocation(line: 3072, column: 5, scope: !14497)
!14502 = !DILocation(line: 3075, column: 2, scope: !14430)
!14503 = !DILocation(line: 3077, column: 6, scope: !14504)
!14504 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 3077, column: 6)
!14505 = !DILocation(line: 3077, column: 13, scope: !14504)
!14506 = !DILocation(line: 3077, column: 6, scope: !14377)
!14507 = !DILocation(line: 3081, column: 7, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !14509, file: !3, line: 3081, column: 7)
!14509 = distinct !DILexicalBlock(scope: !14504, file: !3, line: 3077, column: 52)
!14510 = !DILocation(line: 3081, column: 14, scope: !14508)
!14511 = !DILocation(line: 3081, column: 7, scope: !14509)
!14512 = !DILocation(line: 3082, column: 4, scope: !14513)
!14513 = distinct !DILexicalBlock(scope: !14508, file: !3, line: 3081, column: 33)
!14514 = !DILocation(line: 3082, column: 10, scope: !14513)
!14515 = !DILocation(line: 3082, column: 42, scope: !14513)
!14516 = !DILocation(line: 3083, column: 4, scope: !14513)
!14517 = !DILocation(line: 3083, column: 10, scope: !14513)
!14518 = !DILocation(line: 3083, column: 30, scope: !14513)
!14519 = !DILocation(line: 3084, column: 32, scope: !14513)
!14520 = !DILocation(line: 3084, column: 4, scope: !14513)
!14521 = !DILocation(line: 3085, column: 4, scope: !14513)
!14522 = !DILocation(line: 3086, column: 14, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !14508, file: !3, line: 3086, column: 14)
!14524 = !DILocation(line: 3086, column: 21, scope: !14523)
!14525 = !DILocation(line: 3087, column: 7, scope: !14523)
!14526 = !DILocation(line: 3087, column: 10, scope: !14523)
!14527 = !DILocation(line: 3087, column: 16, scope: !14523)
!14528 = !DILocation(line: 3086, column: 14, scope: !14508)
!14529 = !DILocation(line: 3088, column: 4, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14523, file: !3, line: 3087, column: 27)
!14531 = !DILocation(line: 3088, column: 10, scope: !14530)
!14532 = !DILocation(line: 3088, column: 42, scope: !14530)
!14533 = !DILocation(line: 3089, column: 4, scope: !14530)
!14534 = !DILocation(line: 3089, column: 10, scope: !14530)
!14535 = !DILocation(line: 3089, column: 30, scope: !14530)
!14536 = !DILocation(line: 3090, column: 32, scope: !14530)
!14537 = !DILocation(line: 3090, column: 4, scope: !14530)
!14538 = !DILocation(line: 3091, column: 4, scope: !14530)
!14539 = !DILocation(line: 3092, column: 14, scope: !14540)
!14540 = distinct !DILexicalBlock(scope: !14523, file: !3, line: 3092, column: 14)
!14541 = !DILocation(line: 3092, column: 20, scope: !14540)
!14542 = !DILocation(line: 3092, column: 14, scope: !14523)
!14543 = !DILocalVariable(name: "bss_index", scope: !14544, file: !3, line: 3093, type: !7)
!14544 = distinct !DILexicalBlock(scope: !14540, file: !3, line: 3092, column: 40)
!14545 = !DILocation(line: 3093, column: 8, scope: !14544)
!14546 = !DILocation(line: 3095, column: 4, scope: !14544)
!14547 = !DILocation(line: 3095, column: 10, scope: !14544)
!14548 = !DILocation(line: 3095, column: 24, scope: !14544)
!14549 = !DILocation(line: 3095, column: 30, scope: !14544)
!14550 = !DILocation(line: 3095, column: 44, scope: !14544)
!14551 = !DILocation(line: 3095, column: 52, scope: !14544)
!14552 = !DILocation(line: 3097, column: 35, scope: !14553)
!14553 = distinct !DILexicalBlock(scope: !14544, file: !3, line: 3097, column: 8)
!14554 = !DILocation(line: 3097, column: 22, scope: !14553)
!14555 = !DILocation(line: 3097, column: 20, scope: !14553)
!14556 = !DILocation(line: 3097, column: 42, scope: !14553)
!14557 = !DILocation(line: 3097, column: 8, scope: !14544)
!14558 = !DILocation(line: 3098, column: 20, scope: !14559)
!14559 = distinct !DILexicalBlock(scope: !14553, file: !3, line: 3097, column: 49)
!14560 = !DILocation(line: 3098, column: 26, scope: !14559)
!14561 = !DILocation(line: 3098, column: 5, scope: !14559)
!14562 = !DILocation(line: 3099, column: 5, scope: !14559)
!14563 = !DILocation(line: 3101, column: 3, scope: !14544)
!14564 = !DILocation(line: 3102, column: 2, scope: !14509)
!14565 = !DILocation(line: 3104, column: 2, scope: !14377)
!14566 = !DILocation(line: 3104, column: 8, scope: !14377)
!14567 = !DILocation(line: 3104, column: 38, scope: !14377)
!14568 = !DILocation(line: 3105, column: 20, scope: !14377)
!14569 = !DILocation(line: 3105, column: 2, scope: !14377)
!14570 = !DILocation(line: 3106, column: 2, scope: !14377)
!14571 = !DILocation(line: 3106, column: 8, scope: !14377)
!14572 = !DILocation(line: 3106, column: 30, scope: !14377)
!14573 = !DILocation(line: 3107, column: 1, scope: !14377)
!14574 = !DILocalVariable(name: "priv", arg: 1, scope: !8623, file: !3, line: 3109, type: !8587)
!14575 = !DILocation(line: 3109, column: 45, scope: !8623)
!14576 = !DILocalVariable(name: "frame_len", arg: 2, scope: !8623, file: !3, line: 3109, type: !916)
!14577 = !DILocation(line: 3109, column: 55, scope: !8623)
!14578 = !DILocalVariable(name: "subtype", arg: 3, scope: !8623, file: !3, line: 3109, type: !916)
!14579 = !DILocation(line: 3109, column: 70, scope: !8623)
!14580 = !DILocalVariable(name: "ass_resp", scope: !8623, file: !3, line: 3118, type: !8621)
!14581 = !DILocation(line: 3118, column: 5, scope: !8623)
!14582 = !DILocation(line: 3118, column: 42, scope: !8623)
!14583 = !DILocation(line: 3118, column: 48, scope: !8623)
!14584 = !DILocation(line: 3118, column: 16, scope: !8623)
!14585 = !DILocalVariable(name: "status", scope: !8623, file: !3, line: 3120, type: !916)
!14586 = !DILocation(line: 3120, column: 6, scope: !8623)
!14587 = !DILocation(line: 3120, column: 15, scope: !8623)
!14588 = !DILocalVariable(name: "ass_id", scope: !8623, file: !3, line: 3121, type: !916)
!14589 = !DILocation(line: 3121, column: 6, scope: !8623)
!14590 = !DILocation(line: 3121, column: 15, scope: !8623)
!14591 = !DILocalVariable(name: "rates_len", scope: !8623, file: !3, line: 3122, type: !916)
!14592 = !DILocation(line: 3122, column: 6, scope: !8623)
!14593 = !DILocation(line: 3122, column: 18, scope: !8623)
!14594 = !DILocation(line: 3122, column: 28, scope: !8623)
!14595 = !DILocation(line: 3122, column: 35, scope: !8623)
!14596 = !DILocation(line: 3122, column: 45, scope: !8623)
!14597 = !DILocation(line: 3122, column: 55, scope: !8623)
!14598 = !DILocalVariable(name: "wrqu", scope: !8623, file: !3, line: 3124, type: !614)
!14599 = !DILocation(line: 3124, column: 19, scope: !8623)
!14600 = !DILocation(line: 3126, column: 6, scope: !14601)
!14601 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 3126, column: 6)
!14602 = !DILocation(line: 3126, column: 22, scope: !14601)
!14603 = !DILocation(line: 3126, column: 20, scope: !14601)
!14604 = !DILocation(line: 3126, column: 16, scope: !14601)
!14605 = !DILocation(line: 3126, column: 6, scope: !8623)
!14606 = !DILocation(line: 3127, column: 3, scope: !14601)
!14607 = !DILocation(line: 3129, column: 6, scope: !14608)
!14608 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 3129, column: 6)
!14609 = !DILocation(line: 3129, column: 13, scope: !14608)
!14610 = !DILocation(line: 3129, column: 6, scope: !8623)
!14611 = !DILocation(line: 3130, column: 7, scope: !14612)
!14612 = distinct !DILexicalBlock(scope: !14613, file: !3, line: 3130, column: 7)
!14613 = distinct !DILexicalBlock(scope: !14608, file: !3, line: 3129, column: 37)
!14614 = !DILocation(line: 3130, column: 15, scope: !14612)
!14615 = !DILocation(line: 3130, column: 7, scope: !14613)
!14616 = !DILocation(line: 3131, column: 4, scope: !14612)
!14617 = !DILocation(line: 3131, column: 10, scope: !14612)
!14618 = !DILocation(line: 3131, column: 37, scope: !14612)
!14619 = !DILocation(line: 3133, column: 4, scope: !14612)
!14620 = !DILocation(line: 3133, column: 10, scope: !14612)
!14621 = !DILocation(line: 3133, column: 39, scope: !14612)
!14622 = !DILocation(line: 3135, column: 19, scope: !14613)
!14623 = !DILocation(line: 3136, column: 34, scope: !14613)
!14624 = !DILocation(line: 3136, column: 41, scope: !14613)
!14625 = !DILocation(line: 3135, column: 3, scope: !14613)
!14626 = !DILocation(line: 3137, column: 17, scope: !14613)
!14627 = !DILocation(line: 3138, column: 32, scope: !14613)
!14628 = !DILocation(line: 3138, column: 42, scope: !14613)
!14629 = !DILocation(line: 3138, column: 49, scope: !14613)
!14630 = !DILocation(line: 3137, column: 3, scope: !14613)
!14631 = !DILocation(line: 3139, column: 7, scope: !14632)
!14632 = distinct !DILexicalBlock(scope: !14613, file: !3, line: 3139, column: 7)
!14633 = !DILocation(line: 3139, column: 13, scope: !14632)
!14634 = !DILocation(line: 3139, column: 24, scope: !14632)
!14635 = !DILocation(line: 3139, column: 7, scope: !14613)
!14636 = !DILocation(line: 3140, column: 4, scope: !14637)
!14637 = distinct !DILexicalBlock(scope: !14632, file: !3, line: 3139, column: 30)
!14638 = !DILocation(line: 3140, column: 10, scope: !14637)
!14639 = !DILocation(line: 3140, column: 26, scope: !14637)
!14640 = !DILocation(line: 3141, column: 19, scope: !14637)
!14641 = !DILocation(line: 3141, column: 4, scope: !14637)
!14642 = !DILocation(line: 3143, column: 20, scope: !14637)
!14643 = !DILocation(line: 3143, column: 4, scope: !14637)
!14644 = !DILocation(line: 3145, column: 3, scope: !14637)
!14645 = !DILocation(line: 3146, column: 4, scope: !14646)
!14646 = distinct !DILexicalBlock(scope: !14632, file: !3, line: 3145, column: 10)
!14647 = !DILocation(line: 3146, column: 10, scope: !14646)
!14648 = !DILocation(line: 3146, column: 26, scope: !14646)
!14649 = !DILocation(line: 3147, column: 19, scope: !14646)
!14650 = !DILocation(line: 3147, column: 4, scope: !14646)
!14651 = !DILocation(line: 3149, column: 20, scope: !14646)
!14652 = !DILocation(line: 3149, column: 4, scope: !14646)
!14653 = !DILocation(line: 3153, column: 3, scope: !14613)
!14654 = !DILocation(line: 3153, column: 9, scope: !14613)
!14655 = !DILocation(line: 3153, column: 31, scope: !14613)
!14656 = !DILocation(line: 3154, column: 3, scope: !14613)
!14657 = !DILocation(line: 3154, column: 9, scope: !14613)
!14658 = !DILocation(line: 3154, column: 32, scope: !14613)
!14659 = !DILocation(line: 3155, column: 21, scope: !14613)
!14660 = !DILocation(line: 3155, column: 3, scope: !14613)
!14661 = !DILocation(line: 3158, column: 8, scope: !14613)
!14662 = !DILocation(line: 3158, column: 13, scope: !14613)
!14663 = !DILocation(line: 3158, column: 20, scope: !14613)
!14664 = !DILocation(line: 3159, column: 8, scope: !14613)
!14665 = !DILocation(line: 3159, column: 13, scope: !14613)
!14666 = !DILocation(line: 3159, column: 19, scope: !14613)
!14667 = !DILocation(line: 3160, column: 15, scope: !14613)
!14668 = !DILocation(line: 3160, column: 23, scope: !14613)
!14669 = !DILocation(line: 3160, column: 3, scope: !14613)
!14670 = !DILocation(line: 3160, column: 32, scope: !14613)
!14671 = !DILocation(line: 3160, column: 38, scope: !14613)
!14672 = !DILocation(line: 3161, column: 8, scope: !14613)
!14673 = !DILocation(line: 3161, column: 16, scope: !14613)
!14674 = !DILocation(line: 3161, column: 26, scope: !14613)
!14675 = !DILocation(line: 3162, column: 23, scope: !14613)
!14676 = !DILocation(line: 3162, column: 29, scope: !14613)
!14677 = !DILocation(line: 3162, column: 3, scope: !14613)
!14678 = !DILocation(line: 3164, column: 3, scope: !14613)
!14679 = !DILocation(line: 3167, column: 6, scope: !14680)
!14680 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 3167, column: 6)
!14681 = !DILocation(line: 3167, column: 14, scope: !14680)
!14682 = !DILocation(line: 3167, column: 44, scope: !14680)
!14683 = !DILocation(line: 3168, column: 6, scope: !14680)
!14684 = !DILocation(line: 3168, column: 13, scope: !14680)
!14685 = !DILocation(line: 3168, column: 47, scope: !14680)
!14686 = !DILocation(line: 3169, column: 6, scope: !14680)
!14687 = !DILocation(line: 3169, column: 13, scope: !14680)
!14688 = !DILocation(line: 3169, column: 45, scope: !14680)
!14689 = !DILocation(line: 3170, column: 6, scope: !14680)
!14690 = !DILocation(line: 3170, column: 12, scope: !14680)
!14691 = !DILocation(line: 3170, column: 39, scope: !14680)
!14692 = !DILocation(line: 3167, column: 6, scope: !8623)
!14693 = !DILocation(line: 3171, column: 14, scope: !14694)
!14694 = distinct !DILexicalBlock(scope: !14680, file: !3, line: 3170, column: 66)
!14695 = !DILocation(line: 3171, column: 20, scope: !14694)
!14696 = !DILocation(line: 3171, column: 38, scope: !14694)
!14697 = !DILocation(line: 3171, column: 46, scope: !14694)
!14698 = !DILocation(line: 3171, column: 3, scope: !14694)
!14699 = !DILocation(line: 3172, column: 3, scope: !14694)
!14700 = !DILocation(line: 3172, column: 9, scope: !14694)
!14701 = !DILocation(line: 3172, column: 35, scope: !14694)
!14702 = !DILocation(line: 3173, column: 28, scope: !14694)
!14703 = !DILocation(line: 3173, column: 3, scope: !14694)
!14704 = !DILocation(line: 3174, column: 3, scope: !14694)
!14705 = !DILocation(line: 3177, column: 6, scope: !14706)
!14706 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 3177, column: 6)
!14707 = !DILocation(line: 3177, column: 14, scope: !14706)
!14708 = !DILocation(line: 3177, column: 46, scope: !14706)
!14709 = !DILocation(line: 3178, column: 6, scope: !14706)
!14710 = !DILocation(line: 3178, column: 13, scope: !14706)
!14711 = !DILocation(line: 3178, column: 47, scope: !14706)
!14712 = !DILocation(line: 3179, column: 6, scope: !14706)
!14713 = !DILocation(line: 3179, column: 13, scope: !14706)
!14714 = !DILocation(line: 3179, column: 45, scope: !14706)
!14715 = !DILocation(line: 3180, column: 6, scope: !14706)
!14716 = !DILocation(line: 3180, column: 12, scope: !14706)
!14717 = !DILocation(line: 3180, column: 41, scope: !14706)
!14718 = !DILocation(line: 3177, column: 6, scope: !8623)
!14719 = !DILocation(line: 3181, column: 14, scope: !14720)
!14720 = distinct !DILexicalBlock(scope: !14706, file: !3, line: 3180, column: 68)
!14721 = !DILocation(line: 3181, column: 20, scope: !14720)
!14722 = !DILocation(line: 3181, column: 38, scope: !14720)
!14723 = !DILocation(line: 3181, column: 46, scope: !14720)
!14724 = !DILocation(line: 3181, column: 3, scope: !14720)
!14725 = !DILocation(line: 3182, column: 3, scope: !14720)
!14726 = !DILocation(line: 3182, column: 9, scope: !14720)
!14727 = !DILocation(line: 3182, column: 37, scope: !14720)
!14728 = !DILocation(line: 3183, column: 28, scope: !14720)
!14729 = !DILocation(line: 3183, column: 3, scope: !14720)
!14730 = !DILocation(line: 3184, column: 3, scope: !14720)
!14731 = !DILocation(line: 3187, column: 20, scope: !8623)
!14732 = !DILocation(line: 3187, column: 2, scope: !8623)
!14733 = !DILocation(line: 3188, column: 2, scope: !8623)
!14734 = !DILocation(line: 3188, column: 8, scope: !8623)
!14735 = !DILocation(line: 3188, column: 30, scope: !8623)
!14736 = !DILocation(line: 3190, column: 6, scope: !14737)
!14737 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 3190, column: 6)
!14738 = !DILocation(line: 3190, column: 12, scope: !14737)
!14739 = !DILocation(line: 3190, column: 6, scope: !8623)
!14740 = !DILocalVariable(name: "bss_index", scope: !14741, file: !3, line: 3191, type: !7)
!14741 = distinct !DILexicalBlock(scope: !14737, file: !3, line: 3190, column: 32)
!14742 = !DILocation(line: 3191, column: 7, scope: !14741)
!14743 = !DILocation(line: 3192, column: 3, scope: !14741)
!14744 = !DILocation(line: 3192, column: 9, scope: !14741)
!14745 = !DILocation(line: 3192, column: 23, scope: !14741)
!14746 = !DILocation(line: 3192, column: 29, scope: !14741)
!14747 = !DILocation(line: 3192, column: 43, scope: !14741)
!14748 = !DILocation(line: 3192, column: 51, scope: !14741)
!14749 = !DILocation(line: 3194, column: 33, scope: !14750)
!14750 = distinct !DILexicalBlock(scope: !14741, file: !3, line: 3194, column: 7)
!14751 = !DILocation(line: 3194, column: 20, scope: !14750)
!14752 = !DILocation(line: 3194, column: 18, scope: !14750)
!14753 = !DILocation(line: 3194, column: 40, scope: !14750)
!14754 = !DILocation(line: 3194, column: 7, scope: !14741)
!14755 = !DILocation(line: 3195, column: 19, scope: !14750)
!14756 = !DILocation(line: 3195, column: 25, scope: !14750)
!14757 = !DILocation(line: 3195, column: 4, scope: !14750)
!14758 = !DILocation(line: 3196, column: 2, scope: !14741)
!14759 = !DILocation(line: 3197, column: 1, scope: !8623)
!14760 = distinct !DISubprogram(name: "join", scope: !3, file: !3, line: 2770, type: !9569, scopeLine: 2771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!14761 = !DILocalVariable(name: "priv", arg: 1, scope: !14760, file: !3, line: 2770, type: !8587)
!14762 = !DILocation(line: 2770, column: 40, scope: !14760)
!14763 = !DILocalVariable(name: "type", arg: 2, scope: !14760, file: !3, line: 2770, type: !7)
!14764 = !DILocation(line: 2770, column: 50, scope: !14760)
!14765 = !DILocalVariable(name: "cmd", scope: !14760, file: !3, line: 2780, type: !14766)
!14766 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14760, file: !3, line: 2772, size: 352, elements: !14767)
!14767 = !{!14768, !14769, !14770, !14771, !14772, !14773, !14774}
!14768 = !DIDerivedType(tag: DW_TAG_member, name: "BSSID", scope: !14766, file: !3, line: 2773, baseType: !6709, size: 48)
!14769 = !DIDerivedType(tag: DW_TAG_member, name: "SSID", scope: !14766, file: !3, line: 2774, baseType: !7027, size: 256, offset: 48)
!14770 = !DIDerivedType(tag: DW_TAG_member, name: "BSS_type", scope: !14766, file: !3, line: 2775, baseType: !1116, size: 8, offset: 304)
!14771 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !14766, file: !3, line: 2776, baseType: !1116, size: 8, offset: 312)
!14772 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14766, file: !3, line: 2777, baseType: !7142, size: 16, offset: 320)
!14773 = !DIDerivedType(tag: DW_TAG_member, name: "SSID_size", scope: !14766, file: !3, line: 2778, baseType: !1116, size: 8, offset: 336)
!14774 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !14766, file: !3, line: 2779, baseType: !1116, size: 8, offset: 344)
!14775 = !DILocation(line: 2780, column: 4, scope: !14760)
!14776 = !DILocation(line: 2782, column: 18, scope: !14760)
!14777 = !DILocation(line: 2782, column: 24, scope: !14760)
!14778 = !DILocation(line: 2782, column: 6, scope: !14760)
!14779 = !DILocation(line: 2782, column: 16, scope: !14760)
!14780 = !DILocation(line: 2783, column: 13, scope: !14760)
!14781 = !DILocation(line: 2783, column: 2, scope: !14760)
!14782 = !DILocation(line: 2783, column: 19, scope: !14760)
!14783 = !DILocation(line: 2783, column: 25, scope: !14760)
!14784 = !DILocation(line: 2783, column: 31, scope: !14760)
!14785 = !DILocation(line: 2783, column: 37, scope: !14760)
!14786 = !DILocation(line: 2784, column: 13, scope: !14760)
!14787 = !DILocation(line: 2784, column: 2, scope: !14760)
!14788 = !DILocation(line: 2784, column: 20, scope: !14760)
!14789 = !DILocation(line: 2784, column: 26, scope: !14760)
!14790 = !DILocation(line: 2785, column: 17, scope: !14760)
!14791 = !DILocation(line: 2785, column: 23, scope: !14760)
!14792 = !DILocation(line: 2785, column: 31, scope: !14760)
!14793 = !DILocation(line: 2785, column: 16, scope: !14760)
!14794 = !DILocation(line: 2785, column: 6, scope: !14760)
!14795 = !DILocation(line: 2785, column: 14, scope: !14760)
!14796 = !DILocation(line: 2786, column: 17, scope: !14760)
!14797 = !DILocation(line: 2786, column: 6, scope: !14760)
!14798 = !DILocation(line: 2786, column: 15, scope: !14760)
!14799 = !DILocation(line: 2787, column: 6, scope: !14760)
!14800 = !DILocation(line: 2787, column: 14, scope: !14760)
!14801 = !DILocation(line: 2789, column: 21, scope: !14760)
!14802 = !DILocation(line: 2789, column: 37, scope: !14760)
!14803 = !DILocation(line: 2789, column: 2, scope: !14760)
!14804 = !DILocation(line: 2790, column: 1, scope: !14760)
!14805 = distinct !DISubprogram(name: "send_association_request", scope: !3, file: !3, line: 2876, type: !9569, scopeLine: 2877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!14806 = !DILocalVariable(name: "priv", arg: 1, scope: !14805, file: !3, line: 2876, type: !8587)
!14807 = !DILocation(line: 2876, column: 60, scope: !14805)
!14808 = !DILocalVariable(name: "is_reassoc", arg: 2, scope: !14805, file: !3, line: 2876, type: !7)
!14809 = !DILocation(line: 2876, column: 70, scope: !14805)
!14810 = !DILocalVariable(name: "ssid_el_p", scope: !14805, file: !3, line: 2878, type: !1115)
!14811 = !DILocation(line: 2878, column: 6, scope: !14805)
!14812 = !DILocalVariable(name: "bodysize", scope: !14805, file: !3, line: 2879, type: !7)
!14813 = !DILocation(line: 2879, column: 6, scope: !14805)
!14814 = !DILocalVariable(name: "header", scope: !14805, file: !3, line: 2880, type: !8589)
!14815 = !DILocation(line: 2880, column: 23, scope: !14805)
!14816 = !DILocalVariable(name: "body", scope: !14805, file: !3, line: 2891, type: !14817)
!14817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ass_req_format", scope: !14805, file: !3, line: 2881, size: 400, elements: !14818)
!14818 = !{!14819, !14820, !14821, !14822, !14823, !14824, !14825, !14826, !14827}
!14819 = !DIDerivedType(tag: DW_TAG_member, name: "capability", scope: !14817, file: !3, line: 2882, baseType: !7142, size: 16)
!14820 = !DIDerivedType(tag: DW_TAG_member, name: "listen_interval", scope: !14817, file: !3, line: 2883, baseType: !7142, size: 16, offset: 16)
!14821 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !14817, file: !3, line: 2884, baseType: !6709, size: 48, offset: 32)
!14822 = !DIDerivedType(tag: DW_TAG_member, name: "ssid_el_id", scope: !14817, file: !3, line: 2885, baseType: !1116, size: 8, offset: 80)
!14823 = !DIDerivedType(tag: DW_TAG_member, name: "ssid_len", scope: !14817, file: !3, line: 2886, baseType: !1116, size: 8, offset: 88)
!14824 = !DIDerivedType(tag: DW_TAG_member, name: "ssid", scope: !14817, file: !3, line: 2887, baseType: !7027, size: 256, offset: 96)
!14825 = !DIDerivedType(tag: DW_TAG_member, name: "sup_rates_el_id", scope: !14817, file: !3, line: 2888, baseType: !1116, size: 8, offset: 352)
!14826 = !DIDerivedType(tag: DW_TAG_member, name: "sup_rates_len", scope: !14817, file: !3, line: 2889, baseType: !1116, size: 8, offset: 360)
!14827 = !DIDerivedType(tag: DW_TAG_member, name: "rates", scope: !14817, file: !3, line: 2890, baseType: !8633, size: 32, offset: 368)
!14828 = !DILocation(line: 2891, column: 4, scope: !14805)
!14829 = !DILocation(line: 2893, column: 25, scope: !14805)
!14830 = !DILocation(line: 2893, column: 9, scope: !14805)
!14831 = !DILocation(line: 2893, column: 23, scope: !14805)
!14832 = !DILocation(line: 2895, column: 9, scope: !14805)
!14833 = !DILocation(line: 2895, column: 21, scope: !14805)
!14834 = !DILocation(line: 2896, column: 9, scope: !14805)
!14835 = !DILocation(line: 2896, column: 18, scope: !14805)
!14836 = !DILocation(line: 2898, column: 16, scope: !14805)
!14837 = !DILocation(line: 2898, column: 2, scope: !14805)
!14838 = !DILocation(line: 2898, column: 23, scope: !14805)
!14839 = !DILocation(line: 2898, column: 29, scope: !14805)
!14840 = !DILocation(line: 2899, column: 16, scope: !14805)
!14841 = !DILocation(line: 2899, column: 2, scope: !14805)
!14842 = !DILocation(line: 2899, column: 23, scope: !14805)
!14843 = !DILocation(line: 2899, column: 29, scope: !14805)
!14844 = !DILocation(line: 2899, column: 34, scope: !14805)
!14845 = !DILocation(line: 2900, column: 16, scope: !14805)
!14846 = !DILocation(line: 2900, column: 2, scope: !14805)
!14847 = !DILocation(line: 2900, column: 23, scope: !14805)
!14848 = !DILocation(line: 2900, column: 29, scope: !14805)
!14849 = !DILocation(line: 2902, column: 7, scope: !14805)
!14850 = !DILocation(line: 2902, column: 18, scope: !14805)
!14851 = !DILocation(line: 2903, column: 6, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14805, file: !3, line: 2903, column: 6)
!14853 = !DILocation(line: 2903, column: 12, scope: !14852)
!14854 = !DILocation(line: 2903, column: 6, scope: !14805)
!14855 = !DILocation(line: 2904, column: 8, scope: !14852)
!14856 = !DILocation(line: 2904, column: 19, scope: !14852)
!14857 = !DILocation(line: 2904, column: 3, scope: !14852)
!14858 = !DILocation(line: 2905, column: 6, scope: !14859)
!14859 = distinct !DILexicalBlock(scope: !14805, file: !3, line: 2905, column: 6)
!14860 = !DILocation(line: 2905, column: 12, scope: !14859)
!14861 = !DILocation(line: 2905, column: 21, scope: !14859)
!14862 = !DILocation(line: 2905, column: 6, scope: !14805)
!14863 = !DILocation(line: 2906, column: 8, scope: !14859)
!14864 = !DILocation(line: 2906, column: 19, scope: !14859)
!14865 = !DILocation(line: 2906, column: 3, scope: !14859)
!14866 = !DILocation(line: 2908, column: 25, scope: !14805)
!14867 = !DILocation(line: 2908, column: 7, scope: !14805)
!14868 = !DILocation(line: 2908, column: 23, scope: !14805)
!14869 = !DILocation(line: 2911, column: 6, scope: !14870)
!14870 = distinct !DILexicalBlock(scope: !14805, file: !3, line: 2911, column: 6)
!14871 = !DILocation(line: 2911, column: 6, scope: !14805)
!14872 = !DILocation(line: 2912, column: 15, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14870, file: !3, line: 2911, column: 18)
!14874 = !DILocation(line: 2912, column: 3, scope: !14873)
!14875 = !DILocation(line: 2912, column: 19, scope: !14873)
!14876 = !DILocation(line: 2912, column: 25, scope: !14873)
!14877 = !DILocation(line: 2913, column: 21, scope: !14873)
!14878 = !DILocation(line: 2913, column: 13, scope: !14873)
!14879 = !DILocation(line: 2914, column: 19, scope: !14873)
!14880 = !DILocation(line: 2914, column: 25, scope: !14873)
!14881 = !DILocation(line: 2914, column: 17, scope: !14873)
!14882 = !DILocation(line: 2914, column: 12, scope: !14873)
!14883 = !DILocation(line: 2915, column: 2, scope: !14873)
!14884 = !DILocation(line: 2916, column: 21, scope: !14885)
!14885 = distinct !DILexicalBlock(scope: !14870, file: !3, line: 2915, column: 9)
!14886 = !DILocation(line: 2916, column: 16, scope: !14885)
!14887 = !DILocation(line: 2916, column: 13, scope: !14885)
!14888 = !DILocation(line: 2917, column: 19, scope: !14885)
!14889 = !DILocation(line: 2917, column: 25, scope: !14885)
!14890 = !DILocation(line: 2917, column: 17, scope: !14885)
!14891 = !DILocation(line: 2917, column: 12, scope: !14885)
!14892 = !DILocation(line: 2920, column: 2, scope: !14805)
!14893 = !DILocation(line: 2920, column: 15, scope: !14805)
!14894 = !DILocation(line: 2921, column: 17, scope: !14805)
!14895 = !DILocation(line: 2921, column: 23, scope: !14805)
!14896 = !DILocation(line: 2921, column: 2, scope: !14805)
!14897 = !DILocation(line: 2921, column: 15, scope: !14805)
!14898 = !DILocation(line: 2922, column: 9, scope: !14805)
!14899 = !DILocation(line: 2922, column: 19, scope: !14805)
!14900 = !DILocation(line: 2922, column: 24, scope: !14805)
!14901 = !DILocation(line: 2922, column: 30, scope: !14805)
!14902 = !DILocation(line: 2922, column: 2, scope: !14805)
!14903 = !DILocation(line: 2922, column: 36, scope: !14805)
!14904 = !DILocation(line: 2922, column: 42, scope: !14805)
!14905 = !DILocation(line: 2923, column: 2, scope: !14805)
!14906 = !DILocation(line: 2923, column: 16, scope: !14805)
!14907 = !DILocation(line: 2923, column: 22, scope: !14805)
!14908 = !DILocation(line: 2923, column: 14, scope: !14805)
!14909 = !DILocation(line: 2923, column: 33, scope: !14805)
!14910 = !DILocation(line: 2924, column: 2, scope: !14805)
!14911 = !DILocation(line: 2924, column: 16, scope: !14805)
!14912 = !DILocation(line: 2924, column: 22, scope: !14805)
!14913 = !DILocation(line: 2924, column: 14, scope: !14805)
!14914 = !DILocation(line: 2924, column: 33, scope: !14805)
!14915 = !DILocation(line: 2925, column: 9, scope: !14805)
!14916 = !DILocation(line: 2925, column: 19, scope: !14805)
!14917 = !DILocation(line: 2925, column: 25, scope: !14805)
!14918 = !DILocation(line: 2925, column: 31, scope: !14805)
!14919 = !DILocation(line: 2925, column: 23, scope: !14805)
!14920 = !DILocation(line: 2925, column: 2, scope: !14805)
!14921 = !DILocation(line: 2927, column: 34, scope: !14805)
!14922 = !DILocation(line: 2927, column: 49, scope: !14805)
!14923 = !DILocation(line: 2927, column: 64, scope: !14805)
!14924 = !DILocation(line: 2927, column: 2, scope: !14805)
!14925 = !DILocation(line: 2928, column: 1, scope: !14805)
!14926 = distinct !DISubprogram(name: "send_authentication_request", scope: !3, file: !3, line: 2842, type: !14927, scopeLine: 2844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!14927 = !DISubroutineType(types: !14928)
!14928 = !{null, !8587, !916, !1115, !7}
!14929 = !DILocalVariable(name: "priv", arg: 1, scope: !14926, file: !3, line: 2842, type: !8587)
!14930 = !DILocation(line: 2842, column: 63, scope: !14926)
!14931 = !DILocalVariable(name: "system", arg: 2, scope: !14926, file: !3, line: 2842, type: !916)
!14932 = !DILocation(line: 2842, column: 73, scope: !14926)
!14933 = !DILocalVariable(name: "challenge", arg: 3, scope: !14926, file: !3, line: 2843, type: !1115)
!14934 = !DILocation(line: 2843, column: 10, scope: !14926)
!14935 = !DILocalVariable(name: "challenge_len", arg: 4, scope: !14926, file: !3, line: 2843, type: !7)
!14936 = !DILocation(line: 2843, column: 25, scope: !14926)
!14937 = !DILocalVariable(name: "header", scope: !14926, file: !3, line: 2845, type: !8589)
!14938 = !DILocation(line: 2845, column: 23, scope: !14926)
!14939 = !DILocalVariable(name: "auth", scope: !14926, file: !3, line: 2846, type: !8610)
!14940 = !DILocation(line: 2846, column: 19, scope: !14926)
!14941 = !DILocation(line: 2848, column: 9, scope: !14926)
!14942 = !DILocation(line: 2848, column: 23, scope: !14926)
!14943 = !DILocation(line: 2849, column: 9, scope: !14926)
!14944 = !DILocation(line: 2849, column: 21, scope: !14926)
!14945 = !DILocation(line: 2850, column: 9, scope: !14926)
!14946 = !DILocation(line: 2850, column: 18, scope: !14926)
!14947 = !DILocation(line: 2851, column: 16, scope: !14926)
!14948 = !DILocation(line: 2851, column: 2, scope: !14926)
!14949 = !DILocation(line: 2851, column: 23, scope: !14926)
!14950 = !DILocation(line: 2851, column: 29, scope: !14926)
!14951 = !DILocation(line: 2852, column: 16, scope: !14926)
!14952 = !DILocation(line: 2852, column: 2, scope: !14926)
!14953 = !DILocation(line: 2852, column: 23, scope: !14926)
!14954 = !DILocation(line: 2852, column: 29, scope: !14926)
!14955 = !DILocation(line: 2852, column: 34, scope: !14926)
!14956 = !DILocation(line: 2853, column: 16, scope: !14926)
!14957 = !DILocation(line: 2853, column: 2, scope: !14926)
!14958 = !DILocation(line: 2853, column: 23, scope: !14926)
!14959 = !DILocation(line: 2853, column: 29, scope: !14926)
!14960 = !DILocation(line: 2855, column: 6, scope: !14961)
!14961 = distinct !DILexicalBlock(scope: !14926, file: !3, line: 2855, column: 6)
!14962 = !DILocation(line: 2855, column: 12, scope: !14961)
!14963 = !DILocation(line: 2855, column: 22, scope: !14961)
!14964 = !DILocation(line: 2855, column: 25, scope: !14961)
!14965 = !DILocation(line: 2855, column: 31, scope: !14961)
!14966 = !DILocation(line: 2855, column: 63, scope: !14961)
!14967 = !DILocation(line: 2855, column: 6, scope: !14926)
!14968 = !DILocation(line: 2857, column: 10, scope: !14961)
!14969 = !DILocation(line: 2857, column: 24, scope: !14961)
!14970 = !DILocation(line: 2857, column: 3, scope: !14961)
!14971 = !DILocation(line: 2859, column: 13, scope: !14926)
!14972 = !DILocation(line: 2859, column: 7, scope: !14926)
!14973 = !DILocation(line: 2859, column: 11, scope: !14926)
!14974 = !DILocation(line: 2861, column: 7, scope: !14926)
!14975 = !DILocation(line: 2861, column: 14, scope: !14926)
!14976 = !DILocation(line: 2862, column: 19, scope: !14926)
!14977 = !DILocation(line: 2862, column: 7, scope: !14926)
!14978 = !DILocation(line: 2862, column: 17, scope: !14926)
!14979 = !DILocation(line: 2863, column: 43, scope: !14926)
!14980 = !DILocation(line: 2863, column: 49, scope: !14926)
!14981 = !DILocation(line: 2863, column: 80, scope: !14926)
!14982 = !DILocation(line: 2863, column: 2, scope: !14926)
!14983 = !DILocation(line: 2863, column: 8, scope: !14926)
!14984 = !DILocation(line: 2863, column: 41, scope: !14926)
!14985 = !DILocation(line: 2864, column: 2, scope: !14926)
!14986 = !DILocation(line: 2864, column: 8, scope: !14926)
!14987 = !DILocation(line: 2864, column: 40, scope: !14926)
!14988 = !DILocation(line: 2866, column: 6, scope: !14989)
!14989 = distinct !DILexicalBlock(scope: !14926, file: !3, line: 2866, column: 6)
!14990 = !DILocation(line: 2866, column: 20, scope: !14989)
!14991 = !DILocation(line: 2866, column: 6, scope: !14926)
!14992 = !DILocation(line: 2867, column: 8, scope: !14993)
!14993 = distinct !DILexicalBlock(scope: !14989, file: !3, line: 2866, column: 26)
!14994 = !DILocation(line: 2867, column: 14, scope: !14993)
!14995 = !DILocation(line: 2868, column: 25, scope: !14993)
!14996 = !DILocation(line: 2868, column: 8, scope: !14993)
!14997 = !DILocation(line: 2868, column: 23, scope: !14993)
!14998 = !DILocation(line: 2869, column: 15, scope: !14993)
!14999 = !DILocation(line: 2869, column: 3, scope: !14993)
!15000 = !DILocation(line: 2869, column: 27, scope: !14993)
!15001 = !DILocation(line: 2869, column: 38, scope: !14993)
!15002 = !DILocation(line: 2870, column: 35, scope: !14993)
!15003 = !DILocation(line: 2870, column: 50, scope: !14993)
!15004 = !DILocation(line: 2870, column: 67, scope: !14993)
!15005 = !DILocation(line: 2870, column: 65, scope: !14993)
!15006 = !DILocation(line: 2870, column: 3, scope: !14993)
!15007 = !DILocation(line: 2871, column: 2, scope: !14993)
!15008 = !DILocation(line: 2872, column: 35, scope: !15009)
!15009 = distinct !DILexicalBlock(scope: !14989, file: !3, line: 2871, column: 9)
!15010 = !DILocation(line: 2872, column: 50, scope: !15009)
!15011 = !DILocation(line: 2872, column: 3, scope: !15009)
!15012 = !DILocation(line: 2874, column: 1, scope: !14926)
!15013 = distinct !DISubprogram(name: "retrieve_bss", scope: !3, file: !3, line: 2939, type: !12214, scopeLine: 2940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!15014 = !DILocalVariable(name: "priv", arg: 1, scope: !15013, file: !3, line: 2939, type: !8587)
!15015 = !DILocation(line: 2939, column: 47, scope: !15013)
!15016 = !DILocalVariable(name: "i", scope: !15013, file: !3, line: 2941, type: !7)
!15017 = !DILocation(line: 2941, column: 6, scope: !15013)
!15018 = !DILocalVariable(name: "max_rssi", scope: !15013, file: !3, line: 2942, type: !7)
!15019 = !DILocation(line: 2942, column: 6, scope: !15013)
!15020 = !DILocalVariable(name: "max_index", scope: !15013, file: !3, line: 2943, type: !7)
!15021 = !DILocation(line: 2943, column: 6, scope: !15013)
!15022 = !DILocation(line: 2945, column: 6, scope: !15023)
!15023 = distinct !DILexicalBlock(scope: !15013, file: !3, line: 2945, column: 6)
!15024 = !DILocation(line: 2945, column: 12, scope: !15023)
!15025 = !DILocation(line: 2945, column: 29, scope: !15023)
!15026 = !DILocation(line: 2945, column: 6, scope: !15013)
!15027 = !DILocation(line: 2946, column: 3, scope: !15023)
!15028 = !DILocation(line: 2948, column: 6, scope: !15029)
!15029 = distinct !DILexicalBlock(scope: !15013, file: !3, line: 2948, column: 6)
!15030 = !DILocation(line: 2948, column: 12, scope: !15029)
!15031 = !DILocation(line: 2948, column: 6, scope: !15013)
!15032 = !DILocation(line: 2953, column: 3, scope: !15033)
!15033 = distinct !DILexicalBlock(scope: !15029, file: !3, line: 2948, column: 32)
!15034 = !DILocation(line: 2953, column: 9, scope: !15033)
!15035 = !DILocation(line: 2953, column: 21, scope: !15033)
!15036 = !DILocation(line: 2954, column: 10, scope: !15037)
!15037 = distinct !DILexicalBlock(scope: !15033, file: !3, line: 2954, column: 3)
!15038 = !DILocation(line: 2954, column: 8, scope: !15037)
!15039 = !DILocation(line: 2954, column: 15, scope: !15040)
!15040 = distinct !DILexicalBlock(scope: !15037, file: !3, line: 2954, column: 3)
!15041 = !DILocation(line: 2954, column: 19, scope: !15040)
!15042 = !DILocation(line: 2954, column: 25, scope: !15040)
!15043 = !DILocation(line: 2954, column: 17, scope: !15040)
!15044 = !DILocation(line: 2954, column: 3, scope: !15037)
!15045 = !DILocation(line: 2955, column: 8, scope: !15046)
!15046 = distinct !DILexicalBlock(scope: !15047, file: !3, line: 2955, column: 8)
!15047 = distinct !DILexicalBlock(scope: !15040, file: !3, line: 2954, column: 48)
!15048 = !DILocation(line: 2955, column: 14, scope: !15046)
!15049 = !DILocation(line: 2955, column: 32, scope: !15046)
!15050 = !DILocation(line: 2955, column: 38, scope: !15046)
!15051 = !DILocation(line: 2955, column: 46, scope: !15046)
!15052 = !DILocation(line: 2955, column: 49, scope: !15046)
!15053 = !DILocation(line: 2955, column: 29, scope: !15046)
!15054 = !DILocation(line: 2955, column: 57, scope: !15046)
!15055 = !DILocation(line: 2956, column: 11, scope: !15046)
!15056 = !DILocation(line: 2956, column: 17, scope: !15046)
!15057 = !DILocation(line: 2956, column: 27, scope: !15046)
!15058 = !DILocation(line: 2956, column: 31, scope: !15046)
!15059 = !DILocation(line: 2956, column: 37, scope: !15046)
!15060 = !DILocation(line: 2956, column: 45, scope: !15046)
!15061 = !DILocation(line: 2956, column: 48, scope: !15046)
!15062 = !DILocation(line: 2956, column: 58, scope: !15046)
!15063 = !DILocation(line: 2957, column: 10, scope: !15046)
!15064 = !DILocation(line: 2957, column: 16, scope: !15046)
!15065 = !DILocation(line: 2957, column: 26, scope: !15046)
!15066 = !DILocation(line: 2957, column: 29, scope: !15046)
!15067 = !DILocation(line: 2957, column: 35, scope: !15046)
!15068 = !DILocation(line: 2957, column: 43, scope: !15046)
!15069 = !DILocation(line: 2957, column: 46, scope: !15046)
!15070 = !DILocation(line: 2957, column: 57, scope: !15046)
!15071 = !DILocation(line: 2958, column: 10, scope: !15046)
!15072 = !DILocation(line: 2958, column: 16, scope: !15046)
!15073 = !DILocation(line: 2958, column: 24, scope: !15046)
!15074 = !DILocation(line: 2958, column: 27, scope: !15046)
!15075 = !DILocation(line: 2958, column: 35, scope: !15046)
!15076 = !DILocation(line: 2955, column: 8, scope: !15047)
!15077 = !DILocation(line: 2959, column: 16, scope: !15078)
!15078 = distinct !DILexicalBlock(scope: !15046, file: !3, line: 2958, column: 44)
!15079 = !DILocation(line: 2959, column: 22, scope: !15078)
!15080 = !DILocation(line: 2959, column: 30, scope: !15078)
!15081 = !DILocation(line: 2959, column: 33, scope: !15078)
!15082 = !DILocation(line: 2959, column: 14, scope: !15078)
!15083 = !DILocation(line: 2960, column: 37, scope: !15078)
!15084 = !DILocation(line: 2960, column: 35, scope: !15078)
!15085 = !DILocation(line: 2960, column: 5, scope: !15078)
!15086 = !DILocation(line: 2960, column: 11, scope: !15078)
!15087 = !DILocation(line: 2960, column: 23, scope: !15078)
!15088 = !DILocation(line: 2961, column: 4, scope: !15078)
!15089 = !DILocation(line: 2962, column: 3, scope: !15047)
!15090 = !DILocation(line: 2954, column: 44, scope: !15040)
!15091 = !DILocation(line: 2954, column: 3, scope: !15040)
!15092 = distinct !{!15092, !15044, !15093}
!15093 = !DILocation(line: 2962, column: 3, scope: !15037)
!15094 = !DILocation(line: 2963, column: 10, scope: !15033)
!15095 = !DILocation(line: 2963, column: 3, scope: !15033)
!15096 = !DILocation(line: 2966, column: 9, scope: !15097)
!15097 = distinct !DILexicalBlock(scope: !15013, file: !3, line: 2966, column: 2)
!15098 = !DILocation(line: 2966, column: 7, scope: !15097)
!15099 = !DILocation(line: 2966, column: 14, scope: !15100)
!15100 = distinct !DILexicalBlock(scope: !15097, file: !3, line: 2966, column: 2)
!15101 = !DILocation(line: 2966, column: 18, scope: !15100)
!15102 = !DILocation(line: 2966, column: 24, scope: !15100)
!15103 = !DILocation(line: 2966, column: 16, scope: !15100)
!15104 = !DILocation(line: 2966, column: 2, scope: !15097)
!15105 = !DILocation(line: 2967, column: 7, scope: !15106)
!15106 = distinct !DILexicalBlock(scope: !15107, file: !3, line: 2967, column: 7)
!15107 = distinct !DILexicalBlock(scope: !15100, file: !3, line: 2966, column: 47)
!15108 = !DILocation(line: 2967, column: 13, scope: !15106)
!15109 = !DILocation(line: 2967, column: 26, scope: !15106)
!15110 = !DILocation(line: 2967, column: 32, scope: !15106)
!15111 = !DILocation(line: 2967, column: 40, scope: !15106)
!15112 = !DILocation(line: 2967, column: 43, scope: !15106)
!15113 = !DILocation(line: 2967, column: 23, scope: !15106)
!15114 = !DILocation(line: 2967, column: 52, scope: !15106)
!15115 = !DILocation(line: 2968, column: 14, scope: !15106)
!15116 = !DILocation(line: 2968, column: 20, scope: !15106)
!15117 = !DILocation(line: 2968, column: 26, scope: !15106)
!15118 = !DILocation(line: 2968, column: 32, scope: !15106)
!15119 = !DILocation(line: 2968, column: 40, scope: !15106)
!15120 = !DILocation(line: 2968, column: 43, scope: !15106)
!15121 = !DILocation(line: 2968, column: 49, scope: !15106)
!15122 = !DILocation(line: 2968, column: 55, scope: !15106)
!15123 = !DILocation(line: 2968, column: 7, scope: !15106)
!15124 = !DILocation(line: 2968, column: 66, scope: !15106)
!15125 = !DILocation(line: 2968, column: 71, scope: !15106)
!15126 = !DILocation(line: 2969, column: 7, scope: !15106)
!15127 = !DILocation(line: 2969, column: 13, scope: !15106)
!15128 = !DILocation(line: 2969, column: 31, scope: !15106)
!15129 = !DILocation(line: 2969, column: 37, scope: !15106)
!15130 = !DILocation(line: 2969, column: 45, scope: !15106)
!15131 = !DILocation(line: 2969, column: 48, scope: !15106)
!15132 = !DILocation(line: 2969, column: 28, scope: !15106)
!15133 = !DILocation(line: 2969, column: 56, scope: !15106)
!15134 = !DILocation(line: 2970, column: 30, scope: !15106)
!15135 = !DILocation(line: 2970, column: 36, scope: !15106)
!15136 = !DILocation(line: 2970, column: 42, scope: !15106)
!15137 = !DILocation(line: 2970, column: 50, scope: !15106)
!15138 = !DILocation(line: 2970, column: 53, scope: !15106)
!15139 = !DILocation(line: 2970, column: 7, scope: !15106)
!15140 = !DILocation(line: 2970, column: 62, scope: !15106)
!15141 = !DILocation(line: 2967, column: 7, scope: !15107)
!15142 = !DILocation(line: 2971, column: 8, scope: !15143)
!15143 = distinct !DILexicalBlock(scope: !15144, file: !3, line: 2971, column: 8)
!15144 = distinct !DILexicalBlock(scope: !15106, file: !3, line: 2970, column: 68)
!15145 = !DILocation(line: 2971, column: 14, scope: !15143)
!15146 = !DILocation(line: 2971, column: 22, scope: !15143)
!15147 = !DILocation(line: 2971, column: 25, scope: !15143)
!15148 = !DILocation(line: 2971, column: 33, scope: !15143)
!15149 = !DILocation(line: 2971, column: 30, scope: !15143)
!15150 = !DILocation(line: 2971, column: 8, scope: !15144)
!15151 = !DILocation(line: 2972, column: 16, scope: !15152)
!15152 = distinct !DILexicalBlock(scope: !15143, file: !3, line: 2971, column: 43)
!15153 = !DILocation(line: 2972, column: 22, scope: !15152)
!15154 = !DILocation(line: 2972, column: 30, scope: !15152)
!15155 = !DILocation(line: 2972, column: 33, scope: !15152)
!15156 = !DILocation(line: 2972, column: 14, scope: !15152)
!15157 = !DILocation(line: 2973, column: 17, scope: !15152)
!15158 = !DILocation(line: 2973, column: 15, scope: !15152)
!15159 = !DILocation(line: 2974, column: 4, scope: !15152)
!15160 = !DILocation(line: 2975, column: 3, scope: !15144)
!15161 = !DILocation(line: 2976, column: 2, scope: !15107)
!15162 = !DILocation(line: 2966, column: 43, scope: !15100)
!15163 = !DILocation(line: 2966, column: 2, scope: !15100)
!15164 = distinct !{!15164, !15104, !15165}
!15165 = !DILocation(line: 2976, column: 2, scope: !15097)
!15166 = !DILocation(line: 2977, column: 9, scope: !15013)
!15167 = !DILocation(line: 2977, column: 2, scope: !15013)
!15168 = !DILocation(line: 2978, column: 1, scope: !15013)
!15169 = distinct !DISubprogram(name: "atmel_join_bss", scope: !3, file: !3, line: 3199, type: !9569, scopeLine: 3200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!15170 = !DILocalVariable(name: "priv", arg: 1, scope: !15169, file: !3, line: 3199, type: !8587)
!15171 = !DILocation(line: 3199, column: 50, scope: !15169)
!15172 = !DILocalVariable(name: "bss_index", arg: 2, scope: !15169, file: !3, line: 3199, type: !7)
!15173 = !DILocation(line: 3199, column: 60, scope: !15169)
!15174 = !DILocalVariable(name: "bss", scope: !15169, file: !3, line: 3201, type: !15175)
!15175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8276, size: 64)
!15176 = !DILocation(line: 3201, column: 19, scope: !15169)
!15177 = !DILocation(line: 3201, column: 27, scope: !15169)
!15178 = !DILocation(line: 3201, column: 33, scope: !15169)
!15179 = !DILocation(line: 3201, column: 41, scope: !15169)
!15180 = !DILocation(line: 3203, column: 9, scope: !15169)
!15181 = !DILocation(line: 3203, column: 15, scope: !15169)
!15182 = !DILocation(line: 3203, column: 2, scope: !15169)
!15183 = !DILocation(line: 3203, column: 29, scope: !15169)
!15184 = !DILocation(line: 3203, column: 34, scope: !15169)
!15185 = !DILocation(line: 3204, column: 9, scope: !15169)
!15186 = !DILocation(line: 3204, column: 15, scope: !15169)
!15187 = !DILocation(line: 3204, column: 2, scope: !15169)
!15188 = !DILocation(line: 3204, column: 21, scope: !15169)
!15189 = !DILocation(line: 3204, column: 26, scope: !15169)
!15190 = !DILocation(line: 3204, column: 50, scope: !15169)
!15191 = !DILocation(line: 3204, column: 55, scope: !15169)
!15192 = !DILocation(line: 3204, column: 32, scope: !15169)
!15193 = !DILocation(line: 3204, column: 38, scope: !15169)
!15194 = !DILocation(line: 3204, column: 48, scope: !15169)
!15195 = !DILocation(line: 3207, column: 6, scope: !15196)
!15196 = distinct !DILexicalBlock(scope: !15169, file: !3, line: 3207, column: 6)
!15197 = !DILocation(line: 3207, column: 12, scope: !15196)
!15198 = !DILocation(line: 3207, column: 6, scope: !15169)
!15199 = !DILocation(line: 3208, column: 17, scope: !15196)
!15200 = !DILocation(line: 3208, column: 3, scope: !15196)
!15201 = !DILocation(line: 3212, column: 6, scope: !15202)
!15202 = distinct !DILexicalBlock(scope: !15169, file: !3, line: 3212, column: 6)
!15203 = !DILocation(line: 3212, column: 11, scope: !15202)
!15204 = !DILocation(line: 3212, column: 19, scope: !15202)
!15205 = !DILocation(line: 3212, column: 36, scope: !15202)
!15206 = !DILocation(line: 3213, column: 6, scope: !15202)
!15207 = !DILocation(line: 3213, column: 12, scope: !15202)
!15208 = !DILocation(line: 3213, column: 27, scope: !15202)
!15209 = !DILocation(line: 3213, column: 44, scope: !15202)
!15210 = !DILocation(line: 3214, column: 6, scope: !15202)
!15211 = !DILocation(line: 3214, column: 12, scope: !15202)
!15212 = !DILocation(line: 3212, column: 6, scope: !15169)
!15213 = !DILocation(line: 3215, column: 3, scope: !15214)
!15214 = distinct !DILexicalBlock(scope: !15202, file: !3, line: 3214, column: 24)
!15215 = !DILocation(line: 3215, column: 9, scope: !15214)
!15216 = !DILocation(line: 3215, column: 20, scope: !15214)
!15217 = !DILocation(line: 3216, column: 3, scope: !15214)
!15218 = !DILocation(line: 3216, column: 9, scope: !15214)
!15219 = !DILocation(line: 3216, column: 25, scope: !15214)
!15220 = !DILocation(line: 3217, column: 18, scope: !15214)
!15221 = !DILocation(line: 3217, column: 3, scope: !15214)
!15222 = !DILocation(line: 3219, column: 19, scope: !15214)
!15223 = !DILocation(line: 3219, column: 3, scope: !15214)
!15224 = !DILocation(line: 3221, column: 2, scope: !15214)
!15225 = !DILocation(line: 3223, column: 25, scope: !15169)
!15226 = !DILocation(line: 3223, column: 30, scope: !15169)
!15227 = !DILocation(line: 3223, column: 2, scope: !15169)
!15228 = !DILocation(line: 3223, column: 8, scope: !15169)
!15229 = !DILocation(line: 3223, column: 23, scope: !15169)
!15230 = !DILocation(line: 3224, column: 18, scope: !15169)
!15231 = !DILocation(line: 3224, column: 23, scope: !15169)
!15232 = !DILocation(line: 3224, column: 31, scope: !15169)
!15233 = !DILocation(line: 3224, column: 2, scope: !15169)
!15234 = !DILocation(line: 3224, column: 8, scope: !15169)
!15235 = !DILocation(line: 3224, column: 16, scope: !15169)
!15236 = !DILocation(line: 3225, column: 24, scope: !15169)
!15237 = !DILocation(line: 3225, column: 29, scope: !15169)
!15238 = !DILocation(line: 3225, column: 2, scope: !15169)
!15239 = !DILocation(line: 3225, column: 8, scope: !15169)
!15240 = !DILocation(line: 3225, column: 22, scope: !15169)
!15241 = !DILocation(line: 3227, column: 6, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !15169, file: !3, line: 3227, column: 6)
!15243 = !DILocation(line: 3227, column: 12, scope: !15242)
!15244 = !DILocation(line: 3227, column: 24, scope: !15242)
!15245 = !DILocation(line: 3227, column: 29, scope: !15242)
!15246 = !DILocation(line: 3227, column: 21, scope: !15242)
!15247 = !DILocation(line: 3227, column: 6, scope: !15169)
!15248 = !DILocation(line: 3228, column: 20, scope: !15249)
!15249 = distinct !DILexicalBlock(scope: !15242, file: !3, line: 3227, column: 39)
!15250 = !DILocation(line: 3228, column: 25, scope: !15249)
!15251 = !DILocation(line: 3228, column: 3, scope: !15249)
!15252 = !DILocation(line: 3228, column: 9, scope: !15249)
!15253 = !DILocation(line: 3228, column: 18, scope: !15249)
!15254 = !DILocation(line: 3229, column: 18, scope: !15249)
!15255 = !DILocation(line: 3230, column: 36, scope: !15249)
!15256 = !DILocation(line: 3230, column: 41, scope: !15249)
!15257 = !DILocation(line: 3229, column: 3, scope: !15249)
!15258 = !DILocation(line: 3231, column: 2, scope: !15249)
!15259 = !DILocation(line: 3233, column: 7, scope: !15260)
!15260 = distinct !DILexicalBlock(scope: !15169, file: !3, line: 3233, column: 6)
!15261 = !DILocation(line: 3233, column: 13, scope: !15260)
!15262 = !DILocation(line: 3233, column: 23, scope: !15260)
!15263 = !DILocation(line: 3233, column: 26, scope: !15260)
!15264 = !DILocation(line: 3233, column: 31, scope: !15260)
!15265 = !DILocation(line: 3233, column: 6, scope: !15169)
!15266 = !DILocation(line: 3234, column: 21, scope: !15267)
!15267 = distinct !DILexicalBlock(scope: !15260, file: !3, line: 3233, column: 41)
!15268 = !DILocation(line: 3234, column: 3, scope: !15267)
!15269 = !DILocation(line: 3235, column: 3, scope: !15267)
!15270 = !DILocation(line: 3235, column: 9, scope: !15267)
!15271 = !DILocation(line: 3235, column: 31, scope: !15267)
!15272 = !DILocation(line: 3236, column: 3, scope: !15267)
!15273 = !DILocation(line: 3239, column: 6, scope: !15274)
!15274 = distinct !DILexicalBlock(scope: !15169, file: !3, line: 3239, column: 6)
!15275 = !DILocation(line: 3239, column: 12, scope: !15274)
!15276 = !DILocation(line: 3239, column: 22, scope: !15274)
!15277 = !DILocation(line: 3239, column: 26, scope: !15274)
!15278 = !DILocation(line: 3239, column: 31, scope: !15274)
!15279 = !DILocation(line: 3239, column: 6, scope: !15169)
!15280 = !DILocation(line: 3240, column: 21, scope: !15281)
!15281 = distinct !DILexicalBlock(scope: !15274, file: !3, line: 3239, column: 41)
!15282 = !DILocation(line: 3240, column: 3, scope: !15281)
!15283 = !DILocation(line: 3241, column: 3, scope: !15281)
!15284 = !DILocation(line: 3241, column: 9, scope: !15281)
!15285 = !DILocation(line: 3241, column: 31, scope: !15281)
!15286 = !DILocation(line: 3242, column: 3, scope: !15281)
!15287 = !DILocation(line: 3245, column: 20, scope: !15169)
!15288 = !DILocation(line: 3245, column: 2, scope: !15169)
!15289 = !DILocation(line: 3247, column: 6, scope: !15290)
!15290 = distinct !DILexicalBlock(scope: !15169, file: !3, line: 3247, column: 6)
!15291 = !DILocation(line: 3247, column: 12, scope: !15290)
!15292 = !DILocation(line: 3247, column: 27, scope: !15290)
!15293 = !DILocation(line: 3247, column: 6, scope: !15169)
!15294 = !DILocation(line: 3248, column: 8, scope: !15290)
!15295 = !DILocation(line: 3248, column: 3, scope: !15290)
!15296 = !DILocation(line: 3250, column: 8, scope: !15290)
!15297 = !DILocation(line: 3250, column: 3, scope: !15290)
!15298 = !DILocation(line: 3251, column: 1, scope: !15169)
!15299 = distinct !DISubprogram(name: "atmel_transmit_management_frame", scope: !3, file: !3, line: 875, type: !15300, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!15300 = !DISubroutineType(types: !15301)
!15301 = !{null, !8587, !8588, !1115, !7}
!15302 = !DILocalVariable(name: "priv", arg: 1, scope: !15299, file: !3, line: 875, type: !8587)
!15303 = !DILocation(line: 875, column: 67, scope: !15299)
!15304 = !DILocalVariable(name: "header", arg: 2, scope: !15299, file: !3, line: 876, type: !8588)
!15305 = !DILocation(line: 876, column: 32, scope: !15299)
!15306 = !DILocalVariable(name: "body", arg: 3, scope: !15299, file: !3, line: 877, type: !1115)
!15307 = !DILocation(line: 877, column: 14, scope: !15299)
!15308 = !DILocalVariable(name: "body_len", arg: 4, scope: !15299, file: !3, line: 877, type: !7)
!15309 = !DILocation(line: 877, column: 24, scope: !15299)
!15310 = !DILocalVariable(name: "buff", scope: !15299, file: !3, line: 879, type: !916)
!15311 = !DILocation(line: 879, column: 6, scope: !15299)
!15312 = !DILocalVariable(name: "len", scope: !15299, file: !3, line: 880, type: !7)
!15313 = !DILocation(line: 880, column: 6, scope: !15299)
!15314 = !DILocation(line: 880, column: 37, scope: !15299)
!15315 = !DILocation(line: 880, column: 35, scope: !15299)
!15316 = !DILocation(line: 882, column: 28, scope: !15317)
!15317 = distinct !DILexicalBlock(scope: !15299, file: !3, line: 882, column: 6)
!15318 = !DILocation(line: 882, column: 34, scope: !15317)
!15319 = !DILocation(line: 882, column: 15, scope: !15317)
!15320 = !DILocation(line: 882, column: 13, scope: !15317)
!15321 = !DILocation(line: 882, column: 6, scope: !15299)
!15322 = !DILocation(line: 883, column: 3, scope: !15317)
!15323 = !DILocation(line: 885, column: 21, scope: !15299)
!15324 = !DILocation(line: 885, column: 27, scope: !15299)
!15325 = !DILocation(line: 885, column: 32, scope: !15299)
!15326 = !DILocation(line: 885, column: 44, scope: !15299)
!15327 = !DILocation(line: 885, column: 38, scope: !15299)
!15328 = !DILocation(line: 885, column: 2, scope: !15299)
!15329 = !DILocation(line: 886, column: 21, scope: !15299)
!15330 = !DILocation(line: 886, column: 27, scope: !15299)
!15331 = !DILocation(line: 886, column: 32, scope: !15299)
!15332 = !DILocation(line: 886, column: 37, scope: !15299)
!15333 = !DILocation(line: 886, column: 63, scope: !15299)
!15334 = !DILocation(line: 886, column: 69, scope: !15299)
!15335 = !DILocation(line: 886, column: 2, scope: !15299)
!15336 = !DILocation(line: 887, column: 24, scope: !15299)
!15337 = !DILocation(line: 887, column: 2, scope: !15299)
!15338 = !DILocation(line: 887, column: 8, scope: !15299)
!15339 = !DILocation(line: 887, column: 21, scope: !15299)
!15340 = !DILocation(line: 888, column: 23, scope: !15299)
!15341 = !DILocation(line: 888, column: 29, scope: !15299)
!15342 = !DILocation(line: 888, column: 37, scope: !15299)
!15343 = !DILocation(line: 888, column: 46, scope: !15299)
!15344 = !DILocation(line: 888, column: 54, scope: !15299)
!15345 = !DILocation(line: 888, column: 59, scope: !15299)
!15346 = !DILocation(line: 888, column: 2, scope: !15299)
!15347 = !DILocation(line: 889, column: 1, scope: !15299)
!15348 = distinct !DISubprogram(name: "atmel_set_mib16", scope: !3, file: !3, line: 4093, type: !15349, scopeLine: 4095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!15349 = !DISubroutineType(types: !15350)
!15350 = !{null, !8587, !1116, !1116, !916}
!15351 = !DILocalVariable(name: "priv", arg: 1, scope: !15348, file: !3, line: 4093, type: !8587)
!15352 = !DILocation(line: 4093, column: 51, scope: !15348)
!15353 = !DILocalVariable(name: "type", arg: 2, scope: !15348, file: !3, line: 4093, type: !1116)
!15354 = !DILocation(line: 4093, column: 60, scope: !15348)
!15355 = !DILocalVariable(name: "index", arg: 3, scope: !15348, file: !3, line: 4093, type: !1116)
!15356 = !DILocation(line: 4093, column: 69, scope: !15348)
!15357 = !DILocalVariable(name: "data", arg: 4, scope: !15348, file: !3, line: 4094, type: !916)
!15358 = !DILocation(line: 4094, column: 12, scope: !15348)
!15359 = !DILocalVariable(name: "m", scope: !15348, file: !3, line: 4096, type: !9465)
!15360 = !DILocation(line: 4096, column: 21, scope: !15348)
!15361 = !DILocation(line: 4097, column: 11, scope: !15348)
!15362 = !DILocation(line: 4097, column: 4, scope: !15348)
!15363 = !DILocation(line: 4097, column: 9, scope: !15348)
!15364 = !DILocation(line: 4098, column: 4, scope: !15348)
!15365 = !DILocation(line: 4098, column: 9, scope: !15348)
!15366 = !DILocation(line: 4099, column: 12, scope: !15348)
!15367 = !DILocation(line: 4099, column: 4, scope: !15348)
!15368 = !DILocation(line: 4099, column: 10, scope: !15348)
!15369 = !DILocation(line: 4100, column: 14, scope: !15348)
!15370 = !DILocation(line: 4100, column: 4, scope: !15348)
!15371 = !DILocation(line: 4100, column: 2, scope: !15348)
!15372 = !DILocation(line: 4100, column: 12, scope: !15348)
!15373 = !DILocation(line: 4101, column: 14, scope: !15348)
!15374 = !DILocation(line: 4101, column: 19, scope: !15348)
!15375 = !DILocation(line: 4101, column: 4, scope: !15348)
!15376 = !DILocation(line: 4101, column: 2, scope: !15348)
!15377 = !DILocation(line: 4101, column: 12, scope: !15348)
!15378 = !DILocation(line: 4103, column: 26, scope: !15348)
!15379 = !DILocation(line: 4103, column: 50, scope: !15348)
!15380 = !DILocation(line: 4103, column: 2, scope: !15348)
!15381 = !DILocation(line: 4104, column: 1, scope: !15348)
!15382 = distinct !DISubprogram(name: "atmel_send_command_wait", scope: !3, file: !3, line: 4045, type: !15383, scopeLine: 4047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!15383 = !DISubroutineType(types: !15384)
!15384 = !{!7, !8587, !7, !622, !7}
!15385 = !DILocalVariable(name: "priv", arg: 1, scope: !15382, file: !3, line: 4045, type: !8587)
!15386 = !DILocation(line: 4045, column: 58, scope: !15382)
!15387 = !DILocalVariable(name: "command", arg: 2, scope: !15382, file: !3, line: 4045, type: !7)
!15388 = !DILocation(line: 4045, column: 68, scope: !15382)
!15389 = !DILocalVariable(name: "cmd", arg: 3, scope: !15382, file: !3, line: 4046, type: !622)
!15390 = !DILocation(line: 4046, column: 14, scope: !15382)
!15391 = !DILocalVariable(name: "cmd_size", arg: 4, scope: !15382, file: !3, line: 4046, type: !7)
!15392 = !DILocation(line: 4046, column: 23, scope: !15382)
!15393 = !DILocalVariable(name: "i", scope: !15382, file: !3, line: 4048, type: !7)
!15394 = !DILocation(line: 4048, column: 6, scope: !15382)
!15395 = !DILocalVariable(name: "status", scope: !15382, file: !3, line: 4048, type: !7)
!15396 = !DILocation(line: 4048, column: 9, scope: !15382)
!15397 = !DILocation(line: 4050, column: 21, scope: !15382)
!15398 = !DILocation(line: 4050, column: 27, scope: !15382)
!15399 = !DILocation(line: 4050, column: 36, scope: !15382)
!15400 = !DILocation(line: 4050, column: 41, scope: !15382)
!15401 = !DILocation(line: 4050, column: 2, scope: !15382)
!15402 = !DILocation(line: 4052, column: 9, scope: !15403)
!15403 = distinct !DILexicalBlock(scope: !15382, file: !3, line: 4052, column: 2)
!15404 = !DILocation(line: 4052, column: 7, scope: !15403)
!15405 = !DILocation(line: 4052, column: 17, scope: !15406)
!15406 = distinct !DILexicalBlock(scope: !15403, file: !3, line: 4052, column: 2)
!15407 = !DILocation(line: 4052, column: 2, scope: !15403)
!15408 = !DILocation(line: 4053, column: 24, scope: !15409)
!15409 = distinct !DILexicalBlock(scope: !15406, file: !3, line: 4052, column: 25)
!15410 = !DILocation(line: 4053, column: 39, scope: !15409)
!15411 = !DILocation(line: 4053, column: 30, scope: !15409)
!15412 = !DILocation(line: 4053, column: 12, scope: !15409)
!15413 = !DILocation(line: 4053, column: 10, scope: !15409)
!15414 = !DILocation(line: 4054, column: 7, scope: !15415)
!15415 = distinct !DILexicalBlock(scope: !15409, file: !3, line: 4054, column: 7)
!15416 = !DILocation(line: 4054, column: 14, scope: !15415)
!15417 = !DILocation(line: 4054, column: 33, scope: !15415)
!15418 = !DILocation(line: 4055, column: 7, scope: !15415)
!15419 = !DILocation(line: 4055, column: 14, scope: !15415)
!15420 = !DILocation(line: 4054, column: 7, scope: !15409)
!15421 = !DILocation(line: 4056, column: 4, scope: !15415)
!15422 = !DILocation(line: 4057, column: 3, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15424, file: !3, line: 4057, column: 3)
!15424 = distinct !DILexicalBlock(scope: !15425, file: !3, line: 4057, column: 3)
!15425 = distinct !DILexicalBlock(scope: !15426, file: !3, line: 4057, column: 3)
!15426 = distinct !DILexicalBlock(scope: !15409, file: !3, line: 4057, column: 3)
!15427 = !DILocation(line: 4058, column: 2, scope: !15409)
!15428 = !DILocation(line: 4052, column: 21, scope: !15406)
!15429 = !DILocation(line: 4052, column: 2, scope: !15406)
!15430 = distinct !{!15430, !15407, !15431}
!15431 = !DILocation(line: 4058, column: 2, scope: !15403)
!15432 = !DILocation(line: 4060, column: 6, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15382, file: !3, line: 4060, column: 6)
!15434 = !DILocation(line: 4060, column: 8, scope: !15433)
!15435 = !DILocation(line: 4060, column: 6, scope: !15382)
!15436 = !DILocation(line: 4061, column: 53, scope: !15437)
!15437 = distinct !DILexicalBlock(scope: !15433, file: !3, line: 4060, column: 14)
!15438 = !DILocation(line: 4061, column: 59, scope: !15437)
!15439 = !DILocation(line: 4061, column: 64, scope: !15437)
!15440 = !DILocation(line: 4061, column: 3, scope: !15437)
!15441 = !DILocation(line: 4062, column: 10, scope: !15437)
!15442 = !DILocation(line: 4063, column: 2, scope: !15437)
!15443 = !DILocation(line: 4064, column: 7, scope: !15444)
!15444 = distinct !DILexicalBlock(scope: !15445, file: !3, line: 4064, column: 7)
!15445 = distinct !DILexicalBlock(scope: !15433, file: !3, line: 4063, column: 9)
!15446 = !DILocation(line: 4064, column: 15, scope: !15444)
!15447 = !DILocation(line: 4064, column: 7, scope: !15445)
!15448 = !DILocation(line: 4065, column: 11, scope: !15444)
!15449 = !DILocation(line: 4065, column: 4, scope: !15444)
!15450 = !DILocation(line: 4068, column: 9, scope: !15382)
!15451 = !DILocation(line: 4068, column: 2, scope: !15382)
!15452 = distinct !DISubprogram(name: "atmel_send_command", scope: !3, file: !3, line: 4034, type: !15453, scopeLine: 4036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!15453 = !DISubroutineType(types: !15454)
!15454 = !{null, !8587, !7, !622, !7}
!15455 = !DILocalVariable(name: "priv", arg: 1, scope: !15452, file: !3, line: 4034, type: !8587)
!15456 = !DILocation(line: 4034, column: 54, scope: !15452)
!15457 = !DILocalVariable(name: "command", arg: 2, scope: !15452, file: !3, line: 4034, type: !7)
!15458 = !DILocation(line: 4034, column: 64, scope: !15452)
!15459 = !DILocalVariable(name: "cmd", arg: 3, scope: !15452, file: !3, line: 4035, type: !622)
!15460 = !DILocation(line: 4035, column: 17, scope: !15452)
!15461 = !DILocalVariable(name: "cmd_size", arg: 4, scope: !15452, file: !3, line: 4035, type: !7)
!15462 = !DILocation(line: 4035, column: 26, scope: !15452)
!15463 = !DILocation(line: 4037, column: 6, scope: !15464)
!15464 = distinct !DILexicalBlock(scope: !15452, file: !3, line: 4037, column: 6)
!15465 = !DILocation(line: 4037, column: 6, scope: !15452)
!15466 = !DILocation(line: 4038, column: 22, scope: !15464)
!15467 = !DILocation(line: 4038, column: 28, scope: !15464)
!15468 = !DILocation(line: 4038, column: 42, scope: !15464)
!15469 = !DILocation(line: 4038, column: 33, scope: !15464)
!15470 = !DILocation(line: 4039, column: 8, scope: !15464)
!15471 = !DILocation(line: 4039, column: 13, scope: !15464)
!15472 = !DILocation(line: 4038, column: 3, scope: !15464)
!15473 = !DILocation(line: 4041, column: 14, scope: !15452)
!15474 = !DILocation(line: 4041, column: 29, scope: !15452)
!15475 = !DILocation(line: 4041, column: 20, scope: !15452)
!15476 = !DILocation(line: 4041, column: 62, scope: !15452)
!15477 = !DILocation(line: 4041, column: 2, scope: !15452)
!15478 = !DILocation(line: 4042, column: 14, scope: !15452)
!15479 = !DILocation(line: 4042, column: 29, scope: !15452)
!15480 = !DILocation(line: 4042, column: 20, scope: !15452)
!15481 = !DILocation(line: 4042, column: 2, scope: !15452)
!15482 = !DILocation(line: 4043, column: 1, scope: !15452)
!15483 = distinct !DISubprogram(name: "atmel_co", scope: !3, file: !3, line: 621, type: !11589, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!15484 = !DILocalVariable(name: "priv", arg: 1, scope: !15483, file: !3, line: 621, type: !8587)
!15485 = !DILocation(line: 621, column: 50, scope: !15483)
!15486 = !DILocalVariable(name: "offset", arg: 2, scope: !15483, file: !3, line: 621, type: !916)
!15487 = !DILocation(line: 621, column: 60, scope: !15483)
!15488 = !DILocation(line: 623, column: 9, scope: !15483)
!15489 = !DILocation(line: 623, column: 15, scope: !15483)
!15490 = !DILocation(line: 623, column: 25, scope: !15483)
!15491 = !DILocation(line: 623, column: 39, scope: !15483)
!15492 = !DILocation(line: 623, column: 37, scope: !15483)
!15493 = !DILocation(line: 623, column: 2, scope: !15483)
!15494 = distinct !DISubprogram(name: "atmel_set_mib", scope: !3, file: !3, line: 4106, type: !12935, scopeLine: 4108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!15495 = !DILocalVariable(name: "priv", arg: 1, scope: !15494, file: !3, line: 4106, type: !8587)
!15496 = !DILocation(line: 4106, column: 49, scope: !15494)
!15497 = !DILocalVariable(name: "type", arg: 2, scope: !15494, file: !3, line: 4106, type: !1116)
!15498 = !DILocation(line: 4106, column: 58, scope: !15494)
!15499 = !DILocalVariable(name: "index", arg: 3, scope: !15494, file: !3, line: 4106, type: !1116)
!15500 = !DILocation(line: 4106, column: 67, scope: !15494)
!15501 = !DILocalVariable(name: "data", arg: 4, scope: !15494, file: !3, line: 4107, type: !1115)
!15502 = !DILocation(line: 4107, column: 10, scope: !15494)
!15503 = !DILocalVariable(name: "data_len", arg: 5, scope: !15494, file: !3, line: 4107, type: !7)
!15504 = !DILocation(line: 4107, column: 20, scope: !15494)
!15505 = !DILocalVariable(name: "m", scope: !15494, file: !3, line: 4109, type: !9465)
!15506 = !DILocation(line: 4109, column: 21, scope: !15494)
!15507 = !DILocation(line: 4110, column: 11, scope: !15494)
!15508 = !DILocation(line: 4110, column: 4, scope: !15494)
!15509 = !DILocation(line: 4110, column: 9, scope: !15494)
!15510 = !DILocation(line: 4111, column: 11, scope: !15494)
!15511 = !DILocation(line: 4111, column: 4, scope: !15494)
!15512 = !DILocation(line: 4111, column: 9, scope: !15494)
!15513 = !DILocation(line: 4112, column: 12, scope: !15494)
!15514 = !DILocation(line: 4112, column: 4, scope: !15494)
!15515 = !DILocation(line: 4112, column: 10, scope: !15494)
!15516 = !DILocation(line: 4114, column: 6, scope: !15517)
!15517 = distinct !DILexicalBlock(scope: !15494, file: !3, line: 4114, column: 6)
!15518 = !DILocation(line: 4114, column: 15, scope: !15517)
!15519 = !DILocation(line: 4114, column: 6, scope: !15494)
!15520 = !DILocation(line: 4115, column: 52, scope: !15517)
!15521 = !DILocation(line: 4115, column: 58, scope: !15517)
!15522 = !DILocation(line: 4115, column: 63, scope: !15517)
!15523 = !DILocation(line: 4115, column: 3, scope: !15517)
!15524 = !DILocation(line: 4117, column: 11, scope: !15494)
!15525 = !DILocation(line: 4117, column: 2, scope: !15494)
!15526 = !DILocation(line: 4117, column: 17, scope: !15494)
!15527 = !DILocation(line: 4117, column: 23, scope: !15494)
!15528 = !DILocation(line: 4118, column: 26, scope: !15494)
!15529 = !DILocation(line: 4118, column: 50, scope: !15494)
!15530 = !DILocation(line: 4118, column: 72, scope: !15494)
!15531 = !DILocation(line: 4118, column: 70, scope: !15494)
!15532 = !DILocation(line: 4118, column: 2, scope: !15494)
!15533 = !DILocation(line: 4119, column: 1, scope: !15494)
!15534 = distinct !DISubprogram(name: "netif_wake_queue", scope: !6, file: !6, line: 3309, type: !747, scopeLine: 3310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!15535 = !DILocalVariable(name: "dev", arg: 1, scope: !15534, file: !6, line: 3309, type: !495)
!15536 = !DILocation(line: 3309, column: 56, scope: !15534)
!15537 = !DILocation(line: 3311, column: 42, scope: !15534)
!15538 = !DILocation(line: 3311, column: 22, scope: !15534)
!15539 = !DILocation(line: 3311, column: 2, scope: !15534)
!15540 = !DILocation(line: 3312, column: 1, scope: !15534)
!15541 = distinct !DISubprogram(name: "start", scope: !3, file: !3, line: 2792, type: !9569, scopeLine: 2793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!15542 = !DILocalVariable(name: "priv", arg: 1, scope: !15541, file: !3, line: 2792, type: !8587)
!15543 = !DILocation(line: 2792, column: 41, scope: !15541)
!15544 = !DILocalVariable(name: "type", arg: 2, scope: !15541, file: !3, line: 2792, type: !7)
!15545 = !DILocation(line: 2792, column: 51, scope: !15541)
!15546 = !DILocalVariable(name: "cmd", scope: !15541, file: !3, line: 2801, type: !15547)
!15547 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15541, file: !3, line: 2794, size: 352, elements: !15548)
!15548 = !{!15549, !15550, !15551, !15552, !15553, !15554}
!15549 = !DIDerivedType(tag: DW_TAG_member, name: "BSSID", scope: !15547, file: !3, line: 2795, baseType: !6709, size: 48)
!15550 = !DIDerivedType(tag: DW_TAG_member, name: "SSID", scope: !15547, file: !3, line: 2796, baseType: !7027, size: 256, offset: 48)
!15551 = !DIDerivedType(tag: DW_TAG_member, name: "BSS_type", scope: !15547, file: !3, line: 2797, baseType: !1116, size: 8, offset: 304)
!15552 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !15547, file: !3, line: 2798, baseType: !1116, size: 8, offset: 312)
!15553 = !DIDerivedType(tag: DW_TAG_member, name: "SSID_size", scope: !15547, file: !3, line: 2799, baseType: !1116, size: 8, offset: 320)
!15554 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !15547, file: !3, line: 2800, baseType: !7145, size: 24, offset: 328)
!15555 = !DILocation(line: 2801, column: 4, scope: !15541)
!15556 = !DILocation(line: 2803, column: 18, scope: !15541)
!15557 = !DILocation(line: 2803, column: 24, scope: !15541)
!15558 = !DILocation(line: 2803, column: 6, scope: !15541)
!15559 = !DILocation(line: 2803, column: 16, scope: !15541)
!15560 = !DILocation(line: 2804, column: 13, scope: !15541)
!15561 = !DILocation(line: 2804, column: 2, scope: !15541)
!15562 = !DILocation(line: 2804, column: 19, scope: !15541)
!15563 = !DILocation(line: 2804, column: 25, scope: !15541)
!15564 = !DILocation(line: 2804, column: 31, scope: !15541)
!15565 = !DILocation(line: 2804, column: 37, scope: !15541)
!15566 = !DILocation(line: 2805, column: 13, scope: !15541)
!15567 = !DILocation(line: 2805, column: 2, scope: !15541)
!15568 = !DILocation(line: 2805, column: 20, scope: !15541)
!15569 = !DILocation(line: 2805, column: 26, scope: !15541)
!15570 = !DILocation(line: 2806, column: 17, scope: !15541)
!15571 = !DILocation(line: 2806, column: 6, scope: !15541)
!15572 = !DILocation(line: 2806, column: 15, scope: !15541)
!15573 = !DILocation(line: 2807, column: 17, scope: !15541)
!15574 = !DILocation(line: 2807, column: 23, scope: !15541)
!15575 = !DILocation(line: 2807, column: 31, scope: !15541)
!15576 = !DILocation(line: 2807, column: 16, scope: !15541)
!15577 = !DILocation(line: 2807, column: 6, scope: !15541)
!15578 = !DILocation(line: 2807, column: 14, scope: !15541)
!15579 = !DILocation(line: 2809, column: 21, scope: !15541)
!15580 = !DILocation(line: 2809, column: 38, scope: !15541)
!15581 = !DILocation(line: 2809, column: 2, scope: !15541)
!15582 = !DILocation(line: 2810, column: 1, scope: !15541)
!15583 = distinct !DISubprogram(name: "atmel_get_wireless_stats", scope: !3, file: !3, line: 1262, type: !692, scopeLine: 1263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!15584 = !DILocalVariable(name: "dev", arg: 1, scope: !15583, file: !3, line: 1262, type: !495)
!15585 = !DILocation(line: 1262, column: 74, scope: !15583)
!15586 = !DILocalVariable(name: "priv", scope: !15583, file: !3, line: 1264, type: !8587)
!15587 = !DILocation(line: 1264, column: 24, scope: !15583)
!15588 = !DILocation(line: 1264, column: 43, scope: !15583)
!15589 = !DILocation(line: 1264, column: 31, scope: !15583)
!15590 = !DILocation(line: 1268, column: 20, scope: !15583)
!15591 = !DILocation(line: 1268, column: 2, scope: !15583)
!15592 = !DILocation(line: 1270, column: 24, scope: !15583)
!15593 = !DILocation(line: 1270, column: 30, scope: !15583)
!15594 = !DILocation(line: 1270, column: 2, scope: !15583)
!15595 = !DILocation(line: 1270, column: 8, scope: !15583)
!15596 = !DILocation(line: 1270, column: 15, scope: !15583)
!15597 = !DILocation(line: 1270, column: 22, scope: !15583)
!15598 = !DILocation(line: 1272, column: 6, scope: !15599)
!15599 = distinct !DILexicalBlock(scope: !15583, file: !3, line: 1272, column: 6)
!15600 = !DILocation(line: 1272, column: 12, scope: !15599)
!15601 = !DILocation(line: 1272, column: 27, scope: !15599)
!15602 = !DILocation(line: 1272, column: 6, scope: !15583)
!15603 = !DILocation(line: 1273, column: 7, scope: !15604)
!15604 = distinct !DILexicalBlock(scope: !15605, file: !3, line: 1273, column: 7)
!15605 = distinct !DILexicalBlock(scope: !15599, file: !3, line: 1272, column: 45)
!15606 = !DILocation(line: 1273, column: 13, scope: !15604)
!15607 = !DILocation(line: 1273, column: 27, scope: !15604)
!15608 = !DILocation(line: 1273, column: 7, scope: !15605)
!15609 = !DILocation(line: 1274, column: 4, scope: !15610)
!15610 = distinct !DILexicalBlock(scope: !15604, file: !3, line: 1273, column: 51)
!15611 = !DILocation(line: 1274, column: 10, scope: !15610)
!15612 = !DILocation(line: 1274, column: 17, scope: !15610)
!15613 = !DILocation(line: 1274, column: 22, scope: !15610)
!15614 = !DILocation(line: 1274, column: 27, scope: !15610)
!15615 = !DILocation(line: 1275, column: 4, scope: !15610)
!15616 = !DILocation(line: 1275, column: 10, scope: !15610)
!15617 = !DILocation(line: 1275, column: 17, scope: !15610)
!15618 = !DILocation(line: 1275, column: 22, scope: !15610)
!15619 = !DILocation(line: 1275, column: 28, scope: !15610)
!15620 = !DILocation(line: 1276, column: 4, scope: !15610)
!15621 = !DILocation(line: 1276, column: 10, scope: !15610)
!15622 = !DILocation(line: 1276, column: 17, scope: !15610)
!15623 = !DILocation(line: 1276, column: 22, scope: !15610)
!15624 = !DILocation(line: 1276, column: 30, scope: !15610)
!15625 = !DILocation(line: 1278, column: 3, scope: !15610)
!15626 = !DILocation(line: 1279, column: 3, scope: !15605)
!15627 = !DILocation(line: 1279, column: 9, scope: !15605)
!15628 = !DILocation(line: 1279, column: 16, scope: !15605)
!15629 = !DILocation(line: 1279, column: 21, scope: !15605)
!15630 = !DILocation(line: 1279, column: 27, scope: !15605)
!15631 = !DILocation(line: 1280, column: 3, scope: !15605)
!15632 = !DILocation(line: 1280, column: 9, scope: !15605)
!15633 = !DILocation(line: 1280, column: 16, scope: !15605)
!15634 = !DILocation(line: 1280, column: 21, scope: !15605)
!15635 = !DILocation(line: 1280, column: 29, scope: !15605)
!15636 = !DILocation(line: 1281, column: 2, scope: !15605)
!15637 = !DILocation(line: 1284, column: 3, scope: !15638)
!15638 = distinct !DILexicalBlock(scope: !15599, file: !3, line: 1281, column: 9)
!15639 = !DILocation(line: 1284, column: 9, scope: !15638)
!15640 = !DILocation(line: 1284, column: 16, scope: !15638)
!15641 = !DILocation(line: 1284, column: 21, scope: !15638)
!15642 = !DILocation(line: 1284, column: 26, scope: !15638)
!15643 = !DILocation(line: 1285, column: 3, scope: !15638)
!15644 = !DILocation(line: 1285, column: 9, scope: !15638)
!15645 = !DILocation(line: 1285, column: 16, scope: !15638)
!15646 = !DILocation(line: 1285, column: 21, scope: !15638)
!15647 = !DILocation(line: 1285, column: 27, scope: !15638)
!15648 = !DILocation(line: 1286, column: 3, scope: !15638)
!15649 = !DILocation(line: 1286, column: 9, scope: !15638)
!15650 = !DILocation(line: 1286, column: 16, scope: !15638)
!15651 = !DILocation(line: 1286, column: 21, scope: !15638)
!15652 = !DILocation(line: 1286, column: 27, scope: !15638)
!15653 = !DILocation(line: 1287, column: 3, scope: !15638)
!15654 = !DILocation(line: 1287, column: 9, scope: !15638)
!15655 = !DILocation(line: 1287, column: 16, scope: !15638)
!15656 = !DILocation(line: 1287, column: 21, scope: !15638)
!15657 = !DILocation(line: 1287, column: 29, scope: !15638)
!15658 = !DILocation(line: 1290, column: 3, scope: !15638)
!15659 = !DILocation(line: 1290, column: 9, scope: !15638)
!15660 = !DILocation(line: 1290, column: 16, scope: !15638)
!15661 = !DILocation(line: 1290, column: 21, scope: !15638)
!15662 = !DILocation(line: 1290, column: 28, scope: !15638)
!15663 = !DILocation(line: 1293, column: 10, scope: !15583)
!15664 = !DILocation(line: 1293, column: 16, scope: !15583)
!15665 = !DILocation(line: 1293, column: 2, scope: !15583)
!15666 = distinct !DISubprogram(name: "atmel_config_commit", scope: !3, file: !3, line: 2509, type: !15667, scopeLine: 2513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!15667 = !DISubroutineType(types: !15668)
!15668 = !{!7, !495, !606, !622, !676}
!15669 = !DILocalVariable(name: "dev", arg: 1, scope: !15666, file: !3, line: 2509, type: !495)
!15670 = !DILocation(line: 2509, column: 51, scope: !15666)
!15671 = !DILocalVariable(name: "info", arg: 2, scope: !15666, file: !3, line: 2510, type: !606)
!15672 = !DILocation(line: 2510, column: 35, scope: !15666)
!15673 = !DILocalVariable(name: "zwrq", arg: 3, scope: !15666, file: !3, line: 2511, type: !622)
!15674 = !DILocation(line: 2511, column: 17, scope: !15666)
!15675 = !DILocalVariable(name: "extra", arg: 4, scope: !15666, file: !3, line: 2512, type: !676)
!15676 = !DILocation(line: 2512, column: 17, scope: !15666)
!15677 = !DILocation(line: 2514, column: 20, scope: !15666)
!15678 = !DILocation(line: 2514, column: 9, scope: !15666)
!15679 = !DILocation(line: 2514, column: 2, scope: !15666)
!15680 = distinct !DISubprogram(name: "atmel_get_name", scope: !3, file: !3, line: 2005, type: !15681, scopeLine: 2009, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!15681 = !DISubroutineType(types: !15682)
!15682 = !{!7, !495, !606, !676, !676}
!15683 = !DILocalVariable(name: "dev", arg: 1, scope: !15680, file: !3, line: 2005, type: !495)
!15684 = !DILocation(line: 2005, column: 46, scope: !15680)
!15685 = !DILocalVariable(name: "info", arg: 2, scope: !15680, file: !3, line: 2006, type: !606)
!15686 = !DILocation(line: 2006, column: 30, scope: !15680)
!15687 = !DILocalVariable(name: "cwrq", arg: 3, scope: !15680, file: !3, line: 2007, type: !676)
!15688 = !DILocation(line: 2007, column: 12, scope: !15680)
!15689 = !DILocalVariable(name: "extra", arg: 4, scope: !15680, file: !3, line: 2008, type: !676)
!15690 = !DILocation(line: 2008, column: 12, scope: !15680)
!15691 = !DILocation(line: 2010, column: 9, scope: !15680)
!15692 = !DILocation(line: 2010, column: 2, scope: !15680)
!15693 = !DILocation(line: 2011, column: 2, scope: !15680)
!15694 = distinct !DISubprogram(name: "atmel_set_freq", scope: !3, file: !3, line: 2242, type: !15695, scopeLine: 2246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!15695 = !DISubroutineType(types: !15696)
!15696 = !{!7, !495, !606, !15697, !676}
!15697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!15698 = !DILocalVariable(name: "dev", arg: 1, scope: !15694, file: !3, line: 2242, type: !495)
!15699 = !DILocation(line: 2242, column: 46, scope: !15694)
!15700 = !DILocalVariable(name: "info", arg: 2, scope: !15694, file: !3, line: 2243, type: !606)
!15701 = !DILocation(line: 2243, column: 30, scope: !15694)
!15702 = !DILocalVariable(name: "fwrq", arg: 3, scope: !15694, file: !3, line: 2244, type: !15697)
!15703 = !DILocation(line: 2244, column: 22, scope: !15694)
!15704 = !DILocalVariable(name: "extra", arg: 4, scope: !15694, file: !3, line: 2245, type: !676)
!15705 = !DILocation(line: 2245, column: 12, scope: !15694)
!15706 = !DILocalVariable(name: "priv", scope: !15694, file: !3, line: 2247, type: !8587)
!15707 = !DILocation(line: 2247, column: 24, scope: !15694)
!15708 = !DILocation(line: 2247, column: 43, scope: !15694)
!15709 = !DILocation(line: 2247, column: 31, scope: !15694)
!15710 = !DILocalVariable(name: "rc", scope: !15694, file: !3, line: 2248, type: !7)
!15711 = !DILocation(line: 2248, column: 6, scope: !15694)
!15712 = !DILocation(line: 2251, column: 6, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !15694, file: !3, line: 2251, column: 6)
!15714 = !DILocation(line: 2251, column: 12, scope: !15713)
!15715 = !DILocation(line: 2251, column: 14, scope: !15713)
!15716 = !DILocation(line: 2251, column: 6, scope: !15694)
!15717 = !DILocalVariable(name: "f", scope: !15718, file: !3, line: 2252, type: !7)
!15718 = distinct !DILexicalBlock(scope: !15713, file: !3, line: 2251, column: 20)
!15719 = !DILocation(line: 2252, column: 7, scope: !15718)
!15720 = !DILocation(line: 2252, column: 11, scope: !15718)
!15721 = !DILocation(line: 2252, column: 17, scope: !15718)
!15722 = !DILocation(line: 2252, column: 19, scope: !15718)
!15723 = !DILocation(line: 2255, column: 3, scope: !15718)
!15724 = !DILocation(line: 2255, column: 9, scope: !15718)
!15725 = !DILocation(line: 2255, column: 11, scope: !15718)
!15726 = !DILocation(line: 2256, column: 44, scope: !15718)
!15727 = !DILocation(line: 2256, column: 13, scope: !15718)
!15728 = !DILocation(line: 2256, column: 3, scope: !15718)
!15729 = !DILocation(line: 2256, column: 9, scope: !15718)
!15730 = !DILocation(line: 2256, column: 11, scope: !15718)
!15731 = !DILocation(line: 2257, column: 2, scope: !15718)
!15732 = !DILocation(line: 2259, column: 6, scope: !15733)
!15733 = distinct !DILexicalBlock(scope: !15694, file: !3, line: 2259, column: 6)
!15734 = !DILocation(line: 2259, column: 12, scope: !15733)
!15735 = !DILocation(line: 2259, column: 14, scope: !15733)
!15736 = !DILocation(line: 2259, column: 18, scope: !15733)
!15737 = !DILocation(line: 2259, column: 21, scope: !15733)
!15738 = !DILocation(line: 2259, column: 27, scope: !15733)
!15739 = !DILocation(line: 2259, column: 29, scope: !15733)
!15740 = !DILocation(line: 2259, column: 36, scope: !15733)
!15741 = !DILocation(line: 2259, column: 39, scope: !15733)
!15742 = !DILocation(line: 2259, column: 45, scope: !15733)
!15743 = !DILocation(line: 2259, column: 47, scope: !15733)
!15744 = !DILocation(line: 2259, column: 6, scope: !15694)
!15745 = !DILocation(line: 2260, column: 6, scope: !15733)
!15746 = !DILocation(line: 2260, column: 3, scope: !15733)
!15747 = !DILocalVariable(name: "channel", scope: !15748, file: !3, line: 2262, type: !7)
!15748 = distinct !DILexicalBlock(scope: !15733, file: !3, line: 2261, column: 7)
!15749 = !DILocation(line: 2262, column: 7, scope: !15748)
!15750 = !DILocation(line: 2262, column: 17, scope: !15748)
!15751 = !DILocation(line: 2262, column: 23, scope: !15748)
!15752 = !DILocation(line: 2263, column: 30, scope: !15753)
!15753 = distinct !DILexicalBlock(scope: !15748, file: !3, line: 2263, column: 7)
!15754 = !DILocation(line: 2263, column: 36, scope: !15753)
!15755 = !DILocation(line: 2263, column: 7, scope: !15753)
!15756 = !DILocation(line: 2263, column: 45, scope: !15753)
!15757 = !DILocation(line: 2263, column: 7, scope: !15748)
!15758 = !DILocation(line: 2264, column: 20, scope: !15759)
!15759 = distinct !DILexicalBlock(scope: !15753, file: !3, line: 2263, column: 51)
!15760 = !DILocation(line: 2264, column: 4, scope: !15759)
!15761 = !DILocation(line: 2264, column: 10, scope: !15759)
!15762 = !DILocation(line: 2264, column: 18, scope: !15759)
!15763 = !DILocation(line: 2265, column: 3, scope: !15759)
!15764 = !DILocation(line: 2266, column: 7, scope: !15765)
!15765 = distinct !DILexicalBlock(scope: !15753, file: !3, line: 2265, column: 10)
!15766 = !DILocation(line: 2269, column: 9, scope: !15694)
!15767 = !DILocation(line: 2269, column: 2, scope: !15694)
!15768 = distinct !DISubprogram(name: "atmel_get_freq", scope: !3, file: !3, line: 2272, type: !15695, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!15769 = !DILocalVariable(name: "dev", arg: 1, scope: !15768, file: !3, line: 2272, type: !495)
!15770 = !DILocation(line: 2272, column: 46, scope: !15768)
!15771 = !DILocalVariable(name: "info", arg: 2, scope: !15768, file: !3, line: 2273, type: !606)
!15772 = !DILocation(line: 2273, column: 30, scope: !15768)
!15773 = !DILocalVariable(name: "fwrq", arg: 3, scope: !15768, file: !3, line: 2274, type: !15697)
!15774 = !DILocation(line: 2274, column: 22, scope: !15768)
!15775 = !DILocalVariable(name: "extra", arg: 4, scope: !15768, file: !3, line: 2275, type: !676)
!15776 = !DILocation(line: 2275, column: 12, scope: !15768)
!15777 = !DILocalVariable(name: "priv", scope: !15768, file: !3, line: 2277, type: !8587)
!15778 = !DILocation(line: 2277, column: 24, scope: !15768)
!15779 = !DILocation(line: 2277, column: 43, scope: !15768)
!15780 = !DILocation(line: 2277, column: 31, scope: !15768)
!15781 = !DILocation(line: 2279, column: 12, scope: !15768)
!15782 = !DILocation(line: 2279, column: 18, scope: !15768)
!15783 = !DILocation(line: 2279, column: 2, scope: !15768)
!15784 = !DILocation(line: 2279, column: 8, scope: !15768)
!15785 = !DILocation(line: 2279, column: 10, scope: !15768)
!15786 = !DILocation(line: 2280, column: 2, scope: !15768)
!15787 = !DILocation(line: 2280, column: 8, scope: !15768)
!15788 = !DILocation(line: 2280, column: 10, scope: !15768)
!15789 = !DILocation(line: 2281, column: 2, scope: !15768)
!15790 = distinct !DISubprogram(name: "atmel_set_mode", scope: !3, file: !3, line: 2055, type: !15791, scopeLine: 2059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!15791 = !DISubroutineType(types: !15792)
!15792 = !{!7, !495, !606, !15793, !676}
!15793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!15794 = !DILocalVariable(name: "dev", arg: 1, scope: !15790, file: !3, line: 2055, type: !495)
!15795 = !DILocation(line: 2055, column: 46, scope: !15790)
!15796 = !DILocalVariable(name: "info", arg: 2, scope: !15790, file: !3, line: 2056, type: !606)
!15797 = !DILocation(line: 2056, column: 30, scope: !15790)
!15798 = !DILocalVariable(name: "uwrq", arg: 3, scope: !15790, file: !3, line: 2057, type: !15793)
!15799 = !DILocation(line: 2057, column: 13, scope: !15790)
!15800 = !DILocalVariable(name: "extra", arg: 4, scope: !15790, file: !3, line: 2058, type: !676)
!15801 = !DILocation(line: 2058, column: 12, scope: !15790)
!15802 = !DILocalVariable(name: "priv", scope: !15790, file: !3, line: 2060, type: !8587)
!15803 = !DILocation(line: 2060, column: 24, scope: !15790)
!15804 = !DILocation(line: 2060, column: 43, scope: !15790)
!15805 = !DILocation(line: 2060, column: 31, scope: !15790)
!15806 = !DILocation(line: 2062, column: 7, scope: !15807)
!15807 = distinct !DILexicalBlock(scope: !15790, file: !3, line: 2062, column: 6)
!15808 = !DILocation(line: 2062, column: 6, scope: !15807)
!15809 = !DILocation(line: 2062, column: 12, scope: !15807)
!15810 = !DILocation(line: 2062, column: 29, scope: !15807)
!15811 = !DILocation(line: 2062, column: 33, scope: !15807)
!15812 = !DILocation(line: 2062, column: 32, scope: !15807)
!15813 = !DILocation(line: 2062, column: 38, scope: !15807)
!15814 = !DILocation(line: 2062, column: 6, scope: !15790)
!15815 = !DILocation(line: 2063, column: 3, scope: !15807)
!15816 = !DILocation(line: 2065, column: 26, scope: !15790)
!15817 = !DILocation(line: 2065, column: 25, scope: !15790)
!15818 = !DILocation(line: 2065, column: 2, scope: !15790)
!15819 = !DILocation(line: 2065, column: 8, scope: !15790)
!15820 = !DILocation(line: 2065, column: 23, scope: !15790)
!15821 = !DILocation(line: 2066, column: 2, scope: !15790)
!15822 = !DILocation(line: 2067, column: 1, scope: !15790)
!15823 = distinct !DISubprogram(name: "atmel_get_mode", scope: !3, file: !3, line: 2069, type: !15791, scopeLine: 2073, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!15824 = !DILocalVariable(name: "dev", arg: 1, scope: !15823, file: !3, line: 2069, type: !495)
!15825 = !DILocation(line: 2069, column: 46, scope: !15823)
!15826 = !DILocalVariable(name: "info", arg: 2, scope: !15823, file: !3, line: 2070, type: !606)
!15827 = !DILocation(line: 2070, column: 30, scope: !15823)
!15828 = !DILocalVariable(name: "uwrq", arg: 3, scope: !15823, file: !3, line: 2071, type: !15793)
!15829 = !DILocation(line: 2071, column: 13, scope: !15823)
!15830 = !DILocalVariable(name: "extra", arg: 4, scope: !15823, file: !3, line: 2072, type: !676)
!15831 = !DILocation(line: 2072, column: 12, scope: !15823)
!15832 = !DILocalVariable(name: "priv", scope: !15823, file: !3, line: 2074, type: !8587)
!15833 = !DILocation(line: 2074, column: 24, scope: !15823)
!15834 = !DILocation(line: 2074, column: 43, scope: !15823)
!15835 = !DILocation(line: 2074, column: 31, scope: !15823)
!15836 = !DILocation(line: 2076, column: 10, scope: !15823)
!15837 = !DILocation(line: 2076, column: 16, scope: !15823)
!15838 = !DILocation(line: 2076, column: 3, scope: !15823)
!15839 = !DILocation(line: 2076, column: 8, scope: !15823)
!15840 = !DILocation(line: 2077, column: 2, scope: !15823)
!15841 = distinct !DISubprogram(name: "atmel_get_range", scope: !3, file: !3, line: 2393, type: !15842, scopeLine: 2397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!15842 = !DISubroutineType(types: !15843)
!15843 = !{!7, !495, !606, !15844, !676}
!15844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!15845 = !DILocalVariable(name: "dev", arg: 1, scope: !15841, file: !3, line: 2393, type: !495)
!15846 = !DILocation(line: 2393, column: 47, scope: !15841)
!15847 = !DILocalVariable(name: "info", arg: 2, scope: !15841, file: !3, line: 2394, type: !606)
!15848 = !DILocation(line: 2394, column: 31, scope: !15841)
!15849 = !DILocalVariable(name: "dwrq", arg: 3, scope: !15841, file: !3, line: 2395, type: !15844)
!15850 = !DILocation(line: 2395, column: 24, scope: !15841)
!15851 = !DILocalVariable(name: "extra", arg: 4, scope: !15841, file: !3, line: 2396, type: !676)
!15852 = !DILocation(line: 2396, column: 13, scope: !15841)
!15853 = !DILocalVariable(name: "priv", scope: !15841, file: !3, line: 2398, type: !8587)
!15854 = !DILocation(line: 2398, column: 24, scope: !15841)
!15855 = !DILocation(line: 2398, column: 43, scope: !15841)
!15856 = !DILocation(line: 2398, column: 31, scope: !15841)
!15857 = !DILocalVariable(name: "range", scope: !15841, file: !3, line: 2399, type: !8634)
!15858 = !DILocation(line: 2399, column: 19, scope: !15841)
!15859 = !DILocation(line: 2399, column: 47, scope: !15841)
!15860 = !DILocation(line: 2399, column: 27, scope: !15841)
!15861 = !DILocalVariable(name: "k", scope: !15841, file: !3, line: 2400, type: !7)
!15862 = !DILocation(line: 2400, column: 6, scope: !15841)
!15863 = !DILocalVariable(name: "i", scope: !15841, file: !3, line: 2400, type: !7)
!15864 = !DILocation(line: 2400, column: 9, scope: !15841)
!15865 = !DILocalVariable(name: "j", scope: !15841, file: !3, line: 2400, type: !7)
!15866 = !DILocation(line: 2400, column: 12, scope: !15841)
!15867 = !DILocation(line: 2402, column: 2, scope: !15841)
!15868 = !DILocation(line: 2402, column: 8, scope: !15841)
!15869 = !DILocation(line: 2402, column: 15, scope: !15841)
!15870 = !DILocation(line: 2403, column: 9, scope: !15841)
!15871 = !DILocation(line: 2403, column: 2, scope: !15841)
!15872 = !DILocation(line: 2404, column: 2, scope: !15841)
!15873 = !DILocation(line: 2404, column: 9, scope: !15841)
!15874 = !DILocation(line: 2404, column: 18, scope: !15841)
!15875 = !DILocation(line: 2405, column: 2, scope: !15841)
!15876 = !DILocation(line: 2405, column: 9, scope: !15841)
!15877 = !DILocation(line: 2405, column: 18, scope: !15841)
!15878 = !DILocation(line: 2406, column: 2, scope: !15841)
!15879 = !DILocation(line: 2406, column: 9, scope: !15841)
!15880 = !DILocation(line: 2406, column: 22, scope: !15841)
!15881 = !DILocation(line: 2407, column: 9, scope: !15882)
!15882 = distinct !DILexicalBlock(scope: !15841, file: !3, line: 2407, column: 2)
!15883 = !DILocation(line: 2407, column: 7, scope: !15882)
!15884 = !DILocation(line: 2407, column: 14, scope: !15885)
!15885 = distinct !DILexicalBlock(scope: !15882, file: !3, line: 2407, column: 2)
!15886 = !DILocation(line: 2407, column: 16, scope: !15885)
!15887 = !DILocation(line: 2407, column: 2, scope: !15882)
!15888 = !DILocation(line: 2408, column: 7, scope: !15889)
!15889 = distinct !DILexicalBlock(scope: !15885, file: !3, line: 2408, column: 7)
!15890 = !DILocation(line: 2408, column: 13, scope: !15889)
!15891 = !DILocation(line: 2408, column: 41, scope: !15889)
!15892 = !DILocation(line: 2408, column: 27, scope: !15889)
!15893 = !DILocation(line: 2408, column: 44, scope: !15889)
!15894 = !DILocation(line: 2408, column: 24, scope: !15889)
!15895 = !DILocation(line: 2408, column: 7, scope: !15885)
!15896 = !DILocation(line: 2409, column: 40, scope: !15897)
!15897 = distinct !DILexicalBlock(scope: !15889, file: !3, line: 2408, column: 56)
!15898 = !DILocation(line: 2409, column: 26, scope: !15897)
!15899 = !DILocation(line: 2409, column: 43, scope: !15897)
!15900 = !DILocation(line: 2409, column: 63, scope: !15897)
!15901 = !DILocation(line: 2409, column: 49, scope: !15897)
!15902 = !DILocation(line: 2409, column: 66, scope: !15897)
!15903 = !DILocation(line: 2409, column: 47, scope: !15897)
!15904 = !DILocation(line: 2409, column: 70, scope: !15897)
!15905 = !DILocation(line: 2409, column: 4, scope: !15897)
!15906 = !DILocation(line: 2409, column: 11, scope: !15897)
!15907 = !DILocation(line: 2409, column: 24, scope: !15897)
!15908 = !DILocation(line: 2410, column: 4, scope: !15897)
!15909 = !DILocation(line: 2407, column: 46, scope: !15885)
!15910 = !DILocation(line: 2407, column: 2, scope: !15885)
!15911 = distinct !{!15911, !15887, !15912}
!15912 = !DILocation(line: 2411, column: 3, scope: !15882)
!15913 = !DILocation(line: 2412, column: 6, scope: !15914)
!15914 = distinct !DILexicalBlock(scope: !15841, file: !3, line: 2412, column: 6)
!15915 = !DILocation(line: 2412, column: 13, scope: !15914)
!15916 = !DILocation(line: 2412, column: 26, scope: !15914)
!15917 = !DILocation(line: 2412, column: 6, scope: !15841)
!15918 = !DILocation(line: 2413, column: 10, scope: !15919)
!15919 = distinct !DILexicalBlock(scope: !15920, file: !3, line: 2413, column: 3)
!15920 = distinct !DILexicalBlock(scope: !15914, file: !3, line: 2412, column: 32)
!15921 = !DILocation(line: 2413, column: 33, scope: !15919)
!15922 = !DILocation(line: 2413, column: 19, scope: !15919)
!15923 = !DILocation(line: 2413, column: 36, scope: !15919)
!15924 = !DILocation(line: 2413, column: 17, scope: !15919)
!15925 = !DILocation(line: 2413, column: 8, scope: !15919)
!15926 = !DILocation(line: 2413, column: 41, scope: !15927)
!15927 = distinct !DILexicalBlock(scope: !15919, file: !3, line: 2413, column: 3)
!15928 = !DILocation(line: 2413, column: 60, scope: !15927)
!15929 = !DILocation(line: 2413, column: 46, scope: !15927)
!15930 = !DILocation(line: 2413, column: 63, scope: !15927)
!15931 = !DILocation(line: 2413, column: 43, scope: !15927)
!15932 = !DILocation(line: 2413, column: 3, scope: !15919)
!15933 = !DILocation(line: 2414, column: 23, scope: !15934)
!15934 = distinct !DILexicalBlock(scope: !15927, file: !3, line: 2413, column: 73)
!15935 = !DILocation(line: 2414, column: 4, scope: !15934)
!15936 = !DILocation(line: 2414, column: 11, scope: !15934)
!15937 = !DILocation(line: 2414, column: 16, scope: !15934)
!15938 = !DILocation(line: 2414, column: 19, scope: !15934)
!15939 = !DILocation(line: 2414, column: 21, scope: !15934)
!15940 = !DILocation(line: 2418, column: 36, scope: !15934)
!15941 = !DILocation(line: 2418, column: 5, scope: !15934)
!15942 = !DILocation(line: 2417, column: 30, scope: !15934)
!15943 = !DILocation(line: 2417, column: 4, scope: !15934)
!15944 = !DILocation(line: 2417, column: 11, scope: !15934)
!15945 = !DILocation(line: 2417, column: 16, scope: !15934)
!15946 = !DILocation(line: 2417, column: 19, scope: !15934)
!15947 = !DILocation(line: 2417, column: 21, scope: !15934)
!15948 = !DILocation(line: 2419, column: 4, scope: !15934)
!15949 = !DILocation(line: 2419, column: 11, scope: !15934)
!15950 = !DILocation(line: 2419, column: 17, scope: !15934)
!15951 = !DILocation(line: 2419, column: 21, scope: !15934)
!15952 = !DILocation(line: 2419, column: 23, scope: !15934)
!15953 = !DILocation(line: 2420, column: 3, scope: !15934)
!15954 = !DILocation(line: 2413, column: 69, scope: !15927)
!15955 = !DILocation(line: 2413, column: 3, scope: !15927)
!15956 = distinct !{!15956, !15932, !15957}
!15957 = !DILocation(line: 2420, column: 3, scope: !15919)
!15958 = !DILocation(line: 2421, column: 26, scope: !15920)
!15959 = !DILocation(line: 2421, column: 3, scope: !15920)
!15960 = !DILocation(line: 2421, column: 10, scope: !15920)
!15961 = !DILocation(line: 2421, column: 24, scope: !15920)
!15962 = !DILocation(line: 2422, column: 2, scope: !15920)
!15963 = !DILocation(line: 2424, column: 2, scope: !15841)
!15964 = !DILocation(line: 2424, column: 9, scope: !15841)
!15965 = !DILocation(line: 2424, column: 18, scope: !15841)
!15966 = !DILocation(line: 2424, column: 23, scope: !15841)
!15967 = !DILocation(line: 2425, column: 2, scope: !15841)
!15968 = !DILocation(line: 2425, column: 9, scope: !15841)
!15969 = !DILocation(line: 2425, column: 18, scope: !15841)
!15970 = !DILocation(line: 2425, column: 24, scope: !15841)
!15971 = !DILocation(line: 2426, column: 2, scope: !15841)
!15972 = !DILocation(line: 2426, column: 9, scope: !15841)
!15973 = !DILocation(line: 2426, column: 18, scope: !15841)
!15974 = !DILocation(line: 2426, column: 24, scope: !15841)
!15975 = !DILocation(line: 2427, column: 2, scope: !15841)
!15976 = !DILocation(line: 2427, column: 9, scope: !15841)
!15977 = !DILocation(line: 2427, column: 18, scope: !15841)
!15978 = !DILocation(line: 2427, column: 26, scope: !15841)
!15979 = !DILocation(line: 2429, column: 2, scope: !15841)
!15980 = !DILocation(line: 2429, column: 9, scope: !15841)
!15981 = !DILocation(line: 2429, column: 18, scope: !15841)
!15982 = !DILocation(line: 2429, column: 23, scope: !15841)
!15983 = !DILocation(line: 2430, column: 2, scope: !15841)
!15984 = !DILocation(line: 2430, column: 9, scope: !15841)
!15985 = !DILocation(line: 2430, column: 18, scope: !15841)
!15986 = !DILocation(line: 2430, column: 24, scope: !15841)
!15987 = !DILocation(line: 2431, column: 2, scope: !15841)
!15988 = !DILocation(line: 2431, column: 9, scope: !15841)
!15989 = !DILocation(line: 2431, column: 18, scope: !15841)
!15990 = !DILocation(line: 2431, column: 24, scope: !15841)
!15991 = !DILocation(line: 2432, column: 2, scope: !15841)
!15992 = !DILocation(line: 2432, column: 9, scope: !15841)
!15993 = !DILocation(line: 2432, column: 18, scope: !15841)
!15994 = !DILocation(line: 2432, column: 26, scope: !15841)
!15995 = !DILocation(line: 2434, column: 2, scope: !15841)
!15996 = !DILocation(line: 2434, column: 9, scope: !15841)
!15997 = !DILocation(line: 2434, column: 21, scope: !15841)
!15998 = !DILocation(line: 2436, column: 2, scope: !15841)
!15999 = !DILocation(line: 2436, column: 9, scope: !15841)
!16000 = !DILocation(line: 2436, column: 20, scope: !15841)
!16001 = !DILocation(line: 2437, column: 2, scope: !15841)
!16002 = !DILocation(line: 2437, column: 9, scope: !15841)
!16003 = !DILocation(line: 2437, column: 20, scope: !15841)
!16004 = !DILocation(line: 2438, column: 2, scope: !15841)
!16005 = !DILocation(line: 2438, column: 9, scope: !15841)
!16006 = !DILocation(line: 2438, column: 20, scope: !15841)
!16007 = !DILocation(line: 2439, column: 2, scope: !15841)
!16008 = !DILocation(line: 2439, column: 9, scope: !15841)
!16009 = !DILocation(line: 2439, column: 20, scope: !15841)
!16010 = !DILocation(line: 2440, column: 2, scope: !15841)
!16011 = !DILocation(line: 2440, column: 9, scope: !15841)
!16012 = !DILocation(line: 2440, column: 22, scope: !15841)
!16013 = !DILocation(line: 2442, column: 2, scope: !15841)
!16014 = !DILocation(line: 2442, column: 9, scope: !15841)
!16015 = !DILocation(line: 2442, column: 17, scope: !15841)
!16016 = !DILocation(line: 2443, column: 2, scope: !15841)
!16017 = !DILocation(line: 2443, column: 9, scope: !15841)
!16018 = !DILocation(line: 2443, column: 17, scope: !15841)
!16019 = !DILocation(line: 2444, column: 2, scope: !15841)
!16020 = !DILocation(line: 2444, column: 9, scope: !15841)
!16021 = !DILocation(line: 2444, column: 18, scope: !15841)
!16022 = !DILocation(line: 2445, column: 2, scope: !15841)
!16023 = !DILocation(line: 2445, column: 9, scope: !15841)
!16024 = !DILocation(line: 2445, column: 18, scope: !15841)
!16025 = !DILocation(line: 2447, column: 2, scope: !15841)
!16026 = !DILocation(line: 2447, column: 9, scope: !15841)
!16027 = !DILocation(line: 2447, column: 26, scope: !15841)
!16028 = !DILocation(line: 2448, column: 2, scope: !15841)
!16029 = !DILocation(line: 2448, column: 9, scope: !15841)
!16030 = !DILocation(line: 2448, column: 26, scope: !15841)
!16031 = !DILocation(line: 2449, column: 2, scope: !15841)
!16032 = !DILocation(line: 2449, column: 9, scope: !15841)
!16033 = !DILocation(line: 2449, column: 28, scope: !15841)
!16034 = !DILocation(line: 2450, column: 2, scope: !15841)
!16035 = !DILocation(line: 2450, column: 9, scope: !15841)
!16036 = !DILocation(line: 2450, column: 29, scope: !15841)
!16037 = !DILocation(line: 2452, column: 2, scope: !15841)
!16038 = !DILocation(line: 2452, column: 9, scope: !15841)
!16039 = !DILocation(line: 2452, column: 19, scope: !15841)
!16040 = !DILocation(line: 2453, column: 2, scope: !15841)
!16041 = !DILocation(line: 2453, column: 9, scope: !15841)
!16042 = !DILocation(line: 2453, column: 19, scope: !15841)
!16043 = !DILocation(line: 2454, column: 2, scope: !15841)
!16044 = !DILocation(line: 2454, column: 9, scope: !15841)
!16045 = !DILocation(line: 2454, column: 17, scope: !15841)
!16046 = !DILocation(line: 2456, column: 2, scope: !15841)
!16047 = !DILocation(line: 2456, column: 9, scope: !15841)
!16048 = !DILocation(line: 2456, column: 27, scope: !15841)
!16049 = !DILocation(line: 2457, column: 2, scope: !15841)
!16050 = !DILocation(line: 2457, column: 9, scope: !15841)
!16051 = !DILocation(line: 2457, column: 29, scope: !15841)
!16052 = !DILocation(line: 2458, column: 2, scope: !15841)
!16053 = !DILocation(line: 2458, column: 9, scope: !15841)
!16054 = !DILocation(line: 2458, column: 20, scope: !15841)
!16055 = !DILocation(line: 2459, column: 2, scope: !15841)
!16056 = !DILocation(line: 2459, column: 9, scope: !15841)
!16057 = !DILocation(line: 2459, column: 21, scope: !15841)
!16058 = !DILocation(line: 2460, column: 2, scope: !15841)
!16059 = !DILocation(line: 2460, column: 9, scope: !15841)
!16060 = !DILocation(line: 2460, column: 22, scope: !15841)
!16061 = !DILocation(line: 2461, column: 2, scope: !15841)
!16062 = !DILocation(line: 2461, column: 9, scope: !15841)
!16063 = !DILocation(line: 2461, column: 19, scope: !15841)
!16064 = !DILocation(line: 2462, column: 2, scope: !15841)
!16065 = !DILocation(line: 2462, column: 9, scope: !15841)
!16066 = !DILocation(line: 2462, column: 19, scope: !15841)
!16067 = !DILocation(line: 2464, column: 2, scope: !15841)
!16068 = !DILocation(line: 327, column: 67, scope: !9669, inlinedAt: !16069)
!16069 = distinct !DILocation(line: 2498, column: 5, scope: !16070)
!16070 = distinct !DILexicalBlock(scope: !16071, file: !3, line: 2498, column: 5)
!16071 = distinct !DILexicalBlock(scope: !16072, file: !3, line: 2498, column: 5)
!16072 = distinct !DILexicalBlock(scope: !16073, file: !3, line: 2498, column: 5)
!16073 = distinct !DILexicalBlock(scope: !16074, file: !3, line: 2498, column: 5)
!16074 = distinct !DILexicalBlock(scope: !16075, file: !3, line: 2498, column: 5)
!16075 = distinct !DILexicalBlock(scope: !16076, file: !3, line: 2496, column: 11)
!16076 = distinct !DILexicalBlock(scope: !16077, file: !3, line: 2494, column: 16)
!16077 = distinct !DILexicalBlock(scope: !16078, file: !3, line: 2492, column: 8)
!16078 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 2491, column: 62)
!16079 = distinct !DILexicalBlock(scope: !16080, file: !3, line: 2491, column: 7)
!16080 = distinct !DILexicalBlock(scope: !16081, file: !3, line: 2490, column: 47)
!16081 = distinct !DILexicalBlock(scope: !16082, file: !3, line: 2490, column: 2)
!16082 = distinct !DILexicalBlock(scope: !8850, file: !3, line: 2490, column: 2)
!16083 = !DILocation(line: 407, column: 64, scope: !9987, inlinedAt: !16084)
!16084 = distinct !DILocation(line: 2486, column: 3, scope: !16085)
!16085 = distinct !DILexicalBlock(scope: !16086, file: !3, line: 2482, column: 38)
!16086 = distinct !DILexicalBlock(scope: !8850, file: !3, line: 2481, column: 6)
!16087 = !DILocation(line: 407, column: 84, scope: !9987, inlinedAt: !16084)
!16088 = !DILocation(line: 407, column: 64, scope: !9987, inlinedAt: !16089)
!16089 = distinct !DILocation(line: 2500, column: 5, scope: !16075)
!16090 = !DILocation(line: 407, column: 84, scope: !9987, inlinedAt: !16089)
!16091 = !DILocation(line: 327, column: 67, scope: !9669, inlinedAt: !16092)
!16092 = distinct !DILocation(line: 2484, column: 3, scope: !16093)
!16093 = distinct !DILexicalBlock(scope: !16094, file: !3, line: 2484, column: 3)
!16094 = distinct !DILexicalBlock(scope: !16095, file: !3, line: 2484, column: 3)
!16095 = distinct !DILexicalBlock(scope: !16096, file: !3, line: 2484, column: 3)
!16096 = distinct !DILexicalBlock(scope: !16097, file: !3, line: 2484, column: 3)
!16097 = distinct !DILexicalBlock(scope: !16085, file: !3, line: 2484, column: 3)
!16098 = !DILocalVariable(name: "dev", arg: 1, scope: !8850, file: !3, line: 2467, type: !495)
!16099 = !DILocation(line: 2467, column: 45, scope: !8850)
!16100 = !DILocalVariable(name: "info", arg: 2, scope: !8850, file: !3, line: 2468, type: !606)
!16101 = !DILocation(line: 2468, column: 29, scope: !8850)
!16102 = !DILocalVariable(name: "awrq", arg: 3, scope: !8850, file: !3, line: 2469, type: !6862)
!16103 = !DILocation(line: 2469, column: 22, scope: !8850)
!16104 = !DILocalVariable(name: "extra", arg: 4, scope: !8850, file: !3, line: 2470, type: !676)
!16105 = !DILocation(line: 2470, column: 11, scope: !8850)
!16106 = !DILocalVariable(name: "priv", scope: !8850, file: !3, line: 2472, type: !8587)
!16107 = !DILocation(line: 2472, column: 24, scope: !8850)
!16108 = !DILocation(line: 2472, column: 43, scope: !8850)
!16109 = !DILocation(line: 2472, column: 31, scope: !8850)
!16110 = !DILocalVariable(name: "i", scope: !8850, file: !3, line: 2473, type: !7)
!16111 = !DILocation(line: 2473, column: 6, scope: !8850)
!16112 = !DILocalVariable(name: "flags", scope: !8850, file: !3, line: 2476, type: !517)
!16113 = !DILocation(line: 2476, column: 16, scope: !8850)
!16114 = !DILocation(line: 2478, column: 6, scope: !16115)
!16115 = distinct !DILexicalBlock(scope: !8850, file: !3, line: 2478, column: 6)
!16116 = !DILocation(line: 2478, column: 12, scope: !16115)
!16117 = !DILocation(line: 2478, column: 22, scope: !16115)
!16118 = !DILocation(line: 2478, column: 6, scope: !8850)
!16119 = !DILocation(line: 2479, column: 3, scope: !16115)
!16120 = !DILocation(line: 2481, column: 19, scope: !16086)
!16121 = !DILocation(line: 2481, column: 25, scope: !16086)
!16122 = !DILocation(line: 2481, column: 7, scope: !16086)
!16123 = !DILocation(line: 2481, column: 37, scope: !16086)
!16124 = !DILocation(line: 2482, column: 19, scope: !16086)
!16125 = !DILocation(line: 2482, column: 25, scope: !16086)
!16126 = !DILocation(line: 2482, column: 7, scope: !16086)
!16127 = !DILocation(line: 2481, column: 6, scope: !8850)
!16128 = !DILocation(line: 2483, column: 3, scope: !16085)
!16129 = !DILocation(line: 2484, column: 3, scope: !16085)
!16130 = !DILocation(line: 2484, column: 3, scope: !16097)
!16131 = !DILocalVariable(name: "__dummy", scope: !16132, file: !3, line: 2484, type: !517)
!16132 = distinct !DILexicalBlock(scope: !16096, file: !3, line: 2484, column: 3)
!16133 = !DILocation(line: 2484, column: 3, scope: !16132)
!16134 = !DILocalVariable(name: "__dummy2", scope: !16132, file: !3, line: 2484, type: !517)
!16135 = !DILocation(line: 2484, column: 3, scope: !16096)
!16136 = !DILocation(line: 2484, column: 3, scope: !16095)
!16137 = !DILocation(line: 2484, column: 3, scope: !16138)
!16138 = distinct !DILexicalBlock(scope: !16095, file: !3, line: 2484, column: 3)
!16139 = !DILocalVariable(name: "__dummy", scope: !16140, file: !3, line: 2484, type: !517)
!16140 = distinct !DILexicalBlock(scope: !16141, file: !3, line: 2484, column: 3)
!16141 = distinct !DILexicalBlock(scope: !16138, file: !3, line: 2484, column: 3)
!16142 = !DILocation(line: 2484, column: 3, scope: !16140)
!16143 = !DILocalVariable(name: "__dummy2", scope: !16140, file: !3, line: 2484, type: !517)
!16144 = !DILocation(line: 2484, column: 3, scope: !16141)
!16145 = !DILocation(line: 2484, column: 3, scope: !16094)
!16146 = !{i32 -2139082574}
!16147 = !DILocation(line: 2484, column: 3, scope: !16093)
!16148 = !DILocation(line: 329, column: 10, scope: !9669, inlinedAt: !16092)
!16149 = !DILocation(line: 329, column: 16, scope: !9669, inlinedAt: !16092)
!16150 = !DILocation(line: 2485, column: 14, scope: !16085)
!16151 = !DILocation(line: 2485, column: 3, scope: !16085)
!16152 = !DILocation(line: 2486, column: 27, scope: !16085)
!16153 = !DILocation(line: 2486, column: 33, scope: !16085)
!16154 = !DILocation(line: 2486, column: 42, scope: !16085)
!16155 = !DILocation(line: 409, column: 2, scope: !10158, inlinedAt: !16084)
!16156 = !DILocation(line: 409, column: 2, scope: !10163, inlinedAt: !16084)
!16157 = !DILocation(line: 409, column: 2, scope: !10164, inlinedAt: !16084)
!16158 = !DILocation(line: 409, column: 2, scope: !10171, inlinedAt: !16084)
!16159 = !DILocation(line: 409, column: 2, scope: !10174, inlinedAt: !16084)
!16160 = !DILocation(line: 2487, column: 3, scope: !16085)
!16161 = !DILocation(line: 2490, column: 9, scope: !16082)
!16162 = !DILocation(line: 2490, column: 7, scope: !16082)
!16163 = !DILocation(line: 2490, column: 14, scope: !16081)
!16164 = !DILocation(line: 2490, column: 18, scope: !16081)
!16165 = !DILocation(line: 2490, column: 24, scope: !16081)
!16166 = !DILocation(line: 2490, column: 16, scope: !16081)
!16167 = !DILocation(line: 2490, column: 2, scope: !16082)
!16168 = !DILocation(line: 2491, column: 14, scope: !16079)
!16169 = !DILocation(line: 2491, column: 20, scope: !16079)
!16170 = !DILocation(line: 2491, column: 28, scope: !16079)
!16171 = !DILocation(line: 2491, column: 31, scope: !16079)
!16172 = !DILocation(line: 2491, column: 38, scope: !16079)
!16173 = !DILocation(line: 2491, column: 44, scope: !16079)
!16174 = !DILocation(line: 2491, column: 7, scope: !16079)
!16175 = !DILocation(line: 2491, column: 56, scope: !16079)
!16176 = !DILocation(line: 2491, column: 7, scope: !16080)
!16177 = !DILocation(line: 2492, column: 9, scope: !16077)
!16178 = !DILocation(line: 2492, column: 15, scope: !16077)
!16179 = !DILocation(line: 2492, column: 25, scope: !16077)
!16180 = !DILocation(line: 2492, column: 28, scope: !16077)
!16181 = !DILocation(line: 2492, column: 34, scope: !16077)
!16182 = !DILocation(line: 2492, column: 42, scope: !16077)
!16183 = !DILocation(line: 2492, column: 45, scope: !16077)
!16184 = !DILocation(line: 2492, column: 8, scope: !16078)
!16185 = !DILocation(line: 2493, column: 5, scope: !16186)
!16186 = distinct !DILexicalBlock(scope: !16077, file: !3, line: 2492, column: 55)
!16187 = !DILocation(line: 2494, column: 16, scope: !16076)
!16188 = !DILocation(line: 2494, column: 22, scope: !16076)
!16189 = !DILocation(line: 2494, column: 32, scope: !16076)
!16190 = !DILocation(line: 2494, column: 36, scope: !16076)
!16191 = !DILocation(line: 2494, column: 42, scope: !16076)
!16192 = !DILocation(line: 2494, column: 50, scope: !16076)
!16193 = !DILocation(line: 2494, column: 53, scope: !16076)
!16194 = !DILocation(line: 2494, column: 16, scope: !16077)
!16195 = !DILocation(line: 2495, column: 5, scope: !16196)
!16196 = distinct !DILexicalBlock(scope: !16076, file: !3, line: 2494, column: 63)
!16197 = !DILocation(line: 2497, column: 5, scope: !16075)
!16198 = !DILocation(line: 2498, column: 5, scope: !16075)
!16199 = !DILocation(line: 2498, column: 5, scope: !16074)
!16200 = !DILocalVariable(name: "__dummy", scope: !16201, file: !3, line: 2498, type: !517)
!16201 = distinct !DILexicalBlock(scope: !16073, file: !3, line: 2498, column: 5)
!16202 = !DILocation(line: 2498, column: 5, scope: !16201)
!16203 = !DILocalVariable(name: "__dummy2", scope: !16201, file: !3, line: 2498, type: !517)
!16204 = !DILocation(line: 2498, column: 5, scope: !16073)
!16205 = !DILocation(line: 2498, column: 5, scope: !16072)
!16206 = !DILocation(line: 2498, column: 5, scope: !16207)
!16207 = distinct !DILexicalBlock(scope: !16072, file: !3, line: 2498, column: 5)
!16208 = !DILocalVariable(name: "__dummy", scope: !16209, file: !3, line: 2498, type: !517)
!16209 = distinct !DILexicalBlock(scope: !16210, file: !3, line: 2498, column: 5)
!16210 = distinct !DILexicalBlock(scope: !16207, file: !3, line: 2498, column: 5)
!16211 = !DILocation(line: 2498, column: 5, scope: !16209)
!16212 = !DILocalVariable(name: "__dummy2", scope: !16209, file: !3, line: 2498, type: !517)
!16213 = !DILocation(line: 2498, column: 5, scope: !16210)
!16214 = !DILocation(line: 2498, column: 5, scope: !16071)
!16215 = !{i32 -2139081491}
!16216 = !DILocation(line: 2498, column: 5, scope: !16070)
!16217 = !DILocation(line: 329, column: 10, scope: !9669, inlinedAt: !16069)
!16218 = !DILocation(line: 329, column: 16, scope: !9669, inlinedAt: !16069)
!16219 = !DILocation(line: 2499, column: 20, scope: !16075)
!16220 = !DILocation(line: 2499, column: 26, scope: !16075)
!16221 = !DILocation(line: 2499, column: 5, scope: !16075)
!16222 = !DILocation(line: 2500, column: 29, scope: !16075)
!16223 = !DILocation(line: 2500, column: 35, scope: !16075)
!16224 = !DILocation(line: 2500, column: 44, scope: !16075)
!16225 = !DILocation(line: 409, column: 2, scope: !10158, inlinedAt: !16089)
!16226 = !DILocation(line: 409, column: 2, scope: !10163, inlinedAt: !16089)
!16227 = !DILocation(line: 409, column: 2, scope: !10164, inlinedAt: !16089)
!16228 = !DILocation(line: 409, column: 2, scope: !10171, inlinedAt: !16089)
!16229 = !DILocation(line: 409, column: 2, scope: !10174, inlinedAt: !16089)
!16230 = !DILocation(line: 2501, column: 5, scope: !16075)
!16231 = !DILocation(line: 2504, column: 2, scope: !16080)
!16232 = !DILocation(line: 2490, column: 43, scope: !16081)
!16233 = !DILocation(line: 2490, column: 2, scope: !16081)
!16234 = distinct !{!16234, !16167, !16235}
!16235 = !DILocation(line: 2504, column: 2, scope: !16082)
!16236 = !DILocation(line: 2506, column: 2, scope: !8850)
!16237 = !DILocation(line: 2507, column: 1, scope: !8850)
!16238 = distinct !DISubprogram(name: "atmel_get_wap", scope: !3, file: !3, line: 1694, type: !8851, scopeLine: 1698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!16239 = !DILocalVariable(name: "dev", arg: 1, scope: !16238, file: !3, line: 1694, type: !495)
!16240 = !DILocation(line: 1694, column: 45, scope: !16238)
!16241 = !DILocalVariable(name: "info", arg: 2, scope: !16238, file: !3, line: 1695, type: !606)
!16242 = !DILocation(line: 1695, column: 29, scope: !16238)
!16243 = !DILocalVariable(name: "awrq", arg: 3, scope: !16238, file: !3, line: 1696, type: !6862)
!16244 = !DILocation(line: 1696, column: 22, scope: !16238)
!16245 = !DILocalVariable(name: "extra", arg: 4, scope: !16238, file: !3, line: 1697, type: !676)
!16246 = !DILocation(line: 1697, column: 11, scope: !16238)
!16247 = !DILocalVariable(name: "priv", scope: !16238, file: !3, line: 1699, type: !8587)
!16248 = !DILocation(line: 1699, column: 24, scope: !16238)
!16249 = !DILocation(line: 1699, column: 43, scope: !16238)
!16250 = !DILocation(line: 1699, column: 31, scope: !16238)
!16251 = !DILocation(line: 1700, column: 9, scope: !16238)
!16252 = !DILocation(line: 1700, column: 15, scope: !16238)
!16253 = !DILocation(line: 1700, column: 2, scope: !16238)
!16254 = !DILocation(line: 1700, column: 24, scope: !16238)
!16255 = !DILocation(line: 1700, column: 30, scope: !16238)
!16256 = !DILocation(line: 1701, column: 2, scope: !16238)
!16257 = !DILocation(line: 1701, column: 8, scope: !16238)
!16258 = !DILocation(line: 1701, column: 18, scope: !16238)
!16259 = !DILocation(line: 1703, column: 2, scope: !16238)
!16260 = distinct !DISubprogram(name: "atmel_set_scan", scope: !3, file: !3, line: 2284, type: !15842, scopeLine: 2288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!16261 = !DILocation(line: 407, column: 64, scope: !9987, inlinedAt: !16262)
!16262 = distinct !DILocation(line: 2317, column: 2, scope: !16260)
!16263 = !DILocation(line: 407, column: 84, scope: !9987, inlinedAt: !16262)
!16264 = !DILocation(line: 327, column: 67, scope: !9669, inlinedAt: !16265)
!16265 = distinct !DILocation(line: 2312, column: 2, scope: !16266)
!16266 = distinct !DILexicalBlock(scope: !16267, file: !3, line: 2312, column: 2)
!16267 = distinct !DILexicalBlock(scope: !16268, file: !3, line: 2312, column: 2)
!16268 = distinct !DILexicalBlock(scope: !16269, file: !3, line: 2312, column: 2)
!16269 = distinct !DILexicalBlock(scope: !16270, file: !3, line: 2312, column: 2)
!16270 = distinct !DILexicalBlock(scope: !16260, file: !3, line: 2312, column: 2)
!16271 = !DILocalVariable(name: "dev", arg: 1, scope: !16260, file: !3, line: 2284, type: !495)
!16272 = !DILocation(line: 2284, column: 46, scope: !16260)
!16273 = !DILocalVariable(name: "info", arg: 2, scope: !16260, file: !3, line: 2285, type: !606)
!16274 = !DILocation(line: 2285, column: 30, scope: !16260)
!16275 = !DILocalVariable(name: "dwrq", arg: 3, scope: !16260, file: !3, line: 2286, type: !15844)
!16276 = !DILocation(line: 2286, column: 23, scope: !16260)
!16277 = !DILocalVariable(name: "extra", arg: 4, scope: !16260, file: !3, line: 2287, type: !676)
!16278 = !DILocation(line: 2287, column: 12, scope: !16260)
!16279 = !DILocalVariable(name: "priv", scope: !16260, file: !3, line: 2289, type: !8587)
!16280 = !DILocation(line: 2289, column: 24, scope: !16260)
!16281 = !DILocation(line: 2289, column: 43, scope: !16260)
!16282 = !DILocation(line: 2289, column: 31, scope: !16260)
!16283 = !DILocalVariable(name: "flags", scope: !16260, file: !3, line: 2290, type: !517)
!16284 = !DILocation(line: 2290, column: 16, scope: !16260)
!16285 = !DILocation(line: 2299, column: 6, scope: !16286)
!16286 = distinct !DILexicalBlock(scope: !16260, file: !3, line: 2299, column: 6)
!16287 = !DILocation(line: 2299, column: 12, scope: !16286)
!16288 = !DILocation(line: 2299, column: 26, scope: !16286)
!16289 = !DILocation(line: 2299, column: 6, scope: !16260)
!16290 = !DILocation(line: 2300, column: 3, scope: !16286)
!16291 = !DILocation(line: 2303, column: 6, scope: !16292)
!16292 = distinct !DILexicalBlock(scope: !16260, file: !3, line: 2303, column: 6)
!16293 = !DILocation(line: 2303, column: 6, scope: !16260)
!16294 = !DILocation(line: 2304, column: 3, scope: !16292)
!16295 = !DILocation(line: 2304, column: 9, scope: !16292)
!16296 = !DILocation(line: 2304, column: 27, scope: !16292)
!16297 = !DILocation(line: 2305, column: 22, scope: !16260)
!16298 = !DILocation(line: 2305, column: 2, scope: !16260)
!16299 = !DILocation(line: 2305, column: 8, scope: !16260)
!16300 = !DILocation(line: 2305, column: 20, scope: !16260)
!16301 = !DILocation(line: 2308, column: 6, scope: !16302)
!16302 = distinct !DILexicalBlock(scope: !16260, file: !3, line: 2308, column: 6)
!16303 = !DILocation(line: 2308, column: 12, scope: !16302)
!16304 = !DILocation(line: 2308, column: 30, scope: !16302)
!16305 = !DILocation(line: 2308, column: 6, scope: !16260)
!16306 = !DILocation(line: 2309, column: 3, scope: !16302)
!16307 = !DILocation(line: 2311, column: 2, scope: !16260)
!16308 = !DILocation(line: 2312, column: 2, scope: !16260)
!16309 = !DILocation(line: 2312, column: 2, scope: !16270)
!16310 = !DILocalVariable(name: "__dummy", scope: !16311, file: !3, line: 2312, type: !517)
!16311 = distinct !DILexicalBlock(scope: !16269, file: !3, line: 2312, column: 2)
!16312 = !DILocation(line: 2312, column: 2, scope: !16311)
!16313 = !DILocalVariable(name: "__dummy2", scope: !16311, file: !3, line: 2312, type: !517)
!16314 = !DILocation(line: 2312, column: 2, scope: !16269)
!16315 = !DILocation(line: 2312, column: 2, scope: !16268)
!16316 = !DILocation(line: 2312, column: 2, scope: !16317)
!16317 = distinct !DILexicalBlock(scope: !16268, file: !3, line: 2312, column: 2)
!16318 = !DILocalVariable(name: "__dummy", scope: !16319, file: !3, line: 2312, type: !517)
!16319 = distinct !DILexicalBlock(scope: !16320, file: !3, line: 2312, column: 2)
!16320 = distinct !DILexicalBlock(scope: !16317, file: !3, line: 2312, column: 2)
!16321 = !DILocation(line: 2312, column: 2, scope: !16319)
!16322 = !DILocalVariable(name: "__dummy2", scope: !16319, file: !3, line: 2312, type: !517)
!16323 = !DILocation(line: 2312, column: 2, scope: !16320)
!16324 = !DILocation(line: 2312, column: 2, scope: !16267)
!16325 = !{i32 -2139084578}
!16326 = !DILocation(line: 2312, column: 2, scope: !16266)
!16327 = !DILocation(line: 329, column: 10, scope: !9669, inlinedAt: !16265)
!16328 = !DILocation(line: 329, column: 16, scope: !9669, inlinedAt: !16265)
!16329 = !DILocation(line: 2314, column: 2, scope: !16260)
!16330 = !DILocation(line: 2314, column: 8, scope: !16260)
!16331 = !DILocation(line: 2314, column: 26, scope: !16260)
!16332 = !DILocation(line: 2315, column: 2, scope: !16260)
!16333 = !DILocation(line: 2315, column: 8, scope: !16260)
!16334 = !DILocation(line: 2315, column: 18, scope: !16260)
!16335 = !DILocation(line: 2316, column: 13, scope: !16260)
!16336 = !DILocation(line: 2316, column: 2, scope: !16260)
!16337 = !DILocation(line: 2317, column: 26, scope: !16260)
!16338 = !DILocation(line: 2317, column: 32, scope: !16260)
!16339 = !DILocation(line: 2317, column: 41, scope: !16260)
!16340 = !DILocation(line: 409, column: 2, scope: !10158, inlinedAt: !16262)
!16341 = !DILocation(line: 409, column: 2, scope: !10163, inlinedAt: !16262)
!16342 = !DILocation(line: 409, column: 2, scope: !10164, inlinedAt: !16262)
!16343 = !DILocation(line: 409, column: 2, scope: !10171, inlinedAt: !16262)
!16344 = !DILocation(line: 409, column: 2, scope: !10174, inlinedAt: !16262)
!16345 = !DILocation(line: 2319, column: 2, scope: !16260)
!16346 = !DILocation(line: 2320, column: 1, scope: !16260)
!16347 = distinct !DISubprogram(name: "atmel_get_scan", scope: !3, file: !3, line: 2322, type: !15842, scopeLine: 2326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!16348 = !DILocalVariable(name: "dev", arg: 1, scope: !16347, file: !3, line: 2322, type: !495)
!16349 = !DILocation(line: 2322, column: 46, scope: !16347)
!16350 = !DILocalVariable(name: "info", arg: 2, scope: !16347, file: !3, line: 2323, type: !606)
!16351 = !DILocation(line: 2323, column: 30, scope: !16347)
!16352 = !DILocalVariable(name: "dwrq", arg: 3, scope: !16347, file: !3, line: 2324, type: !15844)
!16353 = !DILocation(line: 2324, column: 23, scope: !16347)
!16354 = !DILocalVariable(name: "extra", arg: 4, scope: !16347, file: !3, line: 2325, type: !676)
!16355 = !DILocation(line: 2325, column: 12, scope: !16347)
!16356 = !DILocalVariable(name: "priv", scope: !16347, file: !3, line: 2327, type: !8587)
!16357 = !DILocation(line: 2327, column: 24, scope: !16347)
!16358 = !DILocation(line: 2327, column: 43, scope: !16347)
!16359 = !DILocation(line: 2327, column: 31, scope: !16347)
!16360 = !DILocalVariable(name: "i", scope: !16347, file: !3, line: 2328, type: !7)
!16361 = !DILocation(line: 2328, column: 6, scope: !16347)
!16362 = !DILocalVariable(name: "current_ev", scope: !16347, file: !3, line: 2329, type: !676)
!16363 = !DILocation(line: 2329, column: 8, scope: !16347)
!16364 = !DILocation(line: 2329, column: 21, scope: !16347)
!16365 = !DILocalVariable(name: "iwe", scope: !16347, file: !3, line: 2330, type: !16366)
!16366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iw_event", file: !615, line: 1080, size: 192, elements: !16367)
!16367 = !{!16368, !16369, !16370}
!16368 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !16366, file: !615, line: 1081, baseType: !610, size: 16)
!16369 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !16366, file: !615, line: 1082, baseType: !610, size: 16, offset: 16)
!16370 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !16366, file: !615, line: 1083, baseType: !614, size: 128, offset: 64)
!16371 = !DILocation(line: 2330, column: 18, scope: !16347)
!16372 = !DILocation(line: 2332, column: 6, scope: !16373)
!16373 = distinct !DILexicalBlock(scope: !16347, file: !3, line: 2332, column: 6)
!16374 = !DILocation(line: 2332, column: 12, scope: !16373)
!16375 = !DILocation(line: 2332, column: 30, scope: !16373)
!16376 = !DILocation(line: 2332, column: 6, scope: !16347)
!16377 = !DILocation(line: 2333, column: 3, scope: !16373)
!16378 = !DILocation(line: 2335, column: 9, scope: !16379)
!16379 = distinct !DILexicalBlock(scope: !16347, file: !3, line: 2335, column: 2)
!16380 = !DILocation(line: 2335, column: 7, scope: !16379)
!16381 = !DILocation(line: 2335, column: 14, scope: !16382)
!16382 = distinct !DILexicalBlock(scope: !16379, file: !3, line: 2335, column: 2)
!16383 = !DILocation(line: 2335, column: 18, scope: !16382)
!16384 = !DILocation(line: 2335, column: 24, scope: !16382)
!16385 = !DILocation(line: 2335, column: 16, scope: !16382)
!16386 = !DILocation(line: 2335, column: 2, scope: !16379)
!16387 = !DILocation(line: 2336, column: 7, scope: !16388)
!16388 = distinct !DILexicalBlock(scope: !16382, file: !3, line: 2335, column: 47)
!16389 = !DILocation(line: 2336, column: 11, scope: !16388)
!16390 = !DILocation(line: 2337, column: 7, scope: !16388)
!16391 = !DILocation(line: 2337, column: 9, scope: !16388)
!16392 = !DILocation(line: 2337, column: 17, scope: !16388)
!16393 = !DILocation(line: 2337, column: 27, scope: !16388)
!16394 = !DILocation(line: 2338, column: 14, scope: !16388)
!16395 = !DILocation(line: 2338, column: 16, scope: !16388)
!16396 = !DILocation(line: 2338, column: 24, scope: !16388)
!16397 = !DILocation(line: 2338, column: 3, scope: !16388)
!16398 = !DILocation(line: 2338, column: 33, scope: !16388)
!16399 = !DILocation(line: 2338, column: 39, scope: !16388)
!16400 = !DILocation(line: 2338, column: 47, scope: !16388)
!16401 = !DILocation(line: 2338, column: 50, scope: !16388)
!16402 = !DILocation(line: 2339, column: 37, scope: !16388)
!16403 = !DILocation(line: 2339, column: 43, scope: !16388)
!16404 = !DILocation(line: 2340, column: 9, scope: !16388)
!16405 = !DILocation(line: 2340, column: 15, scope: !16388)
!16406 = !DILocation(line: 2339, column: 16, scope: !16388)
!16407 = !DILocation(line: 2339, column: 14, scope: !16388)
!16408 = !DILocation(line: 2343, column: 24, scope: !16388)
!16409 = !DILocation(line: 2343, column: 30, scope: !16388)
!16410 = !DILocation(line: 2343, column: 38, scope: !16388)
!16411 = !DILocation(line: 2343, column: 41, scope: !16388)
!16412 = !DILocation(line: 2343, column: 7, scope: !16388)
!16413 = !DILocation(line: 2343, column: 9, scope: !16388)
!16414 = !DILocation(line: 2343, column: 14, scope: !16388)
!16415 = !DILocation(line: 2343, column: 21, scope: !16388)
!16416 = !DILocation(line: 2344, column: 11, scope: !16417)
!16417 = distinct !DILexicalBlock(scope: !16388, file: !3, line: 2344, column: 7)
!16418 = !DILocation(line: 2344, column: 13, scope: !16417)
!16419 = !DILocation(line: 2344, column: 18, scope: !16417)
!16420 = !DILocation(line: 2344, column: 7, scope: !16417)
!16421 = !DILocation(line: 2344, column: 25, scope: !16417)
!16422 = !DILocation(line: 2344, column: 7, scope: !16388)
!16423 = !DILocation(line: 2345, column: 8, scope: !16417)
!16424 = !DILocation(line: 2345, column: 10, scope: !16417)
!16425 = !DILocation(line: 2345, column: 15, scope: !16417)
!16426 = !DILocation(line: 2345, column: 22, scope: !16417)
!16427 = !DILocation(line: 2345, column: 4, scope: !16417)
!16428 = !DILocation(line: 2346, column: 7, scope: !16388)
!16429 = !DILocation(line: 2346, column: 11, scope: !16388)
!16430 = !DILocation(line: 2347, column: 7, scope: !16388)
!16431 = !DILocation(line: 2347, column: 9, scope: !16388)
!16432 = !DILocation(line: 2347, column: 14, scope: !16388)
!16433 = !DILocation(line: 2347, column: 20, scope: !16388)
!16434 = !DILocation(line: 2348, column: 37, scope: !16388)
!16435 = !DILocation(line: 2348, column: 43, scope: !16388)
!16436 = !DILocation(line: 2349, column: 9, scope: !16388)
!16437 = !DILocation(line: 2349, column: 15, scope: !16388)
!16438 = !DILocation(line: 2350, column: 15, scope: !16388)
!16439 = !DILocation(line: 2350, column: 21, scope: !16388)
!16440 = !DILocation(line: 2350, column: 29, scope: !16388)
!16441 = !DILocation(line: 2350, column: 32, scope: !16388)
!16442 = !DILocation(line: 2348, column: 16, scope: !16388)
!16443 = !DILocation(line: 2348, column: 14, scope: !16388)
!16444 = !DILocation(line: 2352, column: 7, scope: !16388)
!16445 = !DILocation(line: 2352, column: 11, scope: !16388)
!16446 = !DILocation(line: 2353, column: 16, scope: !16388)
!16447 = !DILocation(line: 2353, column: 22, scope: !16388)
!16448 = !DILocation(line: 2353, column: 30, scope: !16388)
!16449 = !DILocation(line: 2353, column: 33, scope: !16388)
!16450 = !DILocation(line: 2353, column: 7, scope: !16388)
!16451 = !DILocation(line: 2353, column: 9, scope: !16388)
!16452 = !DILocation(line: 2353, column: 14, scope: !16388)
!16453 = !DILocation(line: 2354, column: 37, scope: !16388)
!16454 = !DILocation(line: 2354, column: 43, scope: !16388)
!16455 = !DILocation(line: 2355, column: 9, scope: !16388)
!16456 = !DILocation(line: 2355, column: 15, scope: !16388)
!16457 = !DILocation(line: 2354, column: 16, scope: !16388)
!16458 = !DILocation(line: 2354, column: 14, scope: !16388)
!16459 = !DILocation(line: 2358, column: 7, scope: !16388)
!16460 = !DILocation(line: 2358, column: 11, scope: !16388)
!16461 = !DILocation(line: 2359, column: 18, scope: !16388)
!16462 = !DILocation(line: 2359, column: 24, scope: !16388)
!16463 = !DILocation(line: 2359, column: 32, scope: !16388)
!16464 = !DILocation(line: 2359, column: 35, scope: !16388)
!16465 = !DILocation(line: 2359, column: 7, scope: !16388)
!16466 = !DILocation(line: 2359, column: 9, scope: !16388)
!16467 = !DILocation(line: 2359, column: 14, scope: !16388)
!16468 = !DILocation(line: 2359, column: 16, scope: !16388)
!16469 = !DILocation(line: 2360, column: 7, scope: !16388)
!16470 = !DILocation(line: 2360, column: 9, scope: !16388)
!16471 = !DILocation(line: 2360, column: 14, scope: !16388)
!16472 = !DILocation(line: 2360, column: 16, scope: !16388)
!16473 = !DILocation(line: 2361, column: 37, scope: !16388)
!16474 = !DILocation(line: 2361, column: 43, scope: !16388)
!16475 = !DILocation(line: 2362, column: 9, scope: !16388)
!16476 = !DILocation(line: 2362, column: 15, scope: !16388)
!16477 = !DILocation(line: 2361, column: 16, scope: !16388)
!16478 = !DILocation(line: 2361, column: 14, scope: !16388)
!16479 = !DILocation(line: 2366, column: 7, scope: !16388)
!16480 = !DILocation(line: 2366, column: 11, scope: !16388)
!16481 = !DILocation(line: 2367, column: 22, scope: !16388)
!16482 = !DILocation(line: 2367, column: 28, scope: !16388)
!16483 = !DILocation(line: 2367, column: 36, scope: !16388)
!16484 = !DILocation(line: 2367, column: 39, scope: !16388)
!16485 = !DILocation(line: 2367, column: 7, scope: !16388)
!16486 = !DILocation(line: 2367, column: 9, scope: !16388)
!16487 = !DILocation(line: 2367, column: 14, scope: !16388)
!16488 = !DILocation(line: 2367, column: 20, scope: !16388)
!16489 = !DILocation(line: 2368, column: 26, scope: !16388)
!16490 = !DILocation(line: 2368, column: 28, scope: !16388)
!16491 = !DILocation(line: 2368, column: 33, scope: !16388)
!16492 = !DILocation(line: 2368, column: 7, scope: !16388)
!16493 = !DILocation(line: 2368, column: 9, scope: !16388)
!16494 = !DILocation(line: 2368, column: 14, scope: !16388)
!16495 = !DILocation(line: 2368, column: 20, scope: !16388)
!16496 = !DILocation(line: 2370, column: 37, scope: !16388)
!16497 = !DILocation(line: 2370, column: 43, scope: !16388)
!16498 = !DILocation(line: 2371, column: 9, scope: !16388)
!16499 = !DILocation(line: 2371, column: 15, scope: !16388)
!16500 = !DILocation(line: 2370, column: 16, scope: !16388)
!16501 = !DILocation(line: 2370, column: 14, scope: !16388)
!16502 = !DILocation(line: 2375, column: 7, scope: !16388)
!16503 = !DILocation(line: 2375, column: 11, scope: !16388)
!16504 = !DILocation(line: 2376, column: 7, scope: !16505)
!16505 = distinct !DILexicalBlock(scope: !16388, file: !3, line: 2376, column: 7)
!16506 = !DILocation(line: 2376, column: 13, scope: !16505)
!16507 = !DILocation(line: 2376, column: 21, scope: !16505)
!16508 = !DILocation(line: 2376, column: 24, scope: !16505)
!16509 = !DILocation(line: 2376, column: 7, scope: !16388)
!16510 = !DILocation(line: 2377, column: 8, scope: !16505)
!16511 = !DILocation(line: 2377, column: 10, scope: !16505)
!16512 = !DILocation(line: 2377, column: 15, scope: !16505)
!16513 = !DILocation(line: 2377, column: 21, scope: !16505)
!16514 = !DILocation(line: 2377, column: 4, scope: !16505)
!16515 = !DILocation(line: 2379, column: 8, scope: !16505)
!16516 = !DILocation(line: 2379, column: 10, scope: !16505)
!16517 = !DILocation(line: 2379, column: 15, scope: !16505)
!16518 = !DILocation(line: 2379, column: 21, scope: !16505)
!16519 = !DILocation(line: 2380, column: 7, scope: !16388)
!16520 = !DILocation(line: 2380, column: 9, scope: !16388)
!16521 = !DILocation(line: 2380, column: 14, scope: !16388)
!16522 = !DILocation(line: 2380, column: 21, scope: !16388)
!16523 = !DILocation(line: 2381, column: 37, scope: !16388)
!16524 = !DILocation(line: 2381, column: 43, scope: !16388)
!16525 = !DILocation(line: 2382, column: 9, scope: !16388)
!16526 = !DILocation(line: 2382, column: 15, scope: !16388)
!16527 = !DILocation(line: 2381, column: 16, scope: !16388)
!16528 = !DILocation(line: 2381, column: 14, scope: !16388)
!16529 = !DILocation(line: 2384, column: 2, scope: !16388)
!16530 = !DILocation(line: 2335, column: 43, scope: !16382)
!16531 = !DILocation(line: 2335, column: 2, scope: !16382)
!16532 = distinct !{!16532, !16386, !16533}
!16533 = !DILocation(line: 2384, column: 2, scope: !16379)
!16534 = !DILocation(line: 2387, column: 18, scope: !16347)
!16535 = !DILocation(line: 2387, column: 31, scope: !16347)
!16536 = !DILocation(line: 2387, column: 29, scope: !16347)
!16537 = !DILocation(line: 2387, column: 17, scope: !16347)
!16538 = !DILocation(line: 2387, column: 2, scope: !16347)
!16539 = !DILocation(line: 2387, column: 8, scope: !16347)
!16540 = !DILocation(line: 2387, column: 15, scope: !16347)
!16541 = !DILocation(line: 2388, column: 2, scope: !16347)
!16542 = !DILocation(line: 2388, column: 8, scope: !16347)
!16543 = !DILocation(line: 2388, column: 14, scope: !16347)
!16544 = !DILocation(line: 2390, column: 2, scope: !16347)
!16545 = !DILocation(line: 2391, column: 1, scope: !16347)
!16546 = distinct !DISubprogram(name: "atmel_set_essid", scope: !3, file: !3, line: 1645, type: !15842, scopeLine: 1649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!16547 = !DILocalVariable(name: "dev", arg: 1, scope: !16546, file: !3, line: 1645, type: !495)
!16548 = !DILocation(line: 1645, column: 47, scope: !16546)
!16549 = !DILocalVariable(name: "info", arg: 2, scope: !16546, file: !3, line: 1646, type: !606)
!16550 = !DILocation(line: 1646, column: 31, scope: !16546)
!16551 = !DILocalVariable(name: "dwrq", arg: 3, scope: !16546, file: !3, line: 1647, type: !15844)
!16552 = !DILocation(line: 1647, column: 24, scope: !16546)
!16553 = !DILocalVariable(name: "extra", arg: 4, scope: !16546, file: !3, line: 1648, type: !676)
!16554 = !DILocation(line: 1648, column: 13, scope: !16546)
!16555 = !DILocalVariable(name: "priv", scope: !16546, file: !3, line: 1650, type: !8587)
!16556 = !DILocation(line: 1650, column: 24, scope: !16546)
!16557 = !DILocation(line: 1650, column: 43, scope: !16546)
!16558 = !DILocation(line: 1650, column: 31, scope: !16546)
!16559 = !DILocation(line: 1653, column: 6, scope: !16560)
!16560 = distinct !DILexicalBlock(scope: !16546, file: !3, line: 1653, column: 6)
!16561 = !DILocation(line: 1653, column: 12, scope: !16560)
!16562 = !DILocation(line: 1653, column: 18, scope: !16560)
!16563 = !DILocation(line: 1653, column: 6, scope: !16546)
!16564 = !DILocation(line: 1654, column: 3, scope: !16565)
!16565 = distinct !DILexicalBlock(scope: !16560, file: !3, line: 1653, column: 24)
!16566 = !DILocation(line: 1654, column: 9, scope: !16565)
!16567 = !DILocation(line: 1654, column: 28, scope: !16565)
!16568 = !DILocation(line: 1655, column: 2, scope: !16565)
!16569 = !DILocalVariable(name: "index", scope: !16570, file: !3, line: 1656, type: !7)
!16570 = distinct !DILexicalBlock(scope: !16560, file: !3, line: 1655, column: 9)
!16571 = !DILocation(line: 1656, column: 7, scope: !16570)
!16572 = !DILocation(line: 1656, column: 16, scope: !16570)
!16573 = !DILocation(line: 1656, column: 22, scope: !16570)
!16574 = !DILocation(line: 1656, column: 28, scope: !16570)
!16575 = !DILocation(line: 1656, column: 47, scope: !16570)
!16576 = !DILocation(line: 1658, column: 3, scope: !16570)
!16577 = !DILocation(line: 1658, column: 9, scope: !16570)
!16578 = !DILocation(line: 1658, column: 28, scope: !16570)
!16579 = !DILocation(line: 1661, column: 7, scope: !16580)
!16580 = distinct !DILexicalBlock(scope: !16570, file: !3, line: 1661, column: 7)
!16581 = !DILocation(line: 1661, column: 13, scope: !16580)
!16582 = !DILocation(line: 1661, column: 20, scope: !16580)
!16583 = !DILocation(line: 1661, column: 7, scope: !16570)
!16584 = !DILocation(line: 1662, column: 5, scope: !16580)
!16585 = !DILocation(line: 1663, column: 7, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !16570, file: !3, line: 1663, column: 7)
!16587 = !DILocation(line: 1663, column: 13, scope: !16586)
!16588 = !DILocation(line: 1663, column: 7, scope: !16570)
!16589 = !DILocation(line: 1664, column: 4, scope: !16586)
!16590 = !DILocation(line: 1666, column: 10, scope: !16570)
!16591 = !DILocation(line: 1666, column: 16, scope: !16570)
!16592 = !DILocation(line: 1666, column: 3, scope: !16570)
!16593 = !DILocation(line: 1666, column: 26, scope: !16570)
!16594 = !DILocation(line: 1666, column: 33, scope: !16570)
!16595 = !DILocation(line: 1666, column: 39, scope: !16570)
!16596 = !DILocation(line: 1667, column: 25, scope: !16570)
!16597 = !DILocation(line: 1667, column: 31, scope: !16570)
!16598 = !DILocation(line: 1667, column: 3, scope: !16570)
!16599 = !DILocation(line: 1667, column: 9, scope: !16570)
!16600 = !DILocation(line: 1667, column: 23, scope: !16570)
!16601 = !DILocation(line: 1670, column: 2, scope: !16546)
!16602 = !DILocation(line: 1671, column: 1, scope: !16546)
!16603 = distinct !DISubprogram(name: "atmel_get_essid", scope: !3, file: !3, line: 1673, type: !15842, scopeLine: 1677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!16604 = !DILocalVariable(name: "dev", arg: 1, scope: !16603, file: !3, line: 1673, type: !495)
!16605 = !DILocation(line: 1673, column: 47, scope: !16603)
!16606 = !DILocalVariable(name: "info", arg: 2, scope: !16603, file: !3, line: 1674, type: !606)
!16607 = !DILocation(line: 1674, column: 31, scope: !16603)
!16608 = !DILocalVariable(name: "dwrq", arg: 3, scope: !16603, file: !3, line: 1675, type: !15844)
!16609 = !DILocation(line: 1675, column: 24, scope: !16603)
!16610 = !DILocalVariable(name: "extra", arg: 4, scope: !16603, file: !3, line: 1676, type: !676)
!16611 = !DILocation(line: 1676, column: 13, scope: !16603)
!16612 = !DILocalVariable(name: "priv", scope: !16603, file: !3, line: 1678, type: !8587)
!16613 = !DILocation(line: 1678, column: 24, scope: !16603)
!16614 = !DILocation(line: 1678, column: 43, scope: !16603)
!16615 = !DILocation(line: 1678, column: 31, scope: !16603)
!16616 = !DILocation(line: 1681, column: 6, scope: !16617)
!16617 = distinct !DILexicalBlock(scope: !16603, file: !3, line: 1681, column: 6)
!16618 = !DILocation(line: 1681, column: 12, scope: !16617)
!16619 = !DILocation(line: 1681, column: 26, scope: !16617)
!16620 = !DILocation(line: 1681, column: 6, scope: !16603)
!16621 = !DILocation(line: 1682, column: 10, scope: !16622)
!16622 = distinct !DILexicalBlock(scope: !16617, file: !3, line: 1681, column: 32)
!16623 = !DILocation(line: 1682, column: 17, scope: !16622)
!16624 = !DILocation(line: 1682, column: 23, scope: !16622)
!16625 = !DILocation(line: 1682, column: 3, scope: !16622)
!16626 = !DILocation(line: 1682, column: 33, scope: !16622)
!16627 = !DILocation(line: 1682, column: 39, scope: !16622)
!16628 = !DILocation(line: 1683, column: 18, scope: !16622)
!16629 = !DILocation(line: 1683, column: 24, scope: !16622)
!16630 = !DILocation(line: 1683, column: 3, scope: !16622)
!16631 = !DILocation(line: 1683, column: 9, scope: !16622)
!16632 = !DILocation(line: 1683, column: 16, scope: !16622)
!16633 = !DILocation(line: 1684, column: 2, scope: !16622)
!16634 = !DILocation(line: 1685, column: 10, scope: !16635)
!16635 = distinct !DILexicalBlock(scope: !16617, file: !3, line: 1684, column: 9)
!16636 = !DILocation(line: 1685, column: 17, scope: !16635)
!16637 = !DILocation(line: 1685, column: 23, scope: !16635)
!16638 = !DILocation(line: 1685, column: 3, scope: !16635)
!16639 = !DILocation(line: 1685, column: 29, scope: !16635)
!16640 = !DILocation(line: 1685, column: 35, scope: !16635)
!16641 = !DILocation(line: 1686, column: 18, scope: !16635)
!16642 = !DILocation(line: 1686, column: 24, scope: !16635)
!16643 = !DILocation(line: 1686, column: 3, scope: !16635)
!16644 = !DILocation(line: 1686, column: 9, scope: !16635)
!16645 = !DILocation(line: 1686, column: 16, scope: !16635)
!16646 = !DILocation(line: 1689, column: 17, scope: !16603)
!16647 = !DILocation(line: 1689, column: 23, scope: !16603)
!16648 = !DILocation(line: 1689, column: 16, scope: !16603)
!16649 = !DILocation(line: 1689, column: 2, scope: !16603)
!16650 = !DILocation(line: 1689, column: 8, scope: !16603)
!16651 = !DILocation(line: 1689, column: 14, scope: !16603)
!16652 = !DILocation(line: 1691, column: 2, scope: !16603)
!16653 = distinct !DISubprogram(name: "atmel_set_rate", scope: !3, file: !3, line: 2014, type: !16654, scopeLine: 2018, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!16654 = !DISubroutineType(types: !16655)
!16655 = !{!7, !495, !606, !16656, !676}
!16656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!16657 = !DILocalVariable(name: "dev", arg: 1, scope: !16653, file: !3, line: 2014, type: !495)
!16658 = !DILocation(line: 2014, column: 46, scope: !16653)
!16659 = !DILocalVariable(name: "info", arg: 2, scope: !16653, file: !3, line: 2015, type: !606)
!16660 = !DILocation(line: 2015, column: 30, scope: !16653)
!16661 = !DILocalVariable(name: "vwrq", arg: 3, scope: !16653, file: !3, line: 2016, type: !16656)
!16662 = !DILocation(line: 2016, column: 23, scope: !16653)
!16663 = !DILocalVariable(name: "extra", arg: 4, scope: !16653, file: !3, line: 2017, type: !676)
!16664 = !DILocation(line: 2017, column: 12, scope: !16653)
!16665 = !DILocalVariable(name: "priv", scope: !16653, file: !3, line: 2019, type: !8587)
!16666 = !DILocation(line: 2019, column: 24, scope: !16653)
!16667 = !DILocation(line: 2019, column: 43, scope: !16653)
!16668 = !DILocation(line: 2019, column: 31, scope: !16653)
!16669 = !DILocation(line: 2021, column: 6, scope: !16670)
!16670 = distinct !DILexicalBlock(scope: !16653, file: !3, line: 2021, column: 6)
!16671 = !DILocation(line: 2021, column: 12, scope: !16670)
!16672 = !DILocation(line: 2021, column: 18, scope: !16670)
!16673 = !DILocation(line: 2021, column: 6, scope: !16653)
!16674 = !DILocation(line: 2022, column: 3, scope: !16675)
!16675 = distinct !DILexicalBlock(scope: !16670, file: !3, line: 2021, column: 24)
!16676 = !DILocation(line: 2022, column: 9, scope: !16675)
!16677 = !DILocation(line: 2022, column: 17, scope: !16675)
!16678 = !DILocation(line: 2023, column: 3, scope: !16675)
!16679 = !DILocation(line: 2023, column: 9, scope: !16675)
!16680 = !DILocation(line: 2023, column: 22, scope: !16675)
!16681 = !DILocation(line: 2024, column: 2, scope: !16675)
!16682 = !DILocation(line: 2025, column: 3, scope: !16683)
!16683 = distinct !DILexicalBlock(scope: !16670, file: !3, line: 2024, column: 9)
!16684 = !DILocation(line: 2025, column: 9, scope: !16683)
!16685 = !DILocation(line: 2025, column: 22, scope: !16683)
!16686 = !DILocation(line: 2028, column: 8, scope: !16687)
!16687 = distinct !DILexicalBlock(scope: !16683, file: !3, line: 2028, column: 7)
!16688 = !DILocation(line: 2028, column: 14, scope: !16687)
!16689 = !DILocation(line: 2028, column: 20, scope: !16687)
!16690 = !DILocation(line: 2028, column: 25, scope: !16687)
!16691 = !DILocation(line: 2028, column: 29, scope: !16687)
!16692 = !DILocation(line: 2028, column: 35, scope: !16687)
!16693 = !DILocation(line: 2028, column: 41, scope: !16687)
!16694 = !DILocation(line: 2028, column: 7, scope: !16683)
!16695 = !DILocation(line: 2030, column: 20, scope: !16696)
!16696 = distinct !DILexicalBlock(scope: !16687, file: !3, line: 2028, column: 48)
!16697 = !DILocation(line: 2030, column: 26, scope: !16696)
!16698 = !DILocation(line: 2030, column: 4, scope: !16696)
!16699 = !DILocation(line: 2030, column: 10, scope: !16696)
!16700 = !DILocation(line: 2030, column: 18, scope: !16696)
!16701 = !DILocation(line: 2031, column: 3, scope: !16696)
!16702 = !DILocation(line: 2033, column: 12, scope: !16703)
!16703 = distinct !DILexicalBlock(scope: !16687, file: !3, line: 2031, column: 10)
!16704 = !DILocation(line: 2033, column: 18, scope: !16703)
!16705 = !DILocation(line: 2033, column: 4, scope: !16703)
!16706 = !DILocation(line: 2035, column: 5, scope: !16707)
!16707 = distinct !DILexicalBlock(scope: !16703, file: !3, line: 2033, column: 25)
!16708 = !DILocation(line: 2035, column: 11, scope: !16707)
!16709 = !DILocation(line: 2035, column: 19, scope: !16707)
!16710 = !DILocation(line: 2036, column: 5, scope: !16707)
!16711 = !DILocation(line: 2038, column: 5, scope: !16707)
!16712 = !DILocation(line: 2038, column: 11, scope: !16707)
!16713 = !DILocation(line: 2038, column: 19, scope: !16707)
!16714 = !DILocation(line: 2039, column: 5, scope: !16707)
!16715 = !DILocation(line: 2041, column: 5, scope: !16707)
!16716 = !DILocation(line: 2041, column: 11, scope: !16707)
!16717 = !DILocation(line: 2041, column: 19, scope: !16707)
!16718 = !DILocation(line: 2042, column: 5, scope: !16707)
!16719 = !DILocation(line: 2044, column: 5, scope: !16707)
!16720 = !DILocation(line: 2044, column: 11, scope: !16707)
!16721 = !DILocation(line: 2044, column: 19, scope: !16707)
!16722 = !DILocation(line: 2045, column: 5, scope: !16707)
!16723 = !DILocation(line: 2047, column: 5, scope: !16707)
!16724 = !DILocation(line: 2052, column: 2, scope: !16653)
!16725 = !DILocation(line: 2053, column: 1, scope: !16653)
!16726 = distinct !DISubprogram(name: "atmel_get_rate", scope: !3, file: !3, line: 2080, type: !16654, scopeLine: 2084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!16727 = !DILocalVariable(name: "dev", arg: 1, scope: !16726, file: !3, line: 2080, type: !495)
!16728 = !DILocation(line: 2080, column: 46, scope: !16726)
!16729 = !DILocalVariable(name: "info", arg: 2, scope: !16726, file: !3, line: 2081, type: !606)
!16730 = !DILocation(line: 2081, column: 29, scope: !16726)
!16731 = !DILocalVariable(name: "vwrq", arg: 3, scope: !16726, file: !3, line: 2082, type: !16656)
!16732 = !DILocation(line: 2082, column: 22, scope: !16726)
!16733 = !DILocalVariable(name: "extra", arg: 4, scope: !16726, file: !3, line: 2083, type: !676)
!16734 = !DILocation(line: 2083, column: 11, scope: !16726)
!16735 = !DILocalVariable(name: "priv", scope: !16726, file: !3, line: 2085, type: !8587)
!16736 = !DILocation(line: 2085, column: 24, scope: !16726)
!16737 = !DILocation(line: 2085, column: 43, scope: !16726)
!16738 = !DILocation(line: 2085, column: 31, scope: !16726)
!16739 = !DILocation(line: 2087, column: 6, scope: !16740)
!16740 = distinct !DILexicalBlock(scope: !16726, file: !3, line: 2087, column: 6)
!16741 = !DILocation(line: 2087, column: 12, scope: !16740)
!16742 = !DILocation(line: 2087, column: 6, scope: !16726)
!16743 = !DILocation(line: 2088, column: 3, scope: !16744)
!16744 = distinct !DILexicalBlock(scope: !16740, file: !3, line: 2087, column: 26)
!16745 = !DILocation(line: 2088, column: 9, scope: !16744)
!16746 = !DILocation(line: 2088, column: 15, scope: !16744)
!16747 = !DILocation(line: 2089, column: 3, scope: !16744)
!16748 = !DILocation(line: 2089, column: 9, scope: !16744)
!16749 = !DILocation(line: 2089, column: 15, scope: !16744)
!16750 = !DILocation(line: 2090, column: 2, scope: !16744)
!16751 = !DILocation(line: 2091, column: 3, scope: !16752)
!16752 = distinct !DILexicalBlock(scope: !16740, file: !3, line: 2090, column: 9)
!16753 = !DILocation(line: 2091, column: 9, scope: !16752)
!16754 = !DILocation(line: 2091, column: 15, scope: !16752)
!16755 = !DILocation(line: 2092, column: 11, scope: !16752)
!16756 = !DILocation(line: 2092, column: 17, scope: !16752)
!16757 = !DILocation(line: 2092, column: 3, scope: !16752)
!16758 = !DILocation(line: 2094, column: 4, scope: !16759)
!16759 = distinct !DILexicalBlock(scope: !16752, file: !3, line: 2092, column: 26)
!16760 = !DILocation(line: 2094, column: 10, scope: !16759)
!16761 = !DILocation(line: 2094, column: 16, scope: !16759)
!16762 = !DILocation(line: 2095, column: 4, scope: !16759)
!16763 = !DILocation(line: 2097, column: 4, scope: !16759)
!16764 = !DILocation(line: 2097, column: 10, scope: !16759)
!16765 = !DILocation(line: 2097, column: 16, scope: !16759)
!16766 = !DILocation(line: 2098, column: 4, scope: !16759)
!16767 = !DILocation(line: 2100, column: 4, scope: !16759)
!16768 = !DILocation(line: 2100, column: 10, scope: !16759)
!16769 = !DILocation(line: 2100, column: 16, scope: !16759)
!16770 = !DILocation(line: 2101, column: 4, scope: !16759)
!16771 = !DILocation(line: 2103, column: 4, scope: !16759)
!16772 = !DILocation(line: 2103, column: 10, scope: !16759)
!16773 = !DILocation(line: 2103, column: 16, scope: !16759)
!16774 = !DILocation(line: 2104, column: 4, scope: !16759)
!16775 = !DILocation(line: 2107, column: 2, scope: !16726)
!16776 = distinct !DISubprogram(name: "atmel_set_rts", scope: !3, file: !3, line: 2177, type: !16654, scopeLine: 2181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!16777 = !DILocalVariable(name: "dev", arg: 1, scope: !16776, file: !3, line: 2177, type: !495)
!16778 = !DILocation(line: 2177, column: 45, scope: !16776)
!16779 = !DILocalVariable(name: "info", arg: 2, scope: !16776, file: !3, line: 2178, type: !606)
!16780 = !DILocation(line: 2178, column: 29, scope: !16776)
!16781 = !DILocalVariable(name: "vwrq", arg: 3, scope: !16776, file: !3, line: 2179, type: !16656)
!16782 = !DILocation(line: 2179, column: 22, scope: !16776)
!16783 = !DILocalVariable(name: "extra", arg: 4, scope: !16776, file: !3, line: 2180, type: !676)
!16784 = !DILocation(line: 2180, column: 11, scope: !16776)
!16785 = !DILocalVariable(name: "priv", scope: !16776, file: !3, line: 2182, type: !8587)
!16786 = !DILocation(line: 2182, column: 24, scope: !16776)
!16787 = !DILocation(line: 2182, column: 43, scope: !16776)
!16788 = !DILocation(line: 2182, column: 31, scope: !16776)
!16789 = !DILocalVariable(name: "rthr", scope: !16776, file: !3, line: 2183, type: !7)
!16790 = !DILocation(line: 2183, column: 6, scope: !16776)
!16791 = !DILocation(line: 2183, column: 13, scope: !16776)
!16792 = !DILocation(line: 2183, column: 19, scope: !16776)
!16793 = !DILocation(line: 2185, column: 6, scope: !16794)
!16794 = distinct !DILexicalBlock(scope: !16776, file: !3, line: 2185, column: 6)
!16795 = !DILocation(line: 2185, column: 12, scope: !16794)
!16796 = !DILocation(line: 2185, column: 6, scope: !16776)
!16797 = !DILocation(line: 2186, column: 8, scope: !16794)
!16798 = !DILocation(line: 2186, column: 3, scope: !16794)
!16799 = !DILocation(line: 2187, column: 7, scope: !16800)
!16800 = distinct !DILexicalBlock(scope: !16776, file: !3, line: 2187, column: 6)
!16801 = !DILocation(line: 2187, column: 12, scope: !16800)
!16802 = !DILocation(line: 2187, column: 17, scope: !16800)
!16803 = !DILocation(line: 2187, column: 21, scope: !16800)
!16804 = !DILocation(line: 2187, column: 26, scope: !16800)
!16805 = !DILocation(line: 2187, column: 6, scope: !16776)
!16806 = !DILocation(line: 2188, column: 3, scope: !16807)
!16807 = distinct !DILexicalBlock(scope: !16800, file: !3, line: 2187, column: 35)
!16808 = !DILocation(line: 2190, column: 24, scope: !16776)
!16809 = !DILocation(line: 2190, column: 2, scope: !16776)
!16810 = !DILocation(line: 2190, column: 8, scope: !16776)
!16811 = !DILocation(line: 2190, column: 22, scope: !16776)
!16812 = !DILocation(line: 2192, column: 2, scope: !16776)
!16813 = !DILocation(line: 2193, column: 1, scope: !16776)
!16814 = distinct !DISubprogram(name: "atmel_get_rts", scope: !3, file: !3, line: 2195, type: !16654, scopeLine: 2199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!16815 = !DILocalVariable(name: "dev", arg: 1, scope: !16814, file: !3, line: 2195, type: !495)
!16816 = !DILocation(line: 2195, column: 45, scope: !16814)
!16817 = !DILocalVariable(name: "info", arg: 2, scope: !16814, file: !3, line: 2196, type: !606)
!16818 = !DILocation(line: 2196, column: 29, scope: !16814)
!16819 = !DILocalVariable(name: "vwrq", arg: 3, scope: !16814, file: !3, line: 2197, type: !16656)
!16820 = !DILocation(line: 2197, column: 22, scope: !16814)
!16821 = !DILocalVariable(name: "extra", arg: 4, scope: !16814, file: !3, line: 2198, type: !676)
!16822 = !DILocation(line: 2198, column: 11, scope: !16814)
!16823 = !DILocalVariable(name: "priv", scope: !16814, file: !3, line: 2200, type: !8587)
!16824 = !DILocation(line: 2200, column: 24, scope: !16814)
!16825 = !DILocation(line: 2200, column: 43, scope: !16814)
!16826 = !DILocation(line: 2200, column: 31, scope: !16814)
!16827 = !DILocation(line: 2202, column: 16, scope: !16814)
!16828 = !DILocation(line: 2202, column: 22, scope: !16814)
!16829 = !DILocation(line: 2202, column: 2, scope: !16814)
!16830 = !DILocation(line: 2202, column: 8, scope: !16814)
!16831 = !DILocation(line: 2202, column: 14, scope: !16814)
!16832 = !DILocation(line: 2203, column: 20, scope: !16814)
!16833 = !DILocation(line: 2203, column: 26, scope: !16814)
!16834 = !DILocation(line: 2203, column: 32, scope: !16814)
!16835 = !DILocation(line: 2203, column: 19, scope: !16814)
!16836 = !DILocation(line: 2203, column: 2, scope: !16814)
!16837 = !DILocation(line: 2203, column: 8, scope: !16814)
!16838 = !DILocation(line: 2203, column: 17, scope: !16814)
!16839 = !DILocation(line: 2204, column: 2, scope: !16814)
!16840 = !DILocation(line: 2204, column: 8, scope: !16814)
!16841 = !DILocation(line: 2204, column: 14, scope: !16814)
!16842 = !DILocation(line: 2206, column: 2, scope: !16814)
!16843 = distinct !DISubprogram(name: "atmel_set_frag", scope: !3, file: !3, line: 2209, type: !16654, scopeLine: 2213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!16844 = !DILocalVariable(name: "dev", arg: 1, scope: !16843, file: !3, line: 2209, type: !495)
!16845 = !DILocation(line: 2209, column: 46, scope: !16843)
!16846 = !DILocalVariable(name: "info", arg: 2, scope: !16843, file: !3, line: 2210, type: !606)
!16847 = !DILocation(line: 2210, column: 30, scope: !16843)
!16848 = !DILocalVariable(name: "vwrq", arg: 3, scope: !16843, file: !3, line: 2211, type: !16656)
!16849 = !DILocation(line: 2211, column: 23, scope: !16843)
!16850 = !DILocalVariable(name: "extra", arg: 4, scope: !16843, file: !3, line: 2212, type: !676)
!16851 = !DILocation(line: 2212, column: 12, scope: !16843)
!16852 = !DILocalVariable(name: "priv", scope: !16843, file: !3, line: 2214, type: !8587)
!16853 = !DILocation(line: 2214, column: 24, scope: !16843)
!16854 = !DILocation(line: 2214, column: 43, scope: !16843)
!16855 = !DILocation(line: 2214, column: 31, scope: !16843)
!16856 = !DILocalVariable(name: "fthr", scope: !16843, file: !3, line: 2215, type: !7)
!16857 = !DILocation(line: 2215, column: 6, scope: !16843)
!16858 = !DILocation(line: 2215, column: 13, scope: !16843)
!16859 = !DILocation(line: 2215, column: 19, scope: !16843)
!16860 = !DILocation(line: 2217, column: 6, scope: !16861)
!16861 = distinct !DILexicalBlock(scope: !16843, file: !3, line: 2217, column: 6)
!16862 = !DILocation(line: 2217, column: 12, scope: !16861)
!16863 = !DILocation(line: 2217, column: 6, scope: !16843)
!16864 = !DILocation(line: 2218, column: 8, scope: !16861)
!16865 = !DILocation(line: 2218, column: 3, scope: !16861)
!16866 = !DILocation(line: 2219, column: 7, scope: !16867)
!16867 = distinct !DILexicalBlock(scope: !16843, file: !3, line: 2219, column: 6)
!16868 = !DILocation(line: 2219, column: 12, scope: !16867)
!16869 = !DILocation(line: 2219, column: 19, scope: !16867)
!16870 = !DILocation(line: 2219, column: 23, scope: !16867)
!16871 = !DILocation(line: 2219, column: 28, scope: !16867)
!16872 = !DILocation(line: 2219, column: 6, scope: !16843)
!16873 = !DILocation(line: 2220, column: 3, scope: !16874)
!16874 = distinct !DILexicalBlock(scope: !16867, file: !3, line: 2219, column: 37)
!16875 = !DILocation(line: 2222, column: 7, scope: !16843)
!16876 = !DILocation(line: 2223, column: 25, scope: !16843)
!16877 = !DILocation(line: 2223, column: 2, scope: !16843)
!16878 = !DILocation(line: 2223, column: 8, scope: !16843)
!16879 = !DILocation(line: 2223, column: 23, scope: !16843)
!16880 = !DILocation(line: 2225, column: 2, scope: !16843)
!16881 = !DILocation(line: 2226, column: 1, scope: !16843)
!16882 = distinct !DISubprogram(name: "atmel_get_frag", scope: !3, file: !3, line: 2228, type: !16654, scopeLine: 2232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!16883 = !DILocalVariable(name: "dev", arg: 1, scope: !16882, file: !3, line: 2228, type: !495)
!16884 = !DILocation(line: 2228, column: 46, scope: !16882)
!16885 = !DILocalVariable(name: "info", arg: 2, scope: !16882, file: !3, line: 2229, type: !606)
!16886 = !DILocation(line: 2229, column: 30, scope: !16882)
!16887 = !DILocalVariable(name: "vwrq", arg: 3, scope: !16882, file: !3, line: 2230, type: !16656)
!16888 = !DILocation(line: 2230, column: 23, scope: !16882)
!16889 = !DILocalVariable(name: "extra", arg: 4, scope: !16882, file: !3, line: 2231, type: !676)
!16890 = !DILocation(line: 2231, column: 12, scope: !16882)
!16891 = !DILocalVariable(name: "priv", scope: !16882, file: !3, line: 2233, type: !8587)
!16892 = !DILocation(line: 2233, column: 24, scope: !16882)
!16893 = !DILocation(line: 2233, column: 43, scope: !16882)
!16894 = !DILocation(line: 2233, column: 31, scope: !16882)
!16895 = !DILocation(line: 2235, column: 16, scope: !16882)
!16896 = !DILocation(line: 2235, column: 22, scope: !16882)
!16897 = !DILocation(line: 2235, column: 2, scope: !16882)
!16898 = !DILocation(line: 2235, column: 8, scope: !16882)
!16899 = !DILocation(line: 2235, column: 14, scope: !16882)
!16900 = !DILocation(line: 2236, column: 20, scope: !16882)
!16901 = !DILocation(line: 2236, column: 26, scope: !16882)
!16902 = !DILocation(line: 2236, column: 32, scope: !16882)
!16903 = !DILocation(line: 2236, column: 19, scope: !16882)
!16904 = !DILocation(line: 2236, column: 2, scope: !16882)
!16905 = !DILocation(line: 2236, column: 8, scope: !16882)
!16906 = !DILocation(line: 2236, column: 17, scope: !16882)
!16907 = !DILocation(line: 2237, column: 2, scope: !16882)
!16908 = !DILocation(line: 2237, column: 8, scope: !16882)
!16909 = !DILocation(line: 2237, column: 14, scope: !16882)
!16910 = !DILocation(line: 2239, column: 2, scope: !16882)
!16911 = distinct !DISubprogram(name: "atmel_set_retry", scope: !3, file: !3, line: 2131, type: !16654, scopeLine: 2135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!16912 = !DILocalVariable(name: "dev", arg: 1, scope: !16911, file: !3, line: 2131, type: !495)
!16913 = !DILocation(line: 2131, column: 47, scope: !16911)
!16914 = !DILocalVariable(name: "info", arg: 2, scope: !16911, file: !3, line: 2132, type: !606)
!16915 = !DILocation(line: 2132, column: 31, scope: !16911)
!16916 = !DILocalVariable(name: "vwrq", arg: 3, scope: !16911, file: !3, line: 2133, type: !16656)
!16917 = !DILocation(line: 2133, column: 24, scope: !16911)
!16918 = !DILocalVariable(name: "extra", arg: 4, scope: !16911, file: !3, line: 2134, type: !676)
!16919 = !DILocation(line: 2134, column: 13, scope: !16911)
!16920 = !DILocalVariable(name: "priv", scope: !16911, file: !3, line: 2136, type: !8587)
!16921 = !DILocation(line: 2136, column: 24, scope: !16911)
!16922 = !DILocation(line: 2136, column: 43, scope: !16911)
!16923 = !DILocation(line: 2136, column: 31, scope: !16911)
!16924 = !DILocation(line: 2138, column: 7, scope: !16925)
!16925 = distinct !DILexicalBlock(scope: !16911, file: !3, line: 2138, column: 6)
!16926 = !DILocation(line: 2138, column: 13, scope: !16925)
!16927 = !DILocation(line: 2138, column: 22, scope: !16925)
!16928 = !DILocation(line: 2138, column: 26, scope: !16925)
!16929 = !DILocation(line: 2138, column: 32, scope: !16925)
!16930 = !DILocation(line: 2138, column: 38, scope: !16925)
!16931 = !DILocation(line: 2138, column: 6, scope: !16911)
!16932 = !DILocation(line: 2139, column: 7, scope: !16933)
!16933 = distinct !DILexicalBlock(scope: !16934, file: !3, line: 2139, column: 7)
!16934 = distinct !DILexicalBlock(scope: !16925, file: !3, line: 2138, column: 57)
!16935 = !DILocation(line: 2139, column: 13, scope: !16933)
!16936 = !DILocation(line: 2139, column: 19, scope: !16933)
!16937 = !DILocation(line: 2139, column: 7, scope: !16934)
!16938 = !DILocation(line: 2140, column: 23, scope: !16933)
!16939 = !DILocation(line: 2140, column: 29, scope: !16933)
!16940 = !DILocation(line: 2140, column: 4, scope: !16933)
!16941 = !DILocation(line: 2140, column: 10, scope: !16933)
!16942 = !DILocation(line: 2140, column: 21, scope: !16933)
!16943 = !DILocation(line: 2141, column: 12, scope: !16944)
!16944 = distinct !DILexicalBlock(scope: !16933, file: !3, line: 2141, column: 12)
!16945 = !DILocation(line: 2141, column: 18, scope: !16944)
!16946 = !DILocation(line: 2141, column: 24, scope: !16944)
!16947 = !DILocation(line: 2141, column: 12, scope: !16933)
!16948 = !DILocation(line: 2142, column: 24, scope: !16944)
!16949 = !DILocation(line: 2142, column: 30, scope: !16944)
!16950 = !DILocation(line: 2142, column: 4, scope: !16944)
!16951 = !DILocation(line: 2142, column: 10, scope: !16944)
!16952 = !DILocation(line: 2142, column: 22, scope: !16944)
!16953 = !DILocation(line: 2145, column: 23, scope: !16954)
!16954 = distinct !DILexicalBlock(scope: !16944, file: !3, line: 2143, column: 8)
!16955 = !DILocation(line: 2145, column: 29, scope: !16954)
!16956 = !DILocation(line: 2145, column: 4, scope: !16954)
!16957 = !DILocation(line: 2145, column: 10, scope: !16954)
!16958 = !DILocation(line: 2145, column: 21, scope: !16954)
!16959 = !DILocation(line: 2146, column: 24, scope: !16954)
!16960 = !DILocation(line: 2146, column: 30, scope: !16954)
!16961 = !DILocation(line: 2146, column: 4, scope: !16954)
!16962 = !DILocation(line: 2146, column: 10, scope: !16954)
!16963 = !DILocation(line: 2146, column: 22, scope: !16954)
!16964 = !DILocation(line: 2148, column: 3, scope: !16934)
!16965 = !DILocation(line: 2151, column: 2, scope: !16911)
!16966 = !DILocation(line: 2152, column: 1, scope: !16911)
!16967 = distinct !DISubprogram(name: "atmel_get_retry", scope: !3, file: !3, line: 2154, type: !16654, scopeLine: 2158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!16968 = !DILocalVariable(name: "dev", arg: 1, scope: !16967, file: !3, line: 2154, type: !495)
!16969 = !DILocation(line: 2154, column: 47, scope: !16967)
!16970 = !DILocalVariable(name: "info", arg: 2, scope: !16967, file: !3, line: 2155, type: !606)
!16971 = !DILocation(line: 2155, column: 31, scope: !16967)
!16972 = !DILocalVariable(name: "vwrq", arg: 3, scope: !16967, file: !3, line: 2156, type: !16656)
!16973 = !DILocation(line: 2156, column: 24, scope: !16967)
!16974 = !DILocalVariable(name: "extra", arg: 4, scope: !16967, file: !3, line: 2157, type: !676)
!16975 = !DILocation(line: 2157, column: 13, scope: !16967)
!16976 = !DILocalVariable(name: "priv", scope: !16967, file: !3, line: 2159, type: !8587)
!16977 = !DILocation(line: 2159, column: 24, scope: !16967)
!16978 = !DILocation(line: 2159, column: 43, scope: !16967)
!16979 = !DILocation(line: 2159, column: 31, scope: !16967)
!16980 = !DILocation(line: 2161, column: 2, scope: !16967)
!16981 = !DILocation(line: 2161, column: 8, scope: !16967)
!16982 = !DILocation(line: 2161, column: 17, scope: !16967)
!16983 = !DILocation(line: 2164, column: 6, scope: !16984)
!16984 = distinct !DILexicalBlock(scope: !16967, file: !3, line: 2164, column: 6)
!16985 = !DILocation(line: 2164, column: 12, scope: !16984)
!16986 = !DILocation(line: 2164, column: 18, scope: !16984)
!16987 = !DILocation(line: 2164, column: 6, scope: !16967)
!16988 = !DILocation(line: 2165, column: 3, scope: !16989)
!16989 = distinct !DILexicalBlock(scope: !16984, file: !3, line: 2164, column: 35)
!16990 = !DILocation(line: 2165, column: 9, scope: !16989)
!16991 = !DILocation(line: 2165, column: 15, scope: !16989)
!16992 = !DILocation(line: 2166, column: 17, scope: !16989)
!16993 = !DILocation(line: 2166, column: 23, scope: !16989)
!16994 = !DILocation(line: 2166, column: 3, scope: !16989)
!16995 = !DILocation(line: 2166, column: 9, scope: !16989)
!16996 = !DILocation(line: 2166, column: 15, scope: !16989)
!16997 = !DILocation(line: 2167, column: 2, scope: !16989)
!16998 = !DILocation(line: 2168, column: 3, scope: !16999)
!16999 = distinct !DILexicalBlock(scope: !16984, file: !3, line: 2167, column: 9)
!17000 = !DILocation(line: 2168, column: 9, scope: !16999)
!17001 = !DILocation(line: 2168, column: 15, scope: !16999)
!17002 = !DILocation(line: 2169, column: 17, scope: !16999)
!17003 = !DILocation(line: 2169, column: 23, scope: !16999)
!17004 = !DILocation(line: 2169, column: 3, scope: !16999)
!17005 = !DILocation(line: 2169, column: 9, scope: !16999)
!17006 = !DILocation(line: 2169, column: 15, scope: !16999)
!17007 = !DILocation(line: 2170, column: 7, scope: !17008)
!17008 = distinct !DILexicalBlock(scope: !16999, file: !3, line: 2170, column: 7)
!17009 = !DILocation(line: 2170, column: 13, scope: !17008)
!17010 = !DILocation(line: 2170, column: 27, scope: !17008)
!17011 = !DILocation(line: 2170, column: 33, scope: !17008)
!17012 = !DILocation(line: 2170, column: 24, scope: !17008)
!17013 = !DILocation(line: 2170, column: 7, scope: !16999)
!17014 = !DILocation(line: 2171, column: 4, scope: !17008)
!17015 = !DILocation(line: 2171, column: 10, scope: !17008)
!17016 = !DILocation(line: 2171, column: 16, scope: !17008)
!17017 = !DILocation(line: 2174, column: 2, scope: !16967)
!17018 = distinct !DISubprogram(name: "atmel_set_encode", scope: !3, file: !3, line: 1706, type: !15842, scopeLine: 1710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!17019 = !DILocalVariable(name: "dev", arg: 1, scope: !17018, file: !3, line: 1706, type: !495)
!17020 = !DILocation(line: 1706, column: 48, scope: !17018)
!17021 = !DILocalVariable(name: "info", arg: 2, scope: !17018, file: !3, line: 1707, type: !606)
!17022 = !DILocation(line: 1707, column: 32, scope: !17018)
!17023 = !DILocalVariable(name: "dwrq", arg: 3, scope: !17018, file: !3, line: 1708, type: !15844)
!17024 = !DILocation(line: 1708, column: 25, scope: !17018)
!17025 = !DILocalVariable(name: "extra", arg: 4, scope: !17018, file: !3, line: 1709, type: !676)
!17026 = !DILocation(line: 1709, column: 14, scope: !17018)
!17027 = !DILocalVariable(name: "priv", scope: !17018, file: !3, line: 1711, type: !8587)
!17028 = !DILocation(line: 1711, column: 24, scope: !17018)
!17029 = !DILocation(line: 1711, column: 43, scope: !17018)
!17030 = !DILocation(line: 1711, column: 31, scope: !17018)
!17031 = !DILocation(line: 1719, column: 6, scope: !17032)
!17032 = distinct !DILexicalBlock(scope: !17018, file: !3, line: 1719, column: 6)
!17033 = !DILocation(line: 1719, column: 12, scope: !17032)
!17034 = !DILocation(line: 1719, column: 19, scope: !17032)
!17035 = !DILocation(line: 1719, column: 6, scope: !17018)
!17036 = !DILocalVariable(name: "index", scope: !17037, file: !3, line: 1720, type: !7)
!17037 = distinct !DILexicalBlock(scope: !17032, file: !3, line: 1719, column: 24)
!17038 = !DILocation(line: 1720, column: 7, scope: !17037)
!17039 = !DILocation(line: 1720, column: 16, scope: !17037)
!17040 = !DILocation(line: 1720, column: 22, scope: !17037)
!17041 = !DILocation(line: 1720, column: 28, scope: !17037)
!17042 = !DILocation(line: 1720, column: 47, scope: !17037)
!17043 = !DILocalVariable(name: "current_index", scope: !17037, file: !3, line: 1721, type: !7)
!17044 = !DILocation(line: 1721, column: 7, scope: !17037)
!17045 = !DILocation(line: 1721, column: 23, scope: !17037)
!17046 = !DILocation(line: 1721, column: 29, scope: !17037)
!17047 = !DILocation(line: 1723, column: 7, scope: !17048)
!17048 = distinct !DILexicalBlock(scope: !17037, file: !3, line: 1723, column: 7)
!17049 = !DILocation(line: 1723, column: 13, scope: !17048)
!17050 = !DILocation(line: 1723, column: 20, scope: !17048)
!17051 = !DILocation(line: 1723, column: 7, scope: !17037)
!17052 = !DILocation(line: 1724, column: 4, scope: !17053)
!17053 = distinct !DILexicalBlock(scope: !17048, file: !3, line: 1723, column: 26)
!17054 = !DILocation(line: 1727, column: 7, scope: !17055)
!17055 = distinct !DILexicalBlock(scope: !17037, file: !3, line: 1727, column: 7)
!17056 = !DILocation(line: 1727, column: 13, scope: !17055)
!17057 = !DILocation(line: 1727, column: 17, scope: !17055)
!17058 = !DILocation(line: 1727, column: 20, scope: !17055)
!17059 = !DILocation(line: 1727, column: 26, scope: !17055)
!17060 = !DILocation(line: 1727, column: 7, scope: !17037)
!17061 = !DILocation(line: 1728, column: 12, scope: !17055)
!17062 = !DILocation(line: 1728, column: 10, scope: !17055)
!17063 = !DILocation(line: 1728, column: 4, scope: !17055)
!17064 = !DILocation(line: 1730, column: 24, scope: !17055)
!17065 = !DILocation(line: 1730, column: 4, scope: !17055)
!17066 = !DILocation(line: 1730, column: 10, scope: !17055)
!17067 = !DILocation(line: 1730, column: 22, scope: !17055)
!17068 = !DILocation(line: 1732, column: 7, scope: !17069)
!17069 = distinct !DILexicalBlock(scope: !17037, file: !3, line: 1732, column: 7)
!17070 = !DILocation(line: 1732, column: 13, scope: !17069)
!17071 = !DILocation(line: 1732, column: 20, scope: !17069)
!17072 = !DILocation(line: 1732, column: 7, scope: !17037)
!17073 = !DILocation(line: 1733, column: 4, scope: !17069)
!17074 = !DILocation(line: 1733, column: 10, scope: !17069)
!17075 = !DILocation(line: 1733, column: 22, scope: !17069)
!17076 = !DILocation(line: 1733, column: 29, scope: !17069)
!17077 = !DILocation(line: 1735, column: 8, scope: !17078)
!17078 = distinct !DILexicalBlock(scope: !17069, file: !3, line: 1735, column: 8)
!17079 = !DILocation(line: 1735, column: 14, scope: !17078)
!17080 = !DILocation(line: 1735, column: 21, scope: !17078)
!17081 = !DILocation(line: 1735, column: 8, scope: !17069)
!17082 = !DILocation(line: 1736, column: 5, scope: !17078)
!17083 = !DILocation(line: 1736, column: 11, scope: !17078)
!17084 = !DILocation(line: 1736, column: 23, scope: !17078)
!17085 = !DILocation(line: 1736, column: 30, scope: !17078)
!17086 = !DILocation(line: 1739, column: 5, scope: !17078)
!17087 = !DILocation(line: 1739, column: 11, scope: !17078)
!17088 = !DILocation(line: 1739, column: 23, scope: !17078)
!17089 = !DILocation(line: 1739, column: 30, scope: !17078)
!17090 = !DILocation(line: 1741, column: 9, scope: !17091)
!17091 = distinct !DILexicalBlock(scope: !17037, file: !3, line: 1741, column: 7)
!17092 = !DILocation(line: 1741, column: 15, scope: !17091)
!17093 = !DILocation(line: 1741, column: 21, scope: !17091)
!17094 = !DILocation(line: 1741, column: 7, scope: !17037)
!17095 = !DILocation(line: 1743, column: 11, scope: !17096)
!17096 = distinct !DILexicalBlock(scope: !17091, file: !3, line: 1741, column: 41)
!17097 = !DILocation(line: 1743, column: 17, scope: !17096)
!17098 = !DILocation(line: 1743, column: 26, scope: !17096)
!17099 = !DILocation(line: 1743, column: 4, scope: !17096)
!17100 = !DILocation(line: 1745, column: 11, scope: !17096)
!17101 = !DILocation(line: 1745, column: 17, scope: !17096)
!17102 = !DILocation(line: 1745, column: 26, scope: !17096)
!17103 = !DILocation(line: 1745, column: 4, scope: !17096)
!17104 = !DILocation(line: 1745, column: 34, scope: !17096)
!17105 = !DILocation(line: 1745, column: 41, scope: !17096)
!17106 = !DILocation(line: 1745, column: 47, scope: !17096)
!17107 = !DILocation(line: 1746, column: 3, scope: !17096)
!17108 = !DILocation(line: 1750, column: 7, scope: !17109)
!17109 = distinct !DILexicalBlock(scope: !17037, file: !3, line: 1750, column: 7)
!17110 = !DILocation(line: 1750, column: 16, scope: !17109)
!17111 = !DILocation(line: 1750, column: 13, scope: !17109)
!17112 = !DILocation(line: 1750, column: 30, scope: !17109)
!17113 = !DILocation(line: 1751, column: 7, scope: !17109)
!17114 = !DILocation(line: 1751, column: 13, scope: !17109)
!17115 = !DILocation(line: 1751, column: 25, scope: !17109)
!17116 = !DILocation(line: 1751, column: 32, scope: !17109)
!17117 = !DILocation(line: 1750, column: 7, scope: !17037)
!17118 = !DILocation(line: 1752, column: 4, scope: !17119)
!17119 = distinct !DILexicalBlock(scope: !17109, file: !3, line: 1751, column: 37)
!17120 = !DILocation(line: 1752, column: 10, scope: !17119)
!17121 = !DILocation(line: 1752, column: 20, scope: !17119)
!17122 = !DILocation(line: 1753, column: 4, scope: !17119)
!17123 = !DILocation(line: 1753, column: 10, scope: !17119)
!17124 = !DILocation(line: 1753, column: 30, scope: !17119)
!17125 = !DILocation(line: 1754, column: 8, scope: !17126)
!17126 = distinct !DILexicalBlock(scope: !17119, file: !3, line: 1754, column: 8)
!17127 = !DILocation(line: 1754, column: 14, scope: !17126)
!17128 = !DILocation(line: 1754, column: 26, scope: !17126)
!17129 = !DILocation(line: 1754, column: 33, scope: !17126)
!17130 = !DILocation(line: 1754, column: 8, scope: !17119)
!17131 = !DILocation(line: 1755, column: 5, scope: !17132)
!17132 = distinct !DILexicalBlock(scope: !17126, file: !3, line: 1754, column: 38)
!17133 = !DILocation(line: 1755, column: 11, scope: !17132)
!17134 = !DILocation(line: 1755, column: 33, scope: !17132)
!17135 = !DILocation(line: 1756, column: 5, scope: !17132)
!17136 = !DILocation(line: 1756, column: 11, scope: !17132)
!17137 = !DILocation(line: 1756, column: 28, scope: !17132)
!17138 = !DILocation(line: 1757, column: 4, scope: !17132)
!17139 = !DILocation(line: 1758, column: 5, scope: !17140)
!17140 = distinct !DILexicalBlock(scope: !17126, file: !3, line: 1757, column: 11)
!17141 = !DILocation(line: 1758, column: 11, scope: !17140)
!17142 = !DILocation(line: 1758, column: 33, scope: !17140)
!17143 = !DILocation(line: 1759, column: 5, scope: !17140)
!17144 = !DILocation(line: 1759, column: 11, scope: !17140)
!17145 = !DILocation(line: 1759, column: 28, scope: !17140)
!17146 = !DILocation(line: 1761, column: 3, scope: !17119)
!17147 = !DILocation(line: 1762, column: 2, scope: !17037)
!17148 = !DILocalVariable(name: "index", scope: !17149, file: !3, line: 1764, type: !7)
!17149 = distinct !DILexicalBlock(scope: !17032, file: !3, line: 1762, column: 9)
!17150 = !DILocation(line: 1764, column: 7, scope: !17149)
!17151 = !DILocation(line: 1764, column: 16, scope: !17149)
!17152 = !DILocation(line: 1764, column: 22, scope: !17149)
!17153 = !DILocation(line: 1764, column: 28, scope: !17149)
!17154 = !DILocation(line: 1764, column: 47, scope: !17149)
!17155 = !DILocation(line: 1765, column: 7, scope: !17156)
!17156 = distinct !DILexicalBlock(scope: !17149, file: !3, line: 1765, column: 7)
!17157 = !DILocation(line: 1765, column: 13, scope: !17156)
!17158 = !DILocation(line: 1765, column: 18, scope: !17156)
!17159 = !DILocation(line: 1765, column: 21, scope: !17156)
!17160 = !DILocation(line: 1765, column: 27, scope: !17156)
!17161 = !DILocation(line: 1765, column: 7, scope: !17149)
!17162 = !DILocation(line: 1766, column: 24, scope: !17163)
!17163 = distinct !DILexicalBlock(scope: !17156, file: !3, line: 1765, column: 32)
!17164 = !DILocation(line: 1766, column: 4, scope: !17163)
!17165 = !DILocation(line: 1766, column: 10, scope: !17163)
!17166 = !DILocation(line: 1766, column: 22, scope: !17163)
!17167 = !DILocation(line: 1767, column: 3, scope: !17163)
!17168 = !DILocation(line: 1769, column: 10, scope: !17169)
!17169 = distinct !DILexicalBlock(scope: !17156, file: !3, line: 1769, column: 8)
!17170 = !DILocation(line: 1769, column: 16, scope: !17169)
!17171 = !DILocation(line: 1769, column: 22, scope: !17169)
!17172 = !DILocation(line: 1769, column: 8, scope: !17156)
!17173 = !DILocation(line: 1770, column: 5, scope: !17169)
!17174 = !DILocation(line: 1773, column: 6, scope: !17175)
!17175 = distinct !DILexicalBlock(scope: !17018, file: !3, line: 1773, column: 6)
!17176 = !DILocation(line: 1773, column: 12, scope: !17175)
!17177 = !DILocation(line: 1773, column: 18, scope: !17175)
!17178 = !DILocation(line: 1773, column: 6, scope: !17018)
!17179 = !DILocation(line: 1774, column: 3, scope: !17180)
!17180 = distinct !DILexicalBlock(scope: !17175, file: !3, line: 1773, column: 40)
!17181 = !DILocation(line: 1774, column: 9, scope: !17180)
!17182 = !DILocation(line: 1774, column: 19, scope: !17180)
!17183 = !DILocation(line: 1775, column: 3, scope: !17180)
!17184 = !DILocation(line: 1775, column: 9, scope: !17180)
!17185 = !DILocation(line: 1775, column: 26, scope: !17180)
!17186 = !DILocation(line: 1776, column: 3, scope: !17180)
!17187 = !DILocation(line: 1776, column: 9, scope: !17180)
!17188 = !DILocation(line: 1776, column: 31, scope: !17180)
!17189 = !DILocation(line: 1777, column: 2, scope: !17180)
!17190 = !DILocation(line: 1778, column: 3, scope: !17191)
!17191 = distinct !DILexicalBlock(scope: !17175, file: !3, line: 1777, column: 9)
!17192 = !DILocation(line: 1778, column: 9, scope: !17191)
!17193 = !DILocation(line: 1778, column: 19, scope: !17191)
!17194 = !DILocation(line: 1779, column: 7, scope: !17195)
!17195 = distinct !DILexicalBlock(scope: !17191, file: !3, line: 1779, column: 7)
!17196 = !DILocation(line: 1779, column: 13, scope: !17195)
!17197 = !DILocation(line: 1779, column: 25, scope: !17195)
!17198 = !DILocation(line: 1779, column: 31, scope: !17195)
!17199 = !DILocation(line: 1779, column: 44, scope: !17195)
!17200 = !DILocation(line: 1779, column: 7, scope: !17191)
!17201 = !DILocation(line: 1780, column: 4, scope: !17202)
!17202 = distinct !DILexicalBlock(scope: !17195, file: !3, line: 1779, column: 49)
!17203 = !DILocation(line: 1780, column: 10, scope: !17202)
!17204 = !DILocation(line: 1780, column: 32, scope: !17202)
!17205 = !DILocation(line: 1781, column: 4, scope: !17202)
!17206 = !DILocation(line: 1781, column: 10, scope: !17202)
!17207 = !DILocation(line: 1781, column: 27, scope: !17202)
!17208 = !DILocation(line: 1782, column: 3, scope: !17202)
!17209 = !DILocation(line: 1783, column: 4, scope: !17210)
!17210 = distinct !DILexicalBlock(scope: !17195, file: !3, line: 1782, column: 10)
!17211 = !DILocation(line: 1783, column: 10, scope: !17210)
!17212 = !DILocation(line: 1783, column: 32, scope: !17210)
!17213 = !DILocation(line: 1784, column: 4, scope: !17210)
!17214 = !DILocation(line: 1784, column: 10, scope: !17210)
!17215 = !DILocation(line: 1784, column: 27, scope: !17210)
!17216 = !DILocation(line: 1787, column: 6, scope: !17217)
!17217 = distinct !DILexicalBlock(scope: !17018, file: !3, line: 1787, column: 6)
!17218 = !DILocation(line: 1787, column: 12, scope: !17217)
!17219 = !DILocation(line: 1787, column: 18, scope: !17217)
!17220 = !DILocation(line: 1787, column: 6, scope: !17018)
!17221 = !DILocation(line: 1788, column: 3, scope: !17217)
!17222 = !DILocation(line: 1788, column: 9, scope: !17217)
!17223 = !DILocation(line: 1788, column: 29, scope: !17217)
!17224 = !DILocation(line: 1789, column: 6, scope: !17225)
!17225 = distinct !DILexicalBlock(scope: !17018, file: !3, line: 1789, column: 6)
!17226 = !DILocation(line: 1789, column: 12, scope: !17225)
!17227 = !DILocation(line: 1789, column: 18, scope: !17225)
!17228 = !DILocation(line: 1789, column: 6, scope: !17018)
!17229 = !DILocation(line: 1790, column: 3, scope: !17225)
!17230 = !DILocation(line: 1790, column: 9, scope: !17225)
!17231 = !DILocation(line: 1790, column: 29, scope: !17225)
!17232 = !DILocation(line: 1792, column: 2, scope: !17018)
!17233 = !DILocation(line: 1793, column: 1, scope: !17018)
!17234 = distinct !DISubprogram(name: "atmel_get_encode", scope: !3, file: !3, line: 1795, type: !15842, scopeLine: 1799, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!17235 = !DILocalVariable(name: "dev", arg: 1, scope: !17234, file: !3, line: 1795, type: !495)
!17236 = !DILocation(line: 1795, column: 48, scope: !17234)
!17237 = !DILocalVariable(name: "info", arg: 2, scope: !17234, file: !3, line: 1796, type: !606)
!17238 = !DILocation(line: 1796, column: 32, scope: !17234)
!17239 = !DILocalVariable(name: "dwrq", arg: 3, scope: !17234, file: !3, line: 1797, type: !15844)
!17240 = !DILocation(line: 1797, column: 25, scope: !17234)
!17241 = !DILocalVariable(name: "extra", arg: 4, scope: !17234, file: !3, line: 1798, type: !676)
!17242 = !DILocation(line: 1798, column: 14, scope: !17234)
!17243 = !DILocalVariable(name: "priv", scope: !17234, file: !3, line: 1800, type: !8587)
!17244 = !DILocation(line: 1800, column: 24, scope: !17234)
!17245 = !DILocation(line: 1800, column: 43, scope: !17234)
!17246 = !DILocation(line: 1800, column: 31, scope: !17234)
!17247 = !DILocalVariable(name: "index", scope: !17234, file: !3, line: 1801, type: !7)
!17248 = !DILocation(line: 1801, column: 6, scope: !17234)
!17249 = !DILocation(line: 1801, column: 15, scope: !17234)
!17250 = !DILocation(line: 1801, column: 21, scope: !17234)
!17251 = !DILocation(line: 1801, column: 27, scope: !17234)
!17252 = !DILocation(line: 1801, column: 46, scope: !17234)
!17253 = !DILocation(line: 1803, column: 7, scope: !17254)
!17254 = distinct !DILexicalBlock(scope: !17234, file: !3, line: 1803, column: 6)
!17255 = !DILocation(line: 1803, column: 13, scope: !17254)
!17256 = !DILocation(line: 1803, column: 6, scope: !17234)
!17257 = !DILocation(line: 1804, column: 3, scope: !17254)
!17258 = !DILocation(line: 1804, column: 9, scope: !17254)
!17259 = !DILocation(line: 1804, column: 15, scope: !17254)
!17260 = !DILocation(line: 1806, column: 7, scope: !17261)
!17261 = distinct !DILexicalBlock(scope: !17262, file: !3, line: 1806, column: 7)
!17262 = distinct !DILexicalBlock(scope: !17254, file: !3, line: 1805, column: 7)
!17263 = !DILocation(line: 1806, column: 13, scope: !17261)
!17264 = !DILocation(line: 1806, column: 7, scope: !17262)
!17265 = !DILocation(line: 1807, column: 4, scope: !17261)
!17266 = !DILocation(line: 1807, column: 10, scope: !17261)
!17267 = !DILocation(line: 1807, column: 16, scope: !17261)
!17268 = !DILocation(line: 1809, column: 4, scope: !17261)
!17269 = !DILocation(line: 1809, column: 10, scope: !17261)
!17270 = !DILocation(line: 1809, column: 16, scope: !17261)
!17271 = !DILocation(line: 1812, column: 6, scope: !17272)
!17272 = distinct !DILexicalBlock(scope: !17234, file: !3, line: 1812, column: 6)
!17273 = !DILocation(line: 1812, column: 12, scope: !17272)
!17274 = !DILocation(line: 1812, column: 16, scope: !17272)
!17275 = !DILocation(line: 1812, column: 19, scope: !17272)
!17276 = !DILocation(line: 1812, column: 25, scope: !17272)
!17277 = !DILocation(line: 1812, column: 6, scope: !17234)
!17278 = !DILocation(line: 1813, column: 11, scope: !17272)
!17279 = !DILocation(line: 1813, column: 17, scope: !17272)
!17280 = !DILocation(line: 1813, column: 9, scope: !17272)
!17281 = !DILocation(line: 1813, column: 3, scope: !17272)
!17282 = !DILocation(line: 1814, column: 17, scope: !17234)
!17283 = !DILocation(line: 1814, column: 23, scope: !17234)
!17284 = !DILocation(line: 1814, column: 2, scope: !17234)
!17285 = !DILocation(line: 1814, column: 8, scope: !17234)
!17286 = !DILocation(line: 1814, column: 14, scope: !17234)
!17287 = !DILocation(line: 1816, column: 17, scope: !17234)
!17288 = !DILocation(line: 1816, column: 23, scope: !17234)
!17289 = !DILocation(line: 1816, column: 35, scope: !17234)
!17290 = !DILocation(line: 1816, column: 2, scope: !17234)
!17291 = !DILocation(line: 1816, column: 8, scope: !17234)
!17292 = !DILocation(line: 1816, column: 15, scope: !17234)
!17293 = !DILocation(line: 1817, column: 6, scope: !17294)
!17294 = distinct !DILexicalBlock(scope: !17234, file: !3, line: 1817, column: 6)
!17295 = !DILocation(line: 1817, column: 12, scope: !17294)
!17296 = !DILocation(line: 1817, column: 19, scope: !17294)
!17297 = !DILocation(line: 1817, column: 6, scope: !17234)
!17298 = !DILocation(line: 1818, column: 3, scope: !17299)
!17299 = distinct !DILexicalBlock(scope: !17294, file: !3, line: 1817, column: 25)
!17300 = !DILocation(line: 1818, column: 9, scope: !17299)
!17301 = !DILocation(line: 1818, column: 16, scope: !17299)
!17302 = !DILocation(line: 1819, column: 2, scope: !17299)
!17303 = !DILocation(line: 1820, column: 10, scope: !17304)
!17304 = distinct !DILexicalBlock(scope: !17294, file: !3, line: 1819, column: 9)
!17305 = !DILocation(line: 1820, column: 3, scope: !17304)
!17306 = !DILocation(line: 1821, column: 10, scope: !17304)
!17307 = !DILocation(line: 1821, column: 17, scope: !17304)
!17308 = !DILocation(line: 1821, column: 23, scope: !17304)
!17309 = !DILocation(line: 1821, column: 32, scope: !17304)
!17310 = !DILocation(line: 1821, column: 3, scope: !17304)
!17311 = !DILocation(line: 1821, column: 40, scope: !17304)
!17312 = !DILocation(line: 1821, column: 46, scope: !17304)
!17313 = !DILocation(line: 1824, column: 2, scope: !17234)
!17314 = distinct !DISubprogram(name: "atmel_set_power", scope: !3, file: !3, line: 2110, type: !16654, scopeLine: 2114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!17315 = !DILocalVariable(name: "dev", arg: 1, scope: !17314, file: !3, line: 2110, type: !495)
!17316 = !DILocation(line: 2110, column: 47, scope: !17314)
!17317 = !DILocalVariable(name: "info", arg: 2, scope: !17314, file: !3, line: 2111, type: !606)
!17318 = !DILocation(line: 2111, column: 31, scope: !17314)
!17319 = !DILocalVariable(name: "vwrq", arg: 3, scope: !17314, file: !3, line: 2112, type: !16656)
!17320 = !DILocation(line: 2112, column: 24, scope: !17314)
!17321 = !DILocalVariable(name: "extra", arg: 4, scope: !17314, file: !3, line: 2113, type: !676)
!17322 = !DILocation(line: 2113, column: 13, scope: !17314)
!17323 = !DILocalVariable(name: "priv", scope: !17314, file: !3, line: 2115, type: !8587)
!17324 = !DILocation(line: 2115, column: 24, scope: !17314)
!17325 = !DILocation(line: 2115, column: 43, scope: !17314)
!17326 = !DILocation(line: 2115, column: 31, scope: !17314)
!17327 = !DILocation(line: 2116, column: 21, scope: !17314)
!17328 = !DILocation(line: 2116, column: 27, scope: !17314)
!17329 = !DILocation(line: 2116, column: 2, scope: !17314)
!17330 = !DILocation(line: 2116, column: 8, scope: !17314)
!17331 = !DILocation(line: 2116, column: 19, scope: !17314)
!17332 = !DILocation(line: 2117, column: 2, scope: !17314)
!17333 = distinct !DISubprogram(name: "atmel_get_power", scope: !3, file: !3, line: 2120, type: !16654, scopeLine: 2124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!17334 = !DILocalVariable(name: "dev", arg: 1, scope: !17333, file: !3, line: 2120, type: !495)
!17335 = !DILocation(line: 2120, column: 47, scope: !17333)
!17336 = !DILocalVariable(name: "info", arg: 2, scope: !17333, file: !3, line: 2121, type: !606)
!17337 = !DILocation(line: 2121, column: 31, scope: !17333)
!17338 = !DILocalVariable(name: "vwrq", arg: 3, scope: !17333, file: !3, line: 2122, type: !16656)
!17339 = !DILocation(line: 2122, column: 24, scope: !17333)
!17340 = !DILocalVariable(name: "extra", arg: 4, scope: !17333, file: !3, line: 2123, type: !676)
!17341 = !DILocation(line: 2123, column: 13, scope: !17333)
!17342 = !DILocalVariable(name: "priv", scope: !17333, file: !3, line: 2125, type: !8587)
!17343 = !DILocation(line: 2125, column: 24, scope: !17333)
!17344 = !DILocation(line: 2125, column: 43, scope: !17333)
!17345 = !DILocation(line: 2125, column: 31, scope: !17333)
!17346 = !DILocation(line: 2126, column: 19, scope: !17333)
!17347 = !DILocation(line: 2126, column: 25, scope: !17333)
!17348 = !DILocation(line: 2126, column: 2, scope: !17333)
!17349 = !DILocation(line: 2126, column: 8, scope: !17333)
!17350 = !DILocation(line: 2126, column: 17, scope: !17333)
!17351 = !DILocation(line: 2127, column: 2, scope: !17333)
!17352 = !DILocation(line: 2127, column: 8, scope: !17333)
!17353 = !DILocation(line: 2127, column: 14, scope: !17333)
!17354 = !DILocation(line: 2128, column: 2, scope: !17333)
!17355 = distinct !DISubprogram(name: "atmel_set_auth", scope: !3, file: !3, line: 1930, type: !604, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!17356 = !DILocalVariable(name: "dev", arg: 1, scope: !17355, file: !3, line: 1930, type: !495)
!17357 = !DILocation(line: 1930, column: 46, scope: !17355)
!17358 = !DILocalVariable(name: "info", arg: 2, scope: !17355, file: !3, line: 1931, type: !606)
!17359 = !DILocation(line: 1931, column: 35, scope: !17355)
!17360 = !DILocalVariable(name: "wrqu", arg: 3, scope: !17355, file: !3, line: 1932, type: !613)
!17361 = !DILocation(line: 1932, column: 29, scope: !17355)
!17362 = !DILocalVariable(name: "extra", arg: 4, scope: !17355, file: !3, line: 1932, type: !676)
!17363 = !DILocation(line: 1932, column: 41, scope: !17355)
!17364 = !DILocalVariable(name: "priv", scope: !17355, file: !3, line: 1934, type: !8587)
!17365 = !DILocation(line: 1934, column: 24, scope: !17355)
!17366 = !DILocation(line: 1934, column: 43, scope: !17355)
!17367 = !DILocation(line: 1934, column: 31, scope: !17355)
!17368 = !DILocalVariable(name: "param", scope: !17355, file: !3, line: 1935, type: !16656)
!17369 = !DILocation(line: 1935, column: 19, scope: !17355)
!17370 = !DILocation(line: 1935, column: 28, scope: !17355)
!17371 = !DILocation(line: 1935, column: 34, scope: !17355)
!17372 = !DILocation(line: 1937, column: 10, scope: !17355)
!17373 = !DILocation(line: 1937, column: 17, scope: !17355)
!17374 = !DILocation(line: 1937, column: 23, scope: !17355)
!17375 = !DILocation(line: 1937, column: 2, scope: !17355)
!17376 = !DILocation(line: 1947, column: 3, scope: !17377)
!17377 = distinct !DILexicalBlock(scope: !17355, file: !3, line: 1937, column: 40)
!17378 = !DILocation(line: 1950, column: 31, scope: !17377)
!17379 = !DILocation(line: 1950, column: 38, scope: !17377)
!17380 = !DILocation(line: 1950, column: 3, scope: !17377)
!17381 = !DILocation(line: 1950, column: 9, scope: !17377)
!17382 = !DILocation(line: 1950, column: 29, scope: !17377)
!17383 = !DILocation(line: 1951, column: 3, scope: !17377)
!17384 = !DILocation(line: 1954, column: 8, scope: !17385)
!17385 = distinct !DILexicalBlock(scope: !17386, file: !3, line: 1954, column: 8)
!17386 = distinct !DILexicalBlock(scope: !17377, file: !3, line: 1953, column: 31)
!17387 = !DILocation(line: 1954, column: 15, scope: !17385)
!17388 = !DILocation(line: 1954, column: 21, scope: !17385)
!17389 = !DILocation(line: 1954, column: 8, scope: !17386)
!17390 = !DILocation(line: 1955, column: 5, scope: !17391)
!17391 = distinct !DILexicalBlock(scope: !17385, file: !3, line: 1954, column: 47)
!17392 = !DILocation(line: 1955, column: 11, scope: !17391)
!17393 = !DILocation(line: 1955, column: 31, scope: !17391)
!17394 = !DILocation(line: 1956, column: 4, scope: !17391)
!17395 = !DILocation(line: 1956, column: 15, scope: !17396)
!17396 = distinct !DILexicalBlock(scope: !17385, file: !3, line: 1956, column: 15)
!17397 = !DILocation(line: 1956, column: 22, scope: !17396)
!17398 = !DILocation(line: 1956, column: 28, scope: !17396)
!17399 = !DILocation(line: 1956, column: 15, scope: !17385)
!17400 = !DILocation(line: 1957, column: 5, scope: !17401)
!17401 = distinct !DILexicalBlock(scope: !17396, file: !3, line: 1956, column: 55)
!17402 = !DILocation(line: 1957, column: 11, scope: !17401)
!17403 = !DILocation(line: 1957, column: 31, scope: !17401)
!17404 = !DILocation(line: 1958, column: 4, scope: !17401)
!17405 = !DILocation(line: 1959, column: 5, scope: !17396)
!17406 = !DILocation(line: 1960, column: 4, scope: !17386)
!17407 = !DILocation(line: 1965, column: 7, scope: !17408)
!17408 = distinct !DILexicalBlock(scope: !17377, file: !3, line: 1965, column: 7)
!17409 = !DILocation(line: 1965, column: 14, scope: !17408)
!17410 = !DILocation(line: 1965, column: 20, scope: !17408)
!17411 = !DILocation(line: 1965, column: 7, scope: !17377)
!17412 = !DILocation(line: 1966, column: 4, scope: !17408)
!17413 = !DILocation(line: 1967, column: 3, scope: !17377)
!17414 = !DILocation(line: 1970, column: 3, scope: !17377)
!17415 = !DILocation(line: 1972, column: 2, scope: !17355)
!17416 = !DILocation(line: 1973, column: 1, scope: !17355)
!17417 = distinct !DISubprogram(name: "atmel_get_auth", scope: !3, file: !3, line: 1975, type: !604, scopeLine: 1978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!17418 = !DILocalVariable(name: "dev", arg: 1, scope: !17417, file: !3, line: 1975, type: !495)
!17419 = !DILocation(line: 1975, column: 46, scope: !17417)
!17420 = !DILocalVariable(name: "info", arg: 2, scope: !17417, file: !3, line: 1976, type: !606)
!17421 = !DILocation(line: 1976, column: 35, scope: !17417)
!17422 = !DILocalVariable(name: "wrqu", arg: 3, scope: !17417, file: !3, line: 1977, type: !613)
!17423 = !DILocation(line: 1977, column: 29, scope: !17417)
!17424 = !DILocalVariable(name: "extra", arg: 4, scope: !17417, file: !3, line: 1977, type: !676)
!17425 = !DILocation(line: 1977, column: 41, scope: !17417)
!17426 = !DILocalVariable(name: "priv", scope: !17417, file: !3, line: 1979, type: !8587)
!17427 = !DILocation(line: 1979, column: 24, scope: !17417)
!17428 = !DILocation(line: 1979, column: 43, scope: !17417)
!17429 = !DILocation(line: 1979, column: 31, scope: !17417)
!17430 = !DILocalVariable(name: "param", scope: !17417, file: !3, line: 1980, type: !16656)
!17431 = !DILocation(line: 1980, column: 19, scope: !17417)
!17432 = !DILocation(line: 1980, column: 28, scope: !17417)
!17433 = !DILocation(line: 1980, column: 34, scope: !17417)
!17434 = !DILocation(line: 1982, column: 10, scope: !17417)
!17435 = !DILocation(line: 1982, column: 17, scope: !17417)
!17436 = !DILocation(line: 1982, column: 23, scope: !17417)
!17437 = !DILocation(line: 1982, column: 2, scope: !17417)
!17438 = !DILocation(line: 1984, column: 18, scope: !17439)
!17439 = distinct !DILexicalBlock(scope: !17417, file: !3, line: 1982, column: 40)
!17440 = !DILocation(line: 1984, column: 24, scope: !17439)
!17441 = !DILocation(line: 1984, column: 3, scope: !17439)
!17442 = !DILocation(line: 1984, column: 10, scope: !17439)
!17443 = !DILocation(line: 1984, column: 16, scope: !17439)
!17444 = !DILocation(line: 1985, column: 3, scope: !17439)
!17445 = !DILocation(line: 1988, column: 7, scope: !17446)
!17446 = distinct !DILexicalBlock(scope: !17439, file: !3, line: 1988, column: 7)
!17447 = !DILocation(line: 1988, column: 13, scope: !17446)
!17448 = !DILocation(line: 1988, column: 33, scope: !17446)
!17449 = !DILocation(line: 1988, column: 7, scope: !17439)
!17450 = !DILocation(line: 1989, column: 4, scope: !17446)
!17451 = !DILocation(line: 1989, column: 11, scope: !17446)
!17452 = !DILocation(line: 1989, column: 17, scope: !17446)
!17453 = !DILocation(line: 1991, column: 4, scope: !17446)
!17454 = !DILocation(line: 1991, column: 11, scope: !17446)
!17455 = !DILocation(line: 1991, column: 17, scope: !17446)
!17456 = !DILocation(line: 1992, column: 3, scope: !17439)
!17457 = !DILocation(line: 1995, column: 3, scope: !17439)
!17458 = !DILocation(line: 1995, column: 10, scope: !17439)
!17459 = !DILocation(line: 1995, column: 16, scope: !17439)
!17460 = !DILocation(line: 1996, column: 3, scope: !17439)
!17461 = !DILocation(line: 1999, column: 3, scope: !17439)
!17462 = !DILocation(line: 2001, column: 2, scope: !17417)
!17463 = !DILocation(line: 2002, column: 1, scope: !17417)
!17464 = distinct !DISubprogram(name: "atmel_set_encodeext", scope: !3, file: !3, line: 1827, type: !604, scopeLine: 1831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!17465 = !DILocalVariable(name: "dev", arg: 1, scope: !17464, file: !3, line: 1827, type: !495)
!17466 = !DILocation(line: 1827, column: 51, scope: !17464)
!17467 = !DILocalVariable(name: "info", arg: 2, scope: !17464, file: !3, line: 1828, type: !606)
!17468 = !DILocation(line: 1828, column: 32, scope: !17464)
!17469 = !DILocalVariable(name: "wrqu", arg: 3, scope: !17464, file: !3, line: 1829, type: !613)
!17470 = !DILocation(line: 1829, column: 26, scope: !17464)
!17471 = !DILocalVariable(name: "extra", arg: 4, scope: !17464, file: !3, line: 1830, type: !676)
!17472 = !DILocation(line: 1830, column: 14, scope: !17464)
!17473 = !DILocalVariable(name: "priv", scope: !17464, file: !3, line: 1832, type: !8587)
!17474 = !DILocation(line: 1832, column: 24, scope: !17464)
!17475 = !DILocation(line: 1832, column: 43, scope: !17464)
!17476 = !DILocation(line: 1832, column: 31, scope: !17464)
!17477 = !DILocalVariable(name: "encoding", scope: !17464, file: !3, line: 1833, type: !15844)
!17478 = !DILocation(line: 1833, column: 19, scope: !17464)
!17479 = !DILocation(line: 1833, column: 31, scope: !17464)
!17480 = !DILocation(line: 1833, column: 37, scope: !17464)
!17481 = !DILocalVariable(name: "ext", scope: !17464, file: !3, line: 1834, type: !8685)
!17482 = !DILocation(line: 1834, column: 24, scope: !17464)
!17483 = !DILocation(line: 1834, column: 54, scope: !17464)
!17484 = !DILocation(line: 1834, column: 30, scope: !17464)
!17485 = !DILocalVariable(name: "idx", scope: !17464, file: !3, line: 1835, type: !7)
!17486 = !DILocation(line: 1835, column: 6, scope: !17464)
!17487 = !DILocalVariable(name: "key_len", scope: !17464, file: !3, line: 1835, type: !7)
!17488 = !DILocation(line: 1835, column: 11, scope: !17464)
!17489 = !DILocalVariable(name: "alg", scope: !17464, file: !3, line: 1835, type: !7)
!17490 = !DILocation(line: 1835, column: 20, scope: !17464)
!17491 = !DILocation(line: 1835, column: 26, scope: !17464)
!17492 = !DILocation(line: 1835, column: 31, scope: !17464)
!17493 = !DILocalVariable(name: "set_key", scope: !17464, file: !3, line: 1835, type: !7)
!17494 = !DILocation(line: 1835, column: 36, scope: !17464)
!17495 = !DILocation(line: 1838, column: 8, scope: !17464)
!17496 = !DILocation(line: 1838, column: 18, scope: !17464)
!17497 = !DILocation(line: 1838, column: 24, scope: !17464)
!17498 = !DILocation(line: 1838, column: 6, scope: !17464)
!17499 = !DILocation(line: 1839, column: 6, scope: !17500)
!17500 = distinct !DILexicalBlock(scope: !17464, file: !3, line: 1839, column: 6)
!17501 = !DILocation(line: 1839, column: 6, scope: !17464)
!17502 = !DILocation(line: 1840, column: 7, scope: !17503)
!17503 = distinct !DILexicalBlock(scope: !17504, file: !3, line: 1840, column: 7)
!17504 = distinct !DILexicalBlock(scope: !17500, file: !3, line: 1839, column: 11)
!17505 = !DILocation(line: 1840, column: 11, scope: !17503)
!17506 = !DILocation(line: 1840, column: 15, scope: !17503)
!17507 = !DILocation(line: 1840, column: 18, scope: !17503)
!17508 = !DILocation(line: 1840, column: 22, scope: !17503)
!17509 = !DILocation(line: 1840, column: 7, scope: !17504)
!17510 = !DILocation(line: 1841, column: 4, scope: !17503)
!17511 = !DILocation(line: 1842, column: 6, scope: !17504)
!17512 = !DILocation(line: 1843, column: 2, scope: !17504)
!17513 = !DILocation(line: 1844, column: 9, scope: !17500)
!17514 = !DILocation(line: 1844, column: 15, scope: !17500)
!17515 = !DILocation(line: 1844, column: 7, scope: !17500)
!17516 = !DILocation(line: 1846, column: 6, scope: !17517)
!17517 = distinct !DILexicalBlock(scope: !17464, file: !3, line: 1846, column: 6)
!17518 = !DILocation(line: 1846, column: 16, scope: !17517)
!17519 = !DILocation(line: 1846, column: 22, scope: !17517)
!17520 = !DILocation(line: 1846, column: 6, scope: !17464)
!17521 = !DILocation(line: 1847, column: 10, scope: !17517)
!17522 = !DILocation(line: 1847, column: 6, scope: !17517)
!17523 = !DILocation(line: 1849, column: 6, scope: !17524)
!17524 = distinct !DILexicalBlock(scope: !17464, file: !3, line: 1849, column: 6)
!17525 = !DILocation(line: 1849, column: 11, scope: !17524)
!17526 = !DILocation(line: 1849, column: 21, scope: !17524)
!17527 = !DILocation(line: 1849, column: 6, scope: !17464)
!17528 = !DILocation(line: 1850, column: 23, scope: !17529)
!17529 = distinct !DILexicalBlock(scope: !17524, file: !3, line: 1849, column: 49)
!17530 = !DILocation(line: 1850, column: 3, scope: !17529)
!17531 = !DILocation(line: 1850, column: 9, scope: !17529)
!17532 = !DILocation(line: 1850, column: 21, scope: !17529)
!17533 = !DILocation(line: 1851, column: 13, scope: !17529)
!17534 = !DILocation(line: 1851, column: 18, scope: !17529)
!17535 = !DILocation(line: 1851, column: 26, scope: !17529)
!17536 = !DILocation(line: 1851, column: 11, scope: !17529)
!17537 = !DILocation(line: 1852, column: 2, scope: !17529)
!17538 = !DILocation(line: 1854, column: 6, scope: !17539)
!17539 = distinct !DILexicalBlock(scope: !17464, file: !3, line: 1854, column: 6)
!17540 = !DILocation(line: 1854, column: 6, scope: !17464)
!17541 = !DILocation(line: 1856, column: 11, scope: !17542)
!17542 = distinct !DILexicalBlock(scope: !17539, file: !3, line: 1854, column: 15)
!17543 = !DILocation(line: 1856, column: 3, scope: !17542)
!17544 = !DILocation(line: 1858, column: 4, scope: !17545)
!17545 = distinct !DILexicalBlock(scope: !17542, file: !3, line: 1856, column: 16)
!17546 = !DILocation(line: 1858, column: 10, scope: !17545)
!17547 = !DILocation(line: 1858, column: 20, scope: !17545)
!17548 = !DILocation(line: 1859, column: 4, scope: !17545)
!17549 = !DILocation(line: 1859, column: 10, scope: !17545)
!17550 = !DILocation(line: 1859, column: 27, scope: !17545)
!17551 = !DILocation(line: 1860, column: 4, scope: !17545)
!17552 = !DILocation(line: 1860, column: 10, scope: !17545)
!17553 = !DILocation(line: 1860, column: 32, scope: !17545)
!17554 = !DILocation(line: 1861, column: 4, scope: !17545)
!17555 = !DILocation(line: 1863, column: 8, scope: !17556)
!17556 = distinct !DILexicalBlock(scope: !17545, file: !3, line: 1863, column: 8)
!17557 = !DILocation(line: 1863, column: 13, scope: !17556)
!17558 = !DILocation(line: 1863, column: 21, scope: !17556)
!17559 = !DILocation(line: 1863, column: 8, scope: !17545)
!17560 = !DILocation(line: 1864, column: 5, scope: !17561)
!17561 = distinct !DILexicalBlock(scope: !17556, file: !3, line: 1863, column: 26)
!17562 = !DILocation(line: 1864, column: 11, scope: !17561)
!17563 = !DILocation(line: 1864, column: 23, scope: !17561)
!17564 = !DILocation(line: 1864, column: 28, scope: !17561)
!17565 = !DILocation(line: 1865, column: 5, scope: !17561)
!17566 = !DILocation(line: 1865, column: 11, scope: !17561)
!17567 = !DILocation(line: 1865, column: 33, scope: !17561)
!17568 = !DILocation(line: 1866, column: 5, scope: !17561)
!17569 = !DILocation(line: 1866, column: 11, scope: !17561)
!17570 = !DILocation(line: 1866, column: 28, scope: !17561)
!17571 = !DILocation(line: 1867, column: 4, scope: !17561)
!17572 = !DILocation(line: 1867, column: 15, scope: !17573)
!17573 = distinct !DILexicalBlock(scope: !17556, file: !3, line: 1867, column: 15)
!17574 = !DILocation(line: 1867, column: 20, scope: !17573)
!17575 = !DILocation(line: 1867, column: 28, scope: !17573)
!17576 = !DILocation(line: 1867, column: 15, scope: !17556)
!17577 = !DILocation(line: 1868, column: 5, scope: !17578)
!17578 = distinct !DILexicalBlock(scope: !17573, file: !3, line: 1867, column: 33)
!17579 = !DILocation(line: 1868, column: 11, scope: !17578)
!17580 = !DILocation(line: 1868, column: 23, scope: !17578)
!17581 = !DILocation(line: 1868, column: 28, scope: !17578)
!17582 = !DILocation(line: 1869, column: 5, scope: !17578)
!17583 = !DILocation(line: 1869, column: 11, scope: !17578)
!17584 = !DILocation(line: 1869, column: 33, scope: !17578)
!17585 = !DILocation(line: 1870, column: 5, scope: !17578)
!17586 = !DILocation(line: 1870, column: 11, scope: !17578)
!17587 = !DILocation(line: 1870, column: 28, scope: !17578)
!17588 = !DILocation(line: 1871, column: 4, scope: !17578)
!17589 = !DILocation(line: 1872, column: 5, scope: !17590)
!17590 = distinct !DILexicalBlock(scope: !17573, file: !3, line: 1871, column: 11)
!17591 = !DILocation(line: 1874, column: 4, scope: !17545)
!17592 = !DILocation(line: 1874, column: 10, scope: !17545)
!17593 = !DILocation(line: 1874, column: 20, scope: !17545)
!17594 = !DILocation(line: 1875, column: 11, scope: !17545)
!17595 = !DILocation(line: 1875, column: 17, scope: !17545)
!17596 = !DILocation(line: 1875, column: 26, scope: !17545)
!17597 = !DILocation(line: 1875, column: 4, scope: !17545)
!17598 = !DILocalVariable(name: "__UNIQUE_ID___x353", scope: !17599, file: !3, line: 1876, type: !7)
!17599 = distinct !DILexicalBlock(scope: !17545, file: !3, line: 1876, column: 14)
!17600 = !DILocation(line: 1876, column: 14, scope: !17599)
!17601 = !DILocalVariable(name: "__UNIQUE_ID___y354", scope: !17599, file: !3, line: 1876, type: !7)
!17602 = !DILocation(line: 1876, column: 12, scope: !17545)
!17603 = !DILocation(line: 1877, column: 11, scope: !17545)
!17604 = !DILocation(line: 1877, column: 17, scope: !17545)
!17605 = !DILocation(line: 1877, column: 26, scope: !17545)
!17606 = !DILocation(line: 1877, column: 4, scope: !17545)
!17607 = !DILocation(line: 1877, column: 32, scope: !17545)
!17608 = !DILocation(line: 1877, column: 37, scope: !17545)
!17609 = !DILocation(line: 1877, column: 42, scope: !17545)
!17610 = !DILocation(line: 1878, column: 4, scope: !17545)
!17611 = !DILocation(line: 1880, column: 4, scope: !17545)
!17612 = !DILocation(line: 1882, column: 2, scope: !17542)
!17613 = !DILocation(line: 1884, column: 2, scope: !17464)
!17614 = !DILocation(line: 1885, column: 1, scope: !17464)
!17615 = distinct !DISubprogram(name: "atmel_get_encodeext", scope: !3, file: !3, line: 1887, type: !604, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!17616 = !DILocalVariable(name: "dev", arg: 1, scope: !17615, file: !3, line: 1887, type: !495)
!17617 = !DILocation(line: 1887, column: 51, scope: !17615)
!17618 = !DILocalVariable(name: "info", arg: 2, scope: !17615, file: !3, line: 1888, type: !606)
!17619 = !DILocation(line: 1888, column: 32, scope: !17615)
!17620 = !DILocalVariable(name: "wrqu", arg: 3, scope: !17615, file: !3, line: 1889, type: !613)
!17621 = !DILocation(line: 1889, column: 26, scope: !17615)
!17622 = !DILocalVariable(name: "extra", arg: 4, scope: !17615, file: !3, line: 1890, type: !676)
!17623 = !DILocation(line: 1890, column: 14, scope: !17615)
!17624 = !DILocalVariable(name: "priv", scope: !17615, file: !3, line: 1892, type: !8587)
!17625 = !DILocation(line: 1892, column: 24, scope: !17615)
!17626 = !DILocation(line: 1892, column: 43, scope: !17615)
!17627 = !DILocation(line: 1892, column: 31, scope: !17615)
!17628 = !DILocalVariable(name: "encoding", scope: !17615, file: !3, line: 1893, type: !15844)
!17629 = !DILocation(line: 1893, column: 19, scope: !17615)
!17630 = !DILocation(line: 1893, column: 31, scope: !17615)
!17631 = !DILocation(line: 1893, column: 37, scope: !17615)
!17632 = !DILocalVariable(name: "ext", scope: !17615, file: !3, line: 1894, type: !8685)
!17633 = !DILocation(line: 1894, column: 24, scope: !17615)
!17634 = !DILocation(line: 1894, column: 54, scope: !17615)
!17635 = !DILocation(line: 1894, column: 30, scope: !17615)
!17636 = !DILocalVariable(name: "idx", scope: !17615, file: !3, line: 1895, type: !7)
!17637 = !DILocation(line: 1895, column: 6, scope: !17615)
!17638 = !DILocalVariable(name: "max_key_len", scope: !17615, file: !3, line: 1895, type: !7)
!17639 = !DILocation(line: 1895, column: 11, scope: !17615)
!17640 = !DILocation(line: 1897, column: 16, scope: !17615)
!17641 = !DILocation(line: 1897, column: 26, scope: !17615)
!17642 = !DILocation(line: 1897, column: 33, scope: !17615)
!17643 = !DILocation(line: 1897, column: 14, scope: !17615)
!17644 = !DILocation(line: 1898, column: 6, scope: !17645)
!17645 = distinct !DILexicalBlock(scope: !17615, file: !3, line: 1898, column: 6)
!17646 = !DILocation(line: 1898, column: 18, scope: !17645)
!17647 = !DILocation(line: 1898, column: 6, scope: !17615)
!17648 = !DILocation(line: 1899, column: 3, scope: !17645)
!17649 = !DILocation(line: 1901, column: 8, scope: !17615)
!17650 = !DILocation(line: 1901, column: 18, scope: !17615)
!17651 = !DILocation(line: 1901, column: 24, scope: !17615)
!17652 = !DILocation(line: 1901, column: 6, scope: !17615)
!17653 = !DILocation(line: 1902, column: 6, scope: !17654)
!17654 = distinct !DILexicalBlock(scope: !17615, file: !3, line: 1902, column: 6)
!17655 = !DILocation(line: 1902, column: 6, scope: !17615)
!17656 = !DILocation(line: 1903, column: 7, scope: !17657)
!17657 = distinct !DILexicalBlock(scope: !17658, file: !3, line: 1903, column: 7)
!17658 = distinct !DILexicalBlock(scope: !17654, file: !3, line: 1902, column: 11)
!17659 = !DILocation(line: 1903, column: 11, scope: !17657)
!17660 = !DILocation(line: 1903, column: 15, scope: !17657)
!17661 = !DILocation(line: 1903, column: 18, scope: !17657)
!17662 = !DILocation(line: 1903, column: 22, scope: !17657)
!17663 = !DILocation(line: 1903, column: 7, scope: !17658)
!17664 = !DILocation(line: 1904, column: 4, scope: !17657)
!17665 = !DILocation(line: 1905, column: 6, scope: !17658)
!17666 = !DILocation(line: 1906, column: 2, scope: !17658)
!17667 = !DILocation(line: 1907, column: 9, scope: !17654)
!17668 = !DILocation(line: 1907, column: 15, scope: !17654)
!17669 = !DILocation(line: 1907, column: 7, scope: !17654)
!17670 = !DILocation(line: 1909, column: 20, scope: !17615)
!17671 = !DILocation(line: 1909, column: 24, scope: !17615)
!17672 = !DILocation(line: 1909, column: 2, scope: !17615)
!17673 = !DILocation(line: 1909, column: 12, scope: !17615)
!17674 = !DILocation(line: 1909, column: 18, scope: !17615)
!17675 = !DILocation(line: 1910, column: 9, scope: !17615)
!17676 = !DILocation(line: 1910, column: 2, scope: !17615)
!17677 = !DILocation(line: 1912, column: 7, scope: !17678)
!17678 = distinct !DILexicalBlock(scope: !17615, file: !3, line: 1912, column: 6)
!17679 = !DILocation(line: 1912, column: 13, scope: !17678)
!17680 = !DILocation(line: 1912, column: 6, scope: !17615)
!17681 = !DILocation(line: 1913, column: 3, scope: !17682)
!17682 = distinct !DILexicalBlock(scope: !17678, file: !3, line: 1912, column: 24)
!17683 = !DILocation(line: 1913, column: 8, scope: !17682)
!17684 = !DILocation(line: 1913, column: 12, scope: !17682)
!17685 = !DILocation(line: 1914, column: 3, scope: !17682)
!17686 = !DILocation(line: 1914, column: 8, scope: !17682)
!17687 = !DILocation(line: 1914, column: 16, scope: !17682)
!17688 = !DILocation(line: 1915, column: 3, scope: !17682)
!17689 = !DILocation(line: 1915, column: 13, scope: !17682)
!17690 = !DILocation(line: 1915, column: 19, scope: !17682)
!17691 = !DILocation(line: 1916, column: 2, scope: !17682)
!17692 = !DILocation(line: 1917, column: 7, scope: !17693)
!17693 = distinct !DILexicalBlock(scope: !17694, file: !3, line: 1917, column: 7)
!17694 = distinct !DILexicalBlock(scope: !17678, file: !3, line: 1916, column: 9)
!17695 = !DILocation(line: 1917, column: 13, scope: !17693)
!17696 = !DILocation(line: 1917, column: 30, scope: !17693)
!17697 = !DILocation(line: 1917, column: 7, scope: !17694)
!17698 = !DILocation(line: 1918, column: 4, scope: !17693)
!17699 = !DILocation(line: 1918, column: 9, scope: !17693)
!17700 = !DILocation(line: 1918, column: 13, scope: !17693)
!17701 = !DILocation(line: 1920, column: 4, scope: !17693)
!17702 = !DILocation(line: 1922, column: 18, scope: !17694)
!17703 = !DILocation(line: 1922, column: 24, scope: !17694)
!17704 = !DILocation(line: 1922, column: 36, scope: !17694)
!17705 = !DILocation(line: 1922, column: 3, scope: !17694)
!17706 = !DILocation(line: 1922, column: 8, scope: !17694)
!17707 = !DILocation(line: 1922, column: 16, scope: !17694)
!17708 = !DILocation(line: 1923, column: 10, scope: !17694)
!17709 = !DILocation(line: 1923, column: 15, scope: !17694)
!17710 = !DILocation(line: 1923, column: 3, scope: !17694)
!17711 = !DILocation(line: 1923, column: 20, scope: !17694)
!17712 = !DILocation(line: 1923, column: 26, scope: !17694)
!17713 = !DILocation(line: 1923, column: 35, scope: !17694)
!17714 = !DILocation(line: 1923, column: 41, scope: !17694)
!17715 = !DILocation(line: 1923, column: 46, scope: !17694)
!17716 = !DILocation(line: 1924, column: 3, scope: !17694)
!17717 = !DILocation(line: 1924, column: 13, scope: !17694)
!17718 = !DILocation(line: 1924, column: 19, scope: !17694)
!17719 = !DILocation(line: 1927, column: 2, scope: !17615)
!17720 = !DILocation(line: 1928, column: 1, scope: !17615)
!17721 = distinct !DISubprogram(name: "ieee80211_frequency_to_channel", scope: !294, file: !294, line: 5422, type: !5277, scopeLine: 5423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!17722 = !DILocalVariable(name: "freq", arg: 1, scope: !17721, file: !294, line: 5422, type: !7)
!17723 = !DILocation(line: 5422, column: 36, scope: !17721)
!17724 = !DILocation(line: 5424, column: 39, scope: !17721)
!17725 = !DILocation(line: 5424, column: 9, scope: !17721)
!17726 = !DILocation(line: 5424, column: 2, scope: !17721)
!17727 = distinct !DISubprogram(name: "ieee80211_channel_to_frequency", scope: !294, file: !294, line: 5404, type: !17728, scopeLine: 5405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!17728 = !DISubroutineType(types: !17729)
!17729 = !{!7, !7, !315}
!17730 = !DILocalVariable(name: "chan", arg: 1, scope: !17727, file: !294, line: 5404, type: !7)
!17731 = !DILocation(line: 5404, column: 36, scope: !17727)
!17732 = !DILocalVariable(name: "band", arg: 2, scope: !17727, file: !294, line: 5404, type: !315)
!17733 = !DILocation(line: 5404, column: 60, scope: !17727)
!17734 = !DILocation(line: 5406, column: 9, scope: !17727)
!17735 = !DILocation(line: 5406, column: 2, scope: !17727)
!17736 = distinct !DISubprogram(name: "restart_search", scope: !3, file: !3, line: 3253, type: !12301, scopeLine: 3254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!17737 = !DILocalVariable(name: "priv", arg: 1, scope: !17736, file: !3, line: 3253, type: !8587)
!17738 = !DILocation(line: 3253, column: 50, scope: !17736)
!17739 = !DILocalVariable(name: "bss_index", scope: !17736, file: !3, line: 3255, type: !7)
!17740 = !DILocation(line: 3255, column: 6, scope: !17736)
!17741 = !DILocation(line: 3257, column: 7, scope: !17742)
!17742 = distinct !DILexicalBlock(scope: !17736, file: !3, line: 3257, column: 6)
!17743 = !DILocation(line: 3257, column: 13, scope: !17742)
!17744 = !DILocation(line: 3257, column: 6, scope: !17736)
!17745 = !DILocation(line: 3258, column: 14, scope: !17746)
!17746 = distinct !DILexicalBlock(scope: !17742, file: !3, line: 3257, column: 33)
!17747 = !DILocation(line: 3258, column: 3, scope: !17746)
!17748 = !DILocation(line: 3259, column: 2, scope: !17746)
!17749 = !DILocation(line: 3260, column: 3, scope: !17750)
!17750 = distinct !DILexicalBlock(scope: !17742, file: !3, line: 3259, column: 9)
!17751 = !DILocation(line: 3260, column: 9, scope: !17750)
!17752 = !DILocation(line: 3260, column: 23, scope: !17750)
!17753 = !DILocation(line: 3260, column: 29, scope: !17750)
!17754 = !DILocation(line: 3260, column: 43, scope: !17750)
!17755 = !DILocation(line: 3260, column: 51, scope: !17750)
!17756 = !DILocation(line: 3262, column: 33, scope: !17757)
!17757 = distinct !DILexicalBlock(scope: !17750, file: !3, line: 3262, column: 7)
!17758 = !DILocation(line: 3262, column: 20, scope: !17757)
!17759 = !DILocation(line: 3262, column: 18, scope: !17757)
!17760 = !DILocation(line: 3262, column: 40, scope: !17757)
!17761 = !DILocation(line: 3262, column: 7, scope: !17750)
!17762 = !DILocation(line: 3263, column: 19, scope: !17757)
!17763 = !DILocation(line: 3263, column: 25, scope: !17757)
!17764 = !DILocation(line: 3263, column: 4, scope: !17757)
!17765 = !DILocation(line: 3265, column: 15, scope: !17757)
!17766 = !DILocation(line: 3265, column: 4, scope: !17757)
!17767 = !DILocation(line: 3267, column: 1, scope: !17736)
!17768 = distinct !DISubprogram(name: "atmel_wakeup_firmware", scope: !3, file: !3, line: 3573, type: !12214, scopeLine: 3574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!17769 = !DILocalVariable(name: "priv", arg: 1, scope: !17768, file: !3, line: 3573, type: !8587)
!17770 = !DILocation(line: 3573, column: 56, scope: !17768)
!17771 = !DILocalVariable(name: "iface", scope: !17768, file: !3, line: 3575, type: !17772)
!17772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8207, size: 64)
!17773 = !DILocation(line: 3575, column: 27, scope: !17768)
!17774 = !DILocation(line: 3575, column: 36, scope: !17768)
!17775 = !DILocation(line: 3575, column: 42, scope: !17768)
!17776 = !DILocalVariable(name: "mr1", scope: !17768, file: !3, line: 3576, type: !916)
!17777 = !DILocation(line: 3576, column: 6, scope: !17768)
!17778 = !DILocalVariable(name: "mr3", scope: !17768, file: !3, line: 3576, type: !916)
!17779 = !DILocation(line: 3576, column: 11, scope: !17768)
!17780 = !DILocalVariable(name: "i", scope: !17768, file: !3, line: 3577, type: !7)
!17781 = !DILocation(line: 3577, column: 6, scope: !17768)
!17782 = !DILocation(line: 3579, column: 6, scope: !17783)
!17783 = distinct !DILexicalBlock(scope: !17768, file: !3, line: 3579, column: 6)
!17784 = !DILocation(line: 3579, column: 12, scope: !17783)
!17785 = !DILocation(line: 3579, column: 22, scope: !17783)
!17786 = !DILocation(line: 3579, column: 6, scope: !17768)
!17787 = !DILocation(line: 3580, column: 17, scope: !17783)
!17788 = !DILocation(line: 3580, column: 23, scope: !17783)
!17789 = !DILocation(line: 3580, column: 3, scope: !17783)
!17790 = !DILocation(line: 3583, column: 18, scope: !17768)
!17791 = !DILocation(line: 3583, column: 24, scope: !17768)
!17792 = !DILocation(line: 3583, column: 2, scope: !17768)
!17793 = !DILocation(line: 3584, column: 16, scope: !17768)
!17794 = !DILocation(line: 3584, column: 22, scope: !17768)
!17795 = !DILocation(line: 3584, column: 2, scope: !17768)
!17796 = !DILocation(line: 3586, column: 6, scope: !17797)
!17797 = distinct !DILexicalBlock(scope: !17768, file: !3, line: 3586, column: 6)
!17798 = !DILocation(line: 3586, column: 12, scope: !17797)
!17799 = !DILocation(line: 3586, column: 22, scope: !17797)
!17800 = !DILocation(line: 3586, column: 6, scope: !17768)
!17801 = !DILocalVariable(name: "__ms", scope: !17802, file: !3, line: 3587, type: !517)
!17802 = distinct !DILexicalBlock(scope: !17797, file: !3, line: 3587, column: 3)
!17803 = !DILocation(line: 3587, column: 3, scope: !17802)
!17804 = !DILocation(line: 3587, column: 3, scope: !17805)
!17805 = distinct !DILexicalBlock(scope: !17806, file: !3, line: 3587, column: 3)
!17806 = distinct !DILexicalBlock(scope: !17807, file: !3, line: 3587, column: 3)
!17807 = distinct !DILexicalBlock(scope: !17808, file: !3, line: 3587, column: 3)
!17808 = distinct !DILexicalBlock(scope: !17802, file: !3, line: 3587, column: 3)
!17809 = distinct !{!17809, !17803, !17803}
!17810 = !DILocation(line: 3587, column: 3, scope: !17797)
!17811 = !DILocation(line: 3590, column: 9, scope: !17812)
!17812 = distinct !DILexicalBlock(scope: !17768, file: !3, line: 3590, column: 2)
!17813 = !DILocation(line: 3590, column: 7, scope: !17812)
!17814 = !DILocation(line: 3590, column: 29, scope: !17815)
!17815 = distinct !DILexicalBlock(scope: !17812, file: !3, line: 3590, column: 2)
!17816 = !DILocation(line: 3590, column: 2, scope: !17812)
!17817 = !DILocation(line: 3591, column: 22, scope: !17818)
!17818 = distinct !DILexicalBlock(scope: !17815, file: !3, line: 3590, column: 37)
!17819 = !DILocation(line: 3591, column: 28, scope: !17818)
!17820 = !DILocation(line: 3591, column: 9, scope: !17818)
!17821 = !DILocation(line: 3591, column: 7, scope: !17818)
!17822 = !DILocation(line: 3592, column: 22, scope: !17818)
!17823 = !DILocation(line: 3592, column: 28, scope: !17818)
!17824 = !DILocation(line: 3592, column: 9, scope: !17818)
!17825 = !DILocation(line: 3592, column: 7, scope: !17818)
!17826 = !DILocation(line: 3594, column: 7, scope: !17827)
!17827 = distinct !DILexicalBlock(scope: !17818, file: !3, line: 3594, column: 7)
!17828 = !DILocation(line: 3594, column: 11, scope: !17827)
!17829 = !DILocation(line: 3594, column: 7, scope: !17818)
!17830 = !DILocation(line: 3595, column: 4, scope: !17827)
!17831 = !DILocation(line: 3596, column: 7, scope: !17832)
!17832 = distinct !DILexicalBlock(scope: !17818, file: !3, line: 3596, column: 7)
!17833 = !DILocation(line: 3596, column: 11, scope: !17832)
!17834 = !DILocation(line: 3596, column: 31, scope: !17832)
!17835 = !DILocation(line: 3597, column: 7, scope: !17832)
!17836 = !DILocation(line: 3597, column: 13, scope: !17832)
!17837 = !DILocation(line: 3597, column: 22, scope: !17832)
!17838 = !DILocation(line: 3596, column: 7, scope: !17818)
!17839 = !DILocation(line: 3598, column: 4, scope: !17832)
!17840 = !DILocation(line: 3599, column: 2, scope: !17818)
!17841 = !DILocation(line: 3590, column: 33, scope: !17815)
!17842 = !DILocation(line: 3590, column: 2, scope: !17815)
!17843 = distinct !{!17843, !17816, !17844}
!17844 = !DILocation(line: 3599, column: 2, scope: !17812)
!17845 = !DILocation(line: 3601, column: 6, scope: !17846)
!17846 = distinct !DILexicalBlock(scope: !17768, file: !3, line: 3601, column: 6)
!17847 = !DILocation(line: 3601, column: 8, scope: !17846)
!17848 = !DILocation(line: 3601, column: 6, scope: !17768)
!17849 = !DILocation(line: 3602, column: 50, scope: !17850)
!17850 = distinct !DILexicalBlock(scope: !17846, file: !3, line: 3601, column: 14)
!17851 = !DILocation(line: 3602, column: 56, scope: !17850)
!17852 = !DILocation(line: 3602, column: 61, scope: !17850)
!17853 = !DILocation(line: 3602, column: 3, scope: !17850)
!17854 = !DILocation(line: 3603, column: 3, scope: !17850)
!17855 = !DILocation(line: 3606, column: 43, scope: !17856)
!17856 = distinct !DILexicalBlock(scope: !17768, file: !3, line: 3606, column: 6)
!17857 = !DILocation(line: 3606, column: 49, scope: !17856)
!17858 = !DILocation(line: 3606, column: 30, scope: !17856)
!17859 = !DILocation(line: 3606, column: 7, scope: !17856)
!17860 = !DILocation(line: 3606, column: 13, scope: !17856)
!17861 = !DILocation(line: 3606, column: 28, scope: !17856)
!17862 = !DILocation(line: 3606, column: 6, scope: !17856)
!17863 = !DILocation(line: 3606, column: 60, scope: !17856)
!17864 = !DILocation(line: 3606, column: 6, scope: !17768)
!17865 = !DILocation(line: 3607, column: 44, scope: !17866)
!17866 = distinct !DILexicalBlock(scope: !17856, file: !3, line: 3606, column: 71)
!17867 = !DILocation(line: 3607, column: 50, scope: !17866)
!17868 = !DILocation(line: 3607, column: 55, scope: !17866)
!17869 = !DILocation(line: 3607, column: 3, scope: !17866)
!17870 = !DILocation(line: 3608, column: 3, scope: !17866)
!17871 = !DILocation(line: 3616, column: 14, scope: !17768)
!17872 = !DILocation(line: 3616, column: 29, scope: !17768)
!17873 = !DILocation(line: 3616, column: 20, scope: !17768)
!17874 = !DILocation(line: 3616, column: 2, scope: !17768)
!17875 = !DILocation(line: 3618, column: 9, scope: !17876)
!17876 = distinct !DILexicalBlock(scope: !17768, file: !3, line: 3618, column: 2)
!17877 = !DILocation(line: 3618, column: 7, scope: !17876)
!17878 = !DILocation(line: 3618, column: 29, scope: !17879)
!17879 = distinct !DILexicalBlock(scope: !17876, file: !3, line: 3618, column: 2)
!17880 = !DILocation(line: 3618, column: 2, scope: !17876)
!17881 = !DILocation(line: 3619, column: 22, scope: !17882)
!17882 = distinct !DILexicalBlock(scope: !17879, file: !3, line: 3618, column: 37)
!17883 = !DILocation(line: 3619, column: 28, scope: !17882)
!17884 = !DILocation(line: 3619, column: 9, scope: !17882)
!17885 = !DILocation(line: 3619, column: 7, scope: !17882)
!17886 = !DILocation(line: 3620, column: 22, scope: !17882)
!17887 = !DILocation(line: 3620, column: 28, scope: !17882)
!17888 = !DILocation(line: 3620, column: 9, scope: !17882)
!17889 = !DILocation(line: 3620, column: 7, scope: !17882)
!17890 = !DILocation(line: 3622, column: 7, scope: !17891)
!17891 = distinct !DILexicalBlock(scope: !17882, file: !3, line: 3622, column: 7)
!17892 = !DILocation(line: 3622, column: 11, scope: !17891)
!17893 = !DILocation(line: 3622, column: 7, scope: !17882)
!17894 = !DILocation(line: 3623, column: 4, scope: !17891)
!17895 = !DILocation(line: 3624, column: 7, scope: !17896)
!17896 = distinct !DILexicalBlock(scope: !17882, file: !3, line: 3624, column: 7)
!17897 = !DILocation(line: 3624, column: 11, scope: !17896)
!17898 = !DILocation(line: 3624, column: 31, scope: !17896)
!17899 = !DILocation(line: 3625, column: 7, scope: !17896)
!17900 = !DILocation(line: 3625, column: 13, scope: !17896)
!17901 = !DILocation(line: 3625, column: 22, scope: !17896)
!17902 = !DILocation(line: 3624, column: 7, scope: !17882)
!17903 = !DILocation(line: 3626, column: 4, scope: !17896)
!17904 = !DILocation(line: 3627, column: 2, scope: !17882)
!17905 = !DILocation(line: 3618, column: 33, scope: !17879)
!17906 = !DILocation(line: 3618, column: 2, scope: !17879)
!17907 = distinct !{!17907, !17880, !17908}
!17908 = !DILocation(line: 3627, column: 2, scope: !17876)
!17909 = !DILocation(line: 3629, column: 6, scope: !17910)
!17910 = distinct !DILexicalBlock(scope: !17768, file: !3, line: 3629, column: 6)
!17911 = !DILocation(line: 3629, column: 8, scope: !17910)
!17912 = !DILocation(line: 3629, column: 6, scope: !17768)
!17913 = !DILocation(line: 3631, column: 5, scope: !17914)
!17914 = distinct !DILexicalBlock(scope: !17910, file: !3, line: 3629, column: 14)
!17915 = !DILocation(line: 3631, column: 11, scope: !17914)
!17916 = !DILocation(line: 3631, column: 16, scope: !17914)
!17917 = !DILocation(line: 3630, column: 3, scope: !17914)
!17918 = !DILocation(line: 3632, column: 3, scope: !17914)
!17919 = !DILocation(line: 3636, column: 7, scope: !17920)
!17920 = distinct !DILexicalBlock(scope: !17768, file: !3, line: 3636, column: 6)
!17921 = !DILocation(line: 3636, column: 11, scope: !17920)
!17922 = !DILocation(line: 3636, column: 32, scope: !17920)
!17923 = !DILocation(line: 3637, column: 21, scope: !17920)
!17924 = !DILocation(line: 3637, column: 27, scope: !17920)
!17925 = !DILocation(line: 3637, column: 8, scope: !17920)
!17926 = !DILocation(line: 3637, column: 37, scope: !17920)
!17927 = !DILocation(line: 3636, column: 6, scope: !17768)
!17928 = !DILocation(line: 3638, column: 56, scope: !17929)
!17929 = distinct !DILexicalBlock(scope: !17920, file: !3, line: 3637, column: 53)
!17930 = !DILocation(line: 3638, column: 62, scope: !17929)
!17931 = !DILocation(line: 3638, column: 67, scope: !17929)
!17932 = !DILocation(line: 3638, column: 3, scope: !17929)
!17933 = !DILocation(line: 3639, column: 3, scope: !17929)
!17934 = !DILocation(line: 3641, column: 7, scope: !17935)
!17935 = distinct !DILexicalBlock(scope: !17768, file: !3, line: 3641, column: 6)
!17936 = !DILocation(line: 3641, column: 11, scope: !17935)
!17937 = !DILocation(line: 3641, column: 32, scope: !17935)
!17938 = !DILocation(line: 3642, column: 21, scope: !17935)
!17939 = !DILocation(line: 3642, column: 27, scope: !17935)
!17940 = !DILocation(line: 3642, column: 8, scope: !17935)
!17941 = !DILocation(line: 3642, column: 37, scope: !17935)
!17942 = !DILocation(line: 3641, column: 6, scope: !17768)
!17943 = !DILocation(line: 3643, column: 56, scope: !17944)
!17944 = distinct !DILexicalBlock(scope: !17935, file: !3, line: 3642, column: 53)
!17945 = !DILocation(line: 3643, column: 62, scope: !17944)
!17946 = !DILocation(line: 3643, column: 67, scope: !17944)
!17947 = !DILocation(line: 3643, column: 3, scope: !17944)
!17948 = !DILocation(line: 3644, column: 3, scope: !17944)
!17949 = !DILocation(line: 3647, column: 21, scope: !17768)
!17950 = !DILocation(line: 3647, column: 27, scope: !17768)
!17951 = !DILocation(line: 3647, column: 49, scope: !17768)
!17952 = !DILocation(line: 3647, column: 32, scope: !17768)
!17953 = !DILocation(line: 3648, column: 7, scope: !17768)
!17954 = !DILocation(line: 3648, column: 13, scope: !17768)
!17955 = !DILocation(line: 3647, column: 2, scope: !17768)
!17956 = !DILocation(line: 3650, column: 23, scope: !17768)
!17957 = !DILocation(line: 3650, column: 2, scope: !17768)
!17958 = !DILocation(line: 3650, column: 9, scope: !17768)
!17959 = !DILocation(line: 3650, column: 21, scope: !17768)
!17960 = !DILocation(line: 3651, column: 24, scope: !17768)
!17961 = !DILocation(line: 3651, column: 2, scope: !17768)
!17962 = !DILocation(line: 3651, column: 9, scope: !17768)
!17963 = !DILocation(line: 3651, column: 22, scope: !17768)
!17964 = !DILocation(line: 3652, column: 23, scope: !17768)
!17965 = !DILocation(line: 3652, column: 2, scope: !17768)
!17966 = !DILocation(line: 3652, column: 9, scope: !17768)
!17967 = !DILocation(line: 3652, column: 21, scope: !17768)
!17968 = !DILocation(line: 3653, column: 25, scope: !17768)
!17969 = !DILocation(line: 3653, column: 2, scope: !17768)
!17970 = !DILocation(line: 3653, column: 9, scope: !17768)
!17971 = !DILocation(line: 3653, column: 23, scope: !17768)
!17972 = !DILocation(line: 3654, column: 23, scope: !17768)
!17973 = !DILocation(line: 3654, column: 2, scope: !17768)
!17974 = !DILocation(line: 3654, column: 9, scope: !17768)
!17975 = !DILocation(line: 3654, column: 21, scope: !17768)
!17976 = !DILocation(line: 3655, column: 24, scope: !17768)
!17977 = !DILocation(line: 3655, column: 2, scope: !17768)
!17978 = !DILocation(line: 3655, column: 9, scope: !17768)
!17979 = !DILocation(line: 3655, column: 22, scope: !17768)
!17980 = !DILocation(line: 3656, column: 23, scope: !17768)
!17981 = !DILocation(line: 3656, column: 2, scope: !17768)
!17982 = !DILocation(line: 3656, column: 9, scope: !17768)
!17983 = !DILocation(line: 3656, column: 21, scope: !17768)
!17984 = !DILocation(line: 3657, column: 25, scope: !17768)
!17985 = !DILocation(line: 3657, column: 2, scope: !17768)
!17986 = !DILocation(line: 3657, column: 9, scope: !17768)
!17987 = !DILocation(line: 3657, column: 23, scope: !17768)
!17988 = !DILocation(line: 3658, column: 25, scope: !17768)
!17989 = !DILocation(line: 3658, column: 2, scope: !17768)
!17990 = !DILocation(line: 3658, column: 9, scope: !17768)
!17991 = !DILocation(line: 3658, column: 23, scope: !17768)
!17992 = !DILocation(line: 3659, column: 23, scope: !17768)
!17993 = !DILocation(line: 3659, column: 2, scope: !17768)
!17994 = !DILocation(line: 3659, column: 9, scope: !17768)
!17995 = !DILocation(line: 3659, column: 21, scope: !17768)
!17996 = !DILocation(line: 3660, column: 25, scope: !17768)
!17997 = !DILocation(line: 3660, column: 2, scope: !17768)
!17998 = !DILocation(line: 3660, column: 9, scope: !17768)
!17999 = !DILocation(line: 3660, column: 23, scope: !17768)
!18000 = !DILocation(line: 3661, column: 25, scope: !17768)
!18001 = !DILocation(line: 3661, column: 2, scope: !17768)
!18002 = !DILocation(line: 3661, column: 9, scope: !17768)
!18003 = !DILocation(line: 3661, column: 23, scope: !17768)
!18004 = !DILocation(line: 3662, column: 21, scope: !17768)
!18005 = !DILocation(line: 3662, column: 2, scope: !17768)
!18006 = !DILocation(line: 3662, column: 9, scope: !17768)
!18007 = !DILocation(line: 3662, column: 19, scope: !17768)
!18008 = !DILocation(line: 3663, column: 22, scope: !17768)
!18009 = !DILocation(line: 3663, column: 2, scope: !17768)
!18010 = !DILocation(line: 3663, column: 9, scope: !17768)
!18011 = !DILocation(line: 3663, column: 20, scope: !17768)
!18012 = !DILocation(line: 3665, column: 2, scope: !17768)
!18013 = !DILocation(line: 3666, column: 1, scope: !17768)
!18014 = distinct !DISubprogram(name: "build_wep_mib", scope: !3, file: !3, line: 3744, type: !12301, scopeLine: 3745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1904)
!18015 = !DILocalVariable(name: "priv", arg: 1, scope: !18014, file: !3, line: 3744, type: !8587)
!18016 = !DILocation(line: 3744, column: 49, scope: !18014)
!18017 = !DILocalVariable(name: "mib", scope: !18014, file: !3, line: 3758, type: !18018)
!18018 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18014, file: !3, line: 3746, size: 544, elements: !18019)
!18019 = !{!18020, !18021, !18022, !18023, !18024, !18025, !18026, !18030, !18031}
!18020 = !DIDerivedType(tag: DW_TAG_member, name: "wep_is_on", scope: !18018, file: !3, line: 3747, baseType: !1116, size: 8)
!18021 = !DIDerivedType(tag: DW_TAG_member, name: "default_key", scope: !18018, file: !3, line: 3748, baseType: !1116, size: 8, offset: 8)
!18022 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !18018, file: !3, line: 3749, baseType: !1116, size: 8, offset: 16)
!18023 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_unencrypted", scope: !18018, file: !3, line: 3750, baseType: !1116, size: 8, offset: 24)
!18024 = !DIDerivedType(tag: DW_TAG_member, name: "WEPICV_error_count", scope: !18018, file: !3, line: 3752, baseType: !1308, size: 32, offset: 32)
!18025 = !DIDerivedType(tag: DW_TAG_member, name: "WEP_excluded_count", scope: !18018, file: !3, line: 3753, baseType: !1308, size: 32, offset: 64)
!18026 = !DIDerivedType(tag: DW_TAG_member, name: "wep_keys", scope: !18018, file: !3, line: 3755, baseType: !18027, size: 416, offset: 96)
!18027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 416, elements: !18028)
!18028 = !{!2591, !18029}
!18029 = !DISubrange(count: 13)
!18030 = !DIDerivedType(tag: DW_TAG_member, name: "encryption_level", scope: !18018, file: !3, line: 3756, baseType: !1116, size: 8, offset: 512)
!18031 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !18018, file: !3, line: 3757, baseType: !7145, size: 24, offset: 520)
!18032 = !DILocation(line: 3758, column: 4, scope: !18014)
!18033 = !DILocalVariable(name: "i", scope: !18014, file: !3, line: 3759, type: !7)
!18034 = !DILocation(line: 3759, column: 6, scope: !18014)
!18035 = !DILocation(line: 3761, column: 18, scope: !18014)
!18036 = !DILocation(line: 3761, column: 24, scope: !18014)
!18037 = !DILocation(line: 3761, column: 6, scope: !18014)
!18038 = !DILocation(line: 3761, column: 16, scope: !18014)
!18039 = !DILocation(line: 3762, column: 6, scope: !18040)
!18040 = distinct !DILexicalBlock(scope: !18014, file: !3, line: 3762, column: 6)
!18041 = !DILocation(line: 3762, column: 12, scope: !18040)
!18042 = !DILocation(line: 3762, column: 6, scope: !18014)
!18043 = !DILocation(line: 3763, column: 7, scope: !18044)
!18044 = distinct !DILexicalBlock(scope: !18045, file: !3, line: 3763, column: 7)
!18045 = distinct !DILexicalBlock(scope: !18040, file: !3, line: 3762, column: 23)
!18046 = !DILocation(line: 3763, column: 13, scope: !18044)
!18047 = !DILocation(line: 3763, column: 25, scope: !18044)
!18048 = !DILocation(line: 3763, column: 31, scope: !18044)
!18049 = !DILocation(line: 3763, column: 44, scope: !18044)
!18050 = !DILocation(line: 3763, column: 7, scope: !18045)
!18051 = !DILocation(line: 3764, column: 8, scope: !18044)
!18052 = !DILocation(line: 3764, column: 25, scope: !18044)
!18053 = !DILocation(line: 3764, column: 4, scope: !18044)
!18054 = !DILocation(line: 3766, column: 8, scope: !18044)
!18055 = !DILocation(line: 3766, column: 25, scope: !18044)
!18056 = !DILocation(line: 3767, column: 2, scope: !18045)
!18057 = !DILocation(line: 3768, column: 7, scope: !18058)
!18058 = distinct !DILexicalBlock(scope: !18040, file: !3, line: 3767, column: 9)
!18059 = !DILocation(line: 3768, column: 24, scope: !18058)
!18060 = !DILocation(line: 3771, column: 20, scope: !18014)
!18061 = !DILocation(line: 3771, column: 26, scope: !18014)
!18062 = !DILocation(line: 3771, column: 6, scope: !18014)
!18063 = !DILocation(line: 3771, column: 18, scope: !18014)
!18064 = !DILocation(line: 3772, column: 28, scope: !18014)
!18065 = !DILocation(line: 3772, column: 34, scope: !18014)
!18066 = !DILocation(line: 3772, column: 6, scope: !18014)
!18067 = !DILocation(line: 3772, column: 26, scope: !18014)
!18068 = !DILocation(line: 3774, column: 9, scope: !18069)
!18069 = distinct !DILexicalBlock(scope: !18014, file: !3, line: 3774, column: 2)
!18070 = !DILocation(line: 3774, column: 7, scope: !18069)
!18071 = !DILocation(line: 3774, column: 14, scope: !18072)
!18072 = distinct !DILexicalBlock(scope: !18069, file: !3, line: 3774, column: 2)
!18073 = !DILocation(line: 3774, column: 16, scope: !18072)
!18074 = !DILocation(line: 3774, column: 2, scope: !18069)
!18075 = !DILocation(line: 3775, column: 14, scope: !18072)
!18076 = !DILocation(line: 3775, column: 23, scope: !18072)
!18077 = !DILocation(line: 3775, column: 10, scope: !18072)
!18078 = !DILocation(line: 3775, column: 3, scope: !18072)
!18079 = !DILocation(line: 3775, column: 27, scope: !18072)
!18080 = !DILocation(line: 3775, column: 33, scope: !18072)
!18081 = !DILocation(line: 3775, column: 42, scope: !18072)
!18082 = !DILocation(line: 3774, column: 40, scope: !18072)
!18083 = !DILocation(line: 3774, column: 2, scope: !18072)
!18084 = distinct !{!18084, !18074, !18085}
!18085 = !DILocation(line: 3775, column: 48, scope: !18069)
!18086 = !DILocation(line: 3777, column: 16, scope: !18014)
!18087 = !DILocation(line: 3777, column: 43, scope: !18014)
!18088 = !DILocation(line: 3777, column: 2, scope: !18014)
!18089 = !DILocation(line: 3778, column: 1, scope: !18014)
