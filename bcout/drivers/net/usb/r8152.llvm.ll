; ModuleID = '../bcout/drivers/net/usb/r8152.llvm.bc'
source_filename = "drivers/net/usb/r8152.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_rtl8152_driver_init6:\09\09\09"
module asm ".long\09rtl8152_driver_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.usb_driver = type { i8*, i32 (%struct.usb_interface*, %struct.usb_device_id*)*, void (%struct.usb_interface*)*, i32 (%struct.usb_interface*, i32, i8*)*, i32 (%struct.usb_interface*, i32)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, %struct.usb_device_id*, %struct.attribute_group**, %struct.usb_dynids, %struct.usbdrv_wrap, i8 }
%struct.usb_interface = type { %struct.usb_host_interface*, %struct.usb_host_interface*, i32, %struct.usb_interface_assoc_descriptor*, i32, i32, i8, %struct.device, %struct.device*, %struct.work_struct }
%struct.usb_host_interface = type { %struct.usb_interface_descriptor, i32, i8*, %struct.usb_host_endpoint*, i8* }
%struct.usb_interface_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.usb_host_endpoint = type <{ %struct.usb_endpoint_descriptor, %struct.usb_ss_ep_comp_descriptor, %struct.usb_ssp_isoc_ep_comp_descriptor, i8, %struct.list_head, i8*, %struct.ep_device*, i8*, i32, i32, i32, [4 x i8] }>
%struct.usb_endpoint_descriptor = type <{ i8, i8, i8, i8, i16, i8, i8, i8 }>
%struct.usb_ss_ep_comp_descriptor = type { i8, i8, i8, i8, i16 }
%struct.usb_ssp_isoc_ep_comp_descriptor = type { i8, i8, i16, i32 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.ep_device = type opaque
%struct.usb_interface_assoc_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type { %struct.sock_common, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff*, %struct.sk_buff_head, %struct.anon.64, i32, i32, i32, i32, %struct.sk_filter*, %union.anon.93, %struct.dst_entry*, %struct.dst_entry*, %struct.atomic_t, i32, i32, %struct.refcount_struct, i64, %union.anon.96, %struct.sk_buff*, %struct.sk_buff_head, i32, i32, i32, i32, i64, %struct.timer_list, i32, i32, i64, i64, %struct.page_frag, i64, i64, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i64, %struct.proto*, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, %struct.pid*, %struct.cred*, i64, i64, i16, i8, i32, %struct.atomic_t, i8, i8, %struct.socket*, i8*, %struct.sock_cgroup_data, %struct.mem_cgroup*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, %struct.sock_reuseport*, %struct.callback_head }
%struct.sock_common = type { %union.anon.38, %union.anon.40, %union.anon.41, i16, i8, i8, i32, %union.anon.43, %struct.proto*, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.60, [0 x i32], %union.anon.61, i16, %union.anon.62, %struct.refcount_struct, [0 x i32], %union.anon.63 }
%union.anon.38 = type { i64 }
%union.anon.40 = type { i32 }
%union.anon.41 = type { i32 }
%union.anon.43 = type { %struct.hlist_node }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.possible_net_t = type { %struct.net* }
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.33 }
%union.anon.33 = type { %struct.anon.34, [48 x i8] }
%struct.anon.34 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.kgid_t = type { i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.ctl_table_header = type { %union.anon.35, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.35 = type { %struct.anon.36 }
%struct.anon.36 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.rb_root = type { %struct.rb_node* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.proc_dir_entry = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.145, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.161, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon.145 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.ifreq = type { %union.anon.146, %union.anon.147 }
%union.anon.146 = type { [16 x i8] }
%union.anon.147 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type { %struct.possible_net_t, %struct.net_device*, %struct.list_head, i32 (%struct.neighbour*)*, %struct.neigh_table*, i8*, i32, %struct.refcount_struct, %struct.callback_head, i32, [13 x i32], [1 x i64] }
%struct.neighbour = type { %struct.neighbour*, %struct.neigh_table*, %struct.neigh_parms*, i64, i64, %struct.rwlock_t, %struct.refcount_struct, i32, %struct.sk_buff_head, %struct.timer_list, i64, %struct.atomic_t, i8, i8, i8, i8, i8, %struct.seqlock_t, [32 x i8], %struct.hh_cache, i32 (%struct.neighbour*, %struct.sk_buff*)*, %struct.neigh_ops*, %struct.list_head, %struct.callback_head, %struct.net_device*, [0 x i8] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.neigh_ops = type { i32, void (%struct.neighbour*, %struct.sk_buff*)*, void (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)* }
%struct.neigh_table = type { i32, i32, i32, i16, i32 (i8*, %struct.net_device*, i32*)*, i1 (%struct.neighbour*, i8*)*, i32 (%struct.neighbour*)*, i32 (%struct.pneigh_entry*)*, void (%struct.pneigh_entry*)*, void (%struct.sk_buff*)*, i32 (i8*)*, i1 (%struct.net_device*, %struct.netlink_ext_ack*)*, i8*, %struct.neigh_parms, %struct.list_head, i32, i32, i32, i32, i64, %struct.delayed_work, %struct.timer_list, %struct.sk_buff_head, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.rwlock_t, i64, %struct.neigh_statistics*, %struct.neigh_hash_table*, %struct.pneigh_entry** }
%struct.pneigh_entry = type { %struct.pneigh_entry*, %struct.possible_net_t, %struct.net_device*, i8, i8, [0 x i8] }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nlattr = type { i16, i16 }
%struct.nla_policy = type { i8, i8, i16, %union.anon.94 }
%union.anon.94 = type { i8* }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.workqueue_struct = type opaque
%struct.neigh_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.neigh_hash_table = type { %struct.neighbour**, i32, [4 x i32], %struct.callback_head }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.149 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%struct.module = type opaque
%union.anon.149 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.150 }
%union.anon.150 = type { %struct.anon.151 }
%struct.anon.151 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type opaque
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.154 }
%union.anon.154 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.155, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.155 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.156 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.156 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type { i32 (i8)*, i32 (%struct.net_device*, %struct.nd_opt_hdr*, %struct.ndisc_options*)*, void (%struct.net_device*, %struct.neighbour*, i32, i8, %struct.ndisc_options*)*, i32 (%struct.net_device*, i8, %struct.neighbour*, i8*, i8**)*, void (%struct.net_device*, %struct.sk_buff*, i8, i8*)*, void (%struct.net*, %struct.net_device*, %struct.prefix_info*, %struct.inet6_dev*, %struct.in6_addr*, i32, i32, i1, i1, i32, i32, i1)* }
%struct.nd_opt_hdr = type { i8, i8 }
%struct.ndisc_options = type { [15 x %struct.nd_opt_hdr*], %struct.nd_opt_hdr*, %struct.nd_opt_hdr* }
%struct.prefix_info = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type { %struct.net_device*, %struct.list_head, %struct.ifmcaddr6*, %struct.ifmcaddr6*, %struct.spinlock, i8, i8, i8, i8, i64, i64, i64, i64, %struct.timer_list, %struct.timer_list, %struct.timer_list, %struct.ifacaddr6*, %struct.rwlock_t, %struct.refcount_struct, i32, i32, i32, %struct.list_head, %struct.in6_addr, %struct.neigh_parms*, %struct.ipv6_devconf, %struct.ipv6_devstat, %struct.timer_list, i32, i8, i64, %struct.callback_head }
%struct.ifmcaddr6 = type { %struct.in6_addr, %struct.inet6_dev*, %struct.ifmcaddr6*, %struct.ip6_sf_list*, %struct.ip6_sf_list*, i32, i8, [2 x i64], %struct.timer_list, i32, i32, %struct.refcount_struct, %struct.spinlock, i64, i64 }
%struct.ip6_sf_list = type { %struct.ip6_sf_list*, %struct.in6_addr, [2 x i64], i8, i8, i8 }
%struct.ifacaddr6 = type { %struct.in6_addr, %struct.fib6_info*, %struct.ifacaddr6*, %struct.hlist_node, i32, %struct.refcount_struct, i64, i64, %struct.callback_head }
%struct.fib6_info = type opaque
%struct.ipv6_devconf = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ipv6_stable_secret, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ctl_table_header* }
%struct.ipv6_stable_secret = type { i8, %struct.in6_addr }
%struct.ipv6_devstat = type { %struct.proc_dir_entry*, %struct.ipstats_mib*, %struct.icmpv6_mib_device*, %struct.icmpv6msg_mib_device* }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib_device = type { [6 x %struct.atomic64_t] }
%struct.icmpv6msg_mib_device = type { [512 x %struct.atomic64_t] }
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], %struct.bpf_prog_aux*, %struct.sock_fprog_kern*, i32 (i8*, %struct.bpf_insn*)*, [0 x %struct.sock_filter], [0 x %struct.bpf_insn] }
%struct.bpf_prog_aux = type { %struct.atomic64_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.bpf_ctx_arg_aux*, %struct.mutex, %struct.bpf_prog*, %struct.bpf_trampoline*, i32, i32, i8, i8, i8, i8, i8, i8, i32, %struct.hlist_node, %struct.btf_type*, i8*, %struct.bpf_prog**, i8*, %struct.bpf_jit_poke_descriptor*, i32, %struct.bpf_ksym, %struct.bpf_prog_ops*, %struct.bpf_map**, %struct.mutex, %struct.bpf_prog*, %struct.user_struct*, i64, [2 x %struct.bpf_map*], [16 x i8], %struct.bpf_prog_offload*, %struct.btf*, %struct.bpf_func_info*, %struct.bpf_func_info_aux*, %struct.bpf_line_info*, i8**, i32, i32, i32, i32, %struct.exception_table_entry*, %struct.bpf_prog_stats*, %union.anon.92 }
%struct.bpf_ctx_arg_aux = type { i32, i32, i32 }
%struct.bpf_trampoline = type { %struct.hlist_node, %struct.mutex, %struct.refcount_struct, i64, %struct.anon.65, %struct.bpf_prog*, [3 x %struct.hlist_head], [3 x i32], i8*, i64, %struct.bpf_ksym }
%struct.anon.65 = type { %struct.btf_func_model, i8*, i8 }
%struct.btf_func_model = type { i8, i8, [12 x i8] }
%struct.btf_type = type opaque
%struct.bpf_jit_poke_descriptor = type { i8*, i8*, i8*, %union.anon.66, i8, i8, i16, i32 }
%union.anon.66 = type { %struct.anon.67 }
%struct.anon.67 = type { %struct.bpf_map*, i32 }
%struct.bpf_map = type { %struct.bpf_map_ops*, %struct.bpf_map*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.btf*, %struct.bpf_map_memory, [16 x i8], i32, i8, i8, [26 x i8], %struct.atomic64_t, %struct.atomic64_t, %struct.work_struct, %struct.mutex, i64, [48 x i8] }
%struct.bpf_map_ops = type { i32 (%union.bpf_attr*)*, %struct.bpf_map* (%union.bpf_attr*)*, void (%struct.bpf_map*, %struct.file*)*, void (%struct.bpf_map*)*, i32 (%struct.bpf_map*, i8*, i8*)*, void (%struct.bpf_map*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*)*, i8* (%struct.bpf_map*, %struct.file*, i32)*, void (i8*)*, i32 (%struct.bpf_map*, %struct.bpf_insn*)*, i32 (i8*)*, void (%struct.bpf_map*, i8*, %struct.seq_file*)*, i32 (%struct.bpf_map*, %struct.btf*, %struct.btf_type*, %struct.btf_type*)*, i32 (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, i32, %struct.bpf_prog*, %struct.bpf_prog*)*, i32 (%struct.bpf_map*, i64*, i32)*, i32 (%struct.bpf_map*, i64, i32*)*, i32 (%struct.bpf_map*, %struct.vm_area_struct*)*, i32 (%struct.bpf_map*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.bpf_local_storage_map*, i8*, i32)*, void (%struct.bpf_local_storage_map*, i8*, i32)*, %struct.bpf_local_storage** (i8*)*, i1 (%struct.bpf_map*, %struct.bpf_map*)*, i8*, i32*, %struct.bpf_iter_seq_info* }
%union.bpf_attr = type { %struct.anon.72 }
%struct.anon.72 = type { i32, i32, i64, i64, i32, i32, i64, i32, i32, [16 x i8], i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, i32 }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.133, %struct.list_head, %struct.list_head, %union.anon.134 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.131 }
%union.anon.131 = type { %struct.anon.132 }
%struct.anon.132 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.2, %union.anon.123, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.123 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.124, i32 }
%union.anon.124 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.101, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.101 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.136, %union.anon.137, %union.anon.138, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.141, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.136 = type { %struct.hlist_node }
%union.anon.137 = type { %struct.rb_node }
%union.anon.138 = type { %struct.anon.140 }
%struct.anon.140 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.141 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.142, void (i8*)*, i8* }
%union.anon.142 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.143, i16, i16 }
%union.anon.143 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.102, %union.anon.103, i32 }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%union.anon.102 = type { %struct.list_head }
%union.anon.103 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.116, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.pid_namespace = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type { i64 }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.104 }
%struct.anon.104 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.108 }
%struct.anon.108 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.115, i32, [12 x i8] }
%union.anon.115 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.116 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.117, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.120 }
%union.anon.117 = type { %struct.anon.118 }
%struct.anon.118 = type { i64, i64 }
%union.anon.120 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.133 = type { %struct.list_head }
%union.anon.134 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.125, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.126, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.127, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.130, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.125 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.126 = type { %struct.callback_head }
%union.anon.127 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.swap_info_struct = type { i64, i16, %struct.plist_node, i8, i32, i8*, %struct.swap_cluster_info*, %struct.swap_cluster_list, i32, i32, i32, i32, i32, i32, i32*, %struct.percpu_cluster*, %struct.rb_root, %struct.block_device*, %struct.file*, i32, %struct.spinlock, %struct.spinlock, %struct.work_struct, %struct.swap_cluster_list, [0 x %struct.plist_node] }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.swap_cluster_info = type { %struct.spinlock, i32 }
%struct.percpu_cluster = type { %struct.swap_cluster_info, i32 }
%struct.swap_cluster_list = type { %struct.swap_cluster_info, %struct.swap_cluster_info }
%union.anon.130 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.128 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.128 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.bpf_insn = type { i8, i8, i16, i32 }
%struct.bpf_local_storage_map = type opaque
%struct.bpf_local_storage = type opaque
%struct.bpf_iter_seq_info = type { %struct.seq_operations*, i32 (i8*, %struct.bpf_iter_aux_info*)*, void (i8*)*, i32 }
%struct.bpf_iter_aux_info = type opaque
%struct.bpf_map_memory = type { i32, %struct.user_struct* }
%struct.bpf_ksym = type { i64, i64, [128 x i8], %struct.list_head, %struct.latch_tree_node, i8 }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%struct.bpf_prog_ops = type { i32 (%struct.bpf_prog*, %union.bpf_attr*, %union.bpf_attr*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.bpf_prog_offload = type { %struct.bpf_prog*, %struct.net_device*, %struct.bpf_offload_dev*, i8*, %struct.list_head, i8, i8, i8*, i32 }
%struct.bpf_offload_dev = type opaque
%struct.btf = type opaque
%struct.bpf_func_info = type { i32, i32 }
%struct.bpf_func_info_aux = type { i16, i8 }
%struct.bpf_line_info = type { i32, i32, i32, i32 }
%struct.exception_table_entry = type { i32, i32, i32 }
%struct.bpf_prog_stats = type { i64, i64, %struct.u64_stats_sync }
%union.anon.92 = type { %struct.work_struct }
%struct.sock_fprog_kern = type { i16, %struct.sock_filter* }
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type { i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, i32, i32, %struct.Qdisc_ops*, %struct.qdisc_size_table*, %struct.hlist_node, i32, i32, %struct.netdev_queue*, %struct.net_rate_estimator*, %struct.gnet_stats_basic_cpu*, %struct.gnet_stats_queue*, i32, %struct.refcount_struct, %struct.sk_buff_head, %struct.qdisc_skb_head, %struct.gnet_stats_basic_packed, %struct.seqcount, %struct.gnet_stats_queue, i64, %struct.Qdisc*, %struct.sk_buff_head, %struct.spinlock, %struct.spinlock, i8, %struct.callback_head, [0 x i64] }
%struct.Qdisc_ops = type { %struct.Qdisc_ops*, %struct.Qdisc_class_ops*, [16 x i8], i32, i32, i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, %struct.sk_buff* (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, %struct.sk_buff*)*, i32 (%struct.Qdisc*, %struct.gnet_dump*)*, void (%struct.Qdisc*, i32)*, void (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*)*, i32 (%struct.Qdisc*)*, %struct.module* }
%struct.Qdisc_class_ops = type { i32, %struct.netdev_queue* (%struct.Qdisc*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.Qdisc*, %struct.Qdisc**, %struct.netlink_ext_ack*)*, %struct.Qdisc* (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, i64)*, i64 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, i32, i32, %struct.nlattr**, i64*, %struct.netlink_ext_ack*)*, i32 (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, %struct.qdisc_walker*)*, %struct.tcf_block* (%struct.Qdisc*, i64, %struct.netlink_ext_ack*)*, i64 (%struct.Qdisc*, i64, i32)*, void (%struct.Qdisc*, i64)*, i32 (%struct.Qdisc*, i64, %struct.sk_buff*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.gnet_dump*)* }
%struct.tcmsg = type { i8, i8, i16, i32, i32, i32, i32 }
%struct.qdisc_walker = type opaque
%struct.tcf_block = type { %struct.mutex, %struct.list_head, i32, i32, %struct.refcount_struct, %struct.net*, %struct.Qdisc*, %struct.rw_semaphore, %struct.flow_block, %struct.list_head, i8, %struct.atomic_t, i32, i32, %struct.anon.157, %struct.callback_head, [128 x %struct.hlist_head], %struct.mutex }
%struct.flow_block = type { %struct.list_head }
%struct.anon.157 = type { %struct.tcf_chain*, %struct.list_head }
%struct.tcf_chain = type { %struct.mutex, %struct.tcf_proto*, %struct.list_head, %struct.tcf_block*, i32, i32, i32, i8, i8, %struct.tcf_proto_ops*, i8*, %struct.callback_head }
%struct.tcf_proto = type { %struct.tcf_proto*, i8*, i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i16, i32, i8*, %struct.tcf_proto_ops*, %struct.tcf_chain*, %struct.spinlock, i8, %struct.refcount_struct, %struct.callback_head, %struct.hlist_node }
%struct.tcf_result = type { %union.anon.158 }
%union.anon.158 = type { %struct.anon.159 }
%struct.anon.159 = type { i64, i32 }
%struct.tcf_proto_ops = type { %struct.list_head, [16 x i8], i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i32 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, i1, %struct.netlink_ext_ack*)*, i8* (%struct.tcf_proto*, i32)*, void (%struct.tcf_proto*, i8*)*, i32 (%struct.net*, %struct.sk_buff*, %struct.tcf_proto*, i64, i32, %struct.nlattr**, i8**, i1, i1, %struct.netlink_ext_ack*)*, i32 (%struct.tcf_proto*, i8*, i8*, i1, %struct.netlink_ext_ack*)*, i1 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, %struct.tcf_walker*, i1)*, i32 (%struct.tcf_proto*, i1, i32 (i32, i8*, i8*)*, i8*, %struct.netlink_ext_ack*)*, void (%struct.tcf_proto*, i8*)*, void (%struct.tcf_proto*, i8*)*, void (i8*, i32, i64, i8*, i64)*, i8* (%struct.net*, %struct.tcf_chain*, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (i8*)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.sk_buff*, %struct.net*, i8*)*, %struct.module*, i32 }
%struct.tcf_walker = type opaque
%struct.gnet_dump = type { %struct.spinlock*, %struct.sk_buff*, %struct.nlattr*, i32, i32, i32, i8*, i32, %struct.tc_stats }
%struct.tc_stats = type { i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.qdisc_size_table = type { %struct.callback_head, %struct.list_head, %struct.tc_sizespec, i32, [0 x i16] }
%struct.tc_sizespec = type { i8, i8, i16, i32, i32, i32, i32, i32 }
%struct.net_rate_estimator = type opaque
%struct.gnet_stats_basic_cpu = type { %struct.gnet_stats_basic_packed, %struct.u64_stats_sync }
%struct.qdisc_skb_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.gnet_stats_basic_packed = type { i64, i64 }
%struct.gnet_stats_queue = type { i32, i32, i32, i32, i32 }
%struct.xdp_dev_bulk_queue = type opaque
%union.anon.161 = type { i8* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.rtnl_link_ops = type { %struct.list_head, i8*, i64, void (%struct.net_device*)*, i32, %struct.nla_policy*, i32 (%struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (%struct.net_device*, %struct.list_head*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i32 ()*, i32 ()*, i32, %struct.nla_policy*, i32 (%struct.net_device*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i64 (%struct.net_device*, %struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*, %struct.net_device*)*, %struct.net* (%struct.net_device*)*, i64 (%struct.net_device*, i32)*, i32 (%struct.sk_buff*, %struct.net_device*, i32*, i32)* }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type { %struct.ip_ra_chain*, %struct.sock*, %union.anon.98, %struct.callback_head }
%union.anon.98 = type { void (%struct.sock*)* }
%struct.inet_peer_base = type { %struct.rb_root, %struct.seqlock_t, i32 }
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.99, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.99 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type { i32, %struct.list_head, i32 (%struct.net*)*, i32 (%struct.net*, %struct.notifier_block*, %struct.netlink_ext_ack*)*, %struct.module*, %struct.callback_head }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.100 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.seg6_pernet_data = type opaque
%struct.anon.100 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.in6_addr = type { %union.anon.59 }
%union.anon.59 = type { [4 x i32] }
%struct.atomic64_t = type { i64 }
%union.anon.60 = type { i64 }
%union.anon.61 = type { %struct.hlist_node }
%union.anon.62 = type { i32 }
%union.anon.63 = type { i32 }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head }
%struct.anon.64 = type { %struct.atomic_t, i32, %struct.sk_buff*, %struct.sk_buff* }
%struct.sk_filter = type { %struct.refcount_struct, %struct.callback_head, %struct.bpf_prog* }
%union.anon.93 = type { %struct.socket_wq* }
%struct.socket_wq = type { %struct.wait_queue_head, %struct.fasync_struct*, i64, %struct.callback_head }
%struct.dst_entry = type { %struct.net_device*, %struct.dst_ops*, i64, i64, i8*, i32 (%struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, i16, i16, i16, i16, %struct.atomic_t, i32, i64, %struct.lwtunnel_state*, %struct.callback_head, i16, i16, i32 }
%struct.lwtunnel_state = type opaque
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.96 = type { %struct.sk_buff* }
%struct.sk_buff = type { %union.anon.46, %union.anon.49, %union.anon.50, [48 x i8], %union.anon.51, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.53, i32, i32, i32, i16, i16, %union.anon.55, %union.anon.56, %union.anon.57, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.48 }
%union.anon.48 = type { %struct.net_device* }
%union.anon.49 = type { %struct.sock* }
%union.anon.50 = type { i64 }
%union.anon.51 = type { %struct.anon.52 }
%struct.anon.52 = type { i64, void (%struct.sk_buff*)* }
%union.anon.53 = type { i32 }
%union.anon.55 = type { i32 }
%union.anon.56 = type { i32 }
%union.anon.57 = type { i16 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.proto = type { void (%struct.sock*, i64)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, i32)*, %struct.sock* (%struct.sock*, i32, i32*, i1)*, i32 (%struct.sock*, i32, i64)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, i32, i32, i8*, i8, i32)*, i32 (%struct.sock*, i32, i32, i8*, i32*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, %struct.msghdr*, i64, i32, i32, i32*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, i16)*, i32, i1 (%struct.sock*, i32)*, i1 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, %struct.atomic64_t*, %struct.percpu_counter*, i64*, i64*, i32*, i32*, i32, i32, i32, i8, %struct.kmem_cache*, i32, i32, i32, i32, %struct.percpu_counter*, %struct.request_sock_ops*, %struct.timewait_sock_ops*, %union.anon.58, %struct.module*, [32 x i8], %struct.list_head, i32 (%struct.sock*, i32)* }
%struct.msghdr = type { i8*, i32, %struct.iov_iter, %union.anon.45, i8, i64, i32, %struct.kiocb* }
%union.anon.45 = type { i8* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.request_sock_ops = type { i32, i32, %struct.kmem_cache*, i8*, i32 (%struct.sock*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*)*, void (%struct.request_sock*)*, void (%struct.request_sock*)* }
%struct.request_sock = type { %struct.sock_common, %struct.request_sock*, i16, i8, i8, i32, %struct.timer_list, %struct.request_sock_ops*, %struct.sock*, %struct.saved_syn*, i32, i32 }
%struct.saved_syn = type { i32, i32, i32, [0 x i8] }
%struct.timewait_sock_ops = type { %struct.kmem_cache*, i8*, i32, i32 (%struct.sock*, %struct.sock*, i8*)*, void (%struct.sock*)* }
%union.anon.58 = type { %struct.inet_hashinfo* }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.kuid_t = type { i32 }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.37 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.37 = type { %struct.callback_head }
%struct.atomic_t = type { i32 }
%struct.socket = type { i32, i16, i64, %struct.file*, %struct.sock*, %struct.proto_ops*, %struct.socket_wq }
%struct.proto_ops = type { i32, i32, %struct.module*, i32 (%struct.socket*)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.socket*, %struct.sockaddr*, i32, i32)*, i32 (%struct.socket*, %struct.socket*)*, i32 (%struct.socket*, %struct.socket*, i32, i1)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.file*, %struct.socket*, %struct.poll_table_struct*)*, i32 (%struct.socket*, i32, i64)*, i32 (%struct.socket*, i8*, i1, i1)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32, i32, i8*, i8, i32)*, i32 (%struct.socket*, i32, i32, i8*, i32*)*, void (%struct.seq_file*, %struct.socket*)*, i32 (%struct.socket*, %struct.msghdr*, i64)*, i32 (%struct.socket*, %struct.msghdr*, i64, i32)*, i32 (%struct.file*, %struct.socket*, %struct.vm_area_struct*)*, i64 (%struct.socket*, %struct.page*, i32, i64, i32)*, i64 (%struct.socket*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.sock*, i32)*, i32 (%struct.socket*)*, i32 (%struct.sock*, %struct.read_descriptor_t*, i32 (%struct.read_descriptor_t*, %struct.sk_buff*, i32, i64)*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, i32)* }
%struct.read_descriptor_t = type { i64, i64, %union.anon.97, i32 }
%union.anon.97 = type { i8* }
%struct.sock_cgroup_data = type {}
%struct.mem_cgroup = type opaque
%struct.sock_reuseport = type opaque
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.135, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.135 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.usb_device_id = type { i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i64 }
%struct.usb_dynids = type { %struct.spinlock, %struct.list_head }
%struct.usbdrv_wrap = type { %struct.device_driver, i32 }
%struct.module_version_attribute = type { %struct.module_attribute, i8*, i8* }
%struct.module_attribute = type { %struct.attribute, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)*, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)*, void (%struct.module*, i8*)*, i32 (%struct.module*)*, void (%struct.module*)* }
%struct.module_kobject = type { %struct.kobject, %struct.module*, %struct.kobject*, %struct.module_param_attrs*, %struct.completion* }
%struct.module_param_attrs = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.acpi_buffer = type { i64, i8* }
%struct.usb_device = type <{ i32, [16 x i8], i32, i32, i32, i32, i32, %struct.usb_tt*, i32, [2 x i32], [4 x i8], %struct.usb_device*, %struct.usb_bus*, %struct.usb_host_endpoint, %struct.device, %struct.usb_device_descriptor, [6 x i8], %struct.usb_host_bos*, %struct.usb_host_config*, %struct.usb_host_config*, [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*], i8**, i16, i8, i8, i8, i16, i8, i32, [4 x i8], i8*, i8*, i8*, %struct.list_head, i32, i32, %struct.atomic_t, [4 x i8], i64, i64, i8, [7 x i8], %struct.wusb_dev*, i32, i32, %struct.usb2_lpm_parameters, %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters, i32, i16, i8, i8 }>
%struct.usb_tt = type opaque
%struct.usb_bus = type { %struct.device*, %struct.device*, i32, i8*, i8, i8, i8, i32, i32, %struct.mutex, %struct.usb_devmap, %struct.usb_device*, %struct.usb_bus*, i32, i32, i32, i32 }
%struct.usb_devmap = type { [2 x i64] }
%struct.usb_device_descriptor = type { i8, i8, i16, i8, i8, i8, i8, i16, i16, i16, i8, i8, i8, i8 }
%struct.usb_host_bos = type { %struct.usb_bos_descriptor*, %struct.usb_ext_cap_descriptor*, %struct.usb_ss_cap_descriptor*, %struct.usb_ssp_cap_descriptor*, %struct.usb_ss_container_id_descriptor*, %struct.usb_ptm_cap_descriptor* }
%struct.usb_bos_descriptor = type <{ i8, i8, i16, i8 }>
%struct.usb_ext_cap_descriptor = type <{ i8, i8, i8, i32 }>
%struct.usb_ss_cap_descriptor = type { i8, i8, i8, i8, i16, i8, i8, i16 }
%struct.usb_ssp_cap_descriptor = type { i8, i8, i8, i8, i32, i16, i16, [1 x i32] }
%struct.usb_ss_container_id_descriptor = type { i8, i8, i8, i8, [16 x i8] }
%struct.usb_ptm_cap_descriptor = type { i8, i8, i8 }
%struct.usb_host_config = type { %struct.usb_config_descriptor, i8*, [16 x %struct.usb_interface_assoc_descriptor*], [32 x %struct.usb_interface*], [32 x %struct.usb_interface_cache*], i8*, i32 }
%struct.usb_config_descriptor = type <{ i8, i8, i16, i8, i8, i8, i8, i8 }>
%struct.usb_interface_cache = type { i32, %struct.kref, [0 x %struct.usb_host_interface] }
%struct.wusb_dev = type opaque
%struct.usb2_lpm_parameters = type { i32, i32 }
%struct.usb3_lpm_parameters = type { i32, i32, i32, i32 }
%struct.r8152 = type { i64, %struct.usb_device*, %struct.napi_struct, %struct.usb_interface*, %struct.net_device*, %struct.urb*, [4 x %struct.tx_agg], %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.sk_buff_head, %struct.sk_buff_head, %struct.spinlock, %struct.spinlock, %struct.delayed_work, %struct.delayed_work, %struct.mii_if_info, %struct.mutex, %struct.notifier_block, %struct.tasklet_struct, %struct.rtl_ops, %struct.ups_info, %struct.rtl_fw, %struct.atomic_t, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8*, i8, i8, i8 }
%struct.napi_struct = type { %struct.list_head, i64, i32, i32, i64, i32 (%struct.napi_struct*, i32)*, %struct.net_device*, [8 x %struct.gro_list], %struct.sk_buff*, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32 }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.urb = type { %struct.kref, i32, i8*, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.usb_anchor*, %struct.usb_device*, %struct.usb_host_endpoint*, i32, i32, i32, i32, i8*, i64, %struct.scatterlist*, i32, i32, i32, i32, i8*, i64, i32, i32, i32, i32, i8*, void (%struct.urb*)*, [0 x %struct.usb_iso_packet_descriptor] }
%struct.usb_anchor = type { %struct.list_head, %struct.wait_queue_head, %struct.spinlock, %struct.atomic_t, i8 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.usb_iso_packet_descriptor = type { i32, i32, i32, i32 }
%struct.tx_agg = type { %struct.list_head, %struct.urb*, %struct.r8152*, i8*, i8*, i32, i32 }
%struct.mii_if_info = type { i32, i32, i32, i32, i8, %struct.net_device*, i32 (%struct.net_device*, i32, i32)*, void (%struct.net_device*, i32, i32, i32)* }
%struct.tasklet_struct = type { %struct.tasklet_struct*, i64, %struct.atomic_t, i8, %union.anon.162, i64 }
%union.anon.162 = type { void (i64)* }
%struct.rtl_ops = type { void (%struct.r8152*)*, i32 (%struct.r8152*)*, void (%struct.r8152*)*, void (%struct.r8152*)*, void (%struct.r8152*)*, void (%struct.r8152*)*, i32 (%struct.r8152*, %struct.ethtool_eee*)*, i32 (%struct.r8152*, %struct.ethtool_eee*)*, i1 (%struct.r8152*)*, void (%struct.r8152*)*, void (%struct.r8152*, i1)* }
%struct.ups_info = type { i24 }
%struct.rtl_fw = type { i8*, %struct.firmware*, [32 x i8], i32 (%struct.r8152*)*, i32 (%struct.r8152*)*, i8 }
%struct.firmware = type { i64, i8*, i8* }
%struct.rx_agg = type { %struct.list_head, %struct.list_head, %struct.urb*, %struct.r8152*, %struct.page*, i8* }
%struct.anon.14 = type { i64, i8, i8, %struct.atomic_t, i32 }
%struct.fw_header = type { [32 x i8], [32 x i8], [0 x %struct.fw_block] }
%struct.fw_block = type { i32, i32 }
%struct.fw_phy_patch_key = type { %struct.fw_block, i16, i16, i32 }
%struct.fw_mac = type <{ %struct.fw_block, i16, i16, i16, i16, i16, i16, i16, i16, [16 x i16], i32, i16, i8, [0 x i8] }>
%struct.fw_phy_nc = type { %struct.fw_block, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i16], [0 x i8] }
%struct.netdev_hw_addr = type { %struct.list_head, [32 x i8], i8, i8, i32, i32, i32, %struct.callback_head }
%struct.crypto_shash = type { i32, %struct.crypto_tfm }
%struct.crypto_tfm = type { i32, i32, void (%struct.crypto_tfm*)*, %struct.crypto_alg*, [0 x i8*] }
%struct.crypto_alg = type { %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, %struct.refcount_struct, [128 x i8], [128 x i8], %struct.crypto_type*, %union.anon.163, i32 (%struct.crypto_tfm*)*, void (%struct.crypto_tfm*)*, void (%struct.crypto_alg*)*, %struct.module* }
%struct.crypto_type = type opaque
%union.anon.163 = type { %struct.cipher_alg }
%struct.cipher_alg = type { i32, i32, i32 (%struct.crypto_tfm*, i8*, i32)*, void (%struct.crypto_tfm*, i8*, i8*)*, void (%struct.crypto_tfm*, i8*, i8*)* }
%struct.shash_desc = type { %struct.crypto_shash*, [0 x i8*] }
%struct.shash_alg = type { i32 (%struct.shash_desc*)*, i32 (%struct.shash_desc*, i8*, i32)*, i32 (%struct.shash_desc*, i8*)*, i32 (%struct.shash_desc*, i8*, i32, i8*)*, i32 (%struct.shash_desc*, i8*, i32, i8*)*, i32 (%struct.shash_desc*, i8*)*, i32 (%struct.shash_desc*, i8*)*, i32 (%struct.crypto_shash*, i8*, i32)*, i32 (%struct.crypto_shash*)*, void (%struct.crypto_shash*)*, i32, [4 x i8], i32, i32, %struct.crypto_alg }
%struct.tx_desc = type { i32, i32 }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, %struct.sk_buff*, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, i8*, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.ipv6hdr = type { i8, [3 x i8], i16, i8, i8, %struct.in6_addr, %struct.in6_addr }
%struct.tcphdr = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.vlan_hdr = type { i16, i16 }
%struct.mii_ioctl_data = type { i16, i16, i16, i16 }
%struct.nodemask_t = type { [1 x i64] }
%struct.tally_counter = type { i64, i64, i64, i32, i16, i16, i32, i32, i64, i64, i32, i16, i16 }
%union.acpi_object = type { %struct.anon.169 }
%struct.anon.169 = type { i32, i32, i64, i32 }
%struct.acpi_object_list = type { i32, %union.acpi_object* }
%struct.anon.165 = type { i32, i32, i8* }
%struct.rx_desc = type { i32, i32, i32, i32, i32, i32 }

@__UNIQUE_ID_firmware601 = internal constant [37 x i8] c"r8152.firmware=rtl_nic/rtl8153a-2.fw\00", section ".modinfo", align 1, !dbg !0
@__UNIQUE_ID_firmware602 = internal constant [37 x i8] c"r8152.firmware=rtl_nic/rtl8153a-3.fw\00", section ".modinfo", align 1, !dbg !10815
@__UNIQUE_ID_firmware603 = internal constant [37 x i8] c"r8152.firmware=rtl_nic/rtl8153a-4.fw\00", section ".modinfo", align 1, !dbg !10818
@__UNIQUE_ID_firmware604 = internal constant [37 x i8] c"r8152.firmware=rtl_nic/rtl8153b-2.fw\00", section ".modinfo", align 1, !dbg !10820
@__UNIQUE_ID___addressable_rtl8152_driver_init605 = internal global i8* bitcast (i32 ()* @rtl8152_driver_init to i8*), section ".discard.addressable", align 8, !dbg !10822
@rtl8152_driver = internal global %struct.usb_driver { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i32 (%struct.usb_interface*, %struct.usb_device_id*)* @rtl8152_probe, void (%struct.usb_interface*)* @rtl8152_disconnect, i32 (%struct.usb_interface*, i32, i8*)* null, i32 (%struct.usb_interface*, i32)* @rtl8152_suspend, i32 (%struct.usb_interface*)* @rtl8152_resume, i32 (%struct.usb_interface*)* @rtl8152_reset_resume, i32 (%struct.usb_interface*)* @rtl8152_pre_reset, i32 (%struct.usb_interface*)* @rtl8152_post_reset, %struct.usb_device_id* getelementptr inbounds ([37 x %struct.usb_device_id], [37 x %struct.usb_device_id]* @rtl8152_table, i32 0, i32 0), %struct.attribute_group** null, %struct.usb_dynids zeroinitializer, %struct.usbdrv_wrap zeroinitializer, i8 6 }, align 8, !dbg !10899
@__exitcall_rtl8152_driver_exit = internal global void ()* @rtl8152_driver_exit, section ".exitcall.exit", align 8, !dbg !10824
@__UNIQUE_ID_author606 = internal constant [66 x i8] c"r8152.author=Realtek linux nic maintainers <nic_swsd@realtek.com>\00", section ".modinfo", align 1, !dbg !10829
@__UNIQUE_ID_description607 = internal constant [70 x i8] c"r8152.description=Realtek RTL8152/RTL8153 Based USB Ethernet Adapters\00", section ".modinfo", align 1, !dbg !10834
@__UNIQUE_ID_file608 = internal constant [33 x i8] c"r8152.file=drivers/net/usb/r8152\00", section ".modinfo", align 1, !dbg !10839
@__UNIQUE_ID_license609 = internal constant [18 x i8] c"r8152.license=GPL\00", section ".modinfo", align 1, !dbg !10844
@__UNIQUE_ID_version610 = internal constant [23 x i8] c"r8152.version=v1.11.11\00", section ".modinfo", align 1, !dbg !10849
@___modver_attr = internal global %struct.module_version_attribute { %struct.module_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.82, i32 0, i32 0), i16 292 }, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)* @__modver_version_show, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)* null, void (%struct.module*, i8*)* null, i32 (%struct.module*)* null, void (%struct.module*)* null }, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0) }, align 8, !dbg !10979
@__modver_attr = internal constant %struct.module_version_attribute* @___modver_attr, section "__modver", align 8, !dbg !10854
@.str = private unnamed_addr constant [6 x i8] c"r8152\00", align 1
@rtl8152_table = internal constant [37 x %struct.usb_device_id] [%struct.usb_device_id { i16 131, i16 3034, i16 -32688, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 3034, i16 -32688, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 131, i16 3034, i16 -32430, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 3034, i16 -32430, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 131, i16 3034, i16 -32429, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 3034, i16 -32429, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 131, i16 1118, i16 1963, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 1118, i16 1963, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 131, i16 1118, i16 1990, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 1118, i16 1990, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 131, i16 1118, i16 2343, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 1118, i16 2343, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 131, i16 1256, i16 -24319, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 1256, i16 -24319, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 131, i16 6127, i16 12367, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 6127, i16 12367, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 131, i16 6127, i16 12386, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 6127, i16 12386, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 131, i16 6127, i16 12393, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 6127, i16 12393, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 131, i16 6127, i16 12418, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 6127, i16 12418, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 131, i16 6127, i16 29189, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 6127, i16 29189, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 131, i16 6127, i16 29196, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 6127, i16 29196, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 131, i16 6127, i16 29204, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 6127, i16 29204, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 131, i16 6127, i16 -23673, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 6127, i16 -23673, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 131, i16 5041, i16 65, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 5041, i16 65, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 131, i16 2389, i16 2559, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 2389, i16 2559, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 131, i16 9047, i16 1537, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 9047, i16 1537, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i64 0 }, %struct.usb_device_id zeroinitializer], align 16, !dbg !10976
@.str.1 = private unnamed_addr constant [15 x i8] c"Out of memory\0A\00", align 1
@rtl8152_probe.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !10960
@.str.2 = private unnamed_addr constant [13 x i8] c"&tp->control\00", align 1
@rtl8152_netdev_ops = internal constant %struct.net_device_ops { i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* @rtl8152_open, i32 (%struct.net_device*)* @rtl8152_close, i32 (%struct.sk_buff*, %struct.net_device*)* @rtl8152_start_xmit, i64 (%struct.sk_buff*, %struct.net_device*, i64)* @rtl8152_features_check, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*)* @rtl8152_set_rx_mode, i32 (%struct.net_device*, i8*)* @rtl8152_set_mac_address, i32 (%struct.net_device*)* @eth_validate_addr, i32 (%struct.net_device*, %struct.ifreq*, i32)* @rtl8152_ioctl, i32 (%struct.net_device*, %struct.ifmap*)* null, i32 (%struct.net_device*, i32)* @rtl8152_change_mtu, i32 (%struct.net_device*, %struct.neigh_parms*)* null, void (%struct.net_device*, i32)* @rtl8152_tx_timeout, void (%struct.net_device*, %struct.rtnl_link_stats64*)* null, i1 (%struct.net_device*, i32)* null, i32 (i32, %struct.net_device*, i8*)* null, %struct.net_device_stats* (%struct.net_device*)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32, i16, i8, i16)* null, i32 (%struct.net_device*, i32, i32, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)* null, i32 (%struct.net_device*, i32, %struct.nlattr**)* null, i32 (%struct.net_device*, i32, %struct.sk_buff*)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)* null, i32 (%struct.net_device*, i32, i64, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.net_device*)* null, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)* null, i64 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, i64)* @rtl8152_set_features, i32 (%struct.net_device*, %struct.neighbour*)* null, void (%struct.net_device*, %struct.neighbour*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)* null, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)* null, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, i8*, i64)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, i8* (%struct.net_device*, %struct.net_device*)* null, void (%struct.net_device*, i8*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.sk_buff*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.netdev_bpf*)* null, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)* null, i32 (%struct.net_device*, i32, i32)* null, %struct.devlink_port* (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)* null, %struct.net_device* (%struct.net_device*)* null }, align 8, !dbg !10966
@.str.3 = private unnamed_addr constant [13 x i8] c"000001000000\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"000002000000\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"Dell TB16 Dock, disable RX aggregation\00", align 1
@ops = internal constant %struct.ethtool_ops { i32 17, void (%struct.net_device*, %struct.ethtool_drvinfo*)* @rtl8152_get_drvinfo, i32 (%struct.net_device*)* null, void (%struct.net_device*, %struct.ethtool_regs*, i8*)* null, void (%struct.net_device*, %struct.ethtool_wolinfo*)* @rtl8152_get_wol, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)* @rtl8152_set_wol, i32 (%struct.net_device*)* @rtl8152_get_msglevel, void (%struct.net_device*, i32)* @rtl8152_set_msglevel, i32 (%struct.net_device*)* @rtl8152_nway_reset, i32 (%struct.net_device*)* @ethtool_op_get_link, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* @rtl8152_get_coalesce, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* @rtl8152_set_coalesce, void (%struct.net_device*, %struct.ethtool_ringparam*)* @rtl8152_get_ringparam, i32 (%struct.net_device*, %struct.ethtool_ringparam*)* @rtl8152_set_ringparam, void (%struct.net_device*, %struct.ethtool_pause_stats*)* null, void (%struct.net_device*, %struct.ethtool_pauseparam*)* null, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)* null, void (%struct.net_device*, %struct.ethtool_test*, i64*)* null, void (%struct.net_device*, i32, i8*)* @rtl8152_get_strings, i32 (%struct.net_device*, i32)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* @rtl8152_get_ethtool_stats, i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, i32)* @rtl8152_get_sset_count, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)* null, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)* null, i32 (%struct.net_device*, %struct.ethtool_flash*)* null, i32 (%struct.net_device*, i32*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32*, i8*, i8*)* null, i32 (%struct.net_device*, i32*, i8*, i8)* null, i32 (%struct.net_device*, i32*, i8*, i8*, i32)* null, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)* null, void (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_ts_info*)* null, i32 (%struct.net_device*, %struct.ethtool_modinfo*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* @rtl_ethtool_get_eee, i32 (%struct.net_device*, %struct.ethtool_eee*)* @rtl_ethtool_set_eee, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* @rtl8152_get_tunable, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* @rtl8152_set_tunable, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @rtl8152_get_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @rtl8152_set_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null }, align 8, !dbg !10968
@agg_buf_sz = internal global i32 16384, align 4, !dbg !10974
@system_long_wq = external dso_local global %struct.workqueue_struct*, align 8
@.str.6 = private unnamed_addr constant [30 x i8] c"couldn't register the device\0A\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"v1.11.11\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"Unknown version 0x%04x\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.10 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"Unknown Device\0A\00", align 1
@__preempt_count = external dso_local global i32, section ".data", align 4
@.str.12 = private unnamed_addr constant [24 x i8] c"drivers/net/usb/r8152.c\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.13 = private unnamed_addr constant [22 x i8] c"load %s successfully\0A\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"patch request fail\0A\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"PHY not ready\00", align 1
@.str.16 = private unnamed_addr constant [22 x i8] c"rtl_nic/rtl8153a-2.fw\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"rtl_nic/rtl8153a-3.fw\00", align 1
@.str.18 = private unnamed_addr constant [22 x i8] c"rtl_nic/rtl8153a-4.fw\00", align 1
@.str.19 = private unnamed_addr constant [22 x i8] c"rtl_nic/rtl8153b-2.fw\00", align 1
@system_wq = external dso_local global %struct.workqueue_struct*, align 8
@.str.20 = private unnamed_addr constant [12 x i8] c"carrier on\0A\00", align 1
@.str.21 = private unnamed_addr constant [13 x i8] c"carrier off\0A\00", align 1
@.str.22 = private unnamed_addr constant [34 x i8] c"Couldn't submit rx[%p], ret = %d\0A\00", align 1
@.str.23 = private unnamed_addr constant [24 x i8] c"maybe reset is needed?\0A\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"Rx status %d\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"include/linux/netdevice.h\00", align 1
@.str.26 = private unnamed_addr constant [26 x i8] c"Promiscuous mode enabled\0A\00", align 1
@byte_rev_table = external dso_local constant [256 x i8], align 16
@.str.27 = private unnamed_addr constant [23 x i8] c"skip request firmware\0A\00", align 1
@.str.28 = private unnamed_addr constant [40 x i8] c"unable to load firmware patch %s (%ld)\0A\00", align 1
@.str.29 = private unnamed_addr constant [16 x i8] c"file too small\0A\00", align 1
@.str.30 = private unnamed_addr constant [34 x i8] c"multiple PLA firmware encountered\00", align 1
@.str.31 = private unnamed_addr constant [27 x i8] c"check PLA firmware failed\0A\00", align 1
@.str.32 = private unnamed_addr constant [34 x i8] c"multiple USB firmware encountered\00", align 1
@.str.33 = private unnamed_addr constant [27 x i8] c"check USB firmware failed\0A\00", align 1
@.str.34 = private unnamed_addr constant [22 x i8] c"check PHY_START fail\0A\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"Invalid length for PHY_START\0A\00", align 1
@.str.36 = private unnamed_addr constant [21 x i8] c"Check PHY_STOP fail\0A\00", align 1
@.str.37 = private unnamed_addr constant [29 x i8] c"Invalid length for PHY_STOP\0A\00", align 1
@.str.38 = private unnamed_addr constant [19 x i8] c"check PHY_NC fail\0A\00", align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"multiple PHY NC encountered\0A\00", align 1
@.str.40 = private unnamed_addr constant [30 x i8] c"check PHY NC firmware failed\0A\00", align 1
@.str.41 = private unnamed_addr constant [26 x i8] c"Unknown type %u is found\0A\00", align 1
@.str.42 = private unnamed_addr constant [18 x i8] c"without PHY_STOP\0A\00", align 1
@.str.43 = private unnamed_addr constant [7 x i8] c"sha256\00", align 1
@.str.44 = private unnamed_addr constant [27 x i8] c"digestsize incorrect (%u)\0A\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"checksum fail\0A\00", align 1
@.str.46 = private unnamed_addr constant [21 x i8] c"fw_offset too small\0A\00", align 1
@.str.47 = private unnamed_addr constant [19 x i8] c"invalid fw_offset\0A\00", align 1
@.str.48 = private unnamed_addr constant [22 x i8] c"invalid block length\0A\00", align 1
@.str.49 = private unnamed_addr constant [35 x i8] c"invalid register to load firmware\0A\00", align 1
@.str.50 = private unnamed_addr constant [31 x i8] c"invalid base address register\0A\00", align 1
@.str.51 = private unnamed_addr constant [31 x i8] c"invalid enabled mask register\0A\00", align 1
@.str.52 = private unnamed_addr constant [39 x i8] c"invalid start register of break point\0A\00", align 1
@.str.53 = private unnamed_addr constant [28 x i8] c"invalid break point number\0A\00", align 1
@.str.54 = private unnamed_addr constant [25 x i8] c"unused bp%u is not zero\0A\00", align 1
@.str.55 = private unnamed_addr constant [37 x i8] c"invalid patch mode enabled register\0A\00", align 1
@.str.56 = private unnamed_addr constant [37 x i8] c"invalid register to switch the mode\0A\00", align 1
@.str.57 = private unnamed_addr constant [18 x i8] c"failed tx_urb %d\0A\00", align 1
@.str.58 = private unnamed_addr constant [39 x i8] c"Invalid transport offset 0x%x for TSO\0A\00", align 1
@.str.59 = private unnamed_addr constant [31 x i8] c"Invalid transport offset 0x%x\0A\00", align 1
@.str.60 = private unnamed_addr constant [24 x i8] c"include/linux/if_vlan.h\00", align 1
@.str.61 = private unnamed_addr constant [14 x i8] c"Tx status %d\0A\00", align 1
@.str.62 = private unnamed_addr constant [28 x i8] c"intr_urb submit failed: %d\0A\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@.str.63 = private unnamed_addr constant [33 x i8] c"Stop submitting intr, status %d\0A\00", align 1
@.str.64 = private unnamed_addr constant [24 x i8] c"intr status -EOVERFLOW\0A\00", align 1
@.str.65 = private unnamed_addr constant [16 x i8] c"intr status %d\0A\00", align 1
@.str.66 = private unnamed_addr constant [32 x i8] c"can't resubmit intr, status %d\0A\00", align 1
@.str.67 = private unnamed_addr constant [12 x i8] c"Tx timeout\0A\00", align 1
@.str.68 = private unnamed_addr constant [10 x i8] c"usb-%s-%s\00", align 1
@rtl8152_gstrings = internal constant [13 x [32 x i8]] [[32 x i8] c"tx_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_missed\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"align_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_single_collisions\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_multi_collisions\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_unicast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_broadcast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_multicast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_aborted\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_underrun\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], align 16, !dbg !10970
@.str.69 = private unnamed_addr constant [29 x i8] c"Invalid rx copy break value\0A\00", align 1
@.str.70 = private unnamed_addr constant [21 x i8] c"Get ether addr fail\0A\00", align 1
@.str.71 = private unnamed_addr constant [24 x i8] c"Invalid ether addr %pM\0A\00", align 1
@.str.72 = private unnamed_addr constant [23 x i8] c"Random ether addr %pM\0A\00", align 1
@__const.vendor_mac_passthru_addr_read.buffer = private unnamed_addr constant %struct.acpi_buffer { i64 -1, i8* null }, align 8
@.str.73 = private unnamed_addr constant [6 x i8] c"\\MACA\00", align 1
@.str.74 = private unnamed_addr constant [10 x i8] c"\\_SB.AMAC\00", align 1
@.str.75 = private unnamed_addr constant [49 x i8] c"Invalid buffer for pass-thru MAC addr: (%d, %d)\0A\00", align 1
@.str.76 = private unnamed_addr constant [10 x i8] c"_AUXMAC_#\00", align 1
@.str.77 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str.78 = private unnamed_addr constant [48 x i8] c"Invalid header when reading pass-thru MAC addr\0A\00", align 1
@.str.79 = private unnamed_addr constant [45 x i8] c"Invalid MAC for pass-thru MAC addr: %d, %pM\0A\00", align 1
@.str.80 = private unnamed_addr constant [30 x i8] c"Using pass-thru MAC addr %pM\0A\00", align 1
@.str.81 = private unnamed_addr constant [14 x i8] c"linking down\0A\00", align 1
@.str.82 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@llvm.used = appending global [13 x i8*] [i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_firmware601, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_firmware602, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_firmware603, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_firmware604, i32 0, i32 0), i8* bitcast (i8** @__UNIQUE_ID___addressable_rtl8152_driver_init605 to i8*), i8* bitcast (void ()* @rtl8152_driver_exit to i8*), i8* bitcast (void ()** @__exitcall_rtl8152_driver_exit to i8*), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__UNIQUE_ID_author606, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__UNIQUE_ID_description607, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__UNIQUE_ID_file608, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__UNIQUE_ID_license609, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__UNIQUE_ID_version610, i32 0, i32 0), i8* bitcast (%struct.module_version_attribute** @__modver_attr to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_driver_init() #0 section ".init.text" !dbg !10987 {
entry:
  %call = call i32 @usb_register_driver(%struct.usb_driver* @rtl8152_driver, %struct.module* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #13, !dbg !10990
  ret i32 %call, !dbg !10990
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @rtl8152_driver_exit() #0 section ".exit.text" !dbg !10991 {
entry:
  call void @usb_deregister(%struct.usb_driver* @rtl8152_driver) #13, !dbg !10992
  ret void, !dbg !10992
}

; Function Attrs: noredzone
declare dso_local void @usb_deregister(%struct.usb_driver*) #1

; Function Attrs: noredzone
declare dso_local i32 @usb_register_driver(%struct.usb_driver*, %struct.module*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_probe(%struct.usb_interface* %intf, %struct.usb_device_id* %id) #2 !dbg !10962 {
entry:
  %retval = alloca i32, align 4
  %intf.addr = alloca %struct.usb_interface*, align 8
  %id.addr = alloca %struct.usb_device_id*, align 8
  %udev = alloca %struct.usb_device*, align 8
  %version = alloca i8, align 1
  %tp = alloca %struct.r8152*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %ret = alloca i32, align 4
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  %.compoundliteral54 = alloca %struct.atomic64_t, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !10993, metadata !DIExpression()), !dbg !10994
  store %struct.usb_device_id* %id, %struct.usb_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device_id** %id.addr, metadata !10995, metadata !DIExpression()), !dbg !10996
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !10997, metadata !DIExpression()), !dbg !10998
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !10999
  %call = call %struct.usb_device* @interface_to_usbdev(%struct.usb_interface* %0) #13, !dbg !11000
  store %struct.usb_device* %call, %struct.usb_device** %udev, align 8, !dbg !10998
  call void @llvm.dbg.declare(metadata i8* %version, metadata !11001, metadata !DIExpression()), !dbg !11002
  %1 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11003
  %call1 = call zeroext i8 @rtl_get_version(%struct.usb_interface* %1) #13, !dbg !11004
  store i8 %call1, i8* %version, align 1, !dbg !11002
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !11005, metadata !DIExpression()), !dbg !11006
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !11007, metadata !DIExpression()), !dbg !11008
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11009, metadata !DIExpression()), !dbg !11010
  %2 = load i8, i8* %version, align 1, !dbg !11011
  %conv = zext i8 %2 to i32, !dbg !11011
  %cmp = icmp eq i32 %conv, 0, !dbg !11013
  br i1 %cmp, label %if.then, label %if.end, !dbg !11014

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !11015
  br label %return, !dbg !11015

if.end:                                           ; preds = %entry
  %3 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !11016
  %actconfig = getelementptr inbounds %struct.usb_device, %struct.usb_device* %3, i32 0, i32 19, !dbg !11018
  %4 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig, align 8, !dbg !11018
  %desc = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %4, i32 0, i32 0, !dbg !11019
  %bConfigurationValue = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %desc, i32 0, i32 4, !dbg !11020
  %5 = load i8, i8* %bConfigurationValue, align 1, !dbg !11020
  %conv3 = zext i8 %5 to i32, !dbg !11016
  %cmp4 = icmp ne i32 %conv3, 1, !dbg !11021
  br i1 %cmp4, label %if.then6, label %if.end8, !dbg !11022

if.then6:                                         ; preds = %if.end
  %6 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !11023
  %call7 = call i32 @usb_driver_set_configuration(%struct.usb_device* %6, i32 1) #13, !dbg !11025
  store i32 -19, i32* %retval, align 4, !dbg !11026
  br label %return, !dbg !11026

if.end8:                                          ; preds = %if.end
  %7 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11027
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %7, i32 0, i32 1, !dbg !11029
  %8 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !dbg !11029
  %desc9 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %8, i32 0, i32 0, !dbg !11030
  %bNumEndpoints = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc9, i32 0, i32 4, !dbg !11031
  %9 = load i8, i8* %bNumEndpoints, align 4, !dbg !11031
  %conv10 = zext i8 %9 to i32, !dbg !11027
  %cmp11 = icmp slt i32 %conv10, 3, !dbg !11032
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !11033

if.then13:                                        ; preds = %if.end8
  store i32 -19, i32* %retval, align 4, !dbg !11034
  br label %return, !dbg !11034

if.end14:                                         ; preds = %if.end8
  %10 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !11035
  %call15 = call i32 @usb_reset_device(%struct.usb_device* %10) #13, !dbg !11036
  %call16 = call %struct.net_device* @alloc_etherdev_mqs(i32 1312, i32 1, i32 1) #13, !dbg !11037
  store %struct.net_device* %call16, %struct.net_device** %netdev, align 8, !dbg !11038
  %11 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11039
  %tobool = icmp ne %struct.net_device* %11, null, !dbg !11039
  br i1 %tobool, label %if.end18, label %if.then17, !dbg !11041

if.then17:                                        ; preds = %if.end14
  %12 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11042
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %12, i32 0, i32 7, !dbg !11042
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #14, !dbg !11042
  store i32 -12, i32* %retval, align 4, !dbg !11044
  br label %return, !dbg !11044

if.end18:                                         ; preds = %if.end14
  %13 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11045
  %dev19 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %13, i32 0, i32 7, !dbg !11045
  %14 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11045
  %dev20 = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 106, !dbg !11045
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev20, i32 0, i32 1, !dbg !11045
  store %struct.device* %dev19, %struct.device** %parent, align 8, !dbg !11045
  %15 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11046
  %call21 = call i8* @netdev_priv(%struct.net_device* %15) #13, !dbg !11047
  %16 = bitcast i8* %call21 to %struct.r8152*, !dbg !11047
  store %struct.r8152* %16, %struct.r8152** %tp, align 8, !dbg !11048
  %17 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11049
  %msg_enable = getelementptr inbounds %struct.r8152, %struct.r8152* %17, i32 0, i32 28, !dbg !11050
  store i32 32767, i32* %msg_enable, align 8, !dbg !11051
  %18 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !11052
  %19 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11053
  %udev22 = getelementptr inbounds %struct.r8152, %struct.r8152* %19, i32 0, i32 1, !dbg !11054
  store %struct.usb_device* %18, %struct.usb_device** %udev22, align 8, !dbg !11055
  %20 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11056
  %21 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11057
  %netdev23 = getelementptr inbounds %struct.r8152, %struct.r8152* %21, i32 0, i32 4, !dbg !11058
  store %struct.net_device* %20, %struct.net_device** %netdev23, align 8, !dbg !11059
  %22 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11060
  %23 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11061
  %intf24 = getelementptr inbounds %struct.r8152, %struct.r8152* %23, i32 0, i32 3, !dbg !11062
  store %struct.usb_interface* %22, %struct.usb_interface** %intf24, align 8, !dbg !11063
  %24 = load i8, i8* %version, align 1, !dbg !11064
  %25 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11065
  %version25 = getelementptr inbounds %struct.r8152, %struct.r8152* %25, i32 0, i32 39, !dbg !11066
  store i8 %24, i8* %version25, align 8, !dbg !11067
  %26 = load i8, i8* %version, align 1, !dbg !11068
  %conv26 = zext i8 %26 to i32, !dbg !11068
  switch i32 %conv26, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 7, label %sw.bb
  ], !dbg !11069

sw.bb:                                            ; preds = %if.end18, %if.end18, %if.end18
  %27 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11070
  %mii = getelementptr inbounds %struct.r8152, %struct.r8152* %27, i32 0, i32 17, !dbg !11072
  %supports_gmii = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii, i32 0, i32 4, !dbg !11073
  %bf.load = load i8, i8* %supports_gmii, align 8, !dbg !11074
  %bf.clear = and i8 %bf.load, -5, !dbg !11074
  store i8 %bf.clear, i8* %supports_gmii, align 8, !dbg !11074
  br label %sw.epilog, !dbg !11075

sw.default:                                       ; preds = %if.end18
  %28 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11076
  %mii27 = getelementptr inbounds %struct.r8152, %struct.r8152* %28, i32 0, i32 17, !dbg !11077
  %supports_gmii28 = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii27, i32 0, i32 4, !dbg !11078
  %bf.load29 = load i8, i8* %supports_gmii28, align 8, !dbg !11079
  %bf.clear30 = and i8 %bf.load29, -5, !dbg !11079
  %bf.set = or i8 %bf.clear30, 4, !dbg !11079
  store i8 %bf.set, i8* %supports_gmii28, align 8, !dbg !11079
  br label %sw.epilog, !dbg !11080

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %29 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11081
  %call31 = call i32 @rtl_ops_init(%struct.r8152* %29) #13, !dbg !11082
  store i32 %call31, i32* %ret, align 4, !dbg !11083
  %30 = load i32, i32* %ret, align 4, !dbg !11084
  %tobool32 = icmp ne i32 %30, 0, !dbg !11084
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !11086

if.then33:                                        ; preds = %sw.epilog
  br label %out, !dbg !11087

if.end34:                                         ; preds = %sw.epilog
  %31 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11088
  %call35 = call i32 @rtl_fw_init(%struct.r8152* %31) #13, !dbg !11089
  br label %do.body, !dbg !11090

do.body:                                          ; preds = %if.end34
  %32 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11091
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %32, i32 0, i32 18, !dbg !11091
  call void @__mutex_init(%struct.mutex* %control, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), %struct.lock_class_key* @rtl8152_probe.__key) #13, !dbg !11091
  br label %do.end, !dbg !11091

do.end:                                           ; preds = %do.body
  br label %do.body36, !dbg !11093

do.body36:                                        ; preds = %do.end
  br label %do.body37, !dbg !11094

do.body37:                                        ; preds = %do.body36
  %33 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11096
  %schedule = getelementptr inbounds %struct.r8152, %struct.r8152* %33, i32 0, i32 15, !dbg !11096
  %work = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %schedule, i32 0, i32 0, !dbg !11096
  call void @__init_work(%struct.work_struct* %work, i32 0) #13, !dbg !11096
  %34 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11096
  %schedule38 = getelementptr inbounds %struct.r8152, %struct.r8152* %34, i32 0, i32 15, !dbg !11096
  %work39 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %schedule38, i32 0, i32 0, !dbg !11096
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work39, i32 0, i32 0, !dbg !11096
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !11096
  store i64 68719476704, i64* %counter, align 8, !dbg !11096
  %35 = bitcast %struct.atomic64_t* %data to i8*, !dbg !11096
  %36 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !11096
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 8, i1 false), !dbg !11096
  %37 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11096
  %schedule40 = getelementptr inbounds %struct.r8152, %struct.r8152* %37, i32 0, i32 15, !dbg !11096
  %work41 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %schedule40, i32 0, i32 0, !dbg !11096
  %entry42 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work41, i32 0, i32 1, !dbg !11096
  call void @INIT_LIST_HEAD(%struct.list_head* %entry42) #13, !dbg !11096
  %38 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11096
  %schedule43 = getelementptr inbounds %struct.r8152, %struct.r8152* %38, i32 0, i32 15, !dbg !11096
  %work44 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %schedule43, i32 0, i32 0, !dbg !11096
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work44, i32 0, i32 2, !dbg !11096
  store void (%struct.work_struct*)* @rtl_work_func_t, void (%struct.work_struct*)** %func, align 8, !dbg !11096
  br label %do.end45, !dbg !11096

do.end45:                                         ; preds = %do.body37
  %39 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11094
  %schedule46 = getelementptr inbounds %struct.r8152, %struct.r8152* %39, i32 0, i32 15, !dbg !11094
  %timer = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %schedule46, i32 0, i32 1, !dbg !11094
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #13, !dbg !11094
  br label %do.end47, !dbg !11094

do.end47:                                         ; preds = %do.end45
  br label %do.body48, !dbg !11098

do.body48:                                        ; preds = %do.end47
  br label %do.body49, !dbg !11099

do.body49:                                        ; preds = %do.body48
  %40 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11101
  %hw_phy_work = getelementptr inbounds %struct.r8152, %struct.r8152* %40, i32 0, i32 16, !dbg !11101
  %work50 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %hw_phy_work, i32 0, i32 0, !dbg !11101
  call void @__init_work(%struct.work_struct* %work50, i32 0) #13, !dbg !11101
  %41 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11101
  %hw_phy_work51 = getelementptr inbounds %struct.r8152, %struct.r8152* %41, i32 0, i32 16, !dbg !11101
  %work52 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %hw_phy_work51, i32 0, i32 0, !dbg !11101
  %data53 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work52, i32 0, i32 0, !dbg !11101
  %counter55 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral54, i32 0, i32 0, !dbg !11101
  store i64 68719476704, i64* %counter55, align 8, !dbg !11101
  %42 = bitcast %struct.atomic64_t* %data53 to i8*, !dbg !11101
  %43 = bitcast %struct.atomic64_t* %.compoundliteral54 to i8*, !dbg !11101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 8, i1 false), !dbg !11101
  %44 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11101
  %hw_phy_work56 = getelementptr inbounds %struct.r8152, %struct.r8152* %44, i32 0, i32 16, !dbg !11101
  %work57 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %hw_phy_work56, i32 0, i32 0, !dbg !11101
  %entry58 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work57, i32 0, i32 1, !dbg !11101
  call void @INIT_LIST_HEAD(%struct.list_head* %entry58) #13, !dbg !11101
  %45 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11101
  %hw_phy_work59 = getelementptr inbounds %struct.r8152, %struct.r8152* %45, i32 0, i32 16, !dbg !11101
  %work60 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %hw_phy_work59, i32 0, i32 0, !dbg !11101
  %func61 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work60, i32 0, i32 2, !dbg !11101
  store void (%struct.work_struct*)* @rtl_hw_phy_work_func_t, void (%struct.work_struct*)** %func61, align 8, !dbg !11101
  br label %do.end62, !dbg !11101

do.end62:                                         ; preds = %do.body49
  %46 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11099
  %hw_phy_work63 = getelementptr inbounds %struct.r8152, %struct.r8152* %46, i32 0, i32 16, !dbg !11099
  %timer64 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %hw_phy_work63, i32 0, i32 1, !dbg !11099
  call void @init_timer_key(%struct.timer_list* %timer64, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #13, !dbg !11099
  br label %do.end65, !dbg !11099

do.end65:                                         ; preds = %do.end62
  %47 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11103
  %tx_tl = getelementptr inbounds %struct.r8152, %struct.r8152* %47, i32 0, i32 20, !dbg !11104
  %48 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11105
  %49 = ptrtoint %struct.r8152* %48 to i64, !dbg !11106
  call void @tasklet_init(%struct.tasklet_struct* %tx_tl, void (i64)* @bottom_half, i64 %49) #13, !dbg !11107
  %50 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11108
  %tx_tl66 = getelementptr inbounds %struct.r8152, %struct.r8152* %50, i32 0, i32 20, !dbg !11109
  call void @tasklet_disable(%struct.tasklet_struct* %tx_tl66) #13, !dbg !11110
  %51 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11111
  %netdev_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %51, i32 0, i32 32, !dbg !11112
  store %struct.net_device_ops* @rtl8152_netdev_ops, %struct.net_device_ops** %netdev_ops, align 8, !dbg !11113
  %52 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11114
  %watchdog_timeo = getelementptr inbounds %struct.net_device, %struct.net_device* %52, i32 0, i32 94, !dbg !11115
  store i32 1250, i32* %watchdog_timeo, align 8, !dbg !11116
  %53 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11117
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %53, i32 0, i32 15, !dbg !11118
  %54 = load i64, i64* %features, align 8, !dbg !11119
  %or = or i64 %54, 1099512742355, !dbg !11119
  store i64 %or, i64* %features, align 8, !dbg !11119
  %55 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11120
  %hw_features = getelementptr inbounds %struct.net_device, %struct.net_device* %55, i32 0, i32 16, !dbg !11121
  store i64 1099512742355, i64* %hw_features, align 8, !dbg !11122
  %56 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11123
  %vlan_features = getelementptr inbounds %struct.net_device, %struct.net_device* %56, i32 0, i32 18, !dbg !11124
  store i64 1114227, i64* %vlan_features, align 8, !dbg !11125
  %57 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11126
  %version67 = getelementptr inbounds %struct.r8152, %struct.r8152* %57, i32 0, i32 39, !dbg !11128
  %58 = load i8, i8* %version67, align 8, !dbg !11128
  %conv68 = zext i8 %58 to i32, !dbg !11126
  %cmp69 = icmp eq i32 %conv68, 1, !dbg !11129
  br i1 %cmp69, label %if.then71, label %if.end75, !dbg !11130

if.then71:                                        ; preds = %do.end65
  %59 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11131
  %features72 = getelementptr inbounds %struct.net_device, %struct.net_device* %59, i32 0, i32 15, !dbg !11133
  %60 = load i64, i64* %features72, align 8, !dbg !11134
  %and = and i64 %60, -1099511627777, !dbg !11134
  store i64 %and, i64* %features72, align 8, !dbg !11134
  %61 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11135
  %hw_features73 = getelementptr inbounds %struct.net_device, %struct.net_device* %61, i32 0, i32 16, !dbg !11136
  %62 = load i64, i64* %hw_features73, align 8, !dbg !11137
  %and74 = and i64 %62, -1099511627777, !dbg !11137
  store i64 %and74, i64* %hw_features73, align 8, !dbg !11137
  br label %if.end75, !dbg !11138

if.end75:                                         ; preds = %if.then71, %do.end65
  %63 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !11139
  %descriptor = getelementptr inbounds %struct.usb_device, %struct.usb_device* %63, i32 0, i32 15, !dbg !11139
  %idVendor = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor, i32 0, i32 7, !dbg !11139
  %64 = load i16, i16* %idVendor, align 8, !dbg !11139
  %conv76 = zext i16 %64 to i32, !dbg !11139
  %cmp77 = icmp eq i32 %conv76, 6127, !dbg !11141
  br i1 %cmp77, label %if.then79, label %if.end84, !dbg !11142

if.then79:                                        ; preds = %if.end75
  %65 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !11143
  %descriptor80 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %65, i32 0, i32 15, !dbg !11143
  %idProduct = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor80, i32 0, i32 8, !dbg !11143
  %66 = load i16, i16* %idProduct, align 2, !dbg !11143
  %conv81 = zext i16 %66 to i32, !dbg !11143
  switch i32 %conv81, label %sw.epilog83 [
    i32 12418, label %sw.bb82
    i32 41863, label %sw.bb82
  ], !dbg !11145

sw.bb82:                                          ; preds = %if.then79, %if.then79
  %67 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11146
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %67, i32 0, i32 0, !dbg !11148
  call void @set_bit(i64 9, i64* %flags) #13, !dbg !11149
  br label %sw.epilog83, !dbg !11150

sw.epilog83:                                      ; preds = %sw.bb82, %if.then79
  br label %if.end84, !dbg !11151

if.end84:                                         ; preds = %sw.epilog83, %if.end75
  %68 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !11152
  %descriptor85 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %68, i32 0, i32 15, !dbg !11152
  %bcdDevice = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor85, i32 0, i32 9, !dbg !11152
  %69 = load i16, i16* %bcdDevice, align 4, !dbg !11152
  %conv86 = zext i16 %69 to i32, !dbg !11152
  %cmp87 = icmp eq i32 %conv86, 12305, !dbg !11154
  br i1 %cmp87, label %land.lhs.true, label %if.end100, !dbg !11155

land.lhs.true:                                    ; preds = %if.end84
  %70 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !11156
  %serial = getelementptr inbounds %struct.usb_device, %struct.usb_device* %70, i32 0, i32 33, !dbg !11157
  %71 = load i8*, i8** %serial, align 8, !dbg !11157
  %tobool89 = icmp ne i8* %71, null, !dbg !11156
  br i1 %tobool89, label %land.lhs.true90, label %if.end100, !dbg !11158

land.lhs.true90:                                  ; preds = %land.lhs.true
  %72 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !11159
  %serial91 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %72, i32 0, i32 33, !dbg !11160
  %73 = load i8*, i8** %serial91, align 8, !dbg !11160
  %call92 = call i32 @strcmp(i8* %73, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #13, !dbg !11161
  %tobool93 = icmp ne i32 %call92, 0, !dbg !11161
  br i1 %tobool93, label %lor.lhs.false, label %if.then97, !dbg !11162

lor.lhs.false:                                    ; preds = %land.lhs.true90
  %74 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !11163
  %serial94 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %74, i32 0, i32 33, !dbg !11164
  %75 = load i8*, i8** %serial94, align 8, !dbg !11164
  %call95 = call i32 @strcmp(i8* %75, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)) #13, !dbg !11165
  %tobool96 = icmp ne i32 %call95, 0, !dbg !11165
  br i1 %tobool96, label %if.end100, label %if.then97, !dbg !11166

if.then97:                                        ; preds = %lor.lhs.false, %land.lhs.true90
  %76 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !11167
  %dev98 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %76, i32 0, i32 14, !dbg !11167
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev98, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i64 0, i64 0)) #14, !dbg !11167
  %77 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11169
  %flags99 = getelementptr inbounds %struct.r8152, %struct.r8152* %77, i32 0, i32 0, !dbg !11170
  call void @set_bit(i64 8, i64* %flags99) #13, !dbg !11171
  br label %if.end100, !dbg !11172

if.end100:                                        ; preds = %if.then97, %lor.lhs.false, %land.lhs.true, %if.end84
  %78 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11173
  %ethtool_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %78, i32 0, i32 33, !dbg !11174
  store %struct.ethtool_ops* @ops, %struct.ethtool_ops** %ethtool_ops, align 8, !dbg !11175
  %79 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11176
  %80 = load i32, i32* @agg_buf_sz, align 4, !dbg !11177
  %conv101 = zext i32 %80 to i64, !dbg !11177
  %sub = sub i64 %conv101, 8, !dbg !11177
  %sub102 = sub i64 %sub, 18, !dbg !11177
  %sub103 = sub i64 %sub102, 4, !dbg !11177
  %conv104 = trunc i64 %sub103 to i32, !dbg !11177
  call void @netif_set_gso_max_size(%struct.net_device* %79, i32 %conv104) #13, !dbg !11178
  %81 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11179
  %min_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %81, i32 0, i32 45, !dbg !11180
  store i32 68, i32* %min_mtu, align 4, !dbg !11181
  %82 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11182
  %version105 = getelementptr inbounds %struct.r8152, %struct.r8152* %82, i32 0, i32 39, !dbg !11183
  %83 = load i8, i8* %version105, align 8, !dbg !11183
  %conv106 = zext i8 %83 to i32, !dbg !11182
  switch i32 %conv106, label %sw.default108 [
    i32 1, label %sw.bb107
    i32 2, label %sw.bb107
  ], !dbg !11184

sw.bb107:                                         ; preds = %if.end100, %if.end100
  %84 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11185
  %max_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %84, i32 0, i32 46, !dbg !11187
  store i32 1500, i32* %max_mtu, align 8, !dbg !11188
  br label %sw.epilog110, !dbg !11189

sw.default108:                                    ; preds = %if.end100
  %85 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11190
  %max_mtu109 = getelementptr inbounds %struct.net_device, %struct.net_device* %85, i32 0, i32 46, !dbg !11191
  store i32 9194, i32* %max_mtu109, align 8, !dbg !11192
  br label %sw.epilog110, !dbg !11193

sw.epilog110:                                     ; preds = %sw.default108, %sw.bb107
  %86 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11194
  %87 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11195
  %mii111 = getelementptr inbounds %struct.r8152, %struct.r8152* %87, i32 0, i32 17, !dbg !11196
  %dev112 = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii111, i32 0, i32 5, !dbg !11197
  store %struct.net_device* %86, %struct.net_device** %dev112, align 8, !dbg !11198
  %88 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11199
  %mii113 = getelementptr inbounds %struct.r8152, %struct.r8152* %88, i32 0, i32 17, !dbg !11200
  %mdio_read = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii113, i32 0, i32 6, !dbg !11201
  store i32 (%struct.net_device*, i32, i32)* @read_mii_word, i32 (%struct.net_device*, i32, i32)** %mdio_read, align 8, !dbg !11202
  %89 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11203
  %mii114 = getelementptr inbounds %struct.r8152, %struct.r8152* %89, i32 0, i32 17, !dbg !11204
  %mdio_write = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii114, i32 0, i32 7, !dbg !11205
  store void (%struct.net_device*, i32, i32, i32)* @write_mii_word, void (%struct.net_device*, i32, i32, i32)** %mdio_write, align 8, !dbg !11206
  %90 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11207
  %mii115 = getelementptr inbounds %struct.r8152, %struct.r8152* %90, i32 0, i32 17, !dbg !11208
  %phy_id_mask = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii115, i32 0, i32 2, !dbg !11209
  store i32 63, i32* %phy_id_mask, align 8, !dbg !11210
  %91 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11211
  %mii116 = getelementptr inbounds %struct.r8152, %struct.r8152* %91, i32 0, i32 17, !dbg !11212
  %reg_num_mask = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii116, i32 0, i32 3, !dbg !11213
  store i32 31, i32* %reg_num_mask, align 4, !dbg !11214
  %92 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11215
  %mii117 = getelementptr inbounds %struct.r8152, %struct.r8152* %92, i32 0, i32 17, !dbg !11216
  %phy_id = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii117, i32 0, i32 0, !dbg !11217
  store i32 32, i32* %phy_id, align 8, !dbg !11218
  %93 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11219
  %autoneg = getelementptr inbounds %struct.r8152, %struct.r8152* %93, i32 0, i32 41, !dbg !11220
  store i8 1, i8* %autoneg, align 2, !dbg !11221
  %94 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11222
  %speed = getelementptr inbounds %struct.r8152, %struct.r8152* %94, i32 0, i32 36, !dbg !11223
  store i16 100, i16* %speed, align 2, !dbg !11224
  %95 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11225
  %advertising = getelementptr inbounds %struct.r8152, %struct.r8152* %95, i32 0, i32 31, !dbg !11226
  store i32 15, i32* %advertising, align 4, !dbg !11227
  %96 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11228
  %mii118 = getelementptr inbounds %struct.r8152, %struct.r8152* %96, i32 0, i32 17, !dbg !11230
  %supports_gmii119 = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii118, i32 0, i32 4, !dbg !11231
  %bf.load120 = load i8, i8* %supports_gmii119, align 8, !dbg !11231
  %bf.lshr = lshr i8 %bf.load120, 2, !dbg !11231
  %bf.clear121 = and i8 %bf.lshr, 1, !dbg !11231
  %bf.cast = zext i8 %bf.clear121 to i32, !dbg !11231
  %tobool122 = icmp ne i32 %bf.cast, 0, !dbg !11228
  br i1 %tobool122, label %if.then123, label %if.end129, !dbg !11232

if.then123:                                       ; preds = %sw.epilog110
  %97 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11233
  %speed124 = getelementptr inbounds %struct.r8152, %struct.r8152* %97, i32 0, i32 36, !dbg !11235
  store i16 1000, i16* %speed124, align 2, !dbg !11236
  %98 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11237
  %advertising125 = getelementptr inbounds %struct.r8152, %struct.r8152* %98, i32 0, i32 31, !dbg !11238
  %99 = load i32, i32* %advertising125, align 4, !dbg !11239
  %conv126 = zext i32 %99 to i64, !dbg !11239
  %or127 = or i64 %conv126, 32, !dbg !11239
  %conv128 = trunc i64 %or127 to i32, !dbg !11239
  store i32 %conv128, i32* %advertising125, align 4, !dbg !11239
  br label %if.end129, !dbg !11240

if.end129:                                        ; preds = %if.then123, %sw.epilog110
  %100 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11241
  %duplex = getelementptr inbounds %struct.r8152, %struct.r8152* %100, i32 0, i32 40, !dbg !11242
  store i8 1, i8* %duplex, align 1, !dbg !11243
  %101 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11244
  %rx_copybreak = getelementptr inbounds %struct.r8152, %struct.r8152* %101, i32 0, i32 33, !dbg !11245
  store i32 256, i32* %rx_copybreak, align 4, !dbg !11246
  %102 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11247
  %rx_pending = getelementptr inbounds %struct.r8152, %struct.r8152* %102, i32 0, i32 34, !dbg !11248
  store i32 100, i32* %rx_pending, align 8, !dbg !11249
  %103 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11250
  %needs_remote_wakeup = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %103, i32 0, i32 6, !dbg !11251
  %bf.load130 = load i8, i8* %needs_remote_wakeup, align 8, !dbg !11252
  %bf.clear131 = and i8 %bf.load130, -9, !dbg !11252
  %bf.set132 = or i8 %bf.clear131, 8, !dbg !11252
  store i8 %bf.set132, i8* %needs_remote_wakeup, align 8, !dbg !11252
  %104 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11253
  %call133 = call zeroext i1 @rtl_can_wakeup(%struct.r8152* %104) #13, !dbg !11255
  br i1 %call133, label %if.else, label %if.then134, !dbg !11256

if.then134:                                       ; preds = %if.end129
  %105 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11257
  call void @__rtl_set_wol(%struct.r8152* %105, i32 0) #13, !dbg !11258
  br label %if.end136, !dbg !11258

if.else:                                          ; preds = %if.end129
  %106 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11259
  %call135 = call i32 @__rtl_get_wol(%struct.r8152* %106) #13, !dbg !11260
  %107 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11261
  %saved_wolopts = getelementptr inbounds %struct.r8152, %struct.r8152* %107, i32 0, i32 27, !dbg !11262
  store i32 %call135, i32* %saved_wolopts, align 4, !dbg !11263
  br label %if.end136

if.end136:                                        ; preds = %if.else, %if.then134
  %108 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11264
  %rtl_ops = getelementptr inbounds %struct.r8152, %struct.r8152* %108, i32 0, i32 21, !dbg !11265
  %init = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops, i32 0, i32 0, !dbg !11266
  %109 = load void (%struct.r8152*)*, void (%struct.r8152*)** %init, align 8, !dbg !11266
  %110 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11267
  call void %109(%struct.r8152* %110) #13, !dbg !11264
  %111 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11268
  %rtl_fw = getelementptr inbounds %struct.r8152, %struct.r8152* %111, i32 0, i32 23, !dbg !11269
  %retry = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %rtl_fw, i32 0, i32 5, !dbg !11270
  store i8 1, i8* %retry, align 8, !dbg !11271
  %112 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_long_wq, align 8, !dbg !11272
  %113 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11273
  %hw_phy_work137 = getelementptr inbounds %struct.r8152, %struct.r8152* %113, i32 0, i32 16, !dbg !11274
  %call138 = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %112, %struct.delayed_work* %hw_phy_work137, i64 0) #13, !dbg !11275
  %114 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11276
  %call139 = call i32 @set_ethernet_addr(%struct.r8152* %114) #13, !dbg !11277
  %115 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11278
  %116 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11279
  %117 = bitcast %struct.r8152* %116 to i8*, !dbg !11279
  call void @usb_set_intfdata(%struct.usb_interface* %115, i8* %117) #13, !dbg !11280
  %118 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11281
  %119 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11282
  %napi = getelementptr inbounds %struct.r8152, %struct.r8152* %119, i32 0, i32 2, !dbg !11283
  call void @netif_napi_add(%struct.net_device* %118, %struct.napi_struct* %napi, i32 (%struct.napi_struct*, i32)* @r8152_poll, i32 64) #13, !dbg !11284
  %120 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11285
  %call140 = call i32 @register_netdev(%struct.net_device* %120) #13, !dbg !11286
  store i32 %call140, i32* %ret, align 4, !dbg !11287
  %121 = load i32, i32* %ret, align 4, !dbg !11288
  %cmp141 = icmp ne i32 %121, 0, !dbg !11290
  br i1 %cmp141, label %if.then143, label %if.end151, !dbg !11291

if.then143:                                       ; preds = %if.end136
  br label %do.body144, !dbg !11292

do.body144:                                       ; preds = %if.then143
  %122 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11294
  %msg_enable145 = getelementptr inbounds %struct.r8152, %struct.r8152* %122, i32 0, i32 28, !dbg !11294
  %123 = load i32, i32* %msg_enable145, align 8, !dbg !11294
  %and146 = and i32 %123, 2, !dbg !11294
  %tobool147 = icmp ne i32 %and146, 0, !dbg !11294
  br i1 %tobool147, label %if.then148, label %if.end149, !dbg !11297

if.then148:                                       ; preds = %do.body144
  %124 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11294
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %124, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i64 0, i64 0)) #14, !dbg !11294
  br label %if.end149, !dbg !11294

if.end149:                                        ; preds = %if.then148, %do.body144
  br label %do.end150, !dbg !11297

do.end150:                                        ; preds = %if.end149
  br label %out1, !dbg !11298

if.end151:                                        ; preds = %if.end136
  %125 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11299
  %saved_wolopts152 = getelementptr inbounds %struct.r8152, %struct.r8152* %125, i32 0, i32 27, !dbg !11301
  %126 = load i32, i32* %saved_wolopts152, align 4, !dbg !11301
  %tobool153 = icmp ne i32 %126, 0, !dbg !11299
  br i1 %tobool153, label %if.then154, label %if.else157, !dbg !11302

if.then154:                                       ; preds = %if.end151
  %127 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !11303
  %dev155 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %127, i32 0, i32 14, !dbg !11304
  %call156 = call i32 @device_set_wakeup_enable(%struct.device* %dev155, i1 zeroext true) #13, !dbg !11305
  br label %if.end160, !dbg !11305

if.else157:                                       ; preds = %if.end151
  %128 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !11306
  %dev158 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %128, i32 0, i32 14, !dbg !11307
  %call159 = call i32 @device_set_wakeup_enable(%struct.device* %dev158, i1 zeroext false) #13, !dbg !11308
  br label %if.end160

if.end160:                                        ; preds = %if.else157, %if.then154
  br label %do.body161, !dbg !11309

do.body161:                                       ; preds = %if.end160
  %129 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11310
  %msg_enable162 = getelementptr inbounds %struct.r8152, %struct.r8152* %129, i32 0, i32 28, !dbg !11310
  %130 = load i32, i32* %msg_enable162, align 8, !dbg !11310
  %and163 = and i32 %130, 2, !dbg !11310
  %tobool164 = icmp ne i32 %and163, 0, !dbg !11310
  br i1 %tobool164, label %if.then165, label %if.end166, !dbg !11313

if.then165:                                       ; preds = %do.body161
  %131 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11310
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %131, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)) #14, !dbg !11310
  br label %if.end166, !dbg !11310

if.end166:                                        ; preds = %if.then165, %do.body161
  br label %do.end167, !dbg !11313

do.end167:                                        ; preds = %if.end166
  store i32 0, i32* %retval, align 4, !dbg !11314
  br label %return, !dbg !11314

out1:                                             ; preds = %do.end150
  call void @llvm.dbg.label(metadata !11315), !dbg !11316
  %132 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11317
  %tx_tl168 = getelementptr inbounds %struct.r8152, %struct.r8152* %132, i32 0, i32 20, !dbg !11318
  call void @tasklet_kill(%struct.tasklet_struct* %tx_tl168) #13, !dbg !11319
  %133 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11320
  call void @usb_set_intfdata(%struct.usb_interface* %133, i8* null) #13, !dbg !11321
  br label %out, !dbg !11321

out:                                              ; preds = %out1, %if.then33
  call void @llvm.dbg.label(metadata !11322), !dbg !11323
  %134 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11324
  call void @free_netdev(%struct.net_device* %134) #13, !dbg !11325
  %135 = load i32, i32* %ret, align 4, !dbg !11326
  store i32 %135, i32* %retval, align 4, !dbg !11327
  br label %return, !dbg !11327

return:                                           ; preds = %out, %do.end167, %if.then17, %if.then13, %if.then6, %if.then
  %136 = load i32, i32* %retval, align 4, !dbg !11328
  ret i32 %136, !dbg !11328
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8152_disconnect(%struct.usb_interface* %intf) #2 !dbg !11329 {
entry:
  %intf.addr = alloca %struct.usb_interface*, align 8
  %tp = alloca %struct.r8152*, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !11330, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !11332, metadata !DIExpression()), !dbg !11333
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11334
  %call = call i8* @usb_get_intfdata(%struct.usb_interface* %0) #13, !dbg !11335
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !11335
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !11333
  %2 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11336
  call void @usb_set_intfdata(%struct.usb_interface* %2, i8* null) #13, !dbg !11337
  %3 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11338
  %tobool = icmp ne %struct.r8152* %3, null, !dbg !11338
  br i1 %tobool, label %if.then, label %if.end, !dbg !11340

if.then:                                          ; preds = %entry
  %4 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11341
  call void @rtl_set_unplug(%struct.r8152* %4) #13, !dbg !11343
  %5 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11344
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 4, !dbg !11345
  %6 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11345
  call void @unregister_netdev(%struct.net_device* %6) #13, !dbg !11346
  %7 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11347
  %tx_tl = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 20, !dbg !11348
  call void @tasklet_kill(%struct.tasklet_struct* %tx_tl) #13, !dbg !11349
  %8 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11350
  %hw_phy_work = getelementptr inbounds %struct.r8152, %struct.r8152* %8, i32 0, i32 16, !dbg !11351
  %call1 = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %hw_phy_work) #13, !dbg !11352
  %9 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11353
  %rtl_ops = getelementptr inbounds %struct.r8152, %struct.r8152* %9, i32 0, i32 21, !dbg !11354
  %unload = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops, i32 0, i32 5, !dbg !11355
  %10 = load void (%struct.r8152*)*, void (%struct.r8152*)** %unload, align 8, !dbg !11355
  %11 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11356
  call void %10(%struct.r8152* %11) #13, !dbg !11353
  %12 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11357
  call void @rtl8152_release_firmware(%struct.r8152* %12) #13, !dbg !11358
  %13 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11359
  %netdev2 = getelementptr inbounds %struct.r8152, %struct.r8152* %13, i32 0, i32 4, !dbg !11360
  %14 = load %struct.net_device*, %struct.net_device** %netdev2, align 8, !dbg !11360
  call void @free_netdev(%struct.net_device* %14) #13, !dbg !11361
  br label %if.end, !dbg !11362

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11363
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_suspend(%struct.usb_interface* %intf, i32 %message.coerce) #2 !dbg !11364 {
entry:
  %message = alloca %struct.pm_message, align 4
  %intf.addr = alloca %struct.usb_interface*, align 8
  %tp = alloca %struct.r8152*, align 8
  %ret = alloca i32, align 4
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %message, i32 0, i32 0
  store i32 %message.coerce, i32* %coerce.dive, align 4
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !11365, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.declare(metadata %struct.pm_message* %message, metadata !11367, metadata !DIExpression()), !dbg !11368
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !11369, metadata !DIExpression()), !dbg !11370
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11371
  %call = call i8* @usb_get_intfdata(%struct.usb_interface* %0) #13, !dbg !11372
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !11372
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !11370
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11373, metadata !DIExpression()), !dbg !11374
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11375
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 18, !dbg !11376
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !11377
  %event = getelementptr inbounds %struct.pm_message, %struct.pm_message* %message, i32 0, i32 0, !dbg !11378
  %3 = load i32, i32* %event, align 4, !dbg !11378
  %and = and i32 %3, 1024, !dbg !11378
  %cmp = icmp ne i32 %and, 0, !dbg !11378
  br i1 %cmp, label %if.then, label %if.else, !dbg !11380

if.then:                                          ; preds = %entry
  %4 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11381
  %call1 = call i32 @rtl8152_runtime_suspend(%struct.r8152* %4) #13, !dbg !11382
  store i32 %call1, i32* %ret, align 4, !dbg !11383
  br label %if.end, !dbg !11384

if.else:                                          ; preds = %entry
  %5 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11385
  %call2 = call i32 @rtl8152_system_suspend(%struct.r8152* %5) #13, !dbg !11386
  store i32 %call2, i32* %ret, align 4, !dbg !11387
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11388
  %control3 = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 18, !dbg !11389
  call void @mutex_unlock(%struct.mutex* %control3) #13, !dbg !11390
  %7 = load i32, i32* %ret, align 4, !dbg !11391
  ret i32 %7, !dbg !11392
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_resume(%struct.usb_interface* %intf) #2 !dbg !11393 {
entry:
  %intf.addr = alloca %struct.usb_interface*, align 8
  %tp = alloca %struct.r8152*, align 8
  %ret = alloca i32, align 4
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !11394, metadata !DIExpression()), !dbg !11395
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !11396, metadata !DIExpression()), !dbg !11397
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11398
  %call = call i8* @usb_get_intfdata(%struct.usb_interface* %0) #13, !dbg !11399
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !11399
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !11397
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11400, metadata !DIExpression()), !dbg !11401
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11402
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 18, !dbg !11403
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !11404
  %3 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11405
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %3, i32 0, i32 0, !dbg !11407
  %call1 = call zeroext i1 @test_bit(i64 4, i64* %flags) #13, !dbg !11408
  br i1 %call1, label %if.then, label %if.else, !dbg !11409

if.then:                                          ; preds = %entry
  %4 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11410
  %call2 = call i32 @rtl8152_runtime_resume(%struct.r8152* %4) #13, !dbg !11411
  store i32 %call2, i32* %ret, align 4, !dbg !11412
  br label %if.end, !dbg !11413

if.else:                                          ; preds = %entry
  %5 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11414
  %call3 = call i32 @rtl8152_system_resume(%struct.r8152* %5) #13, !dbg !11415
  store i32 %call3, i32* %ret, align 4, !dbg !11416
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11417
  %control4 = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 18, !dbg !11418
  call void @mutex_unlock(%struct.mutex* %control4) #13, !dbg !11419
  %7 = load i32, i32* %ret, align 4, !dbg !11420
  ret i32 %7, !dbg !11421
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_reset_resume(%struct.usb_interface* %intf) #2 !dbg !11422 {
entry:
  %intf.addr = alloca %struct.usb_interface*, align 8
  %tp = alloca %struct.r8152*, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !11423, metadata !DIExpression()), !dbg !11424
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !11425, metadata !DIExpression()), !dbg !11426
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11427
  %call = call i8* @usb_get_intfdata(%struct.usb_interface* %0) #13, !dbg !11428
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !11428
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !11426
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11429
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 0, !dbg !11430
  call void @clear_bit(i64 4, i64* %flags) #13, !dbg !11431
  %3 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11432
  %rtl_ops = getelementptr inbounds %struct.r8152, %struct.r8152* %3, i32 0, i32 21, !dbg !11433
  %init = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops, i32 0, i32 0, !dbg !11434
  %4 = load void (%struct.r8152*)*, void (%struct.r8152*)** %init, align 8, !dbg !11434
  %5 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11435
  call void %4(%struct.r8152* %5) #13, !dbg !11432
  %6 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_long_wq, align 8, !dbg !11436
  %7 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11437
  %hw_phy_work = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 16, !dbg !11438
  %call1 = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %6, %struct.delayed_work* %hw_phy_work, i64 0) #13, !dbg !11439
  %8 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11440
  %call2 = call i32 @set_ethernet_addr(%struct.r8152* %8) #13, !dbg !11441
  %9 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11442
  %call3 = call i32 @rtl8152_resume(%struct.usb_interface* %9) #13, !dbg !11443
  ret i32 %call3, !dbg !11444
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_pre_reset(%struct.usb_interface* %intf) #2 !dbg !11445 {
entry:
  %retval = alloca i32, align 4
  %intf.addr = alloca %struct.usb_interface*, align 8
  %tp = alloca %struct.r8152*, align 8
  %netdev = alloca %struct.net_device*, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !11446, metadata !DIExpression()), !dbg !11447
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !11448, metadata !DIExpression()), !dbg !11449
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11450
  %call = call i8* @usb_get_intfdata(%struct.usb_interface* %0) #13, !dbg !11451
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !11451
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !11449
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !11452, metadata !DIExpression()), !dbg !11453
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11454
  %tobool = icmp ne %struct.r8152* %2, null, !dbg !11454
  br i1 %tobool, label %if.end, label %if.then, !dbg !11456

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11457
  br label %return, !dbg !11457

if.end:                                           ; preds = %entry
  %3 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11458
  %netdev1 = getelementptr inbounds %struct.r8152, %struct.r8152* %3, i32 0, i32 4, !dbg !11459
  %4 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !11459
  store %struct.net_device* %4, %struct.net_device** %netdev, align 8, !dbg !11460
  %5 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11461
  %call2 = call zeroext i1 @netif_running(%struct.net_device* %5) #13, !dbg !11463
  br i1 %call2, label %if.end4, label %if.then3, !dbg !11464

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11465
  br label %return, !dbg !11465

if.end4:                                          ; preds = %if.end
  %6 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11466
  call void @netif_stop_queue(%struct.net_device* %6) #13, !dbg !11467
  %7 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11468
  %tx_tl = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 20, !dbg !11469
  call void @tasklet_disable(%struct.tasklet_struct* %tx_tl) #13, !dbg !11470
  %8 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11471
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %8, i32 0, i32 0, !dbg !11472
  call void @clear_bit(i64 2, i64* %flags) #13, !dbg !11473
  %9 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11474
  %intr_urb = getelementptr inbounds %struct.r8152, %struct.r8152* %9, i32 0, i32 5, !dbg !11475
  %10 = load %struct.urb*, %struct.urb** %intr_urb, align 8, !dbg !11475
  call void @usb_kill_urb(%struct.urb* %10) #13, !dbg !11476
  %11 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11477
  %schedule = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 15, !dbg !11478
  %call5 = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %schedule) #13, !dbg !11479
  %12 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11480
  %napi = getelementptr inbounds %struct.r8152, %struct.r8152* %12, i32 0, i32 2, !dbg !11481
  call void @napi_disable(%struct.napi_struct* %napi) #13, !dbg !11482
  %13 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11483
  %call6 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %13) #13, !dbg !11485
  br i1 %call6, label %if.then7, label %if.end9, !dbg !11486

if.then7:                                         ; preds = %if.end4
  %14 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11487
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %14, i32 0, i32 18, !dbg !11489
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !11490
  %15 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11491
  %rtl_ops = getelementptr inbounds %struct.r8152, %struct.r8152* %15, i32 0, i32 21, !dbg !11492
  %disable = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops, i32 0, i32 2, !dbg !11493
  %16 = load void (%struct.r8152*)*, void (%struct.r8152*)** %disable, align 8, !dbg !11493
  %17 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11494
  call void %16(%struct.r8152* %17) #13, !dbg !11491
  %18 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11495
  %control8 = getelementptr inbounds %struct.r8152, %struct.r8152* %18, i32 0, i32 18, !dbg !11496
  call void @mutex_unlock(%struct.mutex* %control8) #13, !dbg !11497
  br label %if.end9, !dbg !11498

if.end9:                                          ; preds = %if.then7, %if.end4
  store i32 0, i32* %retval, align 4, !dbg !11499
  br label %return, !dbg !11499

return:                                           ; preds = %if.end9, %if.then3, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !11500
  ret i32 %19, !dbg !11500
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_post_reset(%struct.usb_interface* %intf) #2 !dbg !11501 {
entry:
  %retval = alloca i32, align 4
  %intf.addr = alloca %struct.usb_interface*, align 8
  %tp = alloca %struct.r8152*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %sa = alloca %struct.sockaddr, align 2
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !11502, metadata !DIExpression()), !dbg !11503
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !11504, metadata !DIExpression()), !dbg !11505
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11506
  %call = call i8* @usb_get_intfdata(%struct.usb_interface* %0) #13, !dbg !11507
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !11507
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !11505
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !11508, metadata !DIExpression()), !dbg !11509
  call void @llvm.dbg.declare(metadata %struct.sockaddr* %sa, metadata !11510, metadata !DIExpression()), !dbg !11511
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11512
  %tobool = icmp ne %struct.r8152* %2, null, !dbg !11512
  br i1 %tobool, label %if.end, label %if.then, !dbg !11514

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11515
  br label %return, !dbg !11515

if.end:                                           ; preds = %entry
  %3 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11516
  %call1 = call i32 @determine_ethernet_addr(%struct.r8152* %3, %struct.sockaddr* %sa) #13, !dbg !11518
  %cmp = icmp sge i32 %call1, 0, !dbg !11519
  br i1 %cmp, label %if.then2, label %if.end5, !dbg !11520

if.then2:                                         ; preds = %if.end
  call void @rtnl_lock() #13, !dbg !11521
  %4 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11523
  %netdev3 = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 4, !dbg !11524
  %5 = load %struct.net_device*, %struct.net_device** %netdev3, align 8, !dbg !11524
  %call4 = call i32 @dev_set_mac_address(%struct.net_device* %5, %struct.sockaddr* %sa, %struct.netlink_ext_ack* null) #13, !dbg !11525
  call void @rtnl_unlock() #13, !dbg !11526
  br label %if.end5, !dbg !11527

if.end5:                                          ; preds = %if.then2, %if.end
  %6 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11528
  %netdev6 = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 4, !dbg !11529
  %7 = load %struct.net_device*, %struct.net_device** %netdev6, align 8, !dbg !11529
  store %struct.net_device* %7, %struct.net_device** %netdev, align 8, !dbg !11530
  %8 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11531
  %call7 = call zeroext i1 @netif_running(%struct.net_device* %8) #13, !dbg !11533
  br i1 %call7, label %if.end9, label %if.then8, !dbg !11534

if.then8:                                         ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !11535
  br label %return, !dbg !11535

if.end9:                                          ; preds = %if.end5
  %9 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11536
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %9, i32 0, i32 0, !dbg !11537
  call void @set_bit(i64 2, i64* %flags) #13, !dbg !11538
  %10 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11539
  %call10 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %10) #13, !dbg !11541
  br i1 %call10, label %if.then11, label %if.end15, !dbg !11542

if.then11:                                        ; preds = %if.end9
  %11 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11543
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 18, !dbg !11545
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !11546
  %12 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11547
  %rtl_ops = getelementptr inbounds %struct.r8152, %struct.r8152* %12, i32 0, i32 21, !dbg !11548
  %enable = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops, i32 0, i32 1, !dbg !11549
  %13 = load i32 (%struct.r8152*)*, i32 (%struct.r8152*)** %enable, align 8, !dbg !11549
  %14 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11550
  %call12 = call i32 %13(%struct.r8152* %14) #13, !dbg !11547
  %15 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11551
  %call13 = call i32 @rtl_start_rx(%struct.r8152* %15) #13, !dbg !11552
  %16 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11553
  call void @_rtl8152_set_rx_mode(%struct.net_device* %16) #13, !dbg !11554
  %17 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11555
  %control14 = getelementptr inbounds %struct.r8152, %struct.r8152* %17, i32 0, i32 18, !dbg !11556
  call void @mutex_unlock(%struct.mutex* %control14) #13, !dbg !11557
  br label %if.end15, !dbg !11558

if.end15:                                         ; preds = %if.then11, %if.end9
  %18 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11559
  %napi = getelementptr inbounds %struct.r8152, %struct.r8152* %18, i32 0, i32 2, !dbg !11560
  call void @napi_enable(%struct.napi_struct* %napi) #13, !dbg !11561
  %19 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11562
  %tx_tl = getelementptr inbounds %struct.r8152, %struct.r8152* %19, i32 0, i32 20, !dbg !11563
  call void @tasklet_enable(%struct.tasklet_struct* %tx_tl) #13, !dbg !11564
  %20 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11565
  call void @netif_wake_queue(%struct.net_device* %20) #13, !dbg !11566
  %21 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11567
  %intr_urb = getelementptr inbounds %struct.r8152, %struct.r8152* %21, i32 0, i32 5, !dbg !11568
  %22 = load %struct.urb*, %struct.urb** %intr_urb, align 8, !dbg !11568
  %call16 = call i32 @usb_submit_urb(%struct.urb* %22, i32 3264) #13, !dbg !11569
  %23 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11570
  %rx_done = getelementptr inbounds %struct.r8152, %struct.r8152* %23, i32 0, i32 9, !dbg !11572
  %call17 = call i32 @list_empty(%struct.list_head* %rx_done) #13, !dbg !11573
  %tobool18 = icmp ne i32 %call17, 0, !dbg !11573
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !11574

if.then19:                                        ; preds = %if.end15
  %24 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !11575
  %napi20 = getelementptr inbounds %struct.r8152, %struct.r8152* %24, i32 0, i32 2, !dbg !11576
  call void @napi_schedule(%struct.napi_struct* %napi20) #13, !dbg !11577
  br label %if.end21, !dbg !11577

if.end21:                                         ; preds = %if.then19, %if.end15
  store i32 0, i32* %retval, align 4, !dbg !11578
  br label %return, !dbg !11578

return:                                           ; preds = %if.end21, %if.then8, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !11579
  ret i32 %25, !dbg !11579
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.usb_device* @interface_to_usbdev(%struct.usb_interface* %intf) #2 !dbg !11580 {
entry:
  %intf.addr = alloca %struct.usb_interface*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.usb_device*, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !11583, metadata !DIExpression()), !dbg !11584
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11585, metadata !DIExpression()), !dbg !11587
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11587
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 7, !dbg !11587
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !11587
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11587
  %2 = bitcast %struct.device* %1 to i8*, !dbg !11587
  store i8* %2, i8** %__mptr, align 8, !dbg !11587
  br label %do.body, !dbg !11587

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11588

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !11587
  %add.ptr = getelementptr i8, i8* %3, i64 -160, !dbg !11587
  %4 = bitcast i8* %add.ptr to %struct.usb_device*, !dbg !11587
  store %struct.usb_device* %4, %struct.usb_device** %tmp, align 8, !dbg !11588
  %5 = load %struct.usb_device*, %struct.usb_device** %tmp, align 8, !dbg !11587
  ret %struct.usb_device* %5, !dbg !11590
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @rtl_get_version(%struct.usb_interface* %intf) #2 !dbg !11591 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !11594, metadata !DIExpression()), !dbg !11598
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !11606, metadata !DIExpression()), !dbg !11607
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !11608, metadata !DIExpression()), !dbg !11609
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !11610, metadata !DIExpression()), !dbg !11611
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !11612, metadata !DIExpression()), !dbg !11616
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !11618, metadata !DIExpression()), !dbg !11622
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !11624, metadata !DIExpression()), !dbg !11628
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !11633, metadata !DIExpression()), !dbg !11634
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !11635, metadata !DIExpression()), !dbg !11636
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !11637, metadata !DIExpression()), !dbg !11638
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !11639, metadata !DIExpression()), !dbg !11640
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !11641, metadata !DIExpression()), !dbg !11642
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11643, metadata !DIExpression()), !dbg !11644
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !11645, metadata !DIExpression()), !dbg !11646
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !11647, metadata !DIExpression()), !dbg !11648
  %retval = alloca i8, align 1
  %intf.addr = alloca %struct.usb_interface*, align 8
  %udev = alloca %struct.usb_device*, align 8
  %ocp_data = alloca i32, align 4
  %tmp = alloca i32*, align 8
  %version = alloca i8, align 1
  %ret = alloca i32, align 4
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !11649, metadata !DIExpression()), !dbg !11650
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !11651, metadata !DIExpression()), !dbg !11652
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11653
  %call = call %struct.usb_device* @interface_to_usbdev(%struct.usb_interface* %0) #13, !dbg !11654
  store %struct.usb_device* %call, %struct.usb_device** %udev, align 8, !dbg !11652
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !11655, metadata !DIExpression()), !dbg !11656
  store i32 0, i32* %ocp_data, align 4, !dbg !11656
  call void @llvm.dbg.declare(metadata i32** %tmp, metadata !11657, metadata !DIExpression()), !dbg !11659
  call void @llvm.dbg.declare(metadata i8* %version, metadata !11660, metadata !DIExpression()), !dbg !11661
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11662, metadata !DIExpression()), !dbg !11663
  store i64 4, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %1 = load i64, i64* %size.addr.i, align 8, !dbg !11664
  %2 = call i1 @llvm.is.constant.i64(i64 %1) #11, !dbg !11665
  br i1 %2, label %if.then.i, label %if.end9.i, !dbg !11666

if.then.i:                                        ; preds = %entry
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !11667
  %cmp.i = icmp ugt i64 %3, 8192, !dbg !11668
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11669

if.then1.i:                                       ; preds = %if.then.i
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11670
  %5 = load i32, i32* %flags.addr.i, align 4, !dbg !11671
  store i64 %4, i64* %size.addr.i.i, align 8
  store i32 %5, i32* %flags.addr.i.i, align 4
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !11672
  %call.i.i = call i32 @get_order(i64 %6) #15, !dbg !11673
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !11642
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !11674
  %8 = load i32, i32* %flags.addr.i.i, align 4, !dbg !11675
  %9 = load i32, i32* %order.i.i, align 4, !dbg !11676
  store i64 %7, i64* %size.addr.i.i.i, align 8
  store i32 %8, i32* %flags.addr.i.i.i, align 4
  store i32 %9, i32* %order.addr.i.i.i, align 4
  %10 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11677
  %11 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !11678
  %12 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !11679
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %10, i32 %11, i32 %12) #16, !dbg !11680
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !11680
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !11680
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !11680
  call void @llvm.assume(i1 %maskcond.i.i.i) #11, !dbg !11680
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !11681
  br label %kmalloc.exit, !dbg !11681

if.end.i:                                         ; preds = %if.then.i
  %13 = load i64, i64* %size.addr.i, align 8, !dbg !11682
  store i64 %13, i64* %size.addr.i11.i, align 8
  %14 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11683
  %tobool.i.i = icmp ne i64 %14, 0, !dbg !11683
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !11685

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !11686
  br label %kmalloc_index.exit.i, !dbg !11686

if.end.i.i:                                       ; preds = %if.end.i
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11687
  %cmp.i.i = icmp ule i64 %15, 8, !dbg !11689
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !11690

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11691
  br label %kmalloc_index.exit.i, !dbg !11691

if.end2.i.i:                                      ; preds = %if.end.i.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11692
  %cmp3.i.i = icmp ugt i64 %16, 64, !dbg !11694
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !11695

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11696
  %cmp4.i.i = icmp ule i64 %17, 96, !dbg !11697
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !11698

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !11699
  br label %kmalloc_index.exit.i, !dbg !11699

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11700
  %cmp7.i.i = icmp ugt i64 %18, 128, !dbg !11702
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !11703

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11704
  %cmp9.i.i = icmp ule i64 %19, 192, !dbg !11705
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !11706

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !11707
  br label %kmalloc_index.exit.i, !dbg !11707

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11708
  %cmp12.i.i = icmp ule i64 %20, 8, !dbg !11710
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !11711

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11712
  br label %kmalloc_index.exit.i, !dbg !11712

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11713
  %cmp15.i.i = icmp ule i64 %21, 16, !dbg !11715
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !11716

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !11717
  br label %kmalloc_index.exit.i, !dbg !11717

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11718
  %cmp18.i.i = icmp ule i64 %22, 32, !dbg !11720
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !11721

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !11722
  br label %kmalloc_index.exit.i, !dbg !11722

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11723
  %cmp21.i.i = icmp ule i64 %23, 64, !dbg !11725
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !11726

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !11727
  br label %kmalloc_index.exit.i, !dbg !11727

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11728
  %cmp24.i.i = icmp ule i64 %24, 128, !dbg !11730
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !11731

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !11732
  br label %kmalloc_index.exit.i, !dbg !11732

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11733
  %cmp27.i.i = icmp ule i64 %25, 256, !dbg !11735
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !11736

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !11737
  br label %kmalloc_index.exit.i, !dbg !11737

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11738
  %cmp30.i.i = icmp ule i64 %26, 512, !dbg !11740
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !11741

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !11742
  br label %kmalloc_index.exit.i, !dbg !11742

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11743
  %cmp33.i.i = icmp ule i64 %27, 1024, !dbg !11745
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !11746

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !11747
  br label %kmalloc_index.exit.i, !dbg !11747

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11748
  %cmp36.i.i = icmp ule i64 %28, 2048, !dbg !11750
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !11751

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !11752
  br label %kmalloc_index.exit.i, !dbg !11752

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11753
  %cmp39.i.i = icmp ule i64 %29, 4096, !dbg !11755
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !11756

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !11757
  br label %kmalloc_index.exit.i, !dbg !11757

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11758
  %cmp42.i.i = icmp ule i64 %30, 8192, !dbg !11760
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !11761

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !11762
  br label %kmalloc_index.exit.i, !dbg !11762

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11763
  %cmp45.i.i = icmp ule i64 %31, 16384, !dbg !11765
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !11766

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !11767
  br label %kmalloc_index.exit.i, !dbg !11767

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11768
  %cmp48.i.i = icmp ule i64 %32, 32768, !dbg !11770
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !11771

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !11772
  br label %kmalloc_index.exit.i, !dbg !11772

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11773
  %cmp51.i.i = icmp ule i64 %33, 65536, !dbg !11775
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !11776

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !11777
  br label %kmalloc_index.exit.i, !dbg !11777

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11778
  %cmp54.i.i = icmp ule i64 %34, 131072, !dbg !11780
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !11781

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !11782
  br label %kmalloc_index.exit.i, !dbg !11782

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11783
  %cmp57.i.i = icmp ule i64 %35, 262144, !dbg !11785
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !11786

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !11787
  br label %kmalloc_index.exit.i, !dbg !11787

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11788
  %cmp60.i.i = icmp ule i64 %36, 524288, !dbg !11790
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !11791

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !11792
  br label %kmalloc_index.exit.i, !dbg !11792

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11793
  %cmp63.i.i = icmp ule i64 %37, 1048576, !dbg !11795
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !11796

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !11797
  br label %kmalloc_index.exit.i, !dbg !11797

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11798
  %cmp66.i.i = icmp ule i64 %38, 2097152, !dbg !11800
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !11801

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !11802
  br label %kmalloc_index.exit.i, !dbg !11802

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11803
  %cmp69.i.i = icmp ule i64 %39, 4194304, !dbg !11805
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !11806

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !11807
  br label %kmalloc_index.exit.i, !dbg !11807

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11808
  %cmp72.i.i = icmp ule i64 %40, 8388608, !dbg !11810
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !11811

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !11812
  br label %kmalloc_index.exit.i, !dbg !11812

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11813
  %cmp75.i.i = icmp ule i64 %41, 16777216, !dbg !11815
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !11816

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !11817
  br label %kmalloc_index.exit.i, !dbg !11817

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11818
  %cmp78.i.i = icmp ule i64 %42, 33554432, !dbg !11820
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !11821

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !11822
  br label %kmalloc_index.exit.i, !dbg !11822

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11823
  %cmp81.i.i = icmp ule i64 %43, 67108864, !dbg !11825
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !11826

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !11827
  br label %kmalloc_index.exit.i, !dbg !11827

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #11, !dbg !11828, !srcloc !11831
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 93) #11, !dbg !11832, !srcloc !11835
  unreachable, !dbg !11836

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %44 = load i32, i32* %retval.i.i, align 4, !dbg !11837
  store i32 %44, i32* %index.i, align 4, !dbg !11838
  %45 = load i32, i32* %index.i, align 4, !dbg !11839
  %tobool.i = icmp ne i32 %45, 0, !dbg !11839
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !11841

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !11842
  br label %kmalloc.exit, !dbg !11842

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %46 = load i32, i32* %flags.addr.i, align 4, !dbg !11843
  store i32 %46, i32* %flags.addr.i13.i, align 4
  %47 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11844
  %and.i.i = and i32 %47, 17, !dbg !11844
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !11844
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !11844
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !11844
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11844
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !11846

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !11847
  br label %kmalloc_type.exit.i, !dbg !11847

if.end.i16.i:                                     ; preds = %if.end4.i
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11848
  %and2.i.i = and i32 %48, 1, !dbg !11849
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !11848
  %49 = zext i1 %tobool3.i.i to i64, !dbg !11848
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !11848
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !11850
  br label %kmalloc_type.exit.i, !dbg !11850

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %50 = load i32, i32* %retval.i12.i, align 4, !dbg !11851
  %idxprom.i = zext i32 %50 to i64, !dbg !11852
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !11852
  %51 = load i32, i32* %index.i, align 4, !dbg !11853
  %idxprom6.i = zext i32 %51 to i64, !dbg !11852
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !11852
  %52 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !11852
  %53 = load i32, i32* %flags.addr.i, align 4, !dbg !11854
  %54 = load i64, i64* %size.addr.i, align 8, !dbg !11855
  store %struct.kmem_cache* %52, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %53, i32* %flags.addr.i17.i, align 4
  store i64 %54, i64* %size.addr.i18.i, align 8
  %55 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11856
  %56 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11857
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %55, i32 %56) #16, !dbg !11858
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !11858
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !11858
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !11858
  call void @llvm.assume(i1 %maskcond.i.i) #11, !dbg !11858
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !11611
  %57 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11859
  %58 = load i8*, i8** %ret.i.i, align 8, !dbg !11860
  %59 = load i64, i64* %size.addr.i18.i, align 8, !dbg !11861
  %60 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11862
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %57, i8* %58, i64 %59, i32 %60) #16, !dbg !11863
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !11864
  %61 = load i8*, i8** %ret.i.i, align 8, !dbg !11865
  store i8* %61, i8** %retval.i, align 8, !dbg !11866
  br label %kmalloc.exit, !dbg !11866

if.end9.i:                                        ; preds = %entry
  %62 = load i64, i64* %size.addr.i, align 8, !dbg !11867
  %63 = load i32, i32* %flags.addr.i, align 4, !dbg !11868
  %call10.i = call noalias i8* @__kmalloc(i64 %62, i32 %63) #16, !dbg !11869
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !11869
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !11869
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !11869
  call void @llvm.assume(i1 %maskcond.i) #11, !dbg !11869
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !11870
  br label %kmalloc.exit, !dbg !11870

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %64 = load i8*, i8** %retval.i, align 8, !dbg !11871
  %65 = bitcast i8* %64 to i32*, !dbg !11872
  store i32* %65, i32** %tmp, align 8, !dbg !11873
  %66 = load i32*, i32** %tmp, align 8, !dbg !11874
  %tobool = icmp ne i32* %66, null, !dbg !11874
  br i1 %tobool, label %if.end, label %if.then, !dbg !11876

if.then:                                          ; preds = %kmalloc.exit
  store i8 0, i8* %retval, align 1, !dbg !11877
  br label %return, !dbg !11877

if.end:                                           ; preds = %kmalloc.exit
  %67 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !11878
  %68 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !11879
  %call2 = call i32 @__create_pipe(%struct.usb_device* %68, i32 0) #13, !dbg !11879
  %or = or i32 -2147483648, %call2, !dbg !11879
  %or3 = or i32 %or, 128, !dbg !11879
  %69 = load i32*, i32** %tmp, align 8, !dbg !11880
  %70 = bitcast i32* %69 to i8*, !dbg !11880
  %call4 = call i32 @usb_control_msg(%struct.usb_device* %67, i32 %or3, i8 zeroext 5, i8 zeroext -64, i16 zeroext -6640, i16 zeroext 256, i8* %70, i16 zeroext 4, i32 500) #13, !dbg !11881
  store i32 %call4, i32* %ret, align 4, !dbg !11882
  %71 = load i32, i32* %ret, align 4, !dbg !11883
  %cmp = icmp sgt i32 %71, 0, !dbg !11885
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !11886

if.then5:                                         ; preds = %if.end
  %72 = load i32*, i32** %tmp, align 8, !dbg !11887
  %73 = load i32, i32* %72, align 4, !dbg !11887
  %shr = lshr i32 %73, 16, !dbg !11888
  %and = and i32 %shr, 31984, !dbg !11889
  store i32 %and, i32* %ocp_data, align 4, !dbg !11890
  br label %if.end6, !dbg !11891

if.end6:                                          ; preds = %if.then5, %if.end
  %74 = load i32*, i32** %tmp, align 8, !dbg !11892
  %75 = bitcast i32* %74 to i8*, !dbg !11892
  call void @kfree(i8* %75) #13, !dbg !11893
  %76 = load i32, i32* %ocp_data, align 4, !dbg !11894
  switch i32 %76, label %sw.default [
    i32 19456, label %sw.bb
    i32 19472, label %sw.bb7
    i32 23552, label %sw.bb8
    i32 23568, label %sw.bb9
    i32 23584, label %sw.bb10
    i32 23600, label %sw.bb11
    i32 18432, label %sw.bb12
    i32 24576, label %sw.bb13
    i32 24592, label %sw.bb14
  ], !dbg !11895

sw.bb:                                            ; preds = %if.end6
  store i8 1, i8* %version, align 1, !dbg !11896
  br label %sw.epilog, !dbg !11898

sw.bb7:                                           ; preds = %if.end6
  store i8 2, i8* %version, align 1, !dbg !11899
  br label %sw.epilog, !dbg !11900

sw.bb8:                                           ; preds = %if.end6
  store i8 3, i8* %version, align 1, !dbg !11901
  br label %sw.epilog, !dbg !11902

sw.bb9:                                           ; preds = %if.end6
  store i8 4, i8* %version, align 1, !dbg !11903
  br label %sw.epilog, !dbg !11904

sw.bb10:                                          ; preds = %if.end6
  store i8 5, i8* %version, align 1, !dbg !11905
  br label %sw.epilog, !dbg !11906

sw.bb11:                                          ; preds = %if.end6
  store i8 6, i8* %version, align 1, !dbg !11907
  br label %sw.epilog, !dbg !11908

sw.bb12:                                          ; preds = %if.end6
  store i8 7, i8* %version, align 1, !dbg !11909
  br label %sw.epilog, !dbg !11910

sw.bb13:                                          ; preds = %if.end6
  store i8 8, i8* %version, align 1, !dbg !11911
  br label %sw.epilog, !dbg !11912

sw.bb14:                                          ; preds = %if.end6
  store i8 9, i8* %version, align 1, !dbg !11913
  br label %sw.epilog, !dbg !11914

sw.default:                                       ; preds = %if.end6
  store i8 0, i8* %version, align 1, !dbg !11915
  %77 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11916
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %77, i32 0, i32 7, !dbg !11916
  %78 = load i32, i32* %ocp_data, align 4, !dbg !11916
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0), i32 %78) #14, !dbg !11916
  br label %sw.epilog, !dbg !11917

sw.epilog:                                        ; preds = %sw.default, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb
  %79 = load i8, i8* %version, align 1, !dbg !11918
  store i8 %79, i8* %retval, align 1, !dbg !11919
  br label %return, !dbg !11919

return:                                           ; preds = %sw.epilog, %if.then
  %80 = load i8, i8* %retval, align 1, !dbg !11920
  ret i8 %80, !dbg !11920
}

; Function Attrs: noredzone
declare dso_local i32 @usb_driver_set_configuration(%struct.usb_device*, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @usb_reset_device(%struct.usb_device*) #1

; Function Attrs: noredzone
declare dso_local %struct.net_device* @alloc_etherdev_mqs(i32, i32, i32) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @netdev_priv(%struct.net_device* %dev) #2 !dbg !11921 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11924, metadata !DIExpression()), !dbg !11925
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11926
  %1 = bitcast %struct.net_device* %0 to i8*, !dbg !11927
  %add.ptr = getelementptr i8, i8* %1, i64 1984, !dbg !11928
  ret i8* %add.ptr, !dbg !11929
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl_ops_init(%struct.r8152* %tp) #2 !dbg !11930 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ops = alloca %struct.rtl_ops*, align 8
  %ret = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !11931, metadata !DIExpression()), !dbg !11932
  call void @llvm.dbg.declare(metadata %struct.rtl_ops** %ops, metadata !11933, metadata !DIExpression()), !dbg !11935
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !11936
  %rtl_ops = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 21, !dbg !11937
  store %struct.rtl_ops* %rtl_ops, %struct.rtl_ops** %ops, align 8, !dbg !11935
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11938, metadata !DIExpression()), !dbg !11939
  store i32 0, i32* %ret, align 4, !dbg !11939
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !11940
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %1, i32 0, i32 39, !dbg !11941
  %2 = load i8, i8* %version, align 8, !dbg !11941
  %conv = zext i8 %2 to i32, !dbg !11940
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 7, label %sw.bb
    i32 3, label %sw.bb1
    i32 4, label %sw.bb1
    i32 5, label %sw.bb1
    i32 6, label %sw.bb1
    i32 8, label %sw.bb16
    i32 9, label %sw.bb16
  ], !dbg !11942

sw.bb:                                            ; preds = %entry, %entry, %entry
  %3 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !11943
  %init = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %3, i32 0, i32 0, !dbg !11945
  store void (%struct.r8152*)* @r8152b_init, void (%struct.r8152*)** %init, align 8, !dbg !11946
  %4 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !11947
  %enable = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %4, i32 0, i32 1, !dbg !11948
  store i32 (%struct.r8152*)* @rtl8152_enable, i32 (%struct.r8152*)** %enable, align 8, !dbg !11949
  %5 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !11950
  %disable = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %5, i32 0, i32 2, !dbg !11951
  store void (%struct.r8152*)* @rtl8152_disable, void (%struct.r8152*)** %disable, align 8, !dbg !11952
  %6 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !11953
  %up = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %6, i32 0, i32 3, !dbg !11954
  store void (%struct.r8152*)* @rtl8152_up, void (%struct.r8152*)** %up, align 8, !dbg !11955
  %7 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !11956
  %down = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %7, i32 0, i32 4, !dbg !11957
  store void (%struct.r8152*)* @rtl8152_down, void (%struct.r8152*)** %down, align 8, !dbg !11958
  %8 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !11959
  %unload = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %8, i32 0, i32 5, !dbg !11960
  store void (%struct.r8152*)* @rtl8152_unload, void (%struct.r8152*)** %unload, align 8, !dbg !11961
  %9 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !11962
  %eee_get = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %9, i32 0, i32 6, !dbg !11963
  store i32 (%struct.r8152*, %struct.ethtool_eee*)* @r8152_get_eee, i32 (%struct.r8152*, %struct.ethtool_eee*)** %eee_get, align 8, !dbg !11964
  %10 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !11965
  %eee_set = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %10, i32 0, i32 7, !dbg !11966
  store i32 (%struct.r8152*, %struct.ethtool_eee*)* @r8152_set_eee, i32 (%struct.r8152*, %struct.ethtool_eee*)** %eee_set, align 8, !dbg !11967
  %11 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !11968
  %in_nway = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %11, i32 0, i32 8, !dbg !11969
  store i1 (%struct.r8152*)* @rtl8152_in_nway, i1 (%struct.r8152*)** %in_nway, align 8, !dbg !11970
  %12 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !11971
  %hw_phy_cfg = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %12, i32 0, i32 9, !dbg !11972
  store void (%struct.r8152*)* @r8152b_hw_phy_cfg, void (%struct.r8152*)** %hw_phy_cfg, align 8, !dbg !11973
  %13 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !11974
  %autosuspend_en = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %13, i32 0, i32 10, !dbg !11975
  store void (%struct.r8152*, i1)* @rtl_runtime_suspend_enable, void (%struct.r8152*, i1)** %autosuspend_en, align 8, !dbg !11976
  %14 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !11977
  %rx_buf_sz = getelementptr inbounds %struct.r8152, %struct.r8152* %14, i32 0, i32 32, !dbg !11978
  store i32 16384, i32* %rx_buf_sz, align 8, !dbg !11979
  %15 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !11980
  %eee_en = getelementptr inbounds %struct.r8152, %struct.r8152* %15, i32 0, i32 25, !dbg !11981
  store i8 1, i8* %eee_en, align 4, !dbg !11982
  %16 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !11983
  %eee_adv = getelementptr inbounds %struct.r8152, %struct.r8152* %16, i32 0, i32 37, !dbg !11984
  store i16 2, i16* %eee_adv, align 8, !dbg !11985
  br label %sw.epilog, !dbg !11986

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry
  %17 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !11987
  %init2 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %17, i32 0, i32 0, !dbg !11988
  store void (%struct.r8152*)* @r8153_init, void (%struct.r8152*)** %init2, align 8, !dbg !11989
  %18 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !11990
  %enable3 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %18, i32 0, i32 1, !dbg !11991
  store i32 (%struct.r8152*)* @rtl8153_enable, i32 (%struct.r8152*)** %enable3, align 8, !dbg !11992
  %19 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !11993
  %disable4 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %19, i32 0, i32 2, !dbg !11994
  store void (%struct.r8152*)* @rtl8153_disable, void (%struct.r8152*)** %disable4, align 8, !dbg !11995
  %20 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !11996
  %up5 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %20, i32 0, i32 3, !dbg !11997
  store void (%struct.r8152*)* @rtl8153_up, void (%struct.r8152*)** %up5, align 8, !dbg !11998
  %21 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !11999
  %down6 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %21, i32 0, i32 4, !dbg !12000
  store void (%struct.r8152*)* @rtl8153_down, void (%struct.r8152*)** %down6, align 8, !dbg !12001
  %22 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !12002
  %unload7 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %22, i32 0, i32 5, !dbg !12003
  store void (%struct.r8152*)* @rtl8153_unload, void (%struct.r8152*)** %unload7, align 8, !dbg !12004
  %23 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !12005
  %eee_get8 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %23, i32 0, i32 6, !dbg !12006
  store i32 (%struct.r8152*, %struct.ethtool_eee*)* @r8153_get_eee, i32 (%struct.r8152*, %struct.ethtool_eee*)** %eee_get8, align 8, !dbg !12007
  %24 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !12008
  %eee_set9 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %24, i32 0, i32 7, !dbg !12009
  store i32 (%struct.r8152*, %struct.ethtool_eee*)* @r8152_set_eee, i32 (%struct.r8152*, %struct.ethtool_eee*)** %eee_set9, align 8, !dbg !12010
  %25 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !12011
  %in_nway10 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %25, i32 0, i32 8, !dbg !12012
  store i1 (%struct.r8152*)* @rtl8153_in_nway, i1 (%struct.r8152*)** %in_nway10, align 8, !dbg !12013
  %26 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !12014
  %hw_phy_cfg11 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %26, i32 0, i32 9, !dbg !12015
  store void (%struct.r8152*)* @r8153_hw_phy_cfg, void (%struct.r8152*)** %hw_phy_cfg11, align 8, !dbg !12016
  %27 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !12017
  %autosuspend_en12 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %27, i32 0, i32 10, !dbg !12018
  store void (%struct.r8152*, i1)* @rtl8153_runtime_enable, void (%struct.r8152*, i1)** %autosuspend_en12, align 8, !dbg !12019
  %28 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12020
  %rx_buf_sz13 = getelementptr inbounds %struct.r8152, %struct.r8152* %28, i32 0, i32 32, !dbg !12021
  store i32 32768, i32* %rx_buf_sz13, align 8, !dbg !12022
  %29 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12023
  %eee_en14 = getelementptr inbounds %struct.r8152, %struct.r8152* %29, i32 0, i32 25, !dbg !12024
  store i8 1, i8* %eee_en14, align 4, !dbg !12025
  %30 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12026
  %eee_adv15 = getelementptr inbounds %struct.r8152, %struct.r8152* %30, i32 0, i32 37, !dbg !12027
  store i16 6, i16* %eee_adv15, align 8, !dbg !12028
  br label %sw.epilog, !dbg !12029

sw.bb16:                                          ; preds = %entry, %entry
  %31 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !12030
  %init17 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %31, i32 0, i32 0, !dbg !12031
  store void (%struct.r8152*)* @r8153b_init, void (%struct.r8152*)** %init17, align 8, !dbg !12032
  %32 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !12033
  %enable18 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %32, i32 0, i32 1, !dbg !12034
  store i32 (%struct.r8152*)* @rtl8153_enable, i32 (%struct.r8152*)** %enable18, align 8, !dbg !12035
  %33 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !12036
  %disable19 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %33, i32 0, i32 2, !dbg !12037
  store void (%struct.r8152*)* @rtl8153_disable, void (%struct.r8152*)** %disable19, align 8, !dbg !12038
  %34 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !12039
  %up20 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %34, i32 0, i32 3, !dbg !12040
  store void (%struct.r8152*)* @rtl8153b_up, void (%struct.r8152*)** %up20, align 8, !dbg !12041
  %35 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !12042
  %down21 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %35, i32 0, i32 4, !dbg !12043
  store void (%struct.r8152*)* @rtl8153b_down, void (%struct.r8152*)** %down21, align 8, !dbg !12044
  %36 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !12045
  %unload22 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %36, i32 0, i32 5, !dbg !12046
  store void (%struct.r8152*)* @rtl8153b_unload, void (%struct.r8152*)** %unload22, align 8, !dbg !12047
  %37 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !12048
  %eee_get23 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %37, i32 0, i32 6, !dbg !12049
  store i32 (%struct.r8152*, %struct.ethtool_eee*)* @r8153_get_eee, i32 (%struct.r8152*, %struct.ethtool_eee*)** %eee_get23, align 8, !dbg !12050
  %38 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !12051
  %eee_set24 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %38, i32 0, i32 7, !dbg !12052
  store i32 (%struct.r8152*, %struct.ethtool_eee*)* @r8152_set_eee, i32 (%struct.r8152*, %struct.ethtool_eee*)** %eee_set24, align 8, !dbg !12053
  %39 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !12054
  %in_nway25 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %39, i32 0, i32 8, !dbg !12055
  store i1 (%struct.r8152*)* @rtl8153_in_nway, i1 (%struct.r8152*)** %in_nway25, align 8, !dbg !12056
  %40 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !12057
  %hw_phy_cfg26 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %40, i32 0, i32 9, !dbg !12058
  store void (%struct.r8152*)* @r8153b_hw_phy_cfg, void (%struct.r8152*)** %hw_phy_cfg26, align 8, !dbg !12059
  %41 = load %struct.rtl_ops*, %struct.rtl_ops** %ops, align 8, !dbg !12060
  %autosuspend_en27 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %41, i32 0, i32 10, !dbg !12061
  store void (%struct.r8152*, i1)* @rtl8153b_runtime_enable, void (%struct.r8152*, i1)** %autosuspend_en27, align 8, !dbg !12062
  %42 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12063
  %rx_buf_sz28 = getelementptr inbounds %struct.r8152, %struct.r8152* %42, i32 0, i32 32, !dbg !12064
  store i32 32768, i32* %rx_buf_sz28, align 8, !dbg !12065
  %43 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12066
  %eee_en29 = getelementptr inbounds %struct.r8152, %struct.r8152* %43, i32 0, i32 25, !dbg !12067
  store i8 1, i8* %eee_en29, align 4, !dbg !12068
  %44 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12069
  %eee_adv30 = getelementptr inbounds %struct.r8152, %struct.r8152* %44, i32 0, i32 37, !dbg !12070
  store i16 6, i16* %eee_adv30, align 8, !dbg !12071
  br label %sw.epilog, !dbg !12072

sw.default:                                       ; preds = %entry
  store i32 -19, i32* %ret, align 4, !dbg !12073
  br label %do.body, !dbg !12074

do.body:                                          ; preds = %sw.default
  %45 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12075
  %msg_enable = getelementptr inbounds %struct.r8152, %struct.r8152* %45, i32 0, i32 28, !dbg !12075
  %46 = load i32, i32* %msg_enable, align 8, !dbg !12075
  %and = and i32 %46, 2, !dbg !12075
  %tobool = icmp ne i32 %and, 0, !dbg !12075
  br i1 %tobool, label %if.then, label %if.end, !dbg !12078

if.then:                                          ; preds = %do.body
  %47 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12075
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %47, i32 0, i32 4, !dbg !12075
  %48 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12075
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %48, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0)) #14, !dbg !12075
  br label %if.end, !dbg !12075

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !12078

do.end:                                           ; preds = %if.end
  br label %sw.epilog, !dbg !12079

sw.epilog:                                        ; preds = %do.end, %sw.bb16, %sw.bb1, %sw.bb
  %49 = load i32, i32* %ret, align 4, !dbg !12080
  ret i32 %49, !dbg !12081
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl_fw_init(%struct.r8152* %tp) #2 !dbg !12082 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %rtl_fw = alloca %struct.rtl_fw*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !12083, metadata !DIExpression()), !dbg !12084
  call void @llvm.dbg.declare(metadata %struct.rtl_fw** %rtl_fw, metadata !12085, metadata !DIExpression()), !dbg !12087
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12088
  %rtl_fw1 = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 23, !dbg !12089
  store %struct.rtl_fw* %rtl_fw1, %struct.rtl_fw** %rtl_fw, align 8, !dbg !12087
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12090
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %1, i32 0, i32 39, !dbg !12091
  %2 = load i8, i8* %version, align 8, !dbg !12091
  %conv = zext i8 %2 to i32, !dbg !12090
  switch i32 %conv, label %sw.default [
    i32 4, label %sw.bb
    i32 5, label %sw.bb2
    i32 6, label %sw.bb6
    i32 9, label %sw.bb9
  ], !dbg !12092

sw.bb:                                            ; preds = %entry
  %3 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !12093
  %fw_name = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %3, i32 0, i32 0, !dbg !12095
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0), i8** %fw_name, align 8, !dbg !12096
  %4 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !12097
  %pre_fw = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %4, i32 0, i32 3, !dbg !12098
  store i32 (%struct.r8152*)* @r8153_pre_firmware_1, i32 (%struct.r8152*)** %pre_fw, align 8, !dbg !12099
  %5 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !12100
  %post_fw = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %5, i32 0, i32 4, !dbg !12101
  store i32 (%struct.r8152*)* @r8153_post_firmware_1, i32 (%struct.r8152*)** %post_fw, align 8, !dbg !12102
  br label %sw.epilog, !dbg !12103

sw.bb2:                                           ; preds = %entry
  %6 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !12104
  %fw_name3 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %6, i32 0, i32 0, !dbg !12105
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0), i8** %fw_name3, align 8, !dbg !12106
  %7 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !12107
  %pre_fw4 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %7, i32 0, i32 3, !dbg !12108
  store i32 (%struct.r8152*)* @r8153_pre_firmware_2, i32 (%struct.r8152*)** %pre_fw4, align 8, !dbg !12109
  %8 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !12110
  %post_fw5 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %8, i32 0, i32 4, !dbg !12111
  store i32 (%struct.r8152*)* @r8153_post_firmware_2, i32 (%struct.r8152*)** %post_fw5, align 8, !dbg !12112
  br label %sw.epilog, !dbg !12113

sw.bb6:                                           ; preds = %entry
  %9 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !12114
  %fw_name7 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %9, i32 0, i32 0, !dbg !12115
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i64 0, i64 0), i8** %fw_name7, align 8, !dbg !12116
  %10 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !12117
  %post_fw8 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %10, i32 0, i32 4, !dbg !12118
  store i32 (%struct.r8152*)* @r8153_post_firmware_3, i32 (%struct.r8152*)** %post_fw8, align 8, !dbg !12119
  br label %sw.epilog, !dbg !12120

sw.bb9:                                           ; preds = %entry
  %11 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !12121
  %fw_name10 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %11, i32 0, i32 0, !dbg !12122
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i64 0, i64 0), i8** %fw_name10, align 8, !dbg !12123
  %12 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !12124
  %pre_fw11 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %12, i32 0, i32 3, !dbg !12125
  store i32 (%struct.r8152*)* @r8153b_pre_firmware_1, i32 (%struct.r8152*)** %pre_fw11, align 8, !dbg !12126
  %13 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !12127
  %post_fw12 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %13, i32 0, i32 4, !dbg !12128
  store i32 (%struct.r8152*)* @r8153b_post_firmware_1, i32 (%struct.r8152*)** %post_fw12, align 8, !dbg !12129
  br label %sw.epilog, !dbg !12130

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !12131

sw.epilog:                                        ; preds = %sw.default, %sw.bb9, %sw.bb6, %sw.bb2, %sw.bb
  ret i32 0, !dbg !12132
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #2 !dbg !12133 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !12136, metadata !DIExpression()), !dbg !12137
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !12138, metadata !DIExpression()), !dbg !12139
  ret void, !dbg !12140
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #2 !dbg !12141 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !12145, metadata !DIExpression()), !dbg !12146
  br label %do.body, !dbg !12147

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12148

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !12150

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !12148

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12152
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12152
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !12152
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !12152
  br label %do.end3, !dbg !12152

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !12148

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12154
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12155
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !12156
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !12157
  ret void, !dbg !12158
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl_work_func_t(%struct.work_struct* %work) #2 !dbg !12159 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %tp = alloca %struct.r8152*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.r8152*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !12160, metadata !DIExpression()), !dbg !12161
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !12162, metadata !DIExpression()), !dbg !12163
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12164, metadata !DIExpression()), !dbg !12166
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !12166
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !12166
  store i8* %1, i8** %__mptr, align 8, !dbg !12166
  br label %do.body, !dbg !12166

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12167

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12166
  %add.ptr = getelementptr i8, i8* %2, i64 -760, !dbg !12166
  %3 = bitcast i8* %add.ptr to %struct.r8152*, !dbg !12166
  store %struct.r8152* %3, %struct.r8152** %tmp, align 8, !dbg !12167
  %4 = load %struct.r8152*, %struct.r8152** %tmp, align 8, !dbg !12166
  store %struct.r8152* %4, %struct.r8152** %tp, align 8, !dbg !12163
  %5 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12169
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 0, !dbg !12171
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !12172
  br i1 %call, label %if.then, label %lor.lhs.false, !dbg !12173

lor.lhs.false:                                    ; preds = %do.end
  %6 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12174
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 4, !dbg !12175
  %7 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12175
  %call1 = call zeroext i1 @netif_running(%struct.net_device* %7) #13, !dbg !12176
  br i1 %call1, label %if.end, label %if.then, !dbg !12177

if.then:                                          ; preds = %lor.lhs.false, %do.end
  br label %return, !dbg !12178

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12179
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %8, i32 0, i32 3, !dbg !12181
  %9 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !12181
  %call2 = call i32 @usb_autopm_get_interface(%struct.usb_interface* %9) #13, !dbg !12182
  %cmp = icmp slt i32 %call2, 0, !dbg !12183
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !12184

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !12185

if.end4:                                          ; preds = %if.end
  %10 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12186
  %flags5 = getelementptr inbounds %struct.r8152, %struct.r8152* %10, i32 0, i32 0, !dbg !12188
  %call6 = call zeroext i1 @test_bit(i64 2, i64* %flags5) #13, !dbg !12189
  br i1 %call6, label %if.end8, label %if.then7, !dbg !12190

if.then7:                                         ; preds = %if.end4
  br label %out1, !dbg !12191

if.end8:                                          ; preds = %if.end4
  %11 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12192
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 18, !dbg !12194
  %call9 = call i32 @mutex_trylock(%struct.mutex* %control) #13, !dbg !12195
  %tobool = icmp ne i32 %call9, 0, !dbg !12195
  br i1 %tobool, label %if.end12, label %if.then10, !dbg !12196

if.then10:                                        ; preds = %if.end8
  %12 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12197
  %schedule = getelementptr inbounds %struct.r8152, %struct.r8152* %12, i32 0, i32 15, !dbg !12199
  %call11 = call zeroext i1 @schedule_delayed_work(%struct.delayed_work* %schedule, i64 0) #13, !dbg !12200
  br label %out1, !dbg !12201

if.end12:                                         ; preds = %if.end8
  %13 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12202
  %flags13 = getelementptr inbounds %struct.r8152, %struct.r8152* %13, i32 0, i32 0, !dbg !12204
  %call14 = call zeroext i1 @test_and_clear_bit(i64 3, i64* %flags13) #13, !dbg !12205
  br i1 %call14, label %if.then15, label %if.end16, !dbg !12206

if.then15:                                        ; preds = %if.end12
  %14 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12207
  call void @set_carrier(%struct.r8152* %14) #13, !dbg !12208
  br label %if.end16, !dbg !12208

if.end16:                                         ; preds = %if.then15, %if.end12
  %15 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12209
  %flags17 = getelementptr inbounds %struct.r8152, %struct.r8152* %15, i32 0, i32 0, !dbg !12211
  %call18 = call zeroext i1 @test_and_clear_bit(i64 1, i64* %flags17) #13, !dbg !12212
  br i1 %call18, label %if.then19, label %if.end21, !dbg !12213

if.then19:                                        ; preds = %if.end16
  %16 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12214
  %netdev20 = getelementptr inbounds %struct.r8152, %struct.r8152* %16, i32 0, i32 4, !dbg !12215
  %17 = load %struct.net_device*, %struct.net_device** %netdev20, align 8, !dbg !12215
  call void @_rtl8152_set_rx_mode(%struct.net_device* %17) #13, !dbg !12216
  br label %if.end21, !dbg !12216

if.end21:                                         ; preds = %if.then19, %if.end16
  %18 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12217
  %flags22 = getelementptr inbounds %struct.r8152, %struct.r8152* %18, i32 0, i32 0, !dbg !12219
  %call23 = call zeroext i1 @test_and_clear_bit(i64 6, i64* %flags22) #13, !dbg !12220
  br i1 %call23, label %land.lhs.true, label %if.end27, !dbg !12221

land.lhs.true:                                    ; preds = %if.end21
  %19 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12222
  %netdev24 = getelementptr inbounds %struct.r8152, %struct.r8152* %19, i32 0, i32 4, !dbg !12223
  %20 = load %struct.net_device*, %struct.net_device** %netdev24, align 8, !dbg !12223
  %call25 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %20) #13, !dbg !12224
  br i1 %call25, label %if.then26, label %if.end27, !dbg !12225

if.then26:                                        ; preds = %land.lhs.true
  %21 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12226
  %tx_tl = getelementptr inbounds %struct.r8152, %struct.r8152* %21, i32 0, i32 20, !dbg !12227
  call void @tasklet_schedule(%struct.tasklet_struct* %tx_tl) #13, !dbg !12228
  br label %if.end27, !dbg !12228

if.end27:                                         ; preds = %if.then26, %land.lhs.true, %if.end21
  %22 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12229
  %control28 = getelementptr inbounds %struct.r8152, %struct.r8152* %22, i32 0, i32 18, !dbg !12230
  call void @mutex_unlock(%struct.mutex* %control28) #13, !dbg !12231
  br label %out1, !dbg !12231

out1:                                             ; preds = %if.end27, %if.then10, %if.then7
  call void @llvm.dbg.label(metadata !12232), !dbg !12233
  %23 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12234
  %intf29 = getelementptr inbounds %struct.r8152, %struct.r8152* %23, i32 0, i32 3, !dbg !12235
  %24 = load %struct.usb_interface*, %struct.usb_interface** %intf29, align 8, !dbg !12235
  call void @usb_autopm_put_interface(%struct.usb_interface* %24) #13, !dbg !12236
  br label %return, !dbg !12237

return:                                           ; preds = %out1, %if.then3, %if.then
  ret void, !dbg !12237
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #1

; Function Attrs: noredzone
declare dso_local void @delayed_work_timer_fn(%struct.timer_list*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl_hw_phy_work_func_t(%struct.work_struct* %work) #2 !dbg !12238 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %tp = alloca %struct.r8152*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.r8152*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !12239, metadata !DIExpression()), !dbg !12240
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !12241, metadata !DIExpression()), !dbg !12242
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12243, metadata !DIExpression()), !dbg !12245
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !12245
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !12245
  store i8* %1, i8** %__mptr, align 8, !dbg !12245
  br label %do.body, !dbg !12245

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12246

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12245
  %add.ptr = getelementptr i8, i8* %2, i64 -848, !dbg !12245
  %3 = bitcast i8* %add.ptr to %struct.r8152*, !dbg !12245
  store %struct.r8152* %3, %struct.r8152** %tmp, align 8, !dbg !12246
  %4 = load %struct.r8152*, %struct.r8152** %tmp, align 8, !dbg !12245
  store %struct.r8152* %4, %struct.r8152** %tp, align 8, !dbg !12242
  %5 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12248
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 0, !dbg !12250
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !12251
  br i1 %call, label %if.then, label %if.end, !dbg !12252

if.then:                                          ; preds = %do.end
  br label %return, !dbg !12253

if.end:                                           ; preds = %do.end
  %6 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12254
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 3, !dbg !12256
  %7 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !12256
  %call1 = call i32 @usb_autopm_get_interface(%struct.usb_interface* %7) #13, !dbg !12257
  %cmp = icmp slt i32 %call1, 0, !dbg !12258
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !12259

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !12260

if.end3:                                          ; preds = %if.end
  %8 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12261
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %8, i32 0, i32 18, !dbg !12262
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !12263
  %9 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12264
  %call4 = call i32 @rtl8152_request_firmware(%struct.r8152* %9) #13, !dbg !12266
  %cmp5 = icmp eq i32 %call4, -19, !dbg !12267
  br i1 %cmp5, label %land.lhs.true, label %if.end11, !dbg !12268

land.lhs.true:                                    ; preds = %if.end3
  %10 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12269
  %rtl_fw = getelementptr inbounds %struct.r8152, %struct.r8152* %10, i32 0, i32 23, !dbg !12270
  %retry = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %rtl_fw, i32 0, i32 5, !dbg !12271
  %11 = load i8, i8* %retry, align 8, !dbg !12271
  %tobool = trunc i8 %11 to i1, !dbg !12271
  br i1 %tobool, label %if.then6, label %if.end11, !dbg !12272

if.then6:                                         ; preds = %land.lhs.true
  %12 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12273
  %rtl_fw7 = getelementptr inbounds %struct.r8152, %struct.r8152* %12, i32 0, i32 23, !dbg !12275
  %retry8 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %rtl_fw7, i32 0, i32 5, !dbg !12276
  store i8 0, i8* %retry8, align 8, !dbg !12277
  %13 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12278
  %rtl_fw9 = getelementptr inbounds %struct.r8152, %struct.r8152* %13, i32 0, i32 23, !dbg !12279
  %fw = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %rtl_fw9, i32 0, i32 1, !dbg !12280
  store %struct.firmware* null, %struct.firmware** %fw, align 8, !dbg !12281
  %14 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_long_wq, align 8, !dbg !12282
  %15 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12283
  %hw_phy_work = getelementptr inbounds %struct.r8152, %struct.r8152* %15, i32 0, i32 16, !dbg !12284
  %call10 = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %14, %struct.delayed_work* %hw_phy_work, i64 2500) #13, !dbg !12285
  br label %ignore_once, !dbg !12286

if.end11:                                         ; preds = %land.lhs.true, %if.end3
  %16 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12287
  %rtl_ops = getelementptr inbounds %struct.r8152, %struct.r8152* %16, i32 0, i32 21, !dbg !12288
  %hw_phy_cfg = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops, i32 0, i32 9, !dbg !12289
  %17 = load void (%struct.r8152*)*, void (%struct.r8152*)** %hw_phy_cfg, align 8, !dbg !12289
  %18 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12290
  call void %17(%struct.r8152* %18) #13, !dbg !12287
  %19 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12291
  %20 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12292
  %autoneg = getelementptr inbounds %struct.r8152, %struct.r8152* %20, i32 0, i32 41, !dbg !12293
  %21 = load i8, i8* %autoneg, align 2, !dbg !12293
  %22 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12294
  %speed = getelementptr inbounds %struct.r8152, %struct.r8152* %22, i32 0, i32 36, !dbg !12295
  %23 = load i16, i16* %speed, align 2, !dbg !12295
  %conv = zext i16 %23 to i32, !dbg !12294
  %24 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12296
  %duplex = getelementptr inbounds %struct.r8152, %struct.r8152* %24, i32 0, i32 40, !dbg !12297
  %25 = load i8, i8* %duplex, align 1, !dbg !12297
  %26 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12298
  %advertising = getelementptr inbounds %struct.r8152, %struct.r8152* %26, i32 0, i32 31, !dbg !12299
  %27 = load i32, i32* %advertising, align 4, !dbg !12299
  %call12 = call i32 @rtl8152_set_speed(%struct.r8152* %19, i8 zeroext %21, i32 %conv, i8 zeroext %25, i32 %27) #13, !dbg !12300
  br label %ignore_once, !dbg !12300

ignore_once:                                      ; preds = %if.end11, %if.then6
  call void @llvm.dbg.label(metadata !12301), !dbg !12302
  %28 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12303
  %control13 = getelementptr inbounds %struct.r8152, %struct.r8152* %28, i32 0, i32 18, !dbg !12304
  call void @mutex_unlock(%struct.mutex* %control13) #13, !dbg !12305
  %29 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12306
  %intf14 = getelementptr inbounds %struct.r8152, %struct.r8152* %29, i32 0, i32 3, !dbg !12307
  %30 = load %struct.usb_interface*, %struct.usb_interface** %intf14, align 8, !dbg !12307
  call void @usb_autopm_put_interface(%struct.usb_interface* %30) #13, !dbg !12308
  br label %return, !dbg !12309

return:                                           ; preds = %ignore_once, %if.then2, %if.then
  ret void, !dbg !12309
}

; Function Attrs: noredzone
declare dso_local void @tasklet_init(%struct.tasklet_struct*, void (i64)*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bottom_half(i64 %data) #2 !dbg !12310 {
entry:
  %data.addr = alloca i64, align 8
  %tp = alloca %struct.r8152*, align 8
  store i64 %data, i64* %data.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %data.addr, metadata !12311, metadata !DIExpression()), !dbg !12312
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !12313, metadata !DIExpression()), !dbg !12314
  %0 = load i64, i64* %data.addr, align 8, !dbg !12315
  %1 = inttoptr i64 %0 to %struct.r8152*, !dbg !12316
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !12317
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12318
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 0, !dbg !12320
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !12321
  br i1 %call, label %if.then, label %if.end, !dbg !12322

if.then:                                          ; preds = %entry
  br label %return, !dbg !12323

if.end:                                           ; preds = %entry
  %3 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12324
  %flags1 = getelementptr inbounds %struct.r8152, %struct.r8152* %3, i32 0, i32 0, !dbg !12326
  %call2 = call zeroext i1 @test_bit(i64 2, i64* %flags1) #13, !dbg !12327
  br i1 %call2, label %if.end4, label %if.then3, !dbg !12328

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !12329

if.end4:                                          ; preds = %if.end
  %4 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12330
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 4, !dbg !12332
  %5 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12332
  %call5 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %5) #13, !dbg !12333
  br i1 %call5, label %if.end7, label %if.then6, !dbg !12334

if.then6:                                         ; preds = %if.end4
  br label %return, !dbg !12335

if.end7:                                          ; preds = %if.end4
  %6 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12336
  %flags8 = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 0, !dbg !12337
  call void @clear_bit(i64 6, i64* %flags8) #13, !dbg !12338
  %7 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12339
  call void @tx_bottom(%struct.r8152* %7) #13, !dbg !12340
  br label %return, !dbg !12341

return:                                           ; preds = %if.end7, %if.then6, %if.then3, %if.then
  ret void, !dbg !12341
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_disable(%struct.tasklet_struct* %t) #2 !dbg !12342 {
entry:
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !12343, metadata !DIExpression()), !dbg !12344
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !12345
  call void @tasklet_disable_nosync(%struct.tasklet_struct* %0) #13, !dbg !12346
  br label %do.body, !dbg !12347

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12348

do.end:                                           ; preds = %do.body
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !12350, !srcloc !12351
  ret void, !dbg !12352
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #2 !dbg !12353 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !12358, metadata !DIExpression()), !dbg !12361
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !12363, metadata !DIExpression()), !dbg !12364
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !12365, metadata !DIExpression()), !dbg !12373
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12375, metadata !DIExpression()), !dbg !12376
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !12377, metadata !DIExpression()), !dbg !12378
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !12379, metadata !DIExpression()), !dbg !12380
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !12381
  %1 = load i64, i64* %nr.addr, align 8, !dbg !12382
  %div = sdiv i64 %1, 64, !dbg !12382
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !12383
  %2 = bitcast i64* %add.ptr to i8*, !dbg !12381
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !12384
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12385
  %conv.i = trunc i64 %4 to i32, !dbg !12385
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #16, !dbg !12386
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !12387
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !12387
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #16, !dbg !12387
  %7 = load i64, i64* %nr.addr, align 8, !dbg !12388
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !12389
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !12390
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #11, !dbg !12392
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !12393

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !12394
  %12 = bitcast i64* %11 to i8*, !dbg !12394
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !12394
  %shr.i = ashr i64 %13, 3, !dbg !12394
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !12394
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !12396
  %and.i = and i64 %14, 7, !dbg !12396
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !12396
  %shl.i = shl i32 1, %sh_prom.i, !dbg !12396
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #11, !dbg !12397, !srcloc !12398
  br label %arch_set_bit.exit, !dbg !12399

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !12400
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !12402
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #11, !dbg !12403, !srcloc !12404
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !12405
}

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_set_gso_max_size(%struct.net_device* %dev, i32 %size) #2 !dbg !12406 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %size.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12407, metadata !DIExpression()), !dbg !12408
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12409, metadata !DIExpression()), !dbg !12410
  %0 = load i32, i32* %size.addr, align 4, !dbg !12411
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12412
  %gso_max_size = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 110, !dbg !12413
  store i32 %0, i32* %gso_max_size, align 8, !dbg !12414
  ret void, !dbg !12415
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @read_mii_word(%struct.net_device* %netdev, i32 %phy_id, i32 %reg) #2 !dbg !12416 {
entry:
  %retval = alloca i32, align 4
  %netdev.addr = alloca %struct.net_device*, align 8
  %phy_id.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  %tp = alloca %struct.r8152*, align 8
  %ret = alloca i32, align 4
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !12417, metadata !DIExpression()), !dbg !12418
  store i32 %phy_id, i32* %phy_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phy_id.addr, metadata !12419, metadata !DIExpression()), !dbg !12420
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !12421, metadata !DIExpression()), !dbg !12422
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !12423, metadata !DIExpression()), !dbg !12424
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !12425
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !12426
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !12426
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !12424
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12427, metadata !DIExpression()), !dbg !12428
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12429
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 0, !dbg !12431
  %call1 = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !12432
  br i1 %call1, label %if.then, label %if.end, !dbg !12433

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !12434
  br label %return, !dbg !12434

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %phy_id.addr, align 4, !dbg !12435
  %cmp = icmp ne i32 %3, 32, !dbg !12437
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !12438

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !12439
  br label %return, !dbg !12439

if.end3:                                          ; preds = %if.end
  %4 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12440
  %5 = load i32, i32* %reg.addr, align 4, !dbg !12441
  %call4 = call i32 @r8152_mdio_read(%struct.r8152* %4, i32 %5) #13, !dbg !12442
  store i32 %call4, i32* %ret, align 4, !dbg !12443
  %6 = load i32, i32* %ret, align 4, !dbg !12444
  store i32 %6, i32* %retval, align 4, !dbg !12445
  br label %return, !dbg !12445

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !12446
  ret i32 %7, !dbg !12446
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @write_mii_word(%struct.net_device* %netdev, i32 %phy_id, i32 %reg, i32 %val) #2 !dbg !12447 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %phy_id.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %tp = alloca %struct.r8152*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !12448, metadata !DIExpression()), !dbg !12449
  store i32 %phy_id, i32* %phy_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phy_id.addr, metadata !12450, metadata !DIExpression()), !dbg !12451
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !12452, metadata !DIExpression()), !dbg !12453
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !12454, metadata !DIExpression()), !dbg !12455
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !12456, metadata !DIExpression()), !dbg !12457
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !12458
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !12459
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !12459
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !12457
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12460
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 0, !dbg !12462
  %call1 = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !12463
  br i1 %call1, label %if.then, label %if.end, !dbg !12464

if.then:                                          ; preds = %entry
  br label %return, !dbg !12465

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %phy_id.addr, align 4, !dbg !12466
  %cmp = icmp ne i32 %3, 32, !dbg !12468
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !12469

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !12470

if.end3:                                          ; preds = %if.end
  %4 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12471
  %5 = load i32, i32* %reg.addr, align 4, !dbg !12472
  %6 = load i32, i32* %val.addr, align 4, !dbg !12473
  call void @r8152_mdio_write(%struct.r8152* %4, i32 %5, i32 %6) #13, !dbg !12474
  br label %return, !dbg !12475

return:                                           ; preds = %if.end3, %if.then2, %if.then
  ret void, !dbg !12475
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @rtl_can_wakeup(%struct.r8152* %tp) #2 !dbg !12476 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %udev = alloca %struct.usb_device*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !12477, metadata !DIExpression()), !dbg !12478
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !12479, metadata !DIExpression()), !dbg !12480
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12481
  %udev1 = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 1, !dbg !12482
  %1 = load %struct.usb_device*, %struct.usb_device** %udev1, align 8, !dbg !12482
  store %struct.usb_device* %1, %struct.usb_device** %udev, align 8, !dbg !12480
  %2 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !12483
  %actconfig = getelementptr inbounds %struct.usb_device, %struct.usb_device* %2, i32 0, i32 19, !dbg !12484
  %3 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig, align 8, !dbg !12484
  %desc = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %3, i32 0, i32 0, !dbg !12485
  %bmAttributes = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %desc, i32 0, i32 6, !dbg !12486
  %4 = load i8, i8* %bmAttributes, align 1, !dbg !12486
  %conv = zext i8 %4 to i32, !dbg !12483
  %and = and i32 %conv, 32, !dbg !12487
  %tobool = icmp ne i32 %and, 0, !dbg !12488
  ret i1 %tobool, !dbg !12489
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__rtl_set_wol(%struct.r8152* %tp, i32 %wolopts) #2 !dbg !12490 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %wolopts.addr = alloca i32, align 4
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !12493, metadata !DIExpression()), !dbg !12494
  store i32 %wolopts, i32* %wolopts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wolopts.addr, metadata !12495, metadata !DIExpression()), !dbg !12496
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !12497, metadata !DIExpression()), !dbg !12498
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12499
  call void @ocp_write_byte(%struct.r8152* %0, i16 zeroext 256, i16 zeroext -6116, i32 192) #13, !dbg !12500
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12501
  %call = call zeroext i16 @ocp_read_word(%struct.r8152* %1, i16 zeroext 256, i16 zeroext -6112) #13, !dbg !12502
  %conv = zext i16 %call to i32, !dbg !12502
  store i32 %conv, i32* %ocp_data, align 4, !dbg !12503
  %2 = load i32, i32* %ocp_data, align 4, !dbg !12504
  %and = and i32 %2, -17, !dbg !12504
  store i32 %and, i32* %ocp_data, align 4, !dbg !12504
  %3 = load i32, i32* %wolopts.addr, align 4, !dbg !12505
  %and1 = and i32 %3, 1, !dbg !12507
  %tobool = icmp ne i32 %and1, 0, !dbg !12507
  br i1 %tobool, label %if.then, label %if.end, !dbg !12508

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %ocp_data, align 4, !dbg !12509
  %or = or i32 %4, 16, !dbg !12509
  store i32 %or, i32* %ocp_data, align 4, !dbg !12509
  br label %if.end, !dbg !12510

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12511
  %6 = load i32, i32* %ocp_data, align 4, !dbg !12512
  call void @ocp_write_word(%struct.r8152* %5, i16 zeroext 256, i16 zeroext -6112, i32 %6) #13, !dbg !12513
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12514
  %call2 = call zeroext i16 @ocp_read_word(%struct.r8152* %7, i16 zeroext 256, i16 zeroext -6110) #13, !dbg !12515
  %conv3 = zext i16 %call2 to i32, !dbg !12515
  store i32 %conv3, i32* %ocp_data, align 4, !dbg !12516
  %8 = load i32, i32* %ocp_data, align 4, !dbg !12517
  %and4 = and i32 %8, -113, !dbg !12517
  store i32 %and4, i32* %ocp_data, align 4, !dbg !12517
  %9 = load i32, i32* %wolopts.addr, align 4, !dbg !12518
  %and5 = and i32 %9, 2, !dbg !12520
  %tobool6 = icmp ne i32 %and5, 0, !dbg !12520
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !12521

if.then7:                                         ; preds = %if.end
  %10 = load i32, i32* %ocp_data, align 4, !dbg !12522
  %or8 = or i32 %10, 16, !dbg !12522
  store i32 %or8, i32* %ocp_data, align 4, !dbg !12522
  br label %if.end9, !dbg !12523

if.end9:                                          ; preds = %if.then7, %if.end
  %11 = load i32, i32* %wolopts.addr, align 4, !dbg !12524
  %and10 = and i32 %11, 8, !dbg !12526
  %tobool11 = icmp ne i32 %and10, 0, !dbg !12526
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !12527

if.then12:                                        ; preds = %if.end9
  %12 = load i32, i32* %ocp_data, align 4, !dbg !12528
  %or13 = or i32 %12, 64, !dbg !12528
  store i32 %or13, i32* %ocp_data, align 4, !dbg !12528
  br label %if.end14, !dbg !12529

if.end14:                                         ; preds = %if.then12, %if.end9
  %13 = load i32, i32* %wolopts.addr, align 4, !dbg !12530
  %and15 = and i32 %13, 4, !dbg !12532
  %tobool16 = icmp ne i32 %and15, 0, !dbg !12532
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !12533

if.then17:                                        ; preds = %if.end14
  %14 = load i32, i32* %ocp_data, align 4, !dbg !12534
  %or18 = or i32 %14, 32, !dbg !12534
  store i32 %or18, i32* %ocp_data, align 4, !dbg !12534
  br label %if.end19, !dbg !12535

if.end19:                                         ; preds = %if.then17, %if.end14
  %15 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12536
  %16 = load i32, i32* %ocp_data, align 4, !dbg !12537
  call void @ocp_write_word(%struct.r8152* %15, i16 zeroext 256, i16 zeroext -6110, i32 %16) #13, !dbg !12538
  %17 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12539
  call void @ocp_write_byte(%struct.r8152* %17, i16 zeroext 256, i16 zeroext -6116, i32 0) #13, !dbg !12540
  %18 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12541
  %call20 = call zeroext i16 @ocp_read_word(%struct.r8152* %18, i16 zeroext 256, i16 zeroext -16202) #13, !dbg !12542
  %conv21 = zext i16 %call20 to i32, !dbg !12542
  store i32 %conv21, i32* %ocp_data, align 4, !dbg !12543
  %19 = load i32, i32* %ocp_data, align 4, !dbg !12544
  %and22 = and i32 %19, -2, !dbg !12544
  store i32 %and22, i32* %ocp_data, align 4, !dbg !12544
  %20 = load i32, i32* %wolopts.addr, align 4, !dbg !12545
  %and23 = and i32 %20, 32, !dbg !12547
  %tobool24 = icmp ne i32 %and23, 0, !dbg !12547
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !12548

if.then25:                                        ; preds = %if.end19
  %21 = load i32, i32* %ocp_data, align 4, !dbg !12549
  %or26 = or i32 %21, 1, !dbg !12549
  store i32 %or26, i32* %ocp_data, align 4, !dbg !12549
  br label %if.end27, !dbg !12550

if.end27:                                         ; preds = %if.then25, %if.end19
  %22 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12551
  %23 = load i32, i32* %ocp_data, align 4, !dbg !12552
  call void @ocp_write_word(%struct.r8152* %22, i16 zeroext 256, i16 zeroext -16202, i32 %23) #13, !dbg !12553
  %24 = load i32, i32* %wolopts.addr, align 4, !dbg !12554
  %and28 = and i32 %24, 47, !dbg !12556
  %tobool29 = icmp ne i32 %and28, 0, !dbg !12556
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !12557

if.then30:                                        ; preds = %if.end27
  %25 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12558
  %udev = getelementptr inbounds %struct.r8152, %struct.r8152* %25, i32 0, i32 1, !dbg !12559
  %26 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !12559
  %dev = getelementptr inbounds %struct.usb_device, %struct.usb_device* %26, i32 0, i32 14, !dbg !12560
  %call31 = call i32 @device_set_wakeup_enable(%struct.device* %dev, i1 zeroext true) #13, !dbg !12561
  br label %if.end35, !dbg !12561

if.else:                                          ; preds = %if.end27
  %27 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12562
  %udev32 = getelementptr inbounds %struct.r8152, %struct.r8152* %27, i32 0, i32 1, !dbg !12563
  %28 = load %struct.usb_device*, %struct.usb_device** %udev32, align 8, !dbg !12563
  %dev33 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %28, i32 0, i32 14, !dbg !12564
  %call34 = call i32 @device_set_wakeup_enable(%struct.device* %dev33, i1 zeroext false) #13, !dbg !12565
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then30
  ret void, !dbg !12566
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__rtl_get_wol(%struct.r8152* %tp) #2 !dbg !12567 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  %wolopts = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !12570, metadata !DIExpression()), !dbg !12571
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !12572, metadata !DIExpression()), !dbg !12573
  call void @llvm.dbg.declare(metadata i32* %wolopts, metadata !12574, metadata !DIExpression()), !dbg !12575
  store i32 0, i32* %wolopts, align 4, !dbg !12575
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12576
  %call = call zeroext i16 @ocp_read_word(%struct.r8152* %0, i16 zeroext 256, i16 zeroext -6112) #13, !dbg !12577
  %conv = zext i16 %call to i32, !dbg !12577
  store i32 %conv, i32* %ocp_data, align 4, !dbg !12578
  %1 = load i32, i32* %ocp_data, align 4, !dbg !12579
  %and = and i32 %1, 16, !dbg !12581
  %tobool = icmp ne i32 %and, 0, !dbg !12581
  br i1 %tobool, label %if.then, label %if.end, !dbg !12582

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %wolopts, align 4, !dbg !12583
  %or = or i32 %2, 1, !dbg !12583
  store i32 %or, i32* %wolopts, align 4, !dbg !12583
  br label %if.end, !dbg !12584

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12585
  %call1 = call zeroext i16 @ocp_read_word(%struct.r8152* %3, i16 zeroext 256, i16 zeroext -6110) #13, !dbg !12586
  %conv2 = zext i16 %call1 to i32, !dbg !12586
  store i32 %conv2, i32* %ocp_data, align 4, !dbg !12587
  %4 = load i32, i32* %ocp_data, align 4, !dbg !12588
  %and3 = and i32 %4, 16, !dbg !12590
  %tobool4 = icmp ne i32 %and3, 0, !dbg !12590
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !12591

if.then5:                                         ; preds = %if.end
  %5 = load i32, i32* %wolopts, align 4, !dbg !12592
  %or6 = or i32 %5, 2, !dbg !12592
  store i32 %or6, i32* %wolopts, align 4, !dbg !12592
  br label %if.end7, !dbg !12593

if.end7:                                          ; preds = %if.then5, %if.end
  %6 = load i32, i32* %ocp_data, align 4, !dbg !12594
  %and8 = and i32 %6, 64, !dbg !12596
  %tobool9 = icmp ne i32 %and8, 0, !dbg !12596
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !12597

if.then10:                                        ; preds = %if.end7
  %7 = load i32, i32* %wolopts, align 4, !dbg !12598
  %or11 = or i32 %7, 8, !dbg !12598
  store i32 %or11, i32* %wolopts, align 4, !dbg !12598
  br label %if.end12, !dbg !12599

if.end12:                                         ; preds = %if.then10, %if.end7
  %8 = load i32, i32* %ocp_data, align 4, !dbg !12600
  %and13 = and i32 %8, 32, !dbg !12602
  %tobool14 = icmp ne i32 %and13, 0, !dbg !12602
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !12603

if.then15:                                        ; preds = %if.end12
  %9 = load i32, i32* %wolopts, align 4, !dbg !12604
  %or16 = or i32 %9, 4, !dbg !12604
  store i32 %or16, i32* %wolopts, align 4, !dbg !12604
  br label %if.end17, !dbg !12605

if.end17:                                         ; preds = %if.then15, %if.end12
  %10 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12606
  %call18 = call zeroext i16 @ocp_read_word(%struct.r8152* %10, i16 zeroext 256, i16 zeroext -16202) #13, !dbg !12607
  %conv19 = zext i16 %call18 to i32, !dbg !12607
  store i32 %conv19, i32* %ocp_data, align 4, !dbg !12608
  %11 = load i32, i32* %ocp_data, align 4, !dbg !12609
  %and20 = and i32 %11, 1, !dbg !12611
  %tobool21 = icmp ne i32 %and20, 0, !dbg !12611
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !12612

if.then22:                                        ; preds = %if.end17
  %12 = load i32, i32* %wolopts, align 4, !dbg !12613
  %or23 = or i32 %12, 32, !dbg !12613
  store i32 %or23, i32* %wolopts, align 4, !dbg !12613
  br label %if.end24, !dbg !12614

if.end24:                                         ; preds = %if.then22, %if.end17
  %13 = load i32, i32* %wolopts, align 4, !dbg !12615
  ret i32 %13, !dbg !12616
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %wq, %struct.delayed_work* %dwork, i64 %delay) #2 !dbg !12617 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !12621, metadata !DIExpression()), !dbg !12622
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !12623, metadata !DIExpression()), !dbg !12624
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !12625, metadata !DIExpression()), !dbg !12626
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !12627
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !12628
  %2 = load i64, i64* %delay.addr, align 8, !dbg !12629
  %call = call zeroext i1 @queue_delayed_work_on(i32 1, %struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #13, !dbg !12630
  ret i1 %call, !dbg !12631
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_ethernet_addr(%struct.r8152* %tp) #2 !dbg !12632 {
entry:
  %retval = alloca i32, align 4
  %tp.addr = alloca %struct.r8152*, align 8
  %dev = alloca %struct.net_device*, align 8
  %sa = alloca %struct.sockaddr, align 2
  %ret = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !12633, metadata !DIExpression()), !dbg !12634
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !12635, metadata !DIExpression()), !dbg !12636
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12637
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 4, !dbg !12638
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12638
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !12636
  call void @llvm.dbg.declare(metadata %struct.sockaddr* %sa, metadata !12639, metadata !DIExpression()), !dbg !12640
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12641, metadata !DIExpression()), !dbg !12642
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12643
  %call = call i32 @determine_ethernet_addr(%struct.r8152* %2, %struct.sockaddr* %sa) #13, !dbg !12644
  store i32 %call, i32* %ret, align 4, !dbg !12645
  %3 = load i32, i32* %ret, align 4, !dbg !12646
  %cmp = icmp slt i32 %3, 0, !dbg !12648
  br i1 %cmp, label %if.then, label %if.end, !dbg !12649

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %ret, align 4, !dbg !12650
  store i32 %4, i32* %retval, align 4, !dbg !12651
  br label %return, !dbg !12651

if.end:                                           ; preds = %entry
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12652
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 39, !dbg !12654
  %6 = load i8, i8* %version, align 8, !dbg !12654
  %conv = zext i8 %6 to i32, !dbg !12652
  %cmp1 = icmp eq i32 %conv, 1, !dbg !12655
  br i1 %cmp1, label %if.then3, label %if.else, !dbg !12656

if.then3:                                         ; preds = %if.end
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12657
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 74, !dbg !12658
  %8 = load i8*, i8** %dev_addr, align 8, !dbg !12658
  %sa_data = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %sa, i32 0, i32 1, !dbg !12659
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data, i64 0, i64 0, !dbg !12660
  call void @ether_addr_copy(i8* %8, i8* %arraydecay) #13, !dbg !12661
  br label %if.end5, !dbg !12661

if.else:                                          ; preds = %if.end
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12662
  %10 = bitcast %struct.sockaddr* %sa to i8*, !dbg !12663
  %call4 = call i32 @rtl8152_set_mac_address(%struct.net_device* %9, i8* %10) #13, !dbg !12664
  store i32 %call4, i32* %ret, align 4, !dbg !12665
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then3
  %11 = load i32, i32* %ret, align 4, !dbg !12666
  store i32 %11, i32* %retval, align 4, !dbg !12667
  br label %return, !dbg !12667

return:                                           ; preds = %if.end5, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !12668
  ret i32 %12, !dbg !12668
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb_set_intfdata(%struct.usb_interface* %intf, i8* %data) #2 !dbg !12669 {
entry:
  %intf.addr = alloca %struct.usb_interface*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !12672, metadata !DIExpression()), !dbg !12673
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12674, metadata !DIExpression()), !dbg !12675
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !12676
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 7, !dbg !12677
  %1 = load i8*, i8** %data.addr, align 8, !dbg !12678
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #13, !dbg !12679
  ret void, !dbg !12680
}

; Function Attrs: noredzone
declare dso_local void @netif_napi_add(%struct.net_device*, %struct.napi_struct*, i32 (%struct.napi_struct*, i32)*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @r8152_poll(%struct.napi_struct* %napi, i32 %budget) #2 !dbg !12681 {
entry:
  %napi.addr = alloca %struct.napi_struct*, align 8
  %budget.addr = alloca i32, align 4
  %tp = alloca %struct.r8152*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.r8152*, align 8
  %work_done = alloca i32, align 4
  store %struct.napi_struct* %napi, %struct.napi_struct** %napi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi.addr, metadata !12682, metadata !DIExpression()), !dbg !12683
  store i32 %budget, i32* %budget.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %budget.addr, metadata !12684, metadata !DIExpression()), !dbg !12685
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !12686, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12688, metadata !DIExpression()), !dbg !12690
  %0 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !12690
  %1 = bitcast %struct.napi_struct* %0 to i8*, !dbg !12690
  store i8* %1, i8** %__mptr, align 8, !dbg !12690
  br label %do.body, !dbg !12690

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12691

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12690
  %add.ptr = getelementptr i8, i8* %2, i64 -16, !dbg !12690
  %3 = bitcast i8* %add.ptr to %struct.r8152*, !dbg !12690
  store %struct.r8152* %3, %struct.r8152** %tmp, align 8, !dbg !12691
  %4 = load %struct.r8152*, %struct.r8152** %tmp, align 8, !dbg !12690
  store %struct.r8152* %4, %struct.r8152** %tp, align 8, !dbg !12687
  call void @llvm.dbg.declare(metadata i32* %work_done, metadata !12693, metadata !DIExpression()), !dbg !12694
  %5 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12695
  %6 = load i32, i32* %budget.addr, align 4, !dbg !12696
  %call = call i32 @rx_bottom(%struct.r8152* %5, i32 %6) #13, !dbg !12697
  store i32 %call, i32* %work_done, align 4, !dbg !12698
  %7 = load i32, i32* %work_done, align 4, !dbg !12699
  %8 = load i32, i32* %budget.addr, align 4, !dbg !12701
  %cmp = icmp slt i32 %7, %8, !dbg !12702
  br i1 %cmp, label %if.then, label %if.end6, !dbg !12703

if.then:                                          ; preds = %do.end
  %9 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !12704
  %10 = load i32, i32* %work_done, align 4, !dbg !12707
  %call1 = call zeroext i1 @napi_complete_done(%struct.napi_struct* %9, i32 %10) #13, !dbg !12708
  br i1 %call1, label %if.end, label %if.then2, !dbg !12709

if.then2:                                         ; preds = %if.then
  br label %out, !dbg !12710

if.end:                                           ; preds = %if.then
  %11 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !12711
  %rx_done = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 9, !dbg !12713
  %call3 = call i32 @list_empty(%struct.list_head* %rx_done) #13, !dbg !12714
  %tobool = icmp ne i32 %call3, 0, !dbg !12714
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !12715

if.then4:                                         ; preds = %if.end
  %12 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !12716
  call void @napi_schedule(%struct.napi_struct* %12) #13, !dbg !12717
  br label %if.end5, !dbg !12717

if.end5:                                          ; preds = %if.then4, %if.end
  br label %if.end6, !dbg !12718

if.end6:                                          ; preds = %if.end5, %do.end
  br label %out, !dbg !12701

out:                                              ; preds = %if.end6, %if.then2
  call void @llvm.dbg.label(metadata !12719), !dbg !12720
  %13 = load i32, i32* %work_done, align 4, !dbg !12721
  ret i32 %13, !dbg !12722
}

; Function Attrs: noredzone
declare dso_local i32 @register_netdev(%struct.net_device*) #1

; Function Attrs: cold noredzone
declare dso_local void @netdev_err(%struct.net_device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @device_set_wakeup_enable(%struct.device*, i1 zeroext) #1

; Function Attrs: cold noredzone
declare dso_local void @netdev_info(%struct.net_device*, i8*, ...) #4

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noredzone
declare dso_local void @tasklet_kill(%struct.tasklet_struct*) #1

; Function Attrs: noredzone
declare dso_local void @free_netdev(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local i32 @usb_control_msg(%struct.usb_device*, i32, i8 zeroext, i8 zeroext, i16 zeroext, i16 zeroext, i8*, i16 zeroext, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__create_pipe(%struct.usb_device* %dev, i32 %endpoint) #2 !dbg !12723 {
entry:
  %dev.addr = alloca %struct.usb_device*, align 8
  %endpoint.addr = alloca i32, align 4
  store %struct.usb_device* %dev, %struct.usb_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev.addr, metadata !12726, metadata !DIExpression()), !dbg !12727
  store i32 %endpoint, i32* %endpoint.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %endpoint.addr, metadata !12728, metadata !DIExpression()), !dbg !12729
  %0 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !12730
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0, !dbg !12731
  %1 = load i32, i32* %devnum, align 8, !dbg !12731
  %shl = shl i32 %1, 8, !dbg !12732
  %2 = load i32, i32* %endpoint.addr, align 4, !dbg !12733
  %shl1 = shl i32 %2, 15, !dbg !12734
  %or = or i32 %shl, %shl1, !dbg !12735
  ret i32 %or, !dbg !12736
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !12737 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !12741, metadata !DIExpression()), !dbg !12745
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !12747, metadata !DIExpression()), !dbg !12748
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12749, metadata !DIExpression()), !dbg !12750
  %0 = load i64, i64* %size.addr, align 8, !dbg !12751
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !12753
  br i1 %1, label %if.then, label %if.end447, !dbg !12754

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !12755
  %tobool = icmp ne i64 %2, 0, !dbg !12755
  br i1 %tobool, label %if.end, label %if.then1, !dbg !12758

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !12759
  br label %return, !dbg !12759

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !12760
  %cmp = icmp ult i64 %3, 4096, !dbg !12762
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !12763

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12764
  br label %return, !dbg !12764

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub = sub i64 %4, 1, !dbg !12765
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !12765
  br i1 %5, label %cond.true, label %cond.false442, !dbg !12765

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub4 = sub i64 %6, 1, !dbg !12765
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !12765
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !12765

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub6 = sub i64 %8, 1, !dbg !12765
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !12765
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !12765

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !12765

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub9 = sub i64 %9, 1, !dbg !12765
  %and = and i64 %sub9, -9223372036854775808, !dbg !12765
  %tobool10 = icmp ne i64 %and, 0, !dbg !12765
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !12765

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !12765

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub13 = sub i64 %10, 1, !dbg !12765
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !12765
  %tobool15 = icmp ne i64 %and14, 0, !dbg !12765
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !12765

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !12765

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub18 = sub i64 %11, 1, !dbg !12765
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !12765
  %tobool20 = icmp ne i64 %and19, 0, !dbg !12765
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !12765

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !12765

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub23 = sub i64 %12, 1, !dbg !12765
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !12765
  %tobool25 = icmp ne i64 %and24, 0, !dbg !12765
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !12765

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !12765

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub28 = sub i64 %13, 1, !dbg !12765
  %and29 = and i64 %sub28, 576460752303423488, !dbg !12765
  %tobool30 = icmp ne i64 %and29, 0, !dbg !12765
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !12765

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !12765

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub33 = sub i64 %14, 1, !dbg !12765
  %and34 = and i64 %sub33, 288230376151711744, !dbg !12765
  %tobool35 = icmp ne i64 %and34, 0, !dbg !12765
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !12765

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !12765

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub38 = sub i64 %15, 1, !dbg !12765
  %and39 = and i64 %sub38, 144115188075855872, !dbg !12765
  %tobool40 = icmp ne i64 %and39, 0, !dbg !12765
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !12765

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !12765

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub43 = sub i64 %16, 1, !dbg !12765
  %and44 = and i64 %sub43, 72057594037927936, !dbg !12765
  %tobool45 = icmp ne i64 %and44, 0, !dbg !12765
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !12765

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !12765

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub48 = sub i64 %17, 1, !dbg !12765
  %and49 = and i64 %sub48, 36028797018963968, !dbg !12765
  %tobool50 = icmp ne i64 %and49, 0, !dbg !12765
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !12765

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !12765

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub53 = sub i64 %18, 1, !dbg !12765
  %and54 = and i64 %sub53, 18014398509481984, !dbg !12765
  %tobool55 = icmp ne i64 %and54, 0, !dbg !12765
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !12765

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !12765

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub58 = sub i64 %19, 1, !dbg !12765
  %and59 = and i64 %sub58, 9007199254740992, !dbg !12765
  %tobool60 = icmp ne i64 %and59, 0, !dbg !12765
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !12765

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !12765

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub63 = sub i64 %20, 1, !dbg !12765
  %and64 = and i64 %sub63, 4503599627370496, !dbg !12765
  %tobool65 = icmp ne i64 %and64, 0, !dbg !12765
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !12765

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !12765

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub68 = sub i64 %21, 1, !dbg !12765
  %and69 = and i64 %sub68, 2251799813685248, !dbg !12765
  %tobool70 = icmp ne i64 %and69, 0, !dbg !12765
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !12765

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !12765

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub73 = sub i64 %22, 1, !dbg !12765
  %and74 = and i64 %sub73, 1125899906842624, !dbg !12765
  %tobool75 = icmp ne i64 %and74, 0, !dbg !12765
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !12765

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !12765

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub78 = sub i64 %23, 1, !dbg !12765
  %and79 = and i64 %sub78, 562949953421312, !dbg !12765
  %tobool80 = icmp ne i64 %and79, 0, !dbg !12765
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !12765

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !12765

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub83 = sub i64 %24, 1, !dbg !12765
  %and84 = and i64 %sub83, 281474976710656, !dbg !12765
  %tobool85 = icmp ne i64 %and84, 0, !dbg !12765
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !12765

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !12765

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub88 = sub i64 %25, 1, !dbg !12765
  %and89 = and i64 %sub88, 140737488355328, !dbg !12765
  %tobool90 = icmp ne i64 %and89, 0, !dbg !12765
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !12765

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !12765

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub93 = sub i64 %26, 1, !dbg !12765
  %and94 = and i64 %sub93, 70368744177664, !dbg !12765
  %tobool95 = icmp ne i64 %and94, 0, !dbg !12765
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !12765

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !12765

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub98 = sub i64 %27, 1, !dbg !12765
  %and99 = and i64 %sub98, 35184372088832, !dbg !12765
  %tobool100 = icmp ne i64 %and99, 0, !dbg !12765
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !12765

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !12765

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub103 = sub i64 %28, 1, !dbg !12765
  %and104 = and i64 %sub103, 17592186044416, !dbg !12765
  %tobool105 = icmp ne i64 %and104, 0, !dbg !12765
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !12765

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !12765

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub108 = sub i64 %29, 1, !dbg !12765
  %and109 = and i64 %sub108, 8796093022208, !dbg !12765
  %tobool110 = icmp ne i64 %and109, 0, !dbg !12765
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !12765

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !12765

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub113 = sub i64 %30, 1, !dbg !12765
  %and114 = and i64 %sub113, 4398046511104, !dbg !12765
  %tobool115 = icmp ne i64 %and114, 0, !dbg !12765
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !12765

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !12765

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub118 = sub i64 %31, 1, !dbg !12765
  %and119 = and i64 %sub118, 2199023255552, !dbg !12765
  %tobool120 = icmp ne i64 %and119, 0, !dbg !12765
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !12765

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !12765

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub123 = sub i64 %32, 1, !dbg !12765
  %and124 = and i64 %sub123, 1099511627776, !dbg !12765
  %tobool125 = icmp ne i64 %and124, 0, !dbg !12765
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !12765

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !12765

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub128 = sub i64 %33, 1, !dbg !12765
  %and129 = and i64 %sub128, 549755813888, !dbg !12765
  %tobool130 = icmp ne i64 %and129, 0, !dbg !12765
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !12765

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !12765

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub133 = sub i64 %34, 1, !dbg !12765
  %and134 = and i64 %sub133, 274877906944, !dbg !12765
  %tobool135 = icmp ne i64 %and134, 0, !dbg !12765
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !12765

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !12765

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub138 = sub i64 %35, 1, !dbg !12765
  %and139 = and i64 %sub138, 137438953472, !dbg !12765
  %tobool140 = icmp ne i64 %and139, 0, !dbg !12765
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !12765

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !12765

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub143 = sub i64 %36, 1, !dbg !12765
  %and144 = and i64 %sub143, 68719476736, !dbg !12765
  %tobool145 = icmp ne i64 %and144, 0, !dbg !12765
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !12765

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !12765

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub148 = sub i64 %37, 1, !dbg !12765
  %and149 = and i64 %sub148, 34359738368, !dbg !12765
  %tobool150 = icmp ne i64 %and149, 0, !dbg !12765
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !12765

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !12765

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub153 = sub i64 %38, 1, !dbg !12765
  %and154 = and i64 %sub153, 17179869184, !dbg !12765
  %tobool155 = icmp ne i64 %and154, 0, !dbg !12765
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !12765

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !12765

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub158 = sub i64 %39, 1, !dbg !12765
  %and159 = and i64 %sub158, 8589934592, !dbg !12765
  %tobool160 = icmp ne i64 %and159, 0, !dbg !12765
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !12765

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !12765

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub163 = sub i64 %40, 1, !dbg !12765
  %and164 = and i64 %sub163, 4294967296, !dbg !12765
  %tobool165 = icmp ne i64 %and164, 0, !dbg !12765
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !12765

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !12765

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub168 = sub i64 %41, 1, !dbg !12765
  %and169 = and i64 %sub168, 2147483648, !dbg !12765
  %tobool170 = icmp ne i64 %and169, 0, !dbg !12765
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !12765

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !12765

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub173 = sub i64 %42, 1, !dbg !12765
  %and174 = and i64 %sub173, 1073741824, !dbg !12765
  %tobool175 = icmp ne i64 %and174, 0, !dbg !12765
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !12765

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !12765

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub178 = sub i64 %43, 1, !dbg !12765
  %and179 = and i64 %sub178, 536870912, !dbg !12765
  %tobool180 = icmp ne i64 %and179, 0, !dbg !12765
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !12765

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !12765

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub183 = sub i64 %44, 1, !dbg !12765
  %and184 = and i64 %sub183, 268435456, !dbg !12765
  %tobool185 = icmp ne i64 %and184, 0, !dbg !12765
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !12765

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !12765

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub188 = sub i64 %45, 1, !dbg !12765
  %and189 = and i64 %sub188, 134217728, !dbg !12765
  %tobool190 = icmp ne i64 %and189, 0, !dbg !12765
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !12765

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !12765

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub193 = sub i64 %46, 1, !dbg !12765
  %and194 = and i64 %sub193, 67108864, !dbg !12765
  %tobool195 = icmp ne i64 %and194, 0, !dbg !12765
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !12765

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !12765

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub198 = sub i64 %47, 1, !dbg !12765
  %and199 = and i64 %sub198, 33554432, !dbg !12765
  %tobool200 = icmp ne i64 %and199, 0, !dbg !12765
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !12765

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !12765

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub203 = sub i64 %48, 1, !dbg !12765
  %and204 = and i64 %sub203, 16777216, !dbg !12765
  %tobool205 = icmp ne i64 %and204, 0, !dbg !12765
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !12765

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !12765

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub208 = sub i64 %49, 1, !dbg !12765
  %and209 = and i64 %sub208, 8388608, !dbg !12765
  %tobool210 = icmp ne i64 %and209, 0, !dbg !12765
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !12765

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !12765

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub213 = sub i64 %50, 1, !dbg !12765
  %and214 = and i64 %sub213, 4194304, !dbg !12765
  %tobool215 = icmp ne i64 %and214, 0, !dbg !12765
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !12765

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !12765

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub218 = sub i64 %51, 1, !dbg !12765
  %and219 = and i64 %sub218, 2097152, !dbg !12765
  %tobool220 = icmp ne i64 %and219, 0, !dbg !12765
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !12765

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !12765

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub223 = sub i64 %52, 1, !dbg !12765
  %and224 = and i64 %sub223, 1048576, !dbg !12765
  %tobool225 = icmp ne i64 %and224, 0, !dbg !12765
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !12765

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !12765

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub228 = sub i64 %53, 1, !dbg !12765
  %and229 = and i64 %sub228, 524288, !dbg !12765
  %tobool230 = icmp ne i64 %and229, 0, !dbg !12765
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !12765

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !12765

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub233 = sub i64 %54, 1, !dbg !12765
  %and234 = and i64 %sub233, 262144, !dbg !12765
  %tobool235 = icmp ne i64 %and234, 0, !dbg !12765
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !12765

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !12765

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub238 = sub i64 %55, 1, !dbg !12765
  %and239 = and i64 %sub238, 131072, !dbg !12765
  %tobool240 = icmp ne i64 %and239, 0, !dbg !12765
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !12765

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !12765

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub243 = sub i64 %56, 1, !dbg !12765
  %and244 = and i64 %sub243, 65536, !dbg !12765
  %tobool245 = icmp ne i64 %and244, 0, !dbg !12765
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !12765

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !12765

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub248 = sub i64 %57, 1, !dbg !12765
  %and249 = and i64 %sub248, 32768, !dbg !12765
  %tobool250 = icmp ne i64 %and249, 0, !dbg !12765
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !12765

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !12765

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub253 = sub i64 %58, 1, !dbg !12765
  %and254 = and i64 %sub253, 16384, !dbg !12765
  %tobool255 = icmp ne i64 %and254, 0, !dbg !12765
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !12765

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !12765

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub258 = sub i64 %59, 1, !dbg !12765
  %and259 = and i64 %sub258, 8192, !dbg !12765
  %tobool260 = icmp ne i64 %and259, 0, !dbg !12765
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !12765

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !12765

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub263 = sub i64 %60, 1, !dbg !12765
  %and264 = and i64 %sub263, 4096, !dbg !12765
  %tobool265 = icmp ne i64 %and264, 0, !dbg !12765
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !12765

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !12765

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub268 = sub i64 %61, 1, !dbg !12765
  %and269 = and i64 %sub268, 2048, !dbg !12765
  %tobool270 = icmp ne i64 %and269, 0, !dbg !12765
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !12765

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !12765

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub273 = sub i64 %62, 1, !dbg !12765
  %and274 = and i64 %sub273, 1024, !dbg !12765
  %tobool275 = icmp ne i64 %and274, 0, !dbg !12765
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !12765

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !12765

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub278 = sub i64 %63, 1, !dbg !12765
  %and279 = and i64 %sub278, 512, !dbg !12765
  %tobool280 = icmp ne i64 %and279, 0, !dbg !12765
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !12765

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !12765

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub283 = sub i64 %64, 1, !dbg !12765
  %and284 = and i64 %sub283, 256, !dbg !12765
  %tobool285 = icmp ne i64 %and284, 0, !dbg !12765
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !12765

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !12765

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub288 = sub i64 %65, 1, !dbg !12765
  %and289 = and i64 %sub288, 128, !dbg !12765
  %tobool290 = icmp ne i64 %and289, 0, !dbg !12765
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !12765

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !12765

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub293 = sub i64 %66, 1, !dbg !12765
  %and294 = and i64 %sub293, 64, !dbg !12765
  %tobool295 = icmp ne i64 %and294, 0, !dbg !12765
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !12765

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !12765

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub298 = sub i64 %67, 1, !dbg !12765
  %and299 = and i64 %sub298, 32, !dbg !12765
  %tobool300 = icmp ne i64 %and299, 0, !dbg !12765
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !12765

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !12765

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub303 = sub i64 %68, 1, !dbg !12765
  %and304 = and i64 %sub303, 16, !dbg !12765
  %tobool305 = icmp ne i64 %and304, 0, !dbg !12765
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !12765

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !12765

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub308 = sub i64 %69, 1, !dbg !12765
  %and309 = and i64 %sub308, 8, !dbg !12765
  %tobool310 = icmp ne i64 %and309, 0, !dbg !12765
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !12765

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !12765

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub313 = sub i64 %70, 1, !dbg !12765
  %and314 = and i64 %sub313, 4, !dbg !12765
  %tobool315 = icmp ne i64 %and314, 0, !dbg !12765
  %71 = zext i1 %tobool315 to i64, !dbg !12765
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !12765
  br label %cond.end, !dbg !12765

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !12765
  br label %cond.end317, !dbg !12765

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !12765
  br label %cond.end319, !dbg !12765

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !12765
  br label %cond.end321, !dbg !12765

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !12765
  br label %cond.end323, !dbg !12765

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !12765
  br label %cond.end325, !dbg !12765

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !12765
  br label %cond.end327, !dbg !12765

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !12765
  br label %cond.end329, !dbg !12765

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !12765
  br label %cond.end331, !dbg !12765

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !12765
  br label %cond.end333, !dbg !12765

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !12765
  br label %cond.end335, !dbg !12765

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !12765
  br label %cond.end337, !dbg !12765

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !12765
  br label %cond.end339, !dbg !12765

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !12765
  br label %cond.end341, !dbg !12765

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !12765
  br label %cond.end343, !dbg !12765

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !12765
  br label %cond.end345, !dbg !12765

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !12765
  br label %cond.end347, !dbg !12765

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !12765
  br label %cond.end349, !dbg !12765

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !12765
  br label %cond.end351, !dbg !12765

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !12765
  br label %cond.end353, !dbg !12765

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !12765
  br label %cond.end355, !dbg !12765

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !12765
  br label %cond.end357, !dbg !12765

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !12765
  br label %cond.end359, !dbg !12765

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !12765
  br label %cond.end361, !dbg !12765

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !12765
  br label %cond.end363, !dbg !12765

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !12765
  br label %cond.end365, !dbg !12765

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !12765
  br label %cond.end367, !dbg !12765

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !12765
  br label %cond.end369, !dbg !12765

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !12765
  br label %cond.end371, !dbg !12765

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !12765
  br label %cond.end373, !dbg !12765

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !12765
  br label %cond.end375, !dbg !12765

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !12765
  br label %cond.end377, !dbg !12765

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !12765
  br label %cond.end379, !dbg !12765

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !12765
  br label %cond.end381, !dbg !12765

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !12765
  br label %cond.end383, !dbg !12765

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !12765
  br label %cond.end385, !dbg !12765

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !12765
  br label %cond.end387, !dbg !12765

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !12765
  br label %cond.end389, !dbg !12765

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !12765
  br label %cond.end391, !dbg !12765

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !12765
  br label %cond.end393, !dbg !12765

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !12765
  br label %cond.end395, !dbg !12765

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !12765
  br label %cond.end397, !dbg !12765

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !12765
  br label %cond.end399, !dbg !12765

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !12765
  br label %cond.end401, !dbg !12765

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !12765
  br label %cond.end403, !dbg !12765

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !12765
  br label %cond.end405, !dbg !12765

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !12765
  br label %cond.end407, !dbg !12765

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !12765
  br label %cond.end409, !dbg !12765

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !12765
  br label %cond.end411, !dbg !12765

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !12765
  br label %cond.end413, !dbg !12765

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !12765
  br label %cond.end415, !dbg !12765

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !12765
  br label %cond.end417, !dbg !12765

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !12765
  br label %cond.end419, !dbg !12765

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !12765
  br label %cond.end421, !dbg !12765

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !12765
  br label %cond.end423, !dbg !12765

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !12765
  br label %cond.end425, !dbg !12765

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !12765
  br label %cond.end427, !dbg !12765

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !12765
  br label %cond.end429, !dbg !12765

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !12765
  br label %cond.end431, !dbg !12765

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !12765
  br label %cond.end433, !dbg !12765

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !12765
  br label %cond.end435, !dbg !12765

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !12765
  br label %cond.end437, !dbg !12765

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !12765
  br label %cond.end440, !dbg !12765

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !12765

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !12765
  br label %cond.end444, !dbg !12765

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !12765
  %sub443 = sub i64 %72, 1, !dbg !12765
  %call = call i32 @__ilog2_u64(i64 %sub443) #15, !dbg !12765
  br label %cond.end444, !dbg !12765

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !12765
  %sub446 = sub i32 %cond445, 12, !dbg !12766
  %add = add i32 %sub446, 1, !dbg !12767
  store i32 %add, i32* %retval, align 4, !dbg !12768
  br label %return, !dbg !12768

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !12769
  %dec = add i64 %73, -1, !dbg !12769
  store i64 %dec, i64* %size.addr, align 8, !dbg !12769
  %74 = load i64, i64* %size.addr, align 8, !dbg !12770
  %shr = lshr i64 %74, 12, !dbg !12770
  store i64 %shr, i64* %size.addr, align 8, !dbg !12770
  %75 = load i64, i64* %size.addr, align 8, !dbg !12771
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !12748
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !12772
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !12773
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #10, !dbg !12772, !srcloc !12774
  store i32 %78, i32* %bitpos.i, align 4, !dbg !12772
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !12775
  %add.i = add i32 %79, 1, !dbg !12776
  store i32 %add.i, i32* %retval, align 4, !dbg !12777
  br label %return, !dbg !12777

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !12778
  ret i32 %80, !dbg !12778
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !12779 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !12741, metadata !DIExpression()), !dbg !12783
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !12747, metadata !DIExpression()), !dbg !12785
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12786, metadata !DIExpression()), !dbg !12787
  %0 = load i64, i64* %n.addr, align 8, !dbg !12788
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !12785
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !12789
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !12790
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #10, !dbg !12789, !srcloc !12774
  store i32 %3, i32* %bitpos.i, align 4, !dbg !12789
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !12791
  %add.i = add i32 %4, 1, !dbg !12792
  %sub = sub i32 %add.i, 1, !dbg !12793
  ret i32 %sub, !dbg !12794
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #2 !dbg !12795 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !12799, metadata !DIExpression()), !dbg !12800
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !12801, metadata !DIExpression()), !dbg !12802
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12803, metadata !DIExpression()), !dbg !12804
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12805, metadata !DIExpression()), !dbg !12806
  %0 = load i8*, i8** %object.addr, align 8, !dbg !12807
  ret i8* %0, !dbg !12808
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8152b_init(%struct.r8152* %tp) #2 !dbg !12809 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  %data = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !12810, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !12812, metadata !DIExpression()), !dbg !12813
  call void @llvm.dbg.declare(metadata i16* %data, metadata !12814, metadata !DIExpression()), !dbg !12815
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12816
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 0, !dbg !12818
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !12819
  br i1 %call, label %if.then, label %if.end, !dbg !12820

if.then:                                          ; preds = %entry
  br label %return, !dbg !12821

if.end:                                           ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12822
  %call1 = call i32 @r8152_mdio_read(%struct.r8152* %1, i32 0) #13, !dbg !12823
  %conv = trunc i32 %call1 to i16, !dbg !12823
  store i16 %conv, i16* %data, align 2, !dbg !12824
  %2 = load i16, i16* %data, align 2, !dbg !12825
  %conv2 = zext i16 %2 to i32, !dbg !12825
  %and = and i32 %conv2, 2048, !dbg !12827
  %tobool = icmp ne i32 %and, 0, !dbg !12827
  br i1 %tobool, label %if.then3, label %if.end8, !dbg !12828

if.then3:                                         ; preds = %if.end
  %3 = load i16, i16* %data, align 2, !dbg !12829
  %conv4 = zext i16 %3 to i32, !dbg !12829
  %and5 = and i32 %conv4, -2049, !dbg !12829
  %conv6 = trunc i32 %and5 to i16, !dbg !12829
  store i16 %conv6, i16* %data, align 2, !dbg !12829
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12831
  %5 = load i16, i16* %data, align 2, !dbg !12832
  %conv7 = zext i16 %5 to i32, !dbg !12832
  call void @r8152_mdio_write(%struct.r8152* %4, i32 0, i32 %conv7) #13, !dbg !12833
  br label %if.end8, !dbg !12834

if.end8:                                          ; preds = %if.then3, %if.end
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12835
  call void @r8152_aldps_en(%struct.r8152* %6, i1 zeroext false) #13, !dbg !12836
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12837
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 39, !dbg !12839
  %8 = load i8, i8* %version, align 8, !dbg !12839
  %conv9 = zext i8 %8 to i32, !dbg !12837
  %cmp = icmp eq i32 %conv9, 1, !dbg !12840
  br i1 %cmp, label %if.then11, label %if.end15, !dbg !12841

if.then11:                                        ; preds = %if.end8
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12842
  %call12 = call zeroext i16 @ocp_read_word(%struct.r8152* %9, i16 zeroext 256, i16 zeroext -8814) #13, !dbg !12844
  %conv13 = zext i16 %call12 to i32, !dbg !12844
  store i32 %conv13, i32* %ocp_data, align 4, !dbg !12845
  %10 = load i32, i32* %ocp_data, align 4, !dbg !12846
  %and14 = and i32 %10, -1793, !dbg !12846
  store i32 %and14, i32* %ocp_data, align 4, !dbg !12846
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12847
  %12 = load i32, i32* %ocp_data, align 4, !dbg !12848
  call void @ocp_write_word(%struct.r8152* %11, i16 zeroext 256, i16 zeroext -8814, i32 %12) #13, !dbg !12849
  br label %if.end15, !dbg !12850

if.end15:                                         ; preds = %if.then11, %if.end8
  %13 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12851
  call void @r8152_power_cut_en(%struct.r8152* %13, i1 zeroext false) #13, !dbg !12852
  %14 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12853
  %call16 = call zeroext i16 @ocp_read_word(%struct.r8152* %14, i16 zeroext 256, i16 zeroext -6068) #13, !dbg !12854
  %conv17 = zext i16 %call16 to i32, !dbg !12854
  store i32 %conv17, i32* %ocp_data, align 4, !dbg !12855
  %15 = load i32, i32* %ocp_data, align 4, !dbg !12856
  %or = or i32 %15, 192, !dbg !12856
  store i32 %or, i32* %ocp_data, align 4, !dbg !12856
  %16 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12857
  %17 = load i32, i32* %ocp_data, align 4, !dbg !12858
  call void @ocp_write_word(%struct.r8152* %16, i16 zeroext 256, i16 zeroext -6068, i32 %17) #13, !dbg !12859
  %18 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12860
  %call18 = call i32 @ocp_read_dword(%struct.r8152* %18, i16 zeroext 256, i16 zeroext -8000) #13, !dbg !12861
  store i32 %call18, i32* %ocp_data, align 4, !dbg !12862
  %19 = load i32, i32* %ocp_data, align 4, !dbg !12863
  %and19 = and i32 %19, -252645136, !dbg !12863
  store i32 %and19, i32* %ocp_data, align 4, !dbg !12863
  %20 = load i32, i32* %ocp_data, align 4, !dbg !12864
  %or20 = or i32 %20, 117526279, !dbg !12864
  store i32 %or20, i32* %ocp_data, align 4, !dbg !12864
  %21 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12865
  %22 = load i32, i32* %ocp_data, align 4, !dbg !12866
  call void @ocp_write_dword(%struct.r8152* %21, i16 zeroext 256, i16 zeroext -8000, i32 %22) #13, !dbg !12867
  store i32 15, i32* %ocp_data, align 4, !dbg !12868
  %23 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12869
  %24 = load i32, i32* %ocp_data, align 4, !dbg !12870
  call void @ocp_write_word(%struct.r8152* %23, i16 zeroext 256, i16 zeroext -8158, i32 %24) #13, !dbg !12871
  %25 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12872
  call void @rtl_tally_reset(%struct.r8152* %25) #13, !dbg !12873
  %26 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12874
  %call21 = call zeroext i16 @ocp_read_word(%struct.r8152* %26, i16 zeroext 0, i16 zeroext -11258) #13, !dbg !12875
  %conv22 = zext i16 %call21 to i32, !dbg !12875
  store i32 %conv22, i32* %ocp_data, align 4, !dbg !12876
  %27 = load i32, i32* %ocp_data, align 4, !dbg !12877
  %and23 = and i32 %27, -145, !dbg !12877
  store i32 %and23, i32* %ocp_data, align 4, !dbg !12877
  %28 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12878
  %29 = load i32, i32* %ocp_data, align 4, !dbg !12879
  call void @ocp_write_word(%struct.r8152* %28, i16 zeroext 0, i16 zeroext -11258, i32 %29) #13, !dbg !12880
  br label %return, !dbg !12881

return:                                           ; preds = %if.end15, %if.then
  ret void, !dbg !12881
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_enable(%struct.r8152* %tp) #2 !dbg !12882 {
entry:
  %retval = alloca i32, align 4
  %tp.addr = alloca %struct.r8152*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !12883, metadata !DIExpression()), !dbg !12884
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12885
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 0, !dbg !12887
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !12888
  br i1 %call, label %if.then, label %if.end, !dbg !12889

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !12890
  br label %return, !dbg !12890

if.end:                                           ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12891
  call void @set_tx_qlen(%struct.r8152* %1) #13, !dbg !12892
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12893
  call void @rtl_set_eee_plus(%struct.r8152* %2) #13, !dbg !12894
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12895
  %call1 = call i32 @rtl_enable(%struct.r8152* %3) #13, !dbg !12896
  store i32 %call1, i32* %retval, align 4, !dbg !12897
  br label %return, !dbg !12897

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !12898
  ret i32 %4, !dbg !12898
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8152_disable(%struct.r8152* %tp) #2 !dbg !12899 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !12900, metadata !DIExpression()), !dbg !12901
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12902
  call void @r8152_aldps_en(%struct.r8152* %0, i1 zeroext false) #13, !dbg !12903
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12904
  call void @rtl_disable(%struct.r8152* %1) #13, !dbg !12905
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12906
  call void @r8152_aldps_en(%struct.r8152* %2, i1 zeroext true) #13, !dbg !12907
  ret void, !dbg !12908
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8152_up(%struct.r8152* %tp) #2 !dbg !12909 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !12910, metadata !DIExpression()), !dbg !12911
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12912
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 0, !dbg !12914
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !12915
  br i1 %call, label %if.then, label %if.end, !dbg !12916

if.then:                                          ; preds = %entry
  br label %return, !dbg !12917

if.end:                                           ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12918
  call void @r8152_aldps_en(%struct.r8152* %1, i1 zeroext false) #13, !dbg !12919
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12920
  call void @r8152b_exit_oob(%struct.r8152* %2) #13, !dbg !12921
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12922
  call void @r8152_aldps_en(%struct.r8152* %3, i1 zeroext true) #13, !dbg !12923
  br label %return, !dbg !12924

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !12924
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8152_down(%struct.r8152* %tp) #2 !dbg !12925 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !12926, metadata !DIExpression()), !dbg !12927
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12928
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 0, !dbg !12930
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !12931
  br i1 %call, label %if.then, label %if.end, !dbg !12932

if.then:                                          ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12933
  call void @rtl_drop_queued_tx(%struct.r8152* %1) #13, !dbg !12935
  br label %return, !dbg !12936

if.end:                                           ; preds = %entry
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12937
  call void @r8152_power_cut_en(%struct.r8152* %2, i1 zeroext false) #13, !dbg !12938
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12939
  call void @r8152_aldps_en(%struct.r8152* %3, i1 zeroext false) #13, !dbg !12940
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12941
  call void @r8152b_enter_oob(%struct.r8152* %4) #13, !dbg !12942
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12943
  call void @r8152_aldps_en(%struct.r8152* %5, i1 zeroext true) #13, !dbg !12944
  br label %return, !dbg !12945

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !12945
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8152_unload(%struct.r8152* %tp) #2 !dbg !12946 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !12947, metadata !DIExpression()), !dbg !12948
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12949
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 0, !dbg !12951
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !12952
  br i1 %call, label %if.then, label %if.end, !dbg !12953

if.then:                                          ; preds = %entry
  br label %if.end3, !dbg !12954

if.end:                                           ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12955
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %1, i32 0, i32 39, !dbg !12957
  %2 = load i8, i8* %version, align 8, !dbg !12957
  %conv = zext i8 %2 to i32, !dbg !12955
  %cmp = icmp ne i32 %conv, 1, !dbg !12958
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !12959

if.then2:                                         ; preds = %if.end
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12960
  call void @r8152_power_cut_en(%struct.r8152* %3, i1 zeroext true) #13, !dbg !12961
  br label %if.end3, !dbg !12961

if.end3:                                          ; preds = %if.then, %if.then2, %if.end
  ret void, !dbg !12962
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @r8152_get_eee(%struct.r8152* %tp, %struct.ethtool_eee* %eee) #2 !dbg !12963 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %eee.addr = alloca %struct.ethtool_eee*, align 8
  %lp = alloca i32, align 4
  %adv = alloca i32, align 4
  %supported = alloca i32, align 4
  %val = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !12964, metadata !DIExpression()), !dbg !12965
  store %struct.ethtool_eee* %eee, %struct.ethtool_eee** %eee.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_eee** %eee.addr, metadata !12966, metadata !DIExpression()), !dbg !12967
  call void @llvm.dbg.declare(metadata i32* %lp, metadata !12968, metadata !DIExpression()), !dbg !12969
  call void @llvm.dbg.declare(metadata i32* %adv, metadata !12970, metadata !DIExpression()), !dbg !12971
  call void @llvm.dbg.declare(metadata i32* %supported, metadata !12972, metadata !DIExpression()), !dbg !12973
  store i32 0, i32* %supported, align 4, !dbg !12973
  call void @llvm.dbg.declare(metadata i16* %val, metadata !12974, metadata !DIExpression()), !dbg !12975
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12976
  %call = call zeroext i16 @r8152_mmd_read(%struct.r8152* %0, i16 zeroext 3, i16 zeroext 20) #13, !dbg !12977
  store i16 %call, i16* %val, align 2, !dbg !12978
  %1 = load i16, i16* %val, align 2, !dbg !12979
  %call1 = call i32 @mmd_eee_cap_to_ethtool_sup_t(i16 zeroext %1) #13, !dbg !12980
  store i32 %call1, i32* %supported, align 4, !dbg !12981
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12982
  %call2 = call zeroext i16 @r8152_mmd_read(%struct.r8152* %2, i16 zeroext 7, i16 zeroext 60) #13, !dbg !12983
  store i16 %call2, i16* %val, align 2, !dbg !12984
  %3 = load i16, i16* %val, align 2, !dbg !12985
  %call3 = call i32 @mmd_eee_adv_to_ethtool_adv_t(i16 zeroext %3) #13, !dbg !12986
  store i32 %call3, i32* %adv, align 4, !dbg !12987
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12988
  %call4 = call zeroext i16 @r8152_mmd_read(%struct.r8152* %4, i16 zeroext 7, i16 zeroext 61) #13, !dbg !12989
  store i16 %call4, i16* %val, align 2, !dbg !12990
  %5 = load i16, i16* %val, align 2, !dbg !12991
  %call5 = call i32 @mmd_eee_adv_to_ethtool_adv_t(i16 zeroext %5) #13, !dbg !12992
  store i32 %call5, i32* %lp, align 4, !dbg !12993
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !12994
  %eee_en = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 25, !dbg !12995
  %7 = load i8, i8* %eee_en, align 4, !dbg !12995
  %tobool = trunc i8 %7 to i1, !dbg !12995
  %conv = zext i1 %tobool to i32, !dbg !12994
  %8 = load %struct.ethtool_eee*, %struct.ethtool_eee** %eee.addr, align 8, !dbg !12996
  %eee_enabled = getelementptr inbounds %struct.ethtool_eee, %struct.ethtool_eee* %8, i32 0, i32 5, !dbg !12997
  store i32 %conv, i32* %eee_enabled, align 4, !dbg !12998
  %9 = load i32, i32* %supported, align 4, !dbg !12999
  %10 = load i32, i32* %adv, align 4, !dbg !13000
  %and = and i32 %9, %10, !dbg !13001
  %11 = load i32, i32* %lp, align 4, !dbg !13002
  %and6 = and i32 %and, %11, !dbg !13003
  %tobool7 = icmp ne i32 %and6, 0, !dbg !13004
  %lnot = xor i1 %tobool7, true, !dbg !13004
  %lnot8 = xor i1 %lnot, true, !dbg !13005
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !13005
  %12 = load %struct.ethtool_eee*, %struct.ethtool_eee** %eee.addr, align 8, !dbg !13006
  %eee_active = getelementptr inbounds %struct.ethtool_eee, %struct.ethtool_eee* %12, i32 0, i32 4, !dbg !13007
  store i32 %lnot.ext, i32* %eee_active, align 4, !dbg !13008
  %13 = load i32, i32* %supported, align 4, !dbg !13009
  %14 = load %struct.ethtool_eee*, %struct.ethtool_eee** %eee.addr, align 8, !dbg !13010
  %supported9 = getelementptr inbounds %struct.ethtool_eee, %struct.ethtool_eee* %14, i32 0, i32 1, !dbg !13011
  store i32 %13, i32* %supported9, align 4, !dbg !13012
  %15 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13013
  %eee_adv = getelementptr inbounds %struct.r8152, %struct.r8152* %15, i32 0, i32 37, !dbg !13014
  %16 = load i16, i16* %eee_adv, align 8, !dbg !13014
  %conv10 = zext i16 %16 to i32, !dbg !13013
  %17 = load %struct.ethtool_eee*, %struct.ethtool_eee** %eee.addr, align 8, !dbg !13015
  %advertised = getelementptr inbounds %struct.ethtool_eee, %struct.ethtool_eee* %17, i32 0, i32 2, !dbg !13016
  store i32 %conv10, i32* %advertised, align 4, !dbg !13017
  %18 = load i32, i32* %lp, align 4, !dbg !13018
  %19 = load %struct.ethtool_eee*, %struct.ethtool_eee** %eee.addr, align 8, !dbg !13019
  %lp_advertised = getelementptr inbounds %struct.ethtool_eee, %struct.ethtool_eee* %19, i32 0, i32 3, !dbg !13020
  store i32 %18, i32* %lp_advertised, align 4, !dbg !13021
  ret i32 0, !dbg !13022
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @r8152_set_eee(%struct.r8152* %tp, %struct.ethtool_eee* %eee) #2 !dbg !13023 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %eee.addr = alloca %struct.ethtool_eee*, align 8
  %val = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !13024, metadata !DIExpression()), !dbg !13025
  store %struct.ethtool_eee* %eee, %struct.ethtool_eee** %eee.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_eee** %eee.addr, metadata !13026, metadata !DIExpression()), !dbg !13027
  call void @llvm.dbg.declare(metadata i16* %val, metadata !13028, metadata !DIExpression()), !dbg !13029
  %0 = load %struct.ethtool_eee*, %struct.ethtool_eee** %eee.addr, align 8, !dbg !13030
  %advertised = getelementptr inbounds %struct.ethtool_eee, %struct.ethtool_eee* %0, i32 0, i32 2, !dbg !13031
  %1 = load i32, i32* %advertised, align 4, !dbg !13031
  %call = call zeroext i16 @ethtool_adv_to_mmd_eee_adv_t(i32 %1) #13, !dbg !13032
  store i16 %call, i16* %val, align 2, !dbg !13029
  %2 = load %struct.ethtool_eee*, %struct.ethtool_eee** %eee.addr, align 8, !dbg !13033
  %eee_enabled = getelementptr inbounds %struct.ethtool_eee, %struct.ethtool_eee* %2, i32 0, i32 5, !dbg !13034
  %3 = load i32, i32* %eee_enabled, align 4, !dbg !13034
  %tobool = icmp ne i32 %3, 0, !dbg !13033
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13035
  %eee_en = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 25, !dbg !13036
  %frombool = zext i1 %tobool to i8, !dbg !13037
  store i8 %frombool, i8* %eee_en, align 4, !dbg !13037
  %5 = load i16, i16* %val, align 2, !dbg !13038
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13039
  %eee_adv = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 37, !dbg !13040
  store i16 %5, i16* %eee_adv, align 8, !dbg !13041
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13042
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13043
  %eee_en1 = getelementptr inbounds %struct.r8152, %struct.r8152* %8, i32 0, i32 25, !dbg !13044
  %9 = load i8, i8* %eee_en1, align 4, !dbg !13044
  %tobool2 = trunc i8 %9 to i1, !dbg !13044
  call void @rtl_eee_enable(%struct.r8152* %7, i1 zeroext %tobool2) #13, !dbg !13045
  ret i32 0, !dbg !13046
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @rtl8152_in_nway(%struct.r8152* %tp) #2 !dbg !13047 {
entry:
  %retval = alloca i1, align 1
  %tp.addr = alloca %struct.r8152*, align 8
  %nway_state = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !13048, metadata !DIExpression()), !dbg !13049
  call void @llvm.dbg.declare(metadata i16* %nway_state, metadata !13050, metadata !DIExpression()), !dbg !13051
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13052
  call void @ocp_write_word(%struct.r8152* %0, i16 zeroext 256, i16 zeroext -6036, i32 8192) #13, !dbg !13053
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13054
  %ocp_base = getelementptr inbounds %struct.r8152, %struct.r8152* %1, i32 0, i32 35, !dbg !13055
  store i16 8192, i16* %ocp_base, align 4, !dbg !13056
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13057
  call void @ocp_write_byte(%struct.r8152* %2, i16 zeroext 256, i16 zeroext -20460, i32 76) #13, !dbg !13058
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13059
  %call = call zeroext i16 @ocp_read_word(%struct.r8152* %3, i16 zeroext 256, i16 zeroext -20454) #13, !dbg !13060
  store i16 %call, i16* %nway_state, align 2, !dbg !13061
  %4 = load i16, i16* %nway_state, align 2, !dbg !13062
  %conv = zext i16 %4 to i32, !dbg !13062
  %and = and i32 %conv, 49152, !dbg !13064
  %tobool = icmp ne i32 %and, 0, !dbg !13064
  br i1 %tobool, label %if.then, label %if.else, !dbg !13065

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !13066
  br label %return, !dbg !13066

if.else:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !13067
  br label %return, !dbg !13067

return:                                           ; preds = %if.else, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !13068
  ret i1 %5, !dbg !13068
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8152b_hw_phy_cfg(%struct.r8152* %tp) #2 !dbg !13069 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !13070, metadata !DIExpression()), !dbg !13071
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13072
  call void @rtl8152_apply_firmware(%struct.r8152* %0) #13, !dbg !13073
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13074
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13075
  %eee_en = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 25, !dbg !13076
  %3 = load i8, i8* %eee_en, align 4, !dbg !13076
  %tobool = trunc i8 %3 to i1, !dbg !13076
  call void @rtl_eee_enable(%struct.r8152* %1, i1 zeroext %tobool) #13, !dbg !13077
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13078
  call void @r8152_aldps_en(%struct.r8152* %4, i1 zeroext true) #13, !dbg !13079
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13080
  call void @r8152b_enable_fc(%struct.r8152* %5) #13, !dbg !13081
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13082
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 0, !dbg !13083
  call void @set_bit(i64 5, i64* %flags) #13, !dbg !13084
  ret void, !dbg !13085
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl_runtime_suspend_enable(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !13086 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  %ocp_data = alloca i32, align 4
  %ocp_data1 = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !13087, metadata !DIExpression()), !dbg !13088
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !13089, metadata !DIExpression()), !dbg !13090
  %0 = load i8, i8* %enable.addr, align 1, !dbg !13091
  %tobool = trunc i8 %0 to i1, !dbg !13091
  br i1 %tobool, label %if.then, label %if.else, !dbg !13093

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !13094, metadata !DIExpression()), !dbg !13096
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13097
  call void @__rtl_set_wol(%struct.r8152* %1, i32 47) #13, !dbg !13098
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13099
  call void @ocp_write_byte(%struct.r8152* %2, i16 zeroext 256, i16 zeroext -6116, i32 192) #13, !dbg !13100
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13101
  %call = call zeroext i16 @ocp_read_word(%struct.r8152* %3, i16 zeroext 256, i16 zeroext -6112) #13, !dbg !13102
  %conv = zext i16 %call to i32, !dbg !13102
  store i32 %conv, i32* %ocp_data, align 4, !dbg !13103
  %4 = load i32, i32* %ocp_data, align 4, !dbg !13104
  %or = or i32 %4, 8, !dbg !13104
  store i32 %or, i32* %ocp_data, align 4, !dbg !13104
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13105
  %6 = load i32, i32* %ocp_data, align 4, !dbg !13106
  call void @ocp_write_word(%struct.r8152* %5, i16 zeroext 256, i16 zeroext -6112, i32 %6) #13, !dbg !13107
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13108
  call void @ocp_write_byte(%struct.r8152* %7, i16 zeroext 256, i16 zeroext -6116, i32 0) #13, !dbg !13109
  br label %if.end, !dbg !13110

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %ocp_data1, metadata !13111, metadata !DIExpression()), !dbg !13113
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13114
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13115
  %saved_wolopts = getelementptr inbounds %struct.r8152, %struct.r8152* %9, i32 0, i32 27, !dbg !13116
  %10 = load i32, i32* %saved_wolopts, align 4, !dbg !13116
  call void @__rtl_set_wol(%struct.r8152* %8, i32 %10) #13, !dbg !13117
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13118
  call void @ocp_write_byte(%struct.r8152* %11, i16 zeroext 256, i16 zeroext -6116, i32 192) #13, !dbg !13119
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13120
  %call2 = call zeroext i16 @ocp_read_word(%struct.r8152* %12, i16 zeroext 256, i16 zeroext -6112) #13, !dbg !13121
  %conv3 = zext i16 %call2 to i32, !dbg !13121
  store i32 %conv3, i32* %ocp_data1, align 4, !dbg !13122
  %13 = load i32, i32* %ocp_data1, align 4, !dbg !13123
  %and = and i32 %13, -9, !dbg !13123
  store i32 %and, i32* %ocp_data1, align 4, !dbg !13123
  %14 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13124
  %15 = load i32, i32* %ocp_data1, align 4, !dbg !13125
  call void @ocp_write_word(%struct.r8152* %14, i16 zeroext 256, i16 zeroext -6112, i32 %15) #13, !dbg !13126
  %16 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13127
  call void @ocp_write_byte(%struct.r8152* %16, i16 zeroext 256, i16 zeroext -6116, i32 0) #13, !dbg !13128
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !13129
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153_init(%struct.r8152* %tp) #2 !dbg !13130 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  %data = alloca i16, align 2
  %i = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !13131, metadata !DIExpression()), !dbg !13132
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !13133, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.declare(metadata i16* %data, metadata !13135, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13137, metadata !DIExpression()), !dbg !13138
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13139
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 0, !dbg !13141
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !13142
  br i1 %call, label %if.then, label %if.end, !dbg !13143

if.then:                                          ; preds = %entry
  br label %sw.epilog, !dbg !13144

if.end:                                           ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13145
  call void @r8153_u1u2en(%struct.r8152* %1, i1 zeroext false) #13, !dbg !13146
  store i32 0, i32* %i, align 4, !dbg !13147
  br label %for.cond, !dbg !13149

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !13150
  %cmp = icmp slt i32 %2, 500, !dbg !13152
  br i1 %cmp, label %for.body, label %for.end, !dbg !13153

for.body:                                         ; preds = %for.cond
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13154
  %call1 = call zeroext i16 @ocp_read_word(%struct.r8152* %3, i16 zeroext 256, i16 zeroext -8188) #13, !dbg !13157
  %conv = zext i16 %call1 to i32, !dbg !13157
  %and = and i32 %conv, 2, !dbg !13158
  %tobool = icmp ne i32 %and, 0, !dbg !13158
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !13159

if.then2:                                         ; preds = %for.body
  br label %for.end, !dbg !13160

if.end3:                                          ; preds = %for.body
  call void @msleep(i32 20) #13, !dbg !13161
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13162
  %flags4 = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 0, !dbg !13164
  %call5 = call zeroext i1 @test_bit(i64 0, i64* %flags4) #13, !dbg !13165
  br i1 %call5, label %if.then6, label %if.end7, !dbg !13166

if.then6:                                         ; preds = %if.end3
  br label %for.end, !dbg !13167

if.end7:                                          ; preds = %if.end3
  br label %for.inc, !dbg !13168

for.inc:                                          ; preds = %if.end7
  %5 = load i32, i32* %i, align 4, !dbg !13169
  %inc = add i32 %5, 1, !dbg !13169
  store i32 %inc, i32* %i, align 4, !dbg !13169
  br label %for.cond, !dbg !13170, !llvm.loop !13171

for.end:                                          ; preds = %if.then6, %if.then2, %for.cond
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13173
  %call8 = call zeroext i16 @r8153_phy_status(%struct.r8152* %6, i16 zeroext 0) #13, !dbg !13174
  store i16 %call8, i16* %data, align 2, !dbg !13175
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13176
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 39, !dbg !13178
  %8 = load i8, i8* %version, align 8, !dbg !13178
  %conv9 = zext i8 %8 to i32, !dbg !13176
  %cmp10 = icmp eq i32 %conv9, 3, !dbg !13179
  br i1 %cmp10, label %if.then21, label %lor.lhs.false, !dbg !13180

lor.lhs.false:                                    ; preds = %for.end
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13181
  %version12 = getelementptr inbounds %struct.r8152, %struct.r8152* %9, i32 0, i32 39, !dbg !13182
  %10 = load i8, i8* %version12, align 8, !dbg !13182
  %conv13 = zext i8 %10 to i32, !dbg !13181
  %cmp14 = icmp eq i32 %conv13, 4, !dbg !13183
  br i1 %cmp14, label %if.then21, label %lor.lhs.false16, !dbg !13184

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13185
  %version17 = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 39, !dbg !13186
  %12 = load i8, i8* %version17, align 8, !dbg !13186
  %conv18 = zext i8 %12 to i32, !dbg !13185
  %cmp19 = icmp eq i32 %conv18, 5, !dbg !13187
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !13188

if.then21:                                        ; preds = %lor.lhs.false16, %lor.lhs.false, %for.end
  %13 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13189
  call void @ocp_reg_write(%struct.r8152* %13, i16 zeroext -17402, i16 zeroext 448) #13, !dbg !13190
  br label %if.end22, !dbg !13190

if.end22:                                         ; preds = %if.then21, %lor.lhs.false16
  %14 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13191
  %call23 = call i32 @r8152_mdio_read(%struct.r8152* %14, i32 0) #13, !dbg !13192
  %conv24 = trunc i32 %call23 to i16, !dbg !13192
  store i16 %conv24, i16* %data, align 2, !dbg !13193
  %15 = load i16, i16* %data, align 2, !dbg !13194
  %conv25 = zext i16 %15 to i32, !dbg !13194
  %and26 = and i32 %conv25, 2048, !dbg !13196
  %tobool27 = icmp ne i32 %and26, 0, !dbg !13196
  br i1 %tobool27, label %if.then28, label %if.end33, !dbg !13197

if.then28:                                        ; preds = %if.end22
  %16 = load i16, i16* %data, align 2, !dbg !13198
  %conv29 = zext i16 %16 to i32, !dbg !13198
  %and30 = and i32 %conv29, -2049, !dbg !13198
  %conv31 = trunc i32 %and30 to i16, !dbg !13198
  store i16 %conv31, i16* %data, align 2, !dbg !13198
  %17 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13200
  %18 = load i16, i16* %data, align 2, !dbg !13201
  %conv32 = zext i16 %18 to i32, !dbg !13201
  call void @r8152_mdio_write(%struct.r8152* %17, i32 0, i32 %conv32) #13, !dbg !13202
  br label %if.end33, !dbg !13203

if.end33:                                         ; preds = %if.then28, %if.end22
  %19 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13204
  %call34 = call zeroext i16 @r8153_phy_status(%struct.r8152* %19, i16 zeroext 3) #13, !dbg !13205
  store i16 %call34, i16* %data, align 2, !dbg !13206
  %20 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13207
  call void @r8153_u2p3en(%struct.r8152* %20, i1 zeroext false) #13, !dbg !13208
  %21 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13209
  %version35 = getelementptr inbounds %struct.r8152, %struct.r8152* %21, i32 0, i32 39, !dbg !13211
  %22 = load i8, i8* %version35, align 8, !dbg !13211
  %conv36 = zext i8 %22 to i32, !dbg !13209
  %cmp37 = icmp eq i32 %conv36, 4, !dbg !13212
  br i1 %cmp37, label %if.then39, label %if.else, !dbg !13213

if.then39:                                        ; preds = %if.end33
  %23 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13214
  %call40 = call zeroext i16 @ocp_read_word(%struct.r8152* %23, i16 zeroext 0, i16 zeroext -19416) #13, !dbg !13216
  %conv41 = zext i16 %call40 to i32, !dbg !13216
  store i32 %conv41, i32* %ocp_data, align 4, !dbg !13217
  %24 = load i32, i32* %ocp_data, align 4, !dbg !13218
  %and42 = and i32 %24, -16383, !dbg !13218
  store i32 %and42, i32* %ocp_data, align 4, !dbg !13218
  %25 = load i32, i32* %ocp_data, align 4, !dbg !13219
  %or = or i32 %25, 192, !dbg !13219
  store i32 %or, i32* %ocp_data, align 4, !dbg !13219
  %26 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13220
  %27 = load i32, i32* %ocp_data, align 4, !dbg !13221
  call void @ocp_write_word(%struct.r8152* %26, i16 zeroext 0, i16 zeroext -19416, i32 %27) #13, !dbg !13222
  %28 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13223
  %call43 = call zeroext i8 @ocp_read_byte(%struct.r8152* %28, i16 zeroext 0, i16 zeroext -19426) #13, !dbg !13224
  %conv44 = zext i8 %call43 to i32, !dbg !13224
  store i32 %conv44, i32* %ocp_data, align 4, !dbg !13225
  %29 = load i32, i32* %ocp_data, align 4, !dbg !13226
  %or45 = or i32 %29, 3, !dbg !13226
  store i32 %or45, i32* %ocp_data, align 4, !dbg !13226
  %30 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13227
  %31 = load i32, i32* %ocp_data, align 4, !dbg !13228
  call void @ocp_write_byte(%struct.r8152* %30, i16 zeroext 0, i16 zeroext -19426, i32 %31) #13, !dbg !13229
  br label %if.end102, !dbg !13230

if.else:                                          ; preds = %if.end33
  %32 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13231
  %version46 = getelementptr inbounds %struct.r8152, %struct.r8152* %32, i32 0, i32 39, !dbg !13233
  %33 = load i8, i8* %version46, align 8, !dbg !13233
  %conv47 = zext i8 %33 to i32, !dbg !13231
  %cmp48 = icmp eq i32 %conv47, 5, !dbg !13234
  br i1 %cmp48, label %if.then50, label %if.else65, !dbg !13235

if.then50:                                        ; preds = %if.else
  %34 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13236
  %call51 = call zeroext i8 @ocp_read_byte(%struct.r8152* %34, i16 zeroext 256, i16 zeroext -16208) #13, !dbg !13238
  %conv52 = zext i8 %call51 to i32, !dbg !13238
  store i32 %conv52, i32* %ocp_data, align 4, !dbg !13239
  %35 = load i32, i32* %ocp_data, align 4, !dbg !13240
  %and53 = and i32 %35, -3, !dbg !13240
  store i32 %and53, i32* %ocp_data, align 4, !dbg !13240
  %36 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13241
  %37 = load i32, i32* %ocp_data, align 4, !dbg !13242
  call void @ocp_write_byte(%struct.r8152* %36, i16 zeroext 256, i16 zeroext -16208, i32 %37) #13, !dbg !13243
  %38 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13244
  %call54 = call zeroext i8 @ocp_read_byte(%struct.r8152* %38, i16 zeroext 0, i16 zeroext -19356) #13, !dbg !13245
  %conv55 = zext i8 %call54 to i32, !dbg !13245
  store i32 %conv55, i32* %ocp_data, align 4, !dbg !13246
  %39 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13247
  %call56 = call zeroext i16 @ocp_read_word(%struct.r8152* %39, i16 zeroext 0, i16 zeroext -12352) #13, !dbg !13249
  %conv57 = zext i16 %call56 to i32, !dbg !13249
  %cmp58 = icmp eq i32 %conv57, 0, !dbg !13250
  br i1 %cmp58, label %if.then60, label %if.else62, !dbg !13251

if.then60:                                        ; preds = %if.then50
  %40 = load i32, i32* %ocp_data, align 4, !dbg !13252
  %and61 = and i32 %40, -2, !dbg !13252
  store i32 %and61, i32* %ocp_data, align 4, !dbg !13252
  br label %if.end64, !dbg !13253

if.else62:                                        ; preds = %if.then50
  %41 = load i32, i32* %ocp_data, align 4, !dbg !13254
  %or63 = or i32 %41, 1, !dbg !13254
  store i32 %or63, i32* %ocp_data, align 4, !dbg !13254
  br label %if.end64

if.end64:                                         ; preds = %if.else62, %if.then60
  %42 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13255
  %43 = load i32, i32* %ocp_data, align 4, !dbg !13256
  call void @ocp_write_byte(%struct.r8152* %42, i16 zeroext 0, i16 zeroext -19356, i32 %43) #13, !dbg !13257
  br label %if.end101, !dbg !13258

if.else65:                                        ; preds = %if.else
  %44 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13259
  %version66 = getelementptr inbounds %struct.r8152, %struct.r8152* %44, i32 0, i32 39, !dbg !13261
  %45 = load i8, i8* %version66, align 8, !dbg !13261
  %conv67 = zext i8 %45 to i32, !dbg !13259
  %cmp68 = icmp eq i32 %conv67, 6, !dbg !13262
  br i1 %cmp68, label %if.then70, label %if.end100, !dbg !13263

if.then70:                                        ; preds = %if.else65
  %46 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13264
  %call71 = call zeroext i8 @ocp_read_byte(%struct.r8152* %46, i16 zeroext 0, i16 zeroext -19356) #13, !dbg !13266
  %conv72 = zext i8 %call71 to i32, !dbg !13266
  store i32 %conv72, i32* %ocp_data, align 4, !dbg !13267
  %47 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13268
  %call73 = call zeroext i16 @ocp_read_word(%struct.r8152* %47, i16 zeroext 0, i16 zeroext -12352) #13, !dbg !13270
  %conv74 = zext i16 %call73 to i32, !dbg !13270
  %cmp75 = icmp eq i32 %conv74, 0, !dbg !13271
  br i1 %cmp75, label %if.then77, label %if.else79, !dbg !13272

if.then77:                                        ; preds = %if.then70
  %48 = load i32, i32* %ocp_data, align 4, !dbg !13273
  %and78 = and i32 %48, -2, !dbg !13273
  store i32 %and78, i32* %ocp_data, align 4, !dbg !13273
  br label %if.end81, !dbg !13274

if.else79:                                        ; preds = %if.then70
  %49 = load i32, i32* %ocp_data, align 4, !dbg !13275
  %or80 = or i32 %49, 1, !dbg !13275
  store i32 %or80, i32* %ocp_data, align 4, !dbg !13275
  br label %if.end81

if.end81:                                         ; preds = %if.else79, %if.then77
  %50 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13276
  %51 = load i32, i32* %ocp_data, align 4, !dbg !13277
  call void @ocp_write_byte(%struct.r8152* %50, i16 zeroext 0, i16 zeroext -19356, i32 %51) #13, !dbg !13278
  %52 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13279
  call void @r8153_queue_wake(%struct.r8152* %52, i1 zeroext false) #13, !dbg !13280
  %53 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13281
  %call82 = call zeroext i16 @ocp_read_word(%struct.r8152* %53, i16 zeroext 256, i16 zeroext -11368) #13, !dbg !13282
  %conv83 = zext i16 %call82 to i32, !dbg !13282
  store i32 %conv83, i32* %ocp_data, align 4, !dbg !13283
  %54 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13284
  %call84 = call zeroext i8 @rtl8152_get_speed(%struct.r8152* %54) #13, !dbg !13286
  %conv85 = zext i8 %call84 to i32, !dbg !13286
  %and86 = and i32 %conv85, 2, !dbg !13287
  %tobool87 = icmp ne i32 %and86, 0, !dbg !13287
  br i1 %tobool87, label %if.then88, label %if.else92, !dbg !13288

if.then88:                                        ; preds = %if.end81
  %55 = load i32, i32* %ocp_data, align 4, !dbg !13289
  %conv89 = zext i32 %55 to i64, !dbg !13289
  %or90 = or i64 %conv89, 32768, !dbg !13289
  %conv91 = trunc i64 %or90 to i32, !dbg !13289
  store i32 %conv91, i32* %ocp_data, align 4, !dbg !13289
  br label %if.end96, !dbg !13290

if.else92:                                        ; preds = %if.end81
  %56 = load i32, i32* %ocp_data, align 4, !dbg !13291
  %conv93 = zext i32 %56 to i64, !dbg !13291
  %and94 = and i64 %conv93, -32769, !dbg !13291
  %conv95 = trunc i64 %and94 to i32, !dbg !13291
  store i32 %conv95, i32* %ocp_data, align 4, !dbg !13291
  br label %if.end96

if.end96:                                         ; preds = %if.else92, %if.then88
  %57 = load i32, i32* %ocp_data, align 4, !dbg !13292
  %conv97 = zext i32 %57 to i64, !dbg !13292
  %or98 = or i64 %conv97, 1, !dbg !13292
  %conv99 = trunc i64 %or98 to i32, !dbg !13292
  store i32 %conv99, i32* %ocp_data, align 4, !dbg !13292
  %58 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13293
  %59 = load i32, i32* %ocp_data, align 4, !dbg !13294
  call void @ocp_write_word(%struct.r8152* %58, i16 zeroext 256, i16 zeroext -11368, i32 %59) #13, !dbg !13295
  br label %if.end100, !dbg !13296

if.end100:                                        ; preds = %if.end96, %if.else65
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.end64
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then39
  %60 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13297
  %call103 = call zeroext i8 @ocp_read_byte(%struct.r8152* %60, i16 zeroext 0, i16 zeroext -19354) #13, !dbg !13298
  %conv104 = zext i8 %call103 to i32, !dbg !13298
  store i32 %conv104, i32* %ocp_data, align 4, !dbg !13299
  %61 = load i32, i32* %ocp_data, align 4, !dbg !13300
  %or105 = or i32 %61, 1, !dbg !13300
  store i32 %or105, i32* %ocp_data, align 4, !dbg !13300
  %62 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13301
  %63 = load i32, i32* %ocp_data, align 4, !dbg !13302
  call void @ocp_write_byte(%struct.r8152* %62, i16 zeroext 0, i16 zeroext -19354, i32 %63) #13, !dbg !13303
  %64 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13304
  %call106 = call zeroext i16 @ocp_read_word(%struct.r8152* %64, i16 zeroext 0, i16 zeroext -7108) #13, !dbg !13305
  %conv107 = zext i16 %call106 to i32, !dbg !13305
  store i32 %conv107, i32* %ocp_data, align 4, !dbg !13306
  %65 = load i32, i32* %ocp_data, align 4, !dbg !13307
  %and108 = and i32 %65, -2, !dbg !13307
  store i32 %and108, i32* %ocp_data, align 4, !dbg !13307
  %66 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13308
  %67 = load i32, i32* %ocp_data, align 4, !dbg !13309
  call void @ocp_write_word(%struct.r8152* %66, i16 zeroext 0, i16 zeroext -7108, i32 %67) #13, !dbg !13310
  %68 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13311
  %call109 = call zeroext i16 @ocp_read_word(%struct.r8152* %68, i16 zeroext 256, i16 zeroext -8814) #13, !dbg !13312
  %conv110 = zext i16 %call109 to i32, !dbg !13312
  store i32 %conv110, i32* %ocp_data, align 4, !dbg !13313
  %69 = load i32, i32* %ocp_data, align 4, !dbg !13314
  %and111 = and i32 %69, -1793, !dbg !13314
  store i32 %and111, i32* %ocp_data, align 4, !dbg !13314
  %70 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13315
  %71 = load i32, i32* %ocp_data, align 4, !dbg !13316
  call void @ocp_write_word(%struct.r8152* %70, i16 zeroext 256, i16 zeroext -8814, i32 %71) #13, !dbg !13317
  store i32 50, i32* %ocp_data, align 4, !dbg !13318
  %72 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13319
  %version112 = getelementptr inbounds %struct.r8152, %struct.r8152* %72, i32 0, i32 39, !dbg !13321
  %73 = load i8, i8* %version112, align 8, !dbg !13321
  %conv113 = zext i8 %73 to i32, !dbg !13319
  %cmp114 = icmp eq i32 %conv113, 4, !dbg !13322
  br i1 %cmp114, label %land.lhs.true, label %if.else120, !dbg !13323

land.lhs.true:                                    ; preds = %if.end102
  %74 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13324
  %udev = getelementptr inbounds %struct.r8152, %struct.r8152* %74, i32 0, i32 1, !dbg !13325
  %75 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !13325
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %75, i32 0, i32 4, !dbg !13326
  %76 = load i32, i32* %speed, align 4, !dbg !13326
  %cmp116 = icmp ult i32 %76, 5, !dbg !13327
  br i1 %cmp116, label %if.then118, label %if.else120, !dbg !13328

if.then118:                                       ; preds = %land.lhs.true
  %77 = load i32, i32* %ocp_data, align 4, !dbg !13329
  %or119 = or i32 %77, 4, !dbg !13329
  store i32 %or119, i32* %ocp_data, align 4, !dbg !13329
  br label %if.end122, !dbg !13330

if.else120:                                       ; preds = %land.lhs.true, %if.end102
  %78 = load i32, i32* %ocp_data, align 4, !dbg !13331
  %or121 = or i32 %78, 12, !dbg !13331
  store i32 %or121, i32* %ocp_data, align 4, !dbg !13331
  br label %if.end122

if.end122:                                        ; preds = %if.else120, %if.then118
  %79 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13332
  %80 = load i32, i32* %ocp_data, align 4, !dbg !13333
  call void @ocp_write_byte(%struct.r8152* %79, i16 zeroext 0, i16 zeroext -11238, i32 %80) #13, !dbg !13334
  %81 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13335
  %call123 = call zeroext i16 @ocp_read_word(%struct.r8152* %81, i16 zeroext 0, i16 zeroext -10204) #13, !dbg !13336
  %conv124 = zext i16 %call123 to i32, !dbg !13336
  store i32 %conv124, i32* %ocp_data, align 4, !dbg !13337
  %82 = load i32, i32* %ocp_data, align 4, !dbg !13338
  %and125 = and i32 %82, -63489, !dbg !13338
  store i32 %and125, i32* %ocp_data, align 4, !dbg !13338
  %83 = load i32, i32* %ocp_data, align 4, !dbg !13339
  %or126 = or i32 %83, 41216, !dbg !13339
  store i32 %or126, i32* %ocp_data, align 4, !dbg !13339
  %84 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13340
  %85 = load i32, i32* %ocp_data, align 4, !dbg !13341
  call void @ocp_write_word(%struct.r8152* %84, i16 zeroext 0, i16 zeroext -10204, i32 %85) #13, !dbg !13342
  %86 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13343
  call void @ocp_write_word(%struct.r8152* %86, i16 zeroext 0, i16 zeroext -13320, i32 1) #13, !dbg !13344
  %87 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13345
  call void @r8153_power_cut_en(%struct.r8152* %87, i1 zeroext false) #13, !dbg !13346
  %88 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13347
  call void @rtl_runtime_suspend_enable(%struct.r8152* %88, i1 zeroext false) #13, !dbg !13348
  %89 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13349
  call void @r8153_u1u2en(%struct.r8152* %89, i1 zeroext true) #13, !dbg !13350
  %90 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13351
  call void @r8153_mac_clk_spd(%struct.r8152* %90, i1 zeroext false) #13, !dbg !13352
  %91 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13353
  %udev127 = getelementptr inbounds %struct.r8152, %struct.r8152* %91, i32 0, i32 1, !dbg !13354
  %92 = load %struct.usb_device*, %struct.usb_device** %udev127, align 8, !dbg !13354
  call void @usb_enable_lpm(%struct.usb_device* %92) #13, !dbg !13355
  %93 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13356
  %call128 = call zeroext i8 @ocp_read_byte(%struct.r8152* %93, i16 zeroext 256, i16 zeroext -5878) #13, !dbg !13357
  %conv129 = zext i8 %call128 to i32, !dbg !13357
  store i32 %conv129, i32* %ocp_data, align 4, !dbg !13358
  %94 = load i32, i32* %ocp_data, align 4, !dbg !13359
  %conv130 = zext i32 %94 to i64, !dbg !13359
  %or131 = or i64 %conv130, 1, !dbg !13359
  %conv132 = trunc i64 %or131 to i32, !dbg !13359
  store i32 %conv132, i32* %ocp_data, align 4, !dbg !13359
  %95 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13360
  %96 = load i32, i32* %ocp_data, align 4, !dbg !13361
  call void @ocp_write_byte(%struct.r8152* %95, i16 zeroext 256, i16 zeroext -5878, i32 %96) #13, !dbg !13362
  %97 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13363
  %call133 = call zeroext i8 @ocp_read_byte(%struct.r8152* %97, i16 zeroext 256, i16 zeroext -8185) #13, !dbg !13364
  %conv134 = zext i8 %call133 to i32, !dbg !13364
  store i32 %conv134, i32* %ocp_data, align 4, !dbg !13365
  %98 = load i32, i32* %ocp_data, align 4, !dbg !13366
  %conv135 = zext i32 %98 to i64, !dbg !13366
  %and136 = and i64 %conv135, -129, !dbg !13366
  %conv137 = trunc i64 %and136 to i32, !dbg !13366
  store i32 %conv137, i32* %ocp_data, align 4, !dbg !13366
  %99 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13367
  %100 = load i32, i32* %ocp_data, align 4, !dbg !13368
  call void @ocp_write_byte(%struct.r8152* %99, i16 zeroext 256, i16 zeroext -8185, i32 %100) #13, !dbg !13369
  %101 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13370
  %call138 = call zeroext i16 @ocp_read_word(%struct.r8152* %101, i16 zeroext 0, i16 zeroext -11258) #13, !dbg !13371
  %conv139 = zext i16 %call138 to i32, !dbg !13371
  store i32 %conv139, i32* %ocp_data, align 4, !dbg !13372
  %102 = load i32, i32* %ocp_data, align 4, !dbg !13373
  %and140 = and i32 %102, -145, !dbg !13373
  store i32 %and140, i32* %ocp_data, align 4, !dbg !13373
  %103 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13374
  %flags141 = getelementptr inbounds %struct.r8152, %struct.r8152* %103, i32 0, i32 0, !dbg !13376
  %call142 = call zeroext i1 @test_bit(i64 8, i64* %flags141) #13, !dbg !13377
  br i1 %call142, label %if.then143, label %if.end145, !dbg !13378

if.then143:                                       ; preds = %if.end122
  %104 = load i32, i32* %ocp_data, align 4, !dbg !13379
  %or144 = or i32 %104, 16, !dbg !13379
  store i32 %or144, i32* %ocp_data, align 4, !dbg !13379
  br label %if.end145, !dbg !13380

if.end145:                                        ; preds = %if.then143, %if.end122
  %105 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13381
  %106 = load i32, i32* %ocp_data, align 4, !dbg !13382
  call void @ocp_write_word(%struct.r8152* %105, i16 zeroext 0, i16 zeroext -11258, i32 %106) #13, !dbg !13383
  %107 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13384
  call void @rtl_tally_reset(%struct.r8152* %107) #13, !dbg !13385
  %108 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13386
  %udev146 = getelementptr inbounds %struct.r8152, %struct.r8152* %108, i32 0, i32 1, !dbg !13387
  %109 = load %struct.usb_device*, %struct.usb_device** %udev146, align 8, !dbg !13387
  %speed147 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %109, i32 0, i32 4, !dbg !13388
  %110 = load i32, i32* %speed147, align 4, !dbg !13388
  switch i32 %110, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 3, label %sw.bb148
  ], !dbg !13389

sw.bb:                                            ; preds = %if.end145, %if.end145
  %111 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13390
  %coalesce = getelementptr inbounds %struct.r8152, %struct.r8152* %111, i32 0, i32 30, !dbg !13392
  store i32 85000, i32* %coalesce, align 8, !dbg !13393
  br label %sw.epilog, !dbg !13394

sw.bb148:                                         ; preds = %if.end145
  %112 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13395
  %coalesce149 = getelementptr inbounds %struct.r8152, %struct.r8152* %112, i32 0, i32 30, !dbg !13396
  store i32 250000, i32* %coalesce149, align 8, !dbg !13397
  br label %sw.epilog, !dbg !13398

sw.default:                                       ; preds = %if.end145
  %113 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13399
  %coalesce150 = getelementptr inbounds %struct.r8152, %struct.r8152* %113, i32 0, i32 30, !dbg !13400
  store i32 524280, i32* %coalesce150, align 8, !dbg !13401
  br label %sw.epilog, !dbg !13402

sw.epilog:                                        ; preds = %if.then, %sw.default, %sw.bb148, %sw.bb
  ret void, !dbg !13403
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8153_enable(%struct.r8152* %tp) #2 !dbg !13404 {
entry:
  %retval = alloca i32, align 4
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !13405, metadata !DIExpression()), !dbg !13406
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13407
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 0, !dbg !13409
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !13410
  br i1 %call, label %if.then, label %if.end, !dbg !13411

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !13412
  br label %return, !dbg !13412

if.end:                                           ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13413
  call void @set_tx_qlen(%struct.r8152* %1) #13, !dbg !13414
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13415
  call void @rtl_set_eee_plus(%struct.r8152* %2) #13, !dbg !13416
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13417
  call void @r8153_set_rx_early_timeout(%struct.r8152* %3) #13, !dbg !13418
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13419
  call void @r8153_set_rx_early_size(%struct.r8152* %4) #13, !dbg !13420
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13421
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 39, !dbg !13423
  %6 = load i8, i8* %version, align 8, !dbg !13423
  %conv = zext i8 %6 to i32, !dbg !13421
  %cmp = icmp eq i32 %conv, 9, !dbg !13424
  br i1 %cmp, label %if.then2, label %if.end9, !dbg !13425

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !13426, metadata !DIExpression()), !dbg !13428
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13429
  %call3 = call zeroext i16 @ocp_read_word(%struct.r8152* %7, i16 zeroext 0, i16 zeroext -11032) #13, !dbg !13430
  %conv4 = zext i16 %call3 to i32, !dbg !13430
  store i32 %conv4, i32* %ocp_data, align 4, !dbg !13431
  %8 = load i32, i32* %ocp_data, align 4, !dbg !13432
  %conv5 = zext i32 %8 to i64, !dbg !13432
  %and = and i64 %conv5, -3, !dbg !13432
  %conv6 = trunc i64 %and to i32, !dbg !13432
  store i32 %conv6, i32* %ocp_data, align 4, !dbg !13432
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13433
  %10 = load i32, i32* %ocp_data, align 4, !dbg !13434
  call void @ocp_write_word(%struct.r8152* %9, i16 zeroext 0, i16 zeroext -11032, i32 %10) #13, !dbg !13435
  call void @usleep_range(i64 1000, i64 2000) #13, !dbg !13436
  %11 = load i32, i32* %ocp_data, align 4, !dbg !13437
  %conv7 = zext i32 %11 to i64, !dbg !13437
  %or = or i64 %conv7, 2, !dbg !13437
  %conv8 = trunc i64 %or to i32, !dbg !13437
  store i32 %conv8, i32* %ocp_data, align 4, !dbg !13437
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13438
  %13 = load i32, i32* %ocp_data, align 4, !dbg !13439
  call void @ocp_write_word(%struct.r8152* %12, i16 zeroext 0, i16 zeroext -11032, i32 %13) #13, !dbg !13440
  br label %if.end9, !dbg !13441

if.end9:                                          ; preds = %if.then2, %if.end
  %14 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13442
  %call10 = call i32 @rtl_enable(%struct.r8152* %14) #13, !dbg !13443
  store i32 %call10, i32* %retval, align 4, !dbg !13444
  br label %return, !dbg !13444

return:                                           ; preds = %if.end9, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !13445
  ret i32 %15, !dbg !13445
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8153_disable(%struct.r8152* %tp) #2 !dbg !13446 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !13447, metadata !DIExpression()), !dbg !13448
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13449
  call void @r8153_aldps_en(%struct.r8152* %0, i1 zeroext false) #13, !dbg !13450
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13451
  call void @rtl_disable(%struct.r8152* %1) #13, !dbg !13452
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13453
  call void @rtl_reset_bmu(%struct.r8152* %2) #13, !dbg !13454
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13455
  call void @r8153_aldps_en(%struct.r8152* %3, i1 zeroext true) #13, !dbg !13456
  ret void, !dbg !13457
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8153_up(%struct.r8152* %tp) #2 !dbg !13458 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !13459, metadata !DIExpression()), !dbg !13460
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !13461, metadata !DIExpression()), !dbg !13462
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13463
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 0, !dbg !13465
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !13466
  br i1 %call, label %if.then, label %if.end, !dbg !13467

if.then:                                          ; preds = %entry
  br label %return, !dbg !13468

if.end:                                           ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13469
  call void @r8153_u1u2en(%struct.r8152* %1, i1 zeroext false) #13, !dbg !13470
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13471
  call void @r8153_u2p3en(%struct.r8152* %2, i1 zeroext false) #13, !dbg !13472
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13473
  call void @r8153_aldps_en(%struct.r8152* %3, i1 zeroext false) #13, !dbg !13474
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13475
  call void @r8153_first_init(%struct.r8152* %4) #13, !dbg !13476
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13477
  %call1 = call zeroext i8 @ocp_read_byte(%struct.r8152* %5, i16 zeroext 256, i16 zeroext -5878) #13, !dbg !13478
  %conv = zext i8 %call1 to i32, !dbg !13478
  store i32 %conv, i32* %ocp_data, align 4, !dbg !13479
  %6 = load i32, i32* %ocp_data, align 4, !dbg !13480
  %conv2 = zext i32 %6 to i64, !dbg !13480
  %or = or i64 %conv2, 1, !dbg !13480
  %conv3 = trunc i64 %or to i32, !dbg !13480
  store i32 %conv3, i32* %ocp_data, align 4, !dbg !13480
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13481
  %8 = load i32, i32* %ocp_data, align 4, !dbg !13482
  call void @ocp_write_byte(%struct.r8152* %7, i16 zeroext 256, i16 zeroext -5878, i32 %8) #13, !dbg !13483
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13484
  %call4 = call zeroext i8 @ocp_read_byte(%struct.r8152* %9, i16 zeroext 256, i16 zeroext -8185) #13, !dbg !13485
  %conv5 = zext i8 %call4 to i32, !dbg !13485
  store i32 %conv5, i32* %ocp_data, align 4, !dbg !13486
  %10 = load i32, i32* %ocp_data, align 4, !dbg !13487
  %conv6 = zext i32 %10 to i64, !dbg !13487
  %and = and i64 %conv6, -129, !dbg !13487
  %conv7 = trunc i64 %and to i32, !dbg !13487
  store i32 %conv7, i32* %ocp_data, align 4, !dbg !13487
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13488
  %12 = load i32, i32* %ocp_data, align 4, !dbg !13489
  call void @ocp_write_byte(%struct.r8152* %11, i16 zeroext 256, i16 zeroext -8185, i32 %12) #13, !dbg !13490
  %13 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13491
  %call8 = call zeroext i16 @ocp_read_word(%struct.r8152* %13, i16 zeroext 0, i16 zeroext -19418) #13, !dbg !13492
  %conv9 = zext i16 %call8 to i32, !dbg !13492
  store i32 %conv9, i32* %ocp_data, align 4, !dbg !13493
  %14 = load i32, i32* %ocp_data, align 4, !dbg !13494
  %conv10 = zext i32 %14 to i64, !dbg !13494
  %and11 = and i64 %conv10, -3, !dbg !13494
  %conv12 = trunc i64 %and11 to i32, !dbg !13494
  store i32 %conv12, i32* %ocp_data, align 4, !dbg !13494
  %15 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13495
  %16 = load i32, i32* %ocp_data, align 4, !dbg !13496
  call void @ocp_write_word(%struct.r8152* %15, i16 zeroext 0, i16 zeroext -19418, i32 %16) #13, !dbg !13497
  %17 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13498
  call void @r8153_aldps_en(%struct.r8152* %17, i1 zeroext true) #13, !dbg !13499
  %18 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13500
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %18, i32 0, i32 39, !dbg !13501
  %19 = load i8, i8* %version, align 8, !dbg !13501
  %conv13 = zext i8 %19 to i32, !dbg !13500
  switch i32 %conv13, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb14
    i32 6, label %sw.bb14
  ], !dbg !13502

sw.bb:                                            ; preds = %if.end, %if.end
  br label %sw.epilog, !dbg !13503

sw.bb14:                                          ; preds = %if.end, %if.end
  br label %sw.default, !dbg !13503

sw.default:                                       ; preds = %if.end, %sw.bb14
  %20 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13505
  call void @r8153_u2p3en(%struct.r8152* %20, i1 zeroext true) #13, !dbg !13506
  br label %sw.epilog, !dbg !13507

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %21 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13508
  call void @r8153_u1u2en(%struct.r8152* %21, i1 zeroext true) #13, !dbg !13509
  br label %return, !dbg !13510

return:                                           ; preds = %sw.epilog, %if.then
  ret void, !dbg !13510
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8153_down(%struct.r8152* %tp) #2 !dbg !13511 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !13512, metadata !DIExpression()), !dbg !13513
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !13514, metadata !DIExpression()), !dbg !13515
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13516
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 0, !dbg !13518
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !13519
  br i1 %call, label %if.then, label %if.end, !dbg !13520

if.then:                                          ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13521
  call void @rtl_drop_queued_tx(%struct.r8152* %1) #13, !dbg !13523
  br label %return, !dbg !13524

if.end:                                           ; preds = %entry
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13525
  %call1 = call zeroext i8 @ocp_read_byte(%struct.r8152* %2, i16 zeroext 256, i16 zeroext -5878) #13, !dbg !13526
  %conv = zext i8 %call1 to i32, !dbg !13526
  store i32 %conv, i32* %ocp_data, align 4, !dbg !13527
  %3 = load i32, i32* %ocp_data, align 4, !dbg !13528
  %conv2 = zext i32 %3 to i64, !dbg !13528
  %and = and i64 %conv2, -2, !dbg !13528
  %conv3 = trunc i64 %and to i32, !dbg !13528
  store i32 %conv3, i32* %ocp_data, align 4, !dbg !13528
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13529
  %5 = load i32, i32* %ocp_data, align 4, !dbg !13530
  call void @ocp_write_byte(%struct.r8152* %4, i16 zeroext 256, i16 zeroext -5878, i32 %5) #13, !dbg !13531
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13532
  call void @r8153_u1u2en(%struct.r8152* %6, i1 zeroext false) #13, !dbg !13533
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13534
  call void @r8153_u2p3en(%struct.r8152* %7, i1 zeroext false) #13, !dbg !13535
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13536
  call void @r8153_power_cut_en(%struct.r8152* %8, i1 zeroext false) #13, !dbg !13537
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13538
  call void @r8153_aldps_en(%struct.r8152* %9, i1 zeroext false) #13, !dbg !13539
  %10 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13540
  call void @r8153_enter_oob(%struct.r8152* %10) #13, !dbg !13541
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13542
  call void @r8153_aldps_en(%struct.r8152* %11, i1 zeroext true) #13, !dbg !13543
  br label %return, !dbg !13544

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13544
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8153_unload(%struct.r8152* %tp) #2 !dbg !13545 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !13546, metadata !DIExpression()), !dbg !13547
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13548
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 0, !dbg !13550
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !13551
  br i1 %call, label %if.then, label %if.end, !dbg !13552

if.then:                                          ; preds = %entry
  br label %return, !dbg !13553

if.end:                                           ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13554
  call void @r8153_power_cut_en(%struct.r8152* %1, i1 zeroext false) #13, !dbg !13555
  br label %return, !dbg !13556

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13556
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @r8153_get_eee(%struct.r8152* %tp, %struct.ethtool_eee* %eee) #2 !dbg !13557 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %eee.addr = alloca %struct.ethtool_eee*, align 8
  %lp = alloca i32, align 4
  %adv = alloca i32, align 4
  %supported = alloca i32, align 4
  %val = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !13558, metadata !DIExpression()), !dbg !13559
  store %struct.ethtool_eee* %eee, %struct.ethtool_eee** %eee.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_eee** %eee.addr, metadata !13560, metadata !DIExpression()), !dbg !13561
  call void @llvm.dbg.declare(metadata i32* %lp, metadata !13562, metadata !DIExpression()), !dbg !13563
  call void @llvm.dbg.declare(metadata i32* %adv, metadata !13564, metadata !DIExpression()), !dbg !13565
  call void @llvm.dbg.declare(metadata i32* %supported, metadata !13566, metadata !DIExpression()), !dbg !13567
  store i32 0, i32* %supported, align 4, !dbg !13567
  call void @llvm.dbg.declare(metadata i16* %val, metadata !13568, metadata !DIExpression()), !dbg !13569
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13570
  %call = call zeroext i16 @ocp_reg_read(%struct.r8152* %0, i16 zeroext -23100) #13, !dbg !13571
  store i16 %call, i16* %val, align 2, !dbg !13572
  %1 = load i16, i16* %val, align 2, !dbg !13573
  %call1 = call i32 @mmd_eee_cap_to_ethtool_sup_t(i16 zeroext %1) #13, !dbg !13574
  store i32 %call1, i32* %supported, align 4, !dbg !13575
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13576
  %call2 = call zeroext i16 @ocp_reg_read(%struct.r8152* %2, i16 zeroext -23088) #13, !dbg !13577
  store i16 %call2, i16* %val, align 2, !dbg !13578
  %3 = load i16, i16* %val, align 2, !dbg !13579
  %call3 = call i32 @mmd_eee_adv_to_ethtool_adv_t(i16 zeroext %3) #13, !dbg !13580
  store i32 %call3, i32* %adv, align 4, !dbg !13581
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13582
  %call4 = call zeroext i16 @ocp_reg_read(%struct.r8152* %4, i16 zeroext -23086) #13, !dbg !13583
  store i16 %call4, i16* %val, align 2, !dbg !13584
  %5 = load i16, i16* %val, align 2, !dbg !13585
  %call5 = call i32 @mmd_eee_adv_to_ethtool_adv_t(i16 zeroext %5) #13, !dbg !13586
  store i32 %call5, i32* %lp, align 4, !dbg !13587
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13588
  %eee_en = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 25, !dbg !13589
  %7 = load i8, i8* %eee_en, align 4, !dbg !13589
  %tobool = trunc i8 %7 to i1, !dbg !13589
  %conv = zext i1 %tobool to i32, !dbg !13588
  %8 = load %struct.ethtool_eee*, %struct.ethtool_eee** %eee.addr, align 8, !dbg !13590
  %eee_enabled = getelementptr inbounds %struct.ethtool_eee, %struct.ethtool_eee* %8, i32 0, i32 5, !dbg !13591
  store i32 %conv, i32* %eee_enabled, align 4, !dbg !13592
  %9 = load i32, i32* %supported, align 4, !dbg !13593
  %10 = load i32, i32* %adv, align 4, !dbg !13594
  %and = and i32 %9, %10, !dbg !13595
  %11 = load i32, i32* %lp, align 4, !dbg !13596
  %and6 = and i32 %and, %11, !dbg !13597
  %tobool7 = icmp ne i32 %and6, 0, !dbg !13598
  %lnot = xor i1 %tobool7, true, !dbg !13598
  %lnot8 = xor i1 %lnot, true, !dbg !13599
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !13599
  %12 = load %struct.ethtool_eee*, %struct.ethtool_eee** %eee.addr, align 8, !dbg !13600
  %eee_active = getelementptr inbounds %struct.ethtool_eee, %struct.ethtool_eee* %12, i32 0, i32 4, !dbg !13601
  store i32 %lnot.ext, i32* %eee_active, align 4, !dbg !13602
  %13 = load i32, i32* %supported, align 4, !dbg !13603
  %14 = load %struct.ethtool_eee*, %struct.ethtool_eee** %eee.addr, align 8, !dbg !13604
  %supported9 = getelementptr inbounds %struct.ethtool_eee, %struct.ethtool_eee* %14, i32 0, i32 1, !dbg !13605
  store i32 %13, i32* %supported9, align 4, !dbg !13606
  %15 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13607
  %eee_adv = getelementptr inbounds %struct.r8152, %struct.r8152* %15, i32 0, i32 37, !dbg !13608
  %16 = load i16, i16* %eee_adv, align 8, !dbg !13608
  %conv10 = zext i16 %16 to i32, !dbg !13607
  %17 = load %struct.ethtool_eee*, %struct.ethtool_eee** %eee.addr, align 8, !dbg !13609
  %advertised = getelementptr inbounds %struct.ethtool_eee, %struct.ethtool_eee* %17, i32 0, i32 2, !dbg !13610
  store i32 %conv10, i32* %advertised, align 4, !dbg !13611
  %18 = load i32, i32* %lp, align 4, !dbg !13612
  %19 = load %struct.ethtool_eee*, %struct.ethtool_eee** %eee.addr, align 8, !dbg !13613
  %lp_advertised = getelementptr inbounds %struct.ethtool_eee, %struct.ethtool_eee* %19, i32 0, i32 3, !dbg !13614
  store i32 %18, i32* %lp_advertised, align 4, !dbg !13615
  ret i32 0, !dbg !13616
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @rtl8153_in_nway(%struct.r8152* %tp) #2 !dbg !13617 {
entry:
  %retval = alloca i1, align 1
  %tp.addr = alloca %struct.r8152*, align 8
  %phy_state = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !13618, metadata !DIExpression()), !dbg !13619
  call void @llvm.dbg.declare(metadata i16* %phy_state, metadata !13620, metadata !DIExpression()), !dbg !13621
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13622
  %call = call zeroext i16 @ocp_reg_read(%struct.r8152* %0, i16 zeroext -22776) #13, !dbg !13623
  %conv = zext i16 %call to i32, !dbg !13623
  %and = and i32 %conv, 255, !dbg !13624
  %conv1 = trunc i32 %and to i16, !dbg !13623
  store i16 %conv1, i16* %phy_state, align 2, !dbg !13621
  %1 = load i16, i16* %phy_state, align 2, !dbg !13625
  %conv2 = zext i16 %1 to i32, !dbg !13625
  %cmp = icmp eq i32 %conv2, 1, !dbg !13627
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13628

lor.lhs.false:                                    ; preds = %entry
  %2 = load i16, i16* %phy_state, align 2, !dbg !13629
  %conv4 = zext i16 %2 to i32, !dbg !13629
  %cmp5 = icmp eq i32 %conv4, 2, !dbg !13630
  br i1 %cmp5, label %if.then, label %if.else, !dbg !13631

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !13632
  br label %return, !dbg !13632

if.else:                                          ; preds = %lor.lhs.false
  store i1 true, i1* %retval, align 1, !dbg !13633
  br label %return, !dbg !13633

return:                                           ; preds = %if.else, %if.then
  %3 = load i1, i1* %retval, align 1, !dbg !13634
  ret i1 %3, !dbg !13634
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153_hw_phy_cfg(%struct.r8152* %tp) #2 !dbg !13635 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  %data = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !13636, metadata !DIExpression()), !dbg !13637
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !13638, metadata !DIExpression()), !dbg !13639
  call void @llvm.dbg.declare(metadata i16* %data, metadata !13640, metadata !DIExpression()), !dbg !13641
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13642
  call void @r8153_aldps_en(%struct.r8152* %0, i1 zeroext false) #13, !dbg !13643
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13644
  call void @rtl_eee_enable(%struct.r8152* %1, i1 zeroext false) #13, !dbg !13645
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13646
  call void @rtl8152_apply_firmware(%struct.r8152* %2) #13, !dbg !13647
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13648
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %3, i32 0, i32 39, !dbg !13650
  %4 = load i8, i8* %version, align 8, !dbg !13650
  %conv = zext i8 %4 to i32, !dbg !13648
  %cmp = icmp eq i32 %conv, 3, !dbg !13651
  br i1 %cmp, label %if.then, label %if.end, !dbg !13652

if.then:                                          ; preds = %entry
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13653
  %call = call zeroext i16 @ocp_reg_read(%struct.r8152* %5, i16 zeroext -23502) #13, !dbg !13655
  store i16 %call, i16* %data, align 2, !dbg !13656
  %6 = load i16, i16* %data, align 2, !dbg !13657
  %conv2 = zext i16 %6 to i32, !dbg !13657
  %and = and i32 %conv2, -65, !dbg !13657
  %conv3 = trunc i32 %and to i16, !dbg !13657
  store i16 %conv3, i16* %data, align 2, !dbg !13657
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13658
  %8 = load i16, i16* %data, align 2, !dbg !13659
  call void @ocp_reg_write(%struct.r8152* %7, i16 zeroext -23502, i16 zeroext %8) #13, !dbg !13660
  br label %if.end, !dbg !13661

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13662
  %call4 = call zeroext i16 @ocp_reg_read(%struct.r8152* %9, i16 zeroext -23504) #13, !dbg !13663
  store i16 %call4, i16* %data, align 2, !dbg !13664
  %10 = load i16, i16* %data, align 2, !dbg !13665
  %conv5 = zext i16 %10 to i32, !dbg !13665
  %or = or i32 %conv5, 32768, !dbg !13665
  %conv6 = trunc i32 %or to i16, !dbg !13665
  store i16 %conv6, i16* %data, align 2, !dbg !13665
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13666
  %12 = load i16, i16* %data, align 2, !dbg !13667
  call void @ocp_reg_write(%struct.r8152* %11, i16 zeroext -23504, i16 zeroext %12) #13, !dbg !13668
  %13 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13669
  %call7 = call zeroext i16 @ocp_reg_read(%struct.r8152* %13, i16 zeroext -23486) #13, !dbg !13670
  store i16 %call7, i16* %data, align 2, !dbg !13671
  %14 = load i16, i16* %data, align 2, !dbg !13672
  %conv8 = zext i16 %14 to i32, !dbg !13672
  %or9 = or i32 %conv8, 128, !dbg !13672
  %conv10 = trunc i32 %or9 to i16, !dbg !13672
  store i16 %conv10, i16* %data, align 2, !dbg !13672
  %15 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13673
  %16 = load i16, i16* %data, align 2, !dbg !13674
  call void @ocp_reg_write(%struct.r8152* %15, i16 zeroext -23486, i16 zeroext %16) #13, !dbg !13675
  %17 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13676
  %call11 = call zeroext i16 @ocp_reg_read(%struct.r8152* %17, i16 zeroext -23504) #13, !dbg !13677
  store i16 %call11, i16* %data, align 2, !dbg !13678
  %18 = load i16, i16* %data, align 2, !dbg !13679
  %conv12 = zext i16 %18 to i32, !dbg !13679
  %or13 = or i32 %conv12, 1, !dbg !13679
  %conv14 = trunc i32 %or13 to i16, !dbg !13679
  store i16 %conv14, i16* %data, align 2, !dbg !13679
  %19 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13680
  %20 = load i16, i16* %data, align 2, !dbg !13681
  call void @ocp_reg_write(%struct.r8152* %19, i16 zeroext -23504, i16 zeroext %20) #13, !dbg !13682
  %21 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13683
  call void @sram_write(%struct.r8152* %21, i16 zeroext -32636, i16 zeroext 2835) #13, !dbg !13684
  %22 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13685
  %call15 = call zeroext i16 @ocp_read_word(%struct.r8152* %22, i16 zeroext 256, i16 zeroext -6068) #13, !dbg !13686
  %conv16 = zext i16 %call15 to i32, !dbg !13686
  store i32 %conv16, i32* %ocp_data, align 4, !dbg !13687
  %23 = load i32, i32* %ocp_data, align 4, !dbg !13688
  %or17 = or i32 %23, 64, !dbg !13688
  store i32 %or17, i32* %ocp_data, align 4, !dbg !13688
  %24 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13689
  %25 = load i32, i32* %ocp_data, align 4, !dbg !13690
  call void @ocp_write_word(%struct.r8152* %24, i16 zeroext 256, i16 zeroext -6068, i32 %25) #13, !dbg !13691
  %26 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13692
  call void @sram_write(%struct.r8152* %26, i16 zeroext -32750, i16 zeroext -2289) #13, !dbg !13693
  %27 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13694
  call void @sram_write(%struct.r8152* %27, i16 zeroext -32640, i16 zeroext 175) #13, !dbg !13695
  %28 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13696
  call void @sram_write(%struct.r8152* %28, i16 zeroext -32638, i16 zeroext 520) #13, !dbg !13697
  %29 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13698
  %eee_en = getelementptr inbounds %struct.r8152, %struct.r8152* %29, i32 0, i32 25, !dbg !13700
  %30 = load i8, i8* %eee_en, align 4, !dbg !13700
  %tobool = trunc i8 %30 to i1, !dbg !13700
  br i1 %tobool, label %if.then18, label %if.end19, !dbg !13701

if.then18:                                        ; preds = %if.end
  %31 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13702
  call void @rtl_eee_enable(%struct.r8152* %31, i1 zeroext true) #13, !dbg !13703
  br label %if.end19, !dbg !13703

if.end19:                                         ; preds = %if.then18, %if.end
  %32 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13704
  call void @r8153_aldps_en(%struct.r8152* %32, i1 zeroext true) #13, !dbg !13705
  %33 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13706
  call void @r8152b_enable_fc(%struct.r8152* %33) #13, !dbg !13707
  %34 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13708
  %version20 = getelementptr inbounds %struct.r8152, %struct.r8152* %34, i32 0, i32 39, !dbg !13709
  %35 = load i8, i8* %version20, align 8, !dbg !13709
  %conv21 = zext i8 %35 to i32, !dbg !13708
  switch i32 %conv21, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb22
    i32 6, label %sw.bb22
  ], !dbg !13710

sw.bb:                                            ; preds = %if.end19, %if.end19
  br label %sw.epilog, !dbg !13711

sw.bb22:                                          ; preds = %if.end19, %if.end19
  br label %sw.default, !dbg !13711

sw.default:                                       ; preds = %if.end19, %sw.bb22
  %36 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13713
  call void @r8153_u2p3en(%struct.r8152* %36, i1 zeroext true) #13, !dbg !13714
  br label %sw.epilog, !dbg !13715

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %37 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13716
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %37, i32 0, i32 0, !dbg !13717
  call void @set_bit(i64 5, i64* %flags) #13, !dbg !13718
  ret void, !dbg !13719
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8153_runtime_enable(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !13720 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !13721, metadata !DIExpression()), !dbg !13722
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !13723, metadata !DIExpression()), !dbg !13724
  %0 = load i8, i8* %enable.addr, align 1, !dbg !13725
  %tobool = trunc i8 %0 to i1, !dbg !13725
  br i1 %tobool, label %if.then, label %if.else, !dbg !13727

if.then:                                          ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13728
  call void @r8153_u1u2en(%struct.r8152* %1, i1 zeroext false) #13, !dbg !13730
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13731
  call void @r8153_u2p3en(%struct.r8152* %2, i1 zeroext false) #13, !dbg !13732
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13733
  call void @r8153_mac_clk_spd(%struct.r8152* %3, i1 zeroext true) #13, !dbg !13734
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13735
  call void @rtl_runtime_suspend_enable(%struct.r8152* %4, i1 zeroext true) #13, !dbg !13736
  br label %if.end, !dbg !13737

if.else:                                          ; preds = %entry
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13738
  call void @rtl_runtime_suspend_enable(%struct.r8152* %5, i1 zeroext false) #13, !dbg !13740
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13741
  call void @r8153_mac_clk_spd(%struct.r8152* %6, i1 zeroext false) #13, !dbg !13742
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13743
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 39, !dbg !13744
  %8 = load i8, i8* %version, align 8, !dbg !13744
  %conv = zext i8 %8 to i32, !dbg !13743
  switch i32 %conv, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb1
    i32 6, label %sw.bb1
  ], !dbg !13745

sw.bb:                                            ; preds = %if.else, %if.else
  br label %sw.epilog, !dbg !13746

sw.bb1:                                           ; preds = %if.else, %if.else
  br label %sw.default, !dbg !13746

sw.default:                                       ; preds = %if.else, %sw.bb1
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13748
  call void @r8153_u2p3en(%struct.r8152* %9, i1 zeroext true) #13, !dbg !13749
  br label %sw.epilog, !dbg !13750

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %10 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13751
  call void @r8153_u1u2en(%struct.r8152* %10, i1 zeroext true) #13, !dbg !13752
  br label %if.end

if.end:                                           ; preds = %sw.epilog, %if.then
  ret void, !dbg !13753
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153b_init(%struct.r8152* %tp) #2 !dbg !13754 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  %data = alloca i16, align 2
  %i = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !13755, metadata !DIExpression()), !dbg !13756
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !13757, metadata !DIExpression()), !dbg !13758
  call void @llvm.dbg.declare(metadata i16* %data, metadata !13759, metadata !DIExpression()), !dbg !13760
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13761, metadata !DIExpression()), !dbg !13762
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13763
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 0, !dbg !13765
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !13766
  br i1 %call, label %if.then, label %if.end, !dbg !13767

if.then:                                          ; preds = %entry
  br label %return, !dbg !13768

if.end:                                           ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13769
  call void @r8153b_u1u2en(%struct.r8152* %1, i1 zeroext false) #13, !dbg !13770
  store i32 0, i32* %i, align 4, !dbg !13771
  br label %for.cond, !dbg !13773

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !13774
  %cmp = icmp slt i32 %2, 500, !dbg !13776
  br i1 %cmp, label %for.body, label %for.end, !dbg !13777

for.body:                                         ; preds = %for.cond
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13778
  %call1 = call zeroext i16 @ocp_read_word(%struct.r8152* %3, i16 zeroext 256, i16 zeroext -8188) #13, !dbg !13781
  %conv = zext i16 %call1 to i32, !dbg !13781
  %and = and i32 %conv, 2, !dbg !13782
  %tobool = icmp ne i32 %and, 0, !dbg !13782
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !13783

if.then2:                                         ; preds = %for.body
  br label %for.end, !dbg !13784

if.end3:                                          ; preds = %for.body
  call void @msleep(i32 20) #13, !dbg !13785
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13786
  %flags4 = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 0, !dbg !13788
  %call5 = call zeroext i1 @test_bit(i64 0, i64* %flags4) #13, !dbg !13789
  br i1 %call5, label %if.then6, label %if.end7, !dbg !13790

if.then6:                                         ; preds = %if.end3
  br label %for.end, !dbg !13791

if.end7:                                          ; preds = %if.end3
  br label %for.inc, !dbg !13792

for.inc:                                          ; preds = %if.end7
  %5 = load i32, i32* %i, align 4, !dbg !13793
  %inc = add i32 %5, 1, !dbg !13793
  store i32 %inc, i32* %i, align 4, !dbg !13793
  br label %for.cond, !dbg !13794, !llvm.loop !13795

for.end:                                          ; preds = %if.then6, %if.then2, %for.cond
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13797
  %call8 = call zeroext i16 @r8153_phy_status(%struct.r8152* %6, i16 zeroext 0) #13, !dbg !13798
  store i16 %call8, i16* %data, align 2, !dbg !13799
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13800
  %call9 = call i32 @r8152_mdio_read(%struct.r8152* %7, i32 0) #13, !dbg !13801
  %conv10 = trunc i32 %call9 to i16, !dbg !13801
  store i16 %conv10, i16* %data, align 2, !dbg !13802
  %8 = load i16, i16* %data, align 2, !dbg !13803
  %conv11 = zext i16 %8 to i32, !dbg !13803
  %and12 = and i32 %conv11, 2048, !dbg !13805
  %tobool13 = icmp ne i32 %and12, 0, !dbg !13805
  br i1 %tobool13, label %if.then14, label %if.end19, !dbg !13806

if.then14:                                        ; preds = %for.end
  %9 = load i16, i16* %data, align 2, !dbg !13807
  %conv15 = zext i16 %9 to i32, !dbg !13807
  %and16 = and i32 %conv15, -2049, !dbg !13807
  %conv17 = trunc i32 %and16 to i16, !dbg !13807
  store i16 %conv17, i16* %data, align 2, !dbg !13807
  %10 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13809
  %11 = load i16, i16* %data, align 2, !dbg !13810
  %conv18 = zext i16 %11 to i32, !dbg !13810
  call void @r8152_mdio_write(%struct.r8152* %10, i32 0, i32 %conv18) #13, !dbg !13811
  br label %if.end19, !dbg !13812

if.end19:                                         ; preds = %if.then14, %for.end
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13813
  %call20 = call zeroext i16 @r8153_phy_status(%struct.r8152* %12, i16 zeroext 3) #13, !dbg !13814
  store i16 %call20, i16* %data, align 2, !dbg !13815
  %13 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13816
  call void @r8153_u2p3en(%struct.r8152* %13, i1 zeroext false) #13, !dbg !13817
  %14 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13818
  call void @ocp_write_word(%struct.r8152* %14, i16 zeroext 0, i16 zeroext -13316, i32 4095) #13, !dbg !13819
  %15 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13820
  call void @ocp_write_word(%struct.r8152* %15, i16 zeroext 0, i16 zeroext -11046, i32 500) #13, !dbg !13821
  %16 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13822
  call void @r8153b_power_cut_en(%struct.r8152* %16, i1 zeroext false) #13, !dbg !13823
  %17 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13824
  call void @r8153b_ups_en(%struct.r8152* %17, i1 zeroext false) #13, !dbg !13825
  %18 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13826
  call void @r8153_queue_wake(%struct.r8152* %18, i1 zeroext false) #13, !dbg !13827
  %19 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13828
  call void @rtl_runtime_suspend_enable(%struct.r8152* %19, i1 zeroext false) #13, !dbg !13829
  %20 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13830
  %call21 = call zeroext i16 @ocp_read_word(%struct.r8152* %20, i16 zeroext 256, i16 zeroext -11368) #13, !dbg !13831
  %conv22 = zext i16 %call21 to i32, !dbg !13831
  store i32 %conv22, i32* %ocp_data, align 4, !dbg !13832
  %21 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13833
  %call23 = call zeroext i8 @rtl8152_get_speed(%struct.r8152* %21) #13, !dbg !13835
  %conv24 = zext i8 %call23 to i32, !dbg !13835
  %and25 = and i32 %conv24, 2, !dbg !13836
  %tobool26 = icmp ne i32 %and25, 0, !dbg !13836
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !13837

if.then27:                                        ; preds = %if.end19
  %22 = load i32, i32* %ocp_data, align 4, !dbg !13838
  %conv28 = zext i32 %22 to i64, !dbg !13838
  %or = or i64 %conv28, 32768, !dbg !13838
  %conv29 = trunc i64 %or to i32, !dbg !13838
  store i32 %conv29, i32* %ocp_data, align 4, !dbg !13838
  br label %if.end33, !dbg !13839

if.else:                                          ; preds = %if.end19
  %23 = load i32, i32* %ocp_data, align 4, !dbg !13840
  %conv30 = zext i32 %23 to i64, !dbg !13840
  %and31 = and i64 %conv30, -32769, !dbg !13840
  %conv32 = trunc i64 %and31 to i32, !dbg !13840
  store i32 %conv32, i32* %ocp_data, align 4, !dbg !13840
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then27
  %24 = load i32, i32* %ocp_data, align 4, !dbg !13841
  %conv34 = zext i32 %24 to i64, !dbg !13841
  %or35 = or i64 %conv34, 1, !dbg !13841
  %conv36 = trunc i64 %or35 to i32, !dbg !13841
  store i32 %conv36, i32* %ocp_data, align 4, !dbg !13841
  %25 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13842
  %26 = load i32, i32* %ocp_data, align 4, !dbg !13843
  call void @ocp_write_word(%struct.r8152* %25, i16 zeroext 256, i16 zeroext -11368, i32 %26) #13, !dbg !13844
  %27 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13845
  %udev = getelementptr inbounds %struct.r8152, %struct.r8152* %27, i32 0, i32 1, !dbg !13847
  %28 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !13847
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %28, i32 0, i32 4, !dbg !13848
  %29 = load i32, i32* %speed, align 4, !dbg !13848
  %cmp37 = icmp ne i32 %29, 3, !dbg !13849
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !13850

if.then39:                                        ; preds = %if.end33
  %30 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13851
  call void @r8153b_u1u2en(%struct.r8152* %30, i1 zeroext true) #13, !dbg !13852
  br label %if.end40, !dbg !13852

if.end40:                                         ; preds = %if.then39, %if.end33
  %31 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13853
  %udev41 = getelementptr inbounds %struct.r8152, %struct.r8152* %31, i32 0, i32 1, !dbg !13854
  %32 = load %struct.usb_device*, %struct.usb_device** %udev41, align 8, !dbg !13854
  call void @usb_enable_lpm(%struct.usb_device* %32) #13, !dbg !13855
  %33 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13856
  %call42 = call zeroext i16 @ocp_read_word(%struct.r8152* %33, i16 zeroext 256, i16 zeroext -7990) #13, !dbg !13857
  %conv43 = zext i16 %call42 to i32, !dbg !13857
  store i32 %conv43, i32* %ocp_data, align 4, !dbg !13858
  %34 = load i32, i32* %ocp_data, align 4, !dbg !13859
  %conv44 = zext i32 %34 to i64, !dbg !13859
  %or45 = or i64 %conv44, 32768, !dbg !13859
  %conv46 = trunc i64 %or45 to i32, !dbg !13859
  store i32 %conv46, i32* %ocp_data, align 4, !dbg !13859
  %35 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13860
  %36 = load i32, i32* %ocp_data, align 4, !dbg !13861
  call void @ocp_write_word(%struct.r8152* %35, i16 zeroext 256, i16 zeroext -7990, i32 %36) #13, !dbg !13862
  %37 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13863
  %call47 = call zeroext i16 @ocp_read_word(%struct.r8152* %37, i16 zeroext 256, i16 zeroext -7988) #13, !dbg !13864
  %conv48 = zext i16 %call47 to i32, !dbg !13864
  store i32 %conv48, i32* %ocp_data, align 4, !dbg !13865
  %38 = load i32, i32* %ocp_data, align 4, !dbg !13866
  %conv49 = zext i32 %38 to i64, !dbg !13866
  %and50 = and i64 %conv49, -16385, !dbg !13866
  %conv51 = trunc i64 %and50 to i32, !dbg !13866
  store i32 %conv51, i32* %ocp_data, align 4, !dbg !13866
  %39 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13867
  %40 = load i32, i32* %ocp_data, align 4, !dbg !13868
  call void @ocp_write_word(%struct.r8152* %39, i16 zeroext 256, i16 zeroext -7988, i32 %40) #13, !dbg !13869
  %41 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13870
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %41, i32 0, i32 39, !dbg !13872
  %42 = load i8, i8* %version, align 8, !dbg !13872
  %conv52 = zext i8 %42 to i32, !dbg !13870
  %cmp53 = icmp eq i32 %conv52, 9, !dbg !13873
  br i1 %cmp53, label %if.then55, label %if.end67, !dbg !13874

if.then55:                                        ; preds = %if.end40
  %43 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13875
  %call56 = call zeroext i8 @ocp_read_byte(%struct.r8152* %43, i16 zeroext 256, i16 zeroext -9216) #13, !dbg !13878
  %conv57 = zext i8 %call56 to i64, !dbg !13878
  %and58 = and i64 %conv57, 32, !dbg !13879
  %tobool59 = icmp ne i64 %and58, 0, !dbg !13879
  br i1 %tobool59, label %if.then60, label %if.end66, !dbg !13880

if.then60:                                        ; preds = %if.then55
  %44 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13881
  %call61 = call zeroext i16 @ocp_read_word(%struct.r8152* %44, i16 zeroext 256, i16 zeroext -6068) #13, !dbg !13883
  %conv62 = zext i16 %call61 to i32, !dbg !13883
  store i32 %conv62, i32* %ocp_data, align 4, !dbg !13884
  %45 = load i32, i32* %ocp_data, align 4, !dbg !13885
  %conv63 = zext i32 %45 to i64, !dbg !13885
  %or64 = or i64 %conv63, 16, !dbg !13885
  %conv65 = trunc i64 %or64 to i32, !dbg !13885
  store i32 %conv65, i32* %ocp_data, align 4, !dbg !13885
  %46 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13886
  %47 = load i32, i32* %ocp_data, align 4, !dbg !13887
  call void @ocp_write_word(%struct.r8152* %46, i16 zeroext 256, i16 zeroext -6068, i32 %47) #13, !dbg !13888
  br label %if.end66, !dbg !13889

if.end66:                                         ; preds = %if.then60, %if.then55
  br label %if.end67, !dbg !13890

if.end67:                                         ; preds = %if.end66, %if.end40
  %48 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13891
  %flags68 = getelementptr inbounds %struct.r8152, %struct.r8152* %48, i32 0, i32 0, !dbg !13892
  call void @set_bit(i64 7, i64* %flags68) #13, !dbg !13893
  %49 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13894
  %call69 = call zeroext i16 @ocp_read_word(%struct.r8152* %49, i16 zeroext 0, i16 zeroext -11258) #13, !dbg !13895
  %conv70 = zext i16 %call69 to i32, !dbg !13895
  store i32 %conv70, i32* %ocp_data, align 4, !dbg !13896
  %50 = load i32, i32* %ocp_data, align 4, !dbg !13897
  %and71 = and i32 %50, -145, !dbg !13897
  store i32 %and71, i32* %ocp_data, align 4, !dbg !13897
  %51 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13898
  %52 = load i32, i32* %ocp_data, align 4, !dbg !13899
  call void @ocp_write_word(%struct.r8152* %51, i16 zeroext 0, i16 zeroext -11258, i32 %52) #13, !dbg !13900
  %53 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13901
  call void @rtl_tally_reset(%struct.r8152* %53) #13, !dbg !13902
  %54 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13903
  %coalesce = getelementptr inbounds %struct.r8152, %struct.r8152* %54, i32 0, i32 30, !dbg !13904
  store i32 15000, i32* %coalesce, align 8, !dbg !13905
  br label %return, !dbg !13906

return:                                           ; preds = %if.end67, %if.then
  ret void, !dbg !13906
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8153b_up(%struct.r8152* %tp) #2 !dbg !13907 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !13908, metadata !DIExpression()), !dbg !13909
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !13910, metadata !DIExpression()), !dbg !13911
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13912
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 0, !dbg !13914
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !13915
  br i1 %call, label %if.then, label %if.end, !dbg !13916

if.then:                                          ; preds = %entry
  br label %if.end6, !dbg !13917

if.end:                                           ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13918
  call void @r8153b_u1u2en(%struct.r8152* %1, i1 zeroext false) #13, !dbg !13919
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13920
  call void @r8153_u2p3en(%struct.r8152* %2, i1 zeroext false) #13, !dbg !13921
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13922
  call void @r8153_aldps_en(%struct.r8152* %3, i1 zeroext false) #13, !dbg !13923
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13924
  call void @r8153_first_init(%struct.r8152* %4) #13, !dbg !13925
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13926
  call void @ocp_write_dword(%struct.r8152* %5, i16 zeroext 0, i16 zeroext -11252, i32 65537) #13, !dbg !13927
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13928
  %call1 = call zeroext i16 @ocp_read_word(%struct.r8152* %6, i16 zeroext 256, i16 zeroext -7988) #13, !dbg !13929
  %conv = zext i16 %call1 to i32, !dbg !13929
  store i32 %conv, i32* %ocp_data, align 4, !dbg !13930
  %7 = load i32, i32* %ocp_data, align 4, !dbg !13931
  %conv2 = zext i32 %7 to i64, !dbg !13931
  %and = and i64 %conv2, -16385, !dbg !13931
  %conv3 = trunc i64 %and to i32, !dbg !13931
  store i32 %conv3, i32* %ocp_data, align 4, !dbg !13931
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13932
  %9 = load i32, i32* %ocp_data, align 4, !dbg !13933
  call void @ocp_write_word(%struct.r8152* %8, i16 zeroext 256, i16 zeroext -7988, i32 %9) #13, !dbg !13934
  %10 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13935
  call void @r8153_aldps_en(%struct.r8152* %10, i1 zeroext true) #13, !dbg !13936
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13937
  %udev = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 1, !dbg !13939
  %12 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !13939
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 4, !dbg !13940
  %13 = load i32, i32* %speed, align 4, !dbg !13940
  %cmp = icmp ne i32 %13, 3, !dbg !13941
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !13942

if.then5:                                         ; preds = %if.end
  %14 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13943
  call void @r8153b_u1u2en(%struct.r8152* %14, i1 zeroext true) #13, !dbg !13944
  br label %if.end6, !dbg !13944

if.end6:                                          ; preds = %if.then, %if.then5, %if.end
  ret void, !dbg !13945
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8153b_down(%struct.r8152* %tp) #2 !dbg !13946 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !13947, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !13949, metadata !DIExpression()), !dbg !13950
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13951
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 0, !dbg !13953
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !13954
  br i1 %call, label %if.then, label %if.end, !dbg !13955

if.then:                                          ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13956
  call void @rtl_drop_queued_tx(%struct.r8152* %1) #13, !dbg !13958
  br label %return, !dbg !13959

if.end:                                           ; preds = %entry
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13960
  %call1 = call zeroext i16 @ocp_read_word(%struct.r8152* %2, i16 zeroext 256, i16 zeroext -7988) #13, !dbg !13961
  %conv = zext i16 %call1 to i32, !dbg !13961
  store i32 %conv, i32* %ocp_data, align 4, !dbg !13962
  %3 = load i32, i32* %ocp_data, align 4, !dbg !13963
  %conv2 = zext i32 %3 to i64, !dbg !13963
  %or = or i64 %conv2, 16384, !dbg !13963
  %conv3 = trunc i64 %or to i32, !dbg !13963
  store i32 %conv3, i32* %ocp_data, align 4, !dbg !13963
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13964
  %5 = load i32, i32* %ocp_data, align 4, !dbg !13965
  call void @ocp_write_word(%struct.r8152* %4, i16 zeroext 256, i16 zeroext -7988, i32 %5) #13, !dbg !13966
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13967
  call void @r8153b_u1u2en(%struct.r8152* %6, i1 zeroext false) #13, !dbg !13968
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13969
  call void @r8153_u2p3en(%struct.r8152* %7, i1 zeroext false) #13, !dbg !13970
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13971
  call void @r8153b_power_cut_en(%struct.r8152* %8, i1 zeroext false) #13, !dbg !13972
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13973
  call void @r8153_aldps_en(%struct.r8152* %9, i1 zeroext false) #13, !dbg !13974
  %10 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13975
  call void @r8153_enter_oob(%struct.r8152* %10) #13, !dbg !13976
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13977
  call void @r8153_aldps_en(%struct.r8152* %11, i1 zeroext true) #13, !dbg !13978
  br label %return, !dbg !13979

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13979
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8153b_unload(%struct.r8152* %tp) #2 !dbg !13980 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !13981, metadata !DIExpression()), !dbg !13982
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13983
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 0, !dbg !13985
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !13986
  br i1 %call, label %if.then, label %if.end, !dbg !13987

if.then:                                          ; preds = %entry
  br label %return, !dbg !13988

if.end:                                           ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13989
  call void @r8153b_power_cut_en(%struct.r8152* %1, i1 zeroext false) #13, !dbg !13990
  br label %return, !dbg !13991

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13991
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153b_hw_phy_cfg(%struct.r8152* %tp) #2 !dbg !13992 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  %data = alloca i16, align 2
  %swr_cnt_1ms_ini = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !13993, metadata !DIExpression()), !dbg !13994
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !13995, metadata !DIExpression()), !dbg !13996
  call void @llvm.dbg.declare(metadata i16* %data, metadata !13997, metadata !DIExpression()), !dbg !13998
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !13999
  call void @r8153_aldps_en(%struct.r8152* %0, i1 zeroext false) #13, !dbg !14000
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14001
  call void @rtl_eee_enable(%struct.r8152* %1, i1 zeroext false) #13, !dbg !14002
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14003
  call void @rtl8152_apply_firmware(%struct.r8152* %2) #13, !dbg !14004
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14005
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14006
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 0, !dbg !14007
  %call = call zeroext i1 @test_bit(i64 7, i64* %flags) #13, !dbg !14008
  call void @r8153b_green_en(%struct.r8152* %3, i1 zeroext %call) #13, !dbg !14009
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14010
  %call1 = call zeroext i16 @sram_read(%struct.r8152* %5, i16 zeroext -32751) #13, !dbg !14011
  store i16 %call1, i16* %data, align 2, !dbg !14012
  %6 = load i16, i16* %data, align 2, !dbg !14013
  %conv = zext i16 %6 to i64, !dbg !14013
  %or = or i64 %conv, 2048, !dbg !14013
  %conv2 = trunc i64 %or to i16, !dbg !14013
  store i16 %conv2, i16* %data, align 2, !dbg !14013
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14014
  %8 = load i16, i16* %data, align 2, !dbg !14015
  call void @sram_write(%struct.r8152* %7, i16 zeroext -32751, i16 zeroext %8) #13, !dbg !14016
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14017
  %call3 = call zeroext i16 @ocp_reg_read(%struct.r8152* %9, i16 zeroext -23508) #13, !dbg !14018
  store i16 %call3, i16* %data, align 2, !dbg !14019
  %10 = load i16, i16* %data, align 2, !dbg !14020
  %conv4 = zext i16 %10 to i64, !dbg !14020
  %or5 = or i64 %conv4, 2, !dbg !14020
  %conv6 = trunc i64 %or5 to i16, !dbg !14020
  store i16 %conv6, i16* %data, align 2, !dbg !14020
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14021
  %12 = load i16, i16* %data, align 2, !dbg !14022
  call void @ocp_reg_write(%struct.r8152* %11, i16 zeroext -23508, i16 zeroext %12) #13, !dbg !14023
  %13 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14024
  %call7 = call i32 @r8152_efuse_read(%struct.r8152* %13, i8 zeroext 125) #13, !dbg !14025
  store i32 %call7, i32* %ocp_data, align 4, !dbg !14026
  %14 = load i32, i32* %ocp_data, align 4, !dbg !14027
  %and = and i32 %14, 131056, !dbg !14028
  %shr = lshr i32 %and, 1, !dbg !14029
  %15 = load i32, i32* %ocp_data, align 4, !dbg !14030
  %and8 = and i32 %15, 7, !dbg !14031
  %or9 = or i32 %shr, %and8, !dbg !14032
  %conv10 = trunc i32 %or9 to i16, !dbg !14033
  store i16 %conv10, i16* %data, align 2, !dbg !14034
  %16 = load i16, i16* %data, align 2, !dbg !14035
  %conv11 = zext i16 %16 to i32, !dbg !14035
  %cmp = icmp ne i32 %conv11, 65535, !dbg !14037
  br i1 %cmp, label %if.then, label %if.end, !dbg !14038

if.then:                                          ; preds = %entry
  %17 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14039
  %18 = load i16, i16* %data, align 2, !dbg !14040
  call void @ocp_reg_write(%struct.r8152* %17, i16 zeroext -17156, i16 zeroext %18) #13, !dbg !14041
  br label %if.end, !dbg !14041

if.end:                                           ; preds = %if.then, %entry
  %19 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14042
  %call13 = call zeroext i16 @ocp_reg_read(%struct.r8152* %19, i16 zeroext -15322) #13, !dbg !14043
  %conv14 = zext i16 %call13 to i32, !dbg !14043
  store i32 %conv14, i32* %ocp_data, align 4, !dbg !14044
  %20 = load i32, i32* %ocp_data, align 4, !dbg !14045
  %and15 = and i32 %20, 16383, !dbg !14045
  store i32 %and15, i32* %ocp_data, align 4, !dbg !14045
  %21 = load i32, i32* %ocp_data, align 4, !dbg !14046
  %tobool = icmp ne i32 %21, 0, !dbg !14046
  br i1 %tobool, label %if.then16, label %if.end22, !dbg !14048

if.then16:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %swr_cnt_1ms_ini, metadata !14049, metadata !DIExpression()), !dbg !14051
  %22 = load i32, i32* %ocp_data, align 4, !dbg !14052
  %div = udiv i32 16000000, %22, !dbg !14053
  %and17 = and i32 %div, 4095, !dbg !14054
  store i32 %and17, i32* %swr_cnt_1ms_ini, align 4, !dbg !14055
  %23 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14056
  %call18 = call zeroext i16 @ocp_read_word(%struct.r8152* %23, i16 zeroext 0, i16 zeroext -10174) #13, !dbg !14057
  %conv19 = zext i16 %call18 to i32, !dbg !14057
  store i32 %conv19, i32* %ocp_data, align 4, !dbg !14058
  %24 = load i32, i32* %ocp_data, align 4, !dbg !14059
  %and20 = and i32 %24, -4096, !dbg !14060
  %25 = load i32, i32* %swr_cnt_1ms_ini, align 4, !dbg !14061
  %or21 = or i32 %and20, %25, !dbg !14062
  store i32 %or21, i32* %ocp_data, align 4, !dbg !14063
  %26 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14064
  %27 = load i32, i32* %ocp_data, align 4, !dbg !14065
  call void @ocp_write_word(%struct.r8152* %26, i16 zeroext 0, i16 zeroext -10174, i32 %27) #13, !dbg !14066
  br label %if.end22, !dbg !14067

if.end22:                                         ; preds = %if.then16, %if.end
  %28 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14068
  %call23 = call zeroext i16 @ocp_read_word(%struct.r8152* %28, i16 zeroext 256, i16 zeroext -6068) #13, !dbg !14069
  %conv24 = zext i16 %call23 to i32, !dbg !14069
  store i32 %conv24, i32* %ocp_data, align 4, !dbg !14070
  %29 = load i32, i32* %ocp_data, align 4, !dbg !14071
  %or25 = or i32 %29, 64, !dbg !14071
  store i32 %or25, i32* %ocp_data, align 4, !dbg !14071
  %30 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14072
  %31 = load i32, i32* %ocp_data, align 4, !dbg !14073
  call void @ocp_write_word(%struct.r8152* %30, i16 zeroext 256, i16 zeroext -6068, i32 %31) #13, !dbg !14074
  %32 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14075
  %call26 = call i32 @r8153_patch_request(%struct.r8152* %32, i1 zeroext true) #13, !dbg !14077
  %tobool27 = icmp ne i32 %call26, 0, !dbg !14077
  br i1 %tobool27, label %if.end54, label %if.then28, !dbg !14078

if.then28:                                        ; preds = %if.end22
  %33 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14079
  %call29 = call zeroext i16 @ocp_reg_read(%struct.r8152* %33, i16 zeroext -23504) #13, !dbg !14081
  store i16 %call29, i16* %data, align 2, !dbg !14082
  %34 = load i16, i16* %data, align 2, !dbg !14083
  %conv30 = zext i16 %34 to i32, !dbg !14083
  %or31 = or i32 %conv30, 32768, !dbg !14083
  %conv32 = trunc i32 %or31 to i16, !dbg !14083
  store i16 %conv32, i16* %data, align 2, !dbg !14083
  %35 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14084
  %36 = load i16, i16* %data, align 2, !dbg !14085
  call void @ocp_reg_write(%struct.r8152* %35, i16 zeroext -23504, i16 zeroext %36) #13, !dbg !14086
  %37 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14087
  %ups_info = getelementptr inbounds %struct.r8152, %struct.r8152* %37, i32 0, i32 22, !dbg !14088
  %38 = bitcast %struct.ups_info* %ups_info to i32*, !dbg !14089
  %bf.load = load i32, i32* %38, align 8, !dbg !14090
  %bf.clear = and i32 %bf.load, -2049, !dbg !14090
  %bf.set = or i32 %bf.clear, 2048, !dbg !14090
  store i32 %bf.set, i32* %38, align 8, !dbg !14090
  %39 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14091
  %call33 = call zeroext i16 @ocp_reg_read(%struct.r8152* %39, i16 zeroext -23486) #13, !dbg !14092
  store i16 %call33, i16* %data, align 2, !dbg !14093
  %40 = load i16, i16* %data, align 2, !dbg !14094
  %conv34 = zext i16 %40 to i64, !dbg !14094
  %or35 = or i64 %conv34, 26624, !dbg !14094
  %conv36 = trunc i64 %or35 to i16, !dbg !14094
  store i16 %conv36, i16* %data, align 2, !dbg !14094
  %41 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14095
  %42 = load i16, i16* %data, align 2, !dbg !14096
  call void @ocp_reg_write(%struct.r8152* %41, i16 zeroext -23486, i16 zeroext %42) #13, !dbg !14097
  %43 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14098
  %ups_info37 = getelementptr inbounds %struct.r8152, %struct.r8152* %43, i32 0, i32 22, !dbg !14099
  %44 = bitcast %struct.ups_info* %ups_info37 to i32*, !dbg !14100
  %bf.load38 = load i32, i32* %44, align 8, !dbg !14101
  %bf.clear39 = and i32 %bf.load38, -16385, !dbg !14101
  %bf.set40 = or i32 %bf.clear39, 16384, !dbg !14101
  store i32 %bf.set40, i32* %44, align 8, !dbg !14101
  %45 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14102
  %ups_info41 = getelementptr inbounds %struct.r8152, %struct.r8152* %45, i32 0, i32 22, !dbg !14103
  %46 = bitcast %struct.ups_info* %ups_info41 to i32*, !dbg !14104
  %bf.load42 = load i32, i32* %46, align 8, !dbg !14105
  %bf.clear43 = and i32 %bf.load42, -2, !dbg !14105
  %bf.set44 = or i32 %bf.clear43, 1, !dbg !14105
  store i32 %bf.set44, i32* %46, align 8, !dbg !14105
  %47 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14106
  %ups_info45 = getelementptr inbounds %struct.r8152, %struct.r8152* %47, i32 0, i32 22, !dbg !14107
  %48 = bitcast %struct.ups_info* %ups_info45 to i32*, !dbg !14108
  %bf.load46 = load i32, i32* %48, align 8, !dbg !14109
  %bf.clear47 = and i32 %bf.load46, -8193, !dbg !14109
  %bf.set48 = or i32 %bf.clear47, 8192, !dbg !14109
  store i32 %bf.set48, i32* %48, align 8, !dbg !14109
  %49 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14110
  call void @ocp_reg_write(%struct.r8152* %49, i16 zeroext -15338, i16 zeroext 0) #13, !dbg !14111
  %50 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14112
  call void @ocp_reg_write(%struct.r8152* %50, i16 zeroext -15338, i16 zeroext 1280) #13, !dbg !14113
  %51 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14114
  %ups_info49 = getelementptr inbounds %struct.r8152, %struct.r8152* %51, i32 0, i32 22, !dbg !14115
  %52 = bitcast %struct.ups_info* %ups_info49 to i32*, !dbg !14116
  %bf.load50 = load i32, i32* %52, align 8, !dbg !14117
  %bf.clear51 = and i32 %bf.load50, -3, !dbg !14117
  %bf.set52 = or i32 %bf.clear51, 2, !dbg !14117
  store i32 %bf.set52, i32* %52, align 8, !dbg !14117
  %53 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14118
  %call53 = call i32 @r8153_patch_request(%struct.r8152* %53, i1 zeroext false) #13, !dbg !14119
  br label %if.end54, !dbg !14120

if.end54:                                         ; preds = %if.then28, %if.end22
  %54 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14121
  %eee_en = getelementptr inbounds %struct.r8152, %struct.r8152* %54, i32 0, i32 25, !dbg !14123
  %55 = load i8, i8* %eee_en, align 4, !dbg !14123
  %tobool55 = trunc i8 %55 to i1, !dbg !14123
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !14124

if.then56:                                        ; preds = %if.end54
  %56 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14125
  call void @rtl_eee_enable(%struct.r8152* %56, i1 zeroext true) #13, !dbg !14126
  br label %if.end57, !dbg !14126

if.end57:                                         ; preds = %if.then56, %if.end54
  %57 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14127
  call void @r8153_aldps_en(%struct.r8152* %57, i1 zeroext true) #13, !dbg !14128
  %58 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14129
  call void @r8152b_enable_fc(%struct.r8152* %58) #13, !dbg !14130
  %59 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14131
  %flags58 = getelementptr inbounds %struct.r8152, %struct.r8152* %59, i32 0, i32 0, !dbg !14132
  call void @set_bit(i64 5, i64* %flags58) #13, !dbg !14133
  ret void, !dbg !14134
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8153b_runtime_enable(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !14135 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !14136, metadata !DIExpression()), !dbg !14137
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !14138, metadata !DIExpression()), !dbg !14139
  %0 = load i8, i8* %enable.addr, align 1, !dbg !14140
  %tobool = trunc i8 %0 to i1, !dbg !14140
  br i1 %tobool, label %if.then, label %if.else, !dbg !14142

if.then:                                          ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14143
  call void @r8153_queue_wake(%struct.r8152* %1, i1 zeroext true) #13, !dbg !14145
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14146
  call void @r8153b_u1u2en(%struct.r8152* %2, i1 zeroext false) #13, !dbg !14147
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14148
  call void @r8153_u2p3en(%struct.r8152* %3, i1 zeroext false) #13, !dbg !14149
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14150
  call void @rtl_runtime_suspend_enable(%struct.r8152* %4, i1 zeroext true) #13, !dbg !14151
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14152
  call void @r8153b_ups_en(%struct.r8152* %5, i1 zeroext true) #13, !dbg !14153
  br label %if.end2, !dbg !14154

if.else:                                          ; preds = %entry
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14155
  call void @r8153b_ups_en(%struct.r8152* %6, i1 zeroext false) #13, !dbg !14157
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14158
  call void @r8153_queue_wake(%struct.r8152* %7, i1 zeroext false) #13, !dbg !14159
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14160
  call void @rtl_runtime_suspend_enable(%struct.r8152* %8, i1 zeroext false) #13, !dbg !14161
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14162
  %udev = getelementptr inbounds %struct.r8152, %struct.r8152* %9, i32 0, i32 1, !dbg !14164
  %10 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !14164
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %10, i32 0, i32 4, !dbg !14165
  %11 = load i32, i32* %speed, align 4, !dbg !14165
  %cmp = icmp ne i32 %11, 3, !dbg !14166
  br i1 %cmp, label %if.then1, label %if.end, !dbg !14167

if.then1:                                         ; preds = %if.else
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14168
  call void @r8153b_u1u2en(%struct.r8152* %12, i1 zeroext true) #13, !dbg !14169
  br label %if.end, !dbg !14169

if.end:                                           ; preds = %if.then1, %if.else
  br label %if.end2

if.end2:                                          ; preds = %if.end, %if.then
  ret void, !dbg !14170
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #2 !dbg !14171 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !14175, metadata !DIExpression()), !dbg !14177
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !14179, metadata !DIExpression()), !dbg !14180
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !14181, metadata !DIExpression()), !dbg !14182
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !14183, metadata !DIExpression()), !dbg !14185
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !14187, metadata !DIExpression()), !dbg !14188
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !14189, metadata !DIExpression()), !dbg !14191
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !14193, metadata !DIExpression()), !dbg !14194
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !14195, metadata !DIExpression()), !dbg !14196
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !14197, metadata !DIExpression()), !dbg !14198
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !14199
  %1 = load i64, i64* %nr.addr, align 8, !dbg !14200
  %div = sdiv i64 %1, 64, !dbg !14200
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !14201
  %2 = bitcast i64* %add.ptr to i8*, !dbg !14199
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !14202
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !14203
  %conv.i = trunc i64 %4 to i32, !dbg !14203
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #16, !dbg !14204
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !14205
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !14205
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #16, !dbg !14205
  %7 = load i64, i64* %nr.addr, align 8, !dbg !14206
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !14206
  br i1 %8, label %cond.true, label %cond.false, !dbg !14206

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !14206
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !14206
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !14207
  %and.i = and i64 %11, 63, !dbg !14208
  %shl.i = shl i64 1, %and.i, !dbg !14209
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !14210
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !14211
  %shr.i = ashr i64 %13, 6, !dbg !14212
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !14210
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !14210
  %and1.i = and i64 %shl.i, %14, !dbg !14213
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !14214
  %conv = zext i1 %cmp.i to i32, !dbg !14206
  br label %cond.end, !dbg !14206

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !14206
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !14206
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !14215
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !14216
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #11, !dbg !14217, !srcloc !14218
  store i8 %19, i8* %oldbit.i, align 1, !dbg !14217
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !14219
  %tobool.i = trunc i8 %20 to i1, !dbg !14219
  %conv2 = zext i1 %tobool.i to i32, !dbg !14206
  br label %cond.end, !dbg !14206

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !14206
  %tobool = icmp ne i32 %cond, 0, !dbg !14206
  ret i1 %tobool, !dbg !14220
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @r8152_mdio_read(%struct.r8152* %tp, i32 %reg_addr) #2 !dbg !14221 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %reg_addr.addr = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !14224, metadata !DIExpression()), !dbg !14225
  store i32 %reg_addr, i32* %reg_addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg_addr.addr, metadata !14226, metadata !DIExpression()), !dbg !14227
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14228
  %1 = load i32, i32* %reg_addr.addr, align 4, !dbg !14229
  %mul = mul i32 %1, 2, !dbg !14230
  %add = add i32 41984, %mul, !dbg !14231
  %conv = trunc i32 %add to i16, !dbg !14232
  %call = call zeroext i16 @ocp_reg_read(%struct.r8152* %0, i16 zeroext %conv) #13, !dbg !14233
  %conv1 = zext i16 %call to i32, !dbg !14233
  ret i32 %conv1, !dbg !14234
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8152_mdio_write(%struct.r8152* %tp, i32 %reg_addr, i32 %value) #2 !dbg !14235 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %reg_addr.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !14238, metadata !DIExpression()), !dbg !14239
  store i32 %reg_addr, i32* %reg_addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg_addr.addr, metadata !14240, metadata !DIExpression()), !dbg !14241
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !14242, metadata !DIExpression()), !dbg !14243
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14244
  %1 = load i32, i32* %reg_addr.addr, align 4, !dbg !14245
  %mul = mul i32 %1, 2, !dbg !14246
  %add = add i32 41984, %mul, !dbg !14247
  %conv = trunc i32 %add to i16, !dbg !14248
  %2 = load i32, i32* %value.addr, align 4, !dbg !14249
  %conv1 = trunc i32 %2 to i16, !dbg !14249
  call void @ocp_reg_write(%struct.r8152* %0, i16 zeroext %conv, i16 zeroext %conv1) #13, !dbg !14250
  ret void, !dbg !14251
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8152_aldps_en(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !14252 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !14253, metadata !DIExpression()), !dbg !14254
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !14255, metadata !DIExpression()), !dbg !14256
  %0 = load i8, i8* %enable.addr, align 1, !dbg !14257
  %tobool = trunc i8 %0 to i1, !dbg !14257
  br i1 %tobool, label %if.then, label %if.else, !dbg !14259

if.then:                                          ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14260
  call void @ocp_reg_write(%struct.r8152* %1, i16 zeroext 8208, i16 zeroext -31984) #13, !dbg !14262
  br label %if.end, !dbg !14263

if.else:                                          ; preds = %entry
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14264
  call void @ocp_reg_write(%struct.r8152* %2, i16 zeroext 8208, i16 zeroext 784) #13, !dbg !14266
  call void @msleep(i32 20) #13, !dbg !14267
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !14268
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @ocp_read_word(%struct.r8152* %tp, i16 zeroext %type, i16 zeroext %index) #2 !dbg !14269 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %type.addr = alloca i16, align 2
  %index.addr = alloca i16, align 2
  %data = alloca i32, align 4
  %tmp = alloca i32, align 4
  %byen = alloca i16, align 2
  %shift = alloca i8, align 1
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !14272, metadata !DIExpression()), !dbg !14273
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !14274, metadata !DIExpression()), !dbg !14275
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14276, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.declare(metadata i32* %data, metadata !14278, metadata !DIExpression()), !dbg !14279
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !14280, metadata !DIExpression()), !dbg !14281
  call void @llvm.dbg.declare(metadata i16* %byen, metadata !14282, metadata !DIExpression()), !dbg !14283
  store i16 51, i16* %byen, align 2, !dbg !14283
  call void @llvm.dbg.declare(metadata i8* %shift, metadata !14284, metadata !DIExpression()), !dbg !14285
  %0 = load i16, i16* %index.addr, align 2, !dbg !14286
  %conv = zext i16 %0 to i32, !dbg !14286
  %and = and i32 %conv, 2, !dbg !14287
  %conv1 = trunc i32 %and to i8, !dbg !14286
  store i8 %conv1, i8* %shift, align 1, !dbg !14285
  %1 = load i16, i16* %index.addr, align 2, !dbg !14288
  %conv2 = zext i16 %1 to i32, !dbg !14288
  %and3 = and i32 %conv2, -4, !dbg !14288
  %conv4 = trunc i32 %and3 to i16, !dbg !14288
  store i16 %conv4, i16* %index.addr, align 2, !dbg !14288
  %2 = load i8, i8* %shift, align 1, !dbg !14289
  %conv5 = zext i8 %2 to i32, !dbg !14289
  %3 = load i16, i16* %byen, align 2, !dbg !14290
  %conv6 = zext i16 %3 to i32, !dbg !14290
  %shl = shl i32 %conv6, %conv5, !dbg !14290
  %conv7 = trunc i32 %shl to i16, !dbg !14290
  store i16 %conv7, i16* %byen, align 2, !dbg !14290
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14291
  %5 = load i16, i16* %index.addr, align 2, !dbg !14292
  %6 = bitcast i32* %tmp to i8*, !dbg !14293
  %7 = load i16, i16* %type.addr, align 2, !dbg !14294
  %conv8 = zext i16 %7 to i32, !dbg !14294
  %8 = load i16, i16* %byen, align 2, !dbg !14295
  %conv9 = zext i16 %8 to i32, !dbg !14295
  %or = or i32 %conv8, %conv9, !dbg !14296
  %conv10 = trunc i32 %or to i16, !dbg !14294
  %call = call i32 @generic_ocp_read(%struct.r8152* %4, i16 zeroext %5, i16 zeroext 4, i8* %6, i16 zeroext %conv10) #13, !dbg !14297
  %9 = load i32, i32* %tmp, align 4, !dbg !14298
  store i32 %9, i32* %data, align 4, !dbg !14299
  %10 = load i8, i8* %shift, align 1, !dbg !14300
  %conv11 = zext i8 %10 to i32, !dbg !14300
  %mul = mul i32 %conv11, 8, !dbg !14301
  %11 = load i32, i32* %data, align 4, !dbg !14302
  %shr = lshr i32 %11, %mul, !dbg !14302
  store i32 %shr, i32* %data, align 4, !dbg !14302
  %12 = load i32, i32* %data, align 4, !dbg !14303
  %and12 = and i32 %12, 65535, !dbg !14303
  store i32 %and12, i32* %data, align 4, !dbg !14303
  %13 = load i32, i32* %data, align 4, !dbg !14304
  %conv13 = trunc i32 %13 to i16, !dbg !14305
  ret i16 %conv13, !dbg !14306
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ocp_write_word(%struct.r8152* %tp, i16 zeroext %type, i16 zeroext %index, i32 %data) #2 !dbg !14307 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %type.addr = alloca i16, align 2
  %index.addr = alloca i16, align 2
  %data.addr = alloca i32, align 4
  %mask = alloca i32, align 4
  %tmp = alloca i32, align 4
  %byen = alloca i16, align 2
  %shift = alloca i8, align 1
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !14310, metadata !DIExpression()), !dbg !14311
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !14312, metadata !DIExpression()), !dbg !14313
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14314, metadata !DIExpression()), !dbg !14315
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !14316, metadata !DIExpression()), !dbg !14317
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !14318, metadata !DIExpression()), !dbg !14319
  store i32 65535, i32* %mask, align 4, !dbg !14319
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !14320, metadata !DIExpression()), !dbg !14321
  call void @llvm.dbg.declare(metadata i16* %byen, metadata !14322, metadata !DIExpression()), !dbg !14323
  store i16 51, i16* %byen, align 2, !dbg !14323
  call void @llvm.dbg.declare(metadata i8* %shift, metadata !14324, metadata !DIExpression()), !dbg !14325
  %0 = load i16, i16* %index.addr, align 2, !dbg !14326
  %conv = zext i16 %0 to i32, !dbg !14326
  %and = and i32 %conv, 2, !dbg !14327
  %conv1 = trunc i32 %and to i8, !dbg !14326
  store i8 %conv1, i8* %shift, align 1, !dbg !14325
  %1 = load i32, i32* %mask, align 4, !dbg !14328
  %2 = load i32, i32* %data.addr, align 4, !dbg !14329
  %and2 = and i32 %2, %1, !dbg !14329
  store i32 %and2, i32* %data.addr, align 4, !dbg !14329
  %3 = load i16, i16* %index.addr, align 2, !dbg !14330
  %conv3 = zext i16 %3 to i32, !dbg !14330
  %and4 = and i32 %conv3, 2, !dbg !14332
  %tobool = icmp ne i32 %and4, 0, !dbg !14332
  br i1 %tobool, label %if.then, label %if.end, !dbg !14333

if.then:                                          ; preds = %entry
  %4 = load i8, i8* %shift, align 1, !dbg !14334
  %conv5 = zext i8 %4 to i32, !dbg !14334
  %5 = load i16, i16* %byen, align 2, !dbg !14336
  %conv6 = zext i16 %5 to i32, !dbg !14336
  %shl = shl i32 %conv6, %conv5, !dbg !14336
  %conv7 = trunc i32 %shl to i16, !dbg !14336
  store i16 %conv7, i16* %byen, align 2, !dbg !14336
  %6 = load i8, i8* %shift, align 1, !dbg !14337
  %conv8 = zext i8 %6 to i32, !dbg !14337
  %mul = mul i32 %conv8, 8, !dbg !14338
  %7 = load i32, i32* %mask, align 4, !dbg !14339
  %shl9 = shl i32 %7, %mul, !dbg !14339
  store i32 %shl9, i32* %mask, align 4, !dbg !14339
  %8 = load i8, i8* %shift, align 1, !dbg !14340
  %conv10 = zext i8 %8 to i32, !dbg !14340
  %mul11 = mul i32 %conv10, 8, !dbg !14341
  %9 = load i32, i32* %data.addr, align 4, !dbg !14342
  %shl12 = shl i32 %9, %mul11, !dbg !14342
  store i32 %shl12, i32* %data.addr, align 4, !dbg !14342
  %10 = load i16, i16* %index.addr, align 2, !dbg !14343
  %conv13 = zext i16 %10 to i32, !dbg !14343
  %and14 = and i32 %conv13, -4, !dbg !14343
  %conv15 = trunc i32 %and14 to i16, !dbg !14343
  store i16 %conv15, i16* %index.addr, align 2, !dbg !14343
  br label %if.end, !dbg !14344

if.end:                                           ; preds = %if.then, %entry
  %11 = load i32, i32* %data.addr, align 4, !dbg !14345
  store i32 %11, i32* %tmp, align 4, !dbg !14346
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14347
  %13 = load i16, i16* %index.addr, align 2, !dbg !14348
  %14 = load i16, i16* %byen, align 2, !dbg !14349
  %15 = bitcast i32* %tmp to i8*, !dbg !14350
  %16 = load i16, i16* %type.addr, align 2, !dbg !14351
  %call = call i32 @generic_ocp_write(%struct.r8152* %12, i16 zeroext %13, i16 zeroext %14, i16 zeroext 4, i8* %15, i16 zeroext %16) #13, !dbg !14352
  ret void, !dbg !14353
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8152_power_cut_en(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !14354 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !14355, metadata !DIExpression()), !dbg !14356
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !14357, metadata !DIExpression()), !dbg !14358
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !14359, metadata !DIExpression()), !dbg !14360
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14361
  %call = call zeroext i16 @ocp_read_word(%struct.r8152* %0, i16 zeroext 0, i16 zeroext -10240) #13, !dbg !14362
  %conv = zext i16 %call to i32, !dbg !14362
  store i32 %conv, i32* %ocp_data, align 4, !dbg !14363
  %1 = load i8, i8* %enable.addr, align 1, !dbg !14364
  %tobool = trunc i8 %1 to i1, !dbg !14364
  br i1 %tobool, label %if.then, label %if.else, !dbg !14366

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ocp_data, align 4, !dbg !14367
  %or = or i32 %2, 256, !dbg !14367
  store i32 %or, i32* %ocp_data, align 4, !dbg !14367
  br label %if.end, !dbg !14368

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %ocp_data, align 4, !dbg !14369
  %and = and i32 %3, -257, !dbg !14369
  store i32 %and, i32* %ocp_data, align 4, !dbg !14369
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14370
  %5 = load i32, i32* %ocp_data, align 4, !dbg !14371
  call void @ocp_write_word(%struct.r8152* %4, i16 zeroext 0, i16 zeroext -10240, i32 %5) #13, !dbg !14372
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14373
  %call1 = call zeroext i16 @ocp_read_word(%struct.r8152* %6, i16 zeroext 0, i16 zeroext -11214) #13, !dbg !14374
  %conv2 = zext i16 %call1 to i32, !dbg !14374
  store i32 %conv2, i32* %ocp_data, align 4, !dbg !14375
  %7 = load i32, i32* %ocp_data, align 4, !dbg !14376
  %and3 = and i32 %7, -2, !dbg !14376
  store i32 %and3, i32* %ocp_data, align 4, !dbg !14376
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14377
  %9 = load i32, i32* %ocp_data, align 4, !dbg !14378
  call void @ocp_write_word(%struct.r8152* %8, i16 zeroext 0, i16 zeroext -11214, i32 %9) #13, !dbg !14379
  ret void, !dbg !14380
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ocp_read_dword(%struct.r8152* %tp, i16 zeroext %type, i16 zeroext %index) #2 !dbg !14381 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %type.addr = alloca i16, align 2
  %index.addr = alloca i16, align 2
  %data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !14384, metadata !DIExpression()), !dbg !14385
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !14386, metadata !DIExpression()), !dbg !14387
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14388, metadata !DIExpression()), !dbg !14389
  call void @llvm.dbg.declare(metadata i32* %data, metadata !14390, metadata !DIExpression()), !dbg !14391
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14392
  %1 = load i16, i16* %index.addr, align 2, !dbg !14393
  %2 = bitcast i32* %data to i8*, !dbg !14394
  %3 = load i16, i16* %type.addr, align 2, !dbg !14395
  %call = call i32 @generic_ocp_read(%struct.r8152* %0, i16 zeroext %1, i16 zeroext 4, i8* %2, i16 zeroext %3) #13, !dbg !14396
  %4 = load i32, i32* %data, align 4, !dbg !14397
  ret i32 %4, !dbg !14398
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ocp_write_dword(%struct.r8152* %tp, i16 zeroext %type, i16 zeroext %index, i32 %data) #2 !dbg !14399 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %type.addr = alloca i16, align 2
  %index.addr = alloca i16, align 2
  %data.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !14400, metadata !DIExpression()), !dbg !14401
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !14402, metadata !DIExpression()), !dbg !14403
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14404, metadata !DIExpression()), !dbg !14405
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !14406, metadata !DIExpression()), !dbg !14407
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !14408, metadata !DIExpression()), !dbg !14409
  %0 = load i32, i32* %data.addr, align 4, !dbg !14410
  store i32 %0, i32* %tmp, align 4, !dbg !14409
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14411
  %2 = load i16, i16* %index.addr, align 2, !dbg !14412
  %3 = bitcast i32* %tmp to i8*, !dbg !14413
  %4 = load i16, i16* %type.addr, align 2, !dbg !14414
  %call = call i32 @generic_ocp_write(%struct.r8152* %1, i16 zeroext %2, i16 zeroext 255, i16 zeroext 4, i8* %3, i16 zeroext %4) #13, !dbg !14415
  ret void, !dbg !14416
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl_tally_reset(%struct.r8152* %tp) #2 !dbg !14417 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !14418, metadata !DIExpression()), !dbg !14419
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !14420, metadata !DIExpression()), !dbg !14421
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14422
  %call = call zeroext i16 @ocp_read_word(%struct.r8152* %0, i16 zeroext 256, i16 zeroext -6144) #13, !dbg !14423
  %conv = zext i16 %call to i32, !dbg !14423
  store i32 %conv, i32* %ocp_data, align 4, !dbg !14424
  %1 = load i32, i32* %ocp_data, align 4, !dbg !14425
  %or = or i32 %1, 1, !dbg !14425
  store i32 %or, i32* %ocp_data, align 4, !dbg !14425
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14426
  %3 = load i32, i32* %ocp_data, align 4, !dbg !14427
  call void @ocp_write_word(%struct.r8152* %2, i16 zeroext 256, i16 zeroext -6144, i32 %3) #13, !dbg !14428
  ret void, !dbg !14429
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #2 !dbg !14430 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !14434, metadata !DIExpression()), !dbg !14435
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14436, metadata !DIExpression()), !dbg !14437
  ret i1 true, !dbg !14438
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #2 !dbg !14439 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14443, metadata !DIExpression()), !dbg !14444
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14445, metadata !DIExpression()), !dbg !14446
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !14447, metadata !DIExpression()), !dbg !14448
  ret void, !dbg !14449
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @ocp_reg_read(%struct.r8152* %tp, i16 zeroext %addr) #2 !dbg !14450 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %addr.addr = alloca i16, align 2
  %ocp_base = alloca i16, align 2
  %ocp_index = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !14453, metadata !DIExpression()), !dbg !14454
  store i16 %addr, i16* %addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %addr.addr, metadata !14455, metadata !DIExpression()), !dbg !14456
  call void @llvm.dbg.declare(metadata i16* %ocp_base, metadata !14457, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.declare(metadata i16* %ocp_index, metadata !14459, metadata !DIExpression()), !dbg !14460
  %0 = load i16, i16* %addr.addr, align 2, !dbg !14461
  %conv = zext i16 %0 to i32, !dbg !14461
  %and = and i32 %conv, 61440, !dbg !14462
  %conv1 = trunc i32 %and to i16, !dbg !14461
  store i16 %conv1, i16* %ocp_base, align 2, !dbg !14463
  %1 = load i16, i16* %ocp_base, align 2, !dbg !14464
  %conv2 = zext i16 %1 to i32, !dbg !14464
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14466
  %ocp_base3 = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 35, !dbg !14467
  %3 = load i16, i16* %ocp_base3, align 4, !dbg !14467
  %conv4 = zext i16 %3 to i32, !dbg !14466
  %cmp = icmp ne i32 %conv2, %conv4, !dbg !14468
  br i1 %cmp, label %if.then, label %if.end, !dbg !14469

if.then:                                          ; preds = %entry
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14470
  %5 = load i16, i16* %ocp_base, align 2, !dbg !14472
  %conv6 = zext i16 %5 to i32, !dbg !14472
  call void @ocp_write_word(%struct.r8152* %4, i16 zeroext 256, i16 zeroext -6036, i32 %conv6) #13, !dbg !14473
  %6 = load i16, i16* %ocp_base, align 2, !dbg !14474
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14475
  %ocp_base7 = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 35, !dbg !14476
  store i16 %6, i16* %ocp_base7, align 4, !dbg !14477
  br label %if.end, !dbg !14478

if.end:                                           ; preds = %if.then, %entry
  %8 = load i16, i16* %addr.addr, align 2, !dbg !14479
  %conv8 = zext i16 %8 to i32, !dbg !14479
  %and9 = and i32 %conv8, 4095, !dbg !14480
  %or = or i32 %and9, 45056, !dbg !14481
  %conv10 = trunc i32 %or to i16, !dbg !14482
  store i16 %conv10, i16* %ocp_index, align 2, !dbg !14483
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14484
  %10 = load i16, i16* %ocp_index, align 2, !dbg !14485
  %call = call zeroext i16 @ocp_read_word(%struct.r8152* %9, i16 zeroext 256, i16 zeroext %10) #13, !dbg !14486
  ret i16 %call, !dbg !14487
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ocp_reg_write(%struct.r8152* %tp, i16 zeroext %addr, i16 zeroext %data) #2 !dbg !14488 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %addr.addr = alloca i16, align 2
  %data.addr = alloca i16, align 2
  %ocp_base = alloca i16, align 2
  %ocp_index = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !14491, metadata !DIExpression()), !dbg !14492
  store i16 %addr, i16* %addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %addr.addr, metadata !14493, metadata !DIExpression()), !dbg !14494
  store i16 %data, i16* %data.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %data.addr, metadata !14495, metadata !DIExpression()), !dbg !14496
  call void @llvm.dbg.declare(metadata i16* %ocp_base, metadata !14497, metadata !DIExpression()), !dbg !14498
  call void @llvm.dbg.declare(metadata i16* %ocp_index, metadata !14499, metadata !DIExpression()), !dbg !14500
  %0 = load i16, i16* %addr.addr, align 2, !dbg !14501
  %conv = zext i16 %0 to i32, !dbg !14501
  %and = and i32 %conv, 61440, !dbg !14502
  %conv1 = trunc i32 %and to i16, !dbg !14501
  store i16 %conv1, i16* %ocp_base, align 2, !dbg !14503
  %1 = load i16, i16* %ocp_base, align 2, !dbg !14504
  %conv2 = zext i16 %1 to i32, !dbg !14504
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14506
  %ocp_base3 = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 35, !dbg !14507
  %3 = load i16, i16* %ocp_base3, align 4, !dbg !14507
  %conv4 = zext i16 %3 to i32, !dbg !14506
  %cmp = icmp ne i32 %conv2, %conv4, !dbg !14508
  br i1 %cmp, label %if.then, label %if.end, !dbg !14509

if.then:                                          ; preds = %entry
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14510
  %5 = load i16, i16* %ocp_base, align 2, !dbg !14512
  %conv6 = zext i16 %5 to i32, !dbg !14512
  call void @ocp_write_word(%struct.r8152* %4, i16 zeroext 256, i16 zeroext -6036, i32 %conv6) #13, !dbg !14513
  %6 = load i16, i16* %ocp_base, align 2, !dbg !14514
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14515
  %ocp_base7 = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 35, !dbg !14516
  store i16 %6, i16* %ocp_base7, align 4, !dbg !14517
  br label %if.end, !dbg !14518

if.end:                                           ; preds = %if.then, %entry
  %8 = load i16, i16* %addr.addr, align 2, !dbg !14519
  %conv8 = zext i16 %8 to i32, !dbg !14519
  %and9 = and i32 %conv8, 4095, !dbg !14520
  %or = or i32 %and9, 45056, !dbg !14521
  %conv10 = trunc i32 %or to i16, !dbg !14522
  store i16 %conv10, i16* %ocp_index, align 2, !dbg !14523
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14524
  %10 = load i16, i16* %ocp_index, align 2, !dbg !14525
  %11 = load i16, i16* %data.addr, align 2, !dbg !14526
  %conv11 = zext i16 %11 to i32, !dbg !14526
  call void @ocp_write_word(%struct.r8152* %9, i16 zeroext 256, i16 zeroext %10, i32 %conv11) #13, !dbg !14527
  ret void, !dbg !14528
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @generic_ocp_read(%struct.r8152* %tp, i16 zeroext %index, i16 zeroext %size, i8* %data, i16 zeroext %type) #2 !dbg !14529 {
entry:
  %retval = alloca i32, align 4
  %tp.addr = alloca %struct.r8152*, align 8
  %index.addr = alloca i16, align 2
  %size.addr = alloca i16, align 2
  %data.addr = alloca i8*, align 8
  %type.addr = alloca i16, align 2
  %limit = alloca i16, align 2
  %ret = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !14532, metadata !DIExpression()), !dbg !14533
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14534, metadata !DIExpression()), !dbg !14535
  store i16 %size, i16* %size.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %size.addr, metadata !14536, metadata !DIExpression()), !dbg !14537
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !14538, metadata !DIExpression()), !dbg !14539
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !14540, metadata !DIExpression()), !dbg !14541
  call void @llvm.dbg.declare(metadata i16* %limit, metadata !14542, metadata !DIExpression()), !dbg !14543
  store i16 64, i16* %limit, align 2, !dbg !14543
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14544, metadata !DIExpression()), !dbg !14545
  store i32 0, i32* %ret, align 4, !dbg !14545
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14546
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 0, !dbg !14548
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !14549
  br i1 %call, label %if.then, label %if.end, !dbg !14550

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !14551
  br label %return, !dbg !14551

if.end:                                           ; preds = %entry
  %1 = load i16, i16* %size.addr, align 2, !dbg !14552
  %conv = zext i16 %1 to i32, !dbg !14552
  %and = and i32 %conv, 3, !dbg !14554
  %tobool = icmp ne i32 %and, 0, !dbg !14554
  br i1 %tobool, label %if.then8, label %lor.lhs.false, !dbg !14555

lor.lhs.false:                                    ; preds = %if.end
  %2 = load i16, i16* %size.addr, align 2, !dbg !14556
  %tobool1 = icmp ne i16 %2, 0, !dbg !14556
  br i1 %tobool1, label %lor.lhs.false2, label %if.then8, !dbg !14557

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %3 = load i16, i16* %index.addr, align 2, !dbg !14558
  %conv3 = zext i16 %3 to i32, !dbg !14558
  %and4 = and i32 %conv3, 3, !dbg !14559
  %tobool5 = icmp ne i32 %and4, 0, !dbg !14559
  br i1 %tobool5, label %if.then8, label %lor.lhs.false6, !dbg !14560

lor.lhs.false6:                                   ; preds = %lor.lhs.false2
  %4 = load i8*, i8** %data.addr, align 8, !dbg !14561
  %tobool7 = icmp ne i8* %4, null, !dbg !14561
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !14562

if.then8:                                         ; preds = %lor.lhs.false6, %lor.lhs.false2, %lor.lhs.false, %if.end
  store i32 -1, i32* %retval, align 4, !dbg !14563
  br label %return, !dbg !14563

if.end9:                                          ; preds = %lor.lhs.false6
  %5 = load i16, i16* %index.addr, align 2, !dbg !14564
  %conv10 = zext i16 %5 to i32, !dbg !14566
  %6 = load i16, i16* %size.addr, align 2, !dbg !14567
  %conv11 = zext i16 %6 to i32, !dbg !14568
  %add = add i32 %conv10, %conv11, !dbg !14569
  %cmp = icmp ugt i32 %add, 65535, !dbg !14570
  br i1 %cmp, label %if.then13, label %if.end14, !dbg !14571

if.then13:                                        ; preds = %if.end9
  store i32 -1, i32* %retval, align 4, !dbg !14572
  br label %return, !dbg !14572

if.end14:                                         ; preds = %if.end9
  br label %while.cond, !dbg !14573

while.cond:                                       ; preds = %if.end46, %if.end14
  %7 = load i16, i16* %size.addr, align 2, !dbg !14574
  %tobool15 = icmp ne i16 %7, 0, !dbg !14573
  br i1 %tobool15, label %while.body, label %while.end, !dbg !14573

while.body:                                       ; preds = %while.cond
  %8 = load i16, i16* %size.addr, align 2, !dbg !14575
  %conv16 = zext i16 %8 to i32, !dbg !14575
  %9 = load i16, i16* %limit, align 2, !dbg !14578
  %conv17 = zext i16 %9 to i32, !dbg !14578
  %cmp18 = icmp sgt i32 %conv16, %conv17, !dbg !14579
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !14580

if.then20:                                        ; preds = %while.body
  %10 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14581
  %11 = load i16, i16* %index.addr, align 2, !dbg !14583
  %12 = load i16, i16* %type.addr, align 2, !dbg !14584
  %13 = load i16, i16* %limit, align 2, !dbg !14585
  %14 = load i8*, i8** %data.addr, align 8, !dbg !14586
  %call21 = call i32 @get_registers(%struct.r8152* %10, i16 zeroext %11, i16 zeroext %12, i16 zeroext %13, i8* %14) #13, !dbg !14587
  store i32 %call21, i32* %ret, align 4, !dbg !14588
  %15 = load i32, i32* %ret, align 4, !dbg !14589
  %cmp22 = icmp slt i32 %15, 0, !dbg !14591
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !14592

if.then24:                                        ; preds = %if.then20
  br label %while.end, !dbg !14593

if.end25:                                         ; preds = %if.then20
  %16 = load i16, i16* %limit, align 2, !dbg !14594
  %conv26 = zext i16 %16 to i32, !dbg !14594
  %17 = load i16, i16* %index.addr, align 2, !dbg !14595
  %conv27 = zext i16 %17 to i32, !dbg !14595
  %add28 = add i32 %conv27, %conv26, !dbg !14595
  %conv29 = trunc i32 %add28 to i16, !dbg !14595
  store i16 %conv29, i16* %index.addr, align 2, !dbg !14595
  %18 = load i16, i16* %limit, align 2, !dbg !14596
  %conv30 = zext i16 %18 to i32, !dbg !14596
  %19 = load i8*, i8** %data.addr, align 8, !dbg !14597
  %idx.ext = sext i32 %conv30 to i64, !dbg !14597
  %add.ptr = getelementptr i8, i8* %19, i64 %idx.ext, !dbg !14597
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !14597
  %20 = load i16, i16* %limit, align 2, !dbg !14598
  %conv31 = zext i16 %20 to i32, !dbg !14598
  %21 = load i16, i16* %size.addr, align 2, !dbg !14599
  %conv32 = zext i16 %21 to i32, !dbg !14599
  %sub = sub i32 %conv32, %conv31, !dbg !14599
  %conv33 = trunc i32 %sub to i16, !dbg !14599
  store i16 %conv33, i16* %size.addr, align 2, !dbg !14599
  br label %if.end46, !dbg !14600

if.else:                                          ; preds = %while.body
  %22 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14601
  %23 = load i16, i16* %index.addr, align 2, !dbg !14603
  %24 = load i16, i16* %type.addr, align 2, !dbg !14604
  %25 = load i16, i16* %size.addr, align 2, !dbg !14605
  %26 = load i8*, i8** %data.addr, align 8, !dbg !14606
  %call34 = call i32 @get_registers(%struct.r8152* %22, i16 zeroext %23, i16 zeroext %24, i16 zeroext %25, i8* %26) #13, !dbg !14607
  store i32 %call34, i32* %ret, align 4, !dbg !14608
  %27 = load i32, i32* %ret, align 4, !dbg !14609
  %cmp35 = icmp slt i32 %27, 0, !dbg !14611
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !14612

if.then37:                                        ; preds = %if.else
  br label %while.end, !dbg !14613

if.end38:                                         ; preds = %if.else
  %28 = load i16, i16* %size.addr, align 2, !dbg !14614
  %conv39 = zext i16 %28 to i32, !dbg !14614
  %29 = load i16, i16* %index.addr, align 2, !dbg !14615
  %conv40 = zext i16 %29 to i32, !dbg !14615
  %add41 = add i32 %conv40, %conv39, !dbg !14615
  %conv42 = trunc i32 %add41 to i16, !dbg !14615
  store i16 %conv42, i16* %index.addr, align 2, !dbg !14615
  %30 = load i16, i16* %size.addr, align 2, !dbg !14616
  %conv43 = zext i16 %30 to i32, !dbg !14616
  %31 = load i8*, i8** %data.addr, align 8, !dbg !14617
  %idx.ext44 = sext i32 %conv43 to i64, !dbg !14617
  %add.ptr45 = getelementptr i8, i8* %31, i64 %idx.ext44, !dbg !14617
  store i8* %add.ptr45, i8** %data.addr, align 8, !dbg !14617
  store i16 0, i16* %size.addr, align 2, !dbg !14618
  br label %while.end, !dbg !14619

if.end46:                                         ; preds = %if.end25
  br label %while.cond, !dbg !14573, !llvm.loop !14620

while.end:                                        ; preds = %if.end38, %if.then37, %if.then24, %while.cond
  %32 = load i32, i32* %ret, align 4, !dbg !14622
  %cmp47 = icmp eq i32 %32, -19, !dbg !14624
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !14625

if.then49:                                        ; preds = %while.end
  %33 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14626
  call void @rtl_set_unplug(%struct.r8152* %33) #13, !dbg !14627
  br label %if.end50, !dbg !14627

if.end50:                                         ; preds = %if.then49, %while.end
  %34 = load i32, i32* %ret, align 4, !dbg !14628
  store i32 %34, i32* %retval, align 4, !dbg !14629
  br label %return, !dbg !14629

return:                                           ; preds = %if.end50, %if.then13, %if.then8, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !14630
  ret i32 %35, !dbg !14630
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_registers(%struct.r8152* %tp, i16 zeroext %value, i16 zeroext %index, i16 zeroext %size, i8* %data) #2 !dbg !14631 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !11594, metadata !DIExpression()), !dbg !14634
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !11606, metadata !DIExpression()), !dbg !14637
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !11608, metadata !DIExpression()), !dbg !14638
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !11610, metadata !DIExpression()), !dbg !14639
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !11612, metadata !DIExpression()), !dbg !14640
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !11618, metadata !DIExpression()), !dbg !14642
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !11624, metadata !DIExpression()), !dbg !14644
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !11633, metadata !DIExpression()), !dbg !14647
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !11635, metadata !DIExpression()), !dbg !14648
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !11637, metadata !DIExpression()), !dbg !14649
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !11639, metadata !DIExpression()), !dbg !14650
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !11641, metadata !DIExpression()), !dbg !14651
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11643, metadata !DIExpression()), !dbg !14652
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !11645, metadata !DIExpression()), !dbg !14653
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !11647, metadata !DIExpression()), !dbg !14654
  %retval = alloca i32, align 4
  %tp.addr = alloca %struct.r8152*, align 8
  %value.addr = alloca i16, align 2
  %index.addr = alloca i16, align 2
  %size.addr = alloca i16, align 2
  %data.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %tmp = alloca i8*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !14655, metadata !DIExpression()), !dbg !14656
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !14657, metadata !DIExpression()), !dbg !14658
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14659, metadata !DIExpression()), !dbg !14660
  store i16 %size, i16* %size.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %size.addr, metadata !14661, metadata !DIExpression()), !dbg !14662
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !14663, metadata !DIExpression()), !dbg !14664
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14665, metadata !DIExpression()), !dbg !14666
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !14667, metadata !DIExpression()), !dbg !14668
  %0 = load i16, i16* %size.addr, align 2, !dbg !14669
  %conv = zext i16 %0 to i64, !dbg !14669
  store i64 %conv, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %1 = load i64, i64* %size.addr.i, align 8, !dbg !14670
  %2 = call i1 @llvm.is.constant.i64(i64 %1) #11, !dbg !14671
  br i1 %2, label %if.then.i, label %if.end9.i, !dbg !14672

if.then.i:                                        ; preds = %entry
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !14673
  %cmp.i = icmp ugt i64 %3, 8192, !dbg !14674
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !14675

if.then1.i:                                       ; preds = %if.then.i
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !14676
  %5 = load i32, i32* %flags.addr.i, align 4, !dbg !14677
  store i64 %4, i64* %size.addr.i.i, align 8
  store i32 %5, i32* %flags.addr.i.i, align 4
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !14678
  %call.i.i = call i32 @get_order(i64 %6) #15, !dbg !14679
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !14651
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !14680
  %8 = load i32, i32* %flags.addr.i.i, align 4, !dbg !14681
  %9 = load i32, i32* %order.i.i, align 4, !dbg !14682
  store i64 %7, i64* %size.addr.i.i.i, align 8
  store i32 %8, i32* %flags.addr.i.i.i, align 4
  store i32 %9, i32* %order.addr.i.i.i, align 4
  %10 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !14683
  %11 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !14684
  %12 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !14685
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %10, i32 %11, i32 %12) #16, !dbg !14686
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !14686
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !14686
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !14686
  call void @llvm.assume(i1 %maskcond.i.i.i) #11, !dbg !14686
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !14687
  br label %kmalloc.exit, !dbg !14687

if.end.i:                                         ; preds = %if.then.i
  %13 = load i64, i64* %size.addr.i, align 8, !dbg !14688
  store i64 %13, i64* %size.addr.i11.i, align 8
  %14 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14689
  %tobool.i.i = icmp ne i64 %14, 0, !dbg !14689
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !14690

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !14691
  br label %kmalloc_index.exit.i, !dbg !14691

if.end.i.i:                                       ; preds = %if.end.i
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14692
  %cmp.i.i = icmp ule i64 %15, 8, !dbg !14693
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !14694

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14695
  br label %kmalloc_index.exit.i, !dbg !14695

if.end2.i.i:                                      ; preds = %if.end.i.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14696
  %cmp3.i.i = icmp ugt i64 %16, 64, !dbg !14697
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !14698

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14699
  %cmp4.i.i = icmp ule i64 %17, 96, !dbg !14700
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !14701

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !14702
  br label %kmalloc_index.exit.i, !dbg !14702

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14703
  %cmp7.i.i = icmp ugt i64 %18, 128, !dbg !14704
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !14705

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14706
  %cmp9.i.i = icmp ule i64 %19, 192, !dbg !14707
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !14708

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !14709
  br label %kmalloc_index.exit.i, !dbg !14709

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14710
  %cmp12.i.i = icmp ule i64 %20, 8, !dbg !14711
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !14712

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14713
  br label %kmalloc_index.exit.i, !dbg !14713

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14714
  %cmp15.i.i = icmp ule i64 %21, 16, !dbg !14715
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !14716

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !14717
  br label %kmalloc_index.exit.i, !dbg !14717

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14718
  %cmp18.i.i = icmp ule i64 %22, 32, !dbg !14719
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !14720

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !14721
  br label %kmalloc_index.exit.i, !dbg !14721

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14722
  %cmp21.i.i = icmp ule i64 %23, 64, !dbg !14723
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !14724

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !14725
  br label %kmalloc_index.exit.i, !dbg !14725

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14726
  %cmp24.i.i = icmp ule i64 %24, 128, !dbg !14727
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !14728

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !14729
  br label %kmalloc_index.exit.i, !dbg !14729

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14730
  %cmp27.i.i = icmp ule i64 %25, 256, !dbg !14731
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !14732

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !14733
  br label %kmalloc_index.exit.i, !dbg !14733

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14734
  %cmp30.i.i = icmp ule i64 %26, 512, !dbg !14735
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !14736

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !14737
  br label %kmalloc_index.exit.i, !dbg !14737

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14738
  %cmp33.i.i = icmp ule i64 %27, 1024, !dbg !14739
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !14740

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !14741
  br label %kmalloc_index.exit.i, !dbg !14741

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14742
  %cmp36.i.i = icmp ule i64 %28, 2048, !dbg !14743
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !14744

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !14745
  br label %kmalloc_index.exit.i, !dbg !14745

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14746
  %cmp39.i.i = icmp ule i64 %29, 4096, !dbg !14747
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !14748

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !14749
  br label %kmalloc_index.exit.i, !dbg !14749

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14750
  %cmp42.i.i = icmp ule i64 %30, 8192, !dbg !14751
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !14752

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !14753
  br label %kmalloc_index.exit.i, !dbg !14753

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14754
  %cmp45.i.i = icmp ule i64 %31, 16384, !dbg !14755
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !14756

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !14757
  br label %kmalloc_index.exit.i, !dbg !14757

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14758
  %cmp48.i.i = icmp ule i64 %32, 32768, !dbg !14759
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !14760

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !14761
  br label %kmalloc_index.exit.i, !dbg !14761

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14762
  %cmp51.i.i = icmp ule i64 %33, 65536, !dbg !14763
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !14764

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !14765
  br label %kmalloc_index.exit.i, !dbg !14765

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14766
  %cmp54.i.i = icmp ule i64 %34, 131072, !dbg !14767
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !14768

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !14769
  br label %kmalloc_index.exit.i, !dbg !14769

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14770
  %cmp57.i.i = icmp ule i64 %35, 262144, !dbg !14771
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !14772

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !14773
  br label %kmalloc_index.exit.i, !dbg !14773

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14774
  %cmp60.i.i = icmp ule i64 %36, 524288, !dbg !14775
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !14776

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !14777
  br label %kmalloc_index.exit.i, !dbg !14777

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14778
  %cmp63.i.i = icmp ule i64 %37, 1048576, !dbg !14779
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !14780

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !14781
  br label %kmalloc_index.exit.i, !dbg !14781

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14782
  %cmp66.i.i = icmp ule i64 %38, 2097152, !dbg !14783
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !14784

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !14785
  br label %kmalloc_index.exit.i, !dbg !14785

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14786
  %cmp69.i.i = icmp ule i64 %39, 4194304, !dbg !14787
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !14788

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !14789
  br label %kmalloc_index.exit.i, !dbg !14789

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14790
  %cmp72.i.i = icmp ule i64 %40, 8388608, !dbg !14791
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !14792

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !14793
  br label %kmalloc_index.exit.i, !dbg !14793

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14794
  %cmp75.i.i = icmp ule i64 %41, 16777216, !dbg !14795
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !14796

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !14797
  br label %kmalloc_index.exit.i, !dbg !14797

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14798
  %cmp78.i.i = icmp ule i64 %42, 33554432, !dbg !14799
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !14800

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !14801
  br label %kmalloc_index.exit.i, !dbg !14801

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14802
  %cmp81.i.i = icmp ule i64 %43, 67108864, !dbg !14803
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !14804

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !14805
  br label %kmalloc_index.exit.i, !dbg !14805

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #11, !dbg !14806, !srcloc !11831
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 93) #11, !dbg !14807, !srcloc !11835
  unreachable, !dbg !14808

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %44 = load i32, i32* %retval.i.i, align 4, !dbg !14809
  store i32 %44, i32* %index.i, align 4, !dbg !14810
  %45 = load i32, i32* %index.i, align 4, !dbg !14811
  %tobool.i = icmp ne i32 %45, 0, !dbg !14811
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !14812

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !14813
  br label %kmalloc.exit, !dbg !14813

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %46 = load i32, i32* %flags.addr.i, align 4, !dbg !14814
  store i32 %46, i32* %flags.addr.i13.i, align 4
  %47 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !14815
  %and.i.i = and i32 %47, 17, !dbg !14815
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !14815
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !14815
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !14815
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !14815
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !14816

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !14817
  br label %kmalloc_type.exit.i, !dbg !14817

if.end.i16.i:                                     ; preds = %if.end4.i
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !14818
  %and2.i.i = and i32 %48, 1, !dbg !14819
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !14818
  %49 = zext i1 %tobool3.i.i to i64, !dbg !14818
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !14818
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !14820
  br label %kmalloc_type.exit.i, !dbg !14820

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %50 = load i32, i32* %retval.i12.i, align 4, !dbg !14821
  %idxprom.i = zext i32 %50 to i64, !dbg !14822
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !14822
  %51 = load i32, i32* %index.i, align 4, !dbg !14823
  %idxprom6.i = zext i32 %51 to i64, !dbg !14822
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !14822
  %52 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !14822
  %53 = load i32, i32* %flags.addr.i, align 4, !dbg !14824
  %54 = load i64, i64* %size.addr.i, align 8, !dbg !14825
  store %struct.kmem_cache* %52, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %53, i32* %flags.addr.i17.i, align 4
  store i64 %54, i64* %size.addr.i18.i, align 8
  %55 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !14826
  %56 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !14827
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %55, i32 %56) #16, !dbg !14828
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !14828
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !14828
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !14828
  call void @llvm.assume(i1 %maskcond.i.i) #11, !dbg !14828
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !14639
  %57 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !14829
  %58 = load i8*, i8** %ret.i.i, align 8, !dbg !14830
  %59 = load i64, i64* %size.addr.i18.i, align 8, !dbg !14831
  %60 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !14832
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %57, i8* %58, i64 %59, i32 %60) #16, !dbg !14833
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !14834
  %61 = load i8*, i8** %ret.i.i, align 8, !dbg !14835
  store i8* %61, i8** %retval.i, align 8, !dbg !14836
  br label %kmalloc.exit, !dbg !14836

if.end9.i:                                        ; preds = %entry
  %62 = load i64, i64* %size.addr.i, align 8, !dbg !14837
  %63 = load i32, i32* %flags.addr.i, align 4, !dbg !14838
  %call10.i = call noalias i8* @__kmalloc(i64 %62, i32 %63) #16, !dbg !14839
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !14839
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !14839
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !14839
  call void @llvm.assume(i1 %maskcond.i) #11, !dbg !14839
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !14840
  br label %kmalloc.exit, !dbg !14840

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %64 = load i8*, i8** %retval.i, align 8, !dbg !14841
  store i8* %64, i8** %tmp, align 8, !dbg !14842
  %65 = load i8*, i8** %tmp, align 8, !dbg !14843
  %tobool = icmp ne i8* %65, null, !dbg !14843
  br i1 %tobool, label %if.end, label %if.then, !dbg !14845

if.then:                                          ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !14846
  br label %return, !dbg !14846

if.end:                                           ; preds = %kmalloc.exit
  %66 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14847
  %udev = getelementptr inbounds %struct.r8152, %struct.r8152* %66, i32 0, i32 1, !dbg !14848
  %67 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !14848
  %68 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14849
  %udev1 = getelementptr inbounds %struct.r8152, %struct.r8152* %68, i32 0, i32 1, !dbg !14849
  %69 = load %struct.usb_device*, %struct.usb_device** %udev1, align 8, !dbg !14849
  %call2 = call i32 @__create_pipe(%struct.usb_device* %69, i32 0) #13, !dbg !14849
  %or = or i32 -2147483648, %call2, !dbg !14849
  %or3 = or i32 %or, 128, !dbg !14849
  %70 = load i16, i16* %value.addr, align 2, !dbg !14850
  %71 = load i16, i16* %index.addr, align 2, !dbg !14851
  %72 = load i8*, i8** %tmp, align 8, !dbg !14852
  %73 = load i16, i16* %size.addr, align 2, !dbg !14853
  %call4 = call i32 @usb_control_msg(%struct.usb_device* %67, i32 %or3, i8 zeroext 5, i8 zeroext -64, i16 zeroext %70, i16 zeroext %71, i8* %72, i16 zeroext %73, i32 500) #13, !dbg !14854
  store i32 %call4, i32* %ret, align 4, !dbg !14855
  %74 = load i32, i32* %ret, align 4, !dbg !14856
  %cmp = icmp slt i32 %74, 0, !dbg !14858
  br i1 %cmp, label %if.then6, label %if.else, !dbg !14859

if.then6:                                         ; preds = %if.end
  %75 = load i8*, i8** %data.addr, align 8, !dbg !14860
  %76 = load i16, i16* %size.addr, align 2, !dbg !14861
  %conv7 = zext i16 %76 to i64, !dbg !14861
  call void @llvm.memset.p0i8.i64(i8* align 1 %75, i8 -1, i64 %conv7, i1 false), !dbg !14862
  br label %if.end9, !dbg !14862

if.else:                                          ; preds = %if.end
  %77 = load i8*, i8** %data.addr, align 8, !dbg !14863
  %78 = load i8*, i8** %tmp, align 8, !dbg !14864
  %79 = load i16, i16* %size.addr, align 2, !dbg !14865
  %conv8 = zext i16 %79 to i64, !dbg !14865
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %77, i8* align 1 %78, i64 %conv8, i1 false), !dbg !14866
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then6
  %80 = load i8*, i8** %tmp, align 8, !dbg !14867
  call void @kfree(i8* %80) #13, !dbg !14868
  %81 = load i32, i32* %ret, align 4, !dbg !14869
  store i32 %81, i32* %retval, align 4, !dbg !14870
  br label %return, !dbg !14870

return:                                           ; preds = %if.end9, %if.then
  %82 = load i32, i32* %retval, align 4, !dbg !14871
  ret i32 %82, !dbg !14871
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl_set_unplug(%struct.r8152* %tp) #2 !dbg !14872 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !14873, metadata !DIExpression()), !dbg !14874
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14875
  %udev = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 1, !dbg !14877
  %1 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !14877
  %state = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 3, !dbg !14878
  %2 = load i32, i32* %state, align 8, !dbg !14878
  %cmp = icmp eq i32 %2, 0, !dbg !14879
  br i1 %cmp, label %if.then, label %if.end, !dbg !14880

if.then:                                          ; preds = %entry
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14881
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %3, i32 0, i32 0, !dbg !14883
  call void @set_bit(i64 0, i64* %flags) #13, !dbg !14884
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !14885, !srcloc !14886
  br label %if.end, !dbg !14887

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !14888
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @generic_ocp_write(%struct.r8152* %tp, i16 zeroext %index, i16 zeroext %byteen, i16 zeroext %size, i8* %data, i16 zeroext %type) #2 !dbg !14889 {
entry:
  %retval = alloca i32, align 4
  %tp.addr = alloca %struct.r8152*, align 8
  %index.addr = alloca i16, align 2
  %byteen.addr = alloca i16, align 2
  %size.addr = alloca i16, align 2
  %data.addr = alloca i8*, align 8
  %type.addr = alloca i16, align 2
  %ret = alloca i32, align 4
  %byteen_start = alloca i16, align 2
  %byteen_end = alloca i16, align 2
  %byen = alloca i16, align 2
  %limit = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !14892, metadata !DIExpression()), !dbg !14893
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14894, metadata !DIExpression()), !dbg !14895
  store i16 %byteen, i16* %byteen.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %byteen.addr, metadata !14896, metadata !DIExpression()), !dbg !14897
  store i16 %size, i16* %size.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %size.addr, metadata !14898, metadata !DIExpression()), !dbg !14899
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !14900, metadata !DIExpression()), !dbg !14901
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !14902, metadata !DIExpression()), !dbg !14903
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14904, metadata !DIExpression()), !dbg !14905
  call void @llvm.dbg.declare(metadata i16* %byteen_start, metadata !14906, metadata !DIExpression()), !dbg !14907
  call void @llvm.dbg.declare(metadata i16* %byteen_end, metadata !14908, metadata !DIExpression()), !dbg !14909
  call void @llvm.dbg.declare(metadata i16* %byen, metadata !14910, metadata !DIExpression()), !dbg !14911
  call void @llvm.dbg.declare(metadata i16* %limit, metadata !14912, metadata !DIExpression()), !dbg !14913
  store i16 512, i16* %limit, align 2, !dbg !14913
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14914
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 0, !dbg !14916
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !14917
  br i1 %call, label %if.then, label %if.end, !dbg !14918

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !14919
  br label %return, !dbg !14919

if.end:                                           ; preds = %entry
  %1 = load i16, i16* %size.addr, align 2, !dbg !14920
  %conv = zext i16 %1 to i32, !dbg !14920
  %and = and i32 %conv, 3, !dbg !14922
  %tobool = icmp ne i32 %and, 0, !dbg !14922
  br i1 %tobool, label %if.then8, label %lor.lhs.false, !dbg !14923

lor.lhs.false:                                    ; preds = %if.end
  %2 = load i16, i16* %size.addr, align 2, !dbg !14924
  %tobool1 = icmp ne i16 %2, 0, !dbg !14924
  br i1 %tobool1, label %lor.lhs.false2, label %if.then8, !dbg !14925

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %3 = load i16, i16* %index.addr, align 2, !dbg !14926
  %conv3 = zext i16 %3 to i32, !dbg !14926
  %and4 = and i32 %conv3, 3, !dbg !14927
  %tobool5 = icmp ne i32 %and4, 0, !dbg !14927
  br i1 %tobool5, label %if.then8, label %lor.lhs.false6, !dbg !14928

lor.lhs.false6:                                   ; preds = %lor.lhs.false2
  %4 = load i8*, i8** %data.addr, align 8, !dbg !14929
  %tobool7 = icmp ne i8* %4, null, !dbg !14929
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !14930

if.then8:                                         ; preds = %lor.lhs.false6, %lor.lhs.false2, %lor.lhs.false, %if.end
  store i32 -1, i32* %retval, align 4, !dbg !14931
  br label %return, !dbg !14931

if.end9:                                          ; preds = %lor.lhs.false6
  %5 = load i16, i16* %index.addr, align 2, !dbg !14932
  %conv10 = zext i16 %5 to i32, !dbg !14934
  %6 = load i16, i16* %size.addr, align 2, !dbg !14935
  %conv11 = zext i16 %6 to i32, !dbg !14936
  %add = add i32 %conv10, %conv11, !dbg !14937
  %cmp = icmp ugt i32 %add, 65535, !dbg !14938
  br i1 %cmp, label %if.then13, label %if.end14, !dbg !14939

if.then13:                                        ; preds = %if.end9
  store i32 -1, i32* %retval, align 4, !dbg !14940
  br label %return, !dbg !14940

if.end14:                                         ; preds = %if.end9
  %7 = load i16, i16* %byteen.addr, align 2, !dbg !14941
  %conv15 = zext i16 %7 to i32, !dbg !14941
  %and16 = and i32 %conv15, 15, !dbg !14942
  %conv17 = trunc i32 %and16 to i16, !dbg !14941
  store i16 %conv17, i16* %byteen_start, align 2, !dbg !14943
  %8 = load i16, i16* %byteen.addr, align 2, !dbg !14944
  %conv18 = zext i16 %8 to i32, !dbg !14944
  %and19 = and i32 %conv18, 240, !dbg !14945
  %conv20 = trunc i32 %and19 to i16, !dbg !14944
  store i16 %conv20, i16* %byteen_end, align 2, !dbg !14946
  %9 = load i16, i16* %byteen_start, align 2, !dbg !14947
  %conv21 = zext i16 %9 to i32, !dbg !14947
  %10 = load i16, i16* %byteen_start, align 2, !dbg !14948
  %conv22 = zext i16 %10 to i32, !dbg !14948
  %shl = shl i32 %conv22, 4, !dbg !14949
  %or = or i32 %conv21, %shl, !dbg !14950
  %conv23 = trunc i32 %or to i16, !dbg !14947
  store i16 %conv23, i16* %byen, align 2, !dbg !14951
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14952
  %12 = load i16, i16* %index.addr, align 2, !dbg !14953
  %13 = load i16, i16* %type.addr, align 2, !dbg !14954
  %conv24 = zext i16 %13 to i32, !dbg !14954
  %14 = load i16, i16* %byen, align 2, !dbg !14955
  %conv25 = zext i16 %14 to i32, !dbg !14955
  %or26 = or i32 %conv24, %conv25, !dbg !14956
  %conv27 = trunc i32 %or26 to i16, !dbg !14954
  %15 = load i8*, i8** %data.addr, align 8, !dbg !14957
  %call28 = call i32 @set_registers(%struct.r8152* %11, i16 zeroext %12, i16 zeroext %conv27, i16 zeroext 4, i8* %15) #13, !dbg !14958
  store i32 %call28, i32* %ret, align 4, !dbg !14959
  %16 = load i32, i32* %ret, align 4, !dbg !14960
  %cmp29 = icmp slt i32 %16, 0, !dbg !14962
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !14963

if.then31:                                        ; preds = %if.end14
  br label %error1, !dbg !14964

if.end32:                                         ; preds = %if.end14
  %17 = load i16, i16* %index.addr, align 2, !dbg !14965
  %conv33 = zext i16 %17 to i32, !dbg !14965
  %add34 = add i32 %conv33, 4, !dbg !14965
  %conv35 = trunc i32 %add34 to i16, !dbg !14965
  store i16 %conv35, i16* %index.addr, align 2, !dbg !14965
  %18 = load i8*, i8** %data.addr, align 8, !dbg !14966
  %add.ptr = getelementptr i8, i8* %18, i64 4, !dbg !14966
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !14966
  %19 = load i16, i16* %size.addr, align 2, !dbg !14967
  %conv36 = zext i16 %19 to i32, !dbg !14967
  %sub = sub i32 %conv36, 4, !dbg !14967
  %conv37 = trunc i32 %sub to i16, !dbg !14967
  store i16 %conv37, i16* %size.addr, align 2, !dbg !14967
  %20 = load i16, i16* %size.addr, align 2, !dbg !14968
  %tobool38 = icmp ne i16 %20, 0, !dbg !14968
  br i1 %tobool38, label %if.then39, label %if.end96, !dbg !14970

if.then39:                                        ; preds = %if.end32
  %21 = load i16, i16* %size.addr, align 2, !dbg !14971
  %conv40 = zext i16 %21 to i32, !dbg !14971
  %sub41 = sub i32 %conv40, 4, !dbg !14971
  %conv42 = trunc i32 %sub41 to i16, !dbg !14971
  store i16 %conv42, i16* %size.addr, align 2, !dbg !14971
  br label %while.cond, !dbg !14973

while.cond:                                       ; preds = %if.end82, %if.then39
  %22 = load i16, i16* %size.addr, align 2, !dbg !14974
  %tobool43 = icmp ne i16 %22, 0, !dbg !14973
  br i1 %tobool43, label %while.body, label %while.end, !dbg !14973

while.body:                                       ; preds = %while.cond
  %23 = load i16, i16* %size.addr, align 2, !dbg !14975
  %conv44 = zext i16 %23 to i32, !dbg !14975
  %24 = load i16, i16* %limit, align 2, !dbg !14978
  %conv45 = zext i16 %24 to i32, !dbg !14978
  %cmp46 = icmp sgt i32 %conv44, %conv45, !dbg !14979
  br i1 %cmp46, label %if.then48, label %if.else, !dbg !14980

if.then48:                                        ; preds = %while.body
  %25 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !14981
  %26 = load i16, i16* %index.addr, align 2, !dbg !14983
  %27 = load i16, i16* %type.addr, align 2, !dbg !14984
  %conv49 = zext i16 %27 to i32, !dbg !14984
  %or50 = or i32 %conv49, 255, !dbg !14985
  %conv51 = trunc i32 %or50 to i16, !dbg !14984
  %28 = load i16, i16* %limit, align 2, !dbg !14986
  %29 = load i8*, i8** %data.addr, align 8, !dbg !14987
  %call52 = call i32 @set_registers(%struct.r8152* %25, i16 zeroext %26, i16 zeroext %conv51, i16 zeroext %28, i8* %29) #13, !dbg !14988
  store i32 %call52, i32* %ret, align 4, !dbg !14989
  %30 = load i32, i32* %ret, align 4, !dbg !14990
  %cmp53 = icmp slt i32 %30, 0, !dbg !14992
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !14993

if.then55:                                        ; preds = %if.then48
  br label %error1, !dbg !14994

if.end56:                                         ; preds = %if.then48
  %31 = load i16, i16* %limit, align 2, !dbg !14995
  %conv57 = zext i16 %31 to i32, !dbg !14995
  %32 = load i16, i16* %index.addr, align 2, !dbg !14996
  %conv58 = zext i16 %32 to i32, !dbg !14996
  %add59 = add i32 %conv58, %conv57, !dbg !14996
  %conv60 = trunc i32 %add59 to i16, !dbg !14996
  store i16 %conv60, i16* %index.addr, align 2, !dbg !14996
  %33 = load i16, i16* %limit, align 2, !dbg !14997
  %conv61 = zext i16 %33 to i32, !dbg !14997
  %34 = load i8*, i8** %data.addr, align 8, !dbg !14998
  %idx.ext = sext i32 %conv61 to i64, !dbg !14998
  %add.ptr62 = getelementptr i8, i8* %34, i64 %idx.ext, !dbg !14998
  store i8* %add.ptr62, i8** %data.addr, align 8, !dbg !14998
  %35 = load i16, i16* %limit, align 2, !dbg !14999
  %conv63 = zext i16 %35 to i32, !dbg !14999
  %36 = load i16, i16* %size.addr, align 2, !dbg !15000
  %conv64 = zext i16 %36 to i32, !dbg !15000
  %sub65 = sub i32 %conv64, %conv63, !dbg !15000
  %conv66 = trunc i32 %sub65 to i16, !dbg !15000
  store i16 %conv66, i16* %size.addr, align 2, !dbg !15000
  br label %if.end82, !dbg !15001

if.else:                                          ; preds = %while.body
  %37 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15002
  %38 = load i16, i16* %index.addr, align 2, !dbg !15004
  %39 = load i16, i16* %type.addr, align 2, !dbg !15005
  %conv67 = zext i16 %39 to i32, !dbg !15005
  %or68 = or i32 %conv67, 255, !dbg !15006
  %conv69 = trunc i32 %or68 to i16, !dbg !15005
  %40 = load i16, i16* %size.addr, align 2, !dbg !15007
  %41 = load i8*, i8** %data.addr, align 8, !dbg !15008
  %call70 = call i32 @set_registers(%struct.r8152* %37, i16 zeroext %38, i16 zeroext %conv69, i16 zeroext %40, i8* %41) #13, !dbg !15009
  store i32 %call70, i32* %ret, align 4, !dbg !15010
  %42 = load i32, i32* %ret, align 4, !dbg !15011
  %cmp71 = icmp slt i32 %42, 0, !dbg !15013
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !15014

if.then73:                                        ; preds = %if.else
  br label %error1, !dbg !15015

if.end74:                                         ; preds = %if.else
  %43 = load i16, i16* %size.addr, align 2, !dbg !15016
  %conv75 = zext i16 %43 to i32, !dbg !15016
  %44 = load i16, i16* %index.addr, align 2, !dbg !15017
  %conv76 = zext i16 %44 to i32, !dbg !15017
  %add77 = add i32 %conv76, %conv75, !dbg !15017
  %conv78 = trunc i32 %add77 to i16, !dbg !15017
  store i16 %conv78, i16* %index.addr, align 2, !dbg !15017
  %45 = load i16, i16* %size.addr, align 2, !dbg !15018
  %conv79 = zext i16 %45 to i32, !dbg !15018
  %46 = load i8*, i8** %data.addr, align 8, !dbg !15019
  %idx.ext80 = sext i32 %conv79 to i64, !dbg !15019
  %add.ptr81 = getelementptr i8, i8* %46, i64 %idx.ext80, !dbg !15019
  store i8* %add.ptr81, i8** %data.addr, align 8, !dbg !15019
  store i16 0, i16* %size.addr, align 2, !dbg !15020
  br label %while.end, !dbg !15021

if.end82:                                         ; preds = %if.end56
  br label %while.cond, !dbg !14973, !llvm.loop !15022

while.end:                                        ; preds = %if.end74, %while.cond
  %47 = load i16, i16* %byteen_end, align 2, !dbg !15024
  %conv83 = zext i16 %47 to i32, !dbg !15024
  %48 = load i16, i16* %byteen_end, align 2, !dbg !15025
  %conv84 = zext i16 %48 to i32, !dbg !15025
  %shr = ashr i32 %conv84, 4, !dbg !15026
  %or85 = or i32 %conv83, %shr, !dbg !15027
  %conv86 = trunc i32 %or85 to i16, !dbg !15024
  store i16 %conv86, i16* %byen, align 2, !dbg !15028
  %49 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15029
  %50 = load i16, i16* %index.addr, align 2, !dbg !15030
  %51 = load i16, i16* %type.addr, align 2, !dbg !15031
  %conv87 = zext i16 %51 to i32, !dbg !15031
  %52 = load i16, i16* %byen, align 2, !dbg !15032
  %conv88 = zext i16 %52 to i32, !dbg !15032
  %or89 = or i32 %conv87, %conv88, !dbg !15033
  %conv90 = trunc i32 %or89 to i16, !dbg !15031
  %53 = load i8*, i8** %data.addr, align 8, !dbg !15034
  %call91 = call i32 @set_registers(%struct.r8152* %49, i16 zeroext %50, i16 zeroext %conv90, i16 zeroext 4, i8* %53) #13, !dbg !15035
  store i32 %call91, i32* %ret, align 4, !dbg !15036
  %54 = load i32, i32* %ret, align 4, !dbg !15037
  %cmp92 = icmp slt i32 %54, 0, !dbg !15039
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !15040

if.then94:                                        ; preds = %while.end
  br label %error1, !dbg !15041

if.end95:                                         ; preds = %while.end
  br label %if.end96, !dbg !15042

if.end96:                                         ; preds = %if.end95, %if.end32
  br label %error1, !dbg !14968

error1:                                           ; preds = %if.end96, %if.then94, %if.then73, %if.then55, %if.then31
  call void @llvm.dbg.label(metadata !15043), !dbg !15044
  %55 = load i32, i32* %ret, align 4, !dbg !15045
  %cmp97 = icmp eq i32 %55, -19, !dbg !15047
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !15048

if.then99:                                        ; preds = %error1
  %56 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15049
  call void @rtl_set_unplug(%struct.r8152* %56) #13, !dbg !15050
  br label %if.end100, !dbg !15050

if.end100:                                        ; preds = %if.then99, %error1
  %57 = load i32, i32* %ret, align 4, !dbg !15051
  store i32 %57, i32* %retval, align 4, !dbg !15052
  br label %return, !dbg !15052

return:                                           ; preds = %if.end100, %if.then13, %if.then8, %if.then
  %58 = load i32, i32* %retval, align 4, !dbg !15053
  ret i32 %58, !dbg !15053
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_registers(%struct.r8152* %tp, i16 zeroext %value, i16 zeroext %index, i16 zeroext %size, i8* %data) #2 !dbg !15054 {
entry:
  %retval = alloca i32, align 4
  %tp.addr = alloca %struct.r8152*, align 8
  %value.addr = alloca i16, align 2
  %index.addr = alloca i16, align 2
  %size.addr = alloca i16, align 2
  %data.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %tmp = alloca i8*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !15055, metadata !DIExpression()), !dbg !15056
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !15057, metadata !DIExpression()), !dbg !15058
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !15059, metadata !DIExpression()), !dbg !15060
  store i16 %size, i16* %size.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %size.addr, metadata !15061, metadata !DIExpression()), !dbg !15062
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !15063, metadata !DIExpression()), !dbg !15064
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15065, metadata !DIExpression()), !dbg !15066
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !15067, metadata !DIExpression()), !dbg !15068
  %0 = load i8*, i8** %data.addr, align 8, !dbg !15069
  %1 = load i16, i16* %size.addr, align 2, !dbg !15070
  %conv = zext i16 %1 to i64, !dbg !15070
  %call = call i8* @kmemdup(i8* %0, i64 %conv, i32 3264) #13, !dbg !15071
  store i8* %call, i8** %tmp, align 8, !dbg !15072
  %2 = load i8*, i8** %tmp, align 8, !dbg !15073
  %tobool = icmp ne i8* %2, null, !dbg !15073
  br i1 %tobool, label %if.end, label %if.then, !dbg !15075

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !15076
  br label %return, !dbg !15076

if.end:                                           ; preds = %entry
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15077
  %udev = getelementptr inbounds %struct.r8152, %struct.r8152* %3, i32 0, i32 1, !dbg !15078
  %4 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !15078
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15079
  %udev1 = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 1, !dbg !15079
  %6 = load %struct.usb_device*, %struct.usb_device** %udev1, align 8, !dbg !15079
  %call2 = call i32 @__create_pipe(%struct.usb_device* %6, i32 0) #13, !dbg !15079
  %or = or i32 -2147483648, %call2, !dbg !15079
  %7 = load i16, i16* %value.addr, align 2, !dbg !15080
  %8 = load i16, i16* %index.addr, align 2, !dbg !15081
  %9 = load i8*, i8** %tmp, align 8, !dbg !15082
  %10 = load i16, i16* %size.addr, align 2, !dbg !15083
  %call3 = call i32 @usb_control_msg(%struct.usb_device* %4, i32 %or, i8 zeroext 5, i8 zeroext 64, i16 zeroext %7, i16 zeroext %8, i8* %9, i16 zeroext %10, i32 500) #13, !dbg !15084
  store i32 %call3, i32* %ret, align 4, !dbg !15085
  %11 = load i8*, i8** %tmp, align 8, !dbg !15086
  call void @kfree(i8* %11) #13, !dbg !15087
  %12 = load i32, i32* %ret, align 4, !dbg !15088
  store i32 %12, i32* %retval, align 4, !dbg !15089
  br label %return, !dbg !15089

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !15090
  ret i32 %13, !dbg !15090
}

; Function Attrs: noredzone
declare dso_local i8* @kmemdup(i8*, i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_tx_qlen(%struct.r8152* %tp) #2 !dbg !15091 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %netdev = alloca %struct.net_device*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !15092, metadata !DIExpression()), !dbg !15093
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !15094, metadata !DIExpression()), !dbg !15095
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15096
  %netdev1 = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 4, !dbg !15097
  %1 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !15097
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !15095
  %2 = load i32, i32* @agg_buf_sz, align 4, !dbg !15098
  %conv = zext i32 %2 to i64, !dbg !15098
  %3 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !15099
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 44, !dbg !15100
  %4 = load i32, i32* %mtu, align 8, !dbg !15100
  %add = add i32 %4, 18, !dbg !15101
  %add2 = add i32 %add, 4, !dbg !15102
  %conv3 = zext i32 %add2 to i64, !dbg !15099
  %add4 = add i64 %conv3, 8, !dbg !15103
  %div = udiv i64 %conv, %add4, !dbg !15104
  %conv5 = trunc i64 %div to i32, !dbg !15098
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15105
  %tx_qlen = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 29, !dbg !15106
  store i32 %conv5, i32* %tx_qlen, align 4, !dbg !15107
  ret void, !dbg !15108
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl_set_eee_plus(%struct.r8152* %tp) #2 !dbg !15109 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  %speed = alloca i8, align 1
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !15110, metadata !DIExpression()), !dbg !15111
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !15112, metadata !DIExpression()), !dbg !15113
  call void @llvm.dbg.declare(metadata i8* %speed, metadata !15114, metadata !DIExpression()), !dbg !15115
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15116
  %call = call zeroext i8 @rtl8152_get_speed(%struct.r8152* %0) #13, !dbg !15117
  store i8 %call, i8* %speed, align 1, !dbg !15118
  %1 = load i8, i8* %speed, align 1, !dbg !15119
  %conv = zext i8 %1 to i32, !dbg !15119
  %and = and i32 %conv, 4, !dbg !15121
  %tobool = icmp ne i32 %and, 0, !dbg !15121
  br i1 %tobool, label %if.then, label %if.else, !dbg !15122

if.then:                                          ; preds = %entry
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15123
  %call1 = call zeroext i16 @ocp_read_word(%struct.r8152* %2, i16 zeroext 256, i16 zeroext -8064) #13, !dbg !15125
  %conv2 = zext i16 %call1 to i32, !dbg !15125
  store i32 %conv2, i32* %ocp_data, align 4, !dbg !15126
  %3 = load i32, i32* %ocp_data, align 4, !dbg !15127
  %or = or i32 %3, 2, !dbg !15127
  store i32 %or, i32* %ocp_data, align 4, !dbg !15127
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15128
  %5 = load i32, i32* %ocp_data, align 4, !dbg !15129
  call void @ocp_write_word(%struct.r8152* %4, i16 zeroext 256, i16 zeroext -8064, i32 %5) #13, !dbg !15130
  br label %if.end, !dbg !15131

if.else:                                          ; preds = %entry
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15132
  %call3 = call zeroext i16 @ocp_read_word(%struct.r8152* %6, i16 zeroext 256, i16 zeroext -8064) #13, !dbg !15134
  %conv4 = zext i16 %call3 to i32, !dbg !15134
  store i32 %conv4, i32* %ocp_data, align 4, !dbg !15135
  %7 = load i32, i32* %ocp_data, align 4, !dbg !15136
  %and5 = and i32 %7, -3, !dbg !15136
  store i32 %and5, i32* %ocp_data, align 4, !dbg !15136
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15137
  %9 = load i32, i32* %ocp_data, align 4, !dbg !15138
  call void @ocp_write_word(%struct.r8152* %8, i16 zeroext 256, i16 zeroext -8064, i32 %9) #13, !dbg !15139
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !15140
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl_enable(%struct.r8152* %tp) #2 !dbg !15141 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !15142, metadata !DIExpression()), !dbg !15143
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !15144, metadata !DIExpression()), !dbg !15145
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15146
  call void @r8152b_reset_packet_filter(%struct.r8152* %0) #13, !dbg !15147
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15148
  %call = call zeroext i8 @ocp_read_byte(%struct.r8152* %1, i16 zeroext 256, i16 zeroext -6125) #13, !dbg !15149
  %conv = zext i8 %call to i32, !dbg !15149
  store i32 %conv, i32* %ocp_data, align 4, !dbg !15150
  %2 = load i32, i32* %ocp_data, align 4, !dbg !15151
  %or = or i32 %2, 12, !dbg !15151
  store i32 %or, i32* %ocp_data, align 4, !dbg !15151
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15152
  %4 = load i32, i32* %ocp_data, align 4, !dbg !15153
  call void @ocp_write_byte(%struct.r8152* %3, i16 zeroext 256, i16 zeroext -6125, i32 %4) #13, !dbg !15154
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15155
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 39, !dbg !15156
  %6 = load i8, i8* %version, align 8, !dbg !15156
  %conv1 = zext i8 %6 to i32, !dbg !15155
  switch i32 %conv1, label %sw.default [
    i32 8, label %sw.bb
    i32 9, label %sw.bb
  ], !dbg !15157

sw.bb:                                            ; preds = %entry, %entry
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15158
  call void @r8153b_rx_agg_chg_indicate(%struct.r8152* %7) #13, !dbg !15160
  br label %sw.epilog, !dbg !15161

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !15162

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15163
  call void @rxdy_gated_en(%struct.r8152* %8, i1 zeroext false) #13, !dbg !15164
  ret i32 0, !dbg !15165
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @rtl8152_get_speed(%struct.r8152* %tp) #2 !dbg !15166 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !15169, metadata !DIExpression()), !dbg !15170
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15171
  %call = call zeroext i8 @ocp_read_byte(%struct.r8152* %0, i16 zeroext 256, i16 zeroext -5880) #13, !dbg !15172
  ret i8 %call, !dbg !15173
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @ocp_read_byte(%struct.r8152* %tp, i16 zeroext %type, i16 zeroext %index) #2 !dbg !15174 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %type.addr = alloca i16, align 2
  %index.addr = alloca i16, align 2
  %data = alloca i32, align 4
  %tmp = alloca i32, align 4
  %shift = alloca i8, align 1
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !15177, metadata !DIExpression()), !dbg !15178
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !15179, metadata !DIExpression()), !dbg !15180
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !15181, metadata !DIExpression()), !dbg !15182
  call void @llvm.dbg.declare(metadata i32* %data, metadata !15183, metadata !DIExpression()), !dbg !15184
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !15185, metadata !DIExpression()), !dbg !15186
  call void @llvm.dbg.declare(metadata i8* %shift, metadata !15187, metadata !DIExpression()), !dbg !15188
  %0 = load i16, i16* %index.addr, align 2, !dbg !15189
  %conv = zext i16 %0 to i32, !dbg !15189
  %and = and i32 %conv, 3, !dbg !15190
  %conv1 = trunc i32 %and to i8, !dbg !15189
  store i8 %conv1, i8* %shift, align 1, !dbg !15188
  %1 = load i16, i16* %index.addr, align 2, !dbg !15191
  %conv2 = zext i16 %1 to i32, !dbg !15191
  %and3 = and i32 %conv2, -4, !dbg !15191
  %conv4 = trunc i32 %and3 to i16, !dbg !15191
  store i16 %conv4, i16* %index.addr, align 2, !dbg !15191
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15192
  %3 = load i16, i16* %index.addr, align 2, !dbg !15193
  %4 = bitcast i32* %tmp to i8*, !dbg !15194
  %5 = load i16, i16* %type.addr, align 2, !dbg !15195
  %call = call i32 @generic_ocp_read(%struct.r8152* %2, i16 zeroext %3, i16 zeroext 4, i8* %4, i16 zeroext %5) #13, !dbg !15196
  %6 = load i32, i32* %tmp, align 4, !dbg !15197
  store i32 %6, i32* %data, align 4, !dbg !15198
  %7 = load i8, i8* %shift, align 1, !dbg !15199
  %conv5 = zext i8 %7 to i32, !dbg !15199
  %mul = mul i32 %conv5, 8, !dbg !15200
  %8 = load i32, i32* %data, align 4, !dbg !15201
  %shr = lshr i32 %8, %mul, !dbg !15201
  store i32 %shr, i32* %data, align 4, !dbg !15201
  %9 = load i32, i32* %data, align 4, !dbg !15202
  %and6 = and i32 %9, 255, !dbg !15202
  store i32 %and6, i32* %data, align 4, !dbg !15202
  %10 = load i32, i32* %data, align 4, !dbg !15203
  %conv7 = trunc i32 %10 to i8, !dbg !15204
  ret i8 %conv7, !dbg !15205
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8152b_reset_packet_filter(%struct.r8152* %tp) #2 !dbg !15206 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !15207, metadata !DIExpression()), !dbg !15208
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !15209, metadata !DIExpression()), !dbg !15210
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15211
  %call = call zeroext i16 @ocp_read_word(%struct.r8152* %0, i16 zeroext 256, i16 zeroext -16204) #13, !dbg !15212
  %conv = zext i16 %call to i32, !dbg !15212
  store i32 %conv, i32* %ocp_data, align 4, !dbg !15213
  %1 = load i32, i32* %ocp_data, align 4, !dbg !15214
  %and = and i32 %1, -2, !dbg !15214
  store i32 %and, i32* %ocp_data, align 4, !dbg !15214
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15215
  %3 = load i32, i32* %ocp_data, align 4, !dbg !15216
  call void @ocp_write_word(%struct.r8152* %2, i16 zeroext 256, i16 zeroext -16204, i32 %3) #13, !dbg !15217
  %4 = load i32, i32* %ocp_data, align 4, !dbg !15218
  %or = or i32 %4, 1, !dbg !15218
  store i32 %or, i32* %ocp_data, align 4, !dbg !15218
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15219
  %6 = load i32, i32* %ocp_data, align 4, !dbg !15220
  call void @ocp_write_word(%struct.r8152* %5, i16 zeroext 256, i16 zeroext -16204, i32 %6) #13, !dbg !15221
  ret void, !dbg !15222
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ocp_write_byte(%struct.r8152* %tp, i16 zeroext %type, i16 zeroext %index, i32 %data) #2 !dbg !15223 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %type.addr = alloca i16, align 2
  %index.addr = alloca i16, align 2
  %data.addr = alloca i32, align 4
  %mask = alloca i32, align 4
  %tmp = alloca i32, align 4
  %byen = alloca i16, align 2
  %shift = alloca i8, align 1
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !15224, metadata !DIExpression()), !dbg !15225
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !15226, metadata !DIExpression()), !dbg !15227
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !15228, metadata !DIExpression()), !dbg !15229
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !15230, metadata !DIExpression()), !dbg !15231
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !15232, metadata !DIExpression()), !dbg !15233
  store i32 255, i32* %mask, align 4, !dbg !15233
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !15234, metadata !DIExpression()), !dbg !15235
  call void @llvm.dbg.declare(metadata i16* %byen, metadata !15236, metadata !DIExpression()), !dbg !15237
  store i16 17, i16* %byen, align 2, !dbg !15237
  call void @llvm.dbg.declare(metadata i8* %shift, metadata !15238, metadata !DIExpression()), !dbg !15239
  %0 = load i16, i16* %index.addr, align 2, !dbg !15240
  %conv = zext i16 %0 to i32, !dbg !15240
  %and = and i32 %conv, 3, !dbg !15241
  %conv1 = trunc i32 %and to i8, !dbg !15240
  store i8 %conv1, i8* %shift, align 1, !dbg !15239
  %1 = load i32, i32* %mask, align 4, !dbg !15242
  %2 = load i32, i32* %data.addr, align 4, !dbg !15243
  %and2 = and i32 %2, %1, !dbg !15243
  store i32 %and2, i32* %data.addr, align 4, !dbg !15243
  %3 = load i16, i16* %index.addr, align 2, !dbg !15244
  %conv3 = zext i16 %3 to i32, !dbg !15244
  %and4 = and i32 %conv3, 3, !dbg !15246
  %tobool = icmp ne i32 %and4, 0, !dbg !15246
  br i1 %tobool, label %if.then, label %if.end, !dbg !15247

if.then:                                          ; preds = %entry
  %4 = load i8, i8* %shift, align 1, !dbg !15248
  %conv5 = zext i8 %4 to i32, !dbg !15248
  %5 = load i16, i16* %byen, align 2, !dbg !15250
  %conv6 = zext i16 %5 to i32, !dbg !15250
  %shl = shl i32 %conv6, %conv5, !dbg !15250
  %conv7 = trunc i32 %shl to i16, !dbg !15250
  store i16 %conv7, i16* %byen, align 2, !dbg !15250
  %6 = load i8, i8* %shift, align 1, !dbg !15251
  %conv8 = zext i8 %6 to i32, !dbg !15251
  %mul = mul i32 %conv8, 8, !dbg !15252
  %7 = load i32, i32* %mask, align 4, !dbg !15253
  %shl9 = shl i32 %7, %mul, !dbg !15253
  store i32 %shl9, i32* %mask, align 4, !dbg !15253
  %8 = load i8, i8* %shift, align 1, !dbg !15254
  %conv10 = zext i8 %8 to i32, !dbg !15254
  %mul11 = mul i32 %conv10, 8, !dbg !15255
  %9 = load i32, i32* %data.addr, align 4, !dbg !15256
  %shl12 = shl i32 %9, %mul11, !dbg !15256
  store i32 %shl12, i32* %data.addr, align 4, !dbg !15256
  %10 = load i16, i16* %index.addr, align 2, !dbg !15257
  %conv13 = zext i16 %10 to i32, !dbg !15257
  %and14 = and i32 %conv13, -4, !dbg !15257
  %conv15 = trunc i32 %and14 to i16, !dbg !15257
  store i16 %conv15, i16* %index.addr, align 2, !dbg !15257
  br label %if.end, !dbg !15258

if.end:                                           ; preds = %if.then, %entry
  %11 = load i32, i32* %data.addr, align 4, !dbg !15259
  store i32 %11, i32* %tmp, align 4, !dbg !15260
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15261
  %13 = load i16, i16* %index.addr, align 2, !dbg !15262
  %14 = load i16, i16* %byen, align 2, !dbg !15263
  %15 = bitcast i32* %tmp to i8*, !dbg !15264
  %16 = load i16, i16* %type.addr, align 2, !dbg !15265
  %call = call i32 @generic_ocp_write(%struct.r8152* %12, i16 zeroext %13, i16 zeroext %14, i16 zeroext 4, i8* %15, i16 zeroext %16) #13, !dbg !15266
  ret void, !dbg !15267
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153b_rx_agg_chg_indicate(%struct.r8152* %tp) #2 !dbg !15268 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !15269, metadata !DIExpression()), !dbg !15270
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15271
  call void @ocp_write_byte(%struct.r8152* %0, i16 zeroext 0, i16 zeroext -11209, i32 3) #13, !dbg !15272
  ret void, !dbg !15273
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rxdy_gated_en(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !15274 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !15275, metadata !DIExpression()), !dbg !15276
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !15277, metadata !DIExpression()), !dbg !15278
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !15279, metadata !DIExpression()), !dbg !15280
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15281
  %call = call zeroext i16 @ocp_read_word(%struct.r8152* %0, i16 zeroext 256, i16 zeroext -6054) #13, !dbg !15282
  %conv = zext i16 %call to i32, !dbg !15282
  store i32 %conv, i32* %ocp_data, align 4, !dbg !15283
  %1 = load i8, i8* %enable.addr, align 1, !dbg !15284
  %tobool = trunc i8 %1 to i1, !dbg !15284
  br i1 %tobool, label %if.then, label %if.else, !dbg !15286

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ocp_data, align 4, !dbg !15287
  %or = or i32 %2, 8, !dbg !15287
  store i32 %or, i32* %ocp_data, align 4, !dbg !15287
  br label %if.end, !dbg !15288

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %ocp_data, align 4, !dbg !15289
  %and = and i32 %3, -9, !dbg !15289
  store i32 %and, i32* %ocp_data, align 4, !dbg !15289
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15290
  %5 = load i32, i32* %ocp_data, align 4, !dbg !15291
  call void @ocp_write_word(%struct.r8152* %4, i16 zeroext 256, i16 zeroext -6054, i32 %5) #13, !dbg !15292
  ret void, !dbg !15293
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl_disable(%struct.r8152* %tp) #2 !dbg !15294 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !15295, metadata !DIExpression()), !dbg !15296
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !15297, metadata !DIExpression()), !dbg !15298
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15299, metadata !DIExpression()), !dbg !15300
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15301
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 0, !dbg !15303
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !15304
  br i1 %call, label %if.then, label %if.end, !dbg !15305

if.then:                                          ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15306
  call void @rtl_drop_queued_tx(%struct.r8152* %1) #13, !dbg !15308
  br label %return, !dbg !15309

if.end:                                           ; preds = %entry
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15310
  %call1 = call i32 @ocp_read_dword(%struct.r8152* %2, i16 zeroext 256, i16 zeroext -16368) #13, !dbg !15311
  store i32 %call1, i32* %ocp_data, align 4, !dbg !15312
  %3 = load i32, i32* %ocp_data, align 4, !dbg !15313
  %and = and i32 %3, -16, !dbg !15313
  store i32 %and, i32* %ocp_data, align 4, !dbg !15313
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15314
  %5 = load i32, i32* %ocp_data, align 4, !dbg !15315
  call void @ocp_write_dword(%struct.r8152* %4, i16 zeroext 256, i16 zeroext -16368, i32 %5) #13, !dbg !15316
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15317
  call void @rtl_drop_queued_tx(%struct.r8152* %6) #13, !dbg !15318
  store i32 0, i32* %i, align 4, !dbg !15319
  br label %for.cond, !dbg !15321

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !15322
  %cmp = icmp slt i32 %7, 4, !dbg !15324
  br i1 %cmp, label %for.body, label %for.end, !dbg !15325

for.body:                                         ; preds = %for.cond
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15326
  %tx_info = getelementptr inbounds %struct.r8152, %struct.r8152* %8, i32 0, i32 6, !dbg !15327
  %9 = load i32, i32* %i, align 4, !dbg !15328
  %idxprom = sext i32 %9 to i64, !dbg !15326
  %arrayidx = getelementptr [4 x %struct.tx_agg], [4 x %struct.tx_agg]* %tx_info, i64 0, i64 %idxprom, !dbg !15326
  %urb = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %arrayidx, i32 0, i32 1, !dbg !15329
  %10 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !15329
  call void @usb_kill_urb(%struct.urb* %10) #13, !dbg !15330
  br label %for.inc, !dbg !15330

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !15331
  %inc = add i32 %11, 1, !dbg !15331
  store i32 %inc, i32* %i, align 4, !dbg !15331
  br label %for.cond, !dbg !15332, !llvm.loop !15333

for.end:                                          ; preds = %for.cond
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15335
  call void @rxdy_gated_en(%struct.r8152* %12, i1 zeroext true) #13, !dbg !15336
  store i32 0, i32* %i, align 4, !dbg !15337
  br label %for.cond2, !dbg !15339

for.cond2:                                        ; preds = %for.inc11, %for.end
  %13 = load i32, i32* %i, align 4, !dbg !15340
  %cmp3 = icmp slt i32 %13, 1000, !dbg !15342
  br i1 %cmp3, label %for.body4, label %for.end13, !dbg !15343

for.body4:                                        ; preds = %for.cond2
  %14 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15344
  %call5 = call zeroext i8 @ocp_read_byte(%struct.r8152* %14, i16 zeroext 256, i16 zeroext -6065) #13, !dbg !15346
  %conv = zext i8 %call5 to i32, !dbg !15346
  store i32 %conv, i32* %ocp_data, align 4, !dbg !15347
  %15 = load i32, i32* %ocp_data, align 4, !dbg !15348
  %and6 = and i32 %15, 48, !dbg !15350
  %cmp7 = icmp eq i32 %and6, 48, !dbg !15351
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !15352

if.then9:                                         ; preds = %for.body4
  br label %for.end13, !dbg !15353

if.end10:                                         ; preds = %for.body4
  call void @usleep_range(i64 1000, i64 2000) #13, !dbg !15354
  br label %for.inc11, !dbg !15355

for.inc11:                                        ; preds = %if.end10
  %16 = load i32, i32* %i, align 4, !dbg !15356
  %inc12 = add i32 %16, 1, !dbg !15356
  store i32 %inc12, i32* %i, align 4, !dbg !15356
  br label %for.cond2, !dbg !15357, !llvm.loop !15358

for.end13:                                        ; preds = %if.then9, %for.cond2
  store i32 0, i32* %i, align 4, !dbg !15360
  br label %for.cond14, !dbg !15362

for.cond14:                                       ; preds = %for.inc23, %for.end13
  %17 = load i32, i32* %i, align 4, !dbg !15363
  %cmp15 = icmp slt i32 %17, 1000, !dbg !15365
  br i1 %cmp15, label %for.body17, label %for.end25, !dbg !15366

for.body17:                                       ; preds = %for.cond14
  %18 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15367
  %call18 = call zeroext i16 @ocp_read_word(%struct.r8152* %18, i16 zeroext 256, i16 zeroext -6640) #13, !dbg !15370
  %conv19 = zext i16 %call18 to i32, !dbg !15370
  %and20 = and i32 %conv19, 2048, !dbg !15371
  %tobool = icmp ne i32 %and20, 0, !dbg !15371
  br i1 %tobool, label %if.then21, label %if.end22, !dbg !15372

if.then21:                                        ; preds = %for.body17
  br label %for.end25, !dbg !15373

if.end22:                                         ; preds = %for.body17
  call void @usleep_range(i64 1000, i64 2000) #13, !dbg !15374
  br label %for.inc23, !dbg !15375

for.inc23:                                        ; preds = %if.end22
  %19 = load i32, i32* %i, align 4, !dbg !15376
  %inc24 = add i32 %19, 1, !dbg !15376
  store i32 %inc24, i32* %i, align 4, !dbg !15376
  br label %for.cond14, !dbg !15377, !llvm.loop !15378

for.end25:                                        ; preds = %if.then21, %for.cond14
  %20 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15380
  %call26 = call i32 @rtl_stop_rx(%struct.r8152* %20) #13, !dbg !15381
  %21 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15382
  call void @rtl8152_nic_reset(%struct.r8152* %21) #13, !dbg !15383
  br label %return, !dbg !15384

return:                                           ; preds = %for.end25, %if.then
  ret void, !dbg !15384
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl_drop_queued_tx(%struct.r8152* %tp) #2 !dbg !15385 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %stats = alloca %struct.net_device_stats*, align 8
  %skb_head = alloca %struct.sk_buff_head, align 8
  %tx_queue = alloca %struct.sk_buff_head*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !15386, metadata !DIExpression()), !dbg !15387
  call void @llvm.dbg.declare(metadata %struct.net_device_stats** %stats, metadata !15388, metadata !DIExpression()), !dbg !15389
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15390
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 4, !dbg !15391
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !15391
  %stats1 = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 24, !dbg !15392
  store %struct.net_device_stats* %stats1, %struct.net_device_stats** %stats, align 8, !dbg !15389
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head* %skb_head, metadata !15393, metadata !DIExpression()), !dbg !15394
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %tx_queue, metadata !15395, metadata !DIExpression()), !dbg !15397
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15398
  %tx_queue2 = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 11, !dbg !15399
  store %struct.sk_buff_head* %tx_queue2, %struct.sk_buff_head** %tx_queue, align 8, !dbg !15397
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !15400, metadata !DIExpression()), !dbg !15401
  %3 = load %struct.sk_buff_head*, %struct.sk_buff_head** %tx_queue, align 8, !dbg !15402
  %call = call i32 @skb_queue_empty(%struct.sk_buff_head* %3) #13, !dbg !15404
  %tobool = icmp ne i32 %call, 0, !dbg !15404
  br i1 %tobool, label %if.then, label %if.end, !dbg !15405

if.then:                                          ; preds = %entry
  br label %while.end, !dbg !15406

if.end:                                           ; preds = %entry
  call void @__skb_queue_head_init(%struct.sk_buff_head* %skb_head) #13, !dbg !15407
  %4 = load %struct.sk_buff_head*, %struct.sk_buff_head** %tx_queue, align 8, !dbg !15408
  %lock = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %4, i32 0, i32 3, !dbg !15409
  call void @spin_lock_bh(%struct.spinlock* %lock) #13, !dbg !15410
  %5 = load %struct.sk_buff_head*, %struct.sk_buff_head** %tx_queue, align 8, !dbg !15411
  call void @skb_queue_splice_init(%struct.sk_buff_head* %5, %struct.sk_buff_head* %skb_head) #13, !dbg !15412
  %6 = load %struct.sk_buff_head*, %struct.sk_buff_head** %tx_queue, align 8, !dbg !15413
  %lock3 = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %6, i32 0, i32 3, !dbg !15414
  call void @spin_unlock_bh(%struct.spinlock* %lock3) #13, !dbg !15415
  br label %while.cond, !dbg !15416

while.cond:                                       ; preds = %while.body, %if.end
  %call4 = call %struct.sk_buff* @__skb_dequeue(%struct.sk_buff_head* %skb_head) #13, !dbg !15417
  store %struct.sk_buff* %call4, %struct.sk_buff** %skb, align 8, !dbg !15418
  %tobool5 = icmp ne %struct.sk_buff* %call4, null, !dbg !15416
  br i1 %tobool5, label %while.body, label %while.end, !dbg !15416

while.body:                                       ; preds = %while.cond
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15419
  call void @consume_skb(%struct.sk_buff* %7) #13, !dbg !15419
  %8 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !15421
  %tx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %8, i32 0, i32 7, !dbg !15422
  %9 = load i64, i64* %tx_dropped, align 8, !dbg !15423
  %inc = add i64 %9, 1, !dbg !15423
  store i64 %inc, i64* %tx_dropped, align 8, !dbg !15423
  br label %while.cond, !dbg !15416, !llvm.loop !15424

while.end:                                        ; preds = %if.then, %while.cond
  ret void, !dbg !15426
}

; Function Attrs: noredzone
declare dso_local void @usb_kill_urb(%struct.urb*) #1

; Function Attrs: noredzone
declare dso_local void @usleep_range(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl_stop_rx(%struct.r8152* %tp) #2 !dbg !15427 {
entry:
  %lock.addr.i110 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i110, metadata !15428, metadata !DIExpression()), !dbg !15433
  %flags.addr.i111 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i111, metadata !15435, metadata !DIExpression()), !dbg !15436
  %tmp.i112 = alloca i32, align 4
  %tmp8.i113 = alloca i32, align 4
  %lock.addr.i108 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i108, metadata !15437, metadata !DIExpression()), !dbg !15442
  %lock.addr.i106 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i106, metadata !15428, metadata !DIExpression()), !dbg !15449
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !15435, metadata !DIExpression()), !dbg !15451
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !15437, metadata !DIExpression()), !dbg !15452
  %tp.addr = alloca %struct.r8152*, align 8
  %agg = alloca %struct.rx_agg*, align 8
  %agg_next = alloca %struct.rx_agg*, align 8
  %tmp_list = alloca %struct.list_head, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp22 = alloca %struct.rx_agg*, align 8
  %__mptr23 = alloca i8*, align 8
  %tmp27 = alloca %struct.rx_agg*, align 8
  %__mptr35 = alloca i8*, align 8
  %tmp40 = alloca %struct.rx_agg*, align 8
  %__dummy44 = alloca i64, align 8
  %__dummy245 = alloca i64, align 8
  %tmp48 = alloca i32, align 4
  %__dummy52 = alloca i64, align 8
  %__dummy253 = alloca i64, align 8
  %tmp56 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp91 = alloca i64, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !15459, metadata !DIExpression()), !dbg !15460
  call void @llvm.dbg.declare(metadata %struct.rx_agg** %agg, metadata !15461, metadata !DIExpression()), !dbg !15462
  call void @llvm.dbg.declare(metadata %struct.rx_agg** %agg_next, metadata !15463, metadata !DIExpression()), !dbg !15464
  call void @llvm.dbg.declare(metadata %struct.list_head* %tmp_list, metadata !15465, metadata !DIExpression()), !dbg !15466
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15467, metadata !DIExpression()), !dbg !15468
  call void @INIT_LIST_HEAD(%struct.list_head* %tmp_list) #13, !dbg !15469
  br label %do.body, !dbg !15470

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !15471

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !15472, metadata !DIExpression()), !dbg !15474
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !15475, metadata !DIExpression()), !dbg !15474
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !15474
  %conv = zext i1 %cmp to i32, !dbg !15474
  store i32 1, i32* %tmp, align 4, !dbg !15474
  %0 = load i32, i32* %tmp, align 4, !dbg !15474
  br label %do.body2, !dbg !15476

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !15477

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !15478

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !15480, metadata !DIExpression()), !dbg !15483
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !15484, metadata !DIExpression()), !dbg !15483
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !15483
  %conv8 = zext i1 %cmp7 to i32, !dbg !15483
  store i32 1, i32* %tmp9, align 4, !dbg !15483
  %1 = load i32, i32* %tmp9, align 4, !dbg !15483
  %call = call i64 @arch_local_irq_save() #13, !dbg !15485
  store i64 %call, i64* %flags, align 8, !dbg !15485
  br label %do.end, !dbg !15485

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !15478

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !15477

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !15486, !srcloc !15487
  br label %do.body12, !dbg !15486

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15488
  %rx_lock = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 13, !dbg !15488
  store %struct.spinlock* %rx_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15489
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !15490
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !15490
  br label %do.end14, !dbg !15488

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !15486

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !15477

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !15476

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !15471

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15491
  %rx_info = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 7, !dbg !15492
  call void @list_splice_init(%struct.list_head* %rx_info, %struct.list_head* %tmp_list) #13, !dbg !15493
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15494
  %rx_lock19 = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 13, !dbg !15495
  %7 = load i64, i64* %flags, align 8, !dbg !15496
  store %struct.spinlock* %rx_lock19, %struct.spinlock** %lock.addr.i106, align 8
  store i64 %7, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !820, metadata !15497, metadata !DIExpression()) #11, !dbg !15500
  call void @llvm.dbg.declare(metadata !820, metadata !15501, metadata !DIExpression()) #11, !dbg !15500
  store i32 1, i32* %tmp.i, align 4, !dbg !15500
  %8 = load i32, i32* %tmp.i, align 4, !dbg !15500
  call void @llvm.dbg.declare(metadata !820, metadata !15502, metadata !DIExpression()) #11, !dbg !15507
  call void @llvm.dbg.declare(metadata !820, metadata !15508, metadata !DIExpression()) #11, !dbg !15507
  store i32 1, i32* %tmp8.i, align 4, !dbg !15507
  %9 = load i32, i32* %tmp8.i, align 4, !dbg !15507
  %10 = load i64, i64* %flags.addr.i, align 8, !dbg !15509
  call void @arch_local_irq_restore(i64 %10) #16, !dbg !15509
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !15510, !srcloc !15512
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i106, align 8, !dbg !15513
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !15513
  %rlock.i107 = bitcast %union.anon.1* %12 to %struct.raw_spinlock*, !dbg !15513
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15515, metadata !DIExpression()), !dbg !15518
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %tmp_list, i32 0, i32 0, !dbg !15518
  %13 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15518
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !15518
  store i8* %14, i8** %__mptr, align 8, !dbg !15518
  br label %do.body20, !dbg !15518

do.body20:                                        ; preds = %do.end18
  br label %do.end21, !dbg !15519

do.end21:                                         ; preds = %do.body20
  %15 = load i8*, i8** %__mptr, align 8, !dbg !15518
  %add.ptr = getelementptr i8, i8* %15, i64 -16, !dbg !15518
  %16 = bitcast i8* %add.ptr to %struct.rx_agg*, !dbg !15518
  store %struct.rx_agg* %16, %struct.rx_agg** %tmp22, align 8, !dbg !15519
  %17 = load %struct.rx_agg*, %struct.rx_agg** %tmp22, align 8, !dbg !15518
  store %struct.rx_agg* %17, %struct.rx_agg** %agg, align 8, !dbg !15521
  call void @llvm.dbg.declare(metadata i8** %__mptr23, metadata !15522, metadata !DIExpression()), !dbg !15524
  %18 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !15524
  %info_list = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %18, i32 0, i32 1, !dbg !15524
  %next24 = getelementptr inbounds %struct.list_head, %struct.list_head* %info_list, i32 0, i32 0, !dbg !15524
  %19 = load %struct.list_head*, %struct.list_head** %next24, align 8, !dbg !15524
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !15524
  store i8* %20, i8** %__mptr23, align 8, !dbg !15524
  br label %do.body25, !dbg !15524

do.body25:                                        ; preds = %do.end21
  br label %do.end26, !dbg !15525

do.end26:                                         ; preds = %do.body25
  %21 = load i8*, i8** %__mptr23, align 8, !dbg !15524
  %add.ptr28 = getelementptr i8, i8* %21, i64 -16, !dbg !15524
  %22 = bitcast i8* %add.ptr28 to %struct.rx_agg*, !dbg !15524
  store %struct.rx_agg* %22, %struct.rx_agg** %tmp27, align 8, !dbg !15525
  %23 = load %struct.rx_agg*, %struct.rx_agg** %tmp27, align 8, !dbg !15524
  store %struct.rx_agg* %23, %struct.rx_agg** %agg_next, align 8, !dbg !15521
  br label %for.cond, !dbg !15521

for.cond:                                         ; preds = %do.end39, %do.end26
  %24 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !15527
  %info_list29 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %24, i32 0, i32 1, !dbg !15527
  %cmp30 = icmp eq %struct.list_head* %info_list29, %tmp_list, !dbg !15527
  %lnot = xor i1 %cmp30, true, !dbg !15527
  br i1 %lnot, label %for.body, label %for.end, !dbg !15521

for.body:                                         ; preds = %for.cond
  %25 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !15529
  %page = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %25, i32 0, i32 4, !dbg !15532
  %26 = load %struct.page*, %struct.page** %page, align 8, !dbg !15532
  %call32 = call i32 @page_count(%struct.page* %26) #13, !dbg !15533
  %cmp33 = icmp sgt i32 %call32, 1, !dbg !15534
  br i1 %cmp33, label %if.then, label %if.else, !dbg !15535

if.then:                                          ; preds = %for.body
  %27 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15536
  %28 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !15537
  call void @free_rx_agg(%struct.r8152* %27, %struct.rx_agg* %28) #13, !dbg !15538
  br label %if.end, !dbg !15538

if.else:                                          ; preds = %for.body
  %29 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !15539
  %urb = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %29, i32 0, i32 2, !dbg !15540
  %30 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !15540
  call void @usb_kill_urb(%struct.urb* %30) #13, !dbg !15541
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !15542

for.inc:                                          ; preds = %if.end
  %31 = load %struct.rx_agg*, %struct.rx_agg** %agg_next, align 8, !dbg !15527
  store %struct.rx_agg* %31, %struct.rx_agg** %agg, align 8, !dbg !15527
  call void @llvm.dbg.declare(metadata i8** %__mptr35, metadata !15543, metadata !DIExpression()), !dbg !15545
  %32 = load %struct.rx_agg*, %struct.rx_agg** %agg_next, align 8, !dbg !15545
  %info_list36 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %32, i32 0, i32 1, !dbg !15545
  %next37 = getelementptr inbounds %struct.list_head, %struct.list_head* %info_list36, i32 0, i32 0, !dbg !15545
  %33 = load %struct.list_head*, %struct.list_head** %next37, align 8, !dbg !15545
  %34 = bitcast %struct.list_head* %33 to i8*, !dbg !15545
  store i8* %34, i8** %__mptr35, align 8, !dbg !15545
  br label %do.body38, !dbg !15545

do.body38:                                        ; preds = %for.inc
  br label %do.end39, !dbg !15546

do.end39:                                         ; preds = %do.body38
  %35 = load i8*, i8** %__mptr35, align 8, !dbg !15545
  %add.ptr41 = getelementptr i8, i8* %35, i64 -16, !dbg !15545
  %36 = bitcast i8* %add.ptr41 to %struct.rx_agg*, !dbg !15545
  store %struct.rx_agg* %36, %struct.rx_agg** %tmp40, align 8, !dbg !15546
  %37 = load %struct.rx_agg*, %struct.rx_agg** %tmp40, align 8, !dbg !15545
  store %struct.rx_agg* %37, %struct.rx_agg** %agg_next, align 8, !dbg !15527
  br label %for.cond, !dbg !15527, !llvm.loop !15548

for.end:                                          ; preds = %for.cond
  br label %do.body42, !dbg !15550

do.body42:                                        ; preds = %for.end
  br label %do.body43, !dbg !15551

do.body43:                                        ; preds = %do.body42
  call void @llvm.dbg.declare(metadata i64* %__dummy44, metadata !15552, metadata !DIExpression()), !dbg !15554
  call void @llvm.dbg.declare(metadata i64* %__dummy245, metadata !15555, metadata !DIExpression()), !dbg !15554
  %cmp46 = icmp eq i64* %__dummy44, %__dummy245, !dbg !15554
  %conv47 = zext i1 %cmp46 to i32, !dbg !15554
  store i32 1, i32* %tmp48, align 4, !dbg !15554
  %38 = load i32, i32* %tmp48, align 4, !dbg !15554
  br label %do.body49, !dbg !15556

do.body49:                                        ; preds = %do.body43
  br label %do.body50, !dbg !15557

do.body50:                                        ; preds = %do.body49
  br label %do.body51, !dbg !15558

do.body51:                                        ; preds = %do.body50
  call void @llvm.dbg.declare(metadata i64* %__dummy52, metadata !15560, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.declare(metadata i64* %__dummy253, metadata !15564, metadata !DIExpression()), !dbg !15563
  %cmp54 = icmp eq i64* %__dummy52, %__dummy253, !dbg !15563
  %conv55 = zext i1 %cmp54 to i32, !dbg !15563
  store i32 1, i32* %tmp56, align 4, !dbg !15563
  %39 = load i32, i32* %tmp56, align 4, !dbg !15563
  %call57 = call i64 @arch_local_irq_save() #13, !dbg !15565
  store i64 %call57, i64* %flags, align 8, !dbg !15565
  br label %do.end58, !dbg !15565

do.end58:                                         ; preds = %do.body51
  br label %do.end59, !dbg !15558

do.end59:                                         ; preds = %do.end58
  br label %do.body60, !dbg !15557

do.body60:                                        ; preds = %do.end59
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !15566, !srcloc !15567
  br label %do.body61, !dbg !15566

do.body61:                                        ; preds = %do.body60
  %40 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15568
  %rx_lock62 = getelementptr inbounds %struct.r8152, %struct.r8152* %40, i32 0, i32 13, !dbg !15568
  store %struct.spinlock* %rx_lock62, %struct.spinlock** %lock.addr.i108, align 8
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i108, align 8, !dbg !15569
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !15570
  %rlock.i109 = bitcast %union.anon.1* %42 to %struct.raw_spinlock*, !dbg !15570
  br label %do.end64, !dbg !15568

do.end64:                                         ; preds = %do.body61
  br label %do.end65, !dbg !15566

do.end65:                                         ; preds = %do.end64
  br label %do.end66, !dbg !15557

do.end66:                                         ; preds = %do.end65
  br label %do.end67, !dbg !15556

do.end67:                                         ; preds = %do.end66
  br label %do.end68, !dbg !15551

do.end68:                                         ; preds = %do.end67
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !15571, metadata !DIExpression()), !dbg !15573
  %43 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15573
  %rx_info69 = getelementptr inbounds %struct.r8152, %struct.r8152* %43, i32 0, i32 7, !dbg !15573
  %call70 = call i32 @list_empty(%struct.list_head* %rx_info69) #13, !dbg !15573
  %tobool = icmp ne i32 %call70, 0, !dbg !15573
  %lnot71 = xor i1 %tobool, true, !dbg !15573
  %lnot72 = xor i1 %lnot71, true, !dbg !15573
  %lnot73 = xor i1 %lnot72, true, !dbg !15573
  %lnot.ext = zext i1 %lnot73 to i32, !dbg !15573
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !15573
  %44 = load i32, i32* %__ret_warn_on, align 4, !dbg !15574
  %tobool74 = icmp ne i32 %44, 0, !dbg !15574
  %lnot75 = xor i1 %tobool74, true, !dbg !15574
  %lnot77 = xor i1 %lnot75, true, !dbg !15574
  %lnot.ext78 = zext i1 %lnot77 to i32, !dbg !15574
  %conv79 = sext i32 %lnot.ext78 to i64, !dbg !15574
  %tobool80 = icmp ne i64 %conv79, 0, !dbg !15574
  br i1 %tobool80, label %if.then81, label %if.end90, !dbg !15573

if.then81:                                        ; preds = %do.end68
  br label %do.body82, !dbg !15574

do.body82:                                        ; preds = %if.then81
  br label %do.body83, !dbg !15576

do.body83:                                        ; preds = %do.body82
  br label %do.end84, !dbg !15578

do.end84:                                         ; preds = %do.body83
  br label %do.body85, !dbg !15576

do.body85:                                        ; preds = %do.end84
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 2752, i32 2305, i64 12) #11, !dbg !15580, !srcloc !15582
  br label %do.end86, !dbg !15580

do.end86:                                         ; preds = %do.body85
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 585) #11, !dbg !15583, !srcloc !15585
  br label %do.body87, !dbg !15576

do.body87:                                        ; preds = %do.end86
  br label %do.end88, !dbg !15586

do.end88:                                         ; preds = %do.body87
  br label %do.end89, !dbg !15576

do.end89:                                         ; preds = %do.end88
  br label %if.end90, !dbg !15576

if.end90:                                         ; preds = %do.end89, %do.end68
  %45 = load i32, i32* %__ret_warn_on, align 4, !dbg !15573
  %tobool92 = icmp ne i32 %45, 0, !dbg !15573
  %lnot93 = xor i1 %tobool92, true, !dbg !15573
  %lnot95 = xor i1 %lnot93, true, !dbg !15573
  %lnot.ext96 = zext i1 %lnot95 to i32, !dbg !15573
  %conv97 = sext i32 %lnot.ext96 to i64, !dbg !15573
  store i64 %conv97, i64* %tmp91, align 8, !dbg !15574
  %46 = load i64, i64* %tmp91, align 8, !dbg !15573
  %47 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15588
  %rx_info98 = getelementptr inbounds %struct.r8152, %struct.r8152* %47, i32 0, i32 7, !dbg !15589
  call void @list_splice(%struct.list_head* %tmp_list, %struct.list_head* %rx_info98) #13, !dbg !15590
  %48 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15591
  %rx_lock99 = getelementptr inbounds %struct.r8152, %struct.r8152* %48, i32 0, i32 13, !dbg !15592
  %49 = load i64, i64* %flags, align 8, !dbg !15593
  store %struct.spinlock* %rx_lock99, %struct.spinlock** %lock.addr.i110, align 8
  store i64 %49, i64* %flags.addr.i111, align 8
  call void @llvm.dbg.declare(metadata !820, metadata !15497, metadata !DIExpression()) #11, !dbg !15594
  call void @llvm.dbg.declare(metadata !820, metadata !15501, metadata !DIExpression()) #11, !dbg !15594
  store i32 1, i32* %tmp.i112, align 4, !dbg !15594
  %50 = load i32, i32* %tmp.i112, align 4, !dbg !15594
  call void @llvm.dbg.declare(metadata !820, metadata !15502, metadata !DIExpression()) #11, !dbg !15595
  call void @llvm.dbg.declare(metadata !820, metadata !15508, metadata !DIExpression()) #11, !dbg !15595
  store i32 1, i32* %tmp8.i113, align 4, !dbg !15595
  %51 = load i32, i32* %tmp8.i113, align 4, !dbg !15595
  %52 = load i64, i64* %flags.addr.i111, align 8, !dbg !15596
  call void @arch_local_irq_restore(i64 %52) #16, !dbg !15596
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !15597, !srcloc !15512
  %53 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i110, align 8, !dbg !15598
  %54 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %53, i32 0, i32 0, !dbg !15598
  %rlock.i114 = bitcast %union.anon.1* %54 to %struct.raw_spinlock*, !dbg !15598
  br label %while.cond, !dbg !15599

while.cond:                                       ; preds = %while.body, %if.end90
  %55 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15600
  %rx_queue = getelementptr inbounds %struct.r8152, %struct.r8152* %55, i32 0, i32 12, !dbg !15601
  %call100 = call i32 @skb_queue_empty(%struct.sk_buff_head* %rx_queue) #13, !dbg !15602
  %tobool101 = icmp ne i32 %call100, 0, !dbg !15603
  %lnot102 = xor i1 %tobool101, true, !dbg !15603
  br i1 %lnot102, label %while.body, label %while.end, !dbg !15599

while.body:                                       ; preds = %while.cond
  %56 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15604
  %rx_queue104 = getelementptr inbounds %struct.r8152, %struct.r8152* %56, i32 0, i32 12, !dbg !15604
  %call105 = call %struct.sk_buff* @__skb_dequeue(%struct.sk_buff_head* %rx_queue104) #13, !dbg !15604
  call void @consume_skb(%struct.sk_buff* %call105) #13, !dbg !15604
  br label %while.cond, !dbg !15599, !llvm.loop !15605

while.end:                                        ; preds = %while.cond
  ret i32 0, !dbg !15606
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8152_nic_reset(%struct.r8152* %tp) #2 !dbg !15607 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %i = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !15608, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15610, metadata !DIExpression()), !dbg !15611
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15612
  call void @ocp_write_byte(%struct.r8152* %0, i16 zeroext 256, i16 zeroext -6125, i32 16) #13, !dbg !15613
  store i32 0, i32* %i, align 4, !dbg !15614
  br label %for.cond, !dbg !15616

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !15617
  %cmp = icmp slt i32 %1, 1000, !dbg !15619
  br i1 %cmp, label %for.body, label %for.end, !dbg !15620

for.body:                                         ; preds = %for.cond
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15621
  %call = call zeroext i8 @ocp_read_byte(%struct.r8152* %2, i16 zeroext 256, i16 zeroext -6125) #13, !dbg !15624
  %conv = zext i8 %call to i32, !dbg !15624
  %and = and i32 %conv, 16, !dbg !15625
  %tobool = icmp ne i32 %and, 0, !dbg !15625
  br i1 %tobool, label %if.end, label %if.then, !dbg !15626

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !15627

if.end:                                           ; preds = %for.body
  call void @usleep_range(i64 100, i64 400) #13, !dbg !15628
  br label %for.inc, !dbg !15629

for.inc:                                          ; preds = %if.end
  %3 = load i32, i32* %i, align 4, !dbg !15630
  %inc = add i32 %3, 1, !dbg !15630
  store i32 %inc, i32* %i, align 4, !dbg !15630
  br label %for.cond, !dbg !15631, !llvm.loop !15632

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !15634
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_queue_empty(%struct.sk_buff_head* %list) #2 !dbg !15635 {
entry:
  %list.addr = alloca %struct.sk_buff_head*, align 8
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !15640, metadata !DIExpression()), !dbg !15641
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !15642
  %next = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %0, i32 0, i32 0, !dbg !15643
  %1 = load %struct.sk_buff*, %struct.sk_buff** %next, align 8, !dbg !15643
  %2 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !15644
  %3 = bitcast %struct.sk_buff_head* %2 to %struct.sk_buff*, !dbg !15645
  %cmp = icmp eq %struct.sk_buff* %1, %3, !dbg !15646
  %conv = zext i1 %cmp to i32, !dbg !15646
  ret i32 %conv, !dbg !15647
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_queue_head_init(%struct.sk_buff_head* %list) #2 !dbg !15648 {
entry:
  %list.addr = alloca %struct.sk_buff_head*, align 8
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !15651, metadata !DIExpression()), !dbg !15652
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !15653
  %1 = bitcast %struct.sk_buff_head* %0 to %struct.sk_buff*, !dbg !15654
  %2 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !15655
  %next = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %2, i32 0, i32 0, !dbg !15656
  store %struct.sk_buff* %1, %struct.sk_buff** %next, align 8, !dbg !15657
  %3 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !15658
  %prev = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %3, i32 0, i32 1, !dbg !15659
  store %struct.sk_buff* %1, %struct.sk_buff** %prev, align 8, !dbg !15660
  %4 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !15661
  %qlen = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %4, i32 0, i32 2, !dbg !15662
  store i32 0, i32* %qlen, align 8, !dbg !15663
  ret void, !dbg !15664
}

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_lock_bh(%struct.spinlock* %lock) #9 !dbg !15665 {
entry:
  %val.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i.i, metadata !15668, metadata !DIExpression()), !dbg !15671
  %pao_ID__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pao_ID__.i.i, metadata !15679, metadata !DIExpression()), !dbg !15681
  %pto_val__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pto_val__.i.i, metadata !15682, metadata !DIExpression()), !dbg !15686
  %ip.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %ip.addr.i, metadata !15687, metadata !DIExpression()), !dbg !15688
  %cnt.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr.i, metadata !15689, metadata !DIExpression()), !dbg !15690
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !15691, metadata !DIExpression()), !dbg !15692
  br label %do.body, !dbg !15693

do.body:                                          ; preds = %entry
  br label %__here, !dbg !15694

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !15696), !dbg !15694
  store i64 ptrtoint (i8* blockaddress(@spin_lock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !15694
  %0 = load i64, i64* %tmp, align 8, !dbg !15694
  store i64 %0, i64* %ip.addr.i, align 8
  store i32 512, i32* %cnt.addr.i, align 4
  %1 = load i32, i32* %cnt.addr.i, align 4, !dbg !15697
  store i32 %1, i32* %val.addr.i.i, align 4
  %2 = load i32, i32* %val.addr.i.i, align 4, !dbg !15681
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #11, !dbg !15681
  br i1 %3, label %land.lhs.true.i.i, label %cond.false.i.i, !dbg !15681

land.lhs.true.i.i:                                ; preds = %__here
  %4 = load i32, i32* %val.addr.i.i, align 4, !dbg !15681
  %cmp.i.i = icmp eq i32 %4, 1, !dbg !15681
  br i1 %cmp.i.i, label %cond.true.i.i, label %lor.lhs.false.i.i, !dbg !15681

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i
  %5 = load i32, i32* %val.addr.i.i, align 4, !dbg !15681
  %cmp1.i.i = icmp eq i32 %5, -1, !dbg !15681
  br i1 %cmp1.i.i, label %cond.true.i.i, label %cond.false.i.i, !dbg !15681

cond.true.i.i:                                    ; preds = %lor.lhs.false.i.i, %land.lhs.true.i.i
  %6 = load i32, i32* %val.addr.i.i, align 4, !dbg !15681
  br label %__local_bh_disable_ip.exit, !dbg !15681

cond.false.i.i:                                   ; preds = %lor.lhs.false.i.i, %__here
  br label %__local_bh_disable_ip.exit, !dbg !15681

__local_bh_disable_ip.exit:                       ; preds = %cond.true.i.i, %cond.false.i.i
  %cond.i.i = phi i32 [ %6, %cond.true.i.i ], [ 0, %cond.false.i.i ], !dbg !15681
  store i32 %cond.i.i, i32* %pao_ID__.i.i, align 4, !dbg !15681
  %7 = load i32, i32* %val.addr.i.i, align 4, !dbg !15686
  %conv.i.i = sext i32 %7 to i64, !dbg !15686
  %and.i.i = and i64 %conv.i.i, 4294967295, !dbg !15686
  %conv3.i.i = trunc i64 %and.i.i to i32, !dbg !15686
  store i32 %conv3.i.i, i32* %pto_val__.i.i, align 4, !dbg !15686
  %8 = load i32, i32* %pto_val__.i.i, align 4, !dbg !15686
  call void asm "addl $1, $0", "=*m,ri,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count, i32 %8, i32* @__preempt_count) #11, !dbg !15686, !srcloc !15698
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !15699, !srcloc !15700
  br label %do.body1, !dbg !15701

do.body1:                                         ; preds = %__local_bh_disable_ip.exit
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !15702
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !15702
  %rlock = bitcast %union.anon.1* %10 to %struct.raw_spinlock*, !dbg !15702
  br label %do.end, !dbg !15702

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !15701

do.end2:                                          ; preds = %do.end
  ret void, !dbg !15704

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_queue_splice_init(%struct.sk_buff_head* %list, %struct.sk_buff_head* %head) #2 !dbg !15705 {
entry:
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %head.addr = alloca %struct.sk_buff_head*, align 8
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !15708, metadata !DIExpression()), !dbg !15709
  store %struct.sk_buff_head* %head, %struct.sk_buff_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %head.addr, metadata !15710, metadata !DIExpression()), !dbg !15711
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !15712
  %call = call i32 @skb_queue_empty(%struct.sk_buff_head* %0) #13, !dbg !15714
  %tobool = icmp ne i32 %call, 0, !dbg !15714
  br i1 %tobool, label %if.end, label %if.then, !dbg !15715

if.then:                                          ; preds = %entry
  %1 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !15716
  %2 = load %struct.sk_buff_head*, %struct.sk_buff_head** %head.addr, align 8, !dbg !15718
  %3 = bitcast %struct.sk_buff_head* %2 to %struct.sk_buff*, !dbg !15719
  %4 = load %struct.sk_buff_head*, %struct.sk_buff_head** %head.addr, align 8, !dbg !15720
  %next = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %4, i32 0, i32 0, !dbg !15721
  %5 = load %struct.sk_buff*, %struct.sk_buff** %next, align 8, !dbg !15721
  call void @__skb_queue_splice(%struct.sk_buff_head* %1, %struct.sk_buff* %3, %struct.sk_buff* %5) #13, !dbg !15722
  %6 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !15723
  %qlen = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %6, i32 0, i32 2, !dbg !15724
  %7 = load i32, i32* %qlen, align 8, !dbg !15724
  %8 = load %struct.sk_buff_head*, %struct.sk_buff_head** %head.addr, align 8, !dbg !15725
  %qlen1 = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %8, i32 0, i32 2, !dbg !15726
  %9 = load i32, i32* %qlen1, align 8, !dbg !15727
  %add = add i32 %9, %7, !dbg !15727
  store i32 %add, i32* %qlen1, align 8, !dbg !15727
  %10 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !15728
  call void @__skb_queue_head_init(%struct.sk_buff_head* %10) #13, !dbg !15729
  br label %if.end, !dbg !15730

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !15731
}

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_unlock_bh(%struct.spinlock* %lock) #9 !dbg !15732 {
entry:
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !15733, metadata !DIExpression()), !dbg !15734
  br label %do.body, !dbg !15735

do.body:                                          ; preds = %entry
  br label %__here, !dbg !15736

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !15739), !dbg !15736
  store i64 ptrtoint (i8* blockaddress(@spin_unlock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !15736
  %0 = load i64, i64* %tmp, align 8, !dbg !15736
  call void @__local_bh_enable_ip(i64 %0, i32 512) #13, !dbg !15740
  br label %do.body1, !dbg !15740

do.body1:                                         ; preds = %__here
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !15741
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !15741
  %rlock = bitcast %union.anon.1* %2 to %struct.raw_spinlock*, !dbg !15741
  br label %do.end, !dbg !15741

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !15740

do.end2:                                          ; preds = %do.end
  ret void, !dbg !15743

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @__skb_dequeue(%struct.sk_buff_head* %list) #2 !dbg !15744 {
entry:
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !15747, metadata !DIExpression()), !dbg !15748
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !15749, metadata !DIExpression()), !dbg !15750
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !15751
  %call = call %struct.sk_buff* @skb_peek(%struct.sk_buff_head* %0) #13, !dbg !15752
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !15750
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15753
  %tobool = icmp ne %struct.sk_buff* %1, null, !dbg !15753
  br i1 %tobool, label %if.then, label %if.end, !dbg !15755

if.then:                                          ; preds = %entry
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15756
  %3 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !15757
  call void @__skb_unlink(%struct.sk_buff* %2, %struct.sk_buff_head* %3) #13, !dbg !15758
  br label %if.end, !dbg !15758

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15759
  ret %struct.sk_buff* %4, !dbg !15760
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @consume_skb(%struct.sk_buff* %skb) #2 !dbg !15761 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15762, metadata !DIExpression()), !dbg !15763
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15764
  call void @kfree_skb(%struct.sk_buff* %0) #13, !dbg !15765
  ret void, !dbg !15766
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_queue_splice(%struct.sk_buff_head* %list, %struct.sk_buff* %prev, %struct.sk_buff* %next) #2 !dbg !15767 {
entry:
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %prev.addr = alloca %struct.sk_buff*, align 8
  %next.addr = alloca %struct.sk_buff*, align 8
  %first = alloca %struct.sk_buff*, align 8
  %last = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !15770, metadata !DIExpression()), !dbg !15771
  store %struct.sk_buff* %prev, %struct.sk_buff** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %prev.addr, metadata !15772, metadata !DIExpression()), !dbg !15773
  store %struct.sk_buff* %next, %struct.sk_buff** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %next.addr, metadata !15774, metadata !DIExpression()), !dbg !15775
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %first, metadata !15776, metadata !DIExpression()), !dbg !15777
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !15778
  %next1 = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %0, i32 0, i32 0, !dbg !15779
  %1 = load %struct.sk_buff*, %struct.sk_buff** %next1, align 8, !dbg !15779
  store %struct.sk_buff* %1, %struct.sk_buff** %first, align 8, !dbg !15777
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %last, metadata !15780, metadata !DIExpression()), !dbg !15781
  %2 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !15782
  %prev2 = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %2, i32 0, i32 1, !dbg !15783
  %3 = load %struct.sk_buff*, %struct.sk_buff** %prev2, align 8, !dbg !15783
  store %struct.sk_buff* %3, %struct.sk_buff** %last, align 8, !dbg !15781
  br label %do.body, !dbg !15784

do.body:                                          ; preds = %entry
  br label %do.body3, !dbg !15785

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !15787

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !15785

do.body4:                                         ; preds = %do.end
  %4 = load %struct.sk_buff*, %struct.sk_buff** %prev.addr, align 8, !dbg !15789
  %5 = load %struct.sk_buff*, %struct.sk_buff** %first, align 8, !dbg !15789
  %6 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %5, i32 0, i32 0, !dbg !15789
  %7 = bitcast %union.anon.46* %6 to %struct.anon.47*, !dbg !15789
  %prev5 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %7, i32 0, i32 1, !dbg !15789
  store volatile %struct.sk_buff* %4, %struct.sk_buff** %prev5, align 8, !dbg !15789
  br label %do.end6, !dbg !15789

do.end6:                                          ; preds = %do.body4
  br label %do.end7, !dbg !15785

do.end7:                                          ; preds = %do.end6
  br label %do.body8, !dbg !15791

do.body8:                                         ; preds = %do.end7
  br label %do.body9, !dbg !15792

do.body9:                                         ; preds = %do.body8
  br label %do.end10, !dbg !15794

do.end10:                                         ; preds = %do.body9
  br label %do.body11, !dbg !15792

do.body11:                                        ; preds = %do.end10
  %8 = load %struct.sk_buff*, %struct.sk_buff** %first, align 8, !dbg !15796
  %9 = load %struct.sk_buff*, %struct.sk_buff** %prev.addr, align 8, !dbg !15796
  %10 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %9, i32 0, i32 0, !dbg !15796
  %11 = bitcast %union.anon.46* %10 to %struct.anon.47*, !dbg !15796
  %next12 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %11, i32 0, i32 0, !dbg !15796
  store volatile %struct.sk_buff* %8, %struct.sk_buff** %next12, align 8, !dbg !15796
  br label %do.end13, !dbg !15796

do.end13:                                         ; preds = %do.body11
  br label %do.end14, !dbg !15792

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !15798

do.body15:                                        ; preds = %do.end14
  br label %do.body16, !dbg !15799

do.body16:                                        ; preds = %do.body15
  br label %do.end17, !dbg !15801

do.end17:                                         ; preds = %do.body16
  br label %do.body18, !dbg !15799

do.body18:                                        ; preds = %do.end17
  %12 = load %struct.sk_buff*, %struct.sk_buff** %next.addr, align 8, !dbg !15803
  %13 = load %struct.sk_buff*, %struct.sk_buff** %last, align 8, !dbg !15803
  %14 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %13, i32 0, i32 0, !dbg !15803
  %15 = bitcast %union.anon.46* %14 to %struct.anon.47*, !dbg !15803
  %next19 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %15, i32 0, i32 0, !dbg !15803
  store volatile %struct.sk_buff* %12, %struct.sk_buff** %next19, align 8, !dbg !15803
  br label %do.end20, !dbg !15803

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !15799

do.end21:                                         ; preds = %do.end20
  br label %do.body22, !dbg !15805

do.body22:                                        ; preds = %do.end21
  br label %do.body23, !dbg !15806

do.body23:                                        ; preds = %do.body22
  br label %do.end24, !dbg !15808

do.end24:                                         ; preds = %do.body23
  br label %do.body25, !dbg !15806

do.body25:                                        ; preds = %do.end24
  %16 = load %struct.sk_buff*, %struct.sk_buff** %last, align 8, !dbg !15810
  %17 = load %struct.sk_buff*, %struct.sk_buff** %next.addr, align 8, !dbg !15810
  %18 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %17, i32 0, i32 0, !dbg !15810
  %19 = bitcast %union.anon.46* %18 to %struct.anon.47*, !dbg !15810
  %prev26 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %19, i32 0, i32 1, !dbg !15810
  store volatile %struct.sk_buff* %16, %struct.sk_buff** %prev26, align 8, !dbg !15810
  br label %do.end27, !dbg !15810

do.end27:                                         ; preds = %do.body25
  br label %do.end28, !dbg !15806

do.end28:                                         ; preds = %do.end27
  ret void, !dbg !15812
}

; Function Attrs: noredzone
declare dso_local void @__local_bh_enable_ip(i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @skb_peek(%struct.sk_buff_head* %list_) #2 !dbg !15813 {
entry:
  %list_.addr = alloca %struct.sk_buff_head*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff_head* %list_, %struct.sk_buff_head** %list_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list_.addr, metadata !15816, metadata !DIExpression()), !dbg !15817
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !15818, metadata !DIExpression()), !dbg !15819
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list_.addr, align 8, !dbg !15820
  %next = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %0, i32 0, i32 0, !dbg !15821
  %1 = load %struct.sk_buff*, %struct.sk_buff** %next, align 8, !dbg !15821
  store %struct.sk_buff* %1, %struct.sk_buff** %skb, align 8, !dbg !15819
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15822
  %3 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list_.addr, align 8, !dbg !15824
  %4 = bitcast %struct.sk_buff_head* %3 to %struct.sk_buff*, !dbg !15825
  %cmp = icmp eq %struct.sk_buff* %2, %4, !dbg !15826
  br i1 %cmp, label %if.then, label %if.end, !dbg !15827

if.then:                                          ; preds = %entry
  store %struct.sk_buff* null, %struct.sk_buff** %skb, align 8, !dbg !15828
  br label %if.end, !dbg !15829

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15830
  ret %struct.sk_buff* %5, !dbg !15831
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_unlink(%struct.sk_buff* %skb, %struct.sk_buff_head* %list) #2 !dbg !15832 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %next = alloca %struct.sk_buff*, align 8
  %prev = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15835, metadata !DIExpression()), !dbg !15836
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !15837, metadata !DIExpression()), !dbg !15838
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %next, metadata !15839, metadata !DIExpression()), !dbg !15840
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %prev, metadata !15841, metadata !DIExpression()), !dbg !15842
  br label %do.body, !dbg !15843

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !15844

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !15846

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !15844

do.body2:                                         ; preds = %do.end
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !15848
  %qlen = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %0, i32 0, i32 2, !dbg !15848
  %1 = load i32, i32* %qlen, align 8, !dbg !15848
  %sub = sub i32 %1, 1, !dbg !15848
  %2 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !15848
  %qlen3 = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %2, i32 0, i32 2, !dbg !15848
  store volatile i32 %sub, i32* %qlen3, align 8, !dbg !15848
  br label %do.end4, !dbg !15848

do.end4:                                          ; preds = %do.body2
  br label %do.end5, !dbg !15844

do.end5:                                          ; preds = %do.end4
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15850
  %4 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 0, !dbg !15851
  %5 = bitcast %union.anon.46* %4 to %struct.anon.47*, !dbg !15851
  %next6 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %5, i32 0, i32 0, !dbg !15851
  %6 = load %struct.sk_buff*, %struct.sk_buff** %next6, align 8, !dbg !15851
  store %struct.sk_buff* %6, %struct.sk_buff** %next, align 8, !dbg !15852
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15853
  %8 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %7, i32 0, i32 0, !dbg !15854
  %9 = bitcast %union.anon.46* %8 to %struct.anon.47*, !dbg !15854
  %prev7 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %9, i32 0, i32 1, !dbg !15854
  %10 = load %struct.sk_buff*, %struct.sk_buff** %prev7, align 8, !dbg !15854
  store %struct.sk_buff* %10, %struct.sk_buff** %prev, align 8, !dbg !15855
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15856
  %12 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %11, i32 0, i32 0, !dbg !15857
  %13 = bitcast %union.anon.46* %12 to %struct.anon.47*, !dbg !15857
  %prev8 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %13, i32 0, i32 1, !dbg !15857
  store %struct.sk_buff* null, %struct.sk_buff** %prev8, align 8, !dbg !15858
  %14 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15859
  %15 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %14, i32 0, i32 0, !dbg !15860
  %16 = bitcast %union.anon.46* %15 to %struct.anon.47*, !dbg !15860
  %next9 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %16, i32 0, i32 0, !dbg !15860
  store %struct.sk_buff* null, %struct.sk_buff** %next9, align 8, !dbg !15861
  br label %do.body10, !dbg !15862

do.body10:                                        ; preds = %do.end5
  br label %do.body11, !dbg !15863

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !15865

do.end12:                                         ; preds = %do.body11
  br label %do.body13, !dbg !15863

do.body13:                                        ; preds = %do.end12
  %17 = load %struct.sk_buff*, %struct.sk_buff** %prev, align 8, !dbg !15867
  %18 = load %struct.sk_buff*, %struct.sk_buff** %next, align 8, !dbg !15867
  %19 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %18, i32 0, i32 0, !dbg !15867
  %20 = bitcast %union.anon.46* %19 to %struct.anon.47*, !dbg !15867
  %prev14 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %20, i32 0, i32 1, !dbg !15867
  store volatile %struct.sk_buff* %17, %struct.sk_buff** %prev14, align 8, !dbg !15867
  br label %do.end15, !dbg !15867

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !15863

do.end16:                                         ; preds = %do.end15
  br label %do.body17, !dbg !15869

do.body17:                                        ; preds = %do.end16
  br label %do.body18, !dbg !15870

do.body18:                                        ; preds = %do.body17
  br label %do.end19, !dbg !15872

do.end19:                                         ; preds = %do.body18
  br label %do.body20, !dbg !15870

do.body20:                                        ; preds = %do.end19
  %21 = load %struct.sk_buff*, %struct.sk_buff** %next, align 8, !dbg !15874
  %22 = load %struct.sk_buff*, %struct.sk_buff** %prev, align 8, !dbg !15874
  %23 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %22, i32 0, i32 0, !dbg !15874
  %24 = bitcast %union.anon.46* %23 to %struct.anon.47*, !dbg !15874
  %next21 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %24, i32 0, i32 0, !dbg !15874
  store volatile %struct.sk_buff* %21, %struct.sk_buff** %next21, align 8, !dbg !15874
  br label %do.end22, !dbg !15874

do.end22:                                         ; preds = %do.body20
  br label %do.end23, !dbg !15870

do.end23:                                         ; preds = %do.end22
  ret void, !dbg !15876
}

; Function Attrs: noredzone
declare dso_local void @kfree_skb(%struct.sk_buff*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #2 !dbg !15877 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !15881, metadata !DIExpression()), !dbg !15882
  %call = call i64 @arch_local_save_flags() #13, !dbg !15883
  store i64 %call, i64* %f, align 8, !dbg !15884
  call void @arch_local_irq_disable() #13, !dbg !15885
  %0 = load i64, i64* %f, align 8, !dbg !15886
  ret i64 %0, !dbg !15887
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_splice_init(%struct.list_head* %list, %struct.list_head* %head) #2 !dbg !15888 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !15891, metadata !DIExpression()), !dbg !15892
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !15893, metadata !DIExpression()), !dbg !15894
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !15895
  %call = call i32 @list_empty(%struct.list_head* %0) #13, !dbg !15897
  %tobool = icmp ne i32 %call, 0, !dbg !15897
  br i1 %tobool, label %if.end, label %if.then, !dbg !15898

if.then:                                          ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !15899
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !15901
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !15902
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !15903
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15903
  call void @__list_splice(%struct.list_head* %1, %struct.list_head* %2, %struct.list_head* %4) #13, !dbg !15904
  %5 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !15905
  call void @INIT_LIST_HEAD(%struct.list_head* %5) #13, !dbg !15906
  br label %if.end, !dbg !15907

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !15908
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @page_count(%struct.page* %page) #2 !dbg !15909 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !15911, metadata !DIExpression()), !dbg !15918
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !14189, metadata !DIExpression()), !dbg !15923
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !14193, metadata !DIExpression()), !dbg !15925
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !15926, metadata !DIExpression()), !dbg !15927
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !15928, metadata !DIExpression()), !dbg !15929
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !15930
  %call = call %struct.page* @compound_head(%struct.page* %0) #13, !dbg !15931
  %_refcount = getelementptr inbounds %struct.page, %struct.page* %call, i32 0, i32 3, !dbg !15932
  store %struct.atomic_t* %_refcount, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !15933
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !15933
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !15934
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !15935
  %conv.i.i = trunc i64 %4 to i32, !dbg !15935
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i.i) #16, !dbg !15936
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !15937
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !15937
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #16, !dbg !15937
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !15938
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !15939
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !15939
  %9 = load volatile i32, i32* %counter.i.i, align 4, !dbg !15939
  ret i32 %9, !dbg !15940
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @free_rx_agg(%struct.r8152* %tp, %struct.rx_agg* %agg) #2 !dbg !15941 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !15944, metadata !DIExpression()), !dbg !15949
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !15953, metadata !DIExpression()), !dbg !15955
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15957, metadata !DIExpression()), !dbg !15958
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !15959, metadata !DIExpression()), !dbg !15960
  %tp.addr = alloca %struct.r8152*, align 8
  %agg.addr = alloca %struct.rx_agg*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !15961, metadata !DIExpression()), !dbg !15962
  store %struct.rx_agg* %agg, %struct.rx_agg** %agg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rx_agg** %agg.addr, metadata !15963, metadata !DIExpression()), !dbg !15964
  %0 = load %struct.rx_agg*, %struct.rx_agg** %agg.addr, align 8, !dbg !15965
  %info_list = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %0, i32 0, i32 1, !dbg !15966
  call void @list_del(%struct.list_head* %info_list) #13, !dbg !15967
  %1 = load %struct.rx_agg*, %struct.rx_agg** %agg.addr, align 8, !dbg !15968
  %urb = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %1, i32 0, i32 2, !dbg !15969
  %2 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !15969
  call void @usb_free_urb(%struct.urb* %2) #13, !dbg !15970
  %3 = load %struct.rx_agg*, %struct.rx_agg** %agg.addr, align 8, !dbg !15971
  %page = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %3, i32 0, i32 4, !dbg !15972
  %4 = load %struct.page*, %struct.page** %page, align 8, !dbg !15972
  call void @put_page(%struct.page* %4) #13, !dbg !15973
  %5 = load %struct.rx_agg*, %struct.rx_agg** %agg.addr, align 8, !dbg !15974
  %6 = bitcast %struct.rx_agg* %5 to i8*, !dbg !15974
  call void @kfree(i8* %6) #13, !dbg !15975
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !15976
  %rx_count = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 24, !dbg !15977
  store %struct.atomic_t* %rx_count, %struct.atomic_t** %v.addr.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !15978
  %9 = bitcast %struct.atomic_t* %8 to i8*, !dbg !15978
  store i8* %9, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %10 = load i8*, i8** %v.addr.i.i, align 8, !dbg !15979
  %11 = load i64, i64* %size.addr.i.i, align 8, !dbg !15980
  %conv.i.i = trunc i64 %11 to i32, !dbg !15980
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %10, i32 %conv.i.i) #16, !dbg !15981
  %12 = load i8*, i8** %v.addr.i.i, align 8, !dbg !15982
  %13 = load i64, i64* %size.addr.i.i, align 8, !dbg !15982
  call void @kcsan_check_access(i8* %12, i64 %13, i32 7) #16, !dbg !15982
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !15983
  store %struct.atomic_t* %14, %struct.atomic_t** %v.addr.i1.i, align 8
  %15 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !15984
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %15, i32 0, i32 0, !dbg !15985
  call void asm sideeffect "decl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #11, !dbg !15986, !srcloc !15987
  ret void, !dbg !15988
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #2 !dbg !15989 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !15994, metadata !DIExpression()), !dbg !15995
  br label %do.body, !dbg !15996

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15998

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !15996
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !15996
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15996
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !15998
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !15996
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !16000
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !16001
  %conv = zext i1 %cmp to i32, !dbg !16001
  ret i32 %conv, !dbg !16002
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_splice(%struct.list_head* %list, %struct.list_head* %head) #2 !dbg !16003 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !16006, metadata !DIExpression()), !dbg !16007
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !16008, metadata !DIExpression()), !dbg !16009
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !16010
  %call = call i32 @list_empty(%struct.list_head* %0) #13, !dbg !16012
  %tobool = icmp ne i32 %call, 0, !dbg !16012
  br i1 %tobool, label %if.end, label %if.then, !dbg !16013

if.then:                                          ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !16014
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !16015
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !16016
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !16017
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !16017
  call void @__list_splice(%struct.list_head* %1, %struct.list_head* %2, %struct.list_head* %4) #13, !dbg !16018
  br label %if.end, !dbg !16018

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !16019
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #2 !dbg !16020 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !16021, metadata !DIExpression()), !dbg !16023
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !16024, metadata !DIExpression()), !dbg !16023
  %0 = load i64, i64* %__edi, align 8, !dbg !16023
  store i64 %0, i64* %__edi, align 8, !dbg !16023
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !16025, metadata !DIExpression()), !dbg !16023
  %1 = load i64, i64* %__esi, align 8, !dbg !16023
  store i64 %1, i64* %__esi, align 8, !dbg !16023
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !16026, metadata !DIExpression()), !dbg !16023
  %2 = load i64, i64* %__edx, align 8, !dbg !16023
  store i64 %2, i64* %__edx, align 8, !dbg !16023
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !16027, metadata !DIExpression()), !dbg !16023
  %3 = load i64, i64* %__ecx, align 8, !dbg !16023
  store i64 %3, i64* %__ecx, align 8, !dbg !16023
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !16028, metadata !DIExpression()), !dbg !16023
  %4 = load i64, i64* %__eax, align 8, !dbg !16023
  store i64 %4, i64* %__eax, align 8, !dbg !16023
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !16023
  %6 = call i64 @llvm.read_register.i64(metadata !10981), !dbg !16029
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #11, !dbg !16029, !srcloc !16032
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !16029
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !16029
  store i64 %asmresult, i64* %__eax, align 8, !dbg !16029
  call void @llvm.write_register.i64(metadata !10981, i64 %asmresult1), !dbg !16029
  %8 = load i64, i64* %__eax, align 8, !dbg !16029
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !16033, metadata !DIExpression()), !dbg !16035
  store i64 -1, i64* %__mask, align 8, !dbg !16035
  %9 = load i64, i64* %__mask, align 8, !dbg !16035
  store i64 %9, i64* %tmp, align 8, !dbg !16035
  %10 = load i64, i64* %tmp, align 8, !dbg !16035
  %and = and i64 %8, %10, !dbg !16029
  store i64 %and, i64* %__ret, align 8, !dbg !16029
  %11 = load i64, i64* %__ret, align 8, !dbg !16023
  store i64 %11, i64* %tmp2, align 8, !dbg !16036
  %12 = load i64, i64* %tmp2, align 8, !dbg !16023
  ret i64 %12, !dbg !16037
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #2 !dbg !16038 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !16039, metadata !DIExpression()), !dbg !16041
  %0 = load i64, i64* %__edi, align 8, !dbg !16041
  store i64 %0, i64* %__edi, align 8, !dbg !16041
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !16042, metadata !DIExpression()), !dbg !16041
  %1 = load i64, i64* %__esi, align 8, !dbg !16041
  store i64 %1, i64* %__esi, align 8, !dbg !16041
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !16043, metadata !DIExpression()), !dbg !16041
  %2 = load i64, i64* %__edx, align 8, !dbg !16041
  store i64 %2, i64* %__edx, align 8, !dbg !16041
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !16044, metadata !DIExpression()), !dbg !16041
  %3 = load i64, i64* %__ecx, align 8, !dbg !16041
  store i64 %3, i64* %__ecx, align 8, !dbg !16041
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !16045, metadata !DIExpression()), !dbg !16041
  %4 = load i64, i64* %__eax, align 8, !dbg !16041
  store i64 %4, i64* %__eax, align 8, !dbg !16041
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !16041
  %6 = call i64 @llvm.read_register.i64(metadata !10981), !dbg !16041
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #11, !dbg !16041, !srcloc !16046
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !16041
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !16041
  store i64 %asmresult, i64* %__eax, align 8, !dbg !16041
  call void @llvm.write_register.i64(metadata !10981, i64 %asmresult1), !dbg !16041
  ret void, !dbg !16047
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #10

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #11

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_splice(%struct.list_head* %list, %struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !16048 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  %first = alloca %struct.list_head*, align 8
  %last = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !16051, metadata !DIExpression()), !dbg !16052
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !16053, metadata !DIExpression()), !dbg !16054
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !16055, metadata !DIExpression()), !dbg !16056
  call void @llvm.dbg.declare(metadata %struct.list_head** %first, metadata !16057, metadata !DIExpression()), !dbg !16058
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !16059
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !16060
  %1 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !16060
  store %struct.list_head* %1, %struct.list_head** %first, align 8, !dbg !16058
  call void @llvm.dbg.declare(metadata %struct.list_head** %last, metadata !16061, metadata !DIExpression()), !dbg !16062
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !16063
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !16064
  %3 = load %struct.list_head*, %struct.list_head** %prev2, align 8, !dbg !16064
  store %struct.list_head* %3, %struct.list_head** %last, align 8, !dbg !16062
  %4 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !16065
  %5 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !16066
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %5, i32 0, i32 1, !dbg !16067
  store %struct.list_head* %4, %struct.list_head** %prev3, align 8, !dbg !16068
  %6 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !16069
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !16070
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %7, i32 0, i32 0, !dbg !16071
  store %struct.list_head* %6, %struct.list_head** %next4, align 8, !dbg !16072
  %8 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !16073
  %9 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !16074
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %9, i32 0, i32 0, !dbg !16075
  store %struct.list_head* %8, %struct.list_head** %next5, align 8, !dbg !16076
  %10 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !16077
  %11 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !16078
  %prev6 = getelementptr inbounds %struct.list_head, %struct.list_head* %11, i32 0, i32 1, !dbg !16079
  store %struct.list_head* %10, %struct.list_head** %prev6, align 8, !dbg !16080
  ret void, !dbg !16081
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #2 !dbg !16082 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !16083, metadata !DIExpression()), !dbg !16084
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !16085, metadata !DIExpression()), !dbg !16087
  %0 = load i64, i64* %__edi, align 8, !dbg !16087
  store i64 %0, i64* %__edi, align 8, !dbg !16087
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !16088, metadata !DIExpression()), !dbg !16087
  %1 = load i64, i64* %__esi, align 8, !dbg !16087
  store i64 %1, i64* %__esi, align 8, !dbg !16087
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !16089, metadata !DIExpression()), !dbg !16087
  %2 = load i64, i64* %__edx, align 8, !dbg !16087
  store i64 %2, i64* %__edx, align 8, !dbg !16087
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !16090, metadata !DIExpression()), !dbg !16087
  %3 = load i64, i64* %__ecx, align 8, !dbg !16087
  store i64 %3, i64* %__ecx, align 8, !dbg !16087
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !16091, metadata !DIExpression()), !dbg !16087
  %4 = load i64, i64* %__eax, align 8, !dbg !16087
  store i64 %4, i64* %__eax, align 8, !dbg !16087
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !16087
  %6 = call i64 @llvm.read_register.i64(metadata !10981), !dbg !16087
  %7 = load i64, i64* %f.addr, align 8, !dbg !16087
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #11, !dbg !16087, !srcloc !16092
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !16087
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !16087
  store i64 %asmresult, i64* %__eax, align 8, !dbg !16087
  call void @llvm.write_register.i64(metadata !10981, i64 %asmresult1), !dbg !16087
  ret void, !dbg !16093
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @compound_head(%struct.page* %page) #2 !dbg !16094 {
entry:
  %retval = alloca %struct.page*, align 8
  %page.addr = alloca %struct.page*, align 8
  %head = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !16098, metadata !DIExpression()), !dbg !16099
  call void @llvm.dbg.declare(metadata i64* %head, metadata !16100, metadata !DIExpression()), !dbg !16101
  br label %do.body, !dbg !16102

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16104

do.end:                                           ; preds = %do.body
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16102
  %1 = getelementptr inbounds %struct.page, %struct.page* %0, i32 0, i32 1, !dbg !16102
  %2 = bitcast %union.anon.2* %1 to %struct.anon.14*, !dbg !16102
  %compound_head = getelementptr inbounds %struct.anon.14, %struct.anon.14* %2, i32 0, i32 0, !dbg !16102
  %3 = load volatile i64, i64* %compound_head, align 8, !dbg !16102
  store i64 %3, i64* %tmp, align 8, !dbg !16104
  %4 = load i64, i64* %tmp, align 8, !dbg !16102
  store i64 %4, i64* %head, align 8, !dbg !16101
  %5 = load i64, i64* %head, align 8, !dbg !16106
  %and = and i64 %5, 1, !dbg !16106
  %tobool = icmp ne i64 %and, 0, !dbg !16106
  %lnot = xor i1 %tobool, true, !dbg !16106
  %lnot1 = xor i1 %lnot, true, !dbg !16106
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !16106
  %conv = sext i32 %lnot.ext to i64, !dbg !16106
  %tobool2 = icmp ne i64 %conv, 0, !dbg !16106
  br i1 %tobool2, label %if.then, label %if.end, !dbg !16108

if.then:                                          ; preds = %do.end
  %6 = load i64, i64* %head, align 8, !dbg !16109
  %sub = sub i64 %6, 1, !dbg !16110
  %7 = inttoptr i64 %sub to %struct.page*, !dbg !16111
  store %struct.page* %7, %struct.page** %retval, align 8, !dbg !16112
  br label %return, !dbg !16112

if.end:                                           ; preds = %do.end
  %8 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16113
  store %struct.page* %8, %struct.page** %retval, align 8, !dbg !16114
  br label %return, !dbg !16114

return:                                           ; preds = %if.end, %if.then
  %9 = load %struct.page*, %struct.page** %retval, align 8, !dbg !16115
  ret %struct.page* %9, !dbg !16115
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #2 !dbg !16116 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !16117, metadata !DIExpression()), !dbg !16118
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !16119
  call void @__list_del_entry(%struct.list_head* %0) #13, !dbg !16120
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !16121
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !16122
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !16123
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !16124
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !16125
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !16126
  ret void, !dbg !16127
}

; Function Attrs: noredzone
declare dso_local void @usb_free_urb(%struct.urb*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @put_page(%struct.page* %page) #2 !dbg !16128 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !16129, metadata !DIExpression()), !dbg !16130
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16131
  %call = call %struct.page* @compound_head(%struct.page* %0) #13, !dbg !16132
  store %struct.page* %call, %struct.page** %page.addr, align 8, !dbg !16133
  %1 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16134
  %call1 = call zeroext i1 @page_is_devmap_managed(%struct.page* %1) #13, !dbg !16136
  br i1 %call1, label %if.then, label %if.end, !dbg !16137

if.then:                                          ; preds = %entry
  %2 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16138
  call void @put_devmap_managed_page(%struct.page* %2) #13, !dbg !16140
  br label %if.end4, !dbg !16141

if.end:                                           ; preds = %entry
  %3 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16142
  %call2 = call i32 @put_page_testzero(%struct.page* %3) #13, !dbg !16144
  %tobool = icmp ne i32 %call2, 0, !dbg !16144
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !16145

if.then3:                                         ; preds = %if.end
  %4 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16146
  call void @__put_page(%struct.page* %4) #13, !dbg !16147
  br label %if.end4, !dbg !16147

if.end4:                                          ; preds = %if.then, %if.then3, %if.end
  ret void, !dbg !16148
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #2 !dbg !16149 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !16150, metadata !DIExpression()), !dbg !16151
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !16152
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #13, !dbg !16154
  br i1 %call, label %if.end, label %if.then, !dbg !16155

if.then:                                          ; preds = %entry
  br label %return, !dbg !16156

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !16157
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !16158
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !16158
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !16159
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !16160
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !16160
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #13, !dbg !16161
  br label %return, !dbg !16162

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !16162
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #2 !dbg !16163 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !16166, metadata !DIExpression()), !dbg !16167
  ret i1 true, !dbg !16168
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !16169 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !16170, metadata !DIExpression()), !dbg !16171
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !16172, metadata !DIExpression()), !dbg !16173
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !16174
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !16175
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !16176
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !16177
  br label %do.body, !dbg !16178

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !16179

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !16181

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !16179

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !16183
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !16183
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !16183
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !16183
  br label %do.end5, !dbg !16183

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !16179

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !16185
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @page_is_devmap_managed(%struct.page* %page) #2 !dbg !16186 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !16189, metadata !DIExpression()), !dbg !16190
  ret i1 false, !dbg !16191
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @put_devmap_managed_page(%struct.page* %page) #2 !dbg !16192 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !16193, metadata !DIExpression()), !dbg !16194
  ret void, !dbg !16195
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @put_page_testzero(%struct.page* %page) #2 !dbg !16196 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !16197, metadata !DIExpression()), !dbg !16198
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16199
  %call = call i32 @page_ref_dec_and_test(%struct.page* %0) #13, !dbg !16200
  ret i32 %call, !dbg !16201
}

; Function Attrs: noredzone
declare dso_local void @__put_page(%struct.page*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @page_ref_dec_and_test(%struct.page* %page) #2 !dbg !16202 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !16203, metadata !DIExpression()), !dbg !16207
  %c.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i.i, metadata !16211, metadata !DIExpression()), !dbg !16213
  %tmp.i.i = alloca i8, align 1
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !15953, metadata !DIExpression()), !dbg !16214
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15957, metadata !DIExpression()), !dbg !16216
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !16217, metadata !DIExpression()), !dbg !16218
  %page.addr = alloca %struct.page*, align 8
  %ret = alloca i32, align 4
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !16219, metadata !DIExpression()), !dbg !16220
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16221, metadata !DIExpression()), !dbg !16222
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16223
  %_refcount = getelementptr inbounds %struct.page, %struct.page* %0, i32 0, i32 3, !dbg !16224
  store %struct.atomic_t* %_refcount, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !16225
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !16225
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16226
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !16227
  %conv.i.i = trunc i64 %4 to i32, !dbg !16227
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #16, !dbg !16228
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16229
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !16229
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #16, !dbg !16229
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !16230
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !16213
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !16213
  %9 = call i8 asm sideeffect "decl $0\0A\09/* output condition code e*/\0A", "=*m,={@cce},*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #11, !dbg !16213, !srcloc !16231
  store i8 %9, i8* %c.i.i, align 1, !dbg !16213
  %10 = load i8, i8* %c.i.i, align 1, !dbg !16213
  %tobool.i.i = trunc i8 %10 to i1, !dbg !16213
  %frombool.i.i = zext i1 %tobool.i.i to i8, !dbg !16213
  store i8 %frombool.i.i, i8* %tmp.i.i, align 1, !dbg !16213
  %11 = load i8, i8* %tmp.i.i, align 1, !dbg !16213
  %tobool1.i.i = trunc i8 %11 to i1, !dbg !16213
  %conv = zext i1 %tobool1.i.i to i32, !dbg !16232
  store i32 %conv, i32* %ret, align 4, !dbg !16222
  %12 = load i32, i32* %ret, align 4, !dbg !16233
  ret i32 %12, !dbg !16234
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #2 !dbg !16235 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !16236, metadata !DIExpression()), !dbg !16237
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !16238, metadata !DIExpression()), !dbg !16239
  ret i1 true, !dbg !16240
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8152b_exit_oob(%struct.r8152* %tp) #2 !dbg !16241 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !16242, metadata !DIExpression()), !dbg !16243
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !16244, metadata !DIExpression()), !dbg !16245
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16246
  %call = call i32 @ocp_read_dword(%struct.r8152* %0, i16 zeroext 256, i16 zeroext -16368) #13, !dbg !16247
  store i32 %call, i32* %ocp_data, align 4, !dbg !16248
  %1 = load i32, i32* %ocp_data, align 4, !dbg !16249
  %and = and i32 %1, -16, !dbg !16249
  store i32 %and, i32* %ocp_data, align 4, !dbg !16249
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16250
  %3 = load i32, i32* %ocp_data, align 4, !dbg !16251
  call void @ocp_write_dword(%struct.r8152* %2, i16 zeroext 256, i16 zeroext -16368, i32 %3) #13, !dbg !16252
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16253
  call void @rxdy_gated_en(%struct.r8152* %4, i1 zeroext true) #13, !dbg !16254
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16255
  call void @r8153_teredo_off(%struct.r8152* %5) #13, !dbg !16256
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16257
  call void @ocp_write_byte(%struct.r8152* %6, i16 zeroext 256, i16 zeroext -6116, i32 0) #13, !dbg !16258
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16259
  call void @ocp_write_byte(%struct.r8152* %7, i16 zeroext 256, i16 zeroext -6125, i32 0) #13, !dbg !16260
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16261
  %call1 = call zeroext i8 @ocp_read_byte(%struct.r8152* %8, i16 zeroext 256, i16 zeroext -6065) #13, !dbg !16262
  %conv = zext i8 %call1 to i32, !dbg !16262
  store i32 %conv, i32* %ocp_data, align 4, !dbg !16263
  %9 = load i32, i32* %ocp_data, align 4, !dbg !16264
  %and2 = and i32 %9, -129, !dbg !16264
  store i32 %and2, i32* %ocp_data, align 4, !dbg !16264
  %10 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16265
  %11 = load i32, i32* %ocp_data, align 4, !dbg !16266
  call void @ocp_write_byte(%struct.r8152* %10, i16 zeroext 256, i16 zeroext -6065, i32 %11) #13, !dbg !16267
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16268
  %call3 = call zeroext i16 @ocp_read_word(%struct.r8152* %12, i16 zeroext 256, i16 zeroext -5922) #13, !dbg !16269
  %conv4 = zext i16 %call3 to i32, !dbg !16269
  store i32 %conv4, i32* %ocp_data, align 4, !dbg !16270
  %13 = load i32, i32* %ocp_data, align 4, !dbg !16271
  %and5 = and i32 %13, -16385, !dbg !16271
  store i32 %and5, i32* %ocp_data, align 4, !dbg !16271
  %14 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16272
  %15 = load i32, i32* %ocp_data, align 4, !dbg !16273
  call void @ocp_write_word(%struct.r8152* %14, i16 zeroext 256, i16 zeroext -5922, i32 %15) #13, !dbg !16274
  %16 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16275
  call void @wait_oob_link_list_ready(%struct.r8152* %16) #13, !dbg !16276
  %17 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16277
  %call6 = call zeroext i16 @ocp_read_word(%struct.r8152* %17, i16 zeroext 256, i16 zeroext -5922) #13, !dbg !16278
  %conv7 = zext i16 %call6 to i32, !dbg !16278
  store i32 %conv7, i32* %ocp_data, align 4, !dbg !16279
  %18 = load i32, i32* %ocp_data, align 4, !dbg !16280
  %or = or i32 %18, 32768, !dbg !16280
  store i32 %or, i32* %ocp_data, align 4, !dbg !16280
  %19 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16281
  %20 = load i32, i32* %ocp_data, align 4, !dbg !16282
  call void @ocp_write_word(%struct.r8152* %19, i16 zeroext 256, i16 zeroext -5922, i32 %20) #13, !dbg !16283
  %21 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16284
  call void @wait_oob_link_list_ready(%struct.r8152* %21) #13, !dbg !16285
  %22 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16286
  call void @rtl8152_nic_reset(%struct.r8152* %22) #13, !dbg !16287
  %23 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16288
  call void @ocp_write_dword(%struct.r8152* %23, i16 zeroext 256, i16 zeroext -16224, i32 524290) #13, !dbg !16289
  %24 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16290
  %udev = getelementptr inbounds %struct.r8152, %struct.r8152* %24, i32 0, i32 1, !dbg !16292
  %25 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !16292
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %25, i32 0, i32 4, !dbg !16293
  %26 = load i32, i32* %speed, align 4, !dbg !16293
  %cmp = icmp eq i32 %26, 2, !dbg !16294
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16295

lor.lhs.false:                                    ; preds = %entry
  %27 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16296
  %udev9 = getelementptr inbounds %struct.r8152, %struct.r8152* %27, i32 0, i32 1, !dbg !16297
  %28 = load %struct.usb_device*, %struct.usb_device** %udev9, align 8, !dbg !16297
  %speed10 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %28, i32 0, i32 4, !dbg !16298
  %29 = load i32, i32* %speed10, align 4, !dbg !16298
  %cmp11 = icmp eq i32 %29, 1, !dbg !16299
  br i1 %cmp11, label %if.then, label %if.else, !dbg !16300

if.then:                                          ; preds = %lor.lhs.false, %entry
  %30 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16301
  call void @ocp_write_dword(%struct.r8152* %30, i16 zeroext 256, i16 zeroext -16220, i32 96) #13, !dbg !16303
  %31 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16304
  call void @ocp_write_dword(%struct.r8152* %31, i16 zeroext 256, i16 zeroext -16216, i32 120) #13, !dbg !16305
  br label %if.end, !dbg !16306

if.else:                                          ; preds = %lor.lhs.false
  %32 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16307
  call void @ocp_write_dword(%struct.r8152* %32, i16 zeroext 256, i16 zeroext -16220, i32 56) #13, !dbg !16309
  %33 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16310
  call void @ocp_write_dword(%struct.r8152* %33, i16 zeroext 256, i16 zeroext -16216, i32 72) #13, !dbg !16311
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %34 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16312
  call void @ocp_write_dword(%struct.r8152* %34, i16 zeroext 256, i16 zeroext -6632, i32 4194312) #13, !dbg !16313
  %35 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16314
  call void @ocp_write_byte(%struct.r8152* %35, i16 zeroext 0, i16 zeroext -11254, i32 3) #13, !dbg !16315
  %36 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16316
  call void @ocp_write_dword(%struct.r8152* %36, i16 zeroext 0, i16 zeroext -11252, i32 2048000384) #13, !dbg !16317
  %37 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16318
  call void @ocp_write_dword(%struct.r8152* %37, i16 zeroext 0, i16 zeroext -11212, i32 257) #13, !dbg !16319
  %38 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16320
  %39 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16321
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %39, i32 0, i32 4, !dbg !16322
  %40 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16322
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %40, i32 0, i32 15, !dbg !16323
  %41 = load i64, i64* %features, align 8, !dbg !16323
  %and13 = and i64 %41, 256, !dbg !16324
  %tobool = icmp ne i64 %and13, 0, !dbg !16321
  call void @rtl_rx_vlan_en(%struct.r8152* %38, i1 zeroext %tobool) #13, !dbg !16325
  %42 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16326
  call void @ocp_write_word(%struct.r8152* %42, i16 zeroext 256, i16 zeroext -16362, i32 1522) #13, !dbg !16327
  %43 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16328
  %call14 = call zeroext i16 @ocp_read_word(%struct.r8152* %43, i16 zeroext 256, i16 zeroext -6640) #13, !dbg !16329
  %conv15 = zext i16 %call14 to i32, !dbg !16329
  store i32 %conv15, i32* %ocp_data, align 4, !dbg !16330
  %44 = load i32, i32* %ocp_data, align 4, !dbg !16331
  %or16 = or i32 %44, 128, !dbg !16331
  store i32 %or16, i32* %ocp_data, align 4, !dbg !16331
  %45 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16332
  %46 = load i32, i32* %ocp_data, align 4, !dbg !16333
  call void @ocp_write_word(%struct.r8152* %45, i16 zeroext 256, i16 zeroext -6640, i32 %46) #13, !dbg !16334
  ret void, !dbg !16335
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153_teredo_off(%struct.r8152* %tp) #2 !dbg !16336 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !16337, metadata !DIExpression()), !dbg !16338
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !16339, metadata !DIExpression()), !dbg !16340
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16341
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 39, !dbg !16342
  %1 = load i8, i8* %version, align 8, !dbg !16342
  %conv = zext i8 %1 to i32, !dbg !16341
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb2
    i32 9, label %sw.bb2
  ], !dbg !16343

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16344
  %call = call zeroext i16 @ocp_read_word(%struct.r8152* %2, i16 zeroext 256, i16 zeroext -16196) #13, !dbg !16346
  %conv1 = zext i16 %call to i32, !dbg !16346
  store i32 %conv1, i32* %ocp_data, align 4, !dbg !16347
  %3 = load i32, i32* %ocp_data, align 4, !dbg !16348
  %and = and i32 %3, -33024, !dbg !16348
  store i32 %and, i32* %ocp_data, align 4, !dbg !16348
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16349
  %5 = load i32, i32* %ocp_data, align 4, !dbg !16350
  call void @ocp_write_word(%struct.r8152* %4, i16 zeroext 256, i16 zeroext -16196, i32 %5) #13, !dbg !16351
  br label %sw.epilog, !dbg !16352

sw.bb2:                                           ; preds = %entry, %entry
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16353
  call void @ocp_write_byte(%struct.r8152* %6, i16 zeroext 256, i16 zeroext -16196, i32 255) #13, !dbg !16354
  br label %sw.epilog, !dbg !16355

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !16356

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16357
  call void @ocp_write_word(%struct.r8152* %7, i16 zeroext 256, i16 zeroext -7128, i32 16) #13, !dbg !16358
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16359
  call void @ocp_write_word(%struct.r8152* %8, i16 zeroext 256, i16 zeroext -11544, i32 0) #13, !dbg !16360
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16361
  call void @ocp_write_dword(%struct.r8152* %9, i16 zeroext 256, i16 zeroext -11572, i32 0) #13, !dbg !16362
  ret void, !dbg !16363
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @wait_oob_link_list_ready(%struct.r8152* %tp) #2 !dbg !16364 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !16365, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !16367, metadata !DIExpression()), !dbg !16368
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16369, metadata !DIExpression()), !dbg !16370
  store i32 0, i32* %i, align 4, !dbg !16371
  br label %for.cond, !dbg !16373

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !16374
  %cmp = icmp slt i32 %0, 1000, !dbg !16376
  br i1 %cmp, label %for.body, label %for.end, !dbg !16377

for.body:                                         ; preds = %for.cond
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16378
  %call = call zeroext i8 @ocp_read_byte(%struct.r8152* %1, i16 zeroext 256, i16 zeroext -6065) #13, !dbg !16380
  %conv = zext i8 %call to i32, !dbg !16380
  store i32 %conv, i32* %ocp_data, align 4, !dbg !16381
  %2 = load i32, i32* %ocp_data, align 4, !dbg !16382
  %and = and i32 %2, 2, !dbg !16384
  %tobool = icmp ne i32 %and, 0, !dbg !16384
  br i1 %tobool, label %if.then, label %if.end, !dbg !16385

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !16386

if.end:                                           ; preds = %for.body
  call void @usleep_range(i64 1000, i64 2000) #13, !dbg !16387
  br label %for.inc, !dbg !16388

for.inc:                                          ; preds = %if.end
  %3 = load i32, i32* %i, align 4, !dbg !16389
  %inc = add i32 %3, 1, !dbg !16389
  store i32 %inc, i32* %i, align 4, !dbg !16389
  br label %for.cond, !dbg !16390, !llvm.loop !16391

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !16393
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl_rx_vlan_en(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !16394 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !16395, metadata !DIExpression()), !dbg !16396
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !16397, metadata !DIExpression()), !dbg !16398
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !16399, metadata !DIExpression()), !dbg !16400
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16401
  %call = call zeroext i16 @ocp_read_word(%struct.r8152* %0, i16 zeroext 256, i16 zeroext -6060) #13, !dbg !16402
  %conv = zext i16 %call to i32, !dbg !16402
  store i32 %conv, i32* %ocp_data, align 4, !dbg !16403
  %1 = load i8, i8* %enable.addr, align 1, !dbg !16404
  %tobool = trunc i8 %1 to i1, !dbg !16404
  br i1 %tobool, label %if.then, label %if.else, !dbg !16406

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ocp_data, align 4, !dbg !16407
  %or = or i32 %2, 64, !dbg !16407
  store i32 %or, i32* %ocp_data, align 4, !dbg !16407
  br label %if.end, !dbg !16408

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %ocp_data, align 4, !dbg !16409
  %and = and i32 %3, -65, !dbg !16409
  store i32 %and, i32* %ocp_data, align 4, !dbg !16409
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16410
  %5 = load i32, i32* %ocp_data, align 4, !dbg !16411
  call void @ocp_write_word(%struct.r8152* %4, i16 zeroext 256, i16 zeroext -6060, i32 %5) #13, !dbg !16412
  ret void, !dbg !16413
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8152b_enter_oob(%struct.r8152* %tp) #2 !dbg !16414 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !16415, metadata !DIExpression()), !dbg !16416
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !16417, metadata !DIExpression()), !dbg !16418
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16419
  %call = call zeroext i8 @ocp_read_byte(%struct.r8152* %0, i16 zeroext 256, i16 zeroext -6065) #13, !dbg !16420
  %conv = zext i8 %call to i32, !dbg !16420
  store i32 %conv, i32* %ocp_data, align 4, !dbg !16421
  %1 = load i32, i32* %ocp_data, align 4, !dbg !16422
  %and = and i32 %1, -129, !dbg !16422
  store i32 %and, i32* %ocp_data, align 4, !dbg !16422
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16423
  %3 = load i32, i32* %ocp_data, align 4, !dbg !16424
  call void @ocp_write_byte(%struct.r8152* %2, i16 zeroext 256, i16 zeroext -6065, i32 %3) #13, !dbg !16425
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16426
  call void @ocp_write_dword(%struct.r8152* %4, i16 zeroext 256, i16 zeroext -16224, i32 25165827) #13, !dbg !16427
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16428
  call void @ocp_write_dword(%struct.r8152* %5, i16 zeroext 256, i16 zeroext -16220, i32 74) #13, !dbg !16429
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16430
  call void @ocp_write_dword(%struct.r8152* %6, i16 zeroext 256, i16 zeroext -16216, i32 90) #13, !dbg !16431
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16432
  call void @rtl_disable(%struct.r8152* %7) #13, !dbg !16433
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16434
  call void @wait_oob_link_list_ready(%struct.r8152* %8) #13, !dbg !16435
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16436
  %call1 = call zeroext i16 @ocp_read_word(%struct.r8152* %9, i16 zeroext 256, i16 zeroext -5922) #13, !dbg !16437
  %conv2 = zext i16 %call1 to i32, !dbg !16437
  store i32 %conv2, i32* %ocp_data, align 4, !dbg !16438
  %10 = load i32, i32* %ocp_data, align 4, !dbg !16439
  %or = or i32 %10, 32768, !dbg !16439
  store i32 %or, i32* %ocp_data, align 4, !dbg !16439
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16440
  %12 = load i32, i32* %ocp_data, align 4, !dbg !16441
  call void @ocp_write_word(%struct.r8152* %11, i16 zeroext 256, i16 zeroext -5922, i32 %12) #13, !dbg !16442
  %13 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16443
  call void @wait_oob_link_list_ready(%struct.r8152* %13) #13, !dbg !16444
  %14 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16445
  call void @ocp_write_word(%struct.r8152* %14, i16 zeroext 256, i16 zeroext -16362, i32 1522) #13, !dbg !16446
  %15 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16447
  call void @rtl_rx_vlan_en(%struct.r8152* %15, i1 zeroext true) #13, !dbg !16448
  %16 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16449
  %call3 = call zeroext i16 @ocp_read_word(%struct.r8152* %16, i16 zeroext 256, i16 zeroext -11872) #13, !dbg !16450
  %conv4 = zext i16 %call3 to i32, !dbg !16450
  store i32 %conv4, i32* %ocp_data, align 4, !dbg !16451
  %17 = load i32, i32* %ocp_data, align 4, !dbg !16452
  %or5 = or i32 %17, 1, !dbg !16452
  store i32 %or5, i32* %ocp_data, align 4, !dbg !16452
  %18 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16453
  %19 = load i32, i32* %ocp_data, align 4, !dbg !16454
  call void @ocp_write_word(%struct.r8152* %18, i16 zeroext 256, i16 zeroext -11872, i32 %19) #13, !dbg !16455
  %20 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16456
  %call6 = call zeroext i8 @ocp_read_byte(%struct.r8152* %20, i16 zeroext 256, i16 zeroext -6065) #13, !dbg !16457
  %conv7 = zext i8 %call6 to i32, !dbg !16457
  store i32 %conv7, i32* %ocp_data, align 4, !dbg !16458
  %21 = load i32, i32* %ocp_data, align 4, !dbg !16459
  %or8 = or i32 %21, 129, !dbg !16459
  store i32 %or8, i32* %ocp_data, align 4, !dbg !16459
  %22 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16460
  %23 = load i32, i32* %ocp_data, align 4, !dbg !16461
  call void @ocp_write_byte(%struct.r8152* %22, i16 zeroext 256, i16 zeroext -6065, i32 %23) #13, !dbg !16462
  %24 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16463
  call void @rxdy_gated_en(%struct.r8152* %24, i1 zeroext false) #13, !dbg !16464
  %25 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16465
  %call9 = call i32 @ocp_read_dword(%struct.r8152* %25, i16 zeroext 256, i16 zeroext -16368) #13, !dbg !16466
  store i32 %call9, i32* %ocp_data, align 4, !dbg !16467
  %26 = load i32, i32* %ocp_data, align 4, !dbg !16468
  %or10 = or i32 %26, 14, !dbg !16468
  store i32 %or10, i32* %ocp_data, align 4, !dbg !16468
  %27 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16469
  %28 = load i32, i32* %ocp_data, align 4, !dbg !16470
  call void @ocp_write_dword(%struct.r8152* %27, i16 zeroext 256, i16 zeroext -16368, i32 %28) #13, !dbg !16471
  ret void, !dbg !16472
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @r8152_mmd_read(%struct.r8152* %tp, i16 zeroext %dev, i16 zeroext %reg) #2 !dbg !16473 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %dev.addr = alloca i16, align 2
  %reg.addr = alloca i16, align 2
  %data = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !16474, metadata !DIExpression()), !dbg !16475
  store i16 %dev, i16* %dev.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %dev.addr, metadata !16476, metadata !DIExpression()), !dbg !16477
  store i16 %reg, i16* %reg.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %reg.addr, metadata !16478, metadata !DIExpression()), !dbg !16479
  call void @llvm.dbg.declare(metadata i16* %data, metadata !16480, metadata !DIExpression()), !dbg !16481
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16482
  %1 = load i16, i16* %dev.addr, align 2, !dbg !16483
  %2 = load i16, i16* %reg.addr, align 2, !dbg !16484
  call void @r8152_mmd_indirect(%struct.r8152* %0, i16 zeroext %1, i16 zeroext %2) #13, !dbg !16485
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16486
  %call = call zeroext i16 @ocp_reg_read(%struct.r8152* %3, i16 zeroext -23524) #13, !dbg !16487
  store i16 %call, i16* %data, align 2, !dbg !16488
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16489
  call void @ocp_reg_write(%struct.r8152* %4, i16 zeroext -23526, i16 zeroext 0) #13, !dbg !16490
  %5 = load i16, i16* %data, align 2, !dbg !16491
  ret i16 %5, !dbg !16492
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmd_eee_cap_to_ethtool_sup_t(i16 zeroext %eee_cap) #2 !dbg !16493 {
entry:
  %eee_cap.addr = alloca i16, align 2
  %supported = alloca i32, align 4
  store i16 %eee_cap, i16* %eee_cap.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %eee_cap.addr, metadata !16497, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.declare(metadata i32* %supported, metadata !16499, metadata !DIExpression()), !dbg !16500
  store i32 0, i32* %supported, align 4, !dbg !16500
  %0 = load i16, i16* %eee_cap.addr, align 2, !dbg !16501
  %conv = zext i16 %0 to i32, !dbg !16501
  %and = and i32 %conv, 2, !dbg !16503
  %tobool = icmp ne i32 %and, 0, !dbg !16503
  br i1 %tobool, label %if.then, label %if.end, !dbg !16504

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %supported, align 4, !dbg !16505
  %conv1 = zext i32 %1 to i64, !dbg !16505
  %or = or i64 %conv1, 8, !dbg !16505
  %conv2 = trunc i64 %or to i32, !dbg !16505
  store i32 %conv2, i32* %supported, align 4, !dbg !16505
  br label %if.end, !dbg !16506

if.end:                                           ; preds = %if.then, %entry
  %2 = load i16, i16* %eee_cap.addr, align 2, !dbg !16507
  %conv3 = zext i16 %2 to i32, !dbg !16507
  %and4 = and i32 %conv3, 4, !dbg !16509
  %tobool5 = icmp ne i32 %and4, 0, !dbg !16509
  br i1 %tobool5, label %if.then6, label %if.end10, !dbg !16510

if.then6:                                         ; preds = %if.end
  %3 = load i32, i32* %supported, align 4, !dbg !16511
  %conv7 = zext i32 %3 to i64, !dbg !16511
  %or8 = or i64 %conv7, 32, !dbg !16511
  %conv9 = trunc i64 %or8 to i32, !dbg !16511
  store i32 %conv9, i32* %supported, align 4, !dbg !16511
  br label %if.end10, !dbg !16512

if.end10:                                         ; preds = %if.then6, %if.end
  %4 = load i16, i16* %eee_cap.addr, align 2, !dbg !16513
  %conv11 = zext i16 %4 to i32, !dbg !16513
  %and12 = and i32 %conv11, 8, !dbg !16515
  %tobool13 = icmp ne i32 %and12, 0, !dbg !16515
  br i1 %tobool13, label %if.then14, label %if.end18, !dbg !16516

if.then14:                                        ; preds = %if.end10
  %5 = load i32, i32* %supported, align 4, !dbg !16517
  %conv15 = zext i32 %5 to i64, !dbg !16517
  %or16 = or i64 %conv15, 4096, !dbg !16517
  %conv17 = trunc i64 %or16 to i32, !dbg !16517
  store i32 %conv17, i32* %supported, align 4, !dbg !16517
  br label %if.end18, !dbg !16518

if.end18:                                         ; preds = %if.then14, %if.end10
  %6 = load i16, i16* %eee_cap.addr, align 2, !dbg !16519
  %conv19 = zext i16 %6 to i32, !dbg !16519
  %and20 = and i32 %conv19, 16, !dbg !16521
  %tobool21 = icmp ne i32 %and20, 0, !dbg !16521
  br i1 %tobool21, label %if.then22, label %if.end26, !dbg !16522

if.then22:                                        ; preds = %if.end18
  %7 = load i32, i32* %supported, align 4, !dbg !16523
  %conv23 = zext i32 %7 to i64, !dbg !16523
  %or24 = or i64 %conv23, 131072, !dbg !16523
  %conv25 = trunc i64 %or24 to i32, !dbg !16523
  store i32 %conv25, i32* %supported, align 4, !dbg !16523
  br label %if.end26, !dbg !16524

if.end26:                                         ; preds = %if.then22, %if.end18
  %8 = load i16, i16* %eee_cap.addr, align 2, !dbg !16525
  %conv27 = zext i16 %8 to i32, !dbg !16525
  %and28 = and i32 %conv27, 32, !dbg !16527
  %tobool29 = icmp ne i32 %and28, 0, !dbg !16527
  br i1 %tobool29, label %if.then30, label %if.end34, !dbg !16528

if.then30:                                        ; preds = %if.end26
  %9 = load i32, i32* %supported, align 4, !dbg !16529
  %conv31 = zext i32 %9 to i64, !dbg !16529
  %or32 = or i64 %conv31, 262144, !dbg !16529
  %conv33 = trunc i64 %or32 to i32, !dbg !16529
  store i32 %conv33, i32* %supported, align 4, !dbg !16529
  br label %if.end34, !dbg !16530

if.end34:                                         ; preds = %if.then30, %if.end26
  %10 = load i16, i16* %eee_cap.addr, align 2, !dbg !16531
  %conv35 = zext i16 %10 to i32, !dbg !16531
  %and36 = and i32 %conv35, 64, !dbg !16533
  %tobool37 = icmp ne i32 %and36, 0, !dbg !16533
  br i1 %tobool37, label %if.then38, label %if.end42, !dbg !16534

if.then38:                                        ; preds = %if.end34
  %11 = load i32, i32* %supported, align 4, !dbg !16535
  %conv39 = zext i32 %11 to i64, !dbg !16535
  %or40 = or i64 %conv39, 524288, !dbg !16535
  %conv41 = trunc i64 %or40 to i32, !dbg !16535
  store i32 %conv41, i32* %supported, align 4, !dbg !16535
  br label %if.end42, !dbg !16536

if.end42:                                         ; preds = %if.then38, %if.end34
  %12 = load i32, i32* %supported, align 4, !dbg !16537
  ret i32 %12, !dbg !16538
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmd_eee_adv_to_ethtool_adv_t(i16 zeroext %eee_adv) #2 !dbg !16539 {
entry:
  %eee_adv.addr = alloca i16, align 2
  %adv = alloca i32, align 4
  store i16 %eee_adv, i16* %eee_adv.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %eee_adv.addr, metadata !16540, metadata !DIExpression()), !dbg !16541
  call void @llvm.dbg.declare(metadata i32* %adv, metadata !16542, metadata !DIExpression()), !dbg !16543
  store i32 0, i32* %adv, align 4, !dbg !16543
  %0 = load i16, i16* %eee_adv.addr, align 2, !dbg !16544
  %conv = zext i16 %0 to i32, !dbg !16544
  %and = and i32 %conv, 2, !dbg !16546
  %tobool = icmp ne i32 %and, 0, !dbg !16546
  br i1 %tobool, label %if.then, label %if.end, !dbg !16547

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %adv, align 4, !dbg !16548
  %conv1 = zext i32 %1 to i64, !dbg !16548
  %or = or i64 %conv1, 8, !dbg !16548
  %conv2 = trunc i64 %or to i32, !dbg !16548
  store i32 %conv2, i32* %adv, align 4, !dbg !16548
  br label %if.end, !dbg !16549

if.end:                                           ; preds = %if.then, %entry
  %2 = load i16, i16* %eee_adv.addr, align 2, !dbg !16550
  %conv3 = zext i16 %2 to i32, !dbg !16550
  %and4 = and i32 %conv3, 4, !dbg !16552
  %tobool5 = icmp ne i32 %and4, 0, !dbg !16552
  br i1 %tobool5, label %if.then6, label %if.end10, !dbg !16553

if.then6:                                         ; preds = %if.end
  %3 = load i32, i32* %adv, align 4, !dbg !16554
  %conv7 = zext i32 %3 to i64, !dbg !16554
  %or8 = or i64 %conv7, 32, !dbg !16554
  %conv9 = trunc i64 %or8 to i32, !dbg !16554
  store i32 %conv9, i32* %adv, align 4, !dbg !16554
  br label %if.end10, !dbg !16555

if.end10:                                         ; preds = %if.then6, %if.end
  %4 = load i16, i16* %eee_adv.addr, align 2, !dbg !16556
  %conv11 = zext i16 %4 to i32, !dbg !16556
  %and12 = and i32 %conv11, 8, !dbg !16558
  %tobool13 = icmp ne i32 %and12, 0, !dbg !16558
  br i1 %tobool13, label %if.then14, label %if.end18, !dbg !16559

if.then14:                                        ; preds = %if.end10
  %5 = load i32, i32* %adv, align 4, !dbg !16560
  %conv15 = zext i32 %5 to i64, !dbg !16560
  %or16 = or i64 %conv15, 4096, !dbg !16560
  %conv17 = trunc i64 %or16 to i32, !dbg !16560
  store i32 %conv17, i32* %adv, align 4, !dbg !16560
  br label %if.end18, !dbg !16561

if.end18:                                         ; preds = %if.then14, %if.end10
  %6 = load i16, i16* %eee_adv.addr, align 2, !dbg !16562
  %conv19 = zext i16 %6 to i32, !dbg !16562
  %and20 = and i32 %conv19, 16, !dbg !16564
  %tobool21 = icmp ne i32 %and20, 0, !dbg !16564
  br i1 %tobool21, label %if.then22, label %if.end26, !dbg !16565

if.then22:                                        ; preds = %if.end18
  %7 = load i32, i32* %adv, align 4, !dbg !16566
  %conv23 = zext i32 %7 to i64, !dbg !16566
  %or24 = or i64 %conv23, 131072, !dbg !16566
  %conv25 = trunc i64 %or24 to i32, !dbg !16566
  store i32 %conv25, i32* %adv, align 4, !dbg !16566
  br label %if.end26, !dbg !16567

if.end26:                                         ; preds = %if.then22, %if.end18
  %8 = load i16, i16* %eee_adv.addr, align 2, !dbg !16568
  %conv27 = zext i16 %8 to i32, !dbg !16568
  %and28 = and i32 %conv27, 32, !dbg !16570
  %tobool29 = icmp ne i32 %and28, 0, !dbg !16570
  br i1 %tobool29, label %if.then30, label %if.end34, !dbg !16571

if.then30:                                        ; preds = %if.end26
  %9 = load i32, i32* %adv, align 4, !dbg !16572
  %conv31 = zext i32 %9 to i64, !dbg !16572
  %or32 = or i64 %conv31, 262144, !dbg !16572
  %conv33 = trunc i64 %or32 to i32, !dbg !16572
  store i32 %conv33, i32* %adv, align 4, !dbg !16572
  br label %if.end34, !dbg !16573

if.end34:                                         ; preds = %if.then30, %if.end26
  %10 = load i16, i16* %eee_adv.addr, align 2, !dbg !16574
  %conv35 = zext i16 %10 to i32, !dbg !16574
  %and36 = and i32 %conv35, 64, !dbg !16576
  %tobool37 = icmp ne i32 %and36, 0, !dbg !16576
  br i1 %tobool37, label %if.then38, label %if.end42, !dbg !16577

if.then38:                                        ; preds = %if.end34
  %11 = load i32, i32* %adv, align 4, !dbg !16578
  %conv39 = zext i32 %11 to i64, !dbg !16578
  %or40 = or i64 %conv39, 524288, !dbg !16578
  %conv41 = trunc i64 %or40 to i32, !dbg !16578
  store i32 %conv41, i32* %adv, align 4, !dbg !16578
  br label %if.end42, !dbg !16579

if.end42:                                         ; preds = %if.then38, %if.end34
  %12 = load i32, i32* %adv, align 4, !dbg !16580
  ret i32 %12, !dbg !16581
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8152_mmd_indirect(%struct.r8152* %tp, i16 zeroext %dev, i16 zeroext %reg) #2 !dbg !16582 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %dev.addr = alloca i16, align 2
  %reg.addr = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !16583, metadata !DIExpression()), !dbg !16584
  store i16 %dev, i16* %dev.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %dev.addr, metadata !16585, metadata !DIExpression()), !dbg !16586
  store i16 %reg, i16* %reg.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %reg.addr, metadata !16587, metadata !DIExpression()), !dbg !16588
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16589
  %1 = load i16, i16* %dev.addr, align 2, !dbg !16590
  %conv = zext i16 %1 to i32, !dbg !16590
  %or = or i32 0, %conv, !dbg !16591
  %conv1 = trunc i32 %or to i16, !dbg !16592
  call void @ocp_reg_write(%struct.r8152* %0, i16 zeroext -23526, i16 zeroext %conv1) #13, !dbg !16593
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16594
  %3 = load i16, i16* %reg.addr, align 2, !dbg !16595
  call void @ocp_reg_write(%struct.r8152* %2, i16 zeroext -23524, i16 zeroext %3) #13, !dbg !16596
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16597
  %5 = load i16, i16* %dev.addr, align 2, !dbg !16598
  %conv2 = zext i16 %5 to i32, !dbg !16598
  %or3 = or i32 16384, %conv2, !dbg !16599
  %conv4 = trunc i32 %or3 to i16, !dbg !16600
  call void @ocp_reg_write(%struct.r8152* %4, i16 zeroext -23526, i16 zeroext %conv4) #13, !dbg !16601
  ret void, !dbg !16602
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @ethtool_adv_to_mmd_eee_adv_t(i32 %adv) #2 !dbg !16603 {
entry:
  %adv.addr = alloca i32, align 4
  %reg = alloca i16, align 2
  store i32 %adv, i32* %adv.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %adv.addr, metadata !16606, metadata !DIExpression()), !dbg !16607
  call void @llvm.dbg.declare(metadata i16* %reg, metadata !16608, metadata !DIExpression()), !dbg !16609
  store i16 0, i16* %reg, align 2, !dbg !16609
  %0 = load i32, i32* %adv.addr, align 4, !dbg !16610
  %conv = zext i32 %0 to i64, !dbg !16610
  %and = and i64 %conv, 8, !dbg !16612
  %tobool = icmp ne i64 %and, 0, !dbg !16612
  br i1 %tobool, label %if.then, label %if.end, !dbg !16613

if.then:                                          ; preds = %entry
  %1 = load i16, i16* %reg, align 2, !dbg !16614
  %conv1 = zext i16 %1 to i32, !dbg !16614
  %or = or i32 %conv1, 2, !dbg !16614
  %conv2 = trunc i32 %or to i16, !dbg !16614
  store i16 %conv2, i16* %reg, align 2, !dbg !16614
  br label %if.end, !dbg !16615

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %adv.addr, align 4, !dbg !16616
  %conv3 = zext i32 %2 to i64, !dbg !16616
  %and4 = and i64 %conv3, 32, !dbg !16618
  %tobool5 = icmp ne i64 %and4, 0, !dbg !16618
  br i1 %tobool5, label %if.then6, label %if.end10, !dbg !16619

if.then6:                                         ; preds = %if.end
  %3 = load i16, i16* %reg, align 2, !dbg !16620
  %conv7 = zext i16 %3 to i32, !dbg !16620
  %or8 = or i32 %conv7, 4, !dbg !16620
  %conv9 = trunc i32 %or8 to i16, !dbg !16620
  store i16 %conv9, i16* %reg, align 2, !dbg !16620
  br label %if.end10, !dbg !16621

if.end10:                                         ; preds = %if.then6, %if.end
  %4 = load i32, i32* %adv.addr, align 4, !dbg !16622
  %conv11 = zext i32 %4 to i64, !dbg !16622
  %and12 = and i64 %conv11, 4096, !dbg !16624
  %tobool13 = icmp ne i64 %and12, 0, !dbg !16624
  br i1 %tobool13, label %if.then14, label %if.end18, !dbg !16625

if.then14:                                        ; preds = %if.end10
  %5 = load i16, i16* %reg, align 2, !dbg !16626
  %conv15 = zext i16 %5 to i32, !dbg !16626
  %or16 = or i32 %conv15, 8, !dbg !16626
  %conv17 = trunc i32 %or16 to i16, !dbg !16626
  store i16 %conv17, i16* %reg, align 2, !dbg !16626
  br label %if.end18, !dbg !16627

if.end18:                                         ; preds = %if.then14, %if.end10
  %6 = load i32, i32* %adv.addr, align 4, !dbg !16628
  %conv19 = zext i32 %6 to i64, !dbg !16628
  %and20 = and i64 %conv19, 131072, !dbg !16630
  %tobool21 = icmp ne i64 %and20, 0, !dbg !16630
  br i1 %tobool21, label %if.then22, label %if.end26, !dbg !16631

if.then22:                                        ; preds = %if.end18
  %7 = load i16, i16* %reg, align 2, !dbg !16632
  %conv23 = zext i16 %7 to i32, !dbg !16632
  %or24 = or i32 %conv23, 16, !dbg !16632
  %conv25 = trunc i32 %or24 to i16, !dbg !16632
  store i16 %conv25, i16* %reg, align 2, !dbg !16632
  br label %if.end26, !dbg !16633

if.end26:                                         ; preds = %if.then22, %if.end18
  %8 = load i32, i32* %adv.addr, align 4, !dbg !16634
  %conv27 = zext i32 %8 to i64, !dbg !16634
  %and28 = and i64 %conv27, 262144, !dbg !16636
  %tobool29 = icmp ne i64 %and28, 0, !dbg !16636
  br i1 %tobool29, label %if.then30, label %if.end34, !dbg !16637

if.then30:                                        ; preds = %if.end26
  %9 = load i16, i16* %reg, align 2, !dbg !16638
  %conv31 = zext i16 %9 to i32, !dbg !16638
  %or32 = or i32 %conv31, 32, !dbg !16638
  %conv33 = trunc i32 %or32 to i16, !dbg !16638
  store i16 %conv33, i16* %reg, align 2, !dbg !16638
  br label %if.end34, !dbg !16639

if.end34:                                         ; preds = %if.then30, %if.end26
  %10 = load i32, i32* %adv.addr, align 4, !dbg !16640
  %conv35 = zext i32 %10 to i64, !dbg !16640
  %and36 = and i64 %conv35, 524288, !dbg !16642
  %tobool37 = icmp ne i64 %and36, 0, !dbg !16642
  br i1 %tobool37, label %if.then38, label %if.end42, !dbg !16643

if.then38:                                        ; preds = %if.end34
  %11 = load i16, i16* %reg, align 2, !dbg !16644
  %conv39 = zext i16 %11 to i32, !dbg !16644
  %or40 = or i32 %conv39, 64, !dbg !16644
  %conv41 = trunc i32 %or40 to i16, !dbg !16644
  store i16 %conv41, i16* %reg, align 2, !dbg !16644
  br label %if.end42, !dbg !16645

if.end42:                                         ; preds = %if.then38, %if.end34
  %12 = load i16, i16* %reg, align 2, !dbg !16646
  ret i16 %12, !dbg !16647
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl_eee_enable(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !16648 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !16649, metadata !DIExpression()), !dbg !16650
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !16651, metadata !DIExpression()), !dbg !16652
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16653
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 39, !dbg !16654
  %1 = load i8, i8* %version, align 8, !dbg !16654
  %conv = zext i8 %1 to i32, !dbg !16653
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 7, label %sw.bb
    i32 3, label %sw.bb1
    i32 4, label %sw.bb1
    i32 5, label %sw.bb1
    i32 6, label %sw.bb1
    i32 8, label %sw.bb1
    i32 9, label %sw.bb1
  ], !dbg !16655

sw.bb:                                            ; preds = %entry, %entry, %entry
  %2 = load i8, i8* %enable.addr, align 1, !dbg !16656
  %tobool = trunc i8 %2 to i1, !dbg !16656
  br i1 %tobool, label %if.then, label %if.else, !dbg !16659

if.then:                                          ; preds = %sw.bb
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16660
  call void @r8152_eee_en(%struct.r8152* %3, i1 zeroext true) #13, !dbg !16662
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16663
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16664
  %eee_adv = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 37, !dbg !16665
  %6 = load i16, i16* %eee_adv, align 8, !dbg !16665
  call void @r8152_mmd_write(%struct.r8152* %4, i16 zeroext 7, i16 zeroext 60, i16 zeroext %6) #13, !dbg !16666
  br label %if.end, !dbg !16667

if.else:                                          ; preds = %sw.bb
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16668
  call void @r8152_eee_en(%struct.r8152* %7, i1 zeroext false) #13, !dbg !16670
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16671
  call void @r8152_mmd_write(%struct.r8152* %8, i16 zeroext 7, i16 zeroext 60, i16 zeroext 0) #13, !dbg !16672
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !16673

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %9 = load i8, i8* %enable.addr, align 1, !dbg !16674
  %tobool2 = trunc i8 %9 to i1, !dbg !16674
  br i1 %tobool2, label %if.then3, label %if.else5, !dbg !16676

if.then3:                                         ; preds = %sw.bb1
  %10 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16677
  call void @r8153_eee_en(%struct.r8152* %10, i1 zeroext true) #13, !dbg !16679
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16680
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16681
  %eee_adv4 = getelementptr inbounds %struct.r8152, %struct.r8152* %12, i32 0, i32 37, !dbg !16682
  %13 = load i16, i16* %eee_adv4, align 8, !dbg !16682
  call void @ocp_reg_write(%struct.r8152* %11, i16 zeroext -23088, i16 zeroext %13) #13, !dbg !16683
  br label %if.end6, !dbg !16684

if.else5:                                         ; preds = %sw.bb1
  %14 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16685
  call void @r8153_eee_en(%struct.r8152* %14, i1 zeroext false) #13, !dbg !16687
  %15 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16688
  call void @ocp_reg_write(%struct.r8152* %15, i16 zeroext -23088, i16 zeroext 0) #13, !dbg !16689
  br label %if.end6

if.end6:                                          ; preds = %if.else5, %if.then3
  br label %sw.epilog, !dbg !16690

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !16691

sw.epilog:                                        ; preds = %sw.default, %if.end6, %if.end
  ret void, !dbg !16692
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8152_eee_en(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !16693 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  %config1 = alloca i16, align 2
  %config2 = alloca i16, align 2
  %config3 = alloca i16, align 2
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !16694, metadata !DIExpression()), !dbg !16695
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !16696, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.declare(metadata i16* %config1, metadata !16698, metadata !DIExpression()), !dbg !16699
  call void @llvm.dbg.declare(metadata i16* %config2, metadata !16700, metadata !DIExpression()), !dbg !16701
  call void @llvm.dbg.declare(metadata i16* %config3, metadata !16702, metadata !DIExpression()), !dbg !16703
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !16704, metadata !DIExpression()), !dbg !16705
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16706
  %call = call zeroext i16 @ocp_read_word(%struct.r8152* %0, i16 zeroext 256, i16 zeroext -8128) #13, !dbg !16707
  %conv = zext i16 %call to i32, !dbg !16707
  store i32 %conv, i32* %ocp_data, align 4, !dbg !16708
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16709
  %call1 = call zeroext i16 @ocp_reg_read(%struct.r8152* %1, i16 zeroext 8320) #13, !dbg !16710
  %conv2 = zext i16 %call1 to i32, !dbg !16710
  %and = and i32 %conv2, -113, !dbg !16711
  %conv3 = trunc i32 %and to i16, !dbg !16710
  store i16 %conv3, i16* %config1, align 2, !dbg !16712
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16713
  %call4 = call zeroext i16 @ocp_reg_read(%struct.r8152* %2, i16 zeroext 8338) #13, !dbg !16714
  store i16 %call4, i16* %config2, align 2, !dbg !16715
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16716
  %call5 = call zeroext i16 @ocp_reg_read(%struct.r8152* %3, i16 zeroext 8340) #13, !dbg !16717
  %conv6 = zext i16 %call5 to i32, !dbg !16717
  %and7 = and i32 %conv6, -65409, !dbg !16718
  %conv8 = trunc i32 %and7 to i16, !dbg !16717
  store i16 %conv8, i16* %config3, align 2, !dbg !16719
  %4 = load i8, i8* %enable.addr, align 1, !dbg !16720
  %tobool = trunc i8 %4 to i1, !dbg !16720
  br i1 %tobool, label %if.then, label %if.else, !dbg !16722

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %ocp_data, align 4, !dbg !16723
  %or = or i32 %5, 3, !dbg !16723
  store i32 %or, i32* %ocp_data, align 4, !dbg !16723
  %6 = load i16, i16* %config1, align 2, !dbg !16725
  %conv9 = zext i16 %6 to i32, !dbg !16725
  %or10 = or i32 %conv9, 13056, !dbg !16725
  %conv11 = trunc i32 %or10 to i16, !dbg !16725
  store i16 %conv11, i16* %config1, align 2, !dbg !16725
  %7 = load i16, i16* %config1, align 2, !dbg !16726
  %conv12 = zext i16 %7 to i32, !dbg !16726
  %or13 = or i32 %conv12, 16, !dbg !16726
  %conv14 = trunc i32 %or13 to i16, !dbg !16726
  store i16 %conv14, i16* %config1, align 2, !dbg !16726
  %8 = load i16, i16* %config2, align 2, !dbg !16727
  %conv15 = zext i16 %8 to i32, !dbg !16727
  %or16 = or i32 %conv15, 1536, !dbg !16727
  %conv17 = trunc i32 %or16 to i16, !dbg !16727
  store i16 %conv17, i16* %config2, align 2, !dbg !16727
  %9 = load i16, i16* %config3, align 2, !dbg !16728
  %conv18 = zext i16 %9 to i32, !dbg !16728
  %or19 = or i32 %conv18, 5376, !dbg !16728
  %conv20 = trunc i32 %or19 to i16, !dbg !16728
  store i16 %conv20, i16* %config3, align 2, !dbg !16728
  br label %if.end, !dbg !16729

if.else:                                          ; preds = %entry
  %10 = load i32, i32* %ocp_data, align 4, !dbg !16730
  %and21 = and i32 %10, -4, !dbg !16730
  store i32 %and21, i32* %ocp_data, align 4, !dbg !16730
  %11 = load i16, i16* %config1, align 2, !dbg !16732
  %conv22 = zext i16 %11 to i32, !dbg !16732
  %and23 = and i32 %conv22, -13057, !dbg !16732
  %conv24 = trunc i32 %and23 to i16, !dbg !16732
  store i16 %conv24, i16* %config1, align 2, !dbg !16732
  %12 = load i16, i16* %config1, align 2, !dbg !16733
  %conv25 = zext i16 %12 to i32, !dbg !16733
  %or26 = or i32 %conv25, 112, !dbg !16733
  %conv27 = trunc i32 %or26 to i16, !dbg !16733
  store i16 %conv27, i16* %config1, align 2, !dbg !16733
  %13 = load i16, i16* %config2, align 2, !dbg !16734
  %conv28 = zext i16 %13 to i32, !dbg !16734
  %and29 = and i32 %conv28, -1537, !dbg !16734
  %conv30 = trunc i32 %and29 to i16, !dbg !16734
  store i16 %conv30, i16* %config2, align 2, !dbg !16734
  %14 = load i16, i16* %config3, align 2, !dbg !16735
  %conv31 = zext i16 %14 to i32, !dbg !16735
  %or32 = or i32 %conv31, 65408, !dbg !16735
  %conv33 = trunc i32 %or32 to i16, !dbg !16735
  store i16 %conv33, i16* %config3, align 2, !dbg !16735
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16736
  %16 = load i32, i32* %ocp_data, align 4, !dbg !16737
  call void @ocp_write_word(%struct.r8152* %15, i16 zeroext 256, i16 zeroext -8128, i32 %16) #13, !dbg !16738
  %17 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16739
  %18 = load i16, i16* %config1, align 2, !dbg !16740
  call void @ocp_reg_write(%struct.r8152* %17, i16 zeroext 8320, i16 zeroext %18) #13, !dbg !16741
  %19 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16742
  %20 = load i16, i16* %config2, align 2, !dbg !16743
  call void @ocp_reg_write(%struct.r8152* %19, i16 zeroext 8338, i16 zeroext %20) #13, !dbg !16744
  %21 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16745
  %22 = load i16, i16* %config3, align 2, !dbg !16746
  call void @ocp_reg_write(%struct.r8152* %21, i16 zeroext 8340, i16 zeroext %22) #13, !dbg !16747
  ret void, !dbg !16748
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8152_mmd_write(%struct.r8152* %tp, i16 zeroext %dev, i16 zeroext %reg, i16 zeroext %data) #2 !dbg !16749 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %dev.addr = alloca i16, align 2
  %reg.addr = alloca i16, align 2
  %data.addr = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !16752, metadata !DIExpression()), !dbg !16753
  store i16 %dev, i16* %dev.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %dev.addr, metadata !16754, metadata !DIExpression()), !dbg !16755
  store i16 %reg, i16* %reg.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %reg.addr, metadata !16756, metadata !DIExpression()), !dbg !16757
  store i16 %data, i16* %data.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %data.addr, metadata !16758, metadata !DIExpression()), !dbg !16759
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16760
  %1 = load i16, i16* %dev.addr, align 2, !dbg !16761
  %2 = load i16, i16* %reg.addr, align 2, !dbg !16762
  call void @r8152_mmd_indirect(%struct.r8152* %0, i16 zeroext %1, i16 zeroext %2) #13, !dbg !16763
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16764
  %4 = load i16, i16* %data.addr, align 2, !dbg !16765
  call void @ocp_reg_write(%struct.r8152* %3, i16 zeroext -23524, i16 zeroext %4) #13, !dbg !16766
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16767
  call void @ocp_reg_write(%struct.r8152* %5, i16 zeroext -23526, i16 zeroext 0) #13, !dbg !16768
  ret void, !dbg !16769
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153_eee_en(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !16770 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  %ocp_data = alloca i32, align 4
  %config = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !16771, metadata !DIExpression()), !dbg !16772
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !16773, metadata !DIExpression()), !dbg !16774
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !16775, metadata !DIExpression()), !dbg !16776
  call void @llvm.dbg.declare(metadata i16* %config, metadata !16777, metadata !DIExpression()), !dbg !16778
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16779
  %call = call zeroext i16 @ocp_read_word(%struct.r8152* %0, i16 zeroext 256, i16 zeroext -8128) #13, !dbg !16780
  %conv = zext i16 %call to i32, !dbg !16780
  store i32 %conv, i32* %ocp_data, align 4, !dbg !16781
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16782
  %call1 = call zeroext i16 @ocp_reg_read(%struct.r8152* %1, i16 zeroext -23502) #13, !dbg !16783
  store i16 %call1, i16* %config, align 2, !dbg !16784
  %2 = load i8, i8* %enable.addr, align 1, !dbg !16785
  %tobool = trunc i8 %2 to i1, !dbg !16785
  br i1 %tobool, label %if.then, label %if.else, !dbg !16787

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ocp_data, align 4, !dbg !16788
  %or = or i32 %3, 3, !dbg !16788
  store i32 %or, i32* %ocp_data, align 4, !dbg !16788
  %4 = load i16, i16* %config, align 2, !dbg !16790
  %conv2 = zext i16 %4 to i32, !dbg !16790
  %or3 = or i32 %conv2, 16, !dbg !16790
  %conv4 = trunc i32 %or3 to i16, !dbg !16790
  store i16 %conv4, i16* %config, align 2, !dbg !16790
  br label %if.end, !dbg !16791

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %ocp_data, align 4, !dbg !16792
  %and = and i32 %5, -4, !dbg !16792
  store i32 %and, i32* %ocp_data, align 4, !dbg !16792
  %6 = load i16, i16* %config, align 2, !dbg !16794
  %conv5 = zext i16 %6 to i32, !dbg !16794
  %and6 = and i32 %conv5, -17, !dbg !16794
  %conv7 = trunc i32 %and6 to i16, !dbg !16794
  store i16 %conv7, i16* %config, align 2, !dbg !16794
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16795
  %8 = load i32, i32* %ocp_data, align 4, !dbg !16796
  call void @ocp_write_word(%struct.r8152* %7, i16 zeroext 256, i16 zeroext -8128, i32 %8) #13, !dbg !16797
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16798
  %10 = load i16, i16* %config, align 2, !dbg !16799
  call void @ocp_reg_write(%struct.r8152* %9, i16 zeroext -23502, i16 zeroext %10) #13, !dbg !16800
  %11 = load i8, i8* %enable.addr, align 1, !dbg !16801
  %tobool8 = trunc i8 %11 to i1, !dbg !16801
  %conv9 = zext i1 %tobool8 to i32, !dbg !16801
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16802
  %ups_info = getelementptr inbounds %struct.r8152, %struct.r8152* %12, i32 0, i32 22, !dbg !16803
  %13 = bitcast %struct.ups_info* %ups_info to i32*, !dbg !16804
  %bf.load = load i32, i32* %13, align 8, !dbg !16805
  %bf.value = and i32 %conv9, 1, !dbg !16805
  %bf.shl = shl i32 %bf.value, 9, !dbg !16805
  %bf.clear = and i32 %bf.load, -513, !dbg !16805
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !16805
  store i32 %bf.set, i32* %13, align 8, !dbg !16805
  ret void, !dbg !16806
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8152_apply_firmware(%struct.r8152* %tp) #2 !dbg !16807 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %rtl_fw = alloca %struct.rtl_fw*, align 8
  %fw = alloca %struct.firmware*, align 8
  %fw_hdr = alloca %struct.fw_header*, align 8
  %key = alloca %struct.fw_phy_patch_key*, align 8
  %key_addr = alloca i16, align 2
  %i = alloca i32, align 4
  %block = alloca %struct.fw_block*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !16808, metadata !DIExpression()), !dbg !16809
  call void @llvm.dbg.declare(metadata %struct.rtl_fw** %rtl_fw, metadata !16810, metadata !DIExpression()), !dbg !16811
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16812
  %rtl_fw1 = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 23, !dbg !16813
  store %struct.rtl_fw* %rtl_fw1, %struct.rtl_fw** %rtl_fw, align 8, !dbg !16811
  call void @llvm.dbg.declare(metadata %struct.firmware** %fw, metadata !16814, metadata !DIExpression()), !dbg !16815
  call void @llvm.dbg.declare(metadata %struct.fw_header** %fw_hdr, metadata !16816, metadata !DIExpression()), !dbg !16817
  call void @llvm.dbg.declare(metadata %struct.fw_phy_patch_key** %key, metadata !16818, metadata !DIExpression()), !dbg !16819
  call void @llvm.dbg.declare(metadata i16* %key_addr, metadata !16820, metadata !DIExpression()), !dbg !16821
  store i16 0, i16* %key_addr, align 2, !dbg !16821
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16822, metadata !DIExpression()), !dbg !16823
  %1 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !16824
  %fw2 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %1, i32 0, i32 1, !dbg !16826
  %2 = load %struct.firmware*, %struct.firmware** %fw2, align 8, !dbg !16826
  %3 = bitcast %struct.firmware* %2 to i8*, !dbg !16824
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %3) #13, !dbg !16827
  br i1 %call, label %if.then, label %if.end, !dbg !16828

if.then:                                          ; preds = %entry
  br label %return, !dbg !16829

if.end:                                           ; preds = %entry
  %4 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !16830
  %fw3 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %4, i32 0, i32 1, !dbg !16831
  %5 = load %struct.firmware*, %struct.firmware** %fw3, align 8, !dbg !16831
  store %struct.firmware* %5, %struct.firmware** %fw, align 8, !dbg !16832
  %6 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !16833
  %data = getelementptr inbounds %struct.firmware, %struct.firmware* %6, i32 0, i32 1, !dbg !16834
  %7 = load i8*, i8** %data, align 8, !dbg !16834
  %8 = bitcast i8* %7 to %struct.fw_header*, !dbg !16835
  store %struct.fw_header* %8, %struct.fw_header** %fw_hdr, align 8, !dbg !16836
  %9 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !16837
  %pre_fw = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %9, i32 0, i32 3, !dbg !16839
  %10 = load i32 (%struct.r8152*)*, i32 (%struct.r8152*)** %pre_fw, align 8, !dbg !16839
  %tobool = icmp ne i32 (%struct.r8152*)* %10, null, !dbg !16837
  br i1 %tobool, label %if.then4, label %if.end7, !dbg !16840

if.then4:                                         ; preds = %if.end
  %11 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !16841
  %pre_fw5 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %11, i32 0, i32 3, !dbg !16842
  %12 = load i32 (%struct.r8152*)*, i32 (%struct.r8152*)** %pre_fw5, align 8, !dbg !16842
  %13 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16843
  %call6 = call i32 %12(%struct.r8152* %13) #13, !dbg !16841
  br label %if.end7, !dbg !16841

if.end7:                                          ; preds = %if.then4, %if.end
  store i32 64, i32* %i, align 4, !dbg !16844
  br label %for.cond, !dbg !16846

for.cond:                                         ; preds = %sw.epilog, %if.end7
  %14 = load i32, i32* %i, align 4, !dbg !16847
  %conv = sext i32 %14 to i64, !dbg !16847
  %15 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !16849
  %size = getelementptr inbounds %struct.firmware, %struct.firmware* %15, i32 0, i32 0, !dbg !16850
  %16 = load i64, i64* %size, align 8, !dbg !16850
  %cmp = icmp ult i64 %conv, %16, !dbg !16851
  br i1 %cmp, label %for.body, label %for.end, !dbg !16852

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.fw_block** %block, metadata !16853, metadata !DIExpression()), !dbg !16855
  %17 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !16856
  %data9 = getelementptr inbounds %struct.firmware, %struct.firmware* %17, i32 0, i32 1, !dbg !16857
  %18 = load i8*, i8** %data9, align 8, !dbg !16857
  %19 = load i32, i32* %i, align 4, !dbg !16858
  %idxprom = sext i32 %19 to i64, !dbg !16856
  %arrayidx = getelementptr i8, i8* %18, i64 %idxprom, !dbg !16856
  %20 = bitcast i8* %arrayidx to %struct.fw_block*, !dbg !16859
  store %struct.fw_block* %20, %struct.fw_block** %block, align 8, !dbg !16855
  %21 = load %struct.fw_block*, %struct.fw_block** %block, align 8, !dbg !16860
  %type = getelementptr inbounds %struct.fw_block, %struct.fw_block* %21, i32 0, i32 0, !dbg !16860
  %22 = load i32, i32* %type, align 1, !dbg !16860
  switch i32 %22, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb10
    i32 2, label %sw.bb10
    i32 3, label %sw.bb11
    i32 4, label %sw.bb13
    i32 5, label %sw.bb39
  ], !dbg !16861

sw.bb:                                            ; preds = %for.body
  br label %post_fw, !dbg !16862

sw.bb10:                                          ; preds = %for.body, %for.body
  %23 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16864
  %24 = load %struct.fw_block*, %struct.fw_block** %block, align 8, !dbg !16865
  %25 = bitcast %struct.fw_block* %24 to %struct.fw_mac*, !dbg !16866
  call void @rtl8152_fw_mac_apply(%struct.r8152* %23, %struct.fw_mac* %25) #13, !dbg !16867
  br label %sw.epilog, !dbg !16868

sw.bb11:                                          ; preds = %for.body
  %26 = load %struct.fw_block*, %struct.fw_block** %block, align 8, !dbg !16869
  %27 = bitcast %struct.fw_block* %26 to %struct.fw_phy_patch_key*, !dbg !16870
  store %struct.fw_phy_patch_key* %27, %struct.fw_phy_patch_key** %key, align 8, !dbg !16871
  %28 = load %struct.fw_phy_patch_key*, %struct.fw_phy_patch_key** %key, align 8, !dbg !16872
  %key_reg = getelementptr inbounds %struct.fw_phy_patch_key, %struct.fw_phy_patch_key* %28, i32 0, i32 1, !dbg !16872
  %29 = load i16, i16* %key_reg, align 1, !dbg !16872
  store i16 %29, i16* %key_addr, align 2, !dbg !16873
  %30 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16874
  %31 = load i16, i16* %key_addr, align 2, !dbg !16875
  %32 = load %struct.fw_phy_patch_key*, %struct.fw_phy_patch_key** %key, align 8, !dbg !16876
  %key_data = getelementptr inbounds %struct.fw_phy_patch_key, %struct.fw_phy_patch_key* %32, i32 0, i32 2, !dbg !16876
  %33 = load i16, i16* %key_data, align 1, !dbg !16876
  %call12 = call i32 @r8153_pre_ram_code(%struct.r8152* %30, i16 zeroext %31, i16 zeroext %33) #13, !dbg !16877
  br label %sw.epilog, !dbg !16878

sw.bb13:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !16879, metadata !DIExpression()), !dbg !16881
  %34 = load i16, i16* %key_addr, align 2, !dbg !16881
  %tobool14 = icmp ne i16 %34, 0, !dbg !16881
  %lnot = xor i1 %tobool14, true, !dbg !16881
  %lnot15 = xor i1 %lnot, true, !dbg !16881
  %lnot16 = xor i1 %lnot15, true, !dbg !16881
  %lnot.ext = zext i1 %lnot16 to i32, !dbg !16881
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !16881
  %35 = load i32, i32* %__ret_warn_on, align 4, !dbg !16882
  %tobool17 = icmp ne i32 %35, 0, !dbg !16882
  %lnot18 = xor i1 %tobool17, true, !dbg !16882
  %lnot20 = xor i1 %lnot18, true, !dbg !16882
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !16882
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !16882
  %tobool23 = icmp ne i64 %conv22, 0, !dbg !16882
  br i1 %tobool23, label %if.then24, label %if.end31, !dbg !16881

if.then24:                                        ; preds = %sw.bb13
  br label %do.body, !dbg !16882

do.body:                                          ; preds = %if.then24
  br label %do.body25, !dbg !16884

do.body25:                                        ; preds = %do.body
  br label %do.end, !dbg !16886

do.end:                                           ; preds = %do.body25
  br label %do.body26, !dbg !16884

do.body26:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 4062, i32 2305, i64 12) #11, !dbg !16888, !srcloc !16890
  br label %do.end27, !dbg !16888

do.end27:                                         ; preds = %do.body26
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 587) #11, !dbg !16891, !srcloc !16893
  br label %do.body28, !dbg !16884

do.body28:                                        ; preds = %do.end27
  br label %do.end29, !dbg !16894

do.end29:                                         ; preds = %do.body28
  br label %do.end30, !dbg !16884

do.end30:                                         ; preds = %do.end29
  br label %if.end31, !dbg !16884

if.end31:                                         ; preds = %do.end30, %sw.bb13
  %36 = load i32, i32* %__ret_warn_on, align 4, !dbg !16881
  %tobool32 = icmp ne i32 %36, 0, !dbg !16881
  %lnot33 = xor i1 %tobool32, true, !dbg !16881
  %lnot35 = xor i1 %lnot33, true, !dbg !16881
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !16881
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !16881
  store i64 %conv37, i64* %tmp, align 8, !dbg !16882
  %37 = load i64, i64* %tmp, align 8, !dbg !16881
  %38 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16896
  %39 = load i16, i16* %key_addr, align 2, !dbg !16897
  %call38 = call i32 @r8153_post_ram_code(%struct.r8152* %38, i16 zeroext %39) #13, !dbg !16898
  br label %sw.epilog, !dbg !16899

sw.bb39:                                          ; preds = %for.body
  %40 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16900
  %41 = load %struct.fw_block*, %struct.fw_block** %block, align 8, !dbg !16901
  %42 = bitcast %struct.fw_block* %41 to %struct.fw_phy_nc*, !dbg !16902
  call void @rtl8152_fw_phy_nc_apply(%struct.r8152* %40, %struct.fw_phy_nc* %42) #13, !dbg !16903
  br label %sw.epilog, !dbg !16904

sw.default:                                       ; preds = %for.body
  br label %sw.epilog, !dbg !16905

sw.epilog:                                        ; preds = %sw.default, %sw.bb39, %if.end31, %sw.bb11, %sw.bb10
  %43 = load %struct.fw_block*, %struct.fw_block** %block, align 8, !dbg !16906
  %length = getelementptr inbounds %struct.fw_block, %struct.fw_block* %43, i32 0, i32 1, !dbg !16906
  %44 = load i32, i32* %length, align 1, !dbg !16906
  %add = add i32 %44, 7, !dbg !16906
  %and = and i32 %add, -8, !dbg !16906
  %45 = load i32, i32* %i, align 4, !dbg !16907
  %add40 = add i32 %45, %and, !dbg !16907
  store i32 %add40, i32* %i, align 4, !dbg !16907
  br label %for.cond, !dbg !16908, !llvm.loop !16909

for.end:                                          ; preds = %for.cond
  br label %post_fw, !dbg !16910

post_fw:                                          ; preds = %for.end, %sw.bb
  call void @llvm.dbg.label(metadata !16911), !dbg !16912
  %46 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !16913
  %post_fw41 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %46, i32 0, i32 4, !dbg !16915
  %47 = load i32 (%struct.r8152*)*, i32 (%struct.r8152*)** %post_fw41, align 8, !dbg !16915
  %tobool42 = icmp ne i32 (%struct.r8152*)* %47, null, !dbg !16913
  br i1 %tobool42, label %if.then43, label %if.end46, !dbg !16916

if.then43:                                        ; preds = %post_fw
  %48 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !16917
  %post_fw44 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %48, i32 0, i32 4, !dbg !16918
  %49 = load i32 (%struct.r8152*)*, i32 (%struct.r8152*)** %post_fw44, align 8, !dbg !16918
  %50 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16919
  %call45 = call i32 %49(%struct.r8152* %50) #13, !dbg !16917
  br label %if.end46, !dbg !16917

if.end46:                                         ; preds = %if.then43, %post_fw
  %51 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !16920
  %version = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %51, i32 0, i32 2, !dbg !16921
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %version, i64 0, i64 0, !dbg !16920
  %52 = load %struct.fw_header*, %struct.fw_header** %fw_hdr, align 8, !dbg !16922
  %version47 = getelementptr inbounds %struct.fw_header, %struct.fw_header* %52, i32 0, i32 1, !dbg !16923
  %arraydecay48 = getelementptr inbounds [32 x i8], [32 x i8]* %version47, i64 0, i64 0, !dbg !16922
  %call49 = call i64 @strscpy(i8* %arraydecay, i8* %arraydecay48, i64 32) #13, !dbg !16924
  %53 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16925
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %53, i32 0, i32 3, !dbg !16925
  %54 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !16925
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %54, i32 0, i32 7, !dbg !16925
  %55 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !16925
  %version50 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %55, i32 0, i32 2, !dbg !16925
  %arraydecay51 = getelementptr inbounds [32 x i8], [32 x i8]* %version50, i64 0, i64 0, !dbg !16925
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0), i8* %arraydecay51) #14, !dbg !16925
  br label %return, !dbg !16926

return:                                           ; preds = %if.end46, %if.then
  ret void, !dbg !16926
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8152b_enable_fc(%struct.r8152* %tp) #2 !dbg !16927 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %anar = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !16928, metadata !DIExpression()), !dbg !16929
  call void @llvm.dbg.declare(metadata i16* %anar, metadata !16930, metadata !DIExpression()), !dbg !16931
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16932
  %call = call i32 @r8152_mdio_read(%struct.r8152* %0, i32 4) #13, !dbg !16933
  %conv = trunc i32 %call to i16, !dbg !16933
  store i16 %conv, i16* %anar, align 2, !dbg !16934
  %1 = load i16, i16* %anar, align 2, !dbg !16935
  %conv1 = zext i16 %1 to i32, !dbg !16935
  %or = or i32 %conv1, 3072, !dbg !16935
  %conv2 = trunc i32 %or to i16, !dbg !16935
  store i16 %conv2, i16* %anar, align 2, !dbg !16935
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16936
  %3 = load i16, i16* %anar, align 2, !dbg !16937
  %conv3 = zext i16 %3 to i32, !dbg !16937
  call void @r8152_mdio_write(%struct.r8152* %2, i32 4, i32 %conv3) #13, !dbg !16938
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16939
  %ups_info = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 22, !dbg !16940
  %5 = bitcast %struct.ups_info* %ups_info to i32*, !dbg !16941
  %bf.load = load i32, i32* %5, align 8, !dbg !16942
  %bf.clear = and i32 %bf.load, -65537, !dbg !16942
  %bf.set = or i32 %bf.clear, 65536, !dbg !16942
  store i32 %bf.set, i32* %5, align 8, !dbg !16942
  ret void, !dbg !16943
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR_OR_NULL(i8* %ptr) #2 !dbg !16944 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !16948, metadata !DIExpression()), !dbg !16949
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !16950
  %tobool = icmp ne i8* %0, null, !dbg !16950
  %lnot = xor i1 %tobool, true, !dbg !16950
  %lnot1 = xor i1 %lnot, true, !dbg !16950
  %lnot2 = xor i1 %lnot1, true, !dbg !16950
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !16950
  %conv = sext i32 %lnot.ext to i64, !dbg !16950
  %tobool3 = icmp ne i64 %conv, 0, !dbg !16950
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !16951

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !16952
  %2 = ptrtoint i8* %1 to i64, !dbg !16952
  %3 = inttoptr i64 %2 to i8*, !dbg !16952
  %4 = ptrtoint i8* %3 to i64, !dbg !16952
  %cmp = icmp uge i64 %4, -4095, !dbg !16952
  %lnot5 = xor i1 %cmp, true, !dbg !16952
  %lnot7 = xor i1 %lnot5, true, !dbg !16952
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !16952
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !16952
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !16951
  br label %lor.end, !dbg !16951

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %tobool10, %lor.rhs ]
  ret i1 %5, !dbg !16953
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8152_fw_mac_apply(%struct.r8152* %tp, %struct.fw_mac* %mac) #2 !dbg !16954 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %mac.addr = alloca %struct.fw_mac*, align 8
  %bp_en_addr = alloca i16, align 2
  %bp_index = alloca i16, align 2
  %type = alloca i16, align 2
  %bp_num = alloca i16, align 2
  %fw_ver_reg = alloca i16, align 2
  %length = alloca i32, align 4
  %data = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !16957, metadata !DIExpression()), !dbg !16958
  store %struct.fw_mac* %mac, %struct.fw_mac** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_mac** %mac.addr, metadata !16959, metadata !DIExpression()), !dbg !16960
  call void @llvm.dbg.declare(metadata i16* %bp_en_addr, metadata !16961, metadata !DIExpression()), !dbg !16962
  call void @llvm.dbg.declare(metadata i16* %bp_index, metadata !16963, metadata !DIExpression()), !dbg !16964
  call void @llvm.dbg.declare(metadata i16* %type, metadata !16965, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.declare(metadata i16* %bp_num, metadata !16967, metadata !DIExpression()), !dbg !16968
  call void @llvm.dbg.declare(metadata i16* %fw_ver_reg, metadata !16969, metadata !DIExpression()), !dbg !16970
  call void @llvm.dbg.declare(metadata i32* %length, metadata !16971, metadata !DIExpression()), !dbg !16972
  call void @llvm.dbg.declare(metadata i8** %data, metadata !16973, metadata !DIExpression()), !dbg !16974
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16975, metadata !DIExpression()), !dbg !16976
  %0 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !16977
  %blk_hdr = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %0, i32 0, i32 0, !dbg !16977
  %type1 = getelementptr inbounds %struct.fw_block, %struct.fw_block* %blk_hdr, i32 0, i32 0, !dbg !16977
  %1 = load i32, i32* %type1, align 1, !dbg !16977
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
  ], !dbg !16978

sw.bb:                                            ; preds = %entry
  store i16 256, i16* %type, align 2, !dbg !16979
  br label %sw.epilog, !dbg !16981

sw.bb2:                                           ; preds = %entry
  store i16 0, i16* %type, align 2, !dbg !16982
  br label %sw.epilog, !dbg !16983

sw.default:                                       ; preds = %entry
  br label %if.end33, !dbg !16984

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16985
  %3 = load i16, i16* %type, align 2, !dbg !16986
  call void @rtl_clear_bp(%struct.r8152* %2, i16 zeroext %3) #13, !dbg !16987
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16988
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 39, !dbg !16990
  %5 = load i8, i8* %version, align 8, !dbg !16990
  %conv = zext i8 %5 to i32, !dbg !16988
  %cmp = icmp eq i32 %conv, 4, !dbg !16991
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !16992

land.lhs.true:                                    ; preds = %sw.epilog
  %6 = load i16, i16* %type, align 2, !dbg !16993
  %conv4 = zext i16 %6 to i32, !dbg !16993
  %cmp5 = icmp eq i32 %conv4, 256, !dbg !16994
  br i1 %cmp5, label %land.lhs.true7, label %if.end, !dbg !16995

land.lhs.true7:                                   ; preds = %land.lhs.true
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !16996
  %call = call zeroext i16 @ocp_read_word(%struct.r8152* %7, i16 zeroext 256, i16 zeroext -11378) #13, !dbg !16997
  %conv8 = zext i16 %call to i64, !dbg !16997
  %and = and i64 %conv8, 1, !dbg !16998
  %tobool = icmp ne i64 %and, 0, !dbg !16998
  br i1 %tobool, label %if.end, label %if.then, !dbg !16999

if.then:                                          ; preds = %land.lhs.true7
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17000
  call void @ocp_write_word(%struct.r8152* %8, i16 zeroext 256, i16 zeroext -11380, i32 130) #13, !dbg !17002
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17003
  call void @ocp_write_word(%struct.r8152* %9, i16 zeroext 256, i16 zeroext -11378, i32 130) #13, !dbg !17004
  br label %if.end, !dbg !17005

if.end:                                           ; preds = %if.then, %land.lhs.true7, %land.lhs.true, %sw.epilog
  %10 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !17006
  %blk_hdr9 = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %10, i32 0, i32 0, !dbg !17006
  %length10 = getelementptr inbounds %struct.fw_block, %struct.fw_block* %blk_hdr9, i32 0, i32 1, !dbg !17006
  %11 = load i32, i32* %length10, align 1, !dbg !17006
  store i32 %11, i32* %length, align 4, !dbg !17007
  %12 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !17008
  %fw_offset = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %12, i32 0, i32 1, !dbg !17008
  %13 = load i16, i16* %fw_offset, align 1, !dbg !17008
  %conv11 = zext i16 %13 to i32, !dbg !17008
  %14 = load i32, i32* %length, align 4, !dbg !17009
  %sub = sub i32 %14, %conv11, !dbg !17009
  store i32 %sub, i32* %length, align 4, !dbg !17009
  %15 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !17010
  %16 = bitcast %struct.fw_mac* %15 to i8*, !dbg !17011
  store i8* %16, i8** %data, align 8, !dbg !17012
  %17 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !17013
  %fw_offset12 = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %17, i32 0, i32 1, !dbg !17013
  %18 = load i16, i16* %fw_offset12, align 1, !dbg !17013
  %conv13 = zext i16 %18 to i32, !dbg !17013
  %19 = load i8*, i8** %data, align 8, !dbg !17014
  %idx.ext = sext i32 %conv13 to i64, !dbg !17014
  %add.ptr = getelementptr i8, i8* %19, i64 %idx.ext, !dbg !17014
  store i8* %add.ptr, i8** %data, align 8, !dbg !17014
  %20 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17015
  %21 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !17016
  %fw_reg = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %21, i32 0, i32 2, !dbg !17016
  %22 = load i16, i16* %fw_reg, align 1, !dbg !17016
  %23 = load i32, i32* %length, align 4, !dbg !17017
  %conv14 = trunc i32 %23 to i16, !dbg !17017
  %24 = load i8*, i8** %data, align 8, !dbg !17018
  %25 = load i16, i16* %type, align 2, !dbg !17019
  %call15 = call i32 @generic_ocp_write(%struct.r8152* %20, i16 zeroext %22, i16 zeroext 255, i16 zeroext %conv14, i8* %24, i16 zeroext %25) #13, !dbg !17020
  %26 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17021
  %27 = load i16, i16* %type, align 2, !dbg !17022
  %28 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !17023
  %bp_ba_addr = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %28, i32 0, i32 3, !dbg !17023
  %29 = load i16, i16* %bp_ba_addr, align 1, !dbg !17023
  %30 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !17024
  %bp_ba_value = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %30, i32 0, i32 4, !dbg !17024
  %31 = load i16, i16* %bp_ba_value, align 1, !dbg !17024
  %conv16 = zext i16 %31 to i32, !dbg !17024
  call void @ocp_write_word(%struct.r8152* %26, i16 zeroext %27, i16 zeroext %29, i32 %conv16) #13, !dbg !17025
  %32 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !17026
  %bp_start = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %32, i32 0, i32 7, !dbg !17026
  %33 = load i16, i16* %bp_start, align 1, !dbg !17026
  store i16 %33, i16* %bp_index, align 2, !dbg !17027
  %34 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !17028
  %bp_num17 = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %34, i32 0, i32 8, !dbg !17028
  %35 = load i16, i16* %bp_num17, align 1, !dbg !17028
  store i16 %35, i16* %bp_num, align 2, !dbg !17029
  store i32 0, i32* %i, align 4, !dbg !17030
  br label %for.cond, !dbg !17032

for.cond:                                         ; preds = %for.inc, %if.end
  %36 = load i32, i32* %i, align 4, !dbg !17033
  %37 = load i16, i16* %bp_num, align 2, !dbg !17035
  %conv18 = zext i16 %37 to i32, !dbg !17035
  %cmp19 = icmp slt i32 %36, %conv18, !dbg !17036
  br i1 %cmp19, label %for.body, label %for.end, !dbg !17037

for.body:                                         ; preds = %for.cond
  %38 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17038
  %39 = load i16, i16* %type, align 2, !dbg !17040
  %40 = load i16, i16* %bp_index, align 2, !dbg !17041
  %41 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !17042
  %bp = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %41, i32 0, i32 9, !dbg !17042
  %42 = load i32, i32* %i, align 4, !dbg !17042
  %idxprom = sext i32 %42 to i64, !dbg !17042
  %arrayidx = getelementptr [16 x i16], [16 x i16]* %bp, i64 0, i64 %idxprom, !dbg !17042
  %43 = load i16, i16* %arrayidx, align 1, !dbg !17042
  %conv21 = zext i16 %43 to i32, !dbg !17042
  call void @ocp_write_word(%struct.r8152* %38, i16 zeroext %39, i16 zeroext %40, i32 %conv21) #13, !dbg !17043
  %44 = load i16, i16* %bp_index, align 2, !dbg !17044
  %conv22 = zext i16 %44 to i32, !dbg !17044
  %add = add i32 %conv22, 2, !dbg !17044
  %conv23 = trunc i32 %add to i16, !dbg !17044
  store i16 %conv23, i16* %bp_index, align 2, !dbg !17044
  br label %for.inc, !dbg !17045

for.inc:                                          ; preds = %for.body
  %45 = load i32, i32* %i, align 4, !dbg !17046
  %inc = add i32 %45, 1, !dbg !17046
  store i32 %inc, i32* %i, align 4, !dbg !17046
  br label %for.cond, !dbg !17047, !llvm.loop !17048

for.end:                                          ; preds = %for.cond
  %46 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !17050
  %bp_en_addr24 = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %46, i32 0, i32 5, !dbg !17050
  %47 = load i16, i16* %bp_en_addr24, align 1, !dbg !17050
  store i16 %47, i16* %bp_en_addr, align 2, !dbg !17051
  %48 = load i16, i16* %bp_en_addr, align 2, !dbg !17052
  %tobool25 = icmp ne i16 %48, 0, !dbg !17052
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !17054

if.then26:                                        ; preds = %for.end
  %49 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17055
  %50 = load i16, i16* %type, align 2, !dbg !17056
  %51 = load i16, i16* %bp_en_addr, align 2, !dbg !17057
  %52 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !17058
  %bp_en_value = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %52, i32 0, i32 6, !dbg !17058
  %53 = load i16, i16* %bp_en_value, align 1, !dbg !17058
  %conv27 = zext i16 %53 to i32, !dbg !17058
  call void @ocp_write_word(%struct.r8152* %49, i16 zeroext %50, i16 zeroext %51, i32 %conv27) #13, !dbg !17059
  br label %if.end28, !dbg !17059

if.end28:                                         ; preds = %if.then26, %for.end
  %54 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !17060
  %fw_ver_reg29 = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %54, i32 0, i32 11, !dbg !17060
  %55 = load i16, i16* %fw_ver_reg29, align 1, !dbg !17060
  store i16 %55, i16* %fw_ver_reg, align 2, !dbg !17061
  %56 = load i16, i16* %fw_ver_reg, align 2, !dbg !17062
  %tobool30 = icmp ne i16 %56, 0, !dbg !17062
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !17064

if.then31:                                        ; preds = %if.end28
  %57 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17065
  %58 = load i16, i16* %fw_ver_reg, align 2, !dbg !17066
  %59 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !17067
  %fw_ver_data = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %59, i32 0, i32 12, !dbg !17068
  %60 = load i8, i8* %fw_ver_data, align 1, !dbg !17068
  %conv32 = zext i8 %60 to i32, !dbg !17067
  call void @ocp_write_byte(%struct.r8152* %57, i16 zeroext 0, i16 zeroext %58, i32 %conv32) #13, !dbg !17069
  br label %if.end33, !dbg !17069

if.end33:                                         ; preds = %sw.default, %if.then31, %if.end28
  ret void, !dbg !17070
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @r8153_pre_ram_code(%struct.r8152* %tp, i16 zeroext %key_addr, i16 zeroext %patch_key) #2 !dbg !17071 {
entry:
  %retval = alloca i32, align 4
  %tp.addr = alloca %struct.r8152*, align 8
  %key_addr.addr = alloca i16, align 2
  %patch_key.addr = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17074, metadata !DIExpression()), !dbg !17075
  store i16 %key_addr, i16* %key_addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %key_addr.addr, metadata !17076, metadata !DIExpression()), !dbg !17077
  store i16 %patch_key, i16* %patch_key.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %patch_key.addr, metadata !17078, metadata !DIExpression()), !dbg !17079
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17080
  %call = call i32 @r8153_patch_request(%struct.r8152* %0, i1 zeroext true) #13, !dbg !17082
  %tobool = icmp ne i32 %call, 0, !dbg !17082
  br i1 %tobool, label %if.then, label %if.end, !dbg !17083

if.then:                                          ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17084
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %1, i32 0, i32 3, !dbg !17084
  %2 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !17084
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %2, i32 0, i32 7, !dbg !17084
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0)) #14, !dbg !17084
  store i32 -62, i32* %retval, align 4, !dbg !17086
  br label %return, !dbg !17086

if.end:                                           ; preds = %entry
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17087
  %4 = load i16, i16* %key_addr.addr, align 2, !dbg !17088
  %5 = load i16, i16* %patch_key.addr, align 2, !dbg !17089
  call void @sram_write(%struct.r8152* %3, i16 zeroext %4, i16 zeroext %5) #13, !dbg !17090
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17091
  call void @sram_write(%struct.r8152* %6, i16 zeroext -18386, i16 zeroext 1) #13, !dbg !17092
  store i32 0, i32* %retval, align 4, !dbg !17093
  br label %return, !dbg !17093

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !17094
  ret i32 %7, !dbg !17094
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @r8153_post_ram_code(%struct.r8152* %tp, i16 zeroext %key_addr) #2 !dbg !17095 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %key_addr.addr = alloca i16, align 2
  %data = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17098, metadata !DIExpression()), !dbg !17099
  store i16 %key_addr, i16* %key_addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %key_addr.addr, metadata !17100, metadata !DIExpression()), !dbg !17101
  call void @llvm.dbg.declare(metadata i16* %data, metadata !17102, metadata !DIExpression()), !dbg !17103
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17104
  call void @sram_write(%struct.r8152* %0, i16 zeroext 0, i16 zeroext 0) #13, !dbg !17105
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17106
  %call = call zeroext i16 @ocp_reg_read(%struct.r8152* %1, i16 zeroext -18386) #13, !dbg !17107
  store i16 %call, i16* %data, align 2, !dbg !17108
  %2 = load i16, i16* %data, align 2, !dbg !17109
  %conv = zext i16 %2 to i64, !dbg !17109
  %and = and i64 %conv, -2, !dbg !17109
  %conv1 = trunc i64 %and to i16, !dbg !17109
  store i16 %conv1, i16* %data, align 2, !dbg !17109
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17110
  %4 = load i16, i16* %data, align 2, !dbg !17111
  call void @ocp_reg_write(%struct.r8152* %3, i16 zeroext -18386, i16 zeroext %4) #13, !dbg !17112
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17113
  %6 = load i16, i16* %key_addr.addr, align 2, !dbg !17114
  call void @sram_write(%struct.r8152* %5, i16 zeroext %6, i16 zeroext 0) #13, !dbg !17115
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17116
  %call2 = call i32 @r8153_patch_request(%struct.r8152* %7, i1 zeroext false) #13, !dbg !17117
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17118
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17119
  %ocp_base = getelementptr inbounds %struct.r8152, %struct.r8152* %9, i32 0, i32 35, !dbg !17120
  %10 = load i16, i16* %ocp_base, align 4, !dbg !17120
  %conv3 = zext i16 %10 to i32, !dbg !17119
  call void @ocp_write_word(%struct.r8152* %8, i16 zeroext 256, i16 zeroext -6036, i32 %conv3) #13, !dbg !17121
  ret i32 0, !dbg !17122
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8152_fw_phy_nc_apply(%struct.r8152* %tp, %struct.fw_phy_nc* %phy) #2 !dbg !17123 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %phy.addr = alloca %struct.fw_phy_nc*, align 8
  %mode_reg = alloca i16, align 2
  %bp_index = alloca i16, align 2
  %length = alloca i32, align 4
  %i = alloca i32, align 4
  %num = alloca i32, align 4
  %data = alloca i16*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17126, metadata !DIExpression()), !dbg !17127
  store %struct.fw_phy_nc* %phy, %struct.fw_phy_nc** %phy.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_phy_nc** %phy.addr, metadata !17128, metadata !DIExpression()), !dbg !17129
  call void @llvm.dbg.declare(metadata i16* %mode_reg, metadata !17130, metadata !DIExpression()), !dbg !17131
  call void @llvm.dbg.declare(metadata i16* %bp_index, metadata !17132, metadata !DIExpression()), !dbg !17133
  call void @llvm.dbg.declare(metadata i32* %length, metadata !17134, metadata !DIExpression()), !dbg !17135
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17136, metadata !DIExpression()), !dbg !17137
  call void @llvm.dbg.declare(metadata i32* %num, metadata !17138, metadata !DIExpression()), !dbg !17139
  call void @llvm.dbg.declare(metadata i16** %data, metadata !17140, metadata !DIExpression()), !dbg !17141
  %0 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !17142
  %mode_reg1 = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %0, i32 0, i32 7, !dbg !17142
  %1 = load i16, i16* %mode_reg1, align 1, !dbg !17142
  store i16 %1, i16* %mode_reg, align 2, !dbg !17143
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17144
  %3 = load i16, i16* %mode_reg, align 2, !dbg !17145
  %4 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !17146
  %mode_pre = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %4, i32 0, i32 8, !dbg !17146
  %5 = load i16, i16* %mode_pre, align 1, !dbg !17146
  call void @sram_write(%struct.r8152* %2, i16 zeroext %3, i16 zeroext %5) #13, !dbg !17147
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17148
  %7 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !17149
  %ba_reg = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %7, i32 0, i32 3, !dbg !17149
  %8 = load i16, i16* %ba_reg, align 1, !dbg !17149
  %9 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !17150
  %ba_data = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %9, i32 0, i32 4, !dbg !17150
  %10 = load i16, i16* %ba_data, align 1, !dbg !17150
  call void @sram_write(%struct.r8152* %6, i16 zeroext %8, i16 zeroext %10) #13, !dbg !17151
  %11 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !17152
  %blk_hdr = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %11, i32 0, i32 0, !dbg !17152
  %length2 = getelementptr inbounds %struct.fw_block, %struct.fw_block* %blk_hdr, i32 0, i32 1, !dbg !17152
  %12 = load i32, i32* %length2, align 1, !dbg !17152
  store i32 %12, i32* %length, align 4, !dbg !17153
  %13 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !17154
  %fw_offset = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %13, i32 0, i32 1, !dbg !17154
  %14 = load i16, i16* %fw_offset, align 1, !dbg !17154
  %conv = zext i16 %14 to i32, !dbg !17154
  %15 = load i32, i32* %length, align 4, !dbg !17155
  %sub = sub i32 %15, %conv, !dbg !17155
  store i32 %sub, i32* %length, align 4, !dbg !17155
  %16 = load i32, i32* %length, align 4, !dbg !17156
  %div = udiv i32 %16, 2, !dbg !17157
  store i32 %div, i32* %num, align 4, !dbg !17158
  %17 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !17159
  %18 = bitcast %struct.fw_phy_nc* %17 to i8*, !dbg !17160
  %19 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !17161
  %fw_offset3 = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %19, i32 0, i32 1, !dbg !17161
  %20 = load i16, i16* %fw_offset3, align 1, !dbg !17161
  %conv4 = zext i16 %20 to i32, !dbg !17161
  %idx.ext = sext i32 %conv4 to i64, !dbg !17162
  %add.ptr = getelementptr i8, i8* %18, i64 %idx.ext, !dbg !17162
  %21 = bitcast i8* %add.ptr to i16*, !dbg !17163
  store i16* %21, i16** %data, align 8, !dbg !17164
  %22 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17165
  %23 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !17166
  %fw_reg = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %23, i32 0, i32 2, !dbg !17166
  %24 = load i16, i16* %fw_reg, align 1, !dbg !17166
  call void @ocp_reg_write(%struct.r8152* %22, i16 zeroext -23498, i16 zeroext %24) #13, !dbg !17167
  store i32 0, i32* %i, align 4, !dbg !17168
  br label %for.cond, !dbg !17170

for.cond:                                         ; preds = %for.inc, %entry
  %25 = load i32, i32* %i, align 4, !dbg !17171
  %26 = load i32, i32* %num, align 4, !dbg !17173
  %cmp = icmp ult i32 %25, %26, !dbg !17174
  br i1 %cmp, label %for.body, label %for.end, !dbg !17175

for.body:                                         ; preds = %for.cond
  %27 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17176
  %28 = load i16*, i16** %data, align 8, !dbg !17177
  %29 = load i32, i32* %i, align 4, !dbg !17177
  %idxprom = zext i32 %29 to i64, !dbg !17177
  %arrayidx = getelementptr i16, i16* %28, i64 %idxprom, !dbg !17177
  %30 = load i16, i16* %arrayidx, align 2, !dbg !17177
  call void @ocp_reg_write(%struct.r8152* %27, i16 zeroext -23496, i16 zeroext %30) #13, !dbg !17178
  br label %for.inc, !dbg !17178

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %i, align 4, !dbg !17179
  %inc = add i32 %31, 1, !dbg !17179
  store i32 %inc, i32* %i, align 4, !dbg !17179
  br label %for.cond, !dbg !17180, !llvm.loop !17181

for.end:                                          ; preds = %for.cond
  %32 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17183
  %33 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !17184
  %patch_en_addr = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %33, i32 0, i32 5, !dbg !17184
  %34 = load i16, i16* %patch_en_addr, align 1, !dbg !17184
  %35 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !17185
  %patch_en_value = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %35, i32 0, i32 6, !dbg !17185
  %36 = load i16, i16* %patch_en_value, align 1, !dbg !17185
  call void @sram_write(%struct.r8152* %32, i16 zeroext %34, i16 zeroext %36) #13, !dbg !17186
  %37 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !17187
  %bp_start = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %37, i32 0, i32 11, !dbg !17187
  %38 = load i16, i16* %bp_start, align 1, !dbg !17187
  store i16 %38, i16* %bp_index, align 2, !dbg !17188
  %39 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !17189
  %bp_num = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %39, i32 0, i32 12, !dbg !17189
  %40 = load i16, i16* %bp_num, align 1, !dbg !17189
  %conv6 = zext i16 %40 to i32, !dbg !17189
  store i32 %conv6, i32* %num, align 4, !dbg !17190
  store i32 0, i32* %i, align 4, !dbg !17191
  br label %for.cond7, !dbg !17193

for.cond7:                                        ; preds = %for.inc15, %for.end
  %41 = load i32, i32* %i, align 4, !dbg !17194
  %42 = load i32, i32* %num, align 4, !dbg !17196
  %cmp8 = icmp ult i32 %41, %42, !dbg !17197
  br i1 %cmp8, label %for.body10, label %for.end17, !dbg !17198

for.body10:                                       ; preds = %for.cond7
  %43 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17199
  %44 = load i16, i16* %bp_index, align 2, !dbg !17201
  %45 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !17202
  %bp = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %45, i32 0, i32 13, !dbg !17202
  %46 = load i32, i32* %i, align 4, !dbg !17202
  %idxprom11 = zext i32 %46 to i64, !dbg !17202
  %arrayidx12 = getelementptr [4 x i16], [4 x i16]* %bp, i64 0, i64 %idxprom11, !dbg !17202
  %47 = load i16, i16* %arrayidx12, align 1, !dbg !17202
  call void @sram_write(%struct.r8152* %43, i16 zeroext %44, i16 zeroext %47) #13, !dbg !17203
  %48 = load i16, i16* %bp_index, align 2, !dbg !17204
  %conv13 = zext i16 %48 to i32, !dbg !17204
  %add = add i32 %conv13, 2, !dbg !17204
  %conv14 = trunc i32 %add to i16, !dbg !17204
  store i16 %conv14, i16* %bp_index, align 2, !dbg !17204
  br label %for.inc15, !dbg !17205

for.inc15:                                        ; preds = %for.body10
  %49 = load i32, i32* %i, align 4, !dbg !17206
  %inc16 = add i32 %49, 1, !dbg !17206
  store i32 %inc16, i32* %i, align 4, !dbg !17206
  br label %for.cond7, !dbg !17207, !llvm.loop !17208

for.end17:                                        ; preds = %for.cond7
  %50 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17210
  %51 = load i16, i16* %mode_reg, align 2, !dbg !17211
  %52 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !17212
  %mode_post = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %52, i32 0, i32 9, !dbg !17212
  %53 = load i16, i16* %mode_post, align 1, !dbg !17212
  call void @sram_write(%struct.r8152* %50, i16 zeroext %51, i16 zeroext %53) #13, !dbg !17213
  ret void, !dbg !17214
}

; Function Attrs: noredzone
declare dso_local i64 @strscpy(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl_clear_bp(%struct.r8152* %tp, i16 zeroext %type) #2 !dbg !17215 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %type.addr = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17218, metadata !DIExpression()), !dbg !17219
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !17220, metadata !DIExpression()), !dbg !17221
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17222
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 39, !dbg !17223
  %1 = load i8, i8* %version, align 8, !dbg !17223
  %conv = zext i8 %1 to i32, !dbg !17222
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 7, label %sw.bb
    i32 3, label %sw.bb1
    i32 4, label %sw.bb1
    i32 5, label %sw.bb1
    i32 6, label %sw.bb1
    i32 8, label %sw.bb2
    i32 9, label %sw.bb2
  ], !dbg !17224

sw.bb:                                            ; preds = %entry, %entry, %entry
  br label %sw.epilog, !dbg !17225

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17227
  %3 = load i16, i16* %type.addr, align 2, !dbg !17228
  call void @ocp_write_byte(%struct.r8152* %2, i16 zeroext %3, i16 zeroext -968, i32 0) #13, !dbg !17229
  br label %sw.epilog, !dbg !17230

sw.bb2:                                           ; preds = %entry, %entry
  br label %sw.default, !dbg !17230

sw.default:                                       ; preds = %entry, %sw.bb2
  %4 = load i16, i16* %type.addr, align 2, !dbg !17231
  %conv3 = zext i16 %4 to i32, !dbg !17231
  %cmp = icmp eq i32 %conv3, 0, !dbg !17233
  br i1 %cmp, label %if.then, label %if.else, !dbg !17234

if.then:                                          ; preds = %sw.default
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17235
  call void @ocp_write_byte(%struct.r8152* %5, i16 zeroext 0, i16 zeroext -952, i32 0) #13, !dbg !17237
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17238
  call void @ocp_write_word(%struct.r8152* %6, i16 zeroext 0, i16 zeroext -968, i32 0) #13, !dbg !17239
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17240
  call void @ocp_write_word(%struct.r8152* %7, i16 zeroext 0, i16 zeroext -966, i32 0) #13, !dbg !17241
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17242
  call void @ocp_write_word(%struct.r8152* %8, i16 zeroext 0, i16 zeroext -964, i32 0) #13, !dbg !17243
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17244
  call void @ocp_write_word(%struct.r8152* %9, i16 zeroext 0, i16 zeroext -962, i32 0) #13, !dbg !17245
  %10 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17246
  call void @ocp_write_word(%struct.r8152* %10, i16 zeroext 0, i16 zeroext -960, i32 0) #13, !dbg !17247
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17248
  call void @ocp_write_word(%struct.r8152* %11, i16 zeroext 0, i16 zeroext -958, i32 0) #13, !dbg !17249
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17250
  call void @ocp_write_word(%struct.r8152* %12, i16 zeroext 0, i16 zeroext -956, i32 0) #13, !dbg !17251
  %13 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17252
  call void @ocp_write_word(%struct.r8152* %13, i16 zeroext 0, i16 zeroext -954, i32 0) #13, !dbg !17253
  br label %if.end, !dbg !17254

if.else:                                          ; preds = %sw.default
  %14 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17255
  call void @ocp_write_byte(%struct.r8152* %14, i16 zeroext 256, i16 zeroext -968, i32 0) #13, !dbg !17257
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !17258

sw.epilog:                                        ; preds = %if.end, %sw.bb1, %sw.bb
  %15 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17259
  %16 = load i16, i16* %type.addr, align 2, !dbg !17260
  call void @ocp_write_word(%struct.r8152* %15, i16 zeroext %16, i16 zeroext -984, i32 0) #13, !dbg !17261
  %17 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17262
  %18 = load i16, i16* %type.addr, align 2, !dbg !17263
  call void @ocp_write_word(%struct.r8152* %17, i16 zeroext %18, i16 zeroext -982, i32 0) #13, !dbg !17264
  %19 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17265
  %20 = load i16, i16* %type.addr, align 2, !dbg !17266
  call void @ocp_write_word(%struct.r8152* %19, i16 zeroext %20, i16 zeroext -980, i32 0) #13, !dbg !17267
  %21 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17268
  %22 = load i16, i16* %type.addr, align 2, !dbg !17269
  call void @ocp_write_word(%struct.r8152* %21, i16 zeroext %22, i16 zeroext -978, i32 0) #13, !dbg !17270
  %23 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17271
  %24 = load i16, i16* %type.addr, align 2, !dbg !17272
  call void @ocp_write_word(%struct.r8152* %23, i16 zeroext %24, i16 zeroext -976, i32 0) #13, !dbg !17273
  %25 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17274
  %26 = load i16, i16* %type.addr, align 2, !dbg !17275
  call void @ocp_write_word(%struct.r8152* %25, i16 zeroext %26, i16 zeroext -974, i32 0) #13, !dbg !17276
  %27 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17277
  %28 = load i16, i16* %type.addr, align 2, !dbg !17278
  call void @ocp_write_word(%struct.r8152* %27, i16 zeroext %28, i16 zeroext -972, i32 0) #13, !dbg !17279
  %29 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17280
  %30 = load i16, i16* %type.addr, align 2, !dbg !17281
  call void @ocp_write_word(%struct.r8152* %29, i16 zeroext %30, i16 zeroext -970, i32 0) #13, !dbg !17282
  call void @usleep_range(i64 3000, i64 6000) #13, !dbg !17283
  %31 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17284
  %32 = load i16, i16* %type.addr, align 2, !dbg !17285
  call void @ocp_write_word(%struct.r8152* %31, i16 zeroext %32, i16 zeroext -986, i32 0) #13, !dbg !17286
  ret void, !dbg !17287
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @r8153_patch_request(%struct.r8152* %tp, i1 zeroext %request) #2 !dbg !17288 {
entry:
  %retval = alloca i32, align 4
  %tp.addr = alloca %struct.r8152*, align 8
  %request.addr = alloca i8, align 1
  %data = alloca i16, align 2
  %i = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17291, metadata !DIExpression()), !dbg !17292
  %frombool = zext i1 %request to i8
  store i8 %frombool, i8* %request.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %request.addr, metadata !17293, metadata !DIExpression()), !dbg !17294
  call void @llvm.dbg.declare(metadata i16* %data, metadata !17295, metadata !DIExpression()), !dbg !17296
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17297, metadata !DIExpression()), !dbg !17298
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17299
  %call = call zeroext i16 @ocp_reg_read(%struct.r8152* %0, i16 zeroext -18400) #13, !dbg !17300
  store i16 %call, i16* %data, align 2, !dbg !17301
  %1 = load i8, i8* %request.addr, align 1, !dbg !17302
  %tobool = trunc i8 %1 to i1, !dbg !17302
  br i1 %tobool, label %if.then, label %if.else, !dbg !17304

if.then:                                          ; preds = %entry
  %2 = load i16, i16* %data, align 2, !dbg !17305
  %conv = zext i16 %2 to i64, !dbg !17305
  %or = or i64 %conv, 16, !dbg !17305
  %conv1 = trunc i64 %or to i16, !dbg !17305
  store i16 %conv1, i16* %data, align 2, !dbg !17305
  br label %if.end, !dbg !17306

if.else:                                          ; preds = %entry
  %3 = load i16, i16* %data, align 2, !dbg !17307
  %conv2 = zext i16 %3 to i64, !dbg !17307
  %and = and i64 %conv2, -17, !dbg !17307
  %conv3 = trunc i64 %and to i16, !dbg !17307
  store i16 %conv3, i16* %data, align 2, !dbg !17307
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17308
  %5 = load i16, i16* %data, align 2, !dbg !17309
  call void @ocp_reg_write(%struct.r8152* %4, i16 zeroext -18400, i16 zeroext %5) #13, !dbg !17310
  store i32 0, i32* %i, align 4, !dbg !17311
  br label %for.cond, !dbg !17313

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i8, i8* %request.addr, align 1, !dbg !17314
  %tobool4 = trunc i8 %6 to i1, !dbg !17314
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !17316

land.rhs:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4, !dbg !17317
  %cmp = icmp slt i32 %7, 5000, !dbg !17318
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %8 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ], !dbg !17319
  br i1 %8, label %for.body, label %for.end, !dbg !17320

for.body:                                         ; preds = %land.end
  call void @usleep_range(i64 1000, i64 2000) #13, !dbg !17321
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17323
  %call7 = call zeroext i16 @ocp_reg_read(%struct.r8152* %9, i16 zeroext -18432) #13, !dbg !17325
  %conv8 = zext i16 %call7 to i64, !dbg !17325
  %and9 = and i64 %conv8, 64, !dbg !17326
  %tobool10 = icmp ne i64 %and9, 0, !dbg !17326
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !17327

if.then11:                                        ; preds = %for.body
  br label %for.end, !dbg !17328

if.end12:                                         ; preds = %for.body
  br label %for.inc, !dbg !17329

for.inc:                                          ; preds = %if.end12
  %10 = load i32, i32* %i, align 4, !dbg !17330
  %inc = add i32 %10, 1, !dbg !17330
  store i32 %inc, i32* %i, align 4, !dbg !17330
  br label %for.cond, !dbg !17331, !llvm.loop !17332

for.end:                                          ; preds = %if.then11, %land.end
  %11 = load i8, i8* %request.addr, align 1, !dbg !17334
  %tobool13 = trunc i8 %11 to i1, !dbg !17334
  br i1 %tobool13, label %land.lhs.true, label %if.else25, !dbg !17336

land.lhs.true:                                    ; preds = %for.end
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17337
  %call15 = call zeroext i16 @ocp_reg_read(%struct.r8152* %12, i16 zeroext -18432) #13, !dbg !17338
  %conv16 = zext i16 %call15 to i64, !dbg !17338
  %and17 = and i64 %conv16, 64, !dbg !17339
  %tobool18 = icmp ne i64 %and17, 0, !dbg !17339
  br i1 %tobool18, label %if.else25, label %if.then19, !dbg !17340

if.then19:                                        ; preds = %land.lhs.true
  br label %do.body, !dbg !17341

do.body:                                          ; preds = %if.then19
  %13 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17343
  %msg_enable = getelementptr inbounds %struct.r8152, %struct.r8152* %13, i32 0, i32 28, !dbg !17343
  %14 = load i32, i32* %msg_enable, align 8, !dbg !17343
  %and20 = and i32 %14, 1, !dbg !17343
  %tobool21 = icmp ne i32 %and20, 0, !dbg !17343
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !17346

if.then22:                                        ; preds = %do.body
  %15 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17343
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %15, i32 0, i32 4, !dbg !17343
  %16 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !17343
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0)) #14, !dbg !17343
  br label %if.end23, !dbg !17343

if.end23:                                         ; preds = %if.then22, %do.body
  br label %do.end, !dbg !17346

do.end:                                           ; preds = %if.end23
  %17 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17347
  %call24 = call i32 @r8153_patch_request(%struct.r8152* %17, i1 zeroext false) #13, !dbg !17348
  store i32 -62, i32* %retval, align 4, !dbg !17349
  br label %return, !dbg !17349

if.else25:                                        ; preds = %land.lhs.true, %for.end
  store i32 0, i32* %retval, align 4, !dbg !17350
  br label %return, !dbg !17350

return:                                           ; preds = %if.else25, %do.end
  %18 = load i32, i32* %retval, align 4, !dbg !17352
  ret i32 %18, !dbg !17352
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sram_write(%struct.r8152* %tp, i16 zeroext %addr, i16 zeroext %data) #2 !dbg !17353 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %addr.addr = alloca i16, align 2
  %data.addr = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17354, metadata !DIExpression()), !dbg !17355
  store i16 %addr, i16* %addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %addr.addr, metadata !17356, metadata !DIExpression()), !dbg !17357
  store i16 %data, i16* %data.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %data.addr, metadata !17358, metadata !DIExpression()), !dbg !17359
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17360
  %1 = load i16, i16* %addr.addr, align 2, !dbg !17361
  call void @ocp_reg_write(%struct.r8152* %0, i16 zeroext -23498, i16 zeroext %1) #13, !dbg !17362
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17363
  %3 = load i16, i16* %data.addr, align 2, !dbg !17364
  call void @ocp_reg_write(%struct.r8152* %2, i16 zeroext -23496, i16 zeroext %3) #13, !dbg !17365
  ret void, !dbg !17366
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153_u1u2en(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !17367 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  %u1u2 = alloca [8 x i8], align 1
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17368, metadata !DIExpression()), !dbg !17369
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !17370, metadata !DIExpression()), !dbg !17371
  call void @llvm.dbg.declare(metadata [8 x i8]* %u1u2, metadata !17372, metadata !DIExpression()), !dbg !17373
  %0 = load i8, i8* %enable.addr, align 1, !dbg !17374
  %tobool = trunc i8 %0 to i1, !dbg !17374
  br i1 %tobool, label %if.then, label %if.else, !dbg !17376

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %u1u2, i64 0, i64 0, !dbg !17377
  call void @llvm.memset.p0i8.i64(i8* align 1 %arraydecay, i8 -1, i64 8, i1 false), !dbg !17377
  br label %if.end, !dbg !17377

if.else:                                          ; preds = %entry
  %arraydecay1 = getelementptr inbounds [8 x i8], [8 x i8]* %u1u2, i64 0, i64 0, !dbg !17378
  call void @llvm.memset.p0i8.i64(i8* align 1 %arraydecay1, i8 0, i64 8, i1 false), !dbg !17378
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17379
  %arraydecay2 = getelementptr inbounds [8 x i8], [8 x i8]* %u1u2, i64 0, i64 0, !dbg !17380
  %call = call i32 @usb_ocp_write(%struct.r8152* %1, i16 zeroext -11120, i16 zeroext 63, i16 zeroext 8, i8* %arraydecay2) #13, !dbg !17381
  ret void, !dbg !17382
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @r8153_phy_status(%struct.r8152* %tp, i16 zeroext %desired) #2 !dbg !17383 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %desired.addr = alloca i16, align 2
  %data = alloca i16, align 2
  %i = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17384, metadata !DIExpression()), !dbg !17385
  store i16 %desired, i16* %desired.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %desired.addr, metadata !17386, metadata !DIExpression()), !dbg !17387
  call void @llvm.dbg.declare(metadata i16* %data, metadata !17388, metadata !DIExpression()), !dbg !17389
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17390, metadata !DIExpression()), !dbg !17391
  store i32 0, i32* %i, align 4, !dbg !17392
  br label %for.cond, !dbg !17394

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !17395
  %cmp = icmp slt i32 %0, 500, !dbg !17397
  br i1 %cmp, label %for.body, label %for.end, !dbg !17398

for.body:                                         ; preds = %for.cond
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17399
  %call = call zeroext i16 @ocp_reg_read(%struct.r8152* %1, i16 zeroext -23520) #13, !dbg !17401
  store i16 %call, i16* %data, align 2, !dbg !17402
  %2 = load i16, i16* %data, align 2, !dbg !17403
  %conv = zext i16 %2 to i32, !dbg !17403
  %and = and i32 %conv, 7, !dbg !17403
  %conv1 = trunc i32 %and to i16, !dbg !17403
  store i16 %conv1, i16* %data, align 2, !dbg !17403
  %3 = load i16, i16* %desired.addr, align 2, !dbg !17404
  %tobool = icmp ne i16 %3, 0, !dbg !17404
  br i1 %tobool, label %if.then, label %if.else, !dbg !17406

if.then:                                          ; preds = %for.body
  %4 = load i16, i16* %data, align 2, !dbg !17407
  %conv2 = zext i16 %4 to i32, !dbg !17407
  %5 = load i16, i16* %desired.addr, align 2, !dbg !17410
  %conv3 = zext i16 %5 to i32, !dbg !17410
  %cmp4 = icmp eq i32 %conv2, %conv3, !dbg !17411
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !17412

if.then6:                                         ; preds = %if.then
  br label %for.end, !dbg !17413

if.end:                                           ; preds = %if.then
  br label %if.end19, !dbg !17414

if.else:                                          ; preds = %for.body
  %6 = load i16, i16* %data, align 2, !dbg !17415
  %conv7 = zext i16 %6 to i32, !dbg !17415
  %cmp8 = icmp eq i32 %conv7, 3, !dbg !17417
  br i1 %cmp8, label %if.then17, label %lor.lhs.false, !dbg !17418

lor.lhs.false:                                    ; preds = %if.else
  %7 = load i16, i16* %data, align 2, !dbg !17419
  %conv10 = zext i16 %7 to i32, !dbg !17419
  %cmp11 = icmp eq i32 %conv10, 5, !dbg !17420
  br i1 %cmp11, label %if.then17, label %lor.lhs.false13, !dbg !17421

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %8 = load i16, i16* %data, align 2, !dbg !17422
  %conv14 = zext i16 %8 to i32, !dbg !17422
  %cmp15 = icmp eq i32 %conv14, 2, !dbg !17423
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !17424

if.then17:                                        ; preds = %lor.lhs.false13, %lor.lhs.false, %if.else
  br label %for.end, !dbg !17425

if.end18:                                         ; preds = %lor.lhs.false13
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end
  call void @msleep(i32 20) #13, !dbg !17427
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17428
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %9, i32 0, i32 0, !dbg !17430
  %call20 = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !17431
  br i1 %call20, label %if.then21, label %if.end22, !dbg !17432

if.then21:                                        ; preds = %if.end19
  br label %for.end, !dbg !17433

if.end22:                                         ; preds = %if.end19
  br label %for.inc, !dbg !17434

for.inc:                                          ; preds = %if.end22
  %10 = load i32, i32* %i, align 4, !dbg !17435
  %inc = add i32 %10, 1, !dbg !17435
  store i32 %inc, i32* %i, align 4, !dbg !17435
  br label %for.cond, !dbg !17436, !llvm.loop !17437

for.end:                                          ; preds = %if.then21, %if.then17, %if.then6, %for.cond
  %11 = load i16, i16* %data, align 2, !dbg !17439
  ret i16 %11, !dbg !17440
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153_u2p3en(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !17441 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17442, metadata !DIExpression()), !dbg !17443
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !17444, metadata !DIExpression()), !dbg !17445
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !17446, metadata !DIExpression()), !dbg !17447
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17448
  %call = call zeroext i16 @ocp_read_word(%struct.r8152* %0, i16 zeroext 0, i16 zeroext -19360) #13, !dbg !17449
  %conv = zext i16 %call to i32, !dbg !17449
  store i32 %conv, i32* %ocp_data, align 4, !dbg !17450
  %1 = load i8, i8* %enable.addr, align 1, !dbg !17451
  %tobool = trunc i8 %1 to i1, !dbg !17451
  br i1 %tobool, label %if.then, label %if.else, !dbg !17453

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ocp_data, align 4, !dbg !17454
  %or = or i32 %2, 1, !dbg !17454
  store i32 %or, i32* %ocp_data, align 4, !dbg !17454
  br label %if.end, !dbg !17455

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %ocp_data, align 4, !dbg !17456
  %and = and i32 %3, -2, !dbg !17456
  store i32 %and, i32* %ocp_data, align 4, !dbg !17456
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17457
  %5 = load i32, i32* %ocp_data, align 4, !dbg !17458
  call void @ocp_write_word(%struct.r8152* %4, i16 zeroext 0, i16 zeroext -19360, i32 %5) #13, !dbg !17459
  ret void, !dbg !17460
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153_queue_wake(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !17461 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17462, metadata !DIExpression()), !dbg !17463
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !17464, metadata !DIExpression()), !dbg !17465
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !17466, metadata !DIExpression()), !dbg !17467
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17468
  %call = call zeroext i8 @ocp_read_byte(%struct.r8152* %0, i16 zeroext 256, i16 zeroext -11380) #13, !dbg !17469
  %conv = zext i8 %call to i32, !dbg !17469
  store i32 %conv, i32* %ocp_data, align 4, !dbg !17470
  %1 = load i8, i8* %enable.addr, align 1, !dbg !17471
  %tobool = trunc i8 %1 to i1, !dbg !17471
  br i1 %tobool, label %if.then, label %if.else, !dbg !17473

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ocp_data, align 4, !dbg !17474
  %conv1 = zext i32 %2 to i64, !dbg !17474
  %or = or i64 %conv1, 1, !dbg !17474
  %conv2 = trunc i64 %or to i32, !dbg !17474
  store i32 %conv2, i32* %ocp_data, align 4, !dbg !17474
  br label %if.end, !dbg !17475

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %ocp_data, align 4, !dbg !17476
  %conv3 = zext i32 %3 to i64, !dbg !17476
  %and = and i64 %conv3, -2, !dbg !17476
  %conv4 = trunc i64 %and to i32, !dbg !17476
  store i32 %conv4, i32* %ocp_data, align 4, !dbg !17476
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17477
  %5 = load i32, i32* %ocp_data, align 4, !dbg !17478
  call void @ocp_write_byte(%struct.r8152* %4, i16 zeroext 256, i16 zeroext -11380, i32 %5) #13, !dbg !17479
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17480
  %call5 = call zeroext i8 @ocp_read_byte(%struct.r8152* %6, i16 zeroext 256, i16 zeroext -11382) #13, !dbg !17481
  %conv6 = zext i8 %call5 to i32, !dbg !17481
  store i32 %conv6, i32* %ocp_data, align 4, !dbg !17482
  %7 = load i32, i32* %ocp_data, align 4, !dbg !17483
  %conv7 = zext i32 %7 to i64, !dbg !17483
  %and8 = and i64 %conv7, -2, !dbg !17483
  %conv9 = trunc i64 %and8 to i32, !dbg !17483
  store i32 %conv9, i32* %ocp_data, align 4, !dbg !17483
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17484
  %9 = load i32, i32* %ocp_data, align 4, !dbg !17485
  call void @ocp_write_byte(%struct.r8152* %8, i16 zeroext 256, i16 zeroext -11382, i32 %9) #13, !dbg !17486
  %10 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17487
  %call10 = call zeroext i16 @ocp_read_word(%struct.r8152* %10, i16 zeroext 256, i16 zeroext -11368) #13, !dbg !17488
  %conv11 = zext i16 %call10 to i32, !dbg !17488
  store i32 %conv11, i32* %ocp_data, align 4, !dbg !17489
  %11 = load i32, i32* %ocp_data, align 4, !dbg !17490
  %conv12 = zext i32 %11 to i64, !dbg !17490
  %and13 = and i64 %conv12, -257, !dbg !17490
  %conv14 = trunc i64 %and13 to i32, !dbg !17490
  store i32 %conv14, i32* %ocp_data, align 4, !dbg !17490
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17491
  %13 = load i32, i32* %ocp_data, align 4, !dbg !17492
  call void @ocp_write_word(%struct.r8152* %12, i16 zeroext 256, i16 zeroext -11368, i32 %13) #13, !dbg !17493
  ret void, !dbg !17494
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153_power_cut_en(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !17495 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17496, metadata !DIExpression()), !dbg !17497
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !17498, metadata !DIExpression()), !dbg !17499
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !17500, metadata !DIExpression()), !dbg !17501
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17502
  %call = call zeroext i16 @ocp_read_word(%struct.r8152* %0, i16 zeroext 0, i16 zeroext -10230) #13, !dbg !17503
  %conv = zext i16 %call to i32, !dbg !17503
  store i32 %conv, i32* %ocp_data, align 4, !dbg !17504
  %1 = load i8, i8* %enable.addr, align 1, !dbg !17505
  %tobool = trunc i8 %1 to i1, !dbg !17505
  br i1 %tobool, label %if.then, label %if.else, !dbg !17507

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ocp_data, align 4, !dbg !17508
  %or = or i32 %2, 9, !dbg !17508
  store i32 %or, i32* %ocp_data, align 4, !dbg !17508
  br label %if.end, !dbg !17509

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %ocp_data, align 4, !dbg !17510
  %and = and i32 %3, -10, !dbg !17510
  store i32 %and, i32* %ocp_data, align 4, !dbg !17510
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17511
  %5 = load i32, i32* %ocp_data, align 4, !dbg !17512
  call void @ocp_write_word(%struct.r8152* %4, i16 zeroext 0, i16 zeroext -10230, i32 %5) #13, !dbg !17513
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17514
  %call1 = call zeroext i16 @ocp_read_word(%struct.r8152* %6, i16 zeroext 0, i16 zeroext -10214) #13, !dbg !17515
  %conv2 = zext i16 %call1 to i32, !dbg !17515
  store i32 %conv2, i32* %ocp_data, align 4, !dbg !17516
  %7 = load i32, i32* %ocp_data, align 4, !dbg !17517
  %and3 = and i32 %7, -2, !dbg !17517
  store i32 %and3, i32* %ocp_data, align 4, !dbg !17517
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17518
  %9 = load i32, i32* %ocp_data, align 4, !dbg !17519
  call void @ocp_write_word(%struct.r8152* %8, i16 zeroext 0, i16 zeroext -10214, i32 %9) #13, !dbg !17520
  ret void, !dbg !17521
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153_mac_clk_spd(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !17522 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17523, metadata !DIExpression()), !dbg !17524
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !17525, metadata !DIExpression()), !dbg !17526
  %0 = load i8, i8* %enable.addr, align 1, !dbg !17527
  %tobool = trunc i8 %0 to i1, !dbg !17527
  br i1 %tobool, label %if.then, label %if.else, !dbg !17529

if.then:                                          ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17530
  call void @ocp_write_word(%struct.r8152* %1, i16 zeroext 256, i16 zeroext -8000, i32 3975) #13, !dbg !17532
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17533
  call void @ocp_write_word(%struct.r8152* %2, i16 zeroext 256, i16 zeroext -7990, i32 32775) #13, !dbg !17534
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17535
  call void @ocp_write_word(%struct.r8152* %3, i16 zeroext 256, i16 zeroext -7988, i32 263) #13, !dbg !17536
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17537
  call void @ocp_write_word(%struct.r8152* %4, i16 zeroext 256, i16 zeroext -7986, i32 6457) #13, !dbg !17538
  br label %if.end, !dbg !17539

if.else:                                          ; preds = %entry
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17540
  call void @ocp_write_word(%struct.r8152* %5, i16 zeroext 256, i16 zeroext -8000, i32 0) #13, !dbg !17542
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17543
  call void @ocp_write_word(%struct.r8152* %6, i16 zeroext 256, i16 zeroext -7990, i32 0) #13, !dbg !17544
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17545
  call void @ocp_write_word(%struct.r8152* %7, i16 zeroext 256, i16 zeroext -7988, i32 0) #13, !dbg !17546
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17547
  call void @ocp_write_word(%struct.r8152* %8, i16 zeroext 256, i16 zeroext -7986, i32 0) #13, !dbg !17548
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !17549
}

; Function Attrs: noredzone
declare dso_local void @usb_enable_lpm(%struct.usb_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_ocp_write(%struct.r8152* %tp, i16 zeroext %index, i16 zeroext %byteen, i16 zeroext %size, i8* %data) #2 !dbg !17550 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %index.addr = alloca i16, align 2
  %byteen.addr = alloca i16, align 2
  %size.addr = alloca i16, align 2
  %data.addr = alloca i8*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17551, metadata !DIExpression()), !dbg !17552
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !17553, metadata !DIExpression()), !dbg !17554
  store i16 %byteen, i16* %byteen.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %byteen.addr, metadata !17555, metadata !DIExpression()), !dbg !17556
  store i16 %size, i16* %size.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %size.addr, metadata !17557, metadata !DIExpression()), !dbg !17558
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !17559, metadata !DIExpression()), !dbg !17560
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17561
  %1 = load i16, i16* %index.addr, align 2, !dbg !17562
  %2 = load i16, i16* %byteen.addr, align 2, !dbg !17563
  %3 = load i16, i16* %size.addr, align 2, !dbg !17564
  %4 = load i8*, i8** %data.addr, align 8, !dbg !17565
  %call = call i32 @generic_ocp_write(%struct.r8152* %0, i16 zeroext %1, i16 zeroext %2, i16 zeroext %3, i8* %4, i16 zeroext 0) #13, !dbg !17566
  ret i32 %call, !dbg !17567
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153_set_rx_early_timeout(%struct.r8152* %tp) #2 !dbg !17568 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17569, metadata !DIExpression()), !dbg !17570
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !17571, metadata !DIExpression()), !dbg !17572
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17573
  %coalesce = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 30, !dbg !17574
  %1 = load i32, i32* %coalesce, align 8, !dbg !17574
  %div = udiv i32 %1, 8, !dbg !17575
  store i32 %div, i32* %ocp_data, align 4, !dbg !17572
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17576
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 39, !dbg !17577
  %3 = load i8, i8* %version, align 8, !dbg !17577
  %conv = zext i8 %3 to i32, !dbg !17576
  switch i32 %conv, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 8, label %sw.bb1
    i32 9, label %sw.bb1
  ], !dbg !17578

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17579
  %5 = load i32, i32* %ocp_data, align 4, !dbg !17581
  call void @ocp_write_word(%struct.r8152* %4, i16 zeroext 0, i16 zeroext -11220, i32 %5) #13, !dbg !17582
  br label %sw.epilog, !dbg !17583

sw.bb1:                                           ; preds = %entry, %entry
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17584
  call void @ocp_write_word(%struct.r8152* %6, i16 zeroext 0, i16 zeroext -11220, i32 16) #13, !dbg !17585
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17586
  %8 = load i32, i32* %ocp_data, align 4, !dbg !17587
  call void @ocp_write_word(%struct.r8152* %7, i16 zeroext 0, i16 zeroext -11214, i32 %8) #13, !dbg !17588
  br label %sw.epilog, !dbg !17589

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !17590

sw.epilog:                                        ; preds = %sw.default, %sw.bb1, %sw.bb
  ret void, !dbg !17591
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153_set_rx_early_size(%struct.r8152* %tp) #2 !dbg !17592 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17593, metadata !DIExpression()), !dbg !17594
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !17595, metadata !DIExpression()), !dbg !17596
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17597
  %rx_buf_sz = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 32, !dbg !17598
  %1 = load i32, i32* %rx_buf_sz, align 8, !dbg !17598
  %conv = zext i32 %1 to i64, !dbg !17597
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17599
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 4, !dbg !17599
  %3 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !17599
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 44, !dbg !17599
  %4 = load i32, i32* %mtu, align 8, !dbg !17599
  %add = add i32 %4, 18, !dbg !17599
  %add1 = add i32 %add, 4, !dbg !17599
  %conv2 = zext i32 %add1 to i64, !dbg !17599
  %add3 = add i64 %conv2, 24, !dbg !17599
  %add4 = add i64 %add3, 8, !dbg !17599
  %sub = sub i64 %conv, %add4, !dbg !17600
  %conv5 = trunc i64 %sub to i32, !dbg !17597
  store i32 %conv5, i32* %ocp_data, align 4, !dbg !17596
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17601
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 39, !dbg !17602
  %6 = load i8, i8* %version, align 8, !dbg !17602
  %conv6 = zext i8 %6 to i32, !dbg !17601
  switch i32 %conv6, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 8, label %sw.bb7
    i32 9, label %sw.bb7
  ], !dbg !17603

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17604
  %8 = load i32, i32* %ocp_data, align 4, !dbg !17606
  %div = udiv i32 %8, 4, !dbg !17607
  call void @ocp_write_word(%struct.r8152* %7, i16 zeroext 0, i16 zeroext -11218, i32 %div) #13, !dbg !17608
  br label %sw.epilog, !dbg !17609

sw.bb7:                                           ; preds = %entry, %entry
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17610
  %10 = load i32, i32* %ocp_data, align 4, !dbg !17611
  %div8 = udiv i32 %10, 8, !dbg !17612
  call void @ocp_write_word(%struct.r8152* %9, i16 zeroext 0, i16 zeroext -11218, i32 %div8) #13, !dbg !17613
  br label %sw.epilog, !dbg !17614

sw.default:                                       ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !17615, metadata !DIExpression()), !dbg !17617
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !17617
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !17618
  %tobool = icmp ne i32 %11, 0, !dbg !17618
  %lnot = xor i1 %tobool, true, !dbg !17618
  %lnot9 = xor i1 %lnot, true, !dbg !17618
  %lnot.ext = zext i1 %lnot9 to i32, !dbg !17618
  %conv10 = sext i32 %lnot.ext to i64, !dbg !17618
  %tobool11 = icmp ne i64 %conv10, 0, !dbg !17618
  br i1 %tobool11, label %if.then, label %if.end, !dbg !17617

if.then:                                          ; preds = %sw.default
  br label %do.body, !dbg !17618

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !17620

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !17622

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !17620

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 2850, i32 2307, i64 12) #11, !dbg !17624, !srcloc !17626
  br label %do.end14, !dbg !17624

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 586) #11, !dbg !17627, !srcloc !17629
  br label %do.body15, !dbg !17620

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !17630

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !17620

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !17620

if.end:                                           ; preds = %do.end17, %sw.default
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !17617
  %tobool18 = icmp ne i32 %12, 0, !dbg !17617
  %lnot19 = xor i1 %tobool18, true, !dbg !17617
  %lnot21 = xor i1 %lnot19, true, !dbg !17617
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !17617
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !17617
  store i64 %conv23, i64* %tmp, align 8, !dbg !17618
  %13 = load i64, i64* %tmp, align 8, !dbg !17617
  br label %sw.epilog, !dbg !17632

sw.epilog:                                        ; preds = %if.end, %sw.bb7, %sw.bb
  ret void, !dbg !17633
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153_aldps_en(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !17634 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  %data = alloca i16, align 2
  %i = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17635, metadata !DIExpression()), !dbg !17636
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !17637, metadata !DIExpression()), !dbg !17638
  call void @llvm.dbg.declare(metadata i16* %data, metadata !17639, metadata !DIExpression()), !dbg !17640
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17641
  %call = call zeroext i16 @ocp_reg_read(%struct.r8152* %0, i16 zeroext -23504) #13, !dbg !17642
  store i16 %call, i16* %data, align 2, !dbg !17643
  %1 = load i8, i8* %enable.addr, align 1, !dbg !17644
  %tobool = trunc i8 %1 to i1, !dbg !17644
  br i1 %tobool, label %if.then, label %if.else, !dbg !17646

if.then:                                          ; preds = %entry
  %2 = load i16, i16* %data, align 2, !dbg !17647
  %conv = zext i16 %2 to i32, !dbg !17647
  %or = or i32 %conv, 4, !dbg !17647
  %conv1 = trunc i32 %or to i16, !dbg !17647
  store i16 %conv1, i16* %data, align 2, !dbg !17647
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17649
  %4 = load i16, i16* %data, align 2, !dbg !17650
  call void @ocp_reg_write(%struct.r8152* %3, i16 zeroext -23504, i16 zeroext %4) #13, !dbg !17651
  br label %if.end10, !dbg !17652

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17653, metadata !DIExpression()), !dbg !17655
  %5 = load i16, i16* %data, align 2, !dbg !17656
  %conv2 = zext i16 %5 to i32, !dbg !17656
  %and = and i32 %conv2, -5, !dbg !17656
  %conv3 = trunc i32 %and to i16, !dbg !17656
  store i16 %conv3, i16* %data, align 2, !dbg !17656
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17657
  %7 = load i16, i16* %data, align 2, !dbg !17658
  call void @ocp_reg_write(%struct.r8152* %6, i16 zeroext -23504, i16 zeroext %7) #13, !dbg !17659
  store i32 0, i32* %i, align 4, !dbg !17660
  br label %for.cond, !dbg !17662

for.cond:                                         ; preds = %for.inc, %if.else
  %8 = load i32, i32* %i, align 4, !dbg !17663
  %cmp = icmp slt i32 %8, 20, !dbg !17665
  br i1 %cmp, label %for.body, label %for.end, !dbg !17666

for.body:                                         ; preds = %for.cond
  call void @usleep_range(i64 1000, i64 2000) #13, !dbg !17667
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17669
  %call5 = call zeroext i16 @ocp_read_word(%struct.r8152* %9, i16 zeroext 256, i16 zeroext -8192) #13, !dbg !17671
  %conv6 = zext i16 %call5 to i32, !dbg !17671
  %and7 = and i32 %conv6, 256, !dbg !17672
  %tobool8 = icmp ne i32 %and7, 0, !dbg !17672
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !17673

if.then9:                                         ; preds = %for.body
  br label %for.end, !dbg !17674

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !17675

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !dbg !17676
  %inc = add i32 %10, 1, !dbg !17676
  store i32 %inc, i32* %i, align 4, !dbg !17676
  br label %for.cond, !dbg !17677, !llvm.loop !17678

for.end:                                          ; preds = %if.then9, %for.cond
  br label %if.end10

if.end10:                                         ; preds = %for.end, %if.then
  %11 = load i8, i8* %enable.addr, align 1, !dbg !17680
  %tobool11 = trunc i8 %11 to i1, !dbg !17680
  %conv12 = zext i1 %tobool11 to i32, !dbg !17680
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17681
  %ups_info = getelementptr inbounds %struct.r8152, %struct.r8152* %12, i32 0, i32 22, !dbg !17682
  %13 = bitcast %struct.ups_info* %ups_info to i32*, !dbg !17683
  %bf.load = load i32, i32* %13, align 8, !dbg !17684
  %bf.value = and i32 %conv12, 1, !dbg !17684
  %bf.shl = shl i32 %bf.value, 2, !dbg !17684
  %bf.clear = and i32 %bf.load, -5, !dbg !17684
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !17684
  store i32 %bf.set, i32* %13, align 8, !dbg !17684
  ret void, !dbg !17685
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl_reset_bmu(%struct.r8152* %tp) #2 !dbg !17686 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17687, metadata !DIExpression()), !dbg !17688
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !17689, metadata !DIExpression()), !dbg !17690
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17691
  %call = call zeroext i8 @ocp_read_byte(%struct.r8152* %0, i16 zeroext 0, i16 zeroext -11088) #13, !dbg !17692
  %conv = zext i8 %call to i32, !dbg !17692
  store i32 %conv, i32* %ocp_data, align 4, !dbg !17693
  %1 = load i32, i32* %ocp_data, align 4, !dbg !17694
  %and = and i32 %1, -4, !dbg !17694
  store i32 %and, i32* %ocp_data, align 4, !dbg !17694
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17695
  %3 = load i32, i32* %ocp_data, align 4, !dbg !17696
  call void @ocp_write_byte(%struct.r8152* %2, i16 zeroext 0, i16 zeroext -11088, i32 %3) #13, !dbg !17697
  %4 = load i32, i32* %ocp_data, align 4, !dbg !17698
  %or = or i32 %4, 3, !dbg !17698
  store i32 %or, i32* %ocp_data, align 4, !dbg !17698
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17699
  %6 = load i32, i32* %ocp_data, align 4, !dbg !17700
  call void @ocp_write_byte(%struct.r8152* %5, i16 zeroext 0, i16 zeroext -11088, i32 %6) #13, !dbg !17701
  ret void, !dbg !17702
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153_first_init(%struct.r8152* %tp) #2 !dbg !17703 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17704, metadata !DIExpression()), !dbg !17705
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !17706, metadata !DIExpression()), !dbg !17707
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17708
  call void @r8153_mac_clk_spd(%struct.r8152* %0, i1 zeroext false) #13, !dbg !17709
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17710
  call void @rxdy_gated_en(%struct.r8152* %1, i1 zeroext true) #13, !dbg !17711
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17712
  call void @r8153_teredo_off(%struct.r8152* %2) #13, !dbg !17713
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17714
  %call = call i32 @ocp_read_dword(%struct.r8152* %3, i16 zeroext 256, i16 zeroext -16368) #13, !dbg !17715
  store i32 %call, i32* %ocp_data, align 4, !dbg !17716
  %4 = load i32, i32* %ocp_data, align 4, !dbg !17717
  %and = and i32 %4, -16, !dbg !17717
  store i32 %and, i32* %ocp_data, align 4, !dbg !17717
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17718
  %6 = load i32, i32* %ocp_data, align 4, !dbg !17719
  call void @ocp_write_dword(%struct.r8152* %5, i16 zeroext 256, i16 zeroext -16368, i32 %6) #13, !dbg !17720
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17721
  call void @rtl8152_nic_reset(%struct.r8152* %7) #13, !dbg !17722
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17723
  call void @rtl_reset_bmu(%struct.r8152* %8) #13, !dbg !17724
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17725
  %call1 = call zeroext i8 @ocp_read_byte(%struct.r8152* %9, i16 zeroext 256, i16 zeroext -6065) #13, !dbg !17726
  %conv = zext i8 %call1 to i32, !dbg !17726
  store i32 %conv, i32* %ocp_data, align 4, !dbg !17727
  %10 = load i32, i32* %ocp_data, align 4, !dbg !17728
  %and2 = and i32 %10, -129, !dbg !17728
  store i32 %and2, i32* %ocp_data, align 4, !dbg !17728
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17729
  %12 = load i32, i32* %ocp_data, align 4, !dbg !17730
  call void @ocp_write_byte(%struct.r8152* %11, i16 zeroext 256, i16 zeroext -6065, i32 %12) #13, !dbg !17731
  %13 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17732
  %call3 = call zeroext i16 @ocp_read_word(%struct.r8152* %13, i16 zeroext 256, i16 zeroext -5922) #13, !dbg !17733
  %conv4 = zext i16 %call3 to i32, !dbg !17733
  store i32 %conv4, i32* %ocp_data, align 4, !dbg !17734
  %14 = load i32, i32* %ocp_data, align 4, !dbg !17735
  %and5 = and i32 %14, -16385, !dbg !17735
  store i32 %and5, i32* %ocp_data, align 4, !dbg !17735
  %15 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17736
  %16 = load i32, i32* %ocp_data, align 4, !dbg !17737
  call void @ocp_write_word(%struct.r8152* %15, i16 zeroext 256, i16 zeroext -5922, i32 %16) #13, !dbg !17738
  %17 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17739
  call void @wait_oob_link_list_ready(%struct.r8152* %17) #13, !dbg !17740
  %18 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17741
  %call6 = call zeroext i16 @ocp_read_word(%struct.r8152* %18, i16 zeroext 256, i16 zeroext -5922) #13, !dbg !17742
  %conv7 = zext i16 %call6 to i32, !dbg !17742
  store i32 %conv7, i32* %ocp_data, align 4, !dbg !17743
  %19 = load i32, i32* %ocp_data, align 4, !dbg !17744
  %or = or i32 %19, 32768, !dbg !17744
  store i32 %or, i32* %ocp_data, align 4, !dbg !17744
  %20 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17745
  %21 = load i32, i32* %ocp_data, align 4, !dbg !17746
  call void @ocp_write_word(%struct.r8152* %20, i16 zeroext 256, i16 zeroext -5922, i32 %21) #13, !dbg !17747
  %22 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17748
  call void @wait_oob_link_list_ready(%struct.r8152* %22) #13, !dbg !17749
  %23 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17750
  %24 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17751
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %24, i32 0, i32 4, !dbg !17752
  %25 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !17752
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %25, i32 0, i32 15, !dbg !17753
  %26 = load i64, i64* %features, align 8, !dbg !17753
  %and8 = and i64 %26, 256, !dbg !17754
  %tobool = icmp ne i64 %and8, 0, !dbg !17751
  call void @rtl_rx_vlan_en(%struct.r8152* %23, i1 zeroext %tobool) #13, !dbg !17755
  %27 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17756
  %netdev9 = getelementptr inbounds %struct.r8152, %struct.r8152* %27, i32 0, i32 4, !dbg !17757
  %28 = load %struct.net_device*, %struct.net_device** %netdev9, align 8, !dbg !17757
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %28, i32 0, i32 44, !dbg !17758
  %29 = load i32, i32* %mtu, align 8, !dbg !17758
  %add = add i32 %29, 18, !dbg !17759
  %add10 = add i32 %add, 4, !dbg !17760
  store i32 %add10, i32* %ocp_data, align 4, !dbg !17761
  %30 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17762
  %31 = load i32, i32* %ocp_data, align 4, !dbg !17763
  call void @ocp_write_word(%struct.r8152* %30, i16 zeroext 256, i16 zeroext -16362, i32 %31) #13, !dbg !17764
  %32 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17765
  call void @ocp_write_byte(%struct.r8152* %32, i16 zeroext 256, i16 zeroext -6635, i32 192) #13, !dbg !17766
  %33 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17767
  %call11 = call zeroext i16 @ocp_read_word(%struct.r8152* %33, i16 zeroext 256, i16 zeroext -6640) #13, !dbg !17768
  %conv12 = zext i16 %call11 to i32, !dbg !17768
  store i32 %conv12, i32* %ocp_data, align 4, !dbg !17769
  %34 = load i32, i32* %ocp_data, align 4, !dbg !17770
  %or13 = or i32 %34, 128, !dbg !17770
  store i32 %or13, i32* %ocp_data, align 4, !dbg !17770
  %35 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17771
  %36 = load i32, i32* %ocp_data, align 4, !dbg !17772
  call void @ocp_write_word(%struct.r8152* %35, i16 zeroext 256, i16 zeroext -6640, i32 %36) #13, !dbg !17773
  %37 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17774
  call void @rtl8152_nic_reset(%struct.r8152* %37) #13, !dbg !17775
  %38 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17776
  call void @ocp_write_dword(%struct.r8152* %38, i16 zeroext 256, i16 zeroext -16224, i32 524290) #13, !dbg !17777
  %39 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17778
  call void @ocp_write_word(%struct.r8152* %39, i16 zeroext 256, i16 zeroext -16220, i32 160) #13, !dbg !17779
  %40 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17780
  call void @ocp_write_word(%struct.r8152* %40, i16 zeroext 256, i16 zeroext -16216, i32 272) #13, !dbg !17781
  %41 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17782
  call void @ocp_write_dword(%struct.r8152* %41, i16 zeroext 256, i16 zeroext -6632, i32 16777224) #13, !dbg !17783
  ret void, !dbg !17784
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153_enter_oob(%struct.r8152* %tp) #2 !dbg !17785 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17786, metadata !DIExpression()), !dbg !17787
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !17788, metadata !DIExpression()), !dbg !17789
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17790
  call void @r8153_mac_clk_spd(%struct.r8152* %0, i1 zeroext true) #13, !dbg !17791
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17792
  %call = call zeroext i8 @ocp_read_byte(%struct.r8152* %1, i16 zeroext 256, i16 zeroext -6065) #13, !dbg !17793
  %conv = zext i8 %call to i32, !dbg !17793
  store i32 %conv, i32* %ocp_data, align 4, !dbg !17794
  %2 = load i32, i32* %ocp_data, align 4, !dbg !17795
  %and = and i32 %2, -129, !dbg !17795
  store i32 %and, i32* %ocp_data, align 4, !dbg !17795
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17796
  %4 = load i32, i32* %ocp_data, align 4, !dbg !17797
  call void @ocp_write_byte(%struct.r8152* %3, i16 zeroext 256, i16 zeroext -6065, i32 %4) #13, !dbg !17798
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17799
  call void @rtl_disable(%struct.r8152* %5) #13, !dbg !17800
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17801
  call void @rtl_reset_bmu(%struct.r8152* %6) #13, !dbg !17802
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17803
  call void @wait_oob_link_list_ready(%struct.r8152* %7) #13, !dbg !17804
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17805
  %call1 = call zeroext i16 @ocp_read_word(%struct.r8152* %8, i16 zeroext 256, i16 zeroext -5922) #13, !dbg !17806
  %conv2 = zext i16 %call1 to i32, !dbg !17806
  store i32 %conv2, i32* %ocp_data, align 4, !dbg !17807
  %9 = load i32, i32* %ocp_data, align 4, !dbg !17808
  %or = or i32 %9, 32768, !dbg !17808
  store i32 %or, i32* %ocp_data, align 4, !dbg !17808
  %10 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17809
  %11 = load i32, i32* %ocp_data, align 4, !dbg !17810
  call void @ocp_write_word(%struct.r8152* %10, i16 zeroext 256, i16 zeroext -5922, i32 %11) #13, !dbg !17811
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17812
  call void @wait_oob_link_list_ready(%struct.r8152* %12) #13, !dbg !17813
  %13 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17814
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %13, i32 0, i32 4, !dbg !17815
  %14 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !17815
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 44, !dbg !17816
  %15 = load i32, i32* %mtu, align 8, !dbg !17816
  %add = add i32 %15, 18, !dbg !17817
  %add3 = add i32 %add, 4, !dbg !17818
  store i32 %add3, i32* %ocp_data, align 4, !dbg !17819
  %16 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17820
  %17 = load i32, i32* %ocp_data, align 4, !dbg !17821
  call void @ocp_write_word(%struct.r8152* %16, i16 zeroext 256, i16 zeroext -16362, i32 %17) #13, !dbg !17822
  %18 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17823
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %18, i32 0, i32 39, !dbg !17824
  %19 = load i8, i8* %version, align 8, !dbg !17824
  %conv4 = zext i8 %19 to i32, !dbg !17823
  switch i32 %conv4, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 8, label %sw.bb8
    i32 9, label %sw.bb8
  ], !dbg !17825

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  %20 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17826
  %call5 = call zeroext i16 @ocp_read_word(%struct.r8152* %20, i16 zeroext 256, i16 zeroext -16196) #13, !dbg !17828
  %conv6 = zext i16 %call5 to i32, !dbg !17828
  store i32 %conv6, i32* %ocp_data, align 4, !dbg !17829
  %21 = load i32, i32* %ocp_data, align 4, !dbg !17830
  %and7 = and i32 %21, -32513, !dbg !17830
  store i32 %and7, i32* %ocp_data, align 4, !dbg !17830
  %22 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17831
  %23 = load i32, i32* %ocp_data, align 4, !dbg !17832
  call void @ocp_write_word(%struct.r8152* %22, i16 zeroext 256, i16 zeroext -16196, i32 %23) #13, !dbg !17833
  br label %sw.epilog, !dbg !17834

sw.bb8:                                           ; preds = %entry, %entry
  %24 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17835
  call void @ocp_write_word(%struct.r8152* %24, i16 zeroext 256, i16 zeroext -16188, i32 255) #13, !dbg !17836
  br label %sw.epilog, !dbg !17837

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !17838

sw.epilog:                                        ; preds = %sw.default, %sw.bb8, %sw.bb
  %25 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17839
  call void @rtl_rx_vlan_en(%struct.r8152* %25, i1 zeroext true) #13, !dbg !17840
  %26 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17841
  %call9 = call zeroext i16 @ocp_read_word(%struct.r8152* %26, i16 zeroext 256, i16 zeroext -11872) #13, !dbg !17842
  %conv10 = zext i16 %call9 to i32, !dbg !17842
  store i32 %conv10, i32* %ocp_data, align 4, !dbg !17843
  %27 = load i32, i32* %ocp_data, align 4, !dbg !17844
  %or11 = or i32 %27, 1, !dbg !17844
  store i32 %or11, i32* %ocp_data, align 4, !dbg !17844
  %28 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17845
  %29 = load i32, i32* %ocp_data, align 4, !dbg !17846
  call void @ocp_write_word(%struct.r8152* %28, i16 zeroext 256, i16 zeroext -11872, i32 %29) #13, !dbg !17847
  %30 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17848
  %call12 = call zeroext i8 @ocp_read_byte(%struct.r8152* %30, i16 zeroext 256, i16 zeroext -6065) #13, !dbg !17849
  %conv13 = zext i8 %call12 to i32, !dbg !17849
  store i32 %conv13, i32* %ocp_data, align 4, !dbg !17850
  %31 = load i32, i32* %ocp_data, align 4, !dbg !17851
  %or14 = or i32 %31, 129, !dbg !17851
  store i32 %or14, i32* %ocp_data, align 4, !dbg !17851
  %32 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17852
  %33 = load i32, i32* %ocp_data, align 4, !dbg !17853
  call void @ocp_write_byte(%struct.r8152* %32, i16 zeroext 256, i16 zeroext -6065, i32 %33) #13, !dbg !17854
  %34 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17855
  call void @rxdy_gated_en(%struct.r8152* %34, i1 zeroext false) #13, !dbg !17856
  %35 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17857
  %call15 = call i32 @ocp_read_dword(%struct.r8152* %35, i16 zeroext 256, i16 zeroext -16368) #13, !dbg !17858
  store i32 %call15, i32* %ocp_data, align 4, !dbg !17859
  %36 = load i32, i32* %ocp_data, align 4, !dbg !17860
  %or16 = or i32 %36, 14, !dbg !17860
  store i32 %or16, i32* %ocp_data, align 4, !dbg !17860
  %37 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17861
  %38 = load i32, i32* %ocp_data, align 4, !dbg !17862
  call void @ocp_write_dword(%struct.r8152* %37, i16 zeroext 256, i16 zeroext -16368, i32 %38) #13, !dbg !17863
  ret void, !dbg !17864
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153b_u1u2en(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !17865 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17866, metadata !DIExpression()), !dbg !17867
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !17868, metadata !DIExpression()), !dbg !17869
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !17870, metadata !DIExpression()), !dbg !17871
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17872
  %call = call zeroext i16 @ocp_read_word(%struct.r8152* %0, i16 zeroext 0, i16 zeroext -12328) #13, !dbg !17873
  %conv = zext i16 %call to i32, !dbg !17873
  store i32 %conv, i32* %ocp_data, align 4, !dbg !17874
  %1 = load i8, i8* %enable.addr, align 1, !dbg !17875
  %tobool = trunc i8 %1 to i1, !dbg !17875
  br i1 %tobool, label %if.then, label %if.else, !dbg !17877

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ocp_data, align 4, !dbg !17878
  %conv1 = zext i32 %2 to i64, !dbg !17878
  %or = or i64 %conv1, 1, !dbg !17878
  %conv2 = trunc i64 %or to i32, !dbg !17878
  store i32 %conv2, i32* %ocp_data, align 4, !dbg !17878
  br label %if.end, !dbg !17879

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %ocp_data, align 4, !dbg !17880
  %conv3 = zext i32 %3 to i64, !dbg !17880
  %and = and i64 %conv3, -2, !dbg !17880
  %conv4 = trunc i64 %and to i32, !dbg !17880
  store i32 %conv4, i32* %ocp_data, align 4, !dbg !17880
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17881
  %5 = load i32, i32* %ocp_data, align 4, !dbg !17882
  call void @ocp_write_word(%struct.r8152* %4, i16 zeroext 0, i16 zeroext -12328, i32 %5) #13, !dbg !17883
  ret void, !dbg !17884
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153b_power_cut_en(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !17885 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17886, metadata !DIExpression()), !dbg !17887
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !17888, metadata !DIExpression()), !dbg !17889
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !17890, metadata !DIExpression()), !dbg !17891
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17892
  %call = call zeroext i16 @ocp_read_word(%struct.r8152* %0, i16 zeroext 0, i16 zeroext -10230) #13, !dbg !17893
  %conv = zext i16 %call to i32, !dbg !17893
  store i32 %conv, i32* %ocp_data, align 4, !dbg !17894
  %1 = load i8, i8* %enable.addr, align 1, !dbg !17895
  %tobool = trunc i8 %1 to i1, !dbg !17895
  br i1 %tobool, label %if.then, label %if.else, !dbg !17897

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ocp_data, align 4, !dbg !17898
  %or = or i32 %2, 9, !dbg !17898
  store i32 %or, i32* %ocp_data, align 4, !dbg !17898
  br label %if.end, !dbg !17899

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %ocp_data, align 4, !dbg !17900
  %and = and i32 %3, -2, !dbg !17900
  store i32 %and, i32* %ocp_data, align 4, !dbg !17900
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17901
  %5 = load i32, i32* %ocp_data, align 4, !dbg !17902
  call void @ocp_write_word(%struct.r8152* %4, i16 zeroext 0, i16 zeroext -10230, i32 %5) #13, !dbg !17903
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17904
  %call1 = call zeroext i16 @ocp_read_word(%struct.r8152* %6, i16 zeroext 0, i16 zeroext -10214) #13, !dbg !17905
  %conv2 = zext i16 %call1 to i32, !dbg !17905
  store i32 %conv2, i32* %ocp_data, align 4, !dbg !17906
  %7 = load i32, i32* %ocp_data, align 4, !dbg !17907
  %and3 = and i32 %7, -2, !dbg !17907
  store i32 %and3, i32* %ocp_data, align 4, !dbg !17907
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17908
  %9 = load i32, i32* %ocp_data, align 4, !dbg !17909
  call void @ocp_write_word(%struct.r8152* %8, i16 zeroext 0, i16 zeroext -10214, i32 %9) #13, !dbg !17910
  ret void, !dbg !17911
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153b_ups_en(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !17912 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  %ocp_data = alloca i32, align 4
  %data = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17913, metadata !DIExpression()), !dbg !17914
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !17915, metadata !DIExpression()), !dbg !17916
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !17917, metadata !DIExpression()), !dbg !17918
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17919
  %call = call zeroext i8 @ocp_read_byte(%struct.r8152* %0, i16 zeroext 0, i16 zeroext -10230) #13, !dbg !17920
  %conv = zext i8 %call to i32, !dbg !17920
  store i32 %conv, i32* %ocp_data, align 4, !dbg !17918
  %1 = load i8, i8* %enable.addr, align 1, !dbg !17921
  %tobool = trunc i8 %1 to i1, !dbg !17921
  br i1 %tobool, label %if.then, label %if.else, !dbg !17923

if.then:                                          ; preds = %entry
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17924
  call void @r8153b_ups_flags(%struct.r8152* %2) #13, !dbg !17926
  %3 = load i32, i32* %ocp_data, align 4, !dbg !17927
  %conv1 = zext i32 %3 to i64, !dbg !17927
  %or = or i64 %conv1, 56, !dbg !17927
  %conv2 = trunc i64 %or to i32, !dbg !17927
  store i32 %conv2, i32* %ocp_data, align 4, !dbg !17927
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17928
  %5 = load i32, i32* %ocp_data, align 4, !dbg !17929
  call void @ocp_write_byte(%struct.r8152* %4, i16 zeroext 0, i16 zeroext -10230, i32 %5) #13, !dbg !17930
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17931
  %call3 = call zeroext i8 @ocp_read_byte(%struct.r8152* %6, i16 zeroext 0, i16 zeroext -12289) #13, !dbg !17932
  %conv4 = zext i8 %call3 to i32, !dbg !17932
  store i32 %conv4, i32* %ocp_data, align 4, !dbg !17933
  %7 = load i32, i32* %ocp_data, align 4, !dbg !17934
  %conv5 = zext i32 %7 to i64, !dbg !17934
  %or6 = or i64 %conv5, 1, !dbg !17934
  %conv7 = trunc i64 %or6 to i32, !dbg !17934
  store i32 %conv7, i32* %ocp_data, align 4, !dbg !17934
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17935
  %9 = load i32, i32* %ocp_data, align 4, !dbg !17936
  call void @ocp_write_byte(%struct.r8152* %8, i16 zeroext 0, i16 zeroext -12289, i32 %9) #13, !dbg !17937
  br label %if.end38, !dbg !17938

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %data, metadata !17939, metadata !DIExpression()), !dbg !17941
  %10 = load i32, i32* %ocp_data, align 4, !dbg !17942
  %conv8 = zext i32 %10 to i64, !dbg !17942
  %and = and i64 %conv8, -49, !dbg !17942
  %conv9 = trunc i64 %and to i32, !dbg !17942
  store i32 %conv9, i32* %ocp_data, align 4, !dbg !17942
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17943
  %12 = load i32, i32* %ocp_data, align 4, !dbg !17944
  call void @ocp_write_byte(%struct.r8152* %11, i16 zeroext 0, i16 zeroext -10230, i32 %12) #13, !dbg !17945
  %13 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17946
  %call10 = call zeroext i8 @ocp_read_byte(%struct.r8152* %13, i16 zeroext 0, i16 zeroext -12289) #13, !dbg !17947
  %conv11 = zext i8 %call10 to i32, !dbg !17947
  store i32 %conv11, i32* %ocp_data, align 4, !dbg !17948
  %14 = load i32, i32* %ocp_data, align 4, !dbg !17949
  %conv12 = zext i32 %14 to i64, !dbg !17949
  %and13 = and i64 %conv12, -2, !dbg !17949
  %conv14 = trunc i64 %and13 to i32, !dbg !17949
  store i32 %conv14, i32* %ocp_data, align 4, !dbg !17949
  %15 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17950
  %16 = load i32, i32* %ocp_data, align 4, !dbg !17951
  call void @ocp_write_byte(%struct.r8152* %15, i16 zeroext 0, i16 zeroext -12289, i32 %16) #13, !dbg !17952
  %17 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17953
  %call15 = call zeroext i16 @ocp_read_word(%struct.r8152* %17, i16 zeroext 0, i16 zeroext -10214) #13, !dbg !17954
  %conv16 = zext i16 %call15 to i32, !dbg !17954
  store i32 %conv16, i32* %ocp_data, align 4, !dbg !17955
  %18 = load i32, i32* %ocp_data, align 4, !dbg !17956
  %and17 = and i32 %18, -2, !dbg !17956
  store i32 %and17, i32* %ocp_data, align 4, !dbg !17956
  %19 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17957
  %20 = load i32, i32* %ocp_data, align 4, !dbg !17958
  call void @ocp_write_word(%struct.r8152* %19, i16 zeroext 0, i16 zeroext -10214, i32 %20) #13, !dbg !17959
  %21 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17960
  %call18 = call zeroext i16 @r8153_phy_status(%struct.r8152* %21, i16 zeroext 0) #13, !dbg !17961
  store i16 %call18, i16* %data, align 2, !dbg !17962
  %22 = load i16, i16* %data, align 2, !dbg !17963
  %conv19 = zext i16 %22 to i32, !dbg !17963
  switch i32 %conv19, label %sw.default [
    i32 5, label %sw.bb
    i32 2, label %sw.bb
  ], !dbg !17964

sw.bb:                                            ; preds = %if.else, %if.else
  %23 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17965
  %24 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17967
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %24, i32 0, i32 0, !dbg !17968
  %call20 = call zeroext i1 @test_bit(i64 7, i64* %flags) #13, !dbg !17969
  call void @r8153b_green_en(%struct.r8152* %23, i1 zeroext %call20) #13, !dbg !17970
  %25 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17971
  %call21 = call i32 @r8152_mdio_read(%struct.r8152* %25, i32 0) #13, !dbg !17972
  %conv22 = trunc i32 %call21 to i16, !dbg !17972
  store i16 %conv22, i16* %data, align 2, !dbg !17973
  %26 = load i16, i16* %data, align 2, !dbg !17974
  %conv23 = zext i16 %26 to i32, !dbg !17974
  %and24 = and i32 %conv23, -2049, !dbg !17974
  %conv25 = trunc i32 %and24 to i16, !dbg !17974
  store i16 %conv25, i16* %data, align 2, !dbg !17974
  %27 = load i16, i16* %data, align 2, !dbg !17975
  %conv26 = zext i16 %27 to i32, !dbg !17975
  %or27 = or i32 %conv26, 32768, !dbg !17975
  %conv28 = trunc i32 %or27 to i16, !dbg !17975
  store i16 %conv28, i16* %data, align 2, !dbg !17975
  %28 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17976
  %29 = load i16, i16* %data, align 2, !dbg !17977
  %conv29 = zext i16 %29 to i32, !dbg !17977
  call void @r8152_mdio_write(%struct.r8152* %28, i32 0, i32 %conv29) #13, !dbg !17978
  %30 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17979
  %call30 = call zeroext i16 @r8153_phy_status(%struct.r8152* %30, i16 zeroext 3) #13, !dbg !17980
  store i16 %call30, i16* %data, align 2, !dbg !17981
  br label %sw.default, !dbg !17982

sw.default:                                       ; preds = %if.else, %sw.bb
  %31 = load i16, i16* %data, align 2, !dbg !17983
  %conv31 = zext i16 %31 to i32, !dbg !17983
  %cmp = icmp ne i32 %conv31, 3, !dbg !17985
  br i1 %cmp, label %if.then33, label %if.end37, !dbg !17986

if.then33:                                        ; preds = %sw.default
  br label %do.body, !dbg !17987

do.body:                                          ; preds = %if.then33
  %32 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17988
  %msg_enable = getelementptr inbounds %struct.r8152, %struct.r8152* %32, i32 0, i32 28, !dbg !17988
  %33 = load i32, i32* %msg_enable, align 8, !dbg !17988
  %and34 = and i32 %33, 4, !dbg !17988
  %tobool35 = icmp ne i32 %and34, 0, !dbg !17988
  br i1 %tobool35, label %if.then36, label %if.end, !dbg !17991

if.then36:                                        ; preds = %do.body
  %34 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17988
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %34, i32 0, i32 4, !dbg !17988
  %35 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !17988
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %35, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0)) #14, !dbg !17988
  br label %if.end, !dbg !17988

if.end:                                           ; preds = %if.then36, %do.body
  br label %do.end, !dbg !17991

do.end:                                           ; preds = %if.end
  br label %if.end37, !dbg !17991

if.end37:                                         ; preds = %do.end, %sw.default
  br label %sw.epilog, !dbg !17992

sw.epilog:                                        ; preds = %if.end37
  br label %if.end38

if.end38:                                         ; preds = %sw.epilog, %if.then
  ret void, !dbg !17993
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153b_ups_flags(%struct.r8152* %tp) #2 !dbg !17994 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ups_flags = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !17995, metadata !DIExpression()), !dbg !17996
  call void @llvm.dbg.declare(metadata i32* %ups_flags, metadata !17997, metadata !DIExpression()), !dbg !17998
  store i32 0, i32* %ups_flags, align 4, !dbg !17998
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !17999
  %ups_info = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 22, !dbg !18001
  %1 = bitcast %struct.ups_info* %ups_info to i32*, !dbg !18002
  %bf.load = load i32, i32* %1, align 8, !dbg !18002
  %bf.lshr = lshr i32 %bf.load, 15, !dbg !18002
  %bf.clear = and i32 %bf.lshr, 1, !dbg !18002
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !17999
  br i1 %tobool, label %if.then, label %if.end, !dbg !18003

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ups_flags, align 4, !dbg !18004
  %conv = zext i32 %2 to i64, !dbg !18004
  %or = or i64 %conv, 67108864, !dbg !18004
  %conv1 = trunc i64 %or to i32, !dbg !18004
  store i32 %conv1, i32* %ups_flags, align 4, !dbg !18004
  br label %if.end, !dbg !18005

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18006
  %ups_info2 = getelementptr inbounds %struct.r8152, %struct.r8152* %3, i32 0, i32 22, !dbg !18008
  %4 = bitcast %struct.ups_info* %ups_info2 to i32*, !dbg !18009
  %bf.load3 = load i32, i32* %4, align 8, !dbg !18009
  %bf.lshr4 = lshr i32 %bf.load3, 2, !dbg !18009
  %bf.clear5 = and i32 %bf.lshr4, 1, !dbg !18009
  %tobool6 = icmp ne i32 %bf.clear5, 0, !dbg !18006
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !18010

if.then7:                                         ; preds = %if.end
  %5 = load i32, i32* %ups_flags, align 4, !dbg !18011
  %conv8 = zext i32 %5 to i64, !dbg !18011
  %or9 = or i64 %conv8, 8, !dbg !18011
  %conv10 = trunc i64 %or9 to i32, !dbg !18011
  store i32 %conv10, i32* %ups_flags, align 4, !dbg !18011
  br label %if.end11, !dbg !18012

if.end11:                                         ; preds = %if.then7, %if.end
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18013
  %ups_info12 = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 22, !dbg !18015
  %7 = bitcast %struct.ups_info* %ups_info12 to i32*, !dbg !18016
  %bf.load13 = load i32, i32* %7, align 8, !dbg !18016
  %bf.lshr14 = lshr i32 %bf.load13, 9, !dbg !18016
  %bf.clear15 = and i32 %bf.lshr14, 1, !dbg !18016
  %tobool16 = icmp ne i32 %bf.clear15, 0, !dbg !18013
  br i1 %tobool16, label %if.then17, label %if.end21, !dbg !18017

if.then17:                                        ; preds = %if.end11
  %8 = load i32, i32* %ups_flags, align 4, !dbg !18018
  %conv18 = zext i32 %8 to i64, !dbg !18018
  %or19 = or i64 %conv18, 1048576, !dbg !18018
  %conv20 = trunc i64 %or19 to i32, !dbg !18018
  store i32 %conv20, i32* %ups_flags, align 4, !dbg !18018
  br label %if.end21, !dbg !18019

if.end21:                                         ; preds = %if.then17, %if.end11
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18020
  %ups_info22 = getelementptr inbounds %struct.r8152, %struct.r8152* %9, i32 0, i32 22, !dbg !18022
  %10 = bitcast %struct.ups_info* %ups_info22 to i32*, !dbg !18023
  %bf.load23 = load i32, i32* %10, align 8, !dbg !18023
  %bf.lshr24 = lshr i32 %bf.load23, 16, !dbg !18023
  %bf.clear25 = and i32 %bf.lshr24, 1, !dbg !18023
  %tobool26 = icmp ne i32 %bf.clear25, 0, !dbg !18020
  br i1 %tobool26, label %if.then27, label %if.end31, !dbg !18024

if.then27:                                        ; preds = %if.end21
  %11 = load i32, i32* %ups_flags, align 4, !dbg !18025
  %conv28 = zext i32 %11 to i64, !dbg !18025
  %or29 = or i64 %conv28, 134217728, !dbg !18025
  %conv30 = trunc i64 %or29 to i32, !dbg !18025
  store i32 %conv30, i32* %ups_flags, align 4, !dbg !18025
  br label %if.end31, !dbg !18026

if.end31:                                         ; preds = %if.then27, %if.end21
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18027
  %ups_info32 = getelementptr inbounds %struct.r8152, %struct.r8152* %12, i32 0, i32 22, !dbg !18029
  %13 = bitcast %struct.ups_info* %ups_info32 to i32*, !dbg !18030
  %bf.load33 = load i32, i32* %13, align 8, !dbg !18030
  %bf.lshr34 = lshr i32 %bf.load33, 11, !dbg !18030
  %bf.clear35 = and i32 %bf.lshr34, 1, !dbg !18030
  %tobool36 = icmp ne i32 %bf.clear35, 0, !dbg !18027
  br i1 %tobool36, label %if.then37, label %if.end41, !dbg !18031

if.then37:                                        ; preds = %if.end31
  %14 = load i32, i32* %ups_flags, align 4, !dbg !18032
  %conv38 = zext i32 %14 to i64, !dbg !18032
  %or39 = or i64 %conv38, 4194304, !dbg !18032
  %conv40 = trunc i64 %or39 to i32, !dbg !18032
  store i32 %conv40, i32* %ups_flags, align 4, !dbg !18032
  br label %if.end41, !dbg !18033

if.end41:                                         ; preds = %if.then37, %if.end31
  %15 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18034
  %ups_info42 = getelementptr inbounds %struct.r8152, %struct.r8152* %15, i32 0, i32 22, !dbg !18036
  %16 = bitcast %struct.ups_info* %ups_info42 to i32*, !dbg !18037
  %bf.load43 = load i32, i32* %16, align 8, !dbg !18037
  %bf.lshr44 = lshr i32 %bf.load43, 14, !dbg !18037
  %bf.clear45 = and i32 %bf.lshr44, 1, !dbg !18037
  %tobool46 = icmp ne i32 %bf.clear45, 0, !dbg !18034
  br i1 %tobool46, label %if.then47, label %if.end51, !dbg !18038

if.then47:                                        ; preds = %if.end41
  %17 = load i32, i32* %ups_flags, align 4, !dbg !18039
  %conv48 = zext i32 %17 to i64, !dbg !18039
  %or49 = or i64 %conv48, 33554432, !dbg !18039
  %conv50 = trunc i64 %or49 to i32, !dbg !18039
  store i32 %conv50, i32* %ups_flags, align 4, !dbg !18039
  br label %if.end51, !dbg !18040

if.end51:                                         ; preds = %if.then47, %if.end41
  %18 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18041
  %ups_info52 = getelementptr inbounds %struct.r8152, %struct.r8152* %18, i32 0, i32 22, !dbg !18043
  %19 = bitcast %struct.ups_info* %ups_info52 to i32*, !dbg !18044
  %bf.load53 = load i32, i32* %19, align 8, !dbg !18044
  %bf.clear54 = and i32 %bf.load53, 1, !dbg !18044
  %tobool55 = icmp ne i32 %bf.clear54, 0, !dbg !18041
  br i1 %tobool55, label %if.then56, label %if.end60, !dbg !18045

if.then56:                                        ; preds = %if.end51
  %20 = load i32, i32* %ups_flags, align 4, !dbg !18046
  %conv57 = zext i32 %20 to i64, !dbg !18046
  %or58 = or i64 %conv57, 2, !dbg !18046
  %conv59 = trunc i64 %or58 to i32, !dbg !18046
  store i32 %conv59, i32* %ups_flags, align 4, !dbg !18046
  br label %if.end60, !dbg !18047

if.end60:                                         ; preds = %if.then56, %if.end51
  %21 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18048
  %ups_info61 = getelementptr inbounds %struct.r8152, %struct.r8152* %21, i32 0, i32 22, !dbg !18050
  %22 = bitcast %struct.ups_info* %ups_info61 to i32*, !dbg !18051
  %bf.load62 = load i32, i32* %22, align 8, !dbg !18051
  %bf.lshr63 = lshr i32 %bf.load62, 12, !dbg !18051
  %bf.clear64 = and i32 %bf.lshr63, 1, !dbg !18051
  %tobool65 = icmp ne i32 %bf.clear64, 0, !dbg !18048
  br i1 %tobool65, label %if.then66, label %if.end70, !dbg !18052

if.then66:                                        ; preds = %if.end60
  %23 = load i32, i32* %ups_flags, align 4, !dbg !18053
  %conv67 = zext i32 %23 to i64, !dbg !18053
  %or68 = or i64 %conv67, 8388608, !dbg !18053
  %conv69 = trunc i64 %or68 to i32, !dbg !18053
  store i32 %conv69, i32* %ups_flags, align 4, !dbg !18053
  br label %if.end70, !dbg !18054

if.end70:                                         ; preds = %if.then66, %if.end60
  %24 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18055
  %ups_info71 = getelementptr inbounds %struct.r8152, %struct.r8152* %24, i32 0, i32 22, !dbg !18057
  %25 = bitcast %struct.ups_info* %ups_info71 to i32*, !dbg !18058
  %bf.load72 = load i32, i32* %25, align 8, !dbg !18058
  %bf.lshr73 = lshr i32 %bf.load72, 13, !dbg !18058
  %bf.clear74 = and i32 %bf.lshr73, 1, !dbg !18058
  %tobool75 = icmp ne i32 %bf.clear74, 0, !dbg !18055
  br i1 %tobool75, label %if.then76, label %if.end80, !dbg !18059

if.then76:                                        ; preds = %if.end70
  %26 = load i32, i32* %ups_flags, align 4, !dbg !18060
  %conv77 = zext i32 %26 to i64, !dbg !18060
  %or78 = or i64 %conv77, 16777216, !dbg !18060
  %conv79 = trunc i64 %or78 to i32, !dbg !18060
  store i32 %conv79, i32* %ups_flags, align 4, !dbg !18060
  br label %if.end80, !dbg !18061

if.end80:                                         ; preds = %if.then76, %if.end70
  %27 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18062
  %ups_info81 = getelementptr inbounds %struct.r8152, %struct.r8152* %27, i32 0, i32 22, !dbg !18064
  %28 = bitcast %struct.ups_info* %ups_info81 to i32*, !dbg !18065
  %bf.load82 = load i32, i32* %28, align 8, !dbg !18065
  %bf.lshr83 = lshr i32 %bf.load82, 1, !dbg !18065
  %bf.clear84 = and i32 %bf.lshr83, 1, !dbg !18065
  %tobool85 = icmp ne i32 %bf.clear84, 0, !dbg !18062
  br i1 %tobool85, label %if.then86, label %if.end90, !dbg !18066

if.then86:                                        ; preds = %if.end80
  %29 = load i32, i32* %ups_flags, align 4, !dbg !18067
  %conv87 = zext i32 %29 to i64, !dbg !18067
  %or88 = or i64 %conv87, 4, !dbg !18067
  %conv89 = trunc i64 %or88 to i32, !dbg !18067
  store i32 %conv89, i32* %ups_flags, align 4, !dbg !18067
  br label %if.end90, !dbg !18068

if.end90:                                         ; preds = %if.then86, %if.end80
  %30 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18069
  %ups_info91 = getelementptr inbounds %struct.r8152, %struct.r8152* %30, i32 0, i32 22, !dbg !18071
  %31 = bitcast %struct.ups_info* %ups_info91 to i32*, !dbg !18072
  %bf.load92 = load i32, i32* %31, align 8, !dbg !18072
  %bf.lshr93 = lshr i32 %bf.load92, 17, !dbg !18072
  %bf.clear94 = and i32 %bf.lshr93, 1, !dbg !18072
  %tobool95 = icmp ne i32 %bf.clear94, 0, !dbg !18069
  br i1 %tobool95, label %if.then96, label %if.end100, !dbg !18073

if.then96:                                        ; preds = %if.end90
  %32 = load i32, i32* %ups_flags, align 4, !dbg !18074
  %conv97 = zext i32 %32 to i64, !dbg !18074
  %or98 = or i64 %conv97, 16, !dbg !18074
  %conv99 = trunc i64 %or98 to i32, !dbg !18074
  store i32 %conv99, i32* %ups_flags, align 4, !dbg !18074
  br label %if.end100, !dbg !18075

if.end100:                                        ; preds = %if.then96, %if.end90
  %33 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18076
  %ups_info101 = getelementptr inbounds %struct.r8152, %struct.r8152* %33, i32 0, i32 22, !dbg !18077
  %34 = bitcast %struct.ups_info* %ups_info101 to i32*, !dbg !18078
  %bf.load102 = load i32, i32* %34, align 8, !dbg !18078
  %bf.lshr103 = lshr i32 %bf.load102, 5, !dbg !18078
  %bf.clear104 = and i32 %bf.lshr103, 15, !dbg !18078
  switch i32 %bf.clear104, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb106
    i32 2, label %sw.bb108
    i32 3, label %sw.bb110
    i32 4, label %sw.bb112
    i32 5, label %sw.bb114
    i32 6, label %sw.bb116
    i32 7, label %sw.bb118
    i32 8, label %sw.bb120
  ], !dbg !18079

sw.bb:                                            ; preds = %if.end100
  %35 = load i32, i32* %ups_flags, align 4, !dbg !18080
  %or105 = or i32 %35, 65536, !dbg !18080
  store i32 %or105, i32* %ups_flags, align 4, !dbg !18080
  br label %sw.epilog, !dbg !18082

sw.bb106:                                         ; preds = %if.end100
  %36 = load i32, i32* %ups_flags, align 4, !dbg !18083
  %or107 = or i32 %36, 131072, !dbg !18083
  store i32 %or107, i32* %ups_flags, align 4, !dbg !18083
  br label %sw.epilog, !dbg !18084

sw.bb108:                                         ; preds = %if.end100
  %37 = load i32, i32* %ups_flags, align 4, !dbg !18085
  %or109 = or i32 %37, 196608, !dbg !18085
  store i32 %or109, i32* %ups_flags, align 4, !dbg !18085
  br label %sw.epilog, !dbg !18086

sw.bb110:                                         ; preds = %if.end100
  %38 = load i32, i32* %ups_flags, align 4, !dbg !18087
  %or111 = or i32 %38, 262144, !dbg !18087
  store i32 %or111, i32* %ups_flags, align 4, !dbg !18087
  br label %sw.epilog, !dbg !18088

sw.bb112:                                         ; preds = %if.end100
  %39 = load i32, i32* %ups_flags, align 4, !dbg !18089
  %or113 = or i32 %39, 327680, !dbg !18089
  store i32 %or113, i32* %ups_flags, align 4, !dbg !18089
  br label %sw.epilog, !dbg !18090

sw.bb114:                                         ; preds = %if.end100
  %40 = load i32, i32* %ups_flags, align 4, !dbg !18091
  %or115 = or i32 %40, 393216, !dbg !18091
  store i32 %or115, i32* %ups_flags, align 4, !dbg !18091
  br label %sw.epilog, !dbg !18092

sw.bb116:                                         ; preds = %if.end100
  %41 = load i32, i32* %ups_flags, align 4, !dbg !18093
  %or117 = or i32 %41, 458752, !dbg !18093
  store i32 %or117, i32* %ups_flags, align 4, !dbg !18093
  br label %sw.epilog, !dbg !18094

sw.bb118:                                         ; preds = %if.end100
  %42 = load i32, i32* %ups_flags, align 4, !dbg !18095
  %or119 = or i32 %42, 524288, !dbg !18095
  store i32 %or119, i32* %ups_flags, align 4, !dbg !18095
  br label %sw.epilog, !dbg !18096

sw.bb120:                                         ; preds = %if.end100
  %43 = load i32, i32* %ups_flags, align 4, !dbg !18097
  %or121 = or i32 %43, 589824, !dbg !18097
  store i32 %or121, i32* %ups_flags, align 4, !dbg !18097
  br label %sw.epilog, !dbg !18098

sw.default:                                       ; preds = %if.end100
  br label %sw.epilog, !dbg !18099

sw.epilog:                                        ; preds = %sw.default, %sw.bb120, %sw.bb118, %sw.bb116, %sw.bb114, %sw.bb112, %sw.bb110, %sw.bb108, %sw.bb106, %sw.bb
  %44 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18100
  %45 = load i32, i32* %ups_flags, align 4, !dbg !18101
  call void @ocp_write_dword(%struct.r8152* %44, i16 zeroext 0, i16 zeroext -10168, i32 %45) #13, !dbg !18102
  ret void, !dbg !18103
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8153b_green_en(%struct.r8152* %tp, i1 zeroext %enable) #2 !dbg !18104 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %enable.addr = alloca i8, align 1
  %data = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !18105, metadata !DIExpression()), !dbg !18106
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !18107, metadata !DIExpression()), !dbg !18108
  call void @llvm.dbg.declare(metadata i16* %data, metadata !18109, metadata !DIExpression()), !dbg !18110
  %0 = load i8, i8* %enable.addr, align 1, !dbg !18111
  %tobool = trunc i8 %0 to i1, !dbg !18111
  br i1 %tobool, label %if.then, label %if.else, !dbg !18113

if.then:                                          ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18114
  call void @sram_write(%struct.r8152* %1, i16 zeroext -32699, i16 zeroext 0) #13, !dbg !18116
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18117
  call void @sram_write(%struct.r8152* %2, i16 zeroext -32691, i16 zeroext 4642) #13, !dbg !18118
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18119
  call void @sram_write(%struct.r8152* %3, i16 zeroext -32675, i16 zeroext 34) #13, !dbg !18120
  br label %if.end, !dbg !18121

if.else:                                          ; preds = %entry
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18122
  call void @sram_write(%struct.r8152* %4, i16 zeroext -32699, i16 zeroext 9284) #13, !dbg !18124
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18125
  call void @sram_write(%struct.r8152* %5, i16 zeroext -32691, i16 zeroext 9284) #13, !dbg !18126
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18127
  call void @sram_write(%struct.r8152* %6, i16 zeroext -32675, i16 zeroext 9284) #13, !dbg !18128
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18129
  %call = call zeroext i16 @sram_read(%struct.r8152* %7, i16 zeroext -32751) #13, !dbg !18130
  store i16 %call, i16* %data, align 2, !dbg !18131
  %8 = load i16, i16* %data, align 2, !dbg !18132
  %conv = zext i16 %8 to i64, !dbg !18132
  %or = or i64 %conv, 32768, !dbg !18132
  %conv1 = trunc i64 %or to i16, !dbg !18132
  store i16 %conv1, i16* %data, align 2, !dbg !18132
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18133
  %10 = load i16, i16* %data, align 2, !dbg !18134
  call void @sram_write(%struct.r8152* %9, i16 zeroext -32751, i16 zeroext %10) #13, !dbg !18135
  %11 = load i8, i8* %enable.addr, align 1, !dbg !18136
  %tobool2 = trunc i8 %11 to i1, !dbg !18136
  %conv3 = zext i1 %tobool2 to i32, !dbg !18136
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18137
  %ups_info = getelementptr inbounds %struct.r8152, %struct.r8152* %12, i32 0, i32 22, !dbg !18138
  %13 = bitcast %struct.ups_info* %ups_info to i32*, !dbg !18139
  %bf.load = load i32, i32* %13, align 8, !dbg !18140
  %bf.value = and i32 %conv3, 1, !dbg !18140
  %bf.shl = shl i32 %bf.value, 15, !dbg !18140
  %bf.clear = and i32 %bf.load, -32769, !dbg !18140
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !18140
  store i32 %bf.set, i32* %13, align 8, !dbg !18140
  ret void, !dbg !18141
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_warn(%struct.net_device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @sram_read(%struct.r8152* %tp, i16 zeroext %addr) #2 !dbg !18142 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %addr.addr = alloca i16, align 2
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !18143, metadata !DIExpression()), !dbg !18144
  store i16 %addr, i16* %addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %addr.addr, metadata !18145, metadata !DIExpression()), !dbg !18146
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18147
  %1 = load i16, i16* %addr.addr, align 2, !dbg !18148
  call void @ocp_reg_write(%struct.r8152* %0, i16 zeroext -23498, i16 zeroext %1) #13, !dbg !18149
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18150
  %call = call zeroext i16 @ocp_reg_read(%struct.r8152* %2, i16 zeroext -23496) #13, !dbg !18151
  ret i16 %call, !dbg !18152
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @r8152_efuse_read(%struct.r8152* %tp, i8 zeroext %addr) #2 !dbg !18153 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %addr.addr = alloca i8, align 1
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !18156, metadata !DIExpression()), !dbg !18157
  store i8 %addr, i8* %addr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %addr.addr, metadata !18158, metadata !DIExpression()), !dbg !18159
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !18160, metadata !DIExpression()), !dbg !18161
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18162
  %1 = load i8, i8* %addr.addr, align 1, !dbg !18163
  %conv = zext i8 %1 to i64, !dbg !18163
  %or = or i64 32768, %conv, !dbg !18164
  %conv1 = trunc i64 %or to i32, !dbg !18165
  call void @ocp_write_word(%struct.r8152* %0, i16 zeroext 256, i16 zeroext -8958, i32 %conv1) #13, !dbg !18166
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18167
  %call = call zeroext i16 @ocp_read_word(%struct.r8152* %2, i16 zeroext 256, i16 zeroext -8958) #13, !dbg !18168
  %conv2 = zext i16 %call to i32, !dbg !18168
  store i32 %conv2, i32* %ocp_data, align 4, !dbg !18169
  %3 = load i32, i32* %ocp_data, align 4, !dbg !18170
  %conv3 = zext i32 %3 to i64, !dbg !18170
  %and = and i64 %conv3, 128, !dbg !18171
  %shl = shl i64 %and, 9, !dbg !18172
  %conv4 = trunc i64 %shl to i32, !dbg !18173
  store i32 %conv4, i32* %ocp_data, align 4, !dbg !18174
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18175
  %call5 = call zeroext i16 @ocp_read_word(%struct.r8152* %4, i16 zeroext 256, i16 zeroext -8960) #13, !dbg !18176
  %conv6 = zext i16 %call5 to i32, !dbg !18176
  %5 = load i32, i32* %ocp_data, align 4, !dbg !18177
  %or7 = or i32 %5, %conv6, !dbg !18177
  store i32 %or7, i32* %ocp_data, align 4, !dbg !18177
  %6 = load i32, i32* %ocp_data, align 4, !dbg !18178
  ret i32 %6, !dbg !18179
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @r8153_pre_firmware_1(%struct.r8152* %tp) #2 !dbg !18180 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %i = alloca i32, align 4
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !18181, metadata !DIExpression()), !dbg !18182
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18183, metadata !DIExpression()), !dbg !18184
  store i32 0, i32* %i, align 4, !dbg !18185
  br label %for.cond, !dbg !18187

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !18188
  %cmp = icmp slt i32 %0, 104, !dbg !18190
  br i1 %cmp, label %for.body, label %for.end, !dbg !18191

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !18192, metadata !DIExpression()), !dbg !18194
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18195
  %call = call zeroext i8 @ocp_read_byte(%struct.r8152* %1, i16 zeroext 0, i16 zeroext -7164) #13, !dbg !18196
  %conv = zext i8 %call to i32, !dbg !18196
  store i32 %conv, i32* %ocp_data, align 4, !dbg !18194
  %2 = load i32, i32* %ocp_data, align 4, !dbg !18197
  %conv1 = zext i32 %2 to i64, !dbg !18197
  %and = and i64 %conv1, 1, !dbg !18199
  %tobool = icmp ne i64 %and, 0, !dbg !18199
  br i1 %tobool, label %if.end, label %if.then, !dbg !18200

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !18201

if.end:                                           ; preds = %for.body
  call void @usleep_range(i64 1000, i64 2000) #13, !dbg !18202
  br label %for.inc, !dbg !18203

for.inc:                                          ; preds = %if.end
  %3 = load i32, i32* %i, align 4, !dbg !18204
  %inc = add i32 %3, 1, !dbg !18204
  store i32 %inc, i32* %i, align 4, !dbg !18204
  br label %for.cond, !dbg !18205, !llvm.loop !18206

for.end:                                          ; preds = %if.then, %for.cond
  ret i32 0, !dbg !18208
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @r8153_post_firmware_1(%struct.r8152* %tp) #2 !dbg !18209 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !18210, metadata !DIExpression()), !dbg !18211
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18212
  %call = call zeroext i8 @ocp_read_byte(%struct.r8152* %0, i16 zeroext 0, i16 zeroext -12305) #13, !dbg !18214
  %conv = zext i8 %call to i64, !dbg !18214
  %and = and i64 %conv, 1, !dbg !18215
  %tobool = icmp ne i64 %and, 0, !dbg !18215
  br i1 %tobool, label %if.then, label %if.end, !dbg !18216

if.then:                                          ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18217
  call void @ocp_write_word(%struct.r8152* %1, i16 zeroext 0, i16 zeroext -976, i32 5496) #13, !dbg !18218
  br label %if.end, !dbg !18218

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18219
  call void @ocp_write_word(%struct.r8152* %2, i16 zeroext 256, i16 zeroext -11384, i32 2250) #13, !dbg !18220
  ret i32 0, !dbg !18221
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @r8153_pre_firmware_2(%struct.r8152* %tp) #2 !dbg !18222 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !18223, metadata !DIExpression()), !dbg !18224
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !18225, metadata !DIExpression()), !dbg !18226
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18227
  %call = call i32 @r8153_pre_firmware_1(%struct.r8152* %0) #13, !dbg !18228
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18229
  %call1 = call zeroext i16 @ocp_read_word(%struct.r8152* %1, i16 zeroext 0, i16 zeroext -12342) #13, !dbg !18230
  %conv = zext i16 %call1 to i32, !dbg !18230
  store i32 %conv, i32* %ocp_data, align 4, !dbg !18231
  %2 = load i32, i32* %ocp_data, align 4, !dbg !18232
  %conv2 = zext i32 %2 to i64, !dbg !18232
  %and = and i64 %conv2, -16385, !dbg !18232
  %conv3 = trunc i64 %and to i32, !dbg !18232
  store i32 %conv3, i32* %ocp_data, align 4, !dbg !18232
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18233
  %4 = load i32, i32* %ocp_data, align 4, !dbg !18234
  call void @ocp_write_word(%struct.r8152* %3, i16 zeroext 0, i16 zeroext -12342, i32 %4) #13, !dbg !18235
  ret i32 0, !dbg !18236
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @r8153_post_firmware_2(%struct.r8152* %tp) #2 !dbg !18237 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !18238, metadata !DIExpression()), !dbg !18239
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !18240, metadata !DIExpression()), !dbg !18241
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18242
  %call = call zeroext i8 @ocp_read_byte(%struct.r8152* %0, i16 zeroext 0, i16 zeroext -12305) #13, !dbg !18244
  %conv = zext i8 %call to i64, !dbg !18244
  %and = and i64 %conv, 1, !dbg !18245
  %tobool = icmp ne i64 %and, 0, !dbg !18245
  br i1 %tobool, label %if.then, label %if.end, !dbg !18246

if.then:                                          ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18247
  %call1 = call zeroext i16 @ocp_read_word(%struct.r8152* %1, i16 zeroext 256, i16 zeroext -968) #13, !dbg !18249
  %conv2 = zext i16 %call1 to i32, !dbg !18249
  store i32 %conv2, i32* %ocp_data, align 4, !dbg !18250
  %2 = load i32, i32* %ocp_data, align 4, !dbg !18251
  %conv3 = zext i32 %2 to i64, !dbg !18251
  %or = or i64 %conv3, 1, !dbg !18251
  %conv4 = trunc i64 %or to i32, !dbg !18251
  store i32 %conv4, i32* %ocp_data, align 4, !dbg !18251
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18252
  %4 = load i32, i32* %ocp_data, align 4, !dbg !18253
  call void @ocp_write_word(%struct.r8152* %3, i16 zeroext 256, i16 zeroext -968, i32 %4) #13, !dbg !18254
  br label %if.end, !dbg !18255

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18256
  call void @ocp_write_word(%struct.r8152* %5, i16 zeroext 256, i16 zeroext -11384, i32 2250) #13, !dbg !18257
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18258
  call void @ocp_write_word(%struct.r8152* %6, i16 zeroext 256, i16 zeroext -11368, i32 132) #13, !dbg !18259
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18260
  %call5 = call zeroext i16 @ocp_read_word(%struct.r8152* %7, i16 zeroext 0, i16 zeroext -12342) #13, !dbg !18261
  %conv6 = zext i16 %call5 to i32, !dbg !18261
  store i32 %conv6, i32* %ocp_data, align 4, !dbg !18262
  %8 = load i32, i32* %ocp_data, align 4, !dbg !18263
  %conv7 = zext i32 %8 to i64, !dbg !18263
  %or8 = or i64 %conv7, 16384, !dbg !18263
  %conv9 = trunc i64 %or8 to i32, !dbg !18263
  store i32 %conv9, i32* %ocp_data, align 4, !dbg !18263
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18264
  %10 = load i32, i32* %ocp_data, align 4, !dbg !18265
  call void @ocp_write_word(%struct.r8152* %9, i16 zeroext 0, i16 zeroext -12342, i32 %10) #13, !dbg !18266
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18267
  %call10 = call zeroext i8 @ocp_read_byte(%struct.r8152* %11, i16 zeroext 0, i16 zeroext -19426) #13, !dbg !18268
  %conv11 = zext i8 %call10 to i32, !dbg !18268
  store i32 %conv11, i32* %ocp_data, align 4, !dbg !18269
  %12 = load i32, i32* %ocp_data, align 4, !dbg !18270
  %or12 = or i32 %12, 3, !dbg !18270
  store i32 %or12, i32* %ocp_data, align 4, !dbg !18270
  %13 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18271
  %14 = load i32, i32* %ocp_data, align 4, !dbg !18272
  call void @ocp_write_byte(%struct.r8152* %13, i16 zeroext 0, i16 zeroext -19426, i32 %14) #13, !dbg !18273
  ret i32 0, !dbg !18274
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @r8153_post_firmware_3(%struct.r8152* %tp) #2 !dbg !18275 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !18276, metadata !DIExpression()), !dbg !18277
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !18278, metadata !DIExpression()), !dbg !18279
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18280
  %call = call zeroext i8 @ocp_read_byte(%struct.r8152* %0, i16 zeroext 0, i16 zeroext -19426) #13, !dbg !18281
  %conv = zext i8 %call to i32, !dbg !18281
  store i32 %conv, i32* %ocp_data, align 4, !dbg !18282
  %1 = load i32, i32* %ocp_data, align 4, !dbg !18283
  %or = or i32 %1, 3, !dbg !18283
  store i32 %or, i32* %ocp_data, align 4, !dbg !18283
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18284
  %3 = load i32, i32* %ocp_data, align 4, !dbg !18285
  call void @ocp_write_byte(%struct.r8152* %2, i16 zeroext 0, i16 zeroext -19426, i32 %3) #13, !dbg !18286
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18287
  %call1 = call zeroext i16 @ocp_read_word(%struct.r8152* %4, i16 zeroext 0, i16 zeroext -12340) #13, !dbg !18288
  %conv2 = zext i16 %call1 to i32, !dbg !18288
  store i32 %conv2, i32* %ocp_data, align 4, !dbg !18289
  %5 = load i32, i32* %ocp_data, align 4, !dbg !18290
  %conv3 = zext i32 %5 to i64, !dbg !18290
  %or4 = or i64 %conv3, 512, !dbg !18290
  %conv5 = trunc i64 %or4 to i32, !dbg !18290
  store i32 %conv5, i32* %ocp_data, align 4, !dbg !18290
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18291
  %7 = load i32, i32* %ocp_data, align 4, !dbg !18292
  call void @ocp_write_word(%struct.r8152* %6, i16 zeroext 0, i16 zeroext -12340, i32 %7) #13, !dbg !18293
  ret i32 0, !dbg !18294
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @r8153b_pre_firmware_1(%struct.r8152* %tp) #2 !dbg !18295 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !18296, metadata !DIExpression()), !dbg !18297
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18298
  call void @ocp_write_word(%struct.r8152* %0, i16 zeroext 0, i16 zeroext -11456, i32 32893) #13, !dbg !18299
  ret i32 0, !dbg !18300
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @r8153b_post_firmware_1(%struct.r8152* %tp) #2 !dbg !18301 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %ocp_data = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !18302, metadata !DIExpression()), !dbg !18303
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !18304, metadata !DIExpression()), !dbg !18305
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18306
  %call = call zeroext i8 @ocp_read_byte(%struct.r8152* %0, i16 zeroext 0, i16 zeroext -10209) #13, !dbg !18307
  %conv = zext i8 %call to i32, !dbg !18307
  store i32 %conv, i32* %ocp_data, align 4, !dbg !18308
  %1 = load i32, i32* %ocp_data, align 4, !dbg !18309
  %and = and i32 %1, 4, !dbg !18311
  %tobool = icmp ne i32 %and, 0, !dbg !18311
  br i1 %tobool, label %if.then, label %if.end, !dbg !18312

if.then:                                          ; preds = %entry
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18313
  %call1 = call zeroext i16 @ocp_read_word(%struct.r8152* %2, i16 zeroext 256, i16 zeroext -968) #13, !dbg !18315
  %conv2 = zext i16 %call1 to i32, !dbg !18315
  store i32 %conv2, i32* %ocp_data, align 4, !dbg !18316
  %3 = load i32, i32* %ocp_data, align 4, !dbg !18317
  %conv3 = zext i32 %3 to i64, !dbg !18317
  %or = or i64 %conv3, 1, !dbg !18317
  %conv4 = trunc i64 %or to i32, !dbg !18317
  store i32 %conv4, i32* %ocp_data, align 4, !dbg !18317
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18318
  %5 = load i32, i32* %ocp_data, align 4, !dbg !18319
  call void @ocp_write_word(%struct.r8152* %4, i16 zeroext 256, i16 zeroext -968, i32 %5) #13, !dbg !18320
  br label %if.end, !dbg !18321

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18322
  %call5 = call zeroext i16 @ocp_read_word(%struct.r8152* %6, i16 zeroext 0, i16 zeroext -11468) #13, !dbg !18323
  %conv6 = zext i16 %call5 to i32, !dbg !18323
  store i32 %conv6, i32* %ocp_data, align 4, !dbg !18324
  %7 = load i32, i32* %ocp_data, align 4, !dbg !18325
  %conv7 = zext i32 %7 to i64, !dbg !18325
  %or8 = or i64 %conv7, 2, !dbg !18325
  %conv9 = trunc i64 %or8 to i32, !dbg !18325
  store i32 %conv9, i32* %ocp_data, align 4, !dbg !18325
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18326
  %9 = load i32, i32* %ocp_data, align 4, !dbg !18327
  call void @ocp_write_word(%struct.r8152* %8, i16 zeroext 0, i16 zeroext -11468, i32 %9) #13, !dbg !18328
  %10 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18329
  %call10 = call zeroext i16 @ocp_read_word(%struct.r8152* %10, i16 zeroext 0, i16 zeroext -11032) #13, !dbg !18330
  %conv11 = zext i16 %call10 to i32, !dbg !18330
  store i32 %conv11, i32* %ocp_data, align 4, !dbg !18331
  %11 = load i32, i32* %ocp_data, align 4, !dbg !18332
  %conv12 = zext i32 %11 to i64, !dbg !18332
  %or13 = or i64 %conv12, 2, !dbg !18332
  %conv14 = trunc i64 %or13 to i32, !dbg !18332
  store i32 %conv14, i32* %ocp_data, align 4, !dbg !18332
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18333
  %13 = load i32, i32* %ocp_data, align 4, !dbg !18334
  call void @ocp_write_word(%struct.r8152* %12, i16 zeroext 0, i16 zeroext -11032, i32 %13) #13, !dbg !18335
  %14 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18336
  %call15 = call zeroext i16 @ocp_read_word(%struct.r8152* %14, i16 zeroext 0, i16 zeroext -12340) #13, !dbg !18337
  %conv16 = zext i16 %call15 to i32, !dbg !18337
  store i32 %conv16, i32* %ocp_data, align 4, !dbg !18338
  %15 = load i32, i32* %ocp_data, align 4, !dbg !18339
  %conv17 = zext i32 %15 to i64, !dbg !18339
  %or18 = or i64 %conv17, 512, !dbg !18339
  %conv19 = trunc i64 %or18 to i32, !dbg !18339
  store i32 %conv19, i32* %ocp_data, align 4, !dbg !18339
  %16 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18340
  %17 = load i32, i32* %ocp_data, align 4, !dbg !18341
  call void @ocp_write_word(%struct.r8152* %16, i16 zeroext 0, i16 zeroext -12340, i32 %17) #13, !dbg !18342
  ret i32 0, !dbg !18343
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_running(%struct.net_device* %dev) #2 !dbg !18344 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18347, metadata !DIExpression()), !dbg !18348
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18349
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !18350
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #13, !dbg !18351
  ret i1 %call, !dbg !18352
}

; Function Attrs: noredzone
declare dso_local i32 @usb_autopm_get_interface(%struct.usb_interface*) #1

; Function Attrs: noredzone
declare dso_local i32 @mutex_trylock(%struct.mutex*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @schedule_delayed_work(%struct.delayed_work* %dwork, i64 %delay) #2 !dbg !18353 {
entry:
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !18356, metadata !DIExpression()), !dbg !18357
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !18358, metadata !DIExpression()), !dbg !18359
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !18360
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !18361
  %2 = load i64, i64* %delay.addr, align 8, !dbg !18362
  %call = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #13, !dbg !18363
  ret i1 %call, !dbg !18364
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_clear_bit(i64 %nr, i64* %addr) #2 !dbg !18365 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !18368, metadata !DIExpression()), !dbg !18370
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !18372, metadata !DIExpression()), !dbg !18373
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !18374, metadata !DIExpression()), !dbg !18376
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !15953, metadata !DIExpression()), !dbg !18377
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !15957, metadata !DIExpression()), !dbg !18379
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !18380, metadata !DIExpression()), !dbg !18381
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !18382, metadata !DIExpression()), !dbg !18383
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !18384
  %1 = load i64, i64* %nr.addr, align 8, !dbg !18385
  %div = sdiv i64 %1, 64, !dbg !18385
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !18386
  %2 = bitcast i64* %add.ptr to i8*, !dbg !18384
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !18387
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !18388
  %conv.i = trunc i64 %4 to i32, !dbg !18388
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #16, !dbg !18389
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !18390
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !18390
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #16, !dbg !18390
  %7 = load i64, i64* %nr.addr, align 8, !dbg !18391
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !18392
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !18376
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !18376
  %11 = call i8 asm sideeffect " btrq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #11, !dbg !18376, !srcloc !18393
  store i8 %11, i8* %c.i, align 1, !dbg !18376
  %12 = load i8, i8* %c.i, align 1, !dbg !18376
  %tobool.i = trunc i8 %12 to i1, !dbg !18376
  %frombool.i = zext i1 %tobool.i to i8, !dbg !18376
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !18376
  %13 = load i8, i8* %tmp.i, align 1, !dbg !18376
  %tobool1.i = trunc i8 %13 to i1, !dbg !18376
  ret i1 %tobool1.i, !dbg !18394
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_carrier(%struct.r8152* %tp) #2 !dbg !18395 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %napi = alloca %struct.napi_struct*, align 8
  %speed = alloca i8, align 1
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !18396, metadata !DIExpression()), !dbg !18397
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !18398, metadata !DIExpression()), !dbg !18399
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18400
  %netdev1 = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 4, !dbg !18401
  %1 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !18401
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !18399
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi, metadata !18402, metadata !DIExpression()), !dbg !18403
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18404
  %napi2 = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 2, !dbg !18405
  store %struct.napi_struct* %napi2, %struct.napi_struct** %napi, align 8, !dbg !18403
  call void @llvm.dbg.declare(metadata i8* %speed, metadata !18406, metadata !DIExpression()), !dbg !18407
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18408
  %call = call zeroext i8 @rtl8152_get_speed(%struct.r8152* %3) #13, !dbg !18409
  store i8 %call, i8* %speed, align 1, !dbg !18410
  %4 = load i8, i8* %speed, align 1, !dbg !18411
  %conv = zext i8 %4 to i32, !dbg !18411
  %and = and i32 %conv, 2, !dbg !18413
  %tobool = icmp ne i32 %and, 0, !dbg !18413
  br i1 %tobool, label %if.then, label %if.else18, !dbg !18414

if.then:                                          ; preds = %entry
  %5 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18415
  %call3 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %5) #13, !dbg !18418
  br i1 %call3, label %if.else, label %if.then4, !dbg !18419

if.then4:                                         ; preds = %if.then
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18420
  %rtl_ops = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 21, !dbg !18422
  %enable = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops, i32 0, i32 1, !dbg !18423
  %7 = load i32 (%struct.r8152*)*, i32 (%struct.r8152*)** %enable, align 8, !dbg !18423
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18424
  %call5 = call i32 %7(%struct.r8152* %8) #13, !dbg !18420
  %9 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18425
  call void @netif_stop_queue(%struct.net_device* %9) #13, !dbg !18426
  %10 = load %struct.napi_struct*, %struct.napi_struct** %napi, align 8, !dbg !18427
  call void @napi_disable(%struct.napi_struct* %10) #13, !dbg !18428
  %11 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18429
  call void @netif_carrier_on(%struct.net_device* %11) #13, !dbg !18430
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18431
  %call6 = call i32 @rtl_start_rx(%struct.r8152* %12) #13, !dbg !18432
  %13 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18433
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %13, i32 0, i32 0, !dbg !18434
  call void @clear_bit(i64 1, i64* %flags) #13, !dbg !18435
  %14 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18436
  call void @_rtl8152_set_rx_mode(%struct.net_device* %14) #13, !dbg !18437
  %15 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18438
  %napi7 = getelementptr inbounds %struct.r8152, %struct.r8152* %15, i32 0, i32 2, !dbg !18439
  call void @napi_enable(%struct.napi_struct* %napi7) #13, !dbg !18440
  %16 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18441
  call void @netif_wake_queue(%struct.net_device* %16) #13, !dbg !18442
  br label %do.body, !dbg !18443

do.body:                                          ; preds = %if.then4
  %17 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18444
  %msg_enable = getelementptr inbounds %struct.r8152, %struct.r8152* %17, i32 0, i32 28, !dbg !18444
  %18 = load i32, i32* %msg_enable, align 8, !dbg !18444
  %and8 = and i32 %18, 4, !dbg !18444
  %tobool9 = icmp ne i32 %and8, 0, !dbg !18444
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !18447

if.then10:                                        ; preds = %do.body
  %19 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18444
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i64 0, i64 0)) #14, !dbg !18444
  br label %if.end, !dbg !18444

if.end:                                           ; preds = %if.then10, %do.body
  br label %do.end, !dbg !18447

do.end:                                           ; preds = %if.end
  br label %if.end17, !dbg !18448

if.else:                                          ; preds = %if.then
  %20 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18449
  %call11 = call zeroext i1 @netif_queue_stopped(%struct.net_device* %20) #13, !dbg !18451
  br i1 %call11, label %land.lhs.true, label %if.end16, !dbg !18452

land.lhs.true:                                    ; preds = %if.else
  %21 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18453
  %tx_queue = getelementptr inbounds %struct.r8152, %struct.r8152* %21, i32 0, i32 11, !dbg !18454
  %call13 = call i32 @skb_queue_len(%struct.sk_buff_head* %tx_queue) #13, !dbg !18455
  %22 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18456
  %tx_qlen = getelementptr inbounds %struct.r8152, %struct.r8152* %22, i32 0, i32 29, !dbg !18457
  %23 = load i32, i32* %tx_qlen, align 4, !dbg !18457
  %cmp = icmp ult i32 %call13, %23, !dbg !18458
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !18459

if.then15:                                        ; preds = %land.lhs.true
  %24 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18460
  call void @netif_wake_queue(%struct.net_device* %24) #13, !dbg !18462
  br label %if.end16, !dbg !18463

if.end16:                                         ; preds = %if.then15, %land.lhs.true, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %do.end
  br label %if.end31, !dbg !18464

if.else18:                                        ; preds = %entry
  %25 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18465
  %call19 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %25) #13, !dbg !18468
  br i1 %call19, label %if.then20, label %if.end30, !dbg !18469

if.then20:                                        ; preds = %if.else18
  %26 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18470
  call void @netif_carrier_off(%struct.net_device* %26) #13, !dbg !18472
  %27 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18473
  %tx_tl = getelementptr inbounds %struct.r8152, %struct.r8152* %27, i32 0, i32 20, !dbg !18474
  call void @tasklet_disable(%struct.tasklet_struct* %tx_tl) #13, !dbg !18475
  %28 = load %struct.napi_struct*, %struct.napi_struct** %napi, align 8, !dbg !18476
  call void @napi_disable(%struct.napi_struct* %28) #13, !dbg !18477
  %29 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18478
  %rtl_ops21 = getelementptr inbounds %struct.r8152, %struct.r8152* %29, i32 0, i32 21, !dbg !18479
  %disable = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops21, i32 0, i32 2, !dbg !18480
  %30 = load void (%struct.r8152*)*, void (%struct.r8152*)** %disable, align 8, !dbg !18480
  %31 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18481
  call void %30(%struct.r8152* %31) #13, !dbg !18478
  %32 = load %struct.napi_struct*, %struct.napi_struct** %napi, align 8, !dbg !18482
  call void @napi_enable(%struct.napi_struct* %32) #13, !dbg !18483
  %33 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18484
  %tx_tl22 = getelementptr inbounds %struct.r8152, %struct.r8152* %33, i32 0, i32 20, !dbg !18485
  call void @tasklet_enable(%struct.tasklet_struct* %tx_tl22) #13, !dbg !18486
  br label %do.body23, !dbg !18487

do.body23:                                        ; preds = %if.then20
  %34 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18488
  %msg_enable24 = getelementptr inbounds %struct.r8152, %struct.r8152* %34, i32 0, i32 28, !dbg !18488
  %35 = load i32, i32* %msg_enable24, align 8, !dbg !18488
  %and25 = and i32 %35, 4, !dbg !18488
  %tobool26 = icmp ne i32 %and25, 0, !dbg !18488
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !18491

if.then27:                                        ; preds = %do.body23
  %36 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18488
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %36, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0)) #14, !dbg !18488
  br label %if.end28, !dbg !18488

if.end28:                                         ; preds = %if.then27, %do.body23
  br label %do.end29, !dbg !18491

do.end29:                                         ; preds = %if.end28
  br label %if.end30, !dbg !18492

if.end30:                                         ; preds = %do.end29, %if.else18
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end17
  ret void, !dbg !18493
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @_rtl8152_set_rx_mode(%struct.net_device* %netdev) #2 !dbg !18494 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %tp = alloca %struct.r8152*, align 8
  %mc_filter = alloca [2 x i32], align 4
  %tmp = alloca [2 x i32], align 4
  %ocp_data = alloca i32, align 4
  %ha = alloca %struct.netdev_hw_addr*, align 8
  %__mptr = alloca i8*, align 8
  %tmp21 = alloca %struct.netdev_hw_addr*, align 8
  %bit_nr = alloca i32, align 4
  %__x = alloca i32, align 4
  %tmp27 = alloca i32, align 4
  %___x = alloca i32, align 4
  %tmp49 = alloca i32, align 4
  %__mptr58 = alloca i8*, align 8
  %tmp63 = alloca %struct.netdev_hw_addr*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !18495, metadata !DIExpression()), !dbg !18496
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !18497, metadata !DIExpression()), !dbg !18498
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !18499
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !18500
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !18500
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !18498
  call void @llvm.dbg.declare(metadata [2 x i32]* %mc_filter, metadata !18501, metadata !DIExpression()), !dbg !18503
  call void @llvm.dbg.declare(metadata [2 x i32]* %tmp, metadata !18504, metadata !DIExpression()), !dbg !18506
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !18507, metadata !DIExpression()), !dbg !18508
  %2 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !18509
  call void @netif_stop_queue(%struct.net_device* %2) #13, !dbg !18510
  %3 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !18511
  %call1 = call i32 @ocp_read_dword(%struct.r8152* %3, i16 zeroext 256, i16 zeroext -16368) #13, !dbg !18512
  store i32 %call1, i32* %ocp_data, align 4, !dbg !18513
  %4 = load i32, i32* %ocp_data, align 4, !dbg !18514
  %and = and i32 %4, -16, !dbg !18514
  store i32 %and, i32* %ocp_data, align 4, !dbg !18514
  %5 = load i32, i32* %ocp_data, align 4, !dbg !18515
  %or = or i32 %5, 10, !dbg !18515
  store i32 %or, i32* %ocp_data, align 4, !dbg !18515
  %6 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !18516
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 36, !dbg !18518
  %7 = load i32, i32* %flags, align 8, !dbg !18518
  %and2 = and i32 %7, 256, !dbg !18519
  %tobool = icmp ne i32 %and2, 0, !dbg !18519
  br i1 %tobool, label %if.then, label %if.else, !dbg !18520

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !18521

do.body:                                          ; preds = %if.then
  %8 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !18523
  %msg_enable = getelementptr inbounds %struct.r8152, %struct.r8152* %8, i32 0, i32 28, !dbg !18523
  %9 = load i32, i32* %msg_enable, align 8, !dbg !18523
  %and3 = and i32 %9, 4, !dbg !18523
  %tobool4 = icmp ne i32 %and3, 0, !dbg !18523
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !18526

if.then5:                                         ; preds = %do.body
  %10 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !18523
  call void (%struct.net_device*, i8*, ...) @netdev_notice(%struct.net_device* %10, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.26, i64 0, i64 0)) #14, !dbg !18523
  br label %if.end, !dbg !18523

if.end:                                           ; preds = %if.then5, %do.body
  br label %do.end, !dbg !18526

do.end:                                           ; preds = %if.end
  %11 = load i32, i32* %ocp_data, align 4, !dbg !18527
  %or6 = or i32 %11, 5, !dbg !18527
  store i32 %or6, i32* %ocp_data, align 4, !dbg !18527
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %mc_filter, i64 0, i64 1, !dbg !18528
  store i32 -1, i32* %arrayidx, align 4, !dbg !18529
  %arrayidx7 = getelementptr [2 x i32], [2 x i32]* %mc_filter, i64 0, i64 0, !dbg !18530
  store i32 -1, i32* %arrayidx7, align 4, !dbg !18531
  br label %if.end66, !dbg !18532

if.else:                                          ; preds = %entry
  %12 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !18533
  %mc = getelementptr inbounds %struct.net_device, %struct.net_device* %12, i32 0, i32 63, !dbg !18533
  %count = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc, i32 0, i32 1, !dbg !18533
  %13 = load i32, i32* %count, align 8, !dbg !18533
  %cmp = icmp sgt i32 %13, 32, !dbg !18535
  br i1 %cmp, label %if.then11, label %lor.lhs.false, !dbg !18536

lor.lhs.false:                                    ; preds = %if.else
  %14 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !18537
  %flags8 = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 36, !dbg !18538
  %15 = load i32, i32* %flags8, align 8, !dbg !18538
  %and9 = and i32 %15, 512, !dbg !18539
  %tobool10 = icmp ne i32 %and9, 0, !dbg !18539
  br i1 %tobool10, label %if.then11, label %if.else15, !dbg !18540

if.then11:                                        ; preds = %lor.lhs.false, %if.else
  %16 = load i32, i32* %ocp_data, align 4, !dbg !18541
  %or12 = or i32 %16, 4, !dbg !18541
  store i32 %or12, i32* %ocp_data, align 4, !dbg !18541
  %arrayidx13 = getelementptr [2 x i32], [2 x i32]* %mc_filter, i64 0, i64 1, !dbg !18543
  store i32 -1, i32* %arrayidx13, align 4, !dbg !18544
  %arrayidx14 = getelementptr [2 x i32], [2 x i32]* %mc_filter, i64 0, i64 0, !dbg !18545
  store i32 -1, i32* %arrayidx14, align 4, !dbg !18546
  br label %if.end65, !dbg !18547

if.else15:                                        ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata %struct.netdev_hw_addr** %ha, metadata !18548, metadata !DIExpression()), !dbg !18550
  %arrayidx16 = getelementptr [2 x i32], [2 x i32]* %mc_filter, i64 0, i64 1, !dbg !18551
  store i32 0, i32* %arrayidx16, align 4, !dbg !18552
  %arrayidx17 = getelementptr [2 x i32], [2 x i32]* %mc_filter, i64 0, i64 0, !dbg !18553
  store i32 0, i32* %arrayidx17, align 4, !dbg !18554
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !18555, metadata !DIExpression()), !dbg !18558
  %17 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !18558
  %mc18 = getelementptr inbounds %struct.net_device, %struct.net_device* %17, i32 0, i32 63, !dbg !18558
  %list = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc18, i32 0, i32 0, !dbg !18558
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !18558
  %18 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !18558
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !18558
  store i8* %19, i8** %__mptr, align 8, !dbg !18558
  br label %do.body19, !dbg !18558

do.body19:                                        ; preds = %if.else15
  br label %do.end20, !dbg !18559

do.end20:                                         ; preds = %do.body19
  %20 = load i8*, i8** %__mptr, align 8, !dbg !18558
  %add.ptr = getelementptr i8, i8* %20, i64 0, !dbg !18558
  %21 = bitcast i8* %add.ptr to %struct.netdev_hw_addr*, !dbg !18558
  store %struct.netdev_hw_addr* %21, %struct.netdev_hw_addr** %tmp21, align 8, !dbg !18559
  %22 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp21, align 8, !dbg !18558
  store %struct.netdev_hw_addr* %22, %struct.netdev_hw_addr** %ha, align 8, !dbg !18561
  br label %for.cond, !dbg !18561

for.cond:                                         ; preds = %do.end62, %do.end20
  %23 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !18562
  %list22 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %23, i32 0, i32 0, !dbg !18562
  %24 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !18562
  %mc23 = getelementptr inbounds %struct.net_device, %struct.net_device* %24, i32 0, i32 63, !dbg !18562
  %list24 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc23, i32 0, i32 0, !dbg !18562
  %cmp25 = icmp eq %struct.list_head* %list22, %list24, !dbg !18562
  %lnot = xor i1 %cmp25, true, !dbg !18562
  br i1 %lnot, label %for.body, label %for.end, !dbg !18561

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %bit_nr, metadata !18564, metadata !DIExpression()), !dbg !18566
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !18567, metadata !DIExpression()), !dbg !18569
  %25 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !18569
  %addr = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %25, i32 0, i32 1, !dbg !18569
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %addr, i64 0, i64 0, !dbg !18569
  %call26 = call i32 @crc32_le(i32 -1, i8* %arraydecay, i64 6) #17, !dbg !18569
  store i32 %call26, i32* %__x, align 4, !dbg !18569
  %26 = load i32, i32* %__x, align 4, !dbg !18569
  %27 = call i1 @llvm.is.constant.i32(i32 %26), !dbg !18569
  br i1 %27, label %cond.true, label %cond.false, !dbg !18569

cond.true:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %___x, metadata !18570, metadata !DIExpression()), !dbg !18572
  %28 = load i32, i32* %__x, align 4, !dbg !18572
  store i32 %28, i32* %___x, align 4, !dbg !18572
  %29 = load i32, i32* %___x, align 4, !dbg !18572
  %shr = lshr i32 %29, 16, !dbg !18572
  %30 = load i32, i32* %___x, align 4, !dbg !18572
  %shl = shl i32 %30, 16, !dbg !18572
  %or28 = or i32 %shr, %shl, !dbg !18572
  store i32 %or28, i32* %___x, align 4, !dbg !18572
  %31 = load i32, i32* %___x, align 4, !dbg !18572
  %and29 = and i32 %31, -16711936, !dbg !18572
  %shr30 = lshr i32 %and29, 8, !dbg !18572
  %32 = load i32, i32* %___x, align 4, !dbg !18572
  %and31 = and i32 %32, 16711935, !dbg !18572
  %shl32 = shl i32 %and31, 8, !dbg !18572
  %or33 = or i32 %shr30, %shl32, !dbg !18572
  store i32 %or33, i32* %___x, align 4, !dbg !18572
  %33 = load i32, i32* %___x, align 4, !dbg !18572
  %and34 = and i32 %33, -252645136, !dbg !18572
  %shr35 = lshr i32 %and34, 4, !dbg !18572
  %34 = load i32, i32* %___x, align 4, !dbg !18572
  %and36 = and i32 %34, 252645135, !dbg !18572
  %shl37 = shl i32 %and36, 4, !dbg !18572
  %or38 = or i32 %shr35, %shl37, !dbg !18572
  store i32 %or38, i32* %___x, align 4, !dbg !18572
  %35 = load i32, i32* %___x, align 4, !dbg !18572
  %and39 = and i32 %35, -858993460, !dbg !18572
  %shr40 = lshr i32 %and39, 2, !dbg !18572
  %36 = load i32, i32* %___x, align 4, !dbg !18572
  %and41 = and i32 %36, 858993459, !dbg !18572
  %shl42 = shl i32 %and41, 2, !dbg !18572
  %or43 = or i32 %shr40, %shl42, !dbg !18572
  store i32 %or43, i32* %___x, align 4, !dbg !18572
  %37 = load i32, i32* %___x, align 4, !dbg !18572
  %and44 = and i32 %37, -1431655766, !dbg !18572
  %shr45 = lshr i32 %and44, 1, !dbg !18572
  %38 = load i32, i32* %___x, align 4, !dbg !18572
  %and46 = and i32 %38, 1431655765, !dbg !18572
  %shl47 = shl i32 %and46, 1, !dbg !18572
  %or48 = or i32 %shr45, %shl47, !dbg !18572
  store i32 %or48, i32* %___x, align 4, !dbg !18572
  %39 = load i32, i32* %___x, align 4, !dbg !18572
  store i32 %39, i32* %tmp49, align 4, !dbg !18572
  %40 = load i32, i32* %tmp49, align 4, !dbg !18572
  br label %cond.end, !dbg !18569

cond.false:                                       ; preds = %for.body
  %41 = load i32, i32* %__x, align 4, !dbg !18569
  %call50 = call i32 @__bitrev32(i32 %41) #13, !dbg !18569
  br label %cond.end, !dbg !18569

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %40, %cond.true ], [ %call50, %cond.false ], !dbg !18569
  store i32 %cond, i32* %tmp27, align 4, !dbg !18569
  %42 = load i32, i32* %tmp27, align 4, !dbg !18569
  %shr51 = lshr i32 %42, 26, !dbg !18573
  store i32 %shr51, i32* %bit_nr, align 4, !dbg !18566
  %43 = load i32, i32* %bit_nr, align 4, !dbg !18574
  %and52 = and i32 %43, 31, !dbg !18575
  %shl53 = shl i32 1, %and52, !dbg !18576
  %44 = load i32, i32* %bit_nr, align 4, !dbg !18577
  %shr54 = ashr i32 %44, 5, !dbg !18578
  %idxprom = sext i32 %shr54 to i64, !dbg !18579
  %arrayidx55 = getelementptr [2 x i32], [2 x i32]* %mc_filter, i64 0, i64 %idxprom, !dbg !18579
  %45 = load i32, i32* %arrayidx55, align 4, !dbg !18580
  %or56 = or i32 %45, %shl53, !dbg !18580
  store i32 %or56, i32* %arrayidx55, align 4, !dbg !18580
  %46 = load i32, i32* %ocp_data, align 4, !dbg !18581
  %or57 = or i32 %46, 4, !dbg !18581
  store i32 %or57, i32* %ocp_data, align 4, !dbg !18581
  br label %for.inc, !dbg !18582

for.inc:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8** %__mptr58, metadata !18583, metadata !DIExpression()), !dbg !18585
  %47 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !18585
  %list59 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %47, i32 0, i32 0, !dbg !18585
  %next60 = getelementptr inbounds %struct.list_head, %struct.list_head* %list59, i32 0, i32 0, !dbg !18585
  %48 = load %struct.list_head*, %struct.list_head** %next60, align 8, !dbg !18585
  %49 = bitcast %struct.list_head* %48 to i8*, !dbg !18585
  store i8* %49, i8** %__mptr58, align 8, !dbg !18585
  br label %do.body61, !dbg !18585

do.body61:                                        ; preds = %for.inc
  br label %do.end62, !dbg !18586

do.end62:                                         ; preds = %do.body61
  %50 = load i8*, i8** %__mptr58, align 8, !dbg !18585
  %add.ptr64 = getelementptr i8, i8* %50, i64 0, !dbg !18585
  %51 = bitcast i8* %add.ptr64 to %struct.netdev_hw_addr*, !dbg !18585
  store %struct.netdev_hw_addr* %51, %struct.netdev_hw_addr** %tmp63, align 8, !dbg !18586
  %52 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp63, align 8, !dbg !18585
  store %struct.netdev_hw_addr* %52, %struct.netdev_hw_addr** %ha, align 8, !dbg !18562
  br label %for.cond, !dbg !18562, !llvm.loop !18588

for.end:                                          ; preds = %for.cond
  br label %if.end65

if.end65:                                         ; preds = %for.end, %if.then11
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %do.end
  %arrayidx67 = getelementptr [2 x i32], [2 x i32]* %mc_filter, i64 0, i64 1, !dbg !18590
  %53 = load i32, i32* %arrayidx67, align 4, !dbg !18590
  %54 = call i1 @llvm.is.constant.i32(i32 %53), !dbg !18590
  br i1 %54, label %cond.true68, label %cond.false84, !dbg !18590

cond.true68:                                      ; preds = %if.end66
  %arrayidx69 = getelementptr [2 x i32], [2 x i32]* %mc_filter, i64 0, i64 1, !dbg !18590
  %55 = load i32, i32* %arrayidx69, align 4, !dbg !18590
  %and70 = and i32 %55, 255, !dbg !18590
  %shl71 = shl i32 %and70, 24, !dbg !18590
  %arrayidx72 = getelementptr [2 x i32], [2 x i32]* %mc_filter, i64 0, i64 1, !dbg !18590
  %56 = load i32, i32* %arrayidx72, align 4, !dbg !18590
  %and73 = and i32 %56, 65280, !dbg !18590
  %shl74 = shl i32 %and73, 8, !dbg !18590
  %or75 = or i32 %shl71, %shl74, !dbg !18590
  %arrayidx76 = getelementptr [2 x i32], [2 x i32]* %mc_filter, i64 0, i64 1, !dbg !18590
  %57 = load i32, i32* %arrayidx76, align 4, !dbg !18590
  %and77 = and i32 %57, 16711680, !dbg !18590
  %shr78 = lshr i32 %and77, 8, !dbg !18590
  %or79 = or i32 %or75, %shr78, !dbg !18590
  %arrayidx80 = getelementptr [2 x i32], [2 x i32]* %mc_filter, i64 0, i64 1, !dbg !18590
  %58 = load i32, i32* %arrayidx80, align 4, !dbg !18590
  %and81 = and i32 %58, -16777216, !dbg !18590
  %shr82 = lshr i32 %and81, 24, !dbg !18590
  %or83 = or i32 %or79, %shr82, !dbg !18590
  br label %cond.end87, !dbg !18590

cond.false84:                                     ; preds = %if.end66
  %arrayidx85 = getelementptr [2 x i32], [2 x i32]* %mc_filter, i64 0, i64 1, !dbg !18590
  %59 = load i32, i32* %arrayidx85, align 4, !dbg !18590
  %call86 = call i32 @__fswab32(i32 %59) #15, !dbg !18590
  br label %cond.end87, !dbg !18590

cond.end87:                                       ; preds = %cond.false84, %cond.true68
  %cond88 = phi i32 [ %or83, %cond.true68 ], [ %call86, %cond.false84 ], !dbg !18590
  %arrayidx89 = getelementptr [2 x i32], [2 x i32]* %tmp, i64 0, i64 0, !dbg !18591
  store i32 %cond88, i32* %arrayidx89, align 4, !dbg !18592
  %arrayidx90 = getelementptr [2 x i32], [2 x i32]* %mc_filter, i64 0, i64 0, !dbg !18593
  %60 = load i32, i32* %arrayidx90, align 4, !dbg !18593
  %61 = call i1 @llvm.is.constant.i32(i32 %60), !dbg !18593
  br i1 %61, label %cond.true91, label %cond.false107, !dbg !18593

cond.true91:                                      ; preds = %cond.end87
  %arrayidx92 = getelementptr [2 x i32], [2 x i32]* %mc_filter, i64 0, i64 0, !dbg !18593
  %62 = load i32, i32* %arrayidx92, align 4, !dbg !18593
  %and93 = and i32 %62, 255, !dbg !18593
  %shl94 = shl i32 %and93, 24, !dbg !18593
  %arrayidx95 = getelementptr [2 x i32], [2 x i32]* %mc_filter, i64 0, i64 0, !dbg !18593
  %63 = load i32, i32* %arrayidx95, align 4, !dbg !18593
  %and96 = and i32 %63, 65280, !dbg !18593
  %shl97 = shl i32 %and96, 8, !dbg !18593
  %or98 = or i32 %shl94, %shl97, !dbg !18593
  %arrayidx99 = getelementptr [2 x i32], [2 x i32]* %mc_filter, i64 0, i64 0, !dbg !18593
  %64 = load i32, i32* %arrayidx99, align 4, !dbg !18593
  %and100 = and i32 %64, 16711680, !dbg !18593
  %shr101 = lshr i32 %and100, 8, !dbg !18593
  %or102 = or i32 %or98, %shr101, !dbg !18593
  %arrayidx103 = getelementptr [2 x i32], [2 x i32]* %mc_filter, i64 0, i64 0, !dbg !18593
  %65 = load i32, i32* %arrayidx103, align 4, !dbg !18593
  %and104 = and i32 %65, -16777216, !dbg !18593
  %shr105 = lshr i32 %and104, 24, !dbg !18593
  %or106 = or i32 %or102, %shr105, !dbg !18593
  br label %cond.end110, !dbg !18593

cond.false107:                                    ; preds = %cond.end87
  %arrayidx108 = getelementptr [2 x i32], [2 x i32]* %mc_filter, i64 0, i64 0, !dbg !18593
  %66 = load i32, i32* %arrayidx108, align 4, !dbg !18593
  %call109 = call i32 @__fswab32(i32 %66) #15, !dbg !18593
  br label %cond.end110, !dbg !18593

cond.end110:                                      ; preds = %cond.false107, %cond.true91
  %cond111 = phi i32 [ %or106, %cond.true91 ], [ %call109, %cond.false107 ], !dbg !18593
  %arrayidx112 = getelementptr [2 x i32], [2 x i32]* %tmp, i64 0, i64 1, !dbg !18594
  store i32 %cond111, i32* %arrayidx112, align 4, !dbg !18595
  %67 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !18596
  %arraydecay113 = getelementptr inbounds [2 x i32], [2 x i32]* %tmp, i64 0, i64 0, !dbg !18597
  %68 = bitcast i32* %arraydecay113 to i8*, !dbg !18597
  %call114 = call i32 @pla_ocp_write(%struct.r8152* %67, i16 zeroext -13056, i16 zeroext 255, i16 zeroext 8, i8* %68) #13, !dbg !18598
  %69 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !18599
  %70 = load i32, i32* %ocp_data, align 4, !dbg !18600
  call void @ocp_write_dword(%struct.r8152* %69, i16 zeroext 256, i16 zeroext -16368, i32 %70) #13, !dbg !18601
  %71 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !18602
  call void @netif_wake_queue(%struct.net_device* %71) #13, !dbg !18603
  ret void, !dbg !18604
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_carrier_ok(%struct.net_device* %dev) #2 !dbg !18605 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18606, metadata !DIExpression()), !dbg !18607
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18608
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !18609
  %call = call zeroext i1 @test_bit(i64 2, i64* %state) #13, !dbg !18610
  %lnot = xor i1 %call, true, !dbg !18611
  ret i1 %lnot, !dbg !18612
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_schedule(%struct.tasklet_struct* %t) #2 !dbg !18613 {
entry:
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !18614, metadata !DIExpression()), !dbg !18615
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !18616
  %state = getelementptr inbounds %struct.tasklet_struct, %struct.tasklet_struct* %0, i32 0, i32 1, !dbg !18618
  %call = call zeroext i1 @test_and_set_bit(i64 0, i64* %state) #13, !dbg !18619
  br i1 %call, label %if.end, label %if.then, !dbg !18620

if.then:                                          ; preds = %entry
  %1 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !18621
  call void @__tasklet_schedule(%struct.tasklet_struct* %1) #13, !dbg !18622
  br label %if.end, !dbg !18622

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !18623
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #1

; Function Attrs: noredzone
declare dso_local void @usb_autopm_put_interface(%struct.usb_interface*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_stop_queue(%struct.net_device* %dev) #2 !dbg !18624 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !18625, metadata !DIExpression()), !dbg !18629
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18631, metadata !DIExpression()), !dbg !18632
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18633
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #13, !dbg !18634
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !18635
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !18636
  call void @set_bit(i64 0, i64* %state.i) #16, !dbg !18637
  ret void, !dbg !18638
}

; Function Attrs: noredzone
declare dso_local void @napi_disable(%struct.napi_struct*) #1

; Function Attrs: noredzone
declare dso_local void @netif_carrier_on(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl_start_rx(%struct.r8152* %tp) #2 !dbg !18639 {
entry:
  %lock.addr.i193 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i193, metadata !15437, metadata !DIExpression()), !dbg !18640
  %lock.addr.i188 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i188, metadata !15428, metadata !DIExpression()), !dbg !18647
  %flags.addr.i189 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i189, metadata !15435, metadata !DIExpression()), !dbg !18655
  %tmp.i190 = alloca i32, align 4
  %tmp8.i191 = alloca i32, align 4
  %lock.addr.i186 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i186, metadata !15437, metadata !DIExpression()), !dbg !18656
  %lock.addr.i181 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i181, metadata !15428, metadata !DIExpression()), !dbg !18663
  %flags.addr.i182 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i182, metadata !15435, metadata !DIExpression()), !dbg !18666
  %tmp.i183 = alloca i32, align 4
  %tmp8.i184 = alloca i32, align 4
  %lock.addr.i179 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i179, metadata !15437, metadata !DIExpression()), !dbg !18667
  %lock.addr.i174 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i174, metadata !15428, metadata !DIExpression()), !dbg !18674
  %flags.addr.i175 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i175, metadata !15435, metadata !DIExpression()), !dbg !18676
  %tmp.i176 = alloca i32, align 4
  %tmp8.i177 = alloca i32, align 4
  %lock.addr.i172 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i172, metadata !15428, metadata !DIExpression()), !dbg !18677
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !15435, metadata !DIExpression()), !dbg !18679
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !15437, metadata !DIExpression()), !dbg !18680
  %tp.addr = alloca %struct.r8152*, align 8
  %agg = alloca %struct.rx_agg*, align 8
  %agg_next = alloca %struct.rx_agg*, align 8
  %tmp_list = alloca %struct.list_head, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp22 = alloca %struct.rx_agg*, align 8
  %__mptr23 = alloca i8*, align 8
  %tmp27 = alloca %struct.rx_agg*, align 8
  %__dummy36 = alloca i64, align 8
  %__dummy237 = alloca i64, align 8
  %tmp40 = alloca i32, align 4
  %__dummy44 = alloca i64, align 8
  %__dummy245 = alloca i64, align 8
  %tmp48 = alloca i32, align 4
  %__dummy72 = alloca i64, align 8
  %__dummy273 = alloca i64, align 8
  %tmp76 = alloca i32, align 4
  %__dummy80 = alloca i64, align 8
  %__dummy281 = alloca i64, align 8
  %tmp84 = alloca i32, align 4
  %__mptr103 = alloca i8*, align 8
  %tmp108 = alloca %struct.rx_agg*, align 8
  %__dummy112 = alloca i64, align 8
  %__dummy2113 = alloca i64, align 8
  %tmp116 = alloca i32, align 4
  %__dummy120 = alloca i64, align 8
  %__dummy2121 = alloca i64, align 8
  %tmp124 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp163 = alloca i64, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !18687, metadata !DIExpression()), !dbg !18688
  call void @llvm.dbg.declare(metadata %struct.rx_agg** %agg, metadata !18689, metadata !DIExpression()), !dbg !18690
  call void @llvm.dbg.declare(metadata %struct.rx_agg** %agg_next, metadata !18691, metadata !DIExpression()), !dbg !18692
  call void @llvm.dbg.declare(metadata %struct.list_head* %tmp_list, metadata !18693, metadata !DIExpression()), !dbg !18694
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !18695, metadata !DIExpression()), !dbg !18696
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !18697, metadata !DIExpression()), !dbg !18698
  store i32 0, i32* %ret, align 4, !dbg !18698
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18699, metadata !DIExpression()), !dbg !18700
  store i32 0, i32* %i, align 4, !dbg !18700
  call void @INIT_LIST_HEAD(%struct.list_head* %tmp_list) #13, !dbg !18701
  br label %do.body, !dbg !18702

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !18703

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !18704, metadata !DIExpression()), !dbg !18706
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !18707, metadata !DIExpression()), !dbg !18706
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !18706
  %conv = zext i1 %cmp to i32, !dbg !18706
  store i32 1, i32* %tmp, align 4, !dbg !18706
  %0 = load i32, i32* %tmp, align 4, !dbg !18706
  br label %do.body2, !dbg !18708

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !18709

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !18710

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !18712, metadata !DIExpression()), !dbg !18715
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !18716, metadata !DIExpression()), !dbg !18715
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !18715
  %conv8 = zext i1 %cmp7 to i32, !dbg !18715
  store i32 1, i32* %tmp9, align 4, !dbg !18715
  %1 = load i32, i32* %tmp9, align 4, !dbg !18715
  %call = call i64 @arch_local_irq_save() #13, !dbg !18717
  store i64 %call, i64* %flags, align 8, !dbg !18717
  br label %do.end, !dbg !18717

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !18710

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !18709

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !18718, !srcloc !18719
  br label %do.body12, !dbg !18718

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18720
  %rx_lock = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 13, !dbg !18720
  store %struct.spinlock* %rx_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18721
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !18722
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !18722
  br label %do.end14, !dbg !18720

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !18718

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !18709

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !18708

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !18703

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18723
  %rx_done = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 9, !dbg !18724
  call void @INIT_LIST_HEAD(%struct.list_head* %rx_done) #13, !dbg !18725
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18726
  %rx_used = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 8, !dbg !18727
  call void @INIT_LIST_HEAD(%struct.list_head* %rx_used) #13, !dbg !18728
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18729
  %rx_info = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 7, !dbg !18730
  call void @list_splice_init(%struct.list_head* %rx_info, %struct.list_head* %tmp_list) #13, !dbg !18731
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18732
  %rx_lock19 = getelementptr inbounds %struct.r8152, %struct.r8152* %8, i32 0, i32 13, !dbg !18733
  %9 = load i64, i64* %flags, align 8, !dbg !18734
  store %struct.spinlock* %rx_lock19, %struct.spinlock** %lock.addr.i174, align 8
  store i64 %9, i64* %flags.addr.i175, align 8
  call void @llvm.dbg.declare(metadata !820, metadata !15497, metadata !DIExpression()) #11, !dbg !18735
  call void @llvm.dbg.declare(metadata !820, metadata !15501, metadata !DIExpression()) #11, !dbg !18735
  store i32 1, i32* %tmp.i176, align 4, !dbg !18735
  %10 = load i32, i32* %tmp.i176, align 4, !dbg !18735
  call void @llvm.dbg.declare(metadata !820, metadata !15502, metadata !DIExpression()) #11, !dbg !18736
  call void @llvm.dbg.declare(metadata !820, metadata !15508, metadata !DIExpression()) #11, !dbg !18736
  store i32 1, i32* %tmp8.i177, align 4, !dbg !18736
  %11 = load i32, i32* %tmp8.i177, align 4, !dbg !18736
  %12 = load i64, i64* %flags.addr.i175, align 8, !dbg !18737
  call void @arch_local_irq_restore(i64 %12) #16, !dbg !18737
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !18738, !srcloc !15512
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i174, align 8, !dbg !18739
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !18739
  %rlock.i178 = bitcast %union.anon.1* %14 to %struct.raw_spinlock*, !dbg !18739
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !18740, metadata !DIExpression()), !dbg !18742
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %tmp_list, i32 0, i32 0, !dbg !18742
  %15 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !18742
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !18742
  store i8* %16, i8** %__mptr, align 8, !dbg !18742
  br label %do.body20, !dbg !18742

do.body20:                                        ; preds = %do.end18
  br label %do.end21, !dbg !18743

do.end21:                                         ; preds = %do.body20
  %17 = load i8*, i8** %__mptr, align 8, !dbg !18742
  %add.ptr = getelementptr i8, i8* %17, i64 -16, !dbg !18742
  %18 = bitcast i8* %add.ptr to %struct.rx_agg*, !dbg !18742
  store %struct.rx_agg* %18, %struct.rx_agg** %tmp22, align 8, !dbg !18743
  %19 = load %struct.rx_agg*, %struct.rx_agg** %tmp22, align 8, !dbg !18742
  store %struct.rx_agg* %19, %struct.rx_agg** %agg, align 8, !dbg !18745
  call void @llvm.dbg.declare(metadata i8** %__mptr23, metadata !18746, metadata !DIExpression()), !dbg !18748
  %20 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !18748
  %info_list = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %20, i32 0, i32 1, !dbg !18748
  %next24 = getelementptr inbounds %struct.list_head, %struct.list_head* %info_list, i32 0, i32 0, !dbg !18748
  %21 = load %struct.list_head*, %struct.list_head** %next24, align 8, !dbg !18748
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !18748
  store i8* %22, i8** %__mptr23, align 8, !dbg !18748
  br label %do.body25, !dbg !18748

do.body25:                                        ; preds = %do.end21
  br label %do.end26, !dbg !18749

do.end26:                                         ; preds = %do.body25
  %23 = load i8*, i8** %__mptr23, align 8, !dbg !18748
  %add.ptr28 = getelementptr i8, i8* %23, i64 -16, !dbg !18748
  %24 = bitcast i8* %add.ptr28 to %struct.rx_agg*, !dbg !18748
  store %struct.rx_agg* %24, %struct.rx_agg** %tmp27, align 8, !dbg !18749
  %25 = load %struct.rx_agg*, %struct.rx_agg** %tmp27, align 8, !dbg !18748
  store %struct.rx_agg* %25, %struct.rx_agg** %agg_next, align 8, !dbg !18745
  br label %for.cond, !dbg !18745

for.cond:                                         ; preds = %do.end107, %do.end26
  %26 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !18751
  %info_list29 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %26, i32 0, i32 1, !dbg !18751
  %cmp30 = icmp eq %struct.list_head* %info_list29, %tmp_list, !dbg !18751
  %lnot = xor i1 %cmp30, true, !dbg !18751
  br i1 %lnot, label %for.body, label %for.end, !dbg !18745

for.body:                                         ; preds = %for.cond
  %27 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !18752
  %list = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %27, i32 0, i32 0, !dbg !18753
  call void @INIT_LIST_HEAD(%struct.list_head* %list) #13, !dbg !18754
  %28 = load i32, i32* %i, align 4, !dbg !18755
  %inc = add i32 %28, 1, !dbg !18755
  store i32 %inc, i32* %i, align 4, !dbg !18755
  %cmp32 = icmp sgt i32 %inc, 10, !dbg !18756
  br i1 %cmp32, label %if.then, label %if.else, !dbg !18757

if.then:                                          ; preds = %for.body
  br label %do.body34, !dbg !18758

do.body34:                                        ; preds = %if.then
  br label %do.body35, !dbg !18759

do.body35:                                        ; preds = %do.body34
  call void @llvm.dbg.declare(metadata i64* %__dummy36, metadata !18760, metadata !DIExpression()), !dbg !18762
  call void @llvm.dbg.declare(metadata i64* %__dummy237, metadata !18763, metadata !DIExpression()), !dbg !18762
  %cmp38 = icmp eq i64* %__dummy36, %__dummy237, !dbg !18762
  %conv39 = zext i1 %cmp38 to i32, !dbg !18762
  store i32 1, i32* %tmp40, align 4, !dbg !18762
  %29 = load i32, i32* %tmp40, align 4, !dbg !18762
  br label %do.body41, !dbg !18764

do.body41:                                        ; preds = %do.body35
  br label %do.body42, !dbg !18765

do.body42:                                        ; preds = %do.body41
  br label %do.body43, !dbg !18766

do.body43:                                        ; preds = %do.body42
  call void @llvm.dbg.declare(metadata i64* %__dummy44, metadata !18768, metadata !DIExpression()), !dbg !18771
  call void @llvm.dbg.declare(metadata i64* %__dummy245, metadata !18772, metadata !DIExpression()), !dbg !18771
  %cmp46 = icmp eq i64* %__dummy44, %__dummy245, !dbg !18771
  %conv47 = zext i1 %cmp46 to i32, !dbg !18771
  store i32 1, i32* %tmp48, align 4, !dbg !18771
  %30 = load i32, i32* %tmp48, align 4, !dbg !18771
  %call49 = call i64 @arch_local_irq_save() #13, !dbg !18773
  store i64 %call49, i64* %flags, align 8, !dbg !18773
  br label %do.end50, !dbg !18773

do.end50:                                         ; preds = %do.body43
  br label %do.end51, !dbg !18766

do.end51:                                         ; preds = %do.end50
  br label %do.body52, !dbg !18765

do.body52:                                        ; preds = %do.end51
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !18774, !srcloc !18775
  br label %do.body53, !dbg !18774

do.body53:                                        ; preds = %do.body52
  %31 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18776
  %rx_lock54 = getelementptr inbounds %struct.r8152, %struct.r8152* %31, i32 0, i32 13, !dbg !18776
  store %struct.spinlock* %rx_lock54, %struct.spinlock** %lock.addr.i179, align 8
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i179, align 8, !dbg !18777
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !18778
  %rlock.i180 = bitcast %union.anon.1* %33 to %struct.raw_spinlock*, !dbg !18778
  br label %do.end56, !dbg !18776

do.end56:                                         ; preds = %do.body53
  br label %do.end57, !dbg !18774

do.end57:                                         ; preds = %do.end56
  br label %do.end58, !dbg !18765

do.end58:                                         ; preds = %do.end57
  br label %do.end59, !dbg !18764

do.end59:                                         ; preds = %do.end58
  br label %do.end60, !dbg !18759

do.end60:                                         ; preds = %do.end59
  %34 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !18779
  %list61 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %34, i32 0, i32 0, !dbg !18780
  %35 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18781
  %rx_used62 = getelementptr inbounds %struct.r8152, %struct.r8152* %35, i32 0, i32 8, !dbg !18782
  call void @list_add_tail(%struct.list_head* %list61, %struct.list_head* %rx_used62) #13, !dbg !18783
  %36 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18784
  %rx_lock63 = getelementptr inbounds %struct.r8152, %struct.r8152* %36, i32 0, i32 13, !dbg !18785
  %37 = load i64, i64* %flags, align 8, !dbg !18786
  store %struct.spinlock* %rx_lock63, %struct.spinlock** %lock.addr.i181, align 8
  store i64 %37, i64* %flags.addr.i182, align 8
  call void @llvm.dbg.declare(metadata !820, metadata !15497, metadata !DIExpression()) #11, !dbg !18787
  call void @llvm.dbg.declare(metadata !820, metadata !15501, metadata !DIExpression()) #11, !dbg !18787
  store i32 1, i32* %tmp.i183, align 4, !dbg !18787
  %38 = load i32, i32* %tmp.i183, align 4, !dbg !18787
  call void @llvm.dbg.declare(metadata !820, metadata !15502, metadata !DIExpression()) #11, !dbg !18788
  call void @llvm.dbg.declare(metadata !820, metadata !15508, metadata !DIExpression()) #11, !dbg !18788
  store i32 1, i32* %tmp8.i184, align 4, !dbg !18788
  %39 = load i32, i32* %tmp8.i184, align 4, !dbg !18788
  %40 = load i64, i64* %flags.addr.i182, align 8, !dbg !18789
  call void @arch_local_irq_restore(i64 %40) #16, !dbg !18789
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !18790, !srcloc !15512
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i181, align 8, !dbg !18791
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !18791
  %rlock.i185 = bitcast %union.anon.1* %42 to %struct.raw_spinlock*, !dbg !18791
  br label %if.end102, !dbg !18792

if.else:                                          ; preds = %for.body
  %43 = load i32, i32* %ret, align 4, !dbg !18793
  %cmp64 = icmp slt i32 %43, 0, !dbg !18793
  %lnot66 = xor i1 %cmp64, true, !dbg !18793
  %lnot67 = xor i1 %lnot66, true, !dbg !18793
  %lnot.ext = zext i1 %lnot67 to i32, !dbg !18793
  %conv68 = sext i32 %lnot.ext to i64, !dbg !18793
  %tobool = icmp ne i64 %conv68, 0, !dbg !18793
  br i1 %tobool, label %if.then69, label %if.else100, !dbg !18794

if.then69:                                        ; preds = %if.else
  br label %do.body70, !dbg !18795

do.body70:                                        ; preds = %if.then69
  br label %do.body71, !dbg !18796

do.body71:                                        ; preds = %do.body70
  call void @llvm.dbg.declare(metadata i64* %__dummy72, metadata !18797, metadata !DIExpression()), !dbg !18799
  call void @llvm.dbg.declare(metadata i64* %__dummy273, metadata !18800, metadata !DIExpression()), !dbg !18799
  %cmp74 = icmp eq i64* %__dummy72, %__dummy273, !dbg !18799
  %conv75 = zext i1 %cmp74 to i32, !dbg !18799
  store i32 1, i32* %tmp76, align 4, !dbg !18799
  %44 = load i32, i32* %tmp76, align 4, !dbg !18799
  br label %do.body77, !dbg !18801

do.body77:                                        ; preds = %do.body71
  br label %do.body78, !dbg !18802

do.body78:                                        ; preds = %do.body77
  br label %do.body79, !dbg !18803

do.body79:                                        ; preds = %do.body78
  call void @llvm.dbg.declare(metadata i64* %__dummy80, metadata !18805, metadata !DIExpression()), !dbg !18808
  call void @llvm.dbg.declare(metadata i64* %__dummy281, metadata !18809, metadata !DIExpression()), !dbg !18808
  %cmp82 = icmp eq i64* %__dummy80, %__dummy281, !dbg !18808
  %conv83 = zext i1 %cmp82 to i32, !dbg !18808
  store i32 1, i32* %tmp84, align 4, !dbg !18808
  %45 = load i32, i32* %tmp84, align 4, !dbg !18808
  %call85 = call i64 @arch_local_irq_save() #13, !dbg !18810
  store i64 %call85, i64* %flags, align 8, !dbg !18810
  br label %do.end86, !dbg !18810

do.end86:                                         ; preds = %do.body79
  br label %do.end87, !dbg !18803

do.end87:                                         ; preds = %do.end86
  br label %do.body88, !dbg !18802

do.body88:                                        ; preds = %do.end87
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !18811, !srcloc !18812
  br label %do.body89, !dbg !18811

do.body89:                                        ; preds = %do.body88
  %46 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18813
  %rx_lock90 = getelementptr inbounds %struct.r8152, %struct.r8152* %46, i32 0, i32 13, !dbg !18813
  store %struct.spinlock* %rx_lock90, %struct.spinlock** %lock.addr.i186, align 8
  %47 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i186, align 8, !dbg !18814
  %48 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %47, i32 0, i32 0, !dbg !18815
  %rlock.i187 = bitcast %union.anon.1* %48 to %struct.raw_spinlock*, !dbg !18815
  br label %do.end92, !dbg !18813

do.end92:                                         ; preds = %do.body89
  br label %do.end93, !dbg !18811

do.end93:                                         ; preds = %do.end92
  br label %do.end94, !dbg !18802

do.end94:                                         ; preds = %do.end93
  br label %do.end95, !dbg !18801

do.end95:                                         ; preds = %do.end94
  br label %do.end96, !dbg !18796

do.end96:                                         ; preds = %do.end95
  %49 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !18816
  %list97 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %49, i32 0, i32 0, !dbg !18817
  %50 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18818
  %rx_done98 = getelementptr inbounds %struct.r8152, %struct.r8152* %50, i32 0, i32 9, !dbg !18819
  call void @list_add_tail(%struct.list_head* %list97, %struct.list_head* %rx_done98) #13, !dbg !18820
  %51 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18821
  %rx_lock99 = getelementptr inbounds %struct.r8152, %struct.r8152* %51, i32 0, i32 13, !dbg !18822
  %52 = load i64, i64* %flags, align 8, !dbg !18823
  store %struct.spinlock* %rx_lock99, %struct.spinlock** %lock.addr.i188, align 8
  store i64 %52, i64* %flags.addr.i189, align 8
  call void @llvm.dbg.declare(metadata !820, metadata !15497, metadata !DIExpression()) #11, !dbg !18824
  call void @llvm.dbg.declare(metadata !820, metadata !15501, metadata !DIExpression()) #11, !dbg !18824
  store i32 1, i32* %tmp.i190, align 4, !dbg !18824
  %53 = load i32, i32* %tmp.i190, align 4, !dbg !18824
  call void @llvm.dbg.declare(metadata !820, metadata !15502, metadata !DIExpression()) #11, !dbg !18825
  call void @llvm.dbg.declare(metadata !820, metadata !15508, metadata !DIExpression()) #11, !dbg !18825
  store i32 1, i32* %tmp8.i191, align 4, !dbg !18825
  %54 = load i32, i32* %tmp8.i191, align 4, !dbg !18825
  %55 = load i64, i64* %flags.addr.i189, align 8, !dbg !18826
  call void @arch_local_irq_restore(i64 %55) #16, !dbg !18826
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !18827, !srcloc !15512
  %56 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i188, align 8, !dbg !18828
  %57 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %56, i32 0, i32 0, !dbg !18828
  %rlock.i192 = bitcast %union.anon.1* %57 to %struct.raw_spinlock*, !dbg !18828
  br label %if.end, !dbg !18829

if.else100:                                       ; preds = %if.else
  %58 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18830
  %59 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !18832
  %call101 = call i32 @r8152_submit_rx(%struct.r8152* %58, %struct.rx_agg* %59, i32 3264) #13, !dbg !18833
  store i32 %call101, i32* %ret, align 4, !dbg !18834
  br label %if.end

if.end:                                           ; preds = %if.else100, %do.end96
  br label %if.end102

if.end102:                                        ; preds = %if.end, %do.end60
  br label %for.inc, !dbg !18835

for.inc:                                          ; preds = %if.end102
  %60 = load %struct.rx_agg*, %struct.rx_agg** %agg_next, align 8, !dbg !18751
  store %struct.rx_agg* %60, %struct.rx_agg** %agg, align 8, !dbg !18751
  call void @llvm.dbg.declare(metadata i8** %__mptr103, metadata !18836, metadata !DIExpression()), !dbg !18838
  %61 = load %struct.rx_agg*, %struct.rx_agg** %agg_next, align 8, !dbg !18838
  %info_list104 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %61, i32 0, i32 1, !dbg !18838
  %next105 = getelementptr inbounds %struct.list_head, %struct.list_head* %info_list104, i32 0, i32 0, !dbg !18838
  %62 = load %struct.list_head*, %struct.list_head** %next105, align 8, !dbg !18838
  %63 = bitcast %struct.list_head* %62 to i8*, !dbg !18838
  store i8* %63, i8** %__mptr103, align 8, !dbg !18838
  br label %do.body106, !dbg !18838

do.body106:                                       ; preds = %for.inc
  br label %do.end107, !dbg !18839

do.end107:                                        ; preds = %do.body106
  %64 = load i8*, i8** %__mptr103, align 8, !dbg !18838
  %add.ptr109 = getelementptr i8, i8* %64, i64 -16, !dbg !18838
  %65 = bitcast i8* %add.ptr109 to %struct.rx_agg*, !dbg !18838
  store %struct.rx_agg* %65, %struct.rx_agg** %tmp108, align 8, !dbg !18839
  %66 = load %struct.rx_agg*, %struct.rx_agg** %tmp108, align 8, !dbg !18838
  store %struct.rx_agg* %66, %struct.rx_agg** %agg_next, align 8, !dbg !18751
  br label %for.cond, !dbg !18751, !llvm.loop !18841

for.end:                                          ; preds = %for.cond
  br label %do.body110, !dbg !18843

do.body110:                                       ; preds = %for.end
  br label %do.body111, !dbg !18844

do.body111:                                       ; preds = %do.body110
  call void @llvm.dbg.declare(metadata i64* %__dummy112, metadata !18845, metadata !DIExpression()), !dbg !18847
  call void @llvm.dbg.declare(metadata i64* %__dummy2113, metadata !18848, metadata !DIExpression()), !dbg !18847
  %cmp114 = icmp eq i64* %__dummy112, %__dummy2113, !dbg !18847
  %conv115 = zext i1 %cmp114 to i32, !dbg !18847
  store i32 1, i32* %tmp116, align 4, !dbg !18847
  %67 = load i32, i32* %tmp116, align 4, !dbg !18847
  br label %do.body117, !dbg !18849

do.body117:                                       ; preds = %do.body111
  br label %do.body118, !dbg !18850

do.body118:                                       ; preds = %do.body117
  br label %do.body119, !dbg !18851

do.body119:                                       ; preds = %do.body118
  call void @llvm.dbg.declare(metadata i64* %__dummy120, metadata !18853, metadata !DIExpression()), !dbg !18856
  call void @llvm.dbg.declare(metadata i64* %__dummy2121, metadata !18857, metadata !DIExpression()), !dbg !18856
  %cmp122 = icmp eq i64* %__dummy120, %__dummy2121, !dbg !18856
  %conv123 = zext i1 %cmp122 to i32, !dbg !18856
  store i32 1, i32* %tmp124, align 4, !dbg !18856
  %68 = load i32, i32* %tmp124, align 4, !dbg !18856
  %call125 = call i64 @arch_local_irq_save() #13, !dbg !18858
  store i64 %call125, i64* %flags, align 8, !dbg !18858
  br label %do.end126, !dbg !18858

do.end126:                                        ; preds = %do.body119
  br label %do.end127, !dbg !18851

do.end127:                                        ; preds = %do.end126
  br label %do.body128, !dbg !18850

do.body128:                                       ; preds = %do.end127
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !18859, !srcloc !18860
  br label %do.body129, !dbg !18859

do.body129:                                       ; preds = %do.body128
  %69 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18861
  %rx_lock130 = getelementptr inbounds %struct.r8152, %struct.r8152* %69, i32 0, i32 13, !dbg !18861
  store %struct.spinlock* %rx_lock130, %struct.spinlock** %lock.addr.i193, align 8
  %70 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i193, align 8, !dbg !18862
  %71 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %70, i32 0, i32 0, !dbg !18863
  %rlock.i194 = bitcast %union.anon.1* %71 to %struct.raw_spinlock*, !dbg !18863
  br label %do.end132, !dbg !18861

do.end132:                                        ; preds = %do.body129
  br label %do.end133, !dbg !18859

do.end133:                                        ; preds = %do.end132
  br label %do.end134, !dbg !18850

do.end134:                                        ; preds = %do.end133
  br label %do.end135, !dbg !18849

do.end135:                                        ; preds = %do.end134
  br label %do.end136, !dbg !18844

do.end136:                                        ; preds = %do.end135
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !18864, metadata !DIExpression()), !dbg !18866
  %72 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18866
  %rx_info137 = getelementptr inbounds %struct.r8152, %struct.r8152* %72, i32 0, i32 7, !dbg !18866
  %call138 = call i32 @list_empty(%struct.list_head* %rx_info137) #13, !dbg !18866
  %tobool139 = icmp ne i32 %call138, 0, !dbg !18866
  %lnot140 = xor i1 %tobool139, true, !dbg !18866
  %lnot142 = xor i1 %lnot140, true, !dbg !18866
  %lnot144 = xor i1 %lnot142, true, !dbg !18866
  %lnot.ext145 = zext i1 %lnot144 to i32, !dbg !18866
  store i32 %lnot.ext145, i32* %__ret_warn_on, align 4, !dbg !18866
  %73 = load i32, i32* %__ret_warn_on, align 4, !dbg !18867
  %tobool146 = icmp ne i32 %73, 0, !dbg !18867
  %lnot147 = xor i1 %tobool146, true, !dbg !18867
  %lnot149 = xor i1 %lnot147, true, !dbg !18867
  %lnot.ext150 = zext i1 %lnot149 to i32, !dbg !18867
  %conv151 = sext i32 %lnot.ext150 to i64, !dbg !18867
  %tobool152 = icmp ne i64 %conv151, 0, !dbg !18867
  br i1 %tobool152, label %if.then153, label %if.end162, !dbg !18866

if.then153:                                       ; preds = %do.end136
  br label %do.body154, !dbg !18867

do.body154:                                       ; preds = %if.then153
  br label %do.body155, !dbg !18869

do.body155:                                       ; preds = %do.body154
  br label %do.end156, !dbg !18871

do.end156:                                        ; preds = %do.body155
  br label %do.body157, !dbg !18869

do.body157:                                       ; preds = %do.end156
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 2715, i32 2305, i64 12) #11, !dbg !18873, !srcloc !18875
  br label %do.end158, !dbg !18873

do.end158:                                        ; preds = %do.body157
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 581) #11, !dbg !18876, !srcloc !18878
  br label %do.body159, !dbg !18869

do.body159:                                       ; preds = %do.end158
  br label %do.end160, !dbg !18879

do.end160:                                        ; preds = %do.body159
  br label %do.end161, !dbg !18869

do.end161:                                        ; preds = %do.end160
  br label %if.end162, !dbg !18869

if.end162:                                        ; preds = %do.end161, %do.end136
  %74 = load i32, i32* %__ret_warn_on, align 4, !dbg !18866
  %tobool164 = icmp ne i32 %74, 0, !dbg !18866
  %lnot165 = xor i1 %tobool164, true, !dbg !18866
  %lnot167 = xor i1 %lnot165, true, !dbg !18866
  %lnot.ext168 = zext i1 %lnot167 to i32, !dbg !18866
  %conv169 = sext i32 %lnot.ext168 to i64, !dbg !18866
  store i64 %conv169, i64* %tmp163, align 8, !dbg !18867
  %75 = load i64, i64* %tmp163, align 8, !dbg !18866
  %76 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18881
  %rx_info170 = getelementptr inbounds %struct.r8152, %struct.r8152* %76, i32 0, i32 7, !dbg !18882
  call void @list_splice(%struct.list_head* %tmp_list, %struct.list_head* %rx_info170) #13, !dbg !18883
  %77 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !18884
  %rx_lock171 = getelementptr inbounds %struct.r8152, %struct.r8152* %77, i32 0, i32 13, !dbg !18885
  %78 = load i64, i64* %flags, align 8, !dbg !18886
  store %struct.spinlock* %rx_lock171, %struct.spinlock** %lock.addr.i172, align 8
  store i64 %78, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !820, metadata !15497, metadata !DIExpression()) #11, !dbg !18887
  call void @llvm.dbg.declare(metadata !820, metadata !15501, metadata !DIExpression()) #11, !dbg !18887
  store i32 1, i32* %tmp.i, align 4, !dbg !18887
  %79 = load i32, i32* %tmp.i, align 4, !dbg !18887
  call void @llvm.dbg.declare(metadata !820, metadata !15502, metadata !DIExpression()) #11, !dbg !18888
  call void @llvm.dbg.declare(metadata !820, metadata !15508, metadata !DIExpression()) #11, !dbg !18888
  store i32 1, i32* %tmp8.i, align 4, !dbg !18888
  %80 = load i32, i32* %tmp8.i, align 4, !dbg !18888
  %81 = load i64, i64* %flags.addr.i, align 8, !dbg !18889
  call void @arch_local_irq_restore(i64 %81) #16, !dbg !18889
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !18890, !srcloc !15512
  %82 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i172, align 8, !dbg !18891
  %83 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %82, i32 0, i32 0, !dbg !18891
  %rlock.i173 = bitcast %union.anon.1* %83 to %struct.raw_spinlock*, !dbg !18891
  %84 = load i32, i32* %ret, align 4, !dbg !18892
  ret i32 %84, !dbg !18893
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #2 !dbg !18894 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !18895, metadata !DIExpression()), !dbg !18897
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !18899, metadata !DIExpression()), !dbg !18900
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !12365, metadata !DIExpression()), !dbg !18901
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12375, metadata !DIExpression()), !dbg !18903
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !18904, metadata !DIExpression()), !dbg !18905
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !18906, metadata !DIExpression()), !dbg !18907
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !18908
  %1 = load i64, i64* %nr.addr, align 8, !dbg !18909
  %div = sdiv i64 %1, 64, !dbg !18909
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !18910
  %2 = bitcast i64* %add.ptr to i8*, !dbg !18908
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !18911
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !18912
  %conv.i = trunc i64 %4 to i32, !dbg !18912
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #16, !dbg !18913
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !18914
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !18914
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #16, !dbg !18914
  %7 = load i64, i64* %nr.addr, align 8, !dbg !18915
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !18916
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !18917
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #11, !dbg !18919
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !18920

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !18921
  %12 = bitcast i64* %11 to i8*, !dbg !18921
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !18921
  %shr.i = ashr i64 %13, 3, !dbg !18921
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !18921
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !18923
  %and.i = and i64 %14, 7, !dbg !18923
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !18923
  %shl.i = shl i32 1, %sh_prom.i, !dbg !18923
  %neg.i = xor i32 %shl.i, -1, !dbg !18924
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #11, !dbg !18925, !srcloc !18926
  br label %arch_clear_bit.exit, !dbg !18927

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !18928
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !18930
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #11, !dbg !18931, !srcloc !18932
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !18933
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @napi_enable(%struct.napi_struct* %n) #2 !dbg !18934 {
entry:
  %n.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %n, %struct.napi_struct** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %n.addr, metadata !18937, metadata !DIExpression()), !dbg !18938
  br label %do.body, !dbg !18939

do.body:                                          ; preds = %entry
  %0 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !18940
  %state = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %0, i32 0, i32 1, !dbg !18940
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #13, !dbg !18940
  %lnot = xor i1 %call, true, !dbg !18940
  %lnot1 = xor i1 %lnot, true, !dbg !18940
  %lnot2 = xor i1 %lnot1, true, !dbg !18940
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !18940
  %conv = sext i32 %lnot.ext to i64, !dbg !18940
  %tobool = icmp ne i64 %conv, 0, !dbg !18940
  br i1 %tobool, label %if.then, label %if.end, !dbg !18943

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !18940

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !18944

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !18946

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !18944

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0), i32 509, i32 0, i64 12) #11, !dbg !18948, !srcloc !18950
  br label %do.end6, !dbg !18948

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !18944

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 278) #11, !dbg !18951, !srcloc !18954
  unreachable, !dbg !18955

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !18944

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !18944

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !18943

do.end10:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !18956, !srcloc !18957
  %1 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !18958
  %state11 = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %1, i32 0, i32 1, !dbg !18959
  call void @clear_bit(i64 0, i64* %state11) #13, !dbg !18960
  %2 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !18961
  %state12 = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %2, i32 0, i32 1, !dbg !18962
  call void @clear_bit(i64 3, i64* %state12) #13, !dbg !18963
  ret void, !dbg !18964
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_wake_queue(%struct.net_device* %dev) #2 !dbg !18965 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18966, metadata !DIExpression()), !dbg !18967
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18968
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #13, !dbg !18969
  call void @netif_tx_wake_queue(%struct.netdev_queue* %call) #13, !dbg !18970
  ret void, !dbg !18971
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_queue_stopped(%struct.net_device* %dev) #2 !dbg !18972 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18973, metadata !DIExpression()), !dbg !18974
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18975
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #13, !dbg !18976
  %call1 = call zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %call) #13, !dbg !18977
  ret i1 %call1, !dbg !18978
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_queue_len(%struct.sk_buff_head* %list_) #2 !dbg !18979 {
entry:
  %list_.addr = alloca %struct.sk_buff_head*, align 8
  store %struct.sk_buff_head* %list_, %struct.sk_buff_head** %list_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list_.addr, metadata !18982, metadata !DIExpression()), !dbg !18983
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list_.addr, align 8, !dbg !18984
  %qlen = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %0, i32 0, i32 2, !dbg !18985
  %1 = load i32, i32* %qlen, align 8, !dbg !18985
  ret i32 %1, !dbg !18986
}

; Function Attrs: noredzone
declare dso_local void @netif_carrier_off(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_enable(%struct.tasklet_struct* %t) #2 !dbg !18987 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !15944, metadata !DIExpression()), !dbg !18988
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !15953, metadata !DIExpression()), !dbg !18991
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15957, metadata !DIExpression()), !dbg !18993
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !15959, metadata !DIExpression()), !dbg !18994
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !18995, metadata !DIExpression()), !dbg !18996
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !18997, !srcloc !18998
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !18999
  %count = getelementptr inbounds %struct.tasklet_struct, %struct.tasklet_struct* %0, i32 0, i32 2, !dbg !19000
  store %struct.atomic_t* %count, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !19001
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !19001
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !19002
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !19003
  %conv.i.i = trunc i64 %4 to i32, !dbg !19003
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #16, !dbg !19004
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !19005
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !19005
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #16, !dbg !19005
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !19006
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !19007
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !19008
  call void asm sideeffect "decl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #11, !dbg !19009, !srcloc !15987
  ret void, !dbg !19010
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %dev, i32 %index) #2 !dbg !19011 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %index.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19014, metadata !DIExpression()), !dbg !19015
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !19016, metadata !DIExpression()), !dbg !19017
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19018
  %_tx = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 86, !dbg !19019
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %_tx, align 8, !dbg !19019
  %2 = load i32, i32* %index.addr, align 4, !dbg !19020
  %idxprom = zext i32 %2 to i64, !dbg !19018
  %arrayidx = getelementptr %struct.netdev_queue, %struct.netdev_queue* %1, i64 %idxprom, !dbg !19018
  ret %struct.netdev_queue* %arrayidx, !dbg !19021
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #2 !dbg !19022 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !19023, metadata !DIExpression()), !dbg !19024
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !19025, metadata !DIExpression()), !dbg !19026
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !19027
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !19028
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !19029
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !19029
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !19030
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #13, !dbg !19031
  ret void, !dbg !19032
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @r8152_submit_rx(%struct.r8152* %tp, %struct.rx_agg* %agg, i32 %mem_flags) #2 !dbg !19033 {
entry:
  %lock.addr.i45 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i45, metadata !15428, metadata !DIExpression()), !dbg !19036
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !15435, metadata !DIExpression()), !dbg !19041
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !15437, metadata !DIExpression()), !dbg !19042
  %retval = alloca i32, align 4
  %tp.addr = alloca %struct.r8152*, align 8
  %agg.addr = alloca %struct.rx_agg*, align 8
  %mem_flags.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %urb13 = alloca %struct.urb*, align 8
  %flags15 = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy21 = alloca i64, align 8
  %__dummy222 = alloca i64, align 8
  %tmp25 = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !19049, metadata !DIExpression()), !dbg !19050
  store %struct.rx_agg* %agg, %struct.rx_agg** %agg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rx_agg** %agg.addr, metadata !19051, metadata !DIExpression()), !dbg !19052
  store i32 %mem_flags, i32* %mem_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_flags.addr, metadata !19053, metadata !DIExpression()), !dbg !19054
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19055, metadata !DIExpression()), !dbg !19056
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19057
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 0, !dbg !19059
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !19060
  br i1 %call, label %if.then, label %lor.lhs.false, !dbg !19061

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19062
  %flags1 = getelementptr inbounds %struct.r8152, %struct.r8152* %1, i32 0, i32 0, !dbg !19063
  %call2 = call zeroext i1 @test_bit(i64 2, i64* %flags1) #13, !dbg !19064
  br i1 %call2, label %lor.lhs.false3, label %if.then, !dbg !19065

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19066
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 4, !dbg !19067
  %3 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !19067
  %call4 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %3) #13, !dbg !19068
  br i1 %call4, label %if.end, label %if.then, !dbg !19069

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !19070
  br label %return, !dbg !19070

if.end:                                           ; preds = %lor.lhs.false3
  %4 = load %struct.rx_agg*, %struct.rx_agg** %agg.addr, align 8, !dbg !19071
  %urb = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %4, i32 0, i32 2, !dbg !19072
  %5 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !19072
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19073
  %udev = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 1, !dbg !19074
  %7 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !19074
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19075
  %udev5 = getelementptr inbounds %struct.r8152, %struct.r8152* %8, i32 0, i32 1, !dbg !19075
  %9 = load %struct.usb_device*, %struct.usb_device** %udev5, align 8, !dbg !19075
  %call6 = call i32 @__create_pipe(%struct.usb_device* %9, i32 1) #13, !dbg !19075
  %or = or i32 -1073741824, %call6, !dbg !19075
  %or7 = or i32 %or, 128, !dbg !19075
  %10 = load %struct.rx_agg*, %struct.rx_agg** %agg.addr, align 8, !dbg !19076
  %buffer = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %10, i32 0, i32 5, !dbg !19077
  %11 = load i8*, i8** %buffer, align 8, !dbg !19077
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19078
  %rx_buf_sz = getelementptr inbounds %struct.r8152, %struct.r8152* %12, i32 0, i32 32, !dbg !19079
  %13 = load i32, i32* %rx_buf_sz, align 8, !dbg !19079
  %14 = load %struct.rx_agg*, %struct.rx_agg** %agg.addr, align 8, !dbg !19080
  %15 = bitcast %struct.rx_agg* %14 to i8*, !dbg !19080
  call void @usb_fill_bulk_urb(%struct.urb* %5, %struct.usb_device* %7, i32 %or7, i8* %11, i32 %13, void (%struct.urb*)* @read_bulk_callback, i8* %15) #13, !dbg !19081
  %16 = load %struct.rx_agg*, %struct.rx_agg** %agg.addr, align 8, !dbg !19082
  %urb8 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %16, i32 0, i32 2, !dbg !19083
  %17 = load %struct.urb*, %struct.urb** %urb8, align 8, !dbg !19083
  %18 = load i32, i32* %mem_flags.addr, align 4, !dbg !19084
  %call9 = call i32 @usb_submit_urb(%struct.urb* %17, i32 %18) #13, !dbg !19085
  store i32 %call9, i32* %ret, align 4, !dbg !19086
  %19 = load i32, i32* %ret, align 4, !dbg !19087
  %cmp = icmp eq i32 %19, -19, !dbg !19088
  br i1 %cmp, label %if.then10, label %if.else, !dbg !19089

if.then10:                                        ; preds = %if.end
  %20 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19090
  call void @rtl_set_unplug(%struct.r8152* %20) #13, !dbg !19092
  %21 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19093
  %netdev11 = getelementptr inbounds %struct.r8152, %struct.r8152* %21, i32 0, i32 4, !dbg !19094
  %22 = load %struct.net_device*, %struct.net_device** %netdev11, align 8, !dbg !19094
  call void @netif_device_detach(%struct.net_device* %22) #13, !dbg !19095
  br label %if.end44, !dbg !19096

if.else:                                          ; preds = %if.end
  %23 = load i32, i32* %ret, align 4, !dbg !19097
  %tobool = icmp ne i32 %23, 0, !dbg !19097
  br i1 %tobool, label %if.then12, label %if.end43, !dbg !19098

if.then12:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.urb** %urb13, metadata !19099, metadata !DIExpression()), !dbg !19100
  %24 = load %struct.rx_agg*, %struct.rx_agg** %agg.addr, align 8, !dbg !19101
  %urb14 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %24, i32 0, i32 2, !dbg !19102
  %25 = load %struct.urb*, %struct.urb** %urb14, align 8, !dbg !19102
  store %struct.urb* %25, %struct.urb** %urb13, align 8, !dbg !19100
  call void @llvm.dbg.declare(metadata i64* %flags15, metadata !19103, metadata !DIExpression()), !dbg !19104
  %26 = load %struct.urb*, %struct.urb** %urb13, align 8, !dbg !19105
  %actual_length = getelementptr inbounds %struct.urb, %struct.urb* %26, i32 0, i32 20, !dbg !19106
  store i32 0, i32* %actual_length, align 4, !dbg !19107
  br label %do.body, !dbg !19108

do.body:                                          ; preds = %if.then12
  br label %do.body16, !dbg !19109

do.body16:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !19110, metadata !DIExpression()), !dbg !19112
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !19113, metadata !DIExpression()), !dbg !19112
  %cmp17 = icmp eq i64* %__dummy, %__dummy2, !dbg !19112
  %conv = zext i1 %cmp17 to i32, !dbg !19112
  store i32 1, i32* %tmp, align 4, !dbg !19112
  %27 = load i32, i32* %tmp, align 4, !dbg !19112
  br label %do.body18, !dbg !19114

do.body18:                                        ; preds = %do.body16
  br label %do.body19, !dbg !19115

do.body19:                                        ; preds = %do.body18
  br label %do.body20, !dbg !19116

do.body20:                                        ; preds = %do.body19
  call void @llvm.dbg.declare(metadata i64* %__dummy21, metadata !19118, metadata !DIExpression()), !dbg !19121
  call void @llvm.dbg.declare(metadata i64* %__dummy222, metadata !19122, metadata !DIExpression()), !dbg !19121
  %cmp23 = icmp eq i64* %__dummy21, %__dummy222, !dbg !19121
  %conv24 = zext i1 %cmp23 to i32, !dbg !19121
  store i32 1, i32* %tmp25, align 4, !dbg !19121
  %28 = load i32, i32* %tmp25, align 4, !dbg !19121
  %call26 = call i64 @arch_local_irq_save() #13, !dbg !19123
  store i64 %call26, i64* %flags15, align 8, !dbg !19123
  br label %do.end, !dbg !19123

do.end:                                           ; preds = %do.body20
  br label %do.end27, !dbg !19116

do.end27:                                         ; preds = %do.end
  br label %do.body28, !dbg !19115

do.body28:                                        ; preds = %do.end27
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !19124, !srcloc !19125
  br label %do.body29, !dbg !19124

do.body29:                                        ; preds = %do.body28
  %29 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19126
  %rx_lock = getelementptr inbounds %struct.r8152, %struct.r8152* %29, i32 0, i32 13, !dbg !19126
  store %struct.spinlock* %rx_lock, %struct.spinlock** %lock.addr.i, align 8
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !19127
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !19128
  %rlock.i = bitcast %union.anon.1* %31 to %struct.raw_spinlock*, !dbg !19128
  br label %do.end31, !dbg !19126

do.end31:                                         ; preds = %do.body29
  br label %do.end32, !dbg !19124

do.end32:                                         ; preds = %do.end31
  br label %do.end33, !dbg !19115

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !19114

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !19109

do.end35:                                         ; preds = %do.end34
  %32 = load %struct.rx_agg*, %struct.rx_agg** %agg.addr, align 8, !dbg !19129
  %list = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %32, i32 0, i32 0, !dbg !19130
  %33 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19131
  %rx_done = getelementptr inbounds %struct.r8152, %struct.r8152* %33, i32 0, i32 9, !dbg !19132
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %rx_done) #13, !dbg !19133
  %34 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19134
  %rx_lock36 = getelementptr inbounds %struct.r8152, %struct.r8152* %34, i32 0, i32 13, !dbg !19135
  %35 = load i64, i64* %flags15, align 8, !dbg !19136
  store %struct.spinlock* %rx_lock36, %struct.spinlock** %lock.addr.i45, align 8
  store i64 %35, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !820, metadata !15497, metadata !DIExpression()) #11, !dbg !19137
  call void @llvm.dbg.declare(metadata !820, metadata !15501, metadata !DIExpression()) #11, !dbg !19137
  store i32 1, i32* %tmp.i, align 4, !dbg !19137
  %36 = load i32, i32* %tmp.i, align 4, !dbg !19137
  call void @llvm.dbg.declare(metadata !820, metadata !15502, metadata !DIExpression()) #11, !dbg !19138
  call void @llvm.dbg.declare(metadata !820, metadata !15508, metadata !DIExpression()) #11, !dbg !19138
  store i32 1, i32* %tmp8.i, align 4, !dbg !19138
  %37 = load i32, i32* %tmp8.i, align 4, !dbg !19138
  %38 = load i64, i64* %flags.addr.i, align 8, !dbg !19139
  call void @arch_local_irq_restore(i64 %38) #16, !dbg !19139
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !19140, !srcloc !15512
  %39 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i45, align 8, !dbg !19141
  %40 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %39, i32 0, i32 0, !dbg !19141
  %rlock.i46 = bitcast %union.anon.1* %40 to %struct.raw_spinlock*, !dbg !19141
  br label %do.body37, !dbg !19142

do.body37:                                        ; preds = %do.end35
  %41 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19143
  %msg_enable = getelementptr inbounds %struct.r8152, %struct.r8152* %41, i32 0, i32 28, !dbg !19143
  %42 = load i32, i32* %msg_enable, align 8, !dbg !19143
  %and = and i32 %42, 64, !dbg !19143
  %tobool38 = icmp ne i32 %and, 0, !dbg !19143
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !19146

if.then39:                                        ; preds = %do.body37
  %43 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19143
  %netdev40 = getelementptr inbounds %struct.r8152, %struct.r8152* %43, i32 0, i32 4, !dbg !19143
  %44 = load %struct.net_device*, %struct.net_device** %netdev40, align 8, !dbg !19143
  %45 = load %struct.rx_agg*, %struct.rx_agg** %agg.addr, align 8, !dbg !19143
  %46 = load i32, i32* %ret, align 4, !dbg !19143
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %44, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22, i64 0, i64 0), %struct.rx_agg* %45, i32 %46) #14, !dbg !19143
  br label %if.end41, !dbg !19143

if.end41:                                         ; preds = %if.then39, %do.body37
  br label %do.end42, !dbg !19146

do.end42:                                         ; preds = %if.end41
  %47 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19147
  %napi = getelementptr inbounds %struct.r8152, %struct.r8152* %47, i32 0, i32 2, !dbg !19148
  call void @napi_schedule(%struct.napi_struct* %napi) #13, !dbg !19149
  br label %if.end43, !dbg !19150

if.end43:                                         ; preds = %do.end42, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then10
  %48 = load i32, i32* %ret, align 4, !dbg !19151
  store i32 %48, i32* %retval, align 4, !dbg !19152
  br label %return, !dbg !19152

return:                                           ; preds = %if.end44, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !19153
  ret i32 %49, !dbg !19153
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !19154 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !19157, metadata !DIExpression()), !dbg !19158
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !19159, metadata !DIExpression()), !dbg !19160
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !19161, metadata !DIExpression()), !dbg !19162
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !19163
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !19165
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !19166
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #13, !dbg !19167
  br i1 %call, label %if.end, label %if.then, !dbg !19168

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !19169

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !19170
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !19171
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !19172
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !19173
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !19174
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !19175
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !19176
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !19177
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !19178
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !19179
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !19180
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !19181
  br label %do.body, !dbg !19182

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !19183

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !19185

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !19183

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !19187
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !19187
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !19187
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !19187
  br label %do.end7, !dbg !19187

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !19183

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !19189
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !19190 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !19193, metadata !DIExpression()), !dbg !19194
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !19195, metadata !DIExpression()), !dbg !19196
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !19197, metadata !DIExpression()), !dbg !19198
  ret i1 true, !dbg !19199
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb_fill_bulk_urb(%struct.urb* %urb, %struct.usb_device* %dev, i32 %pipe, i8* %transfer_buffer, i32 %buffer_length, void (%struct.urb*)* %complete_fn, i8* %context) #2 !dbg !19200 {
entry:
  %urb.addr = alloca %struct.urb*, align 8
  %dev.addr = alloca %struct.usb_device*, align 8
  %pipe.addr = alloca i32, align 4
  %transfer_buffer.addr = alloca i8*, align 8
  %buffer_length.addr = alloca i32, align 4
  %complete_fn.addr = alloca void (%struct.urb*)*, align 8
  %context.addr = alloca i8*, align 8
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !19203, metadata !DIExpression()), !dbg !19204
  store %struct.usb_device* %dev, %struct.usb_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev.addr, metadata !19205, metadata !DIExpression()), !dbg !19206
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !19207, metadata !DIExpression()), !dbg !19208
  store i8* %transfer_buffer, i8** %transfer_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %transfer_buffer.addr, metadata !19209, metadata !DIExpression()), !dbg !19210
  store i32 %buffer_length, i32* %buffer_length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_length.addr, metadata !19211, metadata !DIExpression()), !dbg !19212
  store void (%struct.urb*)* %complete_fn, void (%struct.urb*)** %complete_fn.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.urb*)** %complete_fn.addr, metadata !19213, metadata !DIExpression()), !dbg !19214
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !19215, metadata !DIExpression()), !dbg !19216
  %0 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !19217
  %1 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19218
  %dev1 = getelementptr inbounds %struct.urb, %struct.urb* %1, i32 0, i32 8, !dbg !19219
  store %struct.usb_device* %0, %struct.usb_device** %dev1, align 8, !dbg !19220
  %2 = load i32, i32* %pipe.addr, align 4, !dbg !19221
  %3 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19222
  %pipe2 = getelementptr inbounds %struct.urb, %struct.urb* %3, i32 0, i32 10, !dbg !19223
  store i32 %2, i32* %pipe2, align 8, !dbg !19224
  %4 = load i8*, i8** %transfer_buffer.addr, align 8, !dbg !19225
  %5 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19226
  %transfer_buffer3 = getelementptr inbounds %struct.urb, %struct.urb* %5, i32 0, i32 14, !dbg !19227
  store i8* %4, i8** %transfer_buffer3, align 8, !dbg !19228
  %6 = load i32, i32* %buffer_length.addr, align 4, !dbg !19229
  %7 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19230
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %7, i32 0, i32 19, !dbg !19231
  store i32 %6, i32* %transfer_buffer_length, align 8, !dbg !19232
  %8 = load void (%struct.urb*)*, void (%struct.urb*)** %complete_fn.addr, align 8, !dbg !19233
  %9 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19234
  %complete = getelementptr inbounds %struct.urb, %struct.urb* %9, i32 0, i32 28, !dbg !19235
  store void (%struct.urb*)* %8, void (%struct.urb*)** %complete, align 8, !dbg !19236
  %10 = load i8*, i8** %context.addr, align 8, !dbg !19237
  %11 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19238
  %context4 = getelementptr inbounds %struct.urb, %struct.urb* %11, i32 0, i32 27, !dbg !19239
  store i8* %10, i8** %context4, align 8, !dbg !19240
  ret void, !dbg !19241
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @read_bulk_callback(%struct.urb* %urb) #2 !dbg !19242 {
entry:
  %lock.addr.i53 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i53, metadata !15428, metadata !DIExpression()), !dbg !19243
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !15435, metadata !DIExpression()), !dbg !19246
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !15437, metadata !DIExpression()), !dbg !19247
  %urb.addr = alloca %struct.urb*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %status = alloca i32, align 4
  %agg = alloca %struct.rx_agg*, align 8
  %tp = alloca %struct.r8152*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy24 = alloca i64, align 8
  %__dummy225 = alloca i64, align 8
  %tmp28 = alloca i32, align 4
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !19254, metadata !DIExpression()), !dbg !19255
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !19256, metadata !DIExpression()), !dbg !19257
  call void @llvm.dbg.declare(metadata i32* %status, metadata !19258, metadata !DIExpression()), !dbg !19259
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19260
  %status1 = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 12, !dbg !19261
  %1 = load i32, i32* %status1, align 8, !dbg !19261
  store i32 %1, i32* %status, align 4, !dbg !19259
  call void @llvm.dbg.declare(metadata %struct.rx_agg** %agg, metadata !19262, metadata !DIExpression()), !dbg !19263
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !19264, metadata !DIExpression()), !dbg !19265
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !19266, metadata !DIExpression()), !dbg !19267
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19268
  %context = getelementptr inbounds %struct.urb, %struct.urb* %2, i32 0, i32 27, !dbg !19269
  %3 = load i8*, i8** %context, align 8, !dbg !19269
  %4 = bitcast i8* %3 to %struct.rx_agg*, !dbg !19268
  store %struct.rx_agg* %4, %struct.rx_agg** %agg, align 8, !dbg !19270
  %5 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !19271
  %tobool = icmp ne %struct.rx_agg* %5, null, !dbg !19271
  br i1 %tobool, label %if.end, label %if.then, !dbg !19273

if.then:                                          ; preds = %entry
  br label %return, !dbg !19274

if.end:                                           ; preds = %entry
  %6 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !19275
  %context2 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %6, i32 0, i32 3, !dbg !19276
  %7 = load %struct.r8152*, %struct.r8152** %context2, align 8, !dbg !19276
  store %struct.r8152* %7, %struct.r8152** %tp, align 8, !dbg !19277
  %8 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !19278
  %tobool3 = icmp ne %struct.r8152* %8, null, !dbg !19278
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !19280

if.then4:                                         ; preds = %if.end
  br label %return, !dbg !19281

if.end5:                                          ; preds = %if.end
  %9 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !19282
  %flags6 = getelementptr inbounds %struct.r8152, %struct.r8152* %9, i32 0, i32 0, !dbg !19284
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags6) #13, !dbg !19285
  br i1 %call, label %if.then7, label %if.end8, !dbg !19286

if.then7:                                         ; preds = %if.end5
  br label %return, !dbg !19287

if.end8:                                          ; preds = %if.end5
  %10 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !19288
  %flags9 = getelementptr inbounds %struct.r8152, %struct.r8152* %10, i32 0, i32 0, !dbg !19290
  %call10 = call zeroext i1 @test_bit(i64 2, i64* %flags9) #13, !dbg !19291
  br i1 %call10, label %if.end12, label %if.then11, !dbg !19292

if.then11:                                        ; preds = %if.end8
  br label %return, !dbg !19293

if.end12:                                         ; preds = %if.end8
  %11 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !19294
  %netdev13 = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 4, !dbg !19295
  %12 = load %struct.net_device*, %struct.net_device** %netdev13, align 8, !dbg !19295
  store %struct.net_device* %12, %struct.net_device** %netdev, align 8, !dbg !19296
  %13 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !19297
  %call14 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %13) #13, !dbg !19299
  br i1 %call14, label %if.end16, label %if.then15, !dbg !19300

if.then15:                                        ; preds = %if.end12
  br label %return, !dbg !19301

if.end16:                                         ; preds = %if.end12
  %14 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !19302
  %udev = getelementptr inbounds %struct.r8152, %struct.r8152* %14, i32 0, i32 1, !dbg !19303
  %15 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !19303
  call void @usb_mark_last_busy(%struct.usb_device* %15) #13, !dbg !19304
  %16 = load i32, i32* %status, align 4, !dbg !19305
  switch i32 %16, label %sw.default [
    i32 0, label %sw.bb
    i32 -108, label %sw.bb40
    i32 -2, label %sw.bb42
    i32 -62, label %sw.bb43
  ], !dbg !19306

sw.bb:                                            ; preds = %if.end16
  %17 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19307
  %actual_length = getelementptr inbounds %struct.urb, %struct.urb* %17, i32 0, i32 20, !dbg !19309
  %18 = load i32, i32* %actual_length, align 4, !dbg !19309
  %cmp = icmp ult i32 %18, 60, !dbg !19310
  br i1 %cmp, label %if.then17, label %if.end18, !dbg !19311

if.then17:                                        ; preds = %sw.bb
  br label %sw.epilog, !dbg !19312

if.end18:                                         ; preds = %sw.bb
  br label %do.body, !dbg !19313

do.body:                                          ; preds = %if.end18
  br label %do.body19, !dbg !19314

do.body19:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !19315, metadata !DIExpression()), !dbg !19317
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !19318, metadata !DIExpression()), !dbg !19317
  %cmp20 = icmp eq i64* %__dummy, %__dummy2, !dbg !19317
  %conv = zext i1 %cmp20 to i32, !dbg !19317
  store i32 1, i32* %tmp, align 4, !dbg !19317
  %19 = load i32, i32* %tmp, align 4, !dbg !19317
  br label %do.body21, !dbg !19319

do.body21:                                        ; preds = %do.body19
  br label %do.body22, !dbg !19320

do.body22:                                        ; preds = %do.body21
  br label %do.body23, !dbg !19321

do.body23:                                        ; preds = %do.body22
  call void @llvm.dbg.declare(metadata i64* %__dummy24, metadata !19323, metadata !DIExpression()), !dbg !19326
  call void @llvm.dbg.declare(metadata i64* %__dummy225, metadata !19327, metadata !DIExpression()), !dbg !19326
  %cmp26 = icmp eq i64* %__dummy24, %__dummy225, !dbg !19326
  %conv27 = zext i1 %cmp26 to i32, !dbg !19326
  store i32 1, i32* %tmp28, align 4, !dbg !19326
  %20 = load i32, i32* %tmp28, align 4, !dbg !19326
  %call29 = call i64 @arch_local_irq_save() #13, !dbg !19328
  store i64 %call29, i64* %flags, align 8, !dbg !19328
  br label %do.end, !dbg !19328

do.end:                                           ; preds = %do.body23
  br label %do.end30, !dbg !19321

do.end30:                                         ; preds = %do.end
  br label %do.body31, !dbg !19320

do.body31:                                        ; preds = %do.end30
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !19329, !srcloc !19330
  br label %do.body32, !dbg !19329

do.body32:                                        ; preds = %do.body31
  %21 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !19331
  %rx_lock = getelementptr inbounds %struct.r8152, %struct.r8152* %21, i32 0, i32 13, !dbg !19331
  store %struct.spinlock* %rx_lock, %struct.spinlock** %lock.addr.i, align 8
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !19332
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !19333
  %rlock.i = bitcast %union.anon.1* %23 to %struct.raw_spinlock*, !dbg !19333
  br label %do.end34, !dbg !19331

do.end34:                                         ; preds = %do.body32
  br label %do.end35, !dbg !19329

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !19320

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !19319

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !19314

do.end38:                                         ; preds = %do.end37
  %24 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !19334
  %list = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %24, i32 0, i32 0, !dbg !19335
  %25 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !19336
  %rx_done = getelementptr inbounds %struct.r8152, %struct.r8152* %25, i32 0, i32 9, !dbg !19337
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %rx_done) #13, !dbg !19338
  %26 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !19339
  %rx_lock39 = getelementptr inbounds %struct.r8152, %struct.r8152* %26, i32 0, i32 13, !dbg !19340
  %27 = load i64, i64* %flags, align 8, !dbg !19341
  store %struct.spinlock* %rx_lock39, %struct.spinlock** %lock.addr.i53, align 8
  store i64 %27, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !820, metadata !15497, metadata !DIExpression()) #11, !dbg !19342
  call void @llvm.dbg.declare(metadata !820, metadata !15501, metadata !DIExpression()) #11, !dbg !19342
  store i32 1, i32* %tmp.i, align 4, !dbg !19342
  %28 = load i32, i32* %tmp.i, align 4, !dbg !19342
  call void @llvm.dbg.declare(metadata !820, metadata !15502, metadata !DIExpression()) #11, !dbg !19343
  call void @llvm.dbg.declare(metadata !820, metadata !15508, metadata !DIExpression()) #11, !dbg !19343
  store i32 1, i32* %tmp8.i, align 4, !dbg !19343
  %29 = load i32, i32* %tmp8.i, align 4, !dbg !19343
  %30 = load i64, i64* %flags.addr.i, align 8, !dbg !19344
  call void @arch_local_irq_restore(i64 %30) #16, !dbg !19344
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !19345, !srcloc !15512
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i53, align 8, !dbg !19346
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !19346
  %rlock.i54 = bitcast %union.anon.1* %32 to %struct.raw_spinlock*, !dbg !19346
  %33 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !19347
  %napi = getelementptr inbounds %struct.r8152, %struct.r8152* %33, i32 0, i32 2, !dbg !19348
  call void @napi_schedule(%struct.napi_struct* %napi) #13, !dbg !19349
  br label %return, !dbg !19350

sw.bb40:                                          ; preds = %if.end16
  %34 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !19351
  call void @rtl_set_unplug(%struct.r8152* %34) #13, !dbg !19352
  %35 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !19353
  %netdev41 = getelementptr inbounds %struct.r8152, %struct.r8152* %35, i32 0, i32 4, !dbg !19354
  %36 = load %struct.net_device*, %struct.net_device** %netdev41, align 8, !dbg !19354
  call void @netif_device_detach(%struct.net_device* %36) #13, !dbg !19355
  br label %return, !dbg !19356

sw.bb42:                                          ; preds = %if.end16
  br label %return, !dbg !19357

sw.bb43:                                          ; preds = %if.end16
  %call44 = call i32 @net_ratelimit() #13, !dbg !19358
  %tobool45 = icmp ne i32 %call44, 0, !dbg !19358
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !19360

if.then46:                                        ; preds = %sw.bb43
  %37 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !19361
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %37, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0)) #14, !dbg !19362
  br label %if.end47, !dbg !19362

if.end47:                                         ; preds = %if.then46, %sw.bb43
  br label %sw.epilog, !dbg !19363

sw.default:                                       ; preds = %if.end16
  %call48 = call i32 @net_ratelimit() #13, !dbg !19364
  %tobool49 = icmp ne i32 %call48, 0, !dbg !19364
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !19366

if.then50:                                        ; preds = %sw.default
  %38 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !19367
  %39 = load i32, i32* %status, align 4, !dbg !19368
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %38, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0), i32 %39) #14, !dbg !19369
  br label %if.end51, !dbg !19369

if.end51:                                         ; preds = %if.then50, %sw.default
  br label %sw.epilog, !dbg !19370

sw.epilog:                                        ; preds = %if.end51, %if.end47, %if.then17
  %40 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !19371
  %41 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !19372
  %call52 = call i32 @r8152_submit_rx(%struct.r8152* %40, %struct.rx_agg* %41, i32 2592) #13, !dbg !19373
  br label %return, !dbg !19374

return:                                           ; preds = %sw.epilog, %sw.bb42, %sw.bb40, %do.end38, %if.then15, %if.then11, %if.then7, %if.then4, %if.then
  ret void, !dbg !19374
}

; Function Attrs: noredzone
declare dso_local i32 @usb_submit_urb(%struct.urb*, i32) #1

; Function Attrs: noredzone
declare dso_local void @netif_device_detach(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @napi_schedule(%struct.napi_struct* %n) #2 !dbg !19375 {
entry:
  %n.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %n, %struct.napi_struct** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %n.addr, metadata !19376, metadata !DIExpression()), !dbg !19377
  %0 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !19378
  %call = call zeroext i1 @napi_schedule_prep(%struct.napi_struct* %0) #13, !dbg !19380
  br i1 %call, label %if.then, label %if.end, !dbg !19381

if.then:                                          ; preds = %entry
  %1 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !19382
  call void @__napi_schedule(%struct.napi_struct* %1) #13, !dbg !19383
  br label %if.end, !dbg !19383

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !19384
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb_mark_last_busy(%struct.usb_device* %udev) #2 !dbg !19385 {
entry:
  %udev.addr = alloca %struct.usb_device*, align 8
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !19388, metadata !DIExpression()), !dbg !19389
  %0 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !19390
  %dev = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 14, !dbg !19391
  call void @pm_runtime_mark_last_busy(%struct.device* %dev) #13, !dbg !19392
  ret void, !dbg !19393
}

; Function Attrs: noredzone
declare dso_local i32 @net_ratelimit() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_mark_last_busy(%struct.device* %dev) #2 !dbg !19394 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !19396, metadata !DIExpression()), !dbg !19397
  br label %do.body, !dbg !19398

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !19399

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !19401

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !19399

do.body2:                                         ; preds = %do.end
  %call = call i64 @ktime_get_mono_fast_ns() #13, !dbg !19403
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19403
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !19403
  %last_busy = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 21, !dbg !19403
  store volatile i64 %call, i64* %last_busy, align 8, !dbg !19403
  br label %do.end3, !dbg !19403

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !19399

do.end4:                                          ; preds = %do.end3
  ret void, !dbg !19405
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get_mono_fast_ns() #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @napi_schedule_prep(%struct.napi_struct*) #1

; Function Attrs: noredzone
declare dso_local void @__napi_schedule(%struct.napi_struct*) #1

; Function Attrs: noredzone
declare dso_local void @netif_tx_wake_queue(%struct.netdev_queue*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %dev_queue) #2 !dbg !19406 {
entry:
  %dev_queue.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %dev_queue, %struct.netdev_queue** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr, metadata !19411, metadata !DIExpression()), !dbg !19412
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !19413
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 10, !dbg !19414
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #13, !dbg !19415
  ret i1 %call, !dbg !19416
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_notice(%struct.net_device*, i8*, ...) #4

; Function Attrs: noredzone nounwind readonly
declare dso_local i32 @crc32_le(i32, i8*, i64) #12

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__bitrev32(i32 %x) #2 !dbg !19417 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !19421, metadata !DIExpression()), !dbg !19422
  %0 = load i32, i32* %x.addr, align 4, !dbg !19423
  %and = and i32 %0, 65535, !dbg !19424
  %conv = trunc i32 %and to i16, !dbg !19423
  %call = call zeroext i16 @__bitrev16(i16 zeroext %conv) #13, !dbg !19425
  %conv1 = zext i16 %call to i32, !dbg !19425
  %shl = shl i32 %conv1, 16, !dbg !19426
  %1 = load i32, i32* %x.addr, align 4, !dbg !19427
  %shr = lshr i32 %1, 16, !dbg !19428
  %conv2 = trunc i32 %shr to i16, !dbg !19427
  %call3 = call zeroext i16 @__bitrev16(i16 zeroext %conv2) #13, !dbg !19429
  %conv4 = zext i16 %call3 to i32, !dbg !19429
  %or = or i32 %shl, %conv4, !dbg !19430
  ret i32 %or, !dbg !19431
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__fswab32(i32 %val) #8 !dbg !19432 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19436, metadata !DIExpression()), !dbg !19437
  %0 = load i32, i32* %val.addr, align 4, !dbg !19438
  %call = call i32 @__arch_swab32(i32 %0) #15, !dbg !19439
  ret i32 %call, !dbg !19440
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pla_ocp_write(%struct.r8152* %tp, i16 zeroext %index, i16 zeroext %byteen, i16 zeroext %size, i8* %data) #2 !dbg !19441 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %index.addr = alloca i16, align 2
  %byteen.addr = alloca i16, align 2
  %size.addr = alloca i16, align 2
  %data.addr = alloca i8*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !19442, metadata !DIExpression()), !dbg !19443
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !19444, metadata !DIExpression()), !dbg !19445
  store i16 %byteen, i16* %byteen.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %byteen.addr, metadata !19446, metadata !DIExpression()), !dbg !19447
  store i16 %size, i16* %size.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %size.addr, metadata !19448, metadata !DIExpression()), !dbg !19449
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !19450, metadata !DIExpression()), !dbg !19451
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19452
  %1 = load i16, i16* %index.addr, align 2, !dbg !19453
  %2 = load i16, i16* %byteen.addr, align 2, !dbg !19454
  %3 = load i16, i16* %size.addr, align 2, !dbg !19455
  %4 = load i8*, i8** %data.addr, align 8, !dbg !19456
  %call = call i32 @generic_ocp_write(%struct.r8152* %0, i16 zeroext %1, i16 zeroext %2, i16 zeroext %3, i8* %4, i16 zeroext 256) #13, !dbg !19457
  ret i32 %call, !dbg !19458
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @__bitrev16(i16 zeroext %x) #2 !dbg !19459 {
entry:
  %x.addr = alloca i16, align 2
  store i16 %x, i16* %x.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !19462, metadata !DIExpression()), !dbg !19463
  %0 = load i16, i16* %x.addr, align 2, !dbg !19464
  %conv = zext i16 %0 to i32, !dbg !19464
  %and = and i32 %conv, 255, !dbg !19465
  %conv1 = trunc i32 %and to i8, !dbg !19464
  %call = call zeroext i8 @__bitrev8(i8 zeroext %conv1) #13, !dbg !19466
  %conv2 = zext i8 %call to i32, !dbg !19466
  %shl = shl i32 %conv2, 8, !dbg !19467
  %1 = load i16, i16* %x.addr, align 2, !dbg !19468
  %conv3 = zext i16 %1 to i32, !dbg !19468
  %shr = ashr i32 %conv3, 8, !dbg !19469
  %conv4 = trunc i32 %shr to i8, !dbg !19468
  %call5 = call zeroext i8 @__bitrev8(i8 zeroext %conv4) #13, !dbg !19470
  %conv6 = zext i8 %call5 to i32, !dbg !19470
  %or = or i32 %shl, %conv6, !dbg !19471
  %conv7 = trunc i32 %or to i16, !dbg !19472
  ret i16 %conv7, !dbg !19473
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @__bitrev8(i8 zeroext %byte) #2 !dbg !19474 {
entry:
  %byte.addr = alloca i8, align 1
  store i8 %byte, i8* %byte.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %byte.addr, metadata !19477, metadata !DIExpression()), !dbg !19478
  %0 = load i8, i8* %byte.addr, align 1, !dbg !19479
  %idxprom = zext i8 %0 to i64, !dbg !19480
  %arrayidx = getelementptr [256 x i8], [256 x i8]* @byte_rev_table, i64 0, i64 %idxprom, !dbg !19480
  %1 = load i8, i8* %arrayidx, align 1, !dbg !19480
  ret i8 %1, !dbg !19481
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__arch_swab32(i32 %val) #8 !dbg !19482 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19484, metadata !DIExpression()), !dbg !19485
  %0 = load i32, i32* %val.addr, align 4, !dbg !19486
  %1 = call i32 asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %0) #18, !dbg !19487, !srcloc !19488
  store i32 %1, i32* %val.addr, align 4, !dbg !19487
  %2 = load i32, i32* %val.addr, align 4, !dbg !19489
  ret i32 %2, !dbg !19490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #2 !dbg !19491 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !19492, metadata !DIExpression()), !dbg !19494
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !19496, metadata !DIExpression()), !dbg !19497
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !19498, metadata !DIExpression()), !dbg !19500
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !15953, metadata !DIExpression()), !dbg !19501
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !15957, metadata !DIExpression()), !dbg !19503
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !19504, metadata !DIExpression()), !dbg !19505
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !19506, metadata !DIExpression()), !dbg !19507
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !19508
  %1 = load i64, i64* %nr.addr, align 8, !dbg !19509
  %div = sdiv i64 %1, 64, !dbg !19509
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !19510
  %2 = bitcast i64* %add.ptr to i8*, !dbg !19508
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !19511
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !19512
  %conv.i = trunc i64 %4 to i32, !dbg !19512
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #16, !dbg !19513
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !19514
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !19514
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #16, !dbg !19514
  %7 = load i64, i64* %nr.addr, align 8, !dbg !19515
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !19516
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !19500
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !19500
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #11, !dbg !19500, !srcloc !19517
  store i8 %11, i8* %c.i, align 1, !dbg !19500
  %12 = load i8, i8* %c.i, align 1, !dbg !19500
  %tobool.i = trunc i8 %12 to i1, !dbg !19500
  %frombool.i = zext i1 %tobool.i to i8, !dbg !19500
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !19500
  %13 = load i8, i8* %tmp.i, align 1, !dbg !19500
  %tobool1.i = trunc i8 %13 to i1, !dbg !19500
  ret i1 %tobool1.i, !dbg !19518
}

; Function Attrs: noredzone
declare dso_local void @__tasklet_schedule(%struct.tasklet_struct*) #1

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_request_firmware(%struct.r8152* %tp) #2 !dbg !19519 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %rtl_fw = alloca %struct.rtl_fw*, align 8
  %rc = alloca i64, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !19520, metadata !DIExpression()), !dbg !19521
  call void @llvm.dbg.declare(metadata %struct.rtl_fw** %rtl_fw, metadata !19522, metadata !DIExpression()), !dbg !19523
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19524
  %rtl_fw1 = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 23, !dbg !19525
  store %struct.rtl_fw* %rtl_fw1, %struct.rtl_fw** %rtl_fw, align 8, !dbg !19523
  call void @llvm.dbg.declare(metadata i64* %rc, metadata !19526, metadata !DIExpression()), !dbg !19527
  %1 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !19528
  %fw = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %1, i32 0, i32 1, !dbg !19530
  %2 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !19530
  %tobool = icmp ne %struct.firmware* %2, null, !dbg !19528
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !19531

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !19532
  %fw_name = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %3, i32 0, i32 0, !dbg !19533
  %4 = load i8*, i8** %fw_name, align 8, !dbg !19533
  %tobool2 = icmp ne i8* %4, null, !dbg !19532
  br i1 %tobool2, label %if.end, label %if.then, !dbg !19534

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19535
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 3, !dbg !19535
  %6 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !19535
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %6, i32 0, i32 7, !dbg !19535
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0)) #14, !dbg !19535
  store i64 0, i64* %rc, align 8, !dbg !19537
  br label %result, !dbg !19538

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !19539
  %fw3 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %7, i32 0, i32 1, !dbg !19540
  %8 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !19541
  %fw_name4 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %8, i32 0, i32 0, !dbg !19542
  %9 = load i8*, i8** %fw_name4, align 8, !dbg !19542
  %10 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19543
  %intf5 = getelementptr inbounds %struct.r8152, %struct.r8152* %10, i32 0, i32 3, !dbg !19544
  %11 = load %struct.usb_interface*, %struct.usb_interface** %intf5, align 8, !dbg !19544
  %dev6 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %11, i32 0, i32 7, !dbg !19545
  %call = call i32 @request_firmware(%struct.firmware** %fw3, i8* %9, %struct.device* %dev6) #13, !dbg !19546
  %conv = sext i32 %call to i64, !dbg !19546
  store i64 %conv, i64* %rc, align 8, !dbg !19547
  %12 = load i64, i64* %rc, align 8, !dbg !19548
  %cmp = icmp slt i64 %12, 0, !dbg !19550
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !19551

if.then8:                                         ; preds = %if.end
  br label %result, !dbg !19552

if.end9:                                          ; preds = %if.end
  %13 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19553
  %14 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !19554
  %call10 = call i64 @rtl8152_check_firmware(%struct.r8152* %13, %struct.rtl_fw* %14) #13, !dbg !19555
  store i64 %call10, i64* %rc, align 8, !dbg !19556
  %15 = load i64, i64* %rc, align 8, !dbg !19557
  %cmp11 = icmp slt i64 %15, 0, !dbg !19559
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !19560

if.then13:                                        ; preds = %if.end9
  %16 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !19561
  %fw14 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %16, i32 0, i32 1, !dbg !19562
  %17 = load %struct.firmware*, %struct.firmware** %fw14, align 8, !dbg !19562
  call void @release_firmware(%struct.firmware* %17) #13, !dbg !19563
  br label %if.end15, !dbg !19563

if.end15:                                         ; preds = %if.then13, %if.end9
  br label %result, !dbg !19564

result:                                           ; preds = %if.end15, %if.then8, %if.then
  call void @llvm.dbg.label(metadata !19565), !dbg !19566
  %18 = load i64, i64* %rc, align 8, !dbg !19567
  %tobool16 = icmp ne i64 %18, 0, !dbg !19567
  br i1 %tobool16, label %if.then17, label %if.end23, !dbg !19569

if.then17:                                        ; preds = %result
  %19 = load i64, i64* %rc, align 8, !dbg !19570
  %call18 = call i8* @ERR_PTR(i64 %19) #13, !dbg !19572
  %20 = bitcast i8* %call18 to %struct.firmware*, !dbg !19572
  %21 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !19573
  %fw19 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %21, i32 0, i32 1, !dbg !19574
  store %struct.firmware* %20, %struct.firmware** %fw19, align 8, !dbg !19575
  %22 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19576
  %intf20 = getelementptr inbounds %struct.r8152, %struct.r8152* %22, i32 0, i32 3, !dbg !19576
  %23 = load %struct.usb_interface*, %struct.usb_interface** %intf20, align 8, !dbg !19576
  %dev21 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %23, i32 0, i32 7, !dbg !19576
  %24 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !19576
  %fw_name22 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %24, i32 0, i32 0, !dbg !19576
  %25 = load i8*, i8** %fw_name22, align 8, !dbg !19576
  %26 = load i64, i64* %rc, align 8, !dbg !19576
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev21, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.28, i64 0, i64 0), i8* %25, i64 %26) #14, !dbg !19576
  br label %if.end23, !dbg !19577

if.end23:                                         ; preds = %if.then17, %result
  %27 = load i64, i64* %rc, align 8, !dbg !19578
  %conv24 = trunc i64 %27 to i32, !dbg !19578
  ret i32 %conv24, !dbg !19579
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_set_speed(%struct.r8152* %tp, i8 zeroext %autoneg, i32 %speed, i8 zeroext %duplex, i32 %advertising) #2 !dbg !19580 {
entry:
  %retval = alloca i32, align 4
  %tp.addr = alloca %struct.r8152*, align 8
  %autoneg.addr = alloca i8, align 1
  %speed.addr = alloca i32, align 4
  %duplex.addr = alloca i8, align 1
  %advertising.addr = alloca i32, align 4
  %bmcr = alloca i16, align 2
  %ret = alloca i32, align 4
  %anar = alloca i16, align 2
  %tmp1 = alloca i16, align 2
  %support = alloca i32, align 4
  %gbcr = alloca i16, align 2
  %i = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !19583, metadata !DIExpression()), !dbg !19584
  store i8 %autoneg, i8* %autoneg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %autoneg.addr, metadata !19585, metadata !DIExpression()), !dbg !19586
  store i32 %speed, i32* %speed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %speed.addr, metadata !19587, metadata !DIExpression()), !dbg !19588
  store i8 %duplex, i8* %duplex.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %duplex.addr, metadata !19589, metadata !DIExpression()), !dbg !19590
  store i32 %advertising, i32* %advertising.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %advertising.addr, metadata !19591, metadata !DIExpression()), !dbg !19592
  call void @llvm.dbg.declare(metadata i16* %bmcr, metadata !19593, metadata !DIExpression()), !dbg !19594
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19595, metadata !DIExpression()), !dbg !19596
  store i32 0, i32* %ret, align 4, !dbg !19596
  %0 = load i8, i8* %autoneg.addr, align 1, !dbg !19597
  %conv = zext i8 %0 to i32, !dbg !19597
  %cmp = icmp eq i32 %conv, 0, !dbg !19599
  br i1 %cmp, label %if.then, label %if.else65, !dbg !19600

if.then:                                          ; preds = %entry
  %1 = load i8, i8* %duplex.addr, align 1, !dbg !19601
  %conv2 = zext i8 %1 to i32, !dbg !19601
  %cmp3 = icmp ne i32 %conv2, 0, !dbg !19604
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !19605

land.lhs.true:                                    ; preds = %if.then
  %2 = load i8, i8* %duplex.addr, align 1, !dbg !19606
  %conv5 = zext i8 %2 to i32, !dbg !19606
  %cmp6 = icmp ne i32 %conv5, 1, !dbg !19607
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !19608

if.then8:                                         ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !19609
  br label %return, !dbg !19609

if.end:                                           ; preds = %land.lhs.true, %if.then
  %3 = load i32, i32* %speed.addr, align 4, !dbg !19610
  switch i32 %3, label %sw.default [
    i32 10, label %sw.bb
    i32 100, label %sw.bb20
    i32 1000, label %sw.bb38
  ], !dbg !19611

sw.bb:                                            ; preds = %if.end
  store i16 0, i16* %bmcr, align 2, !dbg !19612
  %4 = load i8, i8* %duplex.addr, align 1, !dbg !19614
  %conv9 = zext i8 %4 to i32, !dbg !19614
  %cmp10 = icmp eq i32 %conv9, 1, !dbg !19616
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !19617

if.then12:                                        ; preds = %sw.bb
  %5 = load i16, i16* %bmcr, align 2, !dbg !19618
  %conv13 = zext i16 %5 to i32, !dbg !19618
  %or = or i32 %conv13, 256, !dbg !19618
  %conv14 = trunc i32 %or to i16, !dbg !19618
  store i16 %conv14, i16* %bmcr, align 2, !dbg !19618
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19620
  %ups_info = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 22, !dbg !19621
  %7 = bitcast %struct.ups_info* %ups_info to i32*, !dbg !19622
  %bf.load = load i32, i32* %7, align 8, !dbg !19623
  %bf.clear = and i32 %bf.load, -481, !dbg !19623
  %bf.set = or i32 %bf.clear, 192, !dbg !19623
  store i32 %bf.set, i32* %7, align 8, !dbg !19623
  br label %if.end19, !dbg !19624

if.else:                                          ; preds = %sw.bb
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19625
  %ups_info15 = getelementptr inbounds %struct.r8152, %struct.r8152* %8, i32 0, i32 22, !dbg !19627
  %9 = bitcast %struct.ups_info* %ups_info15 to i32*, !dbg !19628
  %bf.load16 = load i32, i32* %9, align 8, !dbg !19629
  %bf.clear17 = and i32 %bf.load16, -481, !dbg !19629
  %bf.set18 = or i32 %bf.clear17, 160, !dbg !19629
  store i32 %bf.set18, i32* %9, align 8, !dbg !19629
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then12
  br label %sw.epilog, !dbg !19630

sw.bb20:                                          ; preds = %if.end
  store i16 8192, i16* %bmcr, align 2, !dbg !19631
  %10 = load i8, i8* %duplex.addr, align 1, !dbg !19632
  %conv21 = zext i8 %10 to i32, !dbg !19632
  %cmp22 = icmp eq i32 %conv21, 1, !dbg !19634
  br i1 %cmp22, label %if.then24, label %if.else32, !dbg !19635

if.then24:                                        ; preds = %sw.bb20
  %11 = load i16, i16* %bmcr, align 2, !dbg !19636
  %conv25 = zext i16 %11 to i32, !dbg !19636
  %or26 = or i32 %conv25, 256, !dbg !19636
  %conv27 = trunc i32 %or26 to i16, !dbg !19636
  store i16 %conv27, i16* %bmcr, align 2, !dbg !19636
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19638
  %ups_info28 = getelementptr inbounds %struct.r8152, %struct.r8152* %12, i32 0, i32 22, !dbg !19639
  %13 = bitcast %struct.ups_info* %ups_info28 to i32*, !dbg !19640
  %bf.load29 = load i32, i32* %13, align 8, !dbg !19641
  %bf.clear30 = and i32 %bf.load29, -481, !dbg !19641
  %bf.set31 = or i32 %bf.clear30, 256, !dbg !19641
  store i32 %bf.set31, i32* %13, align 8, !dbg !19641
  br label %if.end37, !dbg !19642

if.else32:                                        ; preds = %sw.bb20
  %14 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19643
  %ups_info33 = getelementptr inbounds %struct.r8152, %struct.r8152* %14, i32 0, i32 22, !dbg !19645
  %15 = bitcast %struct.ups_info* %ups_info33 to i32*, !dbg !19646
  %bf.load34 = load i32, i32* %15, align 8, !dbg !19647
  %bf.clear35 = and i32 %bf.load34, -481, !dbg !19647
  %bf.set36 = or i32 %bf.clear35, 224, !dbg !19647
  store i32 %bf.set36, i32* %15, align 8, !dbg !19647
  br label %if.end37

if.end37:                                         ; preds = %if.else32, %if.then24
  br label %sw.epilog, !dbg !19648

sw.bb38:                                          ; preds = %if.end
  %16 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19649
  %mii = getelementptr inbounds %struct.r8152, %struct.r8152* %16, i32 0, i32 17, !dbg !19651
  %supports_gmii = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii, i32 0, i32 4, !dbg !19652
  %bf.load39 = load i8, i8* %supports_gmii, align 8, !dbg !19652
  %bf.lshr = lshr i8 %bf.load39, 2, !dbg !19652
  %bf.clear40 = and i8 %bf.lshr, 1, !dbg !19652
  %bf.cast = zext i8 %bf.clear40 to i32, !dbg !19652
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !19649
  br i1 %tobool, label %if.then41, label %if.end46, !dbg !19653

if.then41:                                        ; preds = %sw.bb38
  store i16 320, i16* %bmcr, align 2, !dbg !19654
  %17 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19656
  %ups_info42 = getelementptr inbounds %struct.r8152, %struct.r8152* %17, i32 0, i32 22, !dbg !19657
  %18 = bitcast %struct.ups_info* %ups_info42 to i32*, !dbg !19658
  %bf.load43 = load i32, i32* %18, align 8, !dbg !19659
  %bf.clear44 = and i32 %bf.load43, -481, !dbg !19659
  %bf.set45 = or i32 %bf.clear44, 128, !dbg !19659
  store i32 %bf.set45, i32* %18, align 8, !dbg !19659
  br label %sw.epilog, !dbg !19660

if.end46:                                         ; preds = %sw.bb38
  br label %sw.default, !dbg !19652

sw.default:                                       ; preds = %if.end, %if.end46
  store i32 -22, i32* %ret, align 4, !dbg !19661
  br label %out, !dbg !19662

sw.epilog:                                        ; preds = %if.then41, %if.end37, %if.end19
  %19 = load i8, i8* %duplex.addr, align 1, !dbg !19663
  %conv47 = zext i8 %19 to i32, !dbg !19663
  %cmp48 = icmp eq i32 %conv47, 1, !dbg !19665
  br i1 %cmp48, label %if.then50, label %if.else55, !dbg !19666

if.then50:                                        ; preds = %sw.epilog
  %20 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19667
  %mii51 = getelementptr inbounds %struct.r8152, %struct.r8152* %20, i32 0, i32 17, !dbg !19668
  %full_duplex = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii51, i32 0, i32 4, !dbg !19669
  %bf.load52 = load i8, i8* %full_duplex, align 8, !dbg !19670
  %bf.clear53 = and i8 %bf.load52, -2, !dbg !19670
  %bf.set54 = or i8 %bf.clear53, 1, !dbg !19670
  store i8 %bf.set54, i8* %full_duplex, align 8, !dbg !19670
  br label %if.end60, !dbg !19667

if.else55:                                        ; preds = %sw.epilog
  %21 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19671
  %mii56 = getelementptr inbounds %struct.r8152, %struct.r8152* %21, i32 0, i32 17, !dbg !19672
  %full_duplex57 = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii56, i32 0, i32 4, !dbg !19673
  %bf.load58 = load i8, i8* %full_duplex57, align 8, !dbg !19674
  %bf.clear59 = and i8 %bf.load58, -2, !dbg !19674
  store i8 %bf.clear59, i8* %full_duplex57, align 8, !dbg !19674
  br label %if.end60

if.end60:                                         ; preds = %if.else55, %if.then50
  %22 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19675
  %mii61 = getelementptr inbounds %struct.r8152, %struct.r8152* %22, i32 0, i32 17, !dbg !19676
  %force_media = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii61, i32 0, i32 4, !dbg !19677
  %bf.load62 = load i8, i8* %force_media, align 8, !dbg !19678
  %bf.clear63 = and i8 %bf.load62, -3, !dbg !19678
  %bf.set64 = or i8 %bf.clear63, 2, !dbg !19678
  store i8 %bf.set64, i8* %force_media, align 8, !dbg !19678
  br label %if.end179, !dbg !19679

if.else65:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %anar, metadata !19680, metadata !DIExpression()), !dbg !19682
  call void @llvm.dbg.declare(metadata i16* %tmp1, metadata !19683, metadata !DIExpression()), !dbg !19684
  call void @llvm.dbg.declare(metadata i32* %support, metadata !19685, metadata !DIExpression()), !dbg !19686
  store i32 15, i32* %support, align 4, !dbg !19687
  %23 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19688
  %mii66 = getelementptr inbounds %struct.r8152, %struct.r8152* %23, i32 0, i32 17, !dbg !19690
  %supports_gmii67 = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii66, i32 0, i32 4, !dbg !19691
  %bf.load68 = load i8, i8* %supports_gmii67, align 8, !dbg !19691
  %bf.lshr69 = lshr i8 %bf.load68, 2, !dbg !19691
  %bf.clear70 = and i8 %bf.lshr69, 1, !dbg !19691
  %bf.cast71 = zext i8 %bf.clear70 to i32, !dbg !19691
  %tobool72 = icmp ne i32 %bf.cast71, 0, !dbg !19688
  br i1 %tobool72, label %if.then73, label %if.end77, !dbg !19692

if.then73:                                        ; preds = %if.else65
  %24 = load i32, i32* %support, align 4, !dbg !19693
  %conv74 = zext i32 %24 to i64, !dbg !19693
  %or75 = or i64 %conv74, 32, !dbg !19693
  %conv76 = trunc i64 %or75 to i32, !dbg !19693
  store i32 %conv76, i32* %support, align 4, !dbg !19693
  br label %if.end77, !dbg !19694

if.end77:                                         ; preds = %if.then73, %if.else65
  %25 = load i32, i32* %advertising.addr, align 4, !dbg !19695
  %26 = load i32, i32* %support, align 4, !dbg !19697
  %and = and i32 %25, %26, !dbg !19698
  %tobool78 = icmp ne i32 %and, 0, !dbg !19698
  br i1 %tobool78, label %if.end80, label %if.then79, !dbg !19699

if.then79:                                        ; preds = %if.end77
  store i32 -22, i32* %retval, align 4, !dbg !19700
  br label %return, !dbg !19700

if.end80:                                         ; preds = %if.end77
  %27 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19701
  %call = call i32 @r8152_mdio_read(%struct.r8152* %27, i32 4) #13, !dbg !19702
  %conv81 = trunc i32 %call to i16, !dbg !19702
  store i16 %conv81, i16* %anar, align 2, !dbg !19703
  %28 = load i16, i16* %anar, align 2, !dbg !19704
  %conv82 = zext i16 %28 to i32, !dbg !19704
  %and83 = and i32 %conv82, -481, !dbg !19705
  %conv84 = trunc i32 %and83 to i16, !dbg !19704
  store i16 %conv84, i16* %tmp1, align 2, !dbg !19706
  %29 = load i32, i32* %advertising.addr, align 4, !dbg !19707
  %conv85 = zext i32 %29 to i64, !dbg !19707
  %and86 = and i64 %conv85, 1, !dbg !19709
  %tobool87 = icmp ne i64 %and86, 0, !dbg !19709
  br i1 %tobool87, label %if.then88, label %if.end95, !dbg !19710

if.then88:                                        ; preds = %if.end80
  %30 = load i16, i16* %tmp1, align 2, !dbg !19711
  %conv89 = zext i16 %30 to i32, !dbg !19711
  %or90 = or i32 %conv89, 32, !dbg !19711
  %conv91 = trunc i32 %or90 to i16, !dbg !19711
  store i16 %conv91, i16* %tmp1, align 2, !dbg !19711
  %31 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19713
  %ups_info92 = getelementptr inbounds %struct.r8152, %struct.r8152* %31, i32 0, i32 22, !dbg !19714
  %32 = bitcast %struct.ups_info* %ups_info92 to i32*, !dbg !19715
  %bf.load93 = load i32, i32* %32, align 8, !dbg !19716
  %bf.clear94 = and i32 %bf.load93, -481, !dbg !19716
  store i32 %bf.clear94, i32* %32, align 8, !dbg !19716
  br label %if.end95, !dbg !19717

if.end95:                                         ; preds = %if.then88, %if.end80
  %33 = load i32, i32* %advertising.addr, align 4, !dbg !19718
  %conv96 = zext i32 %33 to i64, !dbg !19718
  %and97 = and i64 %conv96, 2, !dbg !19720
  %tobool98 = icmp ne i64 %and97, 0, !dbg !19720
  br i1 %tobool98, label %if.then99, label %if.end107, !dbg !19721

if.then99:                                        ; preds = %if.end95
  %34 = load i16, i16* %tmp1, align 2, !dbg !19722
  %conv100 = zext i16 %34 to i32, !dbg !19722
  %or101 = or i32 %conv100, 64, !dbg !19722
  %conv102 = trunc i32 %or101 to i16, !dbg !19722
  store i16 %conv102, i16* %tmp1, align 2, !dbg !19722
  %35 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19724
  %ups_info103 = getelementptr inbounds %struct.r8152, %struct.r8152* %35, i32 0, i32 22, !dbg !19725
  %36 = bitcast %struct.ups_info* %ups_info103 to i32*, !dbg !19726
  %bf.load104 = load i32, i32* %36, align 8, !dbg !19727
  %bf.clear105 = and i32 %bf.load104, -481, !dbg !19727
  %bf.set106 = or i32 %bf.clear105, 32, !dbg !19727
  store i32 %bf.set106, i32* %36, align 8, !dbg !19727
  br label %if.end107, !dbg !19728

if.end107:                                        ; preds = %if.then99, %if.end95
  %37 = load i32, i32* %advertising.addr, align 4, !dbg !19729
  %conv108 = zext i32 %37 to i64, !dbg !19729
  %and109 = and i64 %conv108, 4, !dbg !19731
  %tobool110 = icmp ne i64 %and109, 0, !dbg !19731
  br i1 %tobool110, label %if.then111, label %if.end119, !dbg !19732

if.then111:                                       ; preds = %if.end107
  %38 = load i16, i16* %tmp1, align 2, !dbg !19733
  %conv112 = zext i16 %38 to i32, !dbg !19733
  %or113 = or i32 %conv112, 128, !dbg !19733
  %conv114 = trunc i32 %or113 to i16, !dbg !19733
  store i16 %conv114, i16* %tmp1, align 2, !dbg !19733
  %39 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19735
  %ups_info115 = getelementptr inbounds %struct.r8152, %struct.r8152* %39, i32 0, i32 22, !dbg !19736
  %40 = bitcast %struct.ups_info* %ups_info115 to i32*, !dbg !19737
  %bf.load116 = load i32, i32* %40, align 8, !dbg !19738
  %bf.clear117 = and i32 %bf.load116, -481, !dbg !19738
  %bf.set118 = or i32 %bf.clear117, 64, !dbg !19738
  store i32 %bf.set118, i32* %40, align 8, !dbg !19738
  br label %if.end119, !dbg !19739

if.end119:                                        ; preds = %if.then111, %if.end107
  %41 = load i32, i32* %advertising.addr, align 4, !dbg !19740
  %conv120 = zext i32 %41 to i64, !dbg !19740
  %and121 = and i64 %conv120, 8, !dbg !19742
  %tobool122 = icmp ne i64 %and121, 0, !dbg !19742
  br i1 %tobool122, label %if.then123, label %if.end131, !dbg !19743

if.then123:                                       ; preds = %if.end119
  %42 = load i16, i16* %tmp1, align 2, !dbg !19744
  %conv124 = zext i16 %42 to i32, !dbg !19744
  %or125 = or i32 %conv124, 256, !dbg !19744
  %conv126 = trunc i32 %or125 to i16, !dbg !19744
  store i16 %conv126, i16* %tmp1, align 2, !dbg !19744
  %43 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19746
  %ups_info127 = getelementptr inbounds %struct.r8152, %struct.r8152* %43, i32 0, i32 22, !dbg !19747
  %44 = bitcast %struct.ups_info* %ups_info127 to i32*, !dbg !19748
  %bf.load128 = load i32, i32* %44, align 8, !dbg !19749
  %bf.clear129 = and i32 %bf.load128, -481, !dbg !19749
  %bf.set130 = or i32 %bf.clear129, 96, !dbg !19749
  store i32 %bf.set130, i32* %44, align 8, !dbg !19749
  br label %if.end131, !dbg !19750

if.end131:                                        ; preds = %if.then123, %if.end119
  %45 = load i16, i16* %anar, align 2, !dbg !19751
  %conv132 = zext i16 %45 to i32, !dbg !19751
  %46 = load i16, i16* %tmp1, align 2, !dbg !19753
  %conv133 = zext i16 %46 to i32, !dbg !19753
  %cmp134 = icmp ne i32 %conv132, %conv133, !dbg !19754
  br i1 %cmp134, label %if.then136, label %if.end141, !dbg !19755

if.then136:                                       ; preds = %if.end131
  %47 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19756
  %48 = load i16, i16* %tmp1, align 2, !dbg !19758
  %conv137 = zext i16 %48 to i32, !dbg !19758
  call void @r8152_mdio_write(%struct.r8152* %47, i32 4, i32 %conv137) #13, !dbg !19759
  %49 = load i16, i16* %tmp1, align 2, !dbg !19760
  %conv138 = zext i16 %49 to i32, !dbg !19760
  %50 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19761
  %mii139 = getelementptr inbounds %struct.r8152, %struct.r8152* %50, i32 0, i32 17, !dbg !19762
  %advertising140 = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii139, i32 0, i32 1, !dbg !19763
  store i32 %conv138, i32* %advertising140, align 4, !dbg !19764
  br label %if.end141, !dbg !19765

if.end141:                                        ; preds = %if.then136, %if.end131
  %51 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19766
  %mii142 = getelementptr inbounds %struct.r8152, %struct.r8152* %51, i32 0, i32 17, !dbg !19768
  %supports_gmii143 = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii142, i32 0, i32 4, !dbg !19769
  %bf.load144 = load i8, i8* %supports_gmii143, align 8, !dbg !19769
  %bf.lshr145 = lshr i8 %bf.load144, 2, !dbg !19769
  %bf.clear146 = and i8 %bf.lshr145, 1, !dbg !19769
  %bf.cast147 = zext i8 %bf.clear146 to i32, !dbg !19769
  %tobool148 = icmp ne i32 %bf.cast147, 0, !dbg !19766
  br i1 %tobool148, label %if.then149, label %if.end174, !dbg !19770

if.then149:                                       ; preds = %if.end141
  call void @llvm.dbg.declare(metadata i16* %gbcr, metadata !19771, metadata !DIExpression()), !dbg !19773
  %52 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19774
  %call150 = call i32 @r8152_mdio_read(%struct.r8152* %52, i32 9) #13, !dbg !19775
  %conv151 = trunc i32 %call150 to i16, !dbg !19775
  store i16 %conv151, i16* %gbcr, align 2, !dbg !19776
  %53 = load i16, i16* %gbcr, align 2, !dbg !19777
  %conv152 = zext i16 %53 to i32, !dbg !19777
  %and153 = and i32 %conv152, -769, !dbg !19778
  %conv154 = trunc i32 %and153 to i16, !dbg !19777
  store i16 %conv154, i16* %tmp1, align 2, !dbg !19779
  %54 = load i32, i32* %advertising.addr, align 4, !dbg !19780
  %conv155 = zext i32 %54 to i64, !dbg !19780
  %and156 = and i64 %conv155, 32, !dbg !19782
  %tobool157 = icmp ne i64 %and156, 0, !dbg !19782
  br i1 %tobool157, label %if.then158, label %if.end166, !dbg !19783

if.then158:                                       ; preds = %if.then149
  %55 = load i16, i16* %tmp1, align 2, !dbg !19784
  %conv159 = zext i16 %55 to i32, !dbg !19784
  %or160 = or i32 %conv159, 512, !dbg !19784
  %conv161 = trunc i32 %or160 to i16, !dbg !19784
  store i16 %conv161, i16* %tmp1, align 2, !dbg !19784
  %56 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19786
  %ups_info162 = getelementptr inbounds %struct.r8152, %struct.r8152* %56, i32 0, i32 22, !dbg !19787
  %57 = bitcast %struct.ups_info* %ups_info162 to i32*, !dbg !19788
  %bf.load163 = load i32, i32* %57, align 8, !dbg !19789
  %bf.clear164 = and i32 %bf.load163, -481, !dbg !19789
  %bf.set165 = or i32 %bf.clear164, 128, !dbg !19789
  store i32 %bf.set165, i32* %57, align 8, !dbg !19789
  br label %if.end166, !dbg !19790

if.end166:                                        ; preds = %if.then158, %if.then149
  %58 = load i16, i16* %gbcr, align 2, !dbg !19791
  %conv167 = zext i16 %58 to i32, !dbg !19791
  %59 = load i16, i16* %tmp1, align 2, !dbg !19793
  %conv168 = zext i16 %59 to i32, !dbg !19793
  %cmp169 = icmp ne i32 %conv167, %conv168, !dbg !19794
  br i1 %cmp169, label %if.then171, label %if.end173, !dbg !19795

if.then171:                                       ; preds = %if.end166
  %60 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19796
  %61 = load i16, i16* %tmp1, align 2, !dbg !19797
  %conv172 = zext i16 %61 to i32, !dbg !19797
  call void @r8152_mdio_write(%struct.r8152* %60, i32 9, i32 %conv172) #13, !dbg !19798
  br label %if.end173, !dbg !19798

if.end173:                                        ; preds = %if.then171, %if.end166
  br label %if.end174, !dbg !19799

if.end174:                                        ; preds = %if.end173, %if.end141
  store i16 4608, i16* %bmcr, align 2, !dbg !19800
  %62 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19801
  %mii175 = getelementptr inbounds %struct.r8152, %struct.r8152* %62, i32 0, i32 17, !dbg !19802
  %force_media176 = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii175, i32 0, i32 4, !dbg !19803
  %bf.load177 = load i8, i8* %force_media176, align 8, !dbg !19804
  %bf.clear178 = and i8 %bf.load177, -3, !dbg !19804
  store i8 %bf.clear178, i8* %force_media176, align 8, !dbg !19804
  br label %if.end179

if.end179:                                        ; preds = %if.end174, %if.end60
  %63 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19805
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %63, i32 0, i32 0, !dbg !19807
  %call180 = call zeroext i1 @test_and_clear_bit(i64 5, i64* %flags) #13, !dbg !19808
  br i1 %call180, label %if.then181, label %if.end185, !dbg !19809

if.then181:                                       ; preds = %if.end179
  %64 = load i16, i16* %bmcr, align 2, !dbg !19810
  %conv182 = zext i16 %64 to i32, !dbg !19810
  %or183 = or i32 %conv182, 32768, !dbg !19810
  %conv184 = trunc i32 %or183 to i16, !dbg !19810
  store i16 %conv184, i16* %bmcr, align 2, !dbg !19810
  br label %if.end185, !dbg !19811

if.end185:                                        ; preds = %if.then181, %if.end179
  %65 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19812
  %66 = load i16, i16* %bmcr, align 2, !dbg !19813
  %conv186 = zext i16 %66 to i32, !dbg !19813
  call void @r8152_mdio_write(%struct.r8152* %65, i32 0, i32 %conv186) #13, !dbg !19814
  %67 = load i16, i16* %bmcr, align 2, !dbg !19815
  %conv187 = zext i16 %67 to i32, !dbg !19815
  %and188 = and i32 %conv187, 32768, !dbg !19817
  %tobool189 = icmp ne i32 %and188, 0, !dbg !19817
  br i1 %tobool189, label %if.then190, label %if.end199, !dbg !19818

if.then190:                                       ; preds = %if.end185
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19819, metadata !DIExpression()), !dbg !19821
  store i32 0, i32* %i, align 4, !dbg !19822
  br label %for.cond, !dbg !19824

for.cond:                                         ; preds = %for.inc, %if.then190
  %68 = load i32, i32* %i, align 4, !dbg !19825
  %cmp191 = icmp slt i32 %68, 50, !dbg !19827
  br i1 %cmp191, label %for.body, label %for.end, !dbg !19828

for.body:                                         ; preds = %for.cond
  call void @msleep(i32 20) #13, !dbg !19829
  %69 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19831
  %call193 = call i32 @r8152_mdio_read(%struct.r8152* %69, i32 0) #13, !dbg !19833
  %and194 = and i32 %call193, 32768, !dbg !19834
  %cmp195 = icmp eq i32 %and194, 0, !dbg !19835
  br i1 %cmp195, label %if.then197, label %if.end198, !dbg !19836

if.then197:                                       ; preds = %for.body
  br label %for.end, !dbg !19837

if.end198:                                        ; preds = %for.body
  br label %for.inc, !dbg !19838

for.inc:                                          ; preds = %if.end198
  %70 = load i32, i32* %i, align 4, !dbg !19839
  %inc = add i32 %70, 1, !dbg !19839
  store i32 %inc, i32* %i, align 4, !dbg !19839
  br label %for.cond, !dbg !19840, !llvm.loop !19841

for.end:                                          ; preds = %if.then197, %for.cond
  br label %if.end199, !dbg !19843

if.end199:                                        ; preds = %for.end, %if.end185
  br label %out, !dbg !19844

out:                                              ; preds = %if.end199, %sw.default
  call void @llvm.dbg.label(metadata !19845), !dbg !19846
  %71 = load i32, i32* %ret, align 4, !dbg !19847
  store i32 %71, i32* %retval, align 4, !dbg !19848
  br label %return, !dbg !19848

return:                                           ; preds = %out, %if.then79, %if.then8
  %72 = load i32, i32* %retval, align 4, !dbg !19849
  ret i32 %72, !dbg !19849
}

; Function Attrs: noredzone
declare dso_local i32 @request_firmware(%struct.firmware**, i8*, %struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @rtl8152_check_firmware(%struct.r8152* %tp, %struct.rtl_fw* %rtl_fw) #2 !dbg !19850 {
entry:
  %retval = alloca i64, align 8
  %tp.addr = alloca %struct.r8152*, align 8
  %rtl_fw.addr = alloca %struct.rtl_fw*, align 8
  %fw = alloca %struct.firmware*, align 8
  %fw_hdr = alloca %struct.fw_header*, align 8
  %pla = alloca %struct.fw_mac*, align 8
  %usb = alloca %struct.fw_mac*, align 8
  %start = alloca %struct.fw_phy_patch_key*, align 8
  %phy_nc = alloca %struct.fw_phy_nc*, align 8
  %stop = alloca %struct.fw_block*, align 8
  %ret = alloca i64, align 8
  %i = alloca i32, align 4
  %block = alloca %struct.fw_block*, align 8
  %type = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !19853, metadata !DIExpression()), !dbg !19854
  store %struct.rtl_fw* %rtl_fw, %struct.rtl_fw** %rtl_fw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtl_fw** %rtl_fw.addr, metadata !19855, metadata !DIExpression()), !dbg !19856
  call void @llvm.dbg.declare(metadata %struct.firmware** %fw, metadata !19857, metadata !DIExpression()), !dbg !19858
  %0 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw.addr, align 8, !dbg !19859
  %fw1 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %0, i32 0, i32 1, !dbg !19860
  %1 = load %struct.firmware*, %struct.firmware** %fw1, align 8, !dbg !19860
  store %struct.firmware* %1, %struct.firmware** %fw, align 8, !dbg !19858
  call void @llvm.dbg.declare(metadata %struct.fw_header** %fw_hdr, metadata !19861, metadata !DIExpression()), !dbg !19862
  %2 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !19863
  %data = getelementptr inbounds %struct.firmware, %struct.firmware* %2, i32 0, i32 1, !dbg !19864
  %3 = load i8*, i8** %data, align 8, !dbg !19864
  %4 = bitcast i8* %3 to %struct.fw_header*, !dbg !19865
  store %struct.fw_header* %4, %struct.fw_header** %fw_hdr, align 8, !dbg !19862
  call void @llvm.dbg.declare(metadata %struct.fw_mac** %pla, metadata !19866, metadata !DIExpression()), !dbg !19867
  store %struct.fw_mac* null, %struct.fw_mac** %pla, align 8, !dbg !19867
  call void @llvm.dbg.declare(metadata %struct.fw_mac** %usb, metadata !19868, metadata !DIExpression()), !dbg !19869
  store %struct.fw_mac* null, %struct.fw_mac** %usb, align 8, !dbg !19869
  call void @llvm.dbg.declare(metadata %struct.fw_phy_patch_key** %start, metadata !19870, metadata !DIExpression()), !dbg !19871
  store %struct.fw_phy_patch_key* null, %struct.fw_phy_patch_key** %start, align 8, !dbg !19871
  call void @llvm.dbg.declare(metadata %struct.fw_phy_nc** %phy_nc, metadata !19872, metadata !DIExpression()), !dbg !19873
  store %struct.fw_phy_nc* null, %struct.fw_phy_nc** %phy_nc, align 8, !dbg !19873
  call void @llvm.dbg.declare(metadata %struct.fw_block** %stop, metadata !19874, metadata !DIExpression()), !dbg !19875
  store %struct.fw_block* null, %struct.fw_block** %stop, align 8, !dbg !19875
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !19876, metadata !DIExpression()), !dbg !19877
  store i64 -14, i64* %ret, align 8, !dbg !19877
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19878, metadata !DIExpression()), !dbg !19879
  %5 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !19880
  %size = getelementptr inbounds %struct.firmware, %struct.firmware* %5, i32 0, i32 0, !dbg !19882
  %6 = load i64, i64* %size, align 8, !dbg !19882
  %cmp = icmp ult i64 %6, 64, !dbg !19883
  br i1 %cmp, label %if.then, label %if.end, !dbg !19884

if.then:                                          ; preds = %entry
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19885
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 3, !dbg !19885
  %8 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !19885
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %8, i32 0, i32 7, !dbg !19885
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i64 0, i64 0)) #14, !dbg !19885
  br label %fail, !dbg !19887

if.end:                                           ; preds = %entry
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19888
  %10 = load %struct.fw_header*, %struct.fw_header** %fw_hdr, align 8, !dbg !19889
  %11 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !19890
  %size2 = getelementptr inbounds %struct.firmware, %struct.firmware* %11, i32 0, i32 0, !dbg !19891
  %12 = load i64, i64* %size2, align 8, !dbg !19891
  %call = call i64 @rtl8152_fw_verify_checksum(%struct.r8152* %9, %struct.fw_header* %10, i64 %12) #13, !dbg !19892
  store i64 %call, i64* %ret, align 8, !dbg !19893
  %13 = load i64, i64* %ret, align 8, !dbg !19894
  %tobool = icmp ne i64 %13, 0, !dbg !19894
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !19896

if.then3:                                         ; preds = %if.end
  br label %fail, !dbg !19897

if.end4:                                          ; preds = %if.end
  store i64 -14, i64* %ret, align 8, !dbg !19898
  store i32 64, i32* %i, align 4, !dbg !19899
  br label %for.cond, !dbg !19901

for.cond:                                         ; preds = %sw.epilog, %if.end4
  %14 = load i32, i32* %i, align 4, !dbg !19902
  %conv = sext i32 %14 to i64, !dbg !19902
  %15 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !19904
  %size5 = getelementptr inbounds %struct.firmware, %struct.firmware* %15, i32 0, i32 0, !dbg !19905
  %16 = load i64, i64* %size5, align 8, !dbg !19905
  %cmp6 = icmp ult i64 %conv, %16, !dbg !19906
  br i1 %cmp6, label %for.body, label %for.end, !dbg !19907

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.fw_block** %block, metadata !19908, metadata !DIExpression()), !dbg !19910
  %17 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !19911
  %data8 = getelementptr inbounds %struct.firmware, %struct.firmware* %17, i32 0, i32 1, !dbg !19912
  %18 = load i8*, i8** %data8, align 8, !dbg !19912
  %19 = load i32, i32* %i, align 4, !dbg !19913
  %idxprom = sext i32 %19 to i64, !dbg !19911
  %arrayidx = getelementptr i8, i8* %18, i64 %idxprom, !dbg !19911
  %20 = bitcast i8* %arrayidx to %struct.fw_block*, !dbg !19914
  store %struct.fw_block* %20, %struct.fw_block** %block, align 8, !dbg !19910
  call void @llvm.dbg.declare(metadata i32* %type, metadata !19915, metadata !DIExpression()), !dbg !19916
  %21 = load i32, i32* %i, align 4, !dbg !19917
  %conv9 = sext i32 %21 to i64, !dbg !19917
  %add = add i64 %conv9, 8, !dbg !19919
  %22 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !19920
  %size10 = getelementptr inbounds %struct.firmware, %struct.firmware* %22, i32 0, i32 0, !dbg !19921
  %23 = load i64, i64* %size10, align 8, !dbg !19921
  %cmp11 = icmp ugt i64 %add, %23, !dbg !19922
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !19923

if.then13:                                        ; preds = %for.body
  br label %fail, !dbg !19924

if.end14:                                         ; preds = %for.body
  %24 = load %struct.fw_block*, %struct.fw_block** %block, align 8, !dbg !19925
  %type15 = getelementptr inbounds %struct.fw_block, %struct.fw_block* %24, i32 0, i32 0, !dbg !19925
  %25 = load i32, i32* %type15, align 1, !dbg !19925
  store i32 %25, i32* %type, align 4, !dbg !19926
  %26 = load i32, i32* %type, align 4, !dbg !19927
  switch i32 %26, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb21
    i32 2, label %sw.bb32
    i32 3, label %sw.bb43
    i32 4, label %sw.bb60
    i32 5, label %sw.bb76
  ], !dbg !19928

sw.bb:                                            ; preds = %if.end14
  %27 = load %struct.fw_block*, %struct.fw_block** %block, align 8, !dbg !19929
  %length = getelementptr inbounds %struct.fw_block, %struct.fw_block* %27, i32 0, i32 1, !dbg !19929
  %28 = load i32, i32* %length, align 1, !dbg !19929
  %conv16 = zext i32 %28 to i64, !dbg !19929
  %cmp17 = icmp ne i64 %conv16, 8, !dbg !19932
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !19933

if.then19:                                        ; preds = %sw.bb
  br label %fail, !dbg !19934

if.end20:                                         ; preds = %sw.bb
  br label %fw_end, !dbg !19935

sw.bb21:                                          ; preds = %if.end14
  %29 = load %struct.fw_mac*, %struct.fw_mac** %pla, align 8, !dbg !19936
  %tobool22 = icmp ne %struct.fw_mac* %29, null, !dbg !19936
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !19938

if.then23:                                        ; preds = %sw.bb21
  %30 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19939
  %intf24 = getelementptr inbounds %struct.r8152, %struct.r8152* %30, i32 0, i32 3, !dbg !19939
  %31 = load %struct.usb_interface*, %struct.usb_interface** %intf24, align 8, !dbg !19939
  %dev25 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %31, i32 0, i32 7, !dbg !19939
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev25, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.30, i64 0, i64 0)) #14, !dbg !19939
  br label %fail, !dbg !19941

if.end26:                                         ; preds = %sw.bb21
  %32 = load %struct.fw_block*, %struct.fw_block** %block, align 8, !dbg !19942
  %33 = bitcast %struct.fw_block* %32 to %struct.fw_mac*, !dbg !19943
  store %struct.fw_mac* %33, %struct.fw_mac** %pla, align 8, !dbg !19944
  %34 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19945
  %35 = load %struct.fw_mac*, %struct.fw_mac** %pla, align 8, !dbg !19947
  %call27 = call zeroext i1 @rtl8152_is_fw_mac_ok(%struct.r8152* %34, %struct.fw_mac* %35) #13, !dbg !19948
  br i1 %call27, label %if.end31, label %if.then28, !dbg !19949

if.then28:                                        ; preds = %if.end26
  %36 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19950
  %intf29 = getelementptr inbounds %struct.r8152, %struct.r8152* %36, i32 0, i32 3, !dbg !19950
  %37 = load %struct.usb_interface*, %struct.usb_interface** %intf29, align 8, !dbg !19950
  %dev30 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %37, i32 0, i32 7, !dbg !19950
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev30, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0)) #14, !dbg !19950
  br label %fail, !dbg !19952

if.end31:                                         ; preds = %if.end26
  br label %sw.epilog, !dbg !19953

sw.bb32:                                          ; preds = %if.end14
  %38 = load %struct.fw_mac*, %struct.fw_mac** %usb, align 8, !dbg !19954
  %tobool33 = icmp ne %struct.fw_mac* %38, null, !dbg !19954
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !19956

if.then34:                                        ; preds = %sw.bb32
  %39 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19957
  %intf35 = getelementptr inbounds %struct.r8152, %struct.r8152* %39, i32 0, i32 3, !dbg !19957
  %40 = load %struct.usb_interface*, %struct.usb_interface** %intf35, align 8, !dbg !19957
  %dev36 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %40, i32 0, i32 7, !dbg !19957
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev36, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0)) #14, !dbg !19957
  br label %fail, !dbg !19959

if.end37:                                         ; preds = %sw.bb32
  %41 = load %struct.fw_block*, %struct.fw_block** %block, align 8, !dbg !19960
  %42 = bitcast %struct.fw_block* %41 to %struct.fw_mac*, !dbg !19961
  store %struct.fw_mac* %42, %struct.fw_mac** %usb, align 8, !dbg !19962
  %43 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19963
  %44 = load %struct.fw_mac*, %struct.fw_mac** %usb, align 8, !dbg !19965
  %call38 = call zeroext i1 @rtl8152_is_fw_mac_ok(%struct.r8152* %43, %struct.fw_mac* %44) #13, !dbg !19966
  br i1 %call38, label %if.end42, label %if.then39, !dbg !19967

if.then39:                                        ; preds = %if.end37
  %45 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19968
  %intf40 = getelementptr inbounds %struct.r8152, %struct.r8152* %45, i32 0, i32 3, !dbg !19968
  %46 = load %struct.usb_interface*, %struct.usb_interface** %intf40, align 8, !dbg !19968
  %dev41 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %46, i32 0, i32 7, !dbg !19968
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev41, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0)) #14, !dbg !19968
  br label %fail, !dbg !19970

if.end42:                                         ; preds = %if.end37
  br label %sw.epilog, !dbg !19971

sw.bb43:                                          ; preds = %if.end14
  %47 = load %struct.fw_phy_patch_key*, %struct.fw_phy_patch_key** %start, align 8, !dbg !19972
  %tobool44 = icmp ne %struct.fw_phy_patch_key* %47, null, !dbg !19972
  br i1 %tobool44, label %if.then48, label %lor.lhs.false, !dbg !19974

lor.lhs.false:                                    ; preds = %sw.bb43
  %48 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy_nc, align 8, !dbg !19975
  %tobool45 = icmp ne %struct.fw_phy_nc* %48, null, !dbg !19975
  br i1 %tobool45, label %if.then48, label %lor.lhs.false46, !dbg !19976

lor.lhs.false46:                                  ; preds = %lor.lhs.false
  %49 = load %struct.fw_block*, %struct.fw_block** %stop, align 8, !dbg !19977
  %tobool47 = icmp ne %struct.fw_block* %49, null, !dbg !19977
  br i1 %tobool47, label %if.then48, label %if.end51, !dbg !19978

if.then48:                                        ; preds = %lor.lhs.false46, %lor.lhs.false, %sw.bb43
  %50 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19979
  %intf49 = getelementptr inbounds %struct.r8152, %struct.r8152* %50, i32 0, i32 3, !dbg !19979
  %51 = load %struct.usb_interface*, %struct.usb_interface** %intf49, align 8, !dbg !19979
  %dev50 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %51, i32 0, i32 7, !dbg !19979
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev50, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.34, i64 0, i64 0)) #14, !dbg !19979
  br label %fail, !dbg !19981

if.end51:                                         ; preds = %lor.lhs.false46
  %52 = load %struct.fw_block*, %struct.fw_block** %block, align 8, !dbg !19982
  %length52 = getelementptr inbounds %struct.fw_block, %struct.fw_block* %52, i32 0, i32 1, !dbg !19982
  %53 = load i32, i32* %length52, align 1, !dbg !19982
  %conv53 = zext i32 %53 to i64, !dbg !19982
  %cmp54 = icmp ne i64 %conv53, 16, !dbg !19984
  br i1 %cmp54, label %if.then56, label %if.end59, !dbg !19985

if.then56:                                        ; preds = %if.end51
  %54 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19986
  %intf57 = getelementptr inbounds %struct.r8152, %struct.r8152* %54, i32 0, i32 3, !dbg !19986
  %55 = load %struct.usb_interface*, %struct.usb_interface** %intf57, align 8, !dbg !19986
  %dev58 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %55, i32 0, i32 7, !dbg !19986
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev58, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0)) #14, !dbg !19986
  br label %fail, !dbg !19988

if.end59:                                         ; preds = %if.end51
  %56 = load %struct.fw_block*, %struct.fw_block** %block, align 8, !dbg !19989
  %57 = bitcast %struct.fw_block* %56 to %struct.fw_phy_patch_key*, !dbg !19990
  store %struct.fw_phy_patch_key* %57, %struct.fw_phy_patch_key** %start, align 8, !dbg !19991
  br label %sw.epilog, !dbg !19992

sw.bb60:                                          ; preds = %if.end14
  %58 = load %struct.fw_block*, %struct.fw_block** %stop, align 8, !dbg !19993
  %tobool61 = icmp ne %struct.fw_block* %58, null, !dbg !19993
  br i1 %tobool61, label %if.then64, label %lor.lhs.false62, !dbg !19995

lor.lhs.false62:                                  ; preds = %sw.bb60
  %59 = load %struct.fw_phy_patch_key*, %struct.fw_phy_patch_key** %start, align 8, !dbg !19996
  %tobool63 = icmp ne %struct.fw_phy_patch_key* %59, null, !dbg !19996
  br i1 %tobool63, label %if.end67, label %if.then64, !dbg !19997

if.then64:                                        ; preds = %lor.lhs.false62, %sw.bb60
  %60 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !19998
  %intf65 = getelementptr inbounds %struct.r8152, %struct.r8152* %60, i32 0, i32 3, !dbg !19998
  %61 = load %struct.usb_interface*, %struct.usb_interface** %intf65, align 8, !dbg !19998
  %dev66 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %61, i32 0, i32 7, !dbg !19998
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev66, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i64 0, i64 0)) #14, !dbg !19998
  br label %fail, !dbg !20000

if.end67:                                         ; preds = %lor.lhs.false62
  %62 = load %struct.fw_block*, %struct.fw_block** %block, align 8, !dbg !20001
  %length68 = getelementptr inbounds %struct.fw_block, %struct.fw_block* %62, i32 0, i32 1, !dbg !20001
  %63 = load i32, i32* %length68, align 1, !dbg !20001
  %conv69 = zext i32 %63 to i64, !dbg !20001
  %cmp70 = icmp ne i64 %conv69, 8, !dbg !20003
  br i1 %cmp70, label %if.then72, label %if.end75, !dbg !20004

if.then72:                                        ; preds = %if.end67
  %64 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20005
  %intf73 = getelementptr inbounds %struct.r8152, %struct.r8152* %64, i32 0, i32 3, !dbg !20005
  %65 = load %struct.usb_interface*, %struct.usb_interface** %intf73, align 8, !dbg !20005
  %dev74 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %65, i32 0, i32 7, !dbg !20005
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev74, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i64 0, i64 0)) #14, !dbg !20005
  br label %fail, !dbg !20007

if.end75:                                         ; preds = %if.end67
  %66 = load %struct.fw_block*, %struct.fw_block** %block, align 8, !dbg !20008
  store %struct.fw_block* %66, %struct.fw_block** %stop, align 8, !dbg !20009
  br label %sw.epilog, !dbg !20010

sw.bb76:                                          ; preds = %if.end14
  %67 = load %struct.fw_phy_patch_key*, %struct.fw_phy_patch_key** %start, align 8, !dbg !20011
  %tobool77 = icmp ne %struct.fw_phy_patch_key* %67, null, !dbg !20011
  br i1 %tobool77, label %lor.lhs.false78, label %if.then80, !dbg !20013

lor.lhs.false78:                                  ; preds = %sw.bb76
  %68 = load %struct.fw_block*, %struct.fw_block** %stop, align 8, !dbg !20014
  %tobool79 = icmp ne %struct.fw_block* %68, null, !dbg !20014
  br i1 %tobool79, label %if.then80, label %if.end83, !dbg !20015

if.then80:                                        ; preds = %lor.lhs.false78, %sw.bb76
  %69 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20016
  %intf81 = getelementptr inbounds %struct.r8152, %struct.r8152* %69, i32 0, i32 3, !dbg !20016
  %70 = load %struct.usb_interface*, %struct.usb_interface** %intf81, align 8, !dbg !20016
  %dev82 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %70, i32 0, i32 7, !dbg !20016
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev82, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i64 0, i64 0)) #14, !dbg !20016
  br label %fail, !dbg !20018

if.end83:                                         ; preds = %lor.lhs.false78
  %71 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy_nc, align 8, !dbg !20019
  %tobool84 = icmp ne %struct.fw_phy_nc* %71, null, !dbg !20019
  br i1 %tobool84, label %if.then85, label %if.end88, !dbg !20021

if.then85:                                        ; preds = %if.end83
  %72 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20022
  %intf86 = getelementptr inbounds %struct.r8152, %struct.r8152* %72, i32 0, i32 3, !dbg !20022
  %73 = load %struct.usb_interface*, %struct.usb_interface** %intf86, align 8, !dbg !20022
  %dev87 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %73, i32 0, i32 7, !dbg !20022
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev87, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i64 0, i64 0)) #14, !dbg !20022
  br label %fail, !dbg !20024

if.end88:                                         ; preds = %if.end83
  %74 = load %struct.fw_block*, %struct.fw_block** %block, align 8, !dbg !20025
  %75 = bitcast %struct.fw_block* %74 to %struct.fw_phy_nc*, !dbg !20026
  store %struct.fw_phy_nc* %75, %struct.fw_phy_nc** %phy_nc, align 8, !dbg !20027
  %76 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20028
  %77 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy_nc, align 8, !dbg !20030
  %call89 = call zeroext i1 @rtl8152_is_fw_phy_nc_ok(%struct.r8152* %76, %struct.fw_phy_nc* %77) #13, !dbg !20031
  br i1 %call89, label %if.end93, label %if.then90, !dbg !20032

if.then90:                                        ; preds = %if.end88
  %78 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20033
  %intf91 = getelementptr inbounds %struct.r8152, %struct.r8152* %78, i32 0, i32 3, !dbg !20033
  %79 = load %struct.usb_interface*, %struct.usb_interface** %intf91, align 8, !dbg !20033
  %dev92 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %79, i32 0, i32 7, !dbg !20033
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev92, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.40, i64 0, i64 0)) #14, !dbg !20033
  br label %fail, !dbg !20035

if.end93:                                         ; preds = %if.end88
  br label %sw.epilog, !dbg !20036

sw.default:                                       ; preds = %if.end14
  %80 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20037
  %intf94 = getelementptr inbounds %struct.r8152, %struct.r8152* %80, i32 0, i32 3, !dbg !20037
  %81 = load %struct.usb_interface*, %struct.usb_interface** %intf94, align 8, !dbg !20037
  %dev95 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %81, i32 0, i32 7, !dbg !20037
  %82 = load i32, i32* %type, align 4, !dbg !20037
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev95, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.41, i64 0, i64 0), i32 %82) #14, !dbg !20037
  br label %sw.epilog, !dbg !20038

sw.epilog:                                        ; preds = %sw.default, %if.end93, %if.end75, %if.end59, %if.end42, %if.end31
  %83 = load %struct.fw_block*, %struct.fw_block** %block, align 8, !dbg !20039
  %length96 = getelementptr inbounds %struct.fw_block, %struct.fw_block* %83, i32 0, i32 1, !dbg !20039
  %84 = load i32, i32* %length96, align 1, !dbg !20039
  %add97 = add i32 %84, 7, !dbg !20039
  %and = and i32 %add97, -8, !dbg !20039
  %85 = load i32, i32* %i, align 4, !dbg !20040
  %add98 = add i32 %85, %and, !dbg !20040
  store i32 %add98, i32* %i, align 4, !dbg !20040
  br label %for.cond, !dbg !20041, !llvm.loop !20042

for.end:                                          ; preds = %for.cond
  br label %fw_end, !dbg !20043

fw_end:                                           ; preds = %for.end, %if.end20
  call void @llvm.dbg.label(metadata !20044), !dbg !20045
  %86 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy_nc, align 8, !dbg !20046
  %tobool99 = icmp ne %struct.fw_phy_nc* %86, null, !dbg !20046
  br i1 %tobool99, label %land.lhs.true, label %lor.lhs.false100, !dbg !20048

lor.lhs.false100:                                 ; preds = %fw_end
  %87 = load %struct.fw_phy_patch_key*, %struct.fw_phy_patch_key** %start, align 8, !dbg !20049
  %tobool101 = icmp ne %struct.fw_phy_patch_key* %87, null, !dbg !20049
  br i1 %tobool101, label %land.lhs.true, label %if.end106, !dbg !20050

land.lhs.true:                                    ; preds = %lor.lhs.false100, %fw_end
  %88 = load %struct.fw_block*, %struct.fw_block** %stop, align 8, !dbg !20051
  %tobool102 = icmp ne %struct.fw_block* %88, null, !dbg !20051
  br i1 %tobool102, label %if.end106, label %if.then103, !dbg !20052

if.then103:                                       ; preds = %land.lhs.true
  %89 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20053
  %intf104 = getelementptr inbounds %struct.r8152, %struct.r8152* %89, i32 0, i32 3, !dbg !20053
  %90 = load %struct.usb_interface*, %struct.usb_interface** %intf104, align 8, !dbg !20053
  %dev105 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %90, i32 0, i32 7, !dbg !20053
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev105, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0)) #14, !dbg !20053
  br label %fail, !dbg !20055

if.end106:                                        ; preds = %land.lhs.true, %lor.lhs.false100
  store i64 0, i64* %retval, align 8, !dbg !20056
  br label %return, !dbg !20056

fail:                                             ; preds = %if.then103, %if.then90, %if.then85, %if.then80, %if.then72, %if.then64, %if.then56, %if.then48, %if.then39, %if.then34, %if.then28, %if.then23, %if.then19, %if.then13, %if.then3, %if.then
  call void @llvm.dbg.label(metadata !20057), !dbg !20058
  %91 = load i64, i64* %ret, align 8, !dbg !20059
  store i64 %91, i64* %retval, align 8, !dbg !20060
  br label %return, !dbg !20060

return:                                           ; preds = %fail, %if.end106
  %92 = load i64, i64* %retval, align 8, !dbg !20061
  ret i64 %92, !dbg !20061
}

; Function Attrs: noredzone
declare dso_local void @release_firmware(%struct.firmware*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #2 !dbg !20062 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !20065, metadata !DIExpression()), !dbg !20066
  %0 = load i64, i64* %error.addr, align 8, !dbg !20067
  %1 = inttoptr i64 %0 to i8*, !dbg !20068
  ret i8* %1, !dbg !20069
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @rtl8152_fw_verify_checksum(%struct.r8152* %tp, %struct.fw_header* %fw_hdr, i64 %size) #2 !dbg !20070 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !11594, metadata !DIExpression()), !dbg !20073
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !11606, metadata !DIExpression()), !dbg !20076
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !11608, metadata !DIExpression()), !dbg !20077
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !11610, metadata !DIExpression()), !dbg !20078
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !11612, metadata !DIExpression()), !dbg !20079
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !11618, metadata !DIExpression()), !dbg !20081
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !11624, metadata !DIExpression()), !dbg !20083
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !11633, metadata !DIExpression()), !dbg !20086
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !11635, metadata !DIExpression()), !dbg !20087
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !11637, metadata !DIExpression()), !dbg !20088
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !11639, metadata !DIExpression()), !dbg !20089
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !11641, metadata !DIExpression()), !dbg !20090
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11643, metadata !DIExpression()), !dbg !20091
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !11645, metadata !DIExpression()), !dbg !20092
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !11647, metadata !DIExpression()), !dbg !20093
  %tp.addr = alloca %struct.r8152*, align 8
  %fw_hdr.addr = alloca %struct.fw_header*, align 8
  %size.addr = alloca i64, align 8
  %checksum = alloca [32 x i8], align 16
  %alg = alloca %struct.crypto_shash*, align 8
  %sdesc = alloca %struct.shash_desc*, align 8
  %len = alloca i64, align 8
  %rc = alloca i64, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !20094, metadata !DIExpression()), !dbg !20095
  store %struct.fw_header* %fw_hdr, %struct.fw_header** %fw_hdr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_header** %fw_hdr.addr, metadata !20096, metadata !DIExpression()), !dbg !20097
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20098, metadata !DIExpression()), !dbg !20099
  call void @llvm.dbg.declare(metadata [32 x i8]* %checksum, metadata !20100, metadata !DIExpression()), !dbg !20101
  call void @llvm.dbg.declare(metadata %struct.crypto_shash** %alg, metadata !20102, metadata !DIExpression()), !dbg !20103
  call void @llvm.dbg.declare(metadata %struct.shash_desc** %sdesc, metadata !20104, metadata !DIExpression()), !dbg !20105
  call void @llvm.dbg.declare(metadata i64* %len, metadata !20106, metadata !DIExpression()), !dbg !20107
  call void @llvm.dbg.declare(metadata i64* %rc, metadata !20108, metadata !DIExpression()), !dbg !20109
  %call = call %struct.crypto_shash* @crypto_alloc_shash(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i64 0, i64 0), i32 0, i32 0) #13, !dbg !20110
  store %struct.crypto_shash* %call, %struct.crypto_shash** %alg, align 8, !dbg !20111
  %0 = load %struct.crypto_shash*, %struct.crypto_shash** %alg, align 8, !dbg !20112
  %1 = bitcast %struct.crypto_shash* %0 to i8*, !dbg !20112
  %call1 = call zeroext i1 @IS_ERR(i8* %1) #13, !dbg !20114
  br i1 %call1, label %if.then, label %if.end, !dbg !20115

if.then:                                          ; preds = %entry
  %2 = load %struct.crypto_shash*, %struct.crypto_shash** %alg, align 8, !dbg !20116
  %3 = bitcast %struct.crypto_shash* %2 to i8*, !dbg !20116
  %call2 = call i64 @PTR_ERR(i8* %3) #13, !dbg !20118
  store i64 %call2, i64* %rc, align 8, !dbg !20119
  br label %out, !dbg !20120

if.end:                                           ; preds = %entry
  %4 = load %struct.crypto_shash*, %struct.crypto_shash** %alg, align 8, !dbg !20121
  %call3 = call i32 @crypto_shash_digestsize(%struct.crypto_shash* %4) #13, !dbg !20123
  %conv = zext i32 %call3 to i64, !dbg !20123
  %cmp = icmp ne i64 %conv, 32, !dbg !20124
  br i1 %cmp, label %if.then5, label %if.end7, !dbg !20125

if.then5:                                         ; preds = %if.end
  store i64 -14, i64* %rc, align 8, !dbg !20126
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20128
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 3, !dbg !20128
  %6 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !20128
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %6, i32 0, i32 7, !dbg !20128
  %7 = load %struct.crypto_shash*, %struct.crypto_shash** %alg, align 8, !dbg !20128
  %call6 = call i32 @crypto_shash_digestsize(%struct.crypto_shash* %7) #13, !dbg !20128
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.44, i64 0, i64 0), i32 %call6) #14, !dbg !20128
  br label %free_shash, !dbg !20129

if.end7:                                          ; preds = %if.end
  %8 = load %struct.crypto_shash*, %struct.crypto_shash** %alg, align 8, !dbg !20130
  %call8 = call i32 @crypto_shash_descsize(%struct.crypto_shash* %8) #13, !dbg !20131
  %conv9 = zext i32 %call8 to i64, !dbg !20131
  %add = add i64 8, %conv9, !dbg !20132
  store i64 %add, i64* %len, align 8, !dbg !20133
  %9 = load i64, i64* %len, align 8, !dbg !20134
  store i64 %9, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %10 = load i64, i64* %size.addr.i, align 8, !dbg !20135
  %11 = call i1 @llvm.is.constant.i64(i64 %10) #11, !dbg !20136
  br i1 %11, label %if.then.i, label %if.end9.i, !dbg !20137

if.then.i:                                        ; preds = %if.end7
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !20138
  %cmp.i = icmp ugt i64 %12, 8192, !dbg !20139
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !20140

if.then1.i:                                       ; preds = %if.then.i
  %13 = load i64, i64* %size.addr.i, align 8, !dbg !20141
  %14 = load i32, i32* %flags.addr.i, align 4, !dbg !20142
  store i64 %13, i64* %size.addr.i.i, align 8
  store i32 %14, i32* %flags.addr.i.i, align 4
  %15 = load i64, i64* %size.addr.i.i, align 8, !dbg !20143
  %call.i.i = call i32 @get_order(i64 %15) #15, !dbg !20144
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !20090
  %16 = load i64, i64* %size.addr.i.i, align 8, !dbg !20145
  %17 = load i32, i32* %flags.addr.i.i, align 4, !dbg !20146
  %18 = load i32, i32* %order.i.i, align 4, !dbg !20147
  store i64 %16, i64* %size.addr.i.i.i, align 8
  store i32 %17, i32* %flags.addr.i.i.i, align 4
  store i32 %18, i32* %order.addr.i.i.i, align 4
  %19 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !20148
  %20 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !20149
  %21 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !20150
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %19, i32 %20, i32 %21) #16, !dbg !20151
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !20151
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !20151
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !20151
  call void @llvm.assume(i1 %maskcond.i.i.i) #11, !dbg !20151
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !20152
  br label %kmalloc.exit, !dbg !20152

if.end.i:                                         ; preds = %if.then.i
  %22 = load i64, i64* %size.addr.i, align 8, !dbg !20153
  store i64 %22, i64* %size.addr.i11.i, align 8
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20154
  %tobool.i.i = icmp ne i64 %23, 0, !dbg !20154
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !20155

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !20156
  br label %kmalloc_index.exit.i, !dbg !20156

if.end.i.i:                                       ; preds = %if.end.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20157
  %cmp.i.i = icmp ule i64 %24, 8, !dbg !20158
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !20159

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !20160
  br label %kmalloc_index.exit.i, !dbg !20160

if.end2.i.i:                                      ; preds = %if.end.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20161
  %cmp3.i.i = icmp ugt i64 %25, 64, !dbg !20162
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !20163

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20164
  %cmp4.i.i = icmp ule i64 %26, 96, !dbg !20165
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !20166

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !20167
  br label %kmalloc_index.exit.i, !dbg !20167

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20168
  %cmp7.i.i = icmp ugt i64 %27, 128, !dbg !20169
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !20170

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20171
  %cmp9.i.i = icmp ule i64 %28, 192, !dbg !20172
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !20173

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !20174
  br label %kmalloc_index.exit.i, !dbg !20174

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20175
  %cmp12.i.i = icmp ule i64 %29, 8, !dbg !20176
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !20177

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !20178
  br label %kmalloc_index.exit.i, !dbg !20178

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20179
  %cmp15.i.i = icmp ule i64 %30, 16, !dbg !20180
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !20181

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !20182
  br label %kmalloc_index.exit.i, !dbg !20182

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20183
  %cmp18.i.i = icmp ule i64 %31, 32, !dbg !20184
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !20185

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !20186
  br label %kmalloc_index.exit.i, !dbg !20186

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20187
  %cmp21.i.i = icmp ule i64 %32, 64, !dbg !20188
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !20189

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !20190
  br label %kmalloc_index.exit.i, !dbg !20190

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20191
  %cmp24.i.i = icmp ule i64 %33, 128, !dbg !20192
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !20193

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !20194
  br label %kmalloc_index.exit.i, !dbg !20194

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20195
  %cmp27.i.i = icmp ule i64 %34, 256, !dbg !20196
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !20197

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !20198
  br label %kmalloc_index.exit.i, !dbg !20198

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20199
  %cmp30.i.i = icmp ule i64 %35, 512, !dbg !20200
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !20201

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !20202
  br label %kmalloc_index.exit.i, !dbg !20202

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20203
  %cmp33.i.i = icmp ule i64 %36, 1024, !dbg !20204
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !20205

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !20206
  br label %kmalloc_index.exit.i, !dbg !20206

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20207
  %cmp36.i.i = icmp ule i64 %37, 2048, !dbg !20208
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !20209

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !20210
  br label %kmalloc_index.exit.i, !dbg !20210

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20211
  %cmp39.i.i = icmp ule i64 %38, 4096, !dbg !20212
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !20213

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !20214
  br label %kmalloc_index.exit.i, !dbg !20214

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20215
  %cmp42.i.i = icmp ule i64 %39, 8192, !dbg !20216
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !20217

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !20218
  br label %kmalloc_index.exit.i, !dbg !20218

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20219
  %cmp45.i.i = icmp ule i64 %40, 16384, !dbg !20220
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !20221

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !20222
  br label %kmalloc_index.exit.i, !dbg !20222

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20223
  %cmp48.i.i = icmp ule i64 %41, 32768, !dbg !20224
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !20225

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !20226
  br label %kmalloc_index.exit.i, !dbg !20226

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20227
  %cmp51.i.i = icmp ule i64 %42, 65536, !dbg !20228
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !20229

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !20230
  br label %kmalloc_index.exit.i, !dbg !20230

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20231
  %cmp54.i.i = icmp ule i64 %43, 131072, !dbg !20232
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !20233

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !20234
  br label %kmalloc_index.exit.i, !dbg !20234

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20235
  %cmp57.i.i = icmp ule i64 %44, 262144, !dbg !20236
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !20237

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !20238
  br label %kmalloc_index.exit.i, !dbg !20238

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20239
  %cmp60.i.i = icmp ule i64 %45, 524288, !dbg !20240
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !20241

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !20242
  br label %kmalloc_index.exit.i, !dbg !20242

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20243
  %cmp63.i.i = icmp ule i64 %46, 1048576, !dbg !20244
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !20245

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !20246
  br label %kmalloc_index.exit.i, !dbg !20246

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20247
  %cmp66.i.i = icmp ule i64 %47, 2097152, !dbg !20248
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !20249

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !20250
  br label %kmalloc_index.exit.i, !dbg !20250

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20251
  %cmp69.i.i = icmp ule i64 %48, 4194304, !dbg !20252
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !20253

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !20254
  br label %kmalloc_index.exit.i, !dbg !20254

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20255
  %cmp72.i.i = icmp ule i64 %49, 8388608, !dbg !20256
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !20257

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !20258
  br label %kmalloc_index.exit.i, !dbg !20258

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20259
  %cmp75.i.i = icmp ule i64 %50, 16777216, !dbg !20260
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !20261

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !20262
  br label %kmalloc_index.exit.i, !dbg !20262

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20263
  %cmp78.i.i = icmp ule i64 %51, 33554432, !dbg !20264
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !20265

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !20266
  br label %kmalloc_index.exit.i, !dbg !20266

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20267
  %cmp81.i.i = icmp ule i64 %52, 67108864, !dbg !20268
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !20269

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !20270
  br label %kmalloc_index.exit.i, !dbg !20270

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #11, !dbg !20271, !srcloc !11831
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 93) #11, !dbg !20272, !srcloc !11835
  unreachable, !dbg !20273

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %53 = load i32, i32* %retval.i.i, align 4, !dbg !20274
  store i32 %53, i32* %index.i, align 4, !dbg !20275
  %54 = load i32, i32* %index.i, align 4, !dbg !20276
  %tobool.i = icmp ne i32 %54, 0, !dbg !20276
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !20277

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !20278
  br label %kmalloc.exit, !dbg !20278

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %55 = load i32, i32* %flags.addr.i, align 4, !dbg !20279
  store i32 %55, i32* %flags.addr.i13.i, align 4
  %56 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !20280
  %and.i.i = and i32 %56, 17, !dbg !20280
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !20280
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !20280
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !20280
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !20280
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !20281

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !20282
  br label %kmalloc_type.exit.i, !dbg !20282

if.end.i16.i:                                     ; preds = %if.end4.i
  %57 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !20283
  %and2.i.i = and i32 %57, 1, !dbg !20284
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !20283
  %58 = zext i1 %tobool3.i.i to i64, !dbg !20283
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !20283
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !20285
  br label %kmalloc_type.exit.i, !dbg !20285

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %59 = load i32, i32* %retval.i12.i, align 4, !dbg !20286
  %idxprom.i = zext i32 %59 to i64, !dbg !20287
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !20287
  %60 = load i32, i32* %index.i, align 4, !dbg !20288
  %idxprom6.i = zext i32 %60 to i64, !dbg !20287
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !20287
  %61 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !20287
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !20289
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !20290
  store %struct.kmem_cache* %61, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %62, i32* %flags.addr.i17.i, align 4
  store i64 %63, i64* %size.addr.i18.i, align 8
  %64 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !20291
  %65 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !20292
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %64, i32 %65) #16, !dbg !20293
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !20293
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !20293
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !20293
  call void @llvm.assume(i1 %maskcond.i.i) #11, !dbg !20293
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !20078
  %66 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !20294
  %67 = load i8*, i8** %ret.i.i, align 8, !dbg !20295
  %68 = load i64, i64* %size.addr.i18.i, align 8, !dbg !20296
  %69 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !20297
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %66, i8* %67, i64 %68, i32 %69) #16, !dbg !20298
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !20299
  %70 = load i8*, i8** %ret.i.i, align 8, !dbg !20300
  store i8* %70, i8** %retval.i, align 8, !dbg !20301
  br label %kmalloc.exit, !dbg !20301

if.end9.i:                                        ; preds = %if.end7
  %71 = load i64, i64* %size.addr.i, align 8, !dbg !20302
  %72 = load i32, i32* %flags.addr.i, align 4, !dbg !20303
  %call10.i = call noalias i8* @__kmalloc(i64 %71, i32 %72) #16, !dbg !20304
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !20304
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !20304
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !20304
  call void @llvm.assume(i1 %maskcond.i) #11, !dbg !20304
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !20305
  br label %kmalloc.exit, !dbg !20305

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %73 = load i8*, i8** %retval.i, align 8, !dbg !20306
  %74 = bitcast i8* %73 to %struct.shash_desc*, !dbg !20307
  store %struct.shash_desc* %74, %struct.shash_desc** %sdesc, align 8, !dbg !20308
  %75 = load %struct.shash_desc*, %struct.shash_desc** %sdesc, align 8, !dbg !20309
  %tobool = icmp ne %struct.shash_desc* %75, null, !dbg !20309
  br i1 %tobool, label %if.end12, label %if.then11, !dbg !20311

if.then11:                                        ; preds = %kmalloc.exit
  store i64 -12, i64* %rc, align 8, !dbg !20312
  br label %free_shash, !dbg !20314

if.end12:                                         ; preds = %kmalloc.exit
  %76 = load %struct.crypto_shash*, %struct.crypto_shash** %alg, align 8, !dbg !20315
  %77 = load %struct.shash_desc*, %struct.shash_desc** %sdesc, align 8, !dbg !20316
  %tfm = getelementptr inbounds %struct.shash_desc, %struct.shash_desc* %77, i32 0, i32 0, !dbg !20317
  store %struct.crypto_shash* %76, %struct.crypto_shash** %tfm, align 8, !dbg !20318
  %78 = load i64, i64* %size.addr, align 8, !dbg !20319
  %sub = sub i64 %78, 32, !dbg !20320
  store i64 %sub, i64* %len, align 8, !dbg !20321
  %79 = load %struct.shash_desc*, %struct.shash_desc** %sdesc, align 8, !dbg !20322
  %80 = load %struct.fw_header*, %struct.fw_header** %fw_hdr.addr, align 8, !dbg !20323
  %version = getelementptr inbounds %struct.fw_header, %struct.fw_header* %80, i32 0, i32 1, !dbg !20324
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %version, i64 0, i64 0, !dbg !20323
  %81 = load i64, i64* %len, align 8, !dbg !20325
  %conv13 = trunc i64 %81 to i32, !dbg !20325
  %arraydecay14 = getelementptr inbounds [32 x i8], [32 x i8]* %checksum, i64 0, i64 0, !dbg !20326
  %call15 = call i32 @crypto_shash_digest(%struct.shash_desc* %79, i8* %arraydecay, i32 %conv13, i8* %arraydecay14) #13, !dbg !20327
  %conv16 = sext i32 %call15 to i64, !dbg !20327
  store i64 %conv16, i64* %rc, align 8, !dbg !20328
  %82 = load %struct.shash_desc*, %struct.shash_desc** %sdesc, align 8, !dbg !20329
  %83 = bitcast %struct.shash_desc* %82 to i8*, !dbg !20329
  call void @kfree(i8* %83) #13, !dbg !20330
  %84 = load i64, i64* %rc, align 8, !dbg !20331
  %tobool17 = icmp ne i64 %84, 0, !dbg !20331
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !20333

if.then18:                                        ; preds = %if.end12
  br label %free_shash, !dbg !20334

if.end19:                                         ; preds = %if.end12
  %85 = load %struct.fw_header*, %struct.fw_header** %fw_hdr.addr, align 8, !dbg !20335
  %checksum20 = getelementptr inbounds %struct.fw_header, %struct.fw_header* %85, i32 0, i32 0, !dbg !20337
  %arraydecay21 = getelementptr inbounds [32 x i8], [32 x i8]* %checksum20, i64 0, i64 0, !dbg !20335
  %arraydecay22 = getelementptr inbounds [32 x i8], [32 x i8]* %checksum, i64 0, i64 0, !dbg !20338
  %call23 = call i32 @memcmp(i8* %arraydecay21, i8* %arraydecay22, i64 32) #13, !dbg !20339
  %tobool24 = icmp ne i32 %call23, 0, !dbg !20339
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !20340

if.then25:                                        ; preds = %if.end19
  %86 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20341
  %intf26 = getelementptr inbounds %struct.r8152, %struct.r8152* %86, i32 0, i32 3, !dbg !20341
  %87 = load %struct.usb_interface*, %struct.usb_interface** %intf26, align 8, !dbg !20341
  %dev27 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %87, i32 0, i32 7, !dbg !20341
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev27, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i64 0, i64 0)) #14, !dbg !20341
  store i64 -14, i64* %rc, align 8, !dbg !20343
  br label %if.end28, !dbg !20344

if.end28:                                         ; preds = %if.then25, %if.end19
  br label %free_shash, !dbg !20345

free_shash:                                       ; preds = %if.end28, %if.then18, %if.then11, %if.then5
  call void @llvm.dbg.label(metadata !20346), !dbg !20347
  %88 = load %struct.crypto_shash*, %struct.crypto_shash** %alg, align 8, !dbg !20348
  call void @crypto_free_shash(%struct.crypto_shash* %88) #13, !dbg !20349
  br label %out, !dbg !20349

out:                                              ; preds = %free_shash, %if.then
  call void @llvm.dbg.label(metadata !20350), !dbg !20351
  %89 = load i64, i64* %rc, align 8, !dbg !20352
  ret i64 %89, !dbg !20353
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @rtl8152_is_fw_mac_ok(%struct.r8152* %tp, %struct.fw_mac* %mac) #2 !dbg !20354 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %mac.addr = alloca %struct.fw_mac*, align 8
  %fw_reg = alloca i16, align 2
  %bp_ba_addr = alloca i16, align 2
  %bp_en_addr = alloca i16, align 2
  %bp_start = alloca i16, align 2
  %fw_offset = alloca i16, align 2
  %rc = alloca i8, align 1
  %length = alloca i32, align 4
  %type = alloca i32, align 4
  %i = alloca i32, align 4
  %max_bp = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !20357, metadata !DIExpression()), !dbg !20358
  store %struct.fw_mac* %mac, %struct.fw_mac** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_mac** %mac.addr, metadata !20359, metadata !DIExpression()), !dbg !20360
  call void @llvm.dbg.declare(metadata i16* %fw_reg, metadata !20361, metadata !DIExpression()), !dbg !20362
  call void @llvm.dbg.declare(metadata i16* %bp_ba_addr, metadata !20363, metadata !DIExpression()), !dbg !20364
  call void @llvm.dbg.declare(metadata i16* %bp_en_addr, metadata !20365, metadata !DIExpression()), !dbg !20366
  call void @llvm.dbg.declare(metadata i16* %bp_start, metadata !20367, metadata !DIExpression()), !dbg !20368
  call void @llvm.dbg.declare(metadata i16* %fw_offset, metadata !20369, metadata !DIExpression()), !dbg !20370
  call void @llvm.dbg.declare(metadata i8* %rc, metadata !20371, metadata !DIExpression()), !dbg !20372
  store i8 0, i8* %rc, align 1, !dbg !20372
  call void @llvm.dbg.declare(metadata i32* %length, metadata !20373, metadata !DIExpression()), !dbg !20374
  call void @llvm.dbg.declare(metadata i32* %type, metadata !20375, metadata !DIExpression()), !dbg !20376
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20377, metadata !DIExpression()), !dbg !20378
  call void @llvm.dbg.declare(metadata i32* %max_bp, metadata !20379, metadata !DIExpression()), !dbg !20380
  %0 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !20381
  %blk_hdr = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %0, i32 0, i32 0, !dbg !20381
  %type1 = getelementptr inbounds %struct.fw_block, %struct.fw_block* %blk_hdr, i32 0, i32 0, !dbg !20381
  %1 = load i32, i32* %type1, align 1, !dbg !20381
  store i32 %1, i32* %type, align 4, !dbg !20382
  %2 = load i32, i32* %type, align 4, !dbg !20383
  %cmp = icmp eq i32 %2, 1, !dbg !20385
  br i1 %cmp, label %if.then, label %if.else, !dbg !20386

if.then:                                          ; preds = %entry
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20387
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %3, i32 0, i32 39, !dbg !20389
  %4 = load i8, i8* %version, align 8, !dbg !20389
  %conv = zext i8 %4 to i32, !dbg !20387
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 7, label %sw.bb
    i32 3, label %sw.bb2
    i32 4, label %sw.bb2
    i32 5, label %sw.bb2
    i32 6, label %sw.bb2
    i32 8, label %sw.bb2
    i32 9, label %sw.bb2
  ], !dbg !20390

sw.bb:                                            ; preds = %if.then, %if.then, %if.then
  store i16 -2048, i16* %fw_reg, align 2, !dbg !20391
  store i16 -986, i16* %bp_ba_addr, align 2, !dbg !20393
  store i16 0, i16* %bp_en_addr, align 2, !dbg !20394
  store i16 -984, i16* %bp_start, align 2, !dbg !20395
  store i32 8, i32* %max_bp, align 4, !dbg !20396
  br label %sw.epilog, !dbg !20397

sw.bb2:                                           ; preds = %if.then, %if.then, %if.then, %if.then, %if.then, %if.then
  store i16 -2048, i16* %fw_reg, align 2, !dbg !20398
  store i16 -986, i16* %bp_ba_addr, align 2, !dbg !20399
  store i16 -968, i16* %bp_en_addr, align 2, !dbg !20400
  store i16 -984, i16* %bp_start, align 2, !dbg !20401
  store i32 8, i32* %max_bp, align 4, !dbg !20402
  br label %sw.epilog, !dbg !20403

sw.default:                                       ; preds = %if.then
  br label %out, !dbg !20404

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb
  br label %if.end14, !dbg !20405

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %type, align 4, !dbg !20406
  %cmp3 = icmp eq i32 %5, 2, !dbg !20408
  br i1 %cmp3, label %if.then5, label %if.else13, !dbg !20409

if.then5:                                         ; preds = %if.else
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20410
  %version6 = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 39, !dbg !20412
  %7 = load i8, i8* %version6, align 8, !dbg !20412
  %conv7 = zext i8 %7 to i32, !dbg !20410
  switch i32 %conv7, label %sw.default11 [
    i32 3, label %sw.bb8
    i32 4, label %sw.bb8
    i32 5, label %sw.bb8
    i32 6, label %sw.bb8
    i32 8, label %sw.bb9
    i32 9, label %sw.bb9
    i32 1, label %sw.bb10
    i32 2, label %sw.bb10
    i32 7, label %sw.bb10
  ], !dbg !20413

sw.bb8:                                           ; preds = %if.then5, %if.then5, %if.then5, %if.then5
  store i16 -2048, i16* %fw_reg, align 2, !dbg !20414
  store i16 -986, i16* %bp_ba_addr, align 2, !dbg !20416
  store i16 -968, i16* %bp_en_addr, align 2, !dbg !20417
  store i16 -984, i16* %bp_start, align 2, !dbg !20418
  store i32 8, i32* %max_bp, align 4, !dbg !20419
  br label %sw.epilog12, !dbg !20420

sw.bb9:                                           ; preds = %if.then5, %if.then5
  store i16 -6656, i16* %fw_reg, align 2, !dbg !20421
  store i16 -986, i16* %bp_ba_addr, align 2, !dbg !20422
  store i16 -952, i16* %bp_en_addr, align 2, !dbg !20423
  store i16 -984, i16* %bp_start, align 2, !dbg !20424
  store i32 16, i32* %max_bp, align 4, !dbg !20425
  br label %sw.epilog12, !dbg !20426

sw.bb10:                                          ; preds = %if.then5, %if.then5, %if.then5
  br label %sw.default11, !dbg !20426

sw.default11:                                     ; preds = %if.then5, %sw.bb10
  br label %out, !dbg !20427

sw.epilog12:                                      ; preds = %sw.bb9, %sw.bb8
  br label %if.end, !dbg !20428

if.else13:                                        ; preds = %if.else
  br label %out, !dbg !20429

if.end:                                           ; preds = %sw.epilog12
  br label %if.end14

if.end14:                                         ; preds = %if.end, %sw.epilog
  %8 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !20431
  %fw_offset15 = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %8, i32 0, i32 1, !dbg !20431
  %9 = load i16, i16* %fw_offset15, align 1, !dbg !20431
  store i16 %9, i16* %fw_offset, align 2, !dbg !20432
  %10 = load i16, i16* %fw_offset, align 2, !dbg !20433
  %conv16 = zext i16 %10 to i64, !dbg !20433
  %cmp17 = icmp ult i64 %conv16, 63, !dbg !20435
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !20436

if.then19:                                        ; preds = %if.end14
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20437
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 3, !dbg !20437
  %12 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !20437
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %12, i32 0, i32 7, !dbg !20437
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.46, i64 0, i64 0)) #14, !dbg !20437
  br label %out, !dbg !20439

if.end20:                                         ; preds = %if.end14
  %13 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !20440
  %blk_hdr21 = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %13, i32 0, i32 0, !dbg !20440
  %length22 = getelementptr inbounds %struct.fw_block, %struct.fw_block* %blk_hdr21, i32 0, i32 1, !dbg !20440
  %14 = load i32, i32* %length22, align 1, !dbg !20440
  store i32 %14, i32* %length, align 4, !dbg !20441
  %15 = load i32, i32* %length, align 4, !dbg !20442
  %16 = load i16, i16* %fw_offset, align 2, !dbg !20444
  %conv23 = zext i16 %16 to i32, !dbg !20444
  %cmp24 = icmp ult i32 %15, %conv23, !dbg !20445
  br i1 %cmp24, label %if.then26, label %if.end29, !dbg !20446

if.then26:                                        ; preds = %if.end20
  %17 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20447
  %intf27 = getelementptr inbounds %struct.r8152, %struct.r8152* %17, i32 0, i32 3, !dbg !20447
  %18 = load %struct.usb_interface*, %struct.usb_interface** %intf27, align 8, !dbg !20447
  %dev28 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %18, i32 0, i32 7, !dbg !20447
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev28, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.47, i64 0, i64 0)) #14, !dbg !20447
  br label %out, !dbg !20449

if.end29:                                         ; preds = %if.end20
  %19 = load i16, i16* %fw_offset, align 2, !dbg !20450
  %conv30 = zext i16 %19 to i32, !dbg !20450
  %20 = load i32, i32* %length, align 4, !dbg !20451
  %sub = sub i32 %20, %conv30, !dbg !20451
  store i32 %sub, i32* %length, align 4, !dbg !20451
  %21 = load i32, i32* %length, align 4, !dbg !20452
  %cmp31 = icmp ult i32 %21, 4, !dbg !20454
  br i1 %cmp31, label %if.then33, label %lor.lhs.false, !dbg !20455

lor.lhs.false:                                    ; preds = %if.end29
  %22 = load i32, i32* %length, align 4, !dbg !20456
  %and = and i32 %22, 3, !dbg !20457
  %tobool = icmp ne i32 %and, 0, !dbg !20457
  br i1 %tobool, label %if.then33, label %if.end36, !dbg !20458

if.then33:                                        ; preds = %lor.lhs.false, %if.end29
  %23 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20459
  %intf34 = getelementptr inbounds %struct.r8152, %struct.r8152* %23, i32 0, i32 3, !dbg !20459
  %24 = load %struct.usb_interface*, %struct.usb_interface** %intf34, align 8, !dbg !20459
  %dev35 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %24, i32 0, i32 7, !dbg !20459
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev35, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.48, i64 0, i64 0)) #14, !dbg !20459
  br label %out, !dbg !20461

if.end36:                                         ; preds = %lor.lhs.false
  %25 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !20462
  %fw_reg37 = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %25, i32 0, i32 2, !dbg !20462
  %26 = load i16, i16* %fw_reg37, align 1, !dbg !20462
  %conv38 = zext i16 %26 to i32, !dbg !20462
  %27 = load i16, i16* %fw_reg, align 2, !dbg !20464
  %conv39 = zext i16 %27 to i32, !dbg !20464
  %cmp40 = icmp ne i32 %conv38, %conv39, !dbg !20465
  br i1 %cmp40, label %if.then42, label %if.end45, !dbg !20466

if.then42:                                        ; preds = %if.end36
  %28 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20467
  %intf43 = getelementptr inbounds %struct.r8152, %struct.r8152* %28, i32 0, i32 3, !dbg !20467
  %29 = load %struct.usb_interface*, %struct.usb_interface** %intf43, align 8, !dbg !20467
  %dev44 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %29, i32 0, i32 7, !dbg !20467
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev44, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.49, i64 0, i64 0)) #14, !dbg !20467
  br label %out, !dbg !20469

if.end45:                                         ; preds = %if.end36
  %30 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !20470
  %bp_ba_addr46 = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %30, i32 0, i32 3, !dbg !20470
  %31 = load i16, i16* %bp_ba_addr46, align 1, !dbg !20470
  %conv47 = zext i16 %31 to i32, !dbg !20470
  %32 = load i16, i16* %bp_ba_addr, align 2, !dbg !20472
  %conv48 = zext i16 %32 to i32, !dbg !20472
  %cmp49 = icmp ne i32 %conv47, %conv48, !dbg !20473
  br i1 %cmp49, label %if.then51, label %if.end54, !dbg !20474

if.then51:                                        ; preds = %if.end45
  %33 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20475
  %intf52 = getelementptr inbounds %struct.r8152, %struct.r8152* %33, i32 0, i32 3, !dbg !20475
  %34 = load %struct.usb_interface*, %struct.usb_interface** %intf52, align 8, !dbg !20475
  %dev53 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %34, i32 0, i32 7, !dbg !20475
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev53, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.50, i64 0, i64 0)) #14, !dbg !20475
  br label %out, !dbg !20477

if.end54:                                         ; preds = %if.end45
  %35 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !20478
  %bp_en_addr55 = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %35, i32 0, i32 5, !dbg !20478
  %36 = load i16, i16* %bp_en_addr55, align 1, !dbg !20478
  %conv56 = zext i16 %36 to i32, !dbg !20478
  %37 = load i16, i16* %bp_en_addr, align 2, !dbg !20480
  %conv57 = zext i16 %37 to i32, !dbg !20480
  %cmp58 = icmp ne i32 %conv56, %conv57, !dbg !20481
  br i1 %cmp58, label %if.then60, label %if.end63, !dbg !20482

if.then60:                                        ; preds = %if.end54
  %38 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20483
  %intf61 = getelementptr inbounds %struct.r8152, %struct.r8152* %38, i32 0, i32 3, !dbg !20483
  %39 = load %struct.usb_interface*, %struct.usb_interface** %intf61, align 8, !dbg !20483
  %dev62 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %39, i32 0, i32 7, !dbg !20483
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev62, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.51, i64 0, i64 0)) #14, !dbg !20483
  br label %out, !dbg !20485

if.end63:                                         ; preds = %if.end54
  %40 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !20486
  %bp_start64 = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %40, i32 0, i32 7, !dbg !20486
  %41 = load i16, i16* %bp_start64, align 1, !dbg !20486
  %conv65 = zext i16 %41 to i32, !dbg !20486
  %42 = load i16, i16* %bp_start, align 2, !dbg !20488
  %conv66 = zext i16 %42 to i32, !dbg !20488
  %cmp67 = icmp ne i32 %conv65, %conv66, !dbg !20489
  br i1 %cmp67, label %if.then69, label %if.end72, !dbg !20490

if.then69:                                        ; preds = %if.end63
  %43 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20491
  %intf70 = getelementptr inbounds %struct.r8152, %struct.r8152* %43, i32 0, i32 3, !dbg !20491
  %44 = load %struct.usb_interface*, %struct.usb_interface** %intf70, align 8, !dbg !20491
  %dev71 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %44, i32 0, i32 7, !dbg !20491
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev71, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.52, i64 0, i64 0)) #14, !dbg !20491
  br label %out, !dbg !20493

if.end72:                                         ; preds = %if.end63
  %45 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !20494
  %bp_num = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %45, i32 0, i32 8, !dbg !20494
  %46 = load i16, i16* %bp_num, align 1, !dbg !20494
  %conv73 = zext i16 %46 to i32, !dbg !20494
  %47 = load i32, i32* %max_bp, align 4, !dbg !20496
  %cmp74 = icmp sgt i32 %conv73, %47, !dbg !20497
  br i1 %cmp74, label %if.then76, label %if.end79, !dbg !20498

if.then76:                                        ; preds = %if.end72
  %48 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20499
  %intf77 = getelementptr inbounds %struct.r8152, %struct.r8152* %48, i32 0, i32 3, !dbg !20499
  %49 = load %struct.usb_interface*, %struct.usb_interface** %intf77, align 8, !dbg !20499
  %dev78 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %49, i32 0, i32 7, !dbg !20499
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev78, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.53, i64 0, i64 0)) #14, !dbg !20499
  br label %out, !dbg !20501

if.end79:                                         ; preds = %if.end72
  %50 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !20502
  %bp_num80 = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %50, i32 0, i32 8, !dbg !20502
  %51 = load i16, i16* %bp_num80, align 1, !dbg !20502
  %conv81 = zext i16 %51 to i32, !dbg !20502
  store i32 %conv81, i32* %i, align 4, !dbg !20504
  br label %for.cond, !dbg !20505

for.cond:                                         ; preds = %for.inc, %if.end79
  %52 = load i32, i32* %i, align 4, !dbg !20506
  %53 = load i32, i32* %max_bp, align 4, !dbg !20508
  %cmp82 = icmp slt i32 %52, %53, !dbg !20509
  br i1 %cmp82, label %for.body, label %for.end, !dbg !20510

for.body:                                         ; preds = %for.cond
  %54 = load %struct.fw_mac*, %struct.fw_mac** %mac.addr, align 8, !dbg !20511
  %bp = getelementptr inbounds %struct.fw_mac, %struct.fw_mac* %54, i32 0, i32 9, !dbg !20514
  %55 = load i32, i32* %i, align 4, !dbg !20515
  %idxprom = sext i32 %55 to i64, !dbg !20511
  %arrayidx = getelementptr [16 x i16], [16 x i16]* %bp, i64 0, i64 %idxprom, !dbg !20511
  %56 = load i16, i16* %arrayidx, align 1, !dbg !20511
  %tobool84 = icmp ne i16 %56, 0, !dbg !20511
  br i1 %tobool84, label %if.then85, label %if.end88, !dbg !20516

if.then85:                                        ; preds = %for.body
  %57 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20517
  %intf86 = getelementptr inbounds %struct.r8152, %struct.r8152* %57, i32 0, i32 3, !dbg !20517
  %58 = load %struct.usb_interface*, %struct.usb_interface** %intf86, align 8, !dbg !20517
  %dev87 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %58, i32 0, i32 7, !dbg !20517
  %59 = load i32, i32* %i, align 4, !dbg !20517
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev87, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.54, i64 0, i64 0), i32 %59) #14, !dbg !20517
  br label %out, !dbg !20519

if.end88:                                         ; preds = %for.body
  br label %for.inc, !dbg !20520

for.inc:                                          ; preds = %if.end88
  %60 = load i32, i32* %i, align 4, !dbg !20521
  %inc = add i32 %60, 1, !dbg !20521
  store i32 %inc, i32* %i, align 4, !dbg !20521
  br label %for.cond, !dbg !20522, !llvm.loop !20523

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %rc, align 1, !dbg !20525
  br label %out, !dbg !20526

out:                                              ; preds = %for.end, %if.then85, %if.then76, %if.then69, %if.then60, %if.then51, %if.then42, %if.then33, %if.then26, %if.then19, %if.else13, %sw.default11, %sw.default
  call void @llvm.dbg.label(metadata !20527), !dbg !20528
  %61 = load i8, i8* %rc, align 1, !dbg !20529
  %tobool89 = trunc i8 %61 to i1, !dbg !20529
  ret i1 %tobool89, !dbg !20530
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @rtl8152_is_fw_phy_nc_ok(%struct.r8152* %tp, %struct.fw_phy_nc* %phy) #2 !dbg !20531 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %phy.addr = alloca %struct.fw_phy_nc*, align 8
  %length = alloca i32, align 4
  %fw_offset = alloca i16, align 2
  %fw_reg = alloca i16, align 2
  %ba_reg = alloca i16, align 2
  %patch_en_addr = alloca i16, align 2
  %mode_reg = alloca i16, align 2
  %bp_start = alloca i16, align 2
  %rc = alloca i8, align 1
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !20534, metadata !DIExpression()), !dbg !20535
  store %struct.fw_phy_nc* %phy, %struct.fw_phy_nc** %phy.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_phy_nc** %phy.addr, metadata !20536, metadata !DIExpression()), !dbg !20537
  call void @llvm.dbg.declare(metadata i32* %length, metadata !20538, metadata !DIExpression()), !dbg !20539
  call void @llvm.dbg.declare(metadata i16* %fw_offset, metadata !20540, metadata !DIExpression()), !dbg !20541
  call void @llvm.dbg.declare(metadata i16* %fw_reg, metadata !20542, metadata !DIExpression()), !dbg !20543
  call void @llvm.dbg.declare(metadata i16* %ba_reg, metadata !20544, metadata !DIExpression()), !dbg !20545
  call void @llvm.dbg.declare(metadata i16* %patch_en_addr, metadata !20546, metadata !DIExpression()), !dbg !20547
  call void @llvm.dbg.declare(metadata i16* %mode_reg, metadata !20548, metadata !DIExpression()), !dbg !20549
  call void @llvm.dbg.declare(metadata i16* %bp_start, metadata !20550, metadata !DIExpression()), !dbg !20551
  call void @llvm.dbg.declare(metadata i8* %rc, metadata !20552, metadata !DIExpression()), !dbg !20553
  store i8 0, i8* %rc, align 1, !dbg !20553
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20554
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 39, !dbg !20555
  %1 = load i8, i8* %version, align 8, !dbg !20555
  %conv = zext i8 %1 to i32, !dbg !20554
  switch i32 %conv, label %sw.default [
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
  ], !dbg !20556

sw.bb:                                            ; preds = %entry, %entry, %entry
  store i16 -24556, i16* %fw_reg, align 2, !dbg !20557
  store i16 -24558, i16* %ba_reg, align 2, !dbg !20559
  store i16 -24550, i16* %patch_en_addr, align 2, !dbg !20560
  store i16 -18400, i16* %mode_reg, align 2, !dbg !20561
  store i16 -24576, i16* %bp_start, align 2, !dbg !20562
  br label %sw.epilog, !dbg !20563

sw.default:                                       ; preds = %entry
  br label %out, !dbg !20564

sw.epilog:                                        ; preds = %sw.bb
  %2 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !20565
  %fw_offset1 = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %2, i32 0, i32 1, !dbg !20565
  %3 = load i16, i16* %fw_offset1, align 1, !dbg !20565
  store i16 %3, i16* %fw_offset, align 2, !dbg !20566
  %4 = load i16, i16* %fw_offset, align 2, !dbg !20567
  %conv2 = zext i16 %4 to i64, !dbg !20567
  %cmp = icmp ult i64 %conv2, 40, !dbg !20569
  br i1 %cmp, label %if.then, label %if.end, !dbg !20570

if.then:                                          ; preds = %sw.epilog
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20571
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 3, !dbg !20571
  %6 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !20571
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %6, i32 0, i32 7, !dbg !20571
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.46, i64 0, i64 0)) #14, !dbg !20571
  br label %out, !dbg !20573

if.end:                                           ; preds = %sw.epilog
  %7 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !20574
  %blk_hdr = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %7, i32 0, i32 0, !dbg !20574
  %length4 = getelementptr inbounds %struct.fw_block, %struct.fw_block* %blk_hdr, i32 0, i32 1, !dbg !20574
  %8 = load i32, i32* %length4, align 1, !dbg !20574
  store i32 %8, i32* %length, align 4, !dbg !20575
  %9 = load i32, i32* %length, align 4, !dbg !20576
  %10 = load i16, i16* %fw_offset, align 2, !dbg !20578
  %conv5 = zext i16 %10 to i32, !dbg !20578
  %cmp6 = icmp ult i32 %9, %conv5, !dbg !20579
  br i1 %cmp6, label %if.then8, label %if.end11, !dbg !20580

if.then8:                                         ; preds = %if.end
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20581
  %intf9 = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 3, !dbg !20581
  %12 = load %struct.usb_interface*, %struct.usb_interface** %intf9, align 8, !dbg !20581
  %dev10 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %12, i32 0, i32 7, !dbg !20581
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev10, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.47, i64 0, i64 0)) #14, !dbg !20581
  br label %out, !dbg !20583

if.end11:                                         ; preds = %if.end
  %13 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !20584
  %fw_offset12 = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %13, i32 0, i32 1, !dbg !20584
  %14 = load i16, i16* %fw_offset12, align 1, !dbg !20584
  %conv13 = zext i16 %14 to i32, !dbg !20584
  %15 = load i32, i32* %length, align 4, !dbg !20585
  %sub = sub i32 %15, %conv13, !dbg !20585
  store i32 %sub, i32* %length, align 4, !dbg !20585
  %16 = load i32, i32* %length, align 4, !dbg !20586
  %tobool = icmp ne i32 %16, 0, !dbg !20586
  br i1 %tobool, label %lor.lhs.false, label %if.then15, !dbg !20588

lor.lhs.false:                                    ; preds = %if.end11
  %17 = load i32, i32* %length, align 4, !dbg !20589
  %and = and i32 %17, 1, !dbg !20590
  %tobool14 = icmp ne i32 %and, 0, !dbg !20590
  br i1 %tobool14, label %if.then15, label %if.end18, !dbg !20591

if.then15:                                        ; preds = %lor.lhs.false, %if.end11
  %18 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20592
  %intf16 = getelementptr inbounds %struct.r8152, %struct.r8152* %18, i32 0, i32 3, !dbg !20592
  %19 = load %struct.usb_interface*, %struct.usb_interface** %intf16, align 8, !dbg !20592
  %dev17 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %19, i32 0, i32 7, !dbg !20592
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev17, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.48, i64 0, i64 0)) #14, !dbg !20592
  br label %out, !dbg !20594

if.end18:                                         ; preds = %lor.lhs.false
  %20 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !20595
  %fw_reg19 = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %20, i32 0, i32 2, !dbg !20595
  %21 = load i16, i16* %fw_reg19, align 1, !dbg !20595
  %conv20 = zext i16 %21 to i32, !dbg !20595
  %22 = load i16, i16* %fw_reg, align 2, !dbg !20597
  %conv21 = zext i16 %22 to i32, !dbg !20597
  %cmp22 = icmp ne i32 %conv20, %conv21, !dbg !20598
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !20599

if.then24:                                        ; preds = %if.end18
  %23 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20600
  %intf25 = getelementptr inbounds %struct.r8152, %struct.r8152* %23, i32 0, i32 3, !dbg !20600
  %24 = load %struct.usb_interface*, %struct.usb_interface** %intf25, align 8, !dbg !20600
  %dev26 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %24, i32 0, i32 7, !dbg !20600
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev26, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.49, i64 0, i64 0)) #14, !dbg !20600
  br label %out, !dbg !20602

if.end27:                                         ; preds = %if.end18
  %25 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !20603
  %ba_reg28 = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %25, i32 0, i32 3, !dbg !20603
  %26 = load i16, i16* %ba_reg28, align 1, !dbg !20603
  %conv29 = zext i16 %26 to i32, !dbg !20603
  %27 = load i16, i16* %ba_reg, align 2, !dbg !20605
  %conv30 = zext i16 %27 to i32, !dbg !20605
  %cmp31 = icmp ne i32 %conv29, %conv30, !dbg !20606
  br i1 %cmp31, label %if.then33, label %if.end36, !dbg !20607

if.then33:                                        ; preds = %if.end27
  %28 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20608
  %intf34 = getelementptr inbounds %struct.r8152, %struct.r8152* %28, i32 0, i32 3, !dbg !20608
  %29 = load %struct.usb_interface*, %struct.usb_interface** %intf34, align 8, !dbg !20608
  %dev35 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %29, i32 0, i32 7, !dbg !20608
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev35, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.50, i64 0, i64 0)) #14, !dbg !20608
  br label %out, !dbg !20610

if.end36:                                         ; preds = %if.end27
  %30 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !20611
  %patch_en_addr37 = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %30, i32 0, i32 5, !dbg !20611
  %31 = load i16, i16* %patch_en_addr37, align 1, !dbg !20611
  %conv38 = zext i16 %31 to i32, !dbg !20611
  %32 = load i16, i16* %patch_en_addr, align 2, !dbg !20613
  %conv39 = zext i16 %32 to i32, !dbg !20613
  %cmp40 = icmp ne i32 %conv38, %conv39, !dbg !20614
  br i1 %cmp40, label %if.then42, label %if.end45, !dbg !20615

if.then42:                                        ; preds = %if.end36
  %33 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20616
  %intf43 = getelementptr inbounds %struct.r8152, %struct.r8152* %33, i32 0, i32 3, !dbg !20616
  %34 = load %struct.usb_interface*, %struct.usb_interface** %intf43, align 8, !dbg !20616
  %dev44 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %34, i32 0, i32 7, !dbg !20616
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev44, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.55, i64 0, i64 0)) #14, !dbg !20616
  br label %out, !dbg !20618

if.end45:                                         ; preds = %if.end36
  %35 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !20619
  %mode_reg46 = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %35, i32 0, i32 7, !dbg !20619
  %36 = load i16, i16* %mode_reg46, align 1, !dbg !20619
  %conv47 = zext i16 %36 to i32, !dbg !20619
  %37 = load i16, i16* %mode_reg, align 2, !dbg !20621
  %conv48 = zext i16 %37 to i32, !dbg !20621
  %cmp49 = icmp ne i32 %conv47, %conv48, !dbg !20622
  br i1 %cmp49, label %if.then51, label %if.end54, !dbg !20623

if.then51:                                        ; preds = %if.end45
  %38 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20624
  %intf52 = getelementptr inbounds %struct.r8152, %struct.r8152* %38, i32 0, i32 3, !dbg !20624
  %39 = load %struct.usb_interface*, %struct.usb_interface** %intf52, align 8, !dbg !20624
  %dev53 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %39, i32 0, i32 7, !dbg !20624
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev53, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.56, i64 0, i64 0)) #14, !dbg !20624
  br label %out, !dbg !20626

if.end54:                                         ; preds = %if.end45
  %40 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !20627
  %bp_start55 = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %40, i32 0, i32 11, !dbg !20627
  %41 = load i16, i16* %bp_start55, align 1, !dbg !20627
  %conv56 = zext i16 %41 to i32, !dbg !20627
  %42 = load i16, i16* %bp_start, align 2, !dbg !20629
  %conv57 = zext i16 %42 to i32, !dbg !20629
  %cmp58 = icmp ne i32 %conv56, %conv57, !dbg !20630
  br i1 %cmp58, label %if.then60, label %if.end63, !dbg !20631

if.then60:                                        ; preds = %if.end54
  %43 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20632
  %intf61 = getelementptr inbounds %struct.r8152, %struct.r8152* %43, i32 0, i32 3, !dbg !20632
  %44 = load %struct.usb_interface*, %struct.usb_interface** %intf61, align 8, !dbg !20632
  %dev62 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %44, i32 0, i32 7, !dbg !20632
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev62, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.52, i64 0, i64 0)) #14, !dbg !20632
  br label %out, !dbg !20634

if.end63:                                         ; preds = %if.end54
  %45 = load %struct.fw_phy_nc*, %struct.fw_phy_nc** %phy.addr, align 8, !dbg !20635
  %bp_num = getelementptr inbounds %struct.fw_phy_nc, %struct.fw_phy_nc* %45, i32 0, i32 12, !dbg !20635
  %46 = load i16, i16* %bp_num, align 1, !dbg !20635
  %conv64 = zext i16 %46 to i32, !dbg !20635
  %cmp65 = icmp sgt i32 %conv64, 4, !dbg !20637
  br i1 %cmp65, label %if.then67, label %if.end70, !dbg !20638

if.then67:                                        ; preds = %if.end63
  %47 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20639
  %intf68 = getelementptr inbounds %struct.r8152, %struct.r8152* %47, i32 0, i32 3, !dbg !20639
  %48 = load %struct.usb_interface*, %struct.usb_interface** %intf68, align 8, !dbg !20639
  %dev69 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %48, i32 0, i32 7, !dbg !20639
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev69, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.53, i64 0, i64 0)) #14, !dbg !20639
  br label %out, !dbg !20641

if.end70:                                         ; preds = %if.end63
  store i8 1, i8* %rc, align 1, !dbg !20642
  br label %out, !dbg !20643

out:                                              ; preds = %if.end70, %if.then67, %if.then60, %if.then51, %if.then42, %if.then33, %if.then24, %if.then15, %if.then8, %if.then, %sw.default
  call void @llvm.dbg.label(metadata !20644), !dbg !20645
  %49 = load i8, i8* %rc, align 1, !dbg !20646
  %tobool71 = trunc i8 %49 to i1, !dbg !20646
  ret i1 %tobool71, !dbg !20647
}

; Function Attrs: noredzone
declare dso_local %struct.crypto_shash* @crypto_alloc_shash(i8*, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #2 !dbg !20648 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !20649, metadata !DIExpression()), !dbg !20650
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !20651
  %1 = ptrtoint i8* %0 to i64, !dbg !20651
  %2 = inttoptr i64 %1 to i8*, !dbg !20651
  %3 = ptrtoint i8* %2 to i64, !dbg !20651
  %cmp = icmp uge i64 %3, -4095, !dbg !20651
  %lnot = xor i1 %cmp, true, !dbg !20651
  %lnot1 = xor i1 %lnot, true, !dbg !20651
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !20651
  %conv = sext i32 %lnot.ext to i64, !dbg !20651
  %tobool = icmp ne i64 %conv, 0, !dbg !20651
  ret i1 %tobool, !dbg !20652
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #2 !dbg !20653 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !20656, metadata !DIExpression()), !dbg !20657
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !20658
  %1 = ptrtoint i8* %0 to i64, !dbg !20659
  ret i64 %1, !dbg !20660
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @crypto_shash_digestsize(%struct.crypto_shash* %tfm) #2 !dbg !20661 {
entry:
  %tfm.addr = alloca %struct.crypto_shash*, align 8
  store %struct.crypto_shash* %tfm, %struct.crypto_shash** %tfm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.crypto_shash** %tfm.addr, metadata !20664, metadata !DIExpression()), !dbg !20665
  %0 = load %struct.crypto_shash*, %struct.crypto_shash** %tfm.addr, align 8, !dbg !20666
  %call = call %struct.shash_alg* @crypto_shash_alg(%struct.crypto_shash* %0) #13, !dbg !20667
  %digestsize = getelementptr inbounds %struct.shash_alg, %struct.shash_alg* %call, i32 0, i32 12, !dbg !20668
  %1 = load i32, i32* %digestsize, align 8, !dbg !20668
  ret i32 %1, !dbg !20669
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @crypto_shash_descsize(%struct.crypto_shash* %tfm) #2 !dbg !20670 {
entry:
  %tfm.addr = alloca %struct.crypto_shash*, align 8
  store %struct.crypto_shash* %tfm, %struct.crypto_shash** %tfm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.crypto_shash** %tfm.addr, metadata !20671, metadata !DIExpression()), !dbg !20672
  %0 = load %struct.crypto_shash*, %struct.crypto_shash** %tfm.addr, align 8, !dbg !20673
  %descsize = getelementptr inbounds %struct.crypto_shash, %struct.crypto_shash* %0, i32 0, i32 0, !dbg !20674
  %1 = load i32, i32* %descsize, align 8, !dbg !20674
  ret i32 %1, !dbg !20675
}

; Function Attrs: noredzone
declare dso_local i32 @crypto_shash_digest(%struct.shash_desc*, i8*, i32, i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @crypto_free_shash(%struct.crypto_shash* %tfm) #2 !dbg !20676 {
entry:
  %tfm.addr = alloca %struct.crypto_shash*, align 8
  store %struct.crypto_shash* %tfm, %struct.crypto_shash** %tfm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.crypto_shash** %tfm.addr, metadata !20677, metadata !DIExpression()), !dbg !20678
  %0 = load %struct.crypto_shash*, %struct.crypto_shash** %tfm.addr, align 8, !dbg !20679
  %1 = bitcast %struct.crypto_shash* %0 to i8*, !dbg !20679
  %2 = load %struct.crypto_shash*, %struct.crypto_shash** %tfm.addr, align 8, !dbg !20680
  %call = call %struct.crypto_tfm* @crypto_shash_tfm(%struct.crypto_shash* %2) #13, !dbg !20681
  call void @crypto_destroy_tfm(i8* %1, %struct.crypto_tfm* %call) #13, !dbg !20682
  ret void, !dbg !20683
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.shash_alg* @crypto_shash_alg(%struct.crypto_shash* %tfm) #2 !dbg !20684 {
entry:
  %tfm.addr = alloca %struct.crypto_shash*, align 8
  store %struct.crypto_shash* %tfm, %struct.crypto_shash** %tfm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.crypto_shash** %tfm.addr, metadata !20687, metadata !DIExpression()), !dbg !20688
  %0 = load %struct.crypto_shash*, %struct.crypto_shash** %tfm.addr, align 8, !dbg !20689
  %call = call %struct.crypto_tfm* @crypto_shash_tfm(%struct.crypto_shash* %0) #13, !dbg !20690
  %__crt_alg = getelementptr inbounds %struct.crypto_tfm, %struct.crypto_tfm* %call, i32 0, i32 3, !dbg !20691
  %1 = load %struct.crypto_alg*, %struct.crypto_alg** %__crt_alg, align 8, !dbg !20691
  %call1 = call %struct.shash_alg* @__crypto_shash_alg(%struct.crypto_alg* %1) #13, !dbg !20692
  ret %struct.shash_alg* %call1, !dbg !20693
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.shash_alg* @__crypto_shash_alg(%struct.crypto_alg* %alg) #2 !dbg !20694 {
entry:
  %alg.addr = alloca %struct.crypto_alg*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.shash_alg*, align 8
  store %struct.crypto_alg* %alg, %struct.crypto_alg** %alg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.crypto_alg** %alg.addr, metadata !20697, metadata !DIExpression()), !dbg !20698
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !20699, metadata !DIExpression()), !dbg !20701
  %0 = load %struct.crypto_alg*, %struct.crypto_alg** %alg.addr, align 8, !dbg !20701
  %1 = bitcast %struct.crypto_alg* %0 to i8*, !dbg !20701
  store i8* %1, i8** %__mptr, align 8, !dbg !20701
  br label %do.body, !dbg !20701

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !20702

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !20701
  %add.ptr = getelementptr i8, i8* %2, i64 -96, !dbg !20701
  %3 = bitcast i8* %add.ptr to %struct.shash_alg*, !dbg !20701
  store %struct.shash_alg* %3, %struct.shash_alg** %tmp, align 8, !dbg !20702
  %4 = load %struct.shash_alg*, %struct.shash_alg** %tmp, align 8, !dbg !20701
  ret %struct.shash_alg* %4, !dbg !20704
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.crypto_tfm* @crypto_shash_tfm(%struct.crypto_shash* %tfm) #2 !dbg !20705 {
entry:
  %tfm.addr = alloca %struct.crypto_shash*, align 8
  store %struct.crypto_shash* %tfm, %struct.crypto_shash** %tfm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.crypto_shash** %tfm.addr, metadata !20708, metadata !DIExpression()), !dbg !20709
  %0 = load %struct.crypto_shash*, %struct.crypto_shash** %tfm.addr, align 8, !dbg !20710
  %base = getelementptr inbounds %struct.crypto_shash, %struct.crypto_shash* %0, i32 0, i32 1, !dbg !20711
  ret %struct.crypto_tfm* %base, !dbg !20712
}

; Function Attrs: noredzone
declare dso_local void @crypto_destroy_tfm(i8*, %struct.crypto_tfm*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tx_bottom(%struct.r8152* %tp) #2 !dbg !20713 {
entry:
  %lock.addr.i44 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i44, metadata !15428, metadata !DIExpression()), !dbg !20714
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !15435, metadata !DIExpression()), !dbg !20719
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !15437, metadata !DIExpression()), !dbg !20720
  %tp.addr = alloca %struct.r8152*, align 8
  %res = alloca i32, align 4
  %netdev = alloca %struct.net_device*, align 8
  %agg = alloca %struct.tx_agg*, align 8
  %stats = alloca %struct.net_device_stats*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy23 = alloca i64, align 8
  %__dummy224 = alloca i64, align 8
  %tmp27 = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !20727, metadata !DIExpression()), !dbg !20728
  call void @llvm.dbg.declare(metadata i32* %res, metadata !20729, metadata !DIExpression()), !dbg !20730
  br label %do.body, !dbg !20731

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !20732, metadata !DIExpression()), !dbg !20733
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20734
  %netdev1 = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 4, !dbg !20735
  %1 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !20735
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !20733
  call void @llvm.dbg.declare(metadata %struct.tx_agg** %agg, metadata !20736, metadata !DIExpression()), !dbg !20737
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20738
  %tx_queue = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 11, !dbg !20740
  %call = call i32 @skb_queue_empty(%struct.sk_buff_head* %tx_queue) #13, !dbg !20741
  %tobool = icmp ne i32 %call, 0, !dbg !20741
  br i1 %tobool, label %if.then, label %if.end, !dbg !20742

if.then:                                          ; preds = %do.body
  br label %do.end43, !dbg !20743

if.end:                                           ; preds = %do.body
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20744
  %call2 = call %struct.tx_agg* @r8152_get_tx_agg(%struct.r8152* %3) #13, !dbg !20745
  store %struct.tx_agg* %call2, %struct.tx_agg** %agg, align 8, !dbg !20746
  %4 = load %struct.tx_agg*, %struct.tx_agg** %agg, align 8, !dbg !20747
  %tobool3 = icmp ne %struct.tx_agg* %4, null, !dbg !20747
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !20749

if.then4:                                         ; preds = %if.end
  br label %do.end43, !dbg !20750

if.end5:                                          ; preds = %if.end
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20751
  %6 = load %struct.tx_agg*, %struct.tx_agg** %agg, align 8, !dbg !20752
  %call6 = call i32 @r8152_tx_agg_fill(%struct.r8152* %5, %struct.tx_agg* %6) #13, !dbg !20753
  store i32 %call6, i32* %res, align 4, !dbg !20754
  %7 = load i32, i32* %res, align 4, !dbg !20755
  %tobool7 = icmp ne i32 %7, 0, !dbg !20755
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !20757

if.then8:                                         ; preds = %if.end5
  br label %do.cond, !dbg !20758

if.end9:                                          ; preds = %if.end5
  %8 = load i32, i32* %res, align 4, !dbg !20759
  %cmp = icmp eq i32 %8, -19, !dbg !20760
  br i1 %cmp, label %if.then10, label %if.else, !dbg !20761

if.then10:                                        ; preds = %if.end9
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20762
  call void @rtl_set_unplug(%struct.r8152* %9) #13, !dbg !20764
  %10 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !20765
  call void @netif_device_detach(%struct.net_device* %10) #13, !dbg !20766
  br label %if.end40, !dbg !20767

if.else:                                          ; preds = %if.end9
  call void @llvm.dbg.declare(metadata %struct.net_device_stats** %stats, metadata !20768, metadata !DIExpression()), !dbg !20769
  %11 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !20770
  %stats11 = getelementptr inbounds %struct.net_device, %struct.net_device* %11, i32 0, i32 24, !dbg !20771
  store %struct.net_device_stats* %stats11, %struct.net_device_stats** %stats, align 8, !dbg !20769
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !20772, metadata !DIExpression()), !dbg !20773
  br label %do.body12, !dbg !20774

do.body12:                                        ; preds = %if.else
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20775
  %msg_enable = getelementptr inbounds %struct.r8152, %struct.r8152* %12, i32 0, i32 28, !dbg !20775
  %13 = load i32, i32* %msg_enable, align 8, !dbg !20775
  %and = and i32 %13, 128, !dbg !20775
  %tobool13 = icmp ne i32 %and, 0, !dbg !20775
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !20778

if.then14:                                        ; preds = %do.body12
  %14 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !20775
  %15 = load i32, i32* %res, align 4, !dbg !20775
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %14, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.57, i64 0, i64 0), i32 %15) #14, !dbg !20775
  br label %if.end15, !dbg !20775

if.end15:                                         ; preds = %if.then14, %do.body12
  br label %do.end, !dbg !20778

do.end:                                           ; preds = %if.end15
  %16 = load %struct.tx_agg*, %struct.tx_agg** %agg, align 8, !dbg !20779
  %skb_num = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %16, i32 0, i32 5, !dbg !20780
  %17 = load i32, i32* %skb_num, align 8, !dbg !20780
  %conv = zext i32 %17 to i64, !dbg !20779
  %18 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !20781
  %tx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %18, i32 0, i32 7, !dbg !20782
  %19 = load i64, i64* %tx_dropped, align 8, !dbg !20783
  %add = add i64 %19, %conv, !dbg !20783
  store i64 %add, i64* %tx_dropped, align 8, !dbg !20783
  br label %do.body16, !dbg !20784

do.body16:                                        ; preds = %do.end
  br label %do.body17, !dbg !20785

do.body17:                                        ; preds = %do.body16
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !20786, metadata !DIExpression()), !dbg !20788
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !20789, metadata !DIExpression()), !dbg !20788
  %cmp18 = icmp eq i64* %__dummy, %__dummy2, !dbg !20788
  %conv19 = zext i1 %cmp18 to i32, !dbg !20788
  store i32 1, i32* %tmp, align 4, !dbg !20788
  %20 = load i32, i32* %tmp, align 4, !dbg !20788
  br label %do.body20, !dbg !20790

do.body20:                                        ; preds = %do.body17
  br label %do.body21, !dbg !20791

do.body21:                                        ; preds = %do.body20
  br label %do.body22, !dbg !20792

do.body22:                                        ; preds = %do.body21
  call void @llvm.dbg.declare(metadata i64* %__dummy23, metadata !20794, metadata !DIExpression()), !dbg !20797
  call void @llvm.dbg.declare(metadata i64* %__dummy224, metadata !20798, metadata !DIExpression()), !dbg !20797
  %cmp25 = icmp eq i64* %__dummy23, %__dummy224, !dbg !20797
  %conv26 = zext i1 %cmp25 to i32, !dbg !20797
  store i32 1, i32* %tmp27, align 4, !dbg !20797
  %21 = load i32, i32* %tmp27, align 4, !dbg !20797
  %call28 = call i64 @arch_local_irq_save() #13, !dbg !20799
  store i64 %call28, i64* %flags, align 8, !dbg !20799
  br label %do.end29, !dbg !20799

do.end29:                                         ; preds = %do.body22
  br label %do.end30, !dbg !20792

do.end30:                                         ; preds = %do.end29
  br label %do.body31, !dbg !20791

do.body31:                                        ; preds = %do.end30
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !20800, !srcloc !20801
  br label %do.body32, !dbg !20800

do.body32:                                        ; preds = %do.body31
  %22 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20802
  %tx_lock = getelementptr inbounds %struct.r8152, %struct.r8152* %22, i32 0, i32 14, !dbg !20802
  store %struct.spinlock* %tx_lock, %struct.spinlock** %lock.addr.i, align 8
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20803
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !20804
  %rlock.i = bitcast %union.anon.1* %24 to %struct.raw_spinlock*, !dbg !20804
  br label %do.end34, !dbg !20802

do.end34:                                         ; preds = %do.body32
  br label %do.end35, !dbg !20800

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !20791

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !20790

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !20785

do.end38:                                         ; preds = %do.end37
  %25 = load %struct.tx_agg*, %struct.tx_agg** %agg, align 8, !dbg !20805
  %list = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %25, i32 0, i32 0, !dbg !20806
  %26 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20807
  %tx_free = getelementptr inbounds %struct.r8152, %struct.r8152* %26, i32 0, i32 10, !dbg !20808
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %tx_free) #13, !dbg !20809
  %27 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20810
  %tx_lock39 = getelementptr inbounds %struct.r8152, %struct.r8152* %27, i32 0, i32 14, !dbg !20811
  %28 = load i64, i64* %flags, align 8, !dbg !20812
  store %struct.spinlock* %tx_lock39, %struct.spinlock** %lock.addr.i44, align 8
  store i64 %28, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !820, metadata !15497, metadata !DIExpression()) #11, !dbg !20813
  call void @llvm.dbg.declare(metadata !820, metadata !15501, metadata !DIExpression()) #11, !dbg !20813
  store i32 1, i32* %tmp.i, align 4, !dbg !20813
  %29 = load i32, i32* %tmp.i, align 4, !dbg !20813
  call void @llvm.dbg.declare(metadata !820, metadata !15502, metadata !DIExpression()) #11, !dbg !20814
  call void @llvm.dbg.declare(metadata !820, metadata !15508, metadata !DIExpression()) #11, !dbg !20814
  store i32 1, i32* %tmp8.i, align 4, !dbg !20814
  %30 = load i32, i32* %tmp8.i, align 4, !dbg !20814
  %31 = load i64, i64* %flags.addr.i, align 8, !dbg !20815
  call void @arch_local_irq_restore(i64 %31) #16, !dbg !20815
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !20816, !srcloc !15512
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i44, align 8, !dbg !20817
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !20817
  %rlock.i45 = bitcast %union.anon.1* %33 to %struct.raw_spinlock*, !dbg !20817
  br label %if.end40

if.end40:                                         ; preds = %do.end38, %if.then10
  br label %do.cond, !dbg !20818

do.cond:                                          ; preds = %if.end40, %if.then8
  %34 = load i32, i32* %res, align 4, !dbg !20819
  %cmp41 = icmp eq i32 %34, 0, !dbg !20820
  br i1 %cmp41, label %do.body, label %do.end43, !dbg !20818, !llvm.loop !20821

do.end43:                                         ; preds = %do.cond, %if.then4, %if.then
  ret void, !dbg !20823
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.tx_agg* @r8152_get_tx_agg(%struct.r8152* %tp) #2 !dbg !20824 {
entry:
  %lock.addr.i30 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i30, metadata !15428, metadata !DIExpression()), !dbg !20827
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !15435, metadata !DIExpression()), !dbg !20829
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !15437, metadata !DIExpression()), !dbg !20830
  %retval = alloca %struct.tx_agg*, align 8
  %tp.addr = alloca %struct.r8152*, align 8
  %agg = alloca %struct.tx_agg*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %cursor = alloca %struct.list_head*, align 8
  %__mptr = alloca i8*, align 8
  %tmp27 = alloca %struct.tx_agg*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !20837, metadata !DIExpression()), !dbg !20838
  call void @llvm.dbg.declare(metadata %struct.tx_agg** %agg, metadata !20839, metadata !DIExpression()), !dbg !20840
  store %struct.tx_agg* null, %struct.tx_agg** %agg, align 8, !dbg !20840
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !20841, metadata !DIExpression()), !dbg !20842
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20843
  %tx_free = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 10, !dbg !20845
  %call = call i32 @list_empty(%struct.list_head* %tx_free) #13, !dbg !20846
  %tobool = icmp ne i32 %call, 0, !dbg !20846
  br i1 %tobool, label %if.then, label %if.end, !dbg !20847

if.then:                                          ; preds = %entry
  store %struct.tx_agg* null, %struct.tx_agg** %retval, align 8, !dbg !20848
  br label %return, !dbg !20848

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !20849

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !20850

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !20851, metadata !DIExpression()), !dbg !20853
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !20854, metadata !DIExpression()), !dbg !20853
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !20853
  %conv = zext i1 %cmp to i32, !dbg !20853
  store i32 1, i32* %tmp, align 4, !dbg !20853
  %1 = load i32, i32* %tmp, align 4, !dbg !20853
  br label %do.body2, !dbg !20855

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !20856

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !20857

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !20859, metadata !DIExpression()), !dbg !20862
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !20863, metadata !DIExpression()), !dbg !20862
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !20862
  %conv8 = zext i1 %cmp7 to i32, !dbg !20862
  store i32 1, i32* %tmp9, align 4, !dbg !20862
  %2 = load i32, i32* %tmp9, align 4, !dbg !20862
  %call10 = call i64 @arch_local_irq_save() #13, !dbg !20864
  store i64 %call10, i64* %flags, align 8, !dbg !20864
  br label %do.end, !dbg !20864

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !20857

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !20856

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !20865, !srcloc !20866
  br label %do.body13, !dbg !20865

do.body13:                                        ; preds = %do.body12
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20867
  %tx_lock = getelementptr inbounds %struct.r8152, %struct.r8152* %3, i32 0, i32 14, !dbg !20867
  store %struct.spinlock* %tx_lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20868
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !20869
  %rlock.i = bitcast %union.anon.1* %5 to %struct.raw_spinlock*, !dbg !20869
  br label %do.end15, !dbg !20867

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !20865

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !20856

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !20855

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !20850

do.end19:                                         ; preds = %do.end18
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20870
  %tx_free20 = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 10, !dbg !20872
  %call21 = call i32 @list_empty(%struct.list_head* %tx_free20) #13, !dbg !20873
  %tobool22 = icmp ne i32 %call21, 0, !dbg !20873
  br i1 %tobool22, label %if.end28, label %if.then23, !dbg !20874

if.then23:                                        ; preds = %do.end19
  call void @llvm.dbg.declare(metadata %struct.list_head** %cursor, metadata !20875, metadata !DIExpression()), !dbg !20877
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20878
  %tx_free24 = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 10, !dbg !20879
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %tx_free24, i32 0, i32 0, !dbg !20880
  %8 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !20880
  store %struct.list_head* %8, %struct.list_head** %cursor, align 8, !dbg !20881
  %9 = load %struct.list_head*, %struct.list_head** %cursor, align 8, !dbg !20882
  call void @list_del_init(%struct.list_head* %9) #13, !dbg !20883
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !20884, metadata !DIExpression()), !dbg !20886
  %10 = load %struct.list_head*, %struct.list_head** %cursor, align 8, !dbg !20886
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !20886
  store i8* %11, i8** %__mptr, align 8, !dbg !20886
  br label %do.body25, !dbg !20886

do.body25:                                        ; preds = %if.then23
  br label %do.end26, !dbg !20887

do.end26:                                         ; preds = %do.body25
  %12 = load i8*, i8** %__mptr, align 8, !dbg !20886
  %add.ptr = getelementptr i8, i8* %12, i64 0, !dbg !20886
  %13 = bitcast i8* %add.ptr to %struct.tx_agg*, !dbg !20886
  store %struct.tx_agg* %13, %struct.tx_agg** %tmp27, align 8, !dbg !20887
  %14 = load %struct.tx_agg*, %struct.tx_agg** %tmp27, align 8, !dbg !20886
  store %struct.tx_agg* %14, %struct.tx_agg** %agg, align 8, !dbg !20889
  br label %if.end28, !dbg !20890

if.end28:                                         ; preds = %do.end26, %do.end19
  %15 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20891
  %tx_lock29 = getelementptr inbounds %struct.r8152, %struct.r8152* %15, i32 0, i32 14, !dbg !20892
  %16 = load i64, i64* %flags, align 8, !dbg !20893
  store %struct.spinlock* %tx_lock29, %struct.spinlock** %lock.addr.i30, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !820, metadata !15497, metadata !DIExpression()) #11, !dbg !20894
  call void @llvm.dbg.declare(metadata !820, metadata !15501, metadata !DIExpression()) #11, !dbg !20894
  store i32 1, i32* %tmp.i, align 4, !dbg !20894
  %17 = load i32, i32* %tmp.i, align 4, !dbg !20894
  call void @llvm.dbg.declare(metadata !820, metadata !15502, metadata !DIExpression()) #11, !dbg !20895
  call void @llvm.dbg.declare(metadata !820, metadata !15508, metadata !DIExpression()) #11, !dbg !20895
  store i32 1, i32* %tmp8.i, align 4, !dbg !20895
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !20895
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !20896
  call void @arch_local_irq_restore(i64 %19) #16, !dbg !20896
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !20897, !srcloc !15512
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i30, align 8, !dbg !20898
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !20898
  %rlock.i31 = bitcast %union.anon.1* %21 to %struct.raw_spinlock*, !dbg !20898
  %22 = load %struct.tx_agg*, %struct.tx_agg** %agg, align 8, !dbg !20899
  store %struct.tx_agg* %22, %struct.tx_agg** %retval, align 8, !dbg !20900
  br label %return, !dbg !20900

return:                                           ; preds = %if.end28, %if.then
  %23 = load %struct.tx_agg*, %struct.tx_agg** %retval, align 8, !dbg !20901
  ret %struct.tx_agg* %23, !dbg !20901
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @r8152_tx_agg_fill(%struct.r8152* %tp, %struct.tx_agg* %agg) #2 !dbg !20902 {
entry:
  %lock.addr.i82 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i82, metadata !20905, metadata !DIExpression()), !dbg !20907
  %lock.addr.i80 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i80, metadata !20911, metadata !DIExpression()), !dbg !20913
  %lock.addr.i78 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i78, metadata !20905, metadata !DIExpression()), !dbg !20915
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !20911, metadata !DIExpression()), !dbg !20917
  %tp.addr = alloca %struct.r8152*, align 8
  %agg.addr = alloca %struct.tx_agg*, align 8
  %skb_head = alloca %struct.sk_buff_head, align 8
  %tx_queue = alloca %struct.sk_buff_head*, align 8
  %remain = alloca i32, align 4
  %ret = alloca i32, align 4
  %tx_data = alloca i8*, align 8
  %tx_desc = alloca %struct.tx_desc*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %len = alloca i32, align 4
  %offset = alloca i32, align 4
  %stats = alloca %struct.net_device_stats*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !20919, metadata !DIExpression()), !dbg !20920
  store %struct.tx_agg* %agg, %struct.tx_agg** %agg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tx_agg** %agg.addr, metadata !20921, metadata !DIExpression()), !dbg !20922
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head* %skb_head, metadata !20923, metadata !DIExpression()), !dbg !20924
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %tx_queue, metadata !20925, metadata !DIExpression()), !dbg !20926
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !20927
  %tx_queue1 = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 11, !dbg !20928
  store %struct.sk_buff_head* %tx_queue1, %struct.sk_buff_head** %tx_queue, align 8, !dbg !20926
  call void @llvm.dbg.declare(metadata i32* %remain, metadata !20929, metadata !DIExpression()), !dbg !20930
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !20931, metadata !DIExpression()), !dbg !20932
  call void @llvm.dbg.declare(metadata i8** %tx_data, metadata !20933, metadata !DIExpression()), !dbg !20934
  call void @__skb_queue_head_init(%struct.sk_buff_head* %skb_head) #13, !dbg !20935
  %1 = load %struct.sk_buff_head*, %struct.sk_buff_head** %tx_queue, align 8, !dbg !20936
  %lock = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %1, i32 0, i32 3, !dbg !20937
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !20938, !srcloc !20940
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20941
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !20941
  %rlock.i = bitcast %union.anon.1* %3 to %struct.raw_spinlock*, !dbg !20941
  %4 = load %struct.sk_buff_head*, %struct.sk_buff_head** %tx_queue, align 8, !dbg !20943
  call void @skb_queue_splice_init(%struct.sk_buff_head* %4, %struct.sk_buff_head* %skb_head) #13, !dbg !20944
  %5 = load %struct.sk_buff_head*, %struct.sk_buff_head** %tx_queue, align 8, !dbg !20945
  %lock2 = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %5, i32 0, i32 3, !dbg !20946
  store %struct.spinlock* %lock2, %struct.spinlock** %lock.addr.i78, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !20947, !srcloc !20949
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i78, align 8, !dbg !20950
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !20950
  %rlock.i79 = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !20950
  %8 = load %struct.tx_agg*, %struct.tx_agg** %agg.addr, align 8, !dbg !20952
  %head = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %8, i32 0, i32 4, !dbg !20953
  %9 = load i8*, i8** %head, align 8, !dbg !20953
  store i8* %9, i8** %tx_data, align 8, !dbg !20954
  %10 = load %struct.tx_agg*, %struct.tx_agg** %agg.addr, align 8, !dbg !20955
  %skb_num = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %10, i32 0, i32 5, !dbg !20956
  store i32 0, i32* %skb_num, align 8, !dbg !20957
  %11 = load %struct.tx_agg*, %struct.tx_agg** %agg.addr, align 8, !dbg !20958
  %skb_len = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %11, i32 0, i32 6, !dbg !20959
  store i32 0, i32* %skb_len, align 4, !dbg !20960
  %12 = load i32, i32* @agg_buf_sz, align 4, !dbg !20961
  store i32 %12, i32* %remain, align 4, !dbg !20962
  br label %while.cond, !dbg !20963

while.cond:                                       ; preds = %if.end39, %if.then22, %if.then16, %entry
  %13 = load i32, i32* %remain, align 4, !dbg !20964
  %conv = sext i32 %13 to i64, !dbg !20964
  %cmp = icmp uge i64 %conv, 68, !dbg !20965
  br i1 %cmp, label %while.body, label %while.end, !dbg !20963

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.tx_desc** %tx_desc, metadata !20966, metadata !DIExpression()), !dbg !20968
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !20969, metadata !DIExpression()), !dbg !20970
  call void @llvm.dbg.declare(metadata i32* %len, metadata !20971, metadata !DIExpression()), !dbg !20972
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !20973, metadata !DIExpression()), !dbg !20974
  %call = call %struct.sk_buff* @__skb_dequeue(%struct.sk_buff_head* %skb_head) #13, !dbg !20975
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !20976
  %14 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20977
  %tobool = icmp ne %struct.sk_buff* %14, null, !dbg !20977
  br i1 %tobool, label %if.end, label %if.then, !dbg !20979

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !20980

if.end:                                           ; preds = %while.body
  %15 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20981
  %len4 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %15, i32 0, i32 5, !dbg !20982
  %16 = load i32, i32* %len4, align 8, !dbg !20982
  %conv5 = zext i32 %16 to i64, !dbg !20981
  %add = add i64 %conv5, 8, !dbg !20983
  %conv6 = trunc i64 %add to i32, !dbg !20981
  store i32 %conv6, i32* %len, align 4, !dbg !20984
  %17 = load i32, i32* %len, align 4, !dbg !20985
  %18 = load i32, i32* %remain, align 4, !dbg !20987
  %cmp7 = icmp ugt i32 %17, %18, !dbg !20988
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !20989

if.then9:                                         ; preds = %if.end
  %19 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20990
  call void @__skb_queue_head(%struct.sk_buff_head* %skb_head, %struct.sk_buff* %19) #13, !dbg !20992
  br label %while.end, !dbg !20993

if.end10:                                         ; preds = %if.end
  %20 = load i8*, i8** %tx_data, align 8, !dbg !20994
  %call11 = call i8* @tx_agg_align(i8* %20) #13, !dbg !20995
  store i8* %call11, i8** %tx_data, align 8, !dbg !20996
  %21 = load i8*, i8** %tx_data, align 8, !dbg !20997
  %22 = bitcast i8* %21 to %struct.tx_desc*, !dbg !20998
  store %struct.tx_desc* %22, %struct.tx_desc** %tx_desc, align 8, !dbg !20999
  %23 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !21000
  %call12 = call i32 @skb_transport_offset(%struct.sk_buff* %23) #13, !dbg !21001
  store i32 %call12, i32* %offset, align 4, !dbg !21002
  %24 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21003
  %25 = load %struct.tx_desc*, %struct.tx_desc** %tx_desc, align 8, !dbg !21005
  %26 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !21006
  %27 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !21007
  %len13 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %27, i32 0, i32 5, !dbg !21008
  %28 = load i32, i32* %len13, align 8, !dbg !21008
  %29 = load i32, i32* %offset, align 4, !dbg !21009
  %call14 = call i32 @r8152_tx_csum(%struct.r8152* %24, %struct.tx_desc* %25, %struct.sk_buff* %26, i32 %28, i32 %29) #13, !dbg !21010
  %tobool15 = icmp ne i32 %call14, 0, !dbg !21010
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !21011

if.then16:                                        ; preds = %if.end10
  %30 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21012
  %31 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !21014
  call void @r8152_csum_workaround(%struct.r8152* %30, %struct.sk_buff* %31, %struct.sk_buff_head* %skb_head) #13, !dbg !21015
  br label %while.cond, !dbg !21016, !llvm.loop !21017

if.end17:                                         ; preds = %if.end10
  %32 = load %struct.tx_desc*, %struct.tx_desc** %tx_desc, align 8, !dbg !21019
  %33 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !21020
  call void @rtl_tx_vlan_tag(%struct.tx_desc* %32, %struct.sk_buff* %33) #13, !dbg !21021
  %34 = load i8*, i8** %tx_data, align 8, !dbg !21022
  %add.ptr = getelementptr i8, i8* %34, i64 8, !dbg !21022
  store i8* %add.ptr, i8** %tx_data, align 8, !dbg !21022
  %35 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !21023
  %len18 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %35, i32 0, i32 5, !dbg !21024
  %36 = load i32, i32* %len18, align 8, !dbg !21024
  store i32 %36, i32* %len, align 4, !dbg !21025
  %37 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !21026
  %38 = load i8*, i8** %tx_data, align 8, !dbg !21028
  %39 = load i32, i32* %len, align 4, !dbg !21029
  %call19 = call i32 @skb_copy_bits(%struct.sk_buff* %37, i32 0, i8* %38, i32 %39) #13, !dbg !21030
  %cmp20 = icmp slt i32 %call19, 0, !dbg !21031
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !21032

if.then22:                                        ; preds = %if.end17
  call void @llvm.dbg.declare(metadata %struct.net_device_stats** %stats, metadata !21033, metadata !DIExpression()), !dbg !21035
  %40 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21036
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %40, i32 0, i32 4, !dbg !21037
  %41 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !21037
  %stats23 = getelementptr inbounds %struct.net_device, %struct.net_device* %41, i32 0, i32 24, !dbg !21038
  store %struct.net_device_stats* %stats23, %struct.net_device_stats** %stats, align 8, !dbg !21035
  %42 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !21039
  %tx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %42, i32 0, i32 7, !dbg !21040
  %43 = load i64, i64* %tx_dropped, align 8, !dbg !21041
  %inc = add i64 %43, 1, !dbg !21041
  store i64 %inc, i64* %tx_dropped, align 8, !dbg !21041
  %44 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !21042
  call void @dev_kfree_skb_any(%struct.sk_buff* %44) #13, !dbg !21043
  %45 = load i8*, i8** %tx_data, align 8, !dbg !21044
  %add.ptr24 = getelementptr i8, i8* %45, i64 -8, !dbg !21044
  store i8* %add.ptr24, i8** %tx_data, align 8, !dbg !21044
  br label %while.cond, !dbg !21045, !llvm.loop !21017

if.end25:                                         ; preds = %if.end17
  %46 = load i32, i32* %len, align 4, !dbg !21046
  %47 = load i8*, i8** %tx_data, align 8, !dbg !21047
  %idx.ext = zext i32 %46 to i64, !dbg !21047
  %add.ptr26 = getelementptr i8, i8* %47, i64 %idx.ext, !dbg !21047
  store i8* %add.ptr26, i8** %tx_data, align 8, !dbg !21047
  %48 = load i32, i32* %len, align 4, !dbg !21048
  %49 = load %struct.tx_agg*, %struct.tx_agg** %agg.addr, align 8, !dbg !21049
  %skb_len27 = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %49, i32 0, i32 6, !dbg !21050
  %50 = load i32, i32* %skb_len27, align 4, !dbg !21051
  %add28 = add i32 %50, %48, !dbg !21051
  store i32 %add28, i32* %skb_len27, align 4, !dbg !21051
  %51 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !21052
  %call29 = call i8* @skb_end_pointer(%struct.sk_buff* %51) #13, !dbg !21052
  %52 = bitcast i8* %call29 to %struct.skb_shared_info*, !dbg !21053
  %gso_segs = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %52, i32 0, i32 5, !dbg !21053
  %53 = load i16, i16* %gso_segs, align 2, !dbg !21053
  %conv30 = zext i16 %53 to i32, !dbg !21052
  %tobool31 = icmp ne i32 %conv30, 0, !dbg !21052
  br i1 %tobool31, label %cond.true, label %cond.false, !dbg !21052

cond.true:                                        ; preds = %if.end25
  br label %cond.end, !dbg !21052

cond.false:                                       ; preds = %if.end25
  br label %cond.end, !dbg !21052

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv30, %cond.true ], [ 1, %cond.false ], !dbg !21052
  %54 = load %struct.tx_agg*, %struct.tx_agg** %agg.addr, align 8, !dbg !21054
  %skb_num32 = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %54, i32 0, i32 5, !dbg !21055
  %55 = load i32, i32* %skb_num32, align 8, !dbg !21056
  %add33 = add i32 %55, %cond, !dbg !21056
  store i32 %add33, i32* %skb_num32, align 8, !dbg !21056
  %56 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !21057
  call void @dev_kfree_skb_any(%struct.sk_buff* %56) #13, !dbg !21058
  %57 = load i32, i32* @agg_buf_sz, align 4, !dbg !21059
  %58 = load i8*, i8** %tx_data, align 8, !dbg !21060
  %call34 = call i8* @tx_agg_align(i8* %58) #13, !dbg !21061
  %59 = load %struct.tx_agg*, %struct.tx_agg** %agg.addr, align 8, !dbg !21062
  %head35 = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %59, i32 0, i32 4, !dbg !21063
  %60 = load i8*, i8** %head35, align 8, !dbg !21063
  %sub.ptr.lhs.cast = ptrtoint i8* %call34 to i64, !dbg !21064
  %sub.ptr.rhs.cast = ptrtoint i8* %60 to i64, !dbg !21064
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !21064
  %conv36 = trunc i64 %sub.ptr.sub to i32, !dbg !21065
  %sub = sub i32 %57, %conv36, !dbg !21066
  store i32 %sub, i32* %remain, align 4, !dbg !21067
  %61 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21068
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %61, i32 0, i32 0, !dbg !21070
  %call37 = call zeroext i1 @test_bit(i64 8, i64* %flags) #13, !dbg !21071
  br i1 %call37, label %if.then38, label %if.end39, !dbg !21072

if.then38:                                        ; preds = %cond.end
  br label %while.end, !dbg !21073

if.end39:                                         ; preds = %cond.end
  br label %while.cond, !dbg !20963, !llvm.loop !21017

while.end:                                        ; preds = %if.then38, %if.then9, %if.then, %while.cond
  %call40 = call i32 @skb_queue_empty(%struct.sk_buff_head* %skb_head) #13, !dbg !21074
  %tobool41 = icmp ne i32 %call40, 0, !dbg !21074
  br i1 %tobool41, label %if.end45, label %if.then42, !dbg !21075

if.then42:                                        ; preds = %while.end
  %62 = load %struct.sk_buff_head*, %struct.sk_buff_head** %tx_queue, align 8, !dbg !21076
  %lock43 = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %62, i32 0, i32 3, !dbg !21077
  store %struct.spinlock* %lock43, %struct.spinlock** %lock.addr.i80, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !21078, !srcloc !20940
  %63 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i80, align 8, !dbg !21079
  %64 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %63, i32 0, i32 0, !dbg !21079
  %rlock.i81 = bitcast %union.anon.1* %64 to %struct.raw_spinlock*, !dbg !21079
  %65 = load %struct.sk_buff_head*, %struct.sk_buff_head** %tx_queue, align 8, !dbg !21080
  call void @skb_queue_splice(%struct.sk_buff_head* %skb_head, %struct.sk_buff_head* %65) #13, !dbg !21081
  %66 = load %struct.sk_buff_head*, %struct.sk_buff_head** %tx_queue, align 8, !dbg !21082
  %lock44 = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %66, i32 0, i32 3, !dbg !21083
  store %struct.spinlock* %lock44, %struct.spinlock** %lock.addr.i82, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !21084, !srcloc !20949
  %67 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i82, align 8, !dbg !21085
  %68 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %67, i32 0, i32 0, !dbg !21085
  %rlock.i83 = bitcast %union.anon.1* %68 to %struct.raw_spinlock*, !dbg !21085
  br label %if.end45, !dbg !21086

if.end45:                                         ; preds = %if.then42, %while.end
  %69 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21087
  %netdev46 = getelementptr inbounds %struct.r8152, %struct.r8152* %69, i32 0, i32 4, !dbg !21088
  %70 = load %struct.net_device*, %struct.net_device** %netdev46, align 8, !dbg !21088
  call void @netif_tx_lock(%struct.net_device* %70) #13, !dbg !21089
  %71 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21090
  %netdev47 = getelementptr inbounds %struct.r8152, %struct.r8152* %71, i32 0, i32 4, !dbg !21092
  %72 = load %struct.net_device*, %struct.net_device** %netdev47, align 8, !dbg !21092
  %call48 = call zeroext i1 @netif_queue_stopped(%struct.net_device* %72) #13, !dbg !21093
  br i1 %call48, label %land.lhs.true, label %if.end56, !dbg !21094

land.lhs.true:                                    ; preds = %if.end45
  %73 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21095
  %tx_queue50 = getelementptr inbounds %struct.r8152, %struct.r8152* %73, i32 0, i32 11, !dbg !21096
  %call51 = call i32 @skb_queue_len(%struct.sk_buff_head* %tx_queue50) #13, !dbg !21097
  %74 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21098
  %tx_qlen = getelementptr inbounds %struct.r8152, %struct.r8152* %74, i32 0, i32 29, !dbg !21099
  %75 = load i32, i32* %tx_qlen, align 4, !dbg !21099
  %cmp52 = icmp ult i32 %call51, %75, !dbg !21100
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !21101

if.then54:                                        ; preds = %land.lhs.true
  %76 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21102
  %netdev55 = getelementptr inbounds %struct.r8152, %struct.r8152* %76, i32 0, i32 4, !dbg !21103
  %77 = load %struct.net_device*, %struct.net_device** %netdev55, align 8, !dbg !21103
  call void @netif_wake_queue(%struct.net_device* %77) #13, !dbg !21104
  br label %if.end56, !dbg !21104

if.end56:                                         ; preds = %if.then54, %land.lhs.true, %if.end45
  %78 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21105
  %netdev57 = getelementptr inbounds %struct.r8152, %struct.r8152* %78, i32 0, i32 4, !dbg !21106
  %79 = load %struct.net_device*, %struct.net_device** %netdev57, align 8, !dbg !21106
  call void @netif_tx_unlock(%struct.net_device* %79) #13, !dbg !21107
  %80 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21108
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %80, i32 0, i32 3, !dbg !21109
  %81 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !21109
  %call58 = call i32 @usb_autopm_get_interface_async(%struct.usb_interface* %81) #13, !dbg !21110
  store i32 %call58, i32* %ret, align 4, !dbg !21111
  %82 = load i32, i32* %ret, align 4, !dbg !21112
  %cmp59 = icmp slt i32 %82, 0, !dbg !21114
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !21115

if.then61:                                        ; preds = %if.end56
  br label %out_tx_fill, !dbg !21116

if.end62:                                         ; preds = %if.end56
  %83 = load %struct.tx_agg*, %struct.tx_agg** %agg.addr, align 8, !dbg !21117
  %urb = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %83, i32 0, i32 1, !dbg !21118
  %84 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !21118
  %85 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21119
  %udev = getelementptr inbounds %struct.r8152, %struct.r8152* %85, i32 0, i32 1, !dbg !21120
  %86 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !21120
  %87 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21121
  %udev63 = getelementptr inbounds %struct.r8152, %struct.r8152* %87, i32 0, i32 1, !dbg !21121
  %88 = load %struct.usb_device*, %struct.usb_device** %udev63, align 8, !dbg !21121
  %call64 = call i32 @__create_pipe(%struct.usb_device* %88, i32 2) #13, !dbg !21121
  %or = or i32 -1073741824, %call64, !dbg !21121
  %89 = load %struct.tx_agg*, %struct.tx_agg** %agg.addr, align 8, !dbg !21122
  %head65 = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %89, i32 0, i32 4, !dbg !21123
  %90 = load i8*, i8** %head65, align 8, !dbg !21123
  %91 = load i8*, i8** %tx_data, align 8, !dbg !21124
  %92 = load %struct.tx_agg*, %struct.tx_agg** %agg.addr, align 8, !dbg !21125
  %head66 = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %92, i32 0, i32 4, !dbg !21126
  %93 = load i8*, i8** %head66, align 8, !dbg !21126
  %sub.ptr.lhs.cast67 = ptrtoint i8* %91 to i64, !dbg !21127
  %sub.ptr.rhs.cast68 = ptrtoint i8* %93 to i64, !dbg !21127
  %sub.ptr.sub69 = sub i64 %sub.ptr.lhs.cast67, %sub.ptr.rhs.cast68, !dbg !21127
  %conv70 = trunc i64 %sub.ptr.sub69 to i32, !dbg !21128
  %94 = load %struct.tx_agg*, %struct.tx_agg** %agg.addr, align 8, !dbg !21129
  %95 = bitcast %struct.tx_agg* %94 to i8*, !dbg !21129
  call void @usb_fill_bulk_urb(%struct.urb* %84, %struct.usb_device* %86, i32 %or, i8* %90, i32 %conv70, void (%struct.urb*)* @write_bulk_callback, i8* %95) #13, !dbg !21130
  %96 = load %struct.tx_agg*, %struct.tx_agg** %agg.addr, align 8, !dbg !21131
  %urb71 = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %96, i32 0, i32 1, !dbg !21132
  %97 = load %struct.urb*, %struct.urb** %urb71, align 8, !dbg !21132
  %call72 = call i32 @usb_submit_urb(%struct.urb* %97, i32 2592) #13, !dbg !21133
  store i32 %call72, i32* %ret, align 4, !dbg !21134
  %98 = load i32, i32* %ret, align 4, !dbg !21135
  %cmp73 = icmp slt i32 %98, 0, !dbg !21137
  br i1 %cmp73, label %if.then75, label %if.end77, !dbg !21138

if.then75:                                        ; preds = %if.end62
  %99 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21139
  %intf76 = getelementptr inbounds %struct.r8152, %struct.r8152* %99, i32 0, i32 3, !dbg !21140
  %100 = load %struct.usb_interface*, %struct.usb_interface** %intf76, align 8, !dbg !21140
  call void @usb_autopm_put_interface_async(%struct.usb_interface* %100) #13, !dbg !21141
  br label %if.end77, !dbg !21141

if.end77:                                         ; preds = %if.then75, %if.end62
  br label %out_tx_fill, !dbg !21142

out_tx_fill:                                      ; preds = %if.end77, %if.then61
  call void @llvm.dbg.label(metadata !21143), !dbg !21144
  %101 = load i32, i32* %ret, align 4, !dbg !21145
  ret i32 %101, !dbg !21146
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_init(%struct.list_head* %entry1) #2 !dbg !21147 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !21148, metadata !DIExpression()), !dbg !21149
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !21150
  call void @__list_del_entry(%struct.list_head* %0) #13, !dbg !21151
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !21152
  call void @INIT_LIST_HEAD(%struct.list_head* %1) #13, !dbg !21153
  ret void, !dbg !21154
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_queue_head(%struct.sk_buff_head* %list, %struct.sk_buff* %newsk) #2 !dbg !21155 {
entry:
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %newsk.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !21158, metadata !DIExpression()), !dbg !21159
  store %struct.sk_buff* %newsk, %struct.sk_buff** %newsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %newsk.addr, metadata !21160, metadata !DIExpression()), !dbg !21161
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !21162
  %1 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !21163
  %2 = bitcast %struct.sk_buff_head* %1 to %struct.sk_buff*, !dbg !21164
  %3 = load %struct.sk_buff*, %struct.sk_buff** %newsk.addr, align 8, !dbg !21165
  call void @__skb_queue_after(%struct.sk_buff_head* %0, %struct.sk_buff* %2, %struct.sk_buff* %3) #13, !dbg !21166
  ret void, !dbg !21167
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @tx_agg_align(i8* %data) #2 !dbg !21168 {
entry:
  %data.addr = alloca i8*, align 8
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !21171, metadata !DIExpression()), !dbg !21172
  %0 = load i8*, i8** %data.addr, align 8, !dbg !21173
  %1 = ptrtoint i8* %0 to i64, !dbg !21173
  %add = add i64 %1, 3, !dbg !21173
  %and = and i64 %add, -4, !dbg !21173
  %2 = inttoptr i64 %and to i8*, !dbg !21174
  ret i8* %2, !dbg !21175
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_transport_offset(%struct.sk_buff* %skb) #2 !dbg !21176 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21179, metadata !DIExpression()), !dbg !21180
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21181
  %call = call i8* @skb_transport_header(%struct.sk_buff* %0) #13, !dbg !21182
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21183
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !21184
  %2 = load i8*, i8** %data, align 8, !dbg !21184
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !21185
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !21185
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !21185
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !21182
  ret i32 %conv, !dbg !21186
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @r8152_tx_csum(%struct.r8152* %tp, %struct.tx_desc* %desc, %struct.sk_buff* %skb, i32 %len, i32 %transport_offset) #2 !dbg !21187 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %desc.addr = alloca %struct.tx_desc*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  %transport_offset.addr = alloca i32, align 4
  %mss = alloca i32, align 4
  %opts1 = alloca i32, align 4
  %opts2 = alloca i32, align 4
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on48 = alloca i32, align 4
  %tmp66 = alloca i64, align 8
  %__UNIQUE_ID___x567 = alloca i32, align 4
  %__UNIQUE_ID___y568 = alloca i32, align 4
  %tmp74 = alloca i32, align 4
  %ip_protocol = alloca i8, align 1
  %__ret_warn_on125 = alloca i32, align 4
  %tmp143 = alloca i64, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !21190, metadata !DIExpression()), !dbg !21191
  store %struct.tx_desc* %desc, %struct.tx_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tx_desc** %desc.addr, metadata !21192, metadata !DIExpression()), !dbg !21193
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21194, metadata !DIExpression()), !dbg !21195
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !21196, metadata !DIExpression()), !dbg !21197
  store i32 %transport_offset, i32* %transport_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %transport_offset.addr, metadata !21198, metadata !DIExpression()), !dbg !21199
  call void @llvm.dbg.declare(metadata i32* %mss, metadata !21200, metadata !DIExpression()), !dbg !21201
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21202
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %0) #13, !dbg !21202
  %1 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !21203
  %gso_size = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %1, i32 0, i32 4, !dbg !21203
  %2 = load i16, i16* %gso_size, align 4, !dbg !21203
  %conv = zext i16 %2 to i32, !dbg !21202
  store i32 %conv, i32* %mss, align 4, !dbg !21201
  call void @llvm.dbg.declare(metadata i32* %opts1, metadata !21204, metadata !DIExpression()), !dbg !21205
  call void @llvm.dbg.declare(metadata i32* %opts2, metadata !21206, metadata !DIExpression()), !dbg !21207
  store i32 0, i32* %opts2, align 4, !dbg !21207
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !21208, metadata !DIExpression()), !dbg !21209
  store i32 0, i32* %ret, align 4, !dbg !21209
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !21210, metadata !DIExpression()), !dbg !21212
  %3 = load i32, i32* %len.addr, align 4, !dbg !21212
  %cmp = icmp ugt i32 %3, 262143, !dbg !21212
  %lnot = xor i1 %cmp, true, !dbg !21212
  %lnot2 = xor i1 %lnot, true, !dbg !21212
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !21212
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !21212
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !21213
  %tobool = icmp ne i32 %4, 0, !dbg !21213
  %lnot3 = xor i1 %tobool, true, !dbg !21213
  %lnot5 = xor i1 %lnot3, true, !dbg !21213
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !21213
  %conv7 = sext i32 %lnot.ext6 to i64, !dbg !21213
  %tobool8 = icmp ne i64 %conv7, 0, !dbg !21213
  br i1 %tobool8, label %if.then, label %if.end, !dbg !21212

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !21213

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !21215

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !21217

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !21215

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 1981, i32 2307, i64 12) #11, !dbg !21219, !srcloc !21221
  br label %do.end11, !dbg !21219

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 565) #11, !dbg !21222, !srcloc !21224
  br label %do.body12, !dbg !21215

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !21225

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !21215

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !21215

if.end:                                           ; preds = %do.end14, %entry
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !21212
  %tobool15 = icmp ne i32 %5, 0, !dbg !21212
  %lnot16 = xor i1 %tobool15, true, !dbg !21212
  %lnot18 = xor i1 %lnot16, true, !dbg !21212
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !21212
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !21212
  store i64 %conv20, i64* %tmp, align 8, !dbg !21213
  %6 = load i64, i64* %tmp, align 8, !dbg !21212
  %7 = load i32, i32* %len.addr, align 4, !dbg !21227
  %conv21 = zext i32 %7 to i64, !dbg !21227
  %or = or i64 %conv21, 2147483648, !dbg !21228
  %or22 = or i64 %or, 1073741824, !dbg !21229
  %conv23 = trunc i64 %or22 to i32, !dbg !21227
  store i32 %conv23, i32* %opts1, align 4, !dbg !21230
  %8 = load i32, i32* %mss, align 4, !dbg !21231
  %tobool24 = icmp ne i32 %8, 0, !dbg !21231
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !21233

if.then25:                                        ; preds = %if.end
  %9 = load i32, i32* %transport_offset.addr, align 4, !dbg !21234
  %cmp26 = icmp ugt i32 %9, 127, !dbg !21237
  br i1 %cmp26, label %if.then28, label %if.end34, !dbg !21238

if.then28:                                        ; preds = %if.then25
  br label %do.body29, !dbg !21239

do.body29:                                        ; preds = %if.then28
  %10 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21241
  %msg_enable = getelementptr inbounds %struct.r8152, %struct.r8152* %10, i32 0, i32 28, !dbg !21241
  %11 = load i32, i32* %msg_enable, align 8, !dbg !21241
  %and = and i32 %11, 128, !dbg !21241
  %tobool30 = icmp ne i32 %and, 0, !dbg !21241
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !21244

if.then31:                                        ; preds = %do.body29
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21241
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %12, i32 0, i32 4, !dbg !21241
  %13 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !21241
  %14 = load i32, i32* %transport_offset.addr, align 4, !dbg !21241
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %13, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.58, i64 0, i64 0), i32 %14) #14, !dbg !21241
  br label %if.end32, !dbg !21241

if.end32:                                         ; preds = %if.then31, %do.body29
  br label %do.end33, !dbg !21244

do.end33:                                         ; preds = %if.end32
  store i32 1, i32* %ret, align 4, !dbg !21245
  br label %unavailable, !dbg !21246

if.end34:                                         ; preds = %if.then25
  %15 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21247
  %call35 = call zeroext i16 @vlan_get_protocol(%struct.sk_buff* %15) #13, !dbg !21248
  %conv36 = zext i16 %call35 to i32, !dbg !21248
  switch i32 %conv36, label %sw.default [
    i32 8, label %sw.bb
    i32 56710, label %sw.bb40
  ], !dbg !21249

sw.bb:                                            ; preds = %if.end34
  %16 = load i32, i32* %opts1, align 4, !dbg !21250
  %conv37 = zext i32 %16 to i64, !dbg !21250
  %or38 = or i64 %conv37, 268435456, !dbg !21250
  %conv39 = trunc i64 %or38 to i32, !dbg !21250
  store i32 %conv39, i32* %opts1, align 4, !dbg !21250
  br label %sw.epilog, !dbg !21252

sw.bb40:                                          ; preds = %if.end34
  %17 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21253
  %call41 = call i32 @skb_cow_head(%struct.sk_buff* %17, i32 0) #13, !dbg !21255
  %tobool42 = icmp ne i32 %call41, 0, !dbg !21255
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !21256

if.then43:                                        ; preds = %sw.bb40
  store i32 1, i32* %ret, align 4, !dbg !21257
  br label %unavailable, !dbg !21259

if.end44:                                         ; preds = %sw.bb40
  %18 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21260
  call void @tcp_v6_gso_csum_prep(%struct.sk_buff* %18) #13, !dbg !21261
  %19 = load i32, i32* %opts1, align 4, !dbg !21262
  %conv45 = zext i32 %19 to i64, !dbg !21262
  %or46 = or i64 %conv45, 134217728, !dbg !21262
  %conv47 = trunc i64 %or46 to i32, !dbg !21262
  store i32 %conv47, i32* %opts1, align 4, !dbg !21262
  br label %sw.epilog, !dbg !21263

sw.default:                                       ; preds = %if.end34
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on48, metadata !21264, metadata !DIExpression()), !dbg !21266
  store i32 1, i32* %__ret_warn_on48, align 4, !dbg !21266
  %20 = load i32, i32* %__ret_warn_on48, align 4, !dbg !21267
  %tobool49 = icmp ne i32 %20, 0, !dbg !21267
  %lnot50 = xor i1 %tobool49, true, !dbg !21267
  %lnot52 = xor i1 %lnot50, true, !dbg !21267
  %lnot.ext53 = zext i1 %lnot52 to i32, !dbg !21267
  %conv54 = sext i32 %lnot.ext53 to i64, !dbg !21267
  %tobool55 = icmp ne i64 %conv54, 0, !dbg !21267
  br i1 %tobool55, label %if.then56, label %if.end65, !dbg !21266

if.then56:                                        ; preds = %sw.default
  br label %do.body57, !dbg !21267

do.body57:                                        ; preds = %if.then56
  br label %do.body58, !dbg !21269

do.body58:                                        ; preds = %do.body57
  br label %do.end59, !dbg !21271

do.end59:                                         ; preds = %do.body58
  br label %do.body60, !dbg !21269

do.body60:                                        ; preds = %do.end59
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 2009, i32 2307, i64 12) #11, !dbg !21273, !srcloc !21275
  br label %do.end61, !dbg !21273

do.end61:                                         ; preds = %do.body60
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 566) #11, !dbg !21276, !srcloc !21278
  br label %do.body62, !dbg !21269

do.body62:                                        ; preds = %do.end61
  br label %do.end63, !dbg !21279

do.end63:                                         ; preds = %do.body62
  br label %do.end64, !dbg !21269

do.end64:                                         ; preds = %do.end63
  br label %if.end65, !dbg !21269

if.end65:                                         ; preds = %do.end64, %sw.default
  %21 = load i32, i32* %__ret_warn_on48, align 4, !dbg !21266
  %tobool67 = icmp ne i32 %21, 0, !dbg !21266
  %lnot68 = xor i1 %tobool67, true, !dbg !21266
  %lnot70 = xor i1 %lnot68, true, !dbg !21266
  %lnot.ext71 = zext i1 %lnot70 to i32, !dbg !21266
  %conv72 = sext i32 %lnot.ext71 to i64, !dbg !21266
  store i64 %conv72, i64* %tmp66, align 8, !dbg !21267
  %22 = load i64, i64* %tmp66, align 8, !dbg !21266
  br label %sw.epilog, !dbg !21281

sw.epilog:                                        ; preds = %if.end65, %if.end44, %sw.bb
  %23 = load i32, i32* %transport_offset.addr, align 4, !dbg !21282
  %shl = shl i32 %23, 18, !dbg !21283
  %24 = load i32, i32* %opts1, align 4, !dbg !21284
  %or73 = or i32 %24, %shl, !dbg !21284
  store i32 %or73, i32* %opts1, align 4, !dbg !21284
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x567, metadata !21285, metadata !DIExpression()), !dbg !21287
  %25 = load i32, i32* %mss, align 4, !dbg !21287
  store i32 %25, i32* %__UNIQUE_ID___x567, align 4, !dbg !21287
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y568, metadata !21288, metadata !DIExpression()), !dbg !21287
  store i32 2047, i32* %__UNIQUE_ID___y568, align 4, !dbg !21287
  %26 = load i32, i32* %__UNIQUE_ID___x567, align 4, !dbg !21287
  %27 = load i32, i32* %__UNIQUE_ID___y568, align 4, !dbg !21287
  %cmp75 = icmp ult i32 %26, %27, !dbg !21287
  br i1 %cmp75, label %cond.true, label %cond.false, !dbg !21287

cond.true:                                        ; preds = %sw.epilog
  %28 = load i32, i32* %__UNIQUE_ID___x567, align 4, !dbg !21287
  br label %cond.end, !dbg !21287

cond.false:                                       ; preds = %sw.epilog
  %29 = load i32, i32* %__UNIQUE_ID___y568, align 4, !dbg !21287
  br label %cond.end, !dbg !21287

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %28, %cond.true ], [ %29, %cond.false ], !dbg !21287
  store i32 %cond, i32* %tmp74, align 4, !dbg !21287
  %30 = load i32, i32* %tmp74, align 4, !dbg !21287
  %shl77 = shl i32 %30, 17, !dbg !21289
  %31 = load i32, i32* %opts2, align 4, !dbg !21290
  %or78 = or i32 %31, %shl77, !dbg !21290
  store i32 %or78, i32* %opts2, align 4, !dbg !21290
  br label %if.end155, !dbg !21291

if.else:                                          ; preds = %if.end
  %32 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21292
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %32, i32 0, i32 14, !dbg !21294
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !21294
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !21294
  %bf.clear = and i16 %bf.lshr, 3, !dbg !21294
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !21294
  %conv79 = zext i8 %bf.cast to i32, !dbg !21292
  %cmp80 = icmp eq i32 %conv79, 3, !dbg !21295
  br i1 %cmp80, label %if.then82, label %if.end154, !dbg !21296

if.then82:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8* %ip_protocol, metadata !21297, metadata !DIExpression()), !dbg !21299
  %33 = load i32, i32* %transport_offset.addr, align 4, !dbg !21300
  %cmp83 = icmp ugt i32 %33, 2047, !dbg !21302
  br i1 %cmp83, label %if.then85, label %if.end94, !dbg !21303

if.then85:                                        ; preds = %if.then82
  br label %do.body86, !dbg !21304

do.body86:                                        ; preds = %if.then85
  %34 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21306
  %msg_enable87 = getelementptr inbounds %struct.r8152, %struct.r8152* %34, i32 0, i32 28, !dbg !21306
  %35 = load i32, i32* %msg_enable87, align 8, !dbg !21306
  %and88 = and i32 %35, 128, !dbg !21306
  %tobool89 = icmp ne i32 %and88, 0, !dbg !21306
  br i1 %tobool89, label %if.then90, label %if.end92, !dbg !21309

if.then90:                                        ; preds = %do.body86
  %36 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21306
  %netdev91 = getelementptr inbounds %struct.r8152, %struct.r8152* %36, i32 0, i32 4, !dbg !21306
  %37 = load %struct.net_device*, %struct.net_device** %netdev91, align 8, !dbg !21306
  %38 = load i32, i32* %transport_offset.addr, align 4, !dbg !21306
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %37, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.59, i64 0, i64 0), i32 %38) #14, !dbg !21306
  br label %if.end92, !dbg !21306

if.end92:                                         ; preds = %if.then90, %do.body86
  br label %do.end93, !dbg !21309

do.end93:                                         ; preds = %if.end92
  store i32 2, i32* %ret, align 4, !dbg !21310
  br label %unavailable, !dbg !21311

if.end94:                                         ; preds = %if.then82
  %39 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21312
  %call95 = call zeroext i16 @vlan_get_protocol(%struct.sk_buff* %39) #13, !dbg !21313
  %conv96 = zext i16 %call95 to i32, !dbg !21313
  switch i32 %conv96, label %sw.default107 [
    i32 8, label %sw.bb97
    i32 56710, label %sw.bb102
  ], !dbg !21314

sw.bb97:                                          ; preds = %if.end94
  %40 = load i32, i32* %opts2, align 4, !dbg !21315
  %conv98 = zext i32 %40 to i64, !dbg !21315
  %or99 = or i64 %conv98, 536870912, !dbg !21315
  %conv100 = trunc i64 %or99 to i32, !dbg !21315
  store i32 %conv100, i32* %opts2, align 4, !dbg !21315
  %41 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21317
  %call101 = call %struct.iphdr* @ip_hdr(%struct.sk_buff* %41) #13, !dbg !21318
  %protocol = getelementptr inbounds %struct.iphdr, %struct.iphdr* %call101, i32 0, i32 6, !dbg !21319
  %42 = load i8, i8* %protocol, align 1, !dbg !21319
  store i8 %42, i8* %ip_protocol, align 1, !dbg !21320
  br label %sw.epilog108, !dbg !21321

sw.bb102:                                         ; preds = %if.end94
  %43 = load i32, i32* %opts2, align 4, !dbg !21322
  %conv103 = zext i32 %43 to i64, !dbg !21322
  %or104 = or i64 %conv103, 268435456, !dbg !21322
  %conv105 = trunc i64 %or104 to i32, !dbg !21322
  store i32 %conv105, i32* %opts2, align 4, !dbg !21322
  %44 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21323
  %call106 = call %struct.ipv6hdr* @ipv6_hdr(%struct.sk_buff* %44) #13, !dbg !21324
  %nexthdr = getelementptr inbounds %struct.ipv6hdr, %struct.ipv6hdr* %call106, i32 0, i32 3, !dbg !21325
  %45 = load i8, i8* %nexthdr, align 2, !dbg !21325
  store i8 %45, i8* %ip_protocol, align 1, !dbg !21326
  br label %sw.epilog108, !dbg !21327

sw.default107:                                    ; preds = %if.end94
  store i8 -1, i8* %ip_protocol, align 1, !dbg !21328
  br label %sw.epilog108, !dbg !21329

sw.epilog108:                                     ; preds = %sw.default107, %sw.bb102, %sw.bb97
  %46 = load i8, i8* %ip_protocol, align 1, !dbg !21330
  %conv109 = zext i8 %46 to i32, !dbg !21330
  %cmp110 = icmp eq i32 %conv109, 6, !dbg !21332
  br i1 %cmp110, label %if.then112, label %if.else116, !dbg !21333

if.then112:                                       ; preds = %sw.epilog108
  %47 = load i32, i32* %opts2, align 4, !dbg !21334
  %conv113 = zext i32 %47 to i64, !dbg !21334
  %or114 = or i64 %conv113, 1073741824, !dbg !21334
  %conv115 = trunc i64 %or114 to i32, !dbg !21334
  store i32 %conv115, i32* %opts2, align 4, !dbg !21334
  br label %if.end151, !dbg !21335

if.else116:                                       ; preds = %sw.epilog108
  %48 = load i8, i8* %ip_protocol, align 1, !dbg !21336
  %conv117 = zext i8 %48 to i32, !dbg !21336
  %cmp118 = icmp eq i32 %conv117, 17, !dbg !21338
  br i1 %cmp118, label %if.then120, label %if.else124, !dbg !21339

if.then120:                                       ; preds = %if.else116
  %49 = load i32, i32* %opts2, align 4, !dbg !21340
  %conv121 = zext i32 %49 to i64, !dbg !21340
  %or122 = or i64 %conv121, 2147483648, !dbg !21340
  %conv123 = trunc i64 %or122 to i32, !dbg !21340
  store i32 %conv123, i32* %opts2, align 4, !dbg !21340
  br label %if.end150, !dbg !21341

if.else124:                                       ; preds = %if.else116
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on125, metadata !21342, metadata !DIExpression()), !dbg !21344
  store i32 1, i32* %__ret_warn_on125, align 4, !dbg !21344
  %50 = load i32, i32* %__ret_warn_on125, align 4, !dbg !21345
  %tobool126 = icmp ne i32 %50, 0, !dbg !21345
  %lnot127 = xor i1 %tobool126, true, !dbg !21345
  %lnot129 = xor i1 %lnot127, true, !dbg !21345
  %lnot.ext130 = zext i1 %lnot129 to i32, !dbg !21345
  %conv131 = sext i32 %lnot.ext130 to i64, !dbg !21345
  %tobool132 = icmp ne i64 %conv131, 0, !dbg !21345
  br i1 %tobool132, label %if.then133, label %if.end142, !dbg !21344

if.then133:                                       ; preds = %if.else124
  br label %do.body134, !dbg !21345

do.body134:                                       ; preds = %if.then133
  br label %do.body135, !dbg !21347

do.body135:                                       ; preds = %do.body134
  br label %do.end136, !dbg !21349

do.end136:                                        ; preds = %do.body135
  br label %do.body137, !dbg !21347

do.body137:                                       ; preds = %do.end136
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 2047, i32 2307, i64 12) #11, !dbg !21351, !srcloc !21353
  br label %do.end138, !dbg !21351

do.end138:                                        ; preds = %do.body137
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 569) #11, !dbg !21354, !srcloc !21356
  br label %do.body139, !dbg !21347

do.body139:                                       ; preds = %do.end138
  br label %do.end140, !dbg !21357

do.end140:                                        ; preds = %do.body139
  br label %do.end141, !dbg !21347

do.end141:                                        ; preds = %do.end140
  br label %if.end142, !dbg !21347

if.end142:                                        ; preds = %do.end141, %if.else124
  %51 = load i32, i32* %__ret_warn_on125, align 4, !dbg !21344
  %tobool144 = icmp ne i32 %51, 0, !dbg !21344
  %lnot145 = xor i1 %tobool144, true, !dbg !21344
  %lnot147 = xor i1 %lnot145, true, !dbg !21344
  %lnot.ext148 = zext i1 %lnot147 to i32, !dbg !21344
  %conv149 = sext i32 %lnot.ext148 to i64, !dbg !21344
  store i64 %conv149, i64* %tmp143, align 8, !dbg !21345
  %52 = load i64, i64* %tmp143, align 8, !dbg !21344
  br label %if.end150

if.end150:                                        ; preds = %if.end142, %if.then120
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.then112
  %53 = load i32, i32* %transport_offset.addr, align 4, !dbg !21359
  %shl152 = shl i32 %53, 17, !dbg !21360
  %54 = load i32, i32* %opts2, align 4, !dbg !21361
  %or153 = or i32 %54, %shl152, !dbg !21361
  store i32 %or153, i32* %opts2, align 4, !dbg !21361
  br label %if.end154, !dbg !21362

if.end154:                                        ; preds = %if.end151, %if.else
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %cond.end
  %55 = load i32, i32* %opts2, align 4, !dbg !21363
  %56 = load %struct.tx_desc*, %struct.tx_desc** %desc.addr, align 8, !dbg !21364
  %opts2156 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %56, i32 0, i32 1, !dbg !21365
  store i32 %55, i32* %opts2156, align 4, !dbg !21366
  %57 = load i32, i32* %opts1, align 4, !dbg !21367
  %58 = load %struct.tx_desc*, %struct.tx_desc** %desc.addr, align 8, !dbg !21368
  %opts1157 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %58, i32 0, i32 0, !dbg !21369
  store i32 %57, i32* %opts1157, align 4, !dbg !21370
  br label %unavailable, !dbg !21368

unavailable:                                      ; preds = %if.end155, %do.end93, %if.then43, %do.end33
  call void @llvm.dbg.label(metadata !21371), !dbg !21372
  %59 = load i32, i32* %ret, align 4, !dbg !21373
  ret i32 %59, !dbg !21374
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @r8152_csum_workaround(%struct.r8152* %tp, %struct.sk_buff* %skb, %struct.sk_buff_head* %list) #2 !dbg !21375 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %features = alloca i64, align 8
  %segs = alloca %struct.sk_buff*, align 8
  %seg = alloca %struct.sk_buff*, align 8
  %next = alloca %struct.sk_buff*, align 8
  %seg_list = alloca %struct.sk_buff_head, align 8
  %stats = alloca %struct.net_device_stats*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !21378, metadata !DIExpression()), !dbg !21379
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21380, metadata !DIExpression()), !dbg !21381
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !21382, metadata !DIExpression()), !dbg !21383
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21384
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %0) #13, !dbg !21384
  %1 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !21386
  %gso_size = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %1, i32 0, i32 4, !dbg !21386
  %2 = load i16, i16* %gso_size, align 4, !dbg !21386
  %tobool = icmp ne i16 %2, 0, !dbg !21384
  br i1 %tobool, label %if.then, label %if.else, !dbg !21387

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %features, metadata !21388, metadata !DIExpression()), !dbg !21390
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21391
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %3, i32 0, i32 4, !dbg !21392
  %4 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !21392
  %features1 = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 15, !dbg !21393
  %5 = load i64, i64* %features1, align 8, !dbg !21393
  store i64 %5, i64* %features, align 8, !dbg !21390
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %segs, metadata !21394, metadata !DIExpression()), !dbg !21395
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %seg, metadata !21396, metadata !DIExpression()), !dbg !21397
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %next, metadata !21398, metadata !DIExpression()), !dbg !21399
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head* %seg_list, metadata !21400, metadata !DIExpression()), !dbg !21401
  %6 = load i64, i64* %features, align 8, !dbg !21402
  %and = and i64 %6, -1048594, !dbg !21402
  store i64 %and, i64* %features, align 8, !dbg !21402
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21403
  %8 = load i64, i64* %features, align 8, !dbg !21404
  %call2 = call %struct.sk_buff* @skb_gso_segment(%struct.sk_buff* %7, i64 %8) #13, !dbg !21405
  store %struct.sk_buff* %call2, %struct.sk_buff** %segs, align 8, !dbg !21406
  %9 = load %struct.sk_buff*, %struct.sk_buff** %segs, align 8, !dbg !21407
  %10 = bitcast %struct.sk_buff* %9 to i8*, !dbg !21407
  %call3 = call zeroext i1 @IS_ERR(i8* %10) #13, !dbg !21409
  br i1 %call3, label %if.then5, label %lor.lhs.false, !dbg !21410

lor.lhs.false:                                    ; preds = %if.then
  %11 = load %struct.sk_buff*, %struct.sk_buff** %segs, align 8, !dbg !21411
  %tobool4 = icmp ne %struct.sk_buff* %11, null, !dbg !21411
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !21412

if.then5:                                         ; preds = %lor.lhs.false, %if.then
  br label %drop, !dbg !21413

if.end:                                           ; preds = %lor.lhs.false
  call void @__skb_queue_head_init(%struct.sk_buff_head* %seg_list) #13, !dbg !21414
  %12 = load %struct.sk_buff*, %struct.sk_buff** %segs, align 8, !dbg !21415
  store %struct.sk_buff* %12, %struct.sk_buff** %seg, align 8, !dbg !21415
  %13 = load %struct.sk_buff*, %struct.sk_buff** %seg, align 8, !dbg !21415
  %tobool6 = icmp ne %struct.sk_buff* %13, null, !dbg !21415
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !21415

cond.true:                                        ; preds = %if.end
  %14 = load %struct.sk_buff*, %struct.sk_buff** %seg, align 8, !dbg !21415
  %15 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %14, i32 0, i32 0, !dbg !21415
  %16 = bitcast %union.anon.46* %15 to %struct.anon.47*, !dbg !21415
  %next7 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %16, i32 0, i32 0, !dbg !21415
  %17 = load %struct.sk_buff*, %struct.sk_buff** %next7, align 8, !dbg !21415
  br label %cond.end, !dbg !21415

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !21415

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.sk_buff* [ %17, %cond.true ], [ null, %cond.false ], !dbg !21415
  store %struct.sk_buff* %cond, %struct.sk_buff** %next, align 8, !dbg !21415
  br label %for.cond, !dbg !21415

for.cond:                                         ; preds = %cond.end13, %cond.end
  %18 = load %struct.sk_buff*, %struct.sk_buff** %seg, align 8, !dbg !21417
  %tobool8 = icmp ne %struct.sk_buff* %18, null, !dbg !21415
  br i1 %tobool8, label %for.body, label %for.end, !dbg !21415

for.body:                                         ; preds = %for.cond
  %19 = load %struct.sk_buff*, %struct.sk_buff** %seg, align 8, !dbg !21419
  call void @skb_mark_not_on_list(%struct.sk_buff* %19) #13, !dbg !21421
  %20 = load %struct.sk_buff*, %struct.sk_buff** %seg, align 8, !dbg !21422
  call void @__skb_queue_tail(%struct.sk_buff_head* %seg_list, %struct.sk_buff* %20) #13, !dbg !21423
  br label %for.inc, !dbg !21424

for.inc:                                          ; preds = %for.body
  %21 = load %struct.sk_buff*, %struct.sk_buff** %next, align 8, !dbg !21417
  store %struct.sk_buff* %21, %struct.sk_buff** %seg, align 8, !dbg !21417
  %22 = load %struct.sk_buff*, %struct.sk_buff** %seg, align 8, !dbg !21417
  %tobool9 = icmp ne %struct.sk_buff* %22, null, !dbg !21417
  br i1 %tobool9, label %cond.true10, label %cond.false12, !dbg !21417

cond.true10:                                      ; preds = %for.inc
  %23 = load %struct.sk_buff*, %struct.sk_buff** %seg, align 8, !dbg !21417
  %24 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %23, i32 0, i32 0, !dbg !21417
  %25 = bitcast %union.anon.46* %24 to %struct.anon.47*, !dbg !21417
  %next11 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %25, i32 0, i32 0, !dbg !21417
  %26 = load %struct.sk_buff*, %struct.sk_buff** %next11, align 8, !dbg !21417
  br label %cond.end13, !dbg !21417

cond.false12:                                     ; preds = %for.inc
  br label %cond.end13, !dbg !21417

cond.end13:                                       ; preds = %cond.false12, %cond.true10
  %cond14 = phi %struct.sk_buff* [ %26, %cond.true10 ], [ null, %cond.false12 ], !dbg !21417
  store %struct.sk_buff* %cond14, %struct.sk_buff** %next, align 8, !dbg !21417
  br label %for.cond, !dbg !21417, !llvm.loop !21425

for.end:                                          ; preds = %for.cond
  %27 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !21427
  call void @skb_queue_splice(%struct.sk_buff_head* %seg_list, %struct.sk_buff_head* %27) #13, !dbg !21428
  %28 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21429
  call void @consume_skb(%struct.sk_buff* %28) #13, !dbg !21429
  br label %if.end26, !dbg !21430

if.else:                                          ; preds = %entry
  %29 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21431
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %29, i32 0, i32 14, !dbg !21433
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !21433
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !21433
  %bf.clear = and i16 %bf.lshr, 3, !dbg !21433
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !21433
  %conv = zext i8 %bf.cast to i32, !dbg !21431
  %cmp = icmp eq i32 %conv, 3, !dbg !21434
  br i1 %cmp, label %if.then16, label %if.else22, !dbg !21435

if.then16:                                        ; preds = %if.else
  %30 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21436
  %call17 = call i32 @skb_checksum_help(%struct.sk_buff* %30) #13, !dbg !21439
  %cmp18 = icmp slt i32 %call17, 0, !dbg !21440
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !21441

if.then20:                                        ; preds = %if.then16
  br label %drop, !dbg !21442

if.end21:                                         ; preds = %if.then16
  %31 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !21443
  %32 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21444
  call void @__skb_queue_head(%struct.sk_buff_head* %31, %struct.sk_buff* %32) #13, !dbg !21445
  br label %if.end25, !dbg !21446

if.else22:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.net_device_stats** %stats, metadata !21447, metadata !DIExpression()), !dbg !21449
  br label %drop, !dbg !21450

drop:                                             ; preds = %if.else22, %if.then20, %if.then5
  call void @llvm.dbg.label(metadata !21451), !dbg !21452
  %33 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !21453
  %netdev23 = getelementptr inbounds %struct.r8152, %struct.r8152* %33, i32 0, i32 4, !dbg !21454
  %34 = load %struct.net_device*, %struct.net_device** %netdev23, align 8, !dbg !21454
  %stats24 = getelementptr inbounds %struct.net_device, %struct.net_device* %34, i32 0, i32 24, !dbg !21455
  store %struct.net_device_stats* %stats24, %struct.net_device_stats** %stats, align 8, !dbg !21456
  %35 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !21457
  %tx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %35, i32 0, i32 7, !dbg !21458
  %36 = load i64, i64* %tx_dropped, align 8, !dbg !21459
  %inc = add i64 %36, 1, !dbg !21459
  store i64 %inc, i64* %tx_dropped, align 8, !dbg !21459
  %37 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21460
  call void @consume_skb(%struct.sk_buff* %37) #13, !dbg !21460
  br label %if.end25

if.end25:                                         ; preds = %drop, %if.end21
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %for.end
  ret void, !dbg !21461
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl_tx_vlan_tag(%struct.tx_desc* %desc, %struct.sk_buff* %skb) #2 !dbg !21462 {
entry:
  %desc.addr = alloca %struct.tx_desc*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %opts2 = alloca i32, align 4
  store %struct.tx_desc* %desc, %struct.tx_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tx_desc** %desc.addr, metadata !21465, metadata !DIExpression()), !dbg !21466
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21467, metadata !DIExpression()), !dbg !21468
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21469
  %vlan_present = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 16, !dbg !21469
  %bf.load = load i16, i16* %vlan_present, align 2, !dbg !21469
  %bf.clear = and i16 %bf.load, 1, !dbg !21469
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !21469
  %tobool = icmp ne i8 %bf.cast, 0, !dbg !21469
  br i1 %tobool, label %if.then, label %if.end, !dbg !21471

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %opts2, metadata !21472, metadata !DIExpression()), !dbg !21474
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21475
  %vlan_tci = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 22, !dbg !21475
  %2 = load i16, i16* %vlan_tci, align 2, !dbg !21475
  %3 = call i1 @llvm.is.constant.i16(i16 %2), !dbg !21475
  br i1 %3, label %cond.true, label %cond.false, !dbg !21475

cond.true:                                        ; preds = %if.then
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21475
  %vlan_tci1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 22, !dbg !21475
  %5 = load i16, i16* %vlan_tci1, align 2, !dbg !21475
  %conv = zext i16 %5 to i32, !dbg !21475
  %and = and i32 %conv, 255, !dbg !21475
  %shl = shl i32 %and, 8, !dbg !21475
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21475
  %vlan_tci2 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %6, i32 0, i32 22, !dbg !21475
  %7 = load i16, i16* %vlan_tci2, align 2, !dbg !21475
  %conv3 = zext i16 %7 to i32, !dbg !21475
  %and4 = and i32 %conv3, 65280, !dbg !21475
  %shr = ashr i32 %and4, 8, !dbg !21475
  %or = or i32 %shl, %shr, !dbg !21475
  %conv5 = trunc i32 %or to i16, !dbg !21475
  %conv6 = zext i16 %conv5 to i32, !dbg !21475
  br label %cond.end, !dbg !21475

cond.false:                                       ; preds = %if.then
  %8 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21475
  %vlan_tci7 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %8, i32 0, i32 22, !dbg !21475
  %9 = load i16, i16* %vlan_tci7, align 2, !dbg !21475
  %call = call zeroext i16 @__fswab16(i16 zeroext %9) #15, !dbg !21475
  %conv8 = zext i16 %call to i32, !dbg !21475
  br label %cond.end, !dbg !21475

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv6, %cond.true ], [ %conv8, %cond.false ], !dbg !21475
  %conv9 = sext i32 %cond to i64, !dbg !21475
  %or10 = or i64 65536, %conv9, !dbg !21476
  %conv11 = trunc i64 %or10 to i32, !dbg !21477
  store i32 %conv11, i32* %opts2, align 4, !dbg !21478
  %10 = load i32, i32* %opts2, align 4, !dbg !21479
  %11 = load %struct.tx_desc*, %struct.tx_desc** %desc.addr, align 8, !dbg !21480
  %opts212 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %11, i32 0, i32 1, !dbg !21481
  %12 = load i32, i32* %opts212, align 4, !dbg !21482
  %or13 = or i32 %12, %10, !dbg !21482
  store i32 %or13, i32* %opts212, align 4, !dbg !21482
  br label %if.end, !dbg !21483

if.end:                                           ; preds = %cond.end, %entry
  ret void, !dbg !21484
}

; Function Attrs: noredzone
declare dso_local i32 @skb_copy_bits(%struct.sk_buff*, i32, i8*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_kfree_skb_any(%struct.sk_buff* %skb) #2 !dbg !21485 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21486, metadata !DIExpression()), !dbg !21487
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21488
  call void @__dev_kfree_skb_any(%struct.sk_buff* %0, i32 1) #13, !dbg !21489
  ret void, !dbg !21490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_end_pointer(%struct.sk_buff* %skb) #2 !dbg !21491 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21494, metadata !DIExpression()), !dbg !21495
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21496
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !21497
  %1 = load i8*, i8** %head, align 8, !dbg !21497
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21498
  %end = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 35, !dbg !21499
  %3 = load i32, i32* %end, align 4, !dbg !21499
  %idx.ext = zext i32 %3 to i64, !dbg !21500
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !21500
  ret i8* %add.ptr, !dbg !21501
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_queue_splice(%struct.sk_buff_head* %list, %struct.sk_buff_head* %head) #2 !dbg !21502 {
entry:
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %head.addr = alloca %struct.sk_buff_head*, align 8
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !21505, metadata !DIExpression()), !dbg !21506
  store %struct.sk_buff_head* %head, %struct.sk_buff_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %head.addr, metadata !21507, metadata !DIExpression()), !dbg !21508
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !21509
  %call = call i32 @skb_queue_empty(%struct.sk_buff_head* %0) #13, !dbg !21511
  %tobool = icmp ne i32 %call, 0, !dbg !21511
  br i1 %tobool, label %if.end, label %if.then, !dbg !21512

if.then:                                          ; preds = %entry
  %1 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !21513
  %2 = load %struct.sk_buff_head*, %struct.sk_buff_head** %head.addr, align 8, !dbg !21515
  %3 = bitcast %struct.sk_buff_head* %2 to %struct.sk_buff*, !dbg !21516
  %4 = load %struct.sk_buff_head*, %struct.sk_buff_head** %head.addr, align 8, !dbg !21517
  %next = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %4, i32 0, i32 0, !dbg !21518
  %5 = load %struct.sk_buff*, %struct.sk_buff** %next, align 8, !dbg !21518
  call void @__skb_queue_splice(%struct.sk_buff_head* %1, %struct.sk_buff* %3, %struct.sk_buff* %5) #13, !dbg !21519
  %6 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !21520
  %qlen = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %6, i32 0, i32 2, !dbg !21521
  %7 = load i32, i32* %qlen, align 8, !dbg !21521
  %8 = load %struct.sk_buff_head*, %struct.sk_buff_head** %head.addr, align 8, !dbg !21522
  %qlen1 = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %8, i32 0, i32 2, !dbg !21523
  %9 = load i32, i32* %qlen1, align 8, !dbg !21524
  %add = add i32 %9, %7, !dbg !21524
  store i32 %add, i32* %qlen1, align 8, !dbg !21524
  br label %if.end, !dbg !21525

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !21526
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_lock(%struct.net_device* %dev) #2 !dbg !21527 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !20911, metadata !DIExpression()), !dbg !21528
  %dev.addr = alloca %struct.net_device*, align 8
  %i = alloca i32, align 4
  %cpu = alloca i32, align 4
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21530, metadata !DIExpression()), !dbg !21531
  call void @llvm.dbg.declare(metadata i32* %i, metadata !21532, metadata !DIExpression()), !dbg !21533
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !21534, metadata !DIExpression()), !dbg !21535
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21536
  %tx_global_lock = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 91, !dbg !21537
  store %struct.spinlock* %tx_global_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !21538, !srcloc !20940
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !21539
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !21539
  %rlock.i = bitcast %union.anon.1* %2 to %struct.raw_spinlock*, !dbg !21539
  store i32 0, i32* %cpu, align 4, !dbg !21540
  store i32 0, i32* %i, align 4, !dbg !21541
  br label %for.cond, !dbg !21543

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !21544
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21546
  %num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 87, !dbg !21547
  %5 = load i32, i32* %num_tx_queues, align 8, !dbg !21547
  %cmp = icmp ult i32 %3, %5, !dbg !21548
  br i1 %cmp, label %for.body, label %for.end, !dbg !21549

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !21550, metadata !DIExpression()), !dbg !21552
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21553
  %7 = load i32, i32* %i, align 4, !dbg !21554
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %6, i32 %7) #13, !dbg !21555
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !21552
  %8 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !21556
  %9 = load i32, i32* %cpu, align 4, !dbg !21557
  call void @__netif_tx_lock(%struct.netdev_queue* %8, i32 %9) #13, !dbg !21558
  %10 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !21559
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %10, i32 0, i32 10, !dbg !21560
  call void @set_bit(i64 2, i64* %state) #13, !dbg !21561
  %11 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !21562
  call void @__netif_tx_unlock(%struct.netdev_queue* %11) #13, !dbg !21563
  br label %for.inc, !dbg !21564

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !21565
  %inc = add i32 %12, 1, !dbg !21565
  store i32 %inc, i32* %i, align 4, !dbg !21565
  br label %for.cond, !dbg !21566, !llvm.loop !21567

for.end:                                          ; preds = %for.cond
  ret void, !dbg !21569
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_unlock(%struct.net_device* %dev) #2 !dbg !21570 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !20905, metadata !DIExpression()), !dbg !21571
  %dev.addr = alloca %struct.net_device*, align 8
  %i = alloca i32, align 4
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21573, metadata !DIExpression()), !dbg !21574
  call void @llvm.dbg.declare(metadata i32* %i, metadata !21575, metadata !DIExpression()), !dbg !21576
  store i32 0, i32* %i, align 4, !dbg !21577
  br label %for.cond, !dbg !21579

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !21580
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21582
  %num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 87, !dbg !21583
  %2 = load i32, i32* %num_tx_queues, align 8, !dbg !21583
  %cmp = icmp ult i32 %0, %2, !dbg !21584
  br i1 %cmp, label %for.body, label %for.end, !dbg !21585

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !21586, metadata !DIExpression()), !dbg !21588
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21589
  %4 = load i32, i32* %i, align 4, !dbg !21590
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %3, i32 %4) #13, !dbg !21591
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !21588
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !21592
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %5, i32 0, i32 10, !dbg !21593
  call void @clear_bit(i64 2, i64* %state) #13, !dbg !21594
  %6 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !21595
  call void @netif_schedule_queue(%struct.netdev_queue* %6) #13, !dbg !21596
  br label %for.inc, !dbg !21597

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !21598
  %inc = add i32 %7, 1, !dbg !21598
  store i32 %inc, i32* %i, align 4, !dbg !21598
  br label %for.cond, !dbg !21599, !llvm.loop !21600

for.end:                                          ; preds = %for.cond
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21602
  %tx_global_lock = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 91, !dbg !21603
  store %struct.spinlock* %tx_global_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !21604, !srcloc !20949
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !21605
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !21605
  %rlock.i = bitcast %union.anon.1* %10 to %struct.raw_spinlock*, !dbg !21605
  ret void, !dbg !21606
}

; Function Attrs: noredzone
declare dso_local i32 @usb_autopm_get_interface_async(%struct.usb_interface*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @write_bulk_callback(%struct.urb* %urb) #2 !dbg !21607 {
entry:
  %lock.addr.i55 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i55, metadata !15428, metadata !DIExpression()), !dbg !21608
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !15435, metadata !DIExpression()), !dbg !21610
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !15437, metadata !DIExpression()), !dbg !21611
  %urb.addr = alloca %struct.urb*, align 8
  %stats = alloca %struct.net_device_stats*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %agg = alloca %struct.tx_agg*, align 8
  %tp = alloca %struct.r8152*, align 8
  %flags = alloca i64, align 8
  %status = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy24 = alloca i64, align 8
  %__dummy225 = alloca i64, align 8
  %tmp28 = alloca i32, align 4
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !21618, metadata !DIExpression()), !dbg !21619
  call void @llvm.dbg.declare(metadata %struct.net_device_stats** %stats, metadata !21620, metadata !DIExpression()), !dbg !21621
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !21622, metadata !DIExpression()), !dbg !21623
  call void @llvm.dbg.declare(metadata %struct.tx_agg** %agg, metadata !21624, metadata !DIExpression()), !dbg !21625
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !21626, metadata !DIExpression()), !dbg !21627
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !21628, metadata !DIExpression()), !dbg !21629
  call void @llvm.dbg.declare(metadata i32* %status, metadata !21630, metadata !DIExpression()), !dbg !21631
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !21632
  %status1 = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 12, !dbg !21633
  %1 = load i32, i32* %status1, align 8, !dbg !21633
  store i32 %1, i32* %status, align 4, !dbg !21631
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !21634
  %context = getelementptr inbounds %struct.urb, %struct.urb* %2, i32 0, i32 27, !dbg !21635
  %3 = load i8*, i8** %context, align 8, !dbg !21635
  %4 = bitcast i8* %3 to %struct.tx_agg*, !dbg !21634
  store %struct.tx_agg* %4, %struct.tx_agg** %agg, align 8, !dbg !21636
  %5 = load %struct.tx_agg*, %struct.tx_agg** %agg, align 8, !dbg !21637
  %tobool = icmp ne %struct.tx_agg* %5, null, !dbg !21637
  br i1 %tobool, label %if.end, label %if.then, !dbg !21639

if.then:                                          ; preds = %entry
  br label %if.end54, !dbg !21640

if.end:                                           ; preds = %entry
  %6 = load %struct.tx_agg*, %struct.tx_agg** %agg, align 8, !dbg !21641
  %context2 = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %6, i32 0, i32 2, !dbg !21642
  %7 = load %struct.r8152*, %struct.r8152** %context2, align 8, !dbg !21642
  store %struct.r8152* %7, %struct.r8152** %tp, align 8, !dbg !21643
  %8 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !21644
  %tobool3 = icmp ne %struct.r8152* %8, null, !dbg !21644
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !21646

if.then4:                                         ; preds = %if.end
  br label %if.end54, !dbg !21647

if.end5:                                          ; preds = %if.end
  %9 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !21648
  %netdev6 = getelementptr inbounds %struct.r8152, %struct.r8152* %9, i32 0, i32 4, !dbg !21649
  %10 = load %struct.net_device*, %struct.net_device** %netdev6, align 8, !dbg !21649
  store %struct.net_device* %10, %struct.net_device** %netdev, align 8, !dbg !21650
  %11 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !21651
  %stats7 = getelementptr inbounds %struct.net_device, %struct.net_device* %11, i32 0, i32 24, !dbg !21652
  store %struct.net_device_stats* %stats7, %struct.net_device_stats** %stats, align 8, !dbg !21653
  %12 = load i32, i32* %status, align 4, !dbg !21654
  %tobool8 = icmp ne i32 %12, 0, !dbg !21654
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !21656

if.then9:                                         ; preds = %if.end5
  %call = call i32 @net_ratelimit() #13, !dbg !21657
  %tobool10 = icmp ne i32 %call, 0, !dbg !21657
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !21660

if.then11:                                        ; preds = %if.then9
  %13 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !21661
  %14 = load i32, i32* %status, align 4, !dbg !21662
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.61, i64 0, i64 0), i32 %14) #14, !dbg !21663
  br label %if.end12, !dbg !21663

if.end12:                                         ; preds = %if.then11, %if.then9
  %15 = load %struct.tx_agg*, %struct.tx_agg** %agg, align 8, !dbg !21664
  %skb_num = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %15, i32 0, i32 5, !dbg !21665
  %16 = load i32, i32* %skb_num, align 8, !dbg !21665
  %conv = zext i32 %16 to i64, !dbg !21664
  %17 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !21666
  %tx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %17, i32 0, i32 5, !dbg !21667
  %18 = load i64, i64* %tx_errors, align 8, !dbg !21668
  %add = add i64 %18, %conv, !dbg !21668
  store i64 %add, i64* %tx_errors, align 8, !dbg !21668
  br label %if.end18, !dbg !21669

if.else:                                          ; preds = %if.end5
  %19 = load %struct.tx_agg*, %struct.tx_agg** %agg, align 8, !dbg !21670
  %skb_num13 = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %19, i32 0, i32 5, !dbg !21672
  %20 = load i32, i32* %skb_num13, align 8, !dbg !21672
  %conv14 = zext i32 %20 to i64, !dbg !21670
  %21 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !21673
  %tx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %21, i32 0, i32 1, !dbg !21674
  %22 = load i64, i64* %tx_packets, align 8, !dbg !21675
  %add15 = add i64 %22, %conv14, !dbg !21675
  store i64 %add15, i64* %tx_packets, align 8, !dbg !21675
  %23 = load %struct.tx_agg*, %struct.tx_agg** %agg, align 8, !dbg !21676
  %skb_len = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %23, i32 0, i32 6, !dbg !21677
  %24 = load i32, i32* %skb_len, align 4, !dbg !21677
  %conv16 = zext i32 %24 to i64, !dbg !21676
  %25 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !21678
  %tx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %25, i32 0, i32 3, !dbg !21679
  %26 = load i64, i64* %tx_bytes, align 8, !dbg !21680
  %add17 = add i64 %26, %conv16, !dbg !21680
  store i64 %add17, i64* %tx_bytes, align 8, !dbg !21680
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.end12
  br label %do.body, !dbg !21681

do.body:                                          ; preds = %if.end18
  br label %do.body19, !dbg !21682

do.body19:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !21683, metadata !DIExpression()), !dbg !21685
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !21686, metadata !DIExpression()), !dbg !21685
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !21685
  %conv20 = zext i1 %cmp to i32, !dbg !21685
  store i32 1, i32* %tmp, align 4, !dbg !21685
  %27 = load i32, i32* %tmp, align 4, !dbg !21685
  br label %do.body21, !dbg !21687

do.body21:                                        ; preds = %do.body19
  br label %do.body22, !dbg !21688

do.body22:                                        ; preds = %do.body21
  br label %do.body23, !dbg !21689

do.body23:                                        ; preds = %do.body22
  call void @llvm.dbg.declare(metadata i64* %__dummy24, metadata !21691, metadata !DIExpression()), !dbg !21694
  call void @llvm.dbg.declare(metadata i64* %__dummy225, metadata !21695, metadata !DIExpression()), !dbg !21694
  %cmp26 = icmp eq i64* %__dummy24, %__dummy225, !dbg !21694
  %conv27 = zext i1 %cmp26 to i32, !dbg !21694
  store i32 1, i32* %tmp28, align 4, !dbg !21694
  %28 = load i32, i32* %tmp28, align 4, !dbg !21694
  %call29 = call i64 @arch_local_irq_save() #13, !dbg !21696
  store i64 %call29, i64* %flags, align 8, !dbg !21696
  br label %do.end, !dbg !21696

do.end:                                           ; preds = %do.body23
  br label %do.end30, !dbg !21689

do.end30:                                         ; preds = %do.end
  br label %do.body31, !dbg !21688

do.body31:                                        ; preds = %do.end30
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !21697, !srcloc !21698
  br label %do.body32, !dbg !21697

do.body32:                                        ; preds = %do.body31
  %29 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !21699
  %tx_lock = getelementptr inbounds %struct.r8152, %struct.r8152* %29, i32 0, i32 14, !dbg !21699
  store %struct.spinlock* %tx_lock, %struct.spinlock** %lock.addr.i, align 8
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !21700
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !21701
  %rlock.i = bitcast %union.anon.1* %31 to %struct.raw_spinlock*, !dbg !21701
  br label %do.end34, !dbg !21699

do.end34:                                         ; preds = %do.body32
  br label %do.end35, !dbg !21697

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !21688

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !21687

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !21682

do.end38:                                         ; preds = %do.end37
  %32 = load %struct.tx_agg*, %struct.tx_agg** %agg, align 8, !dbg !21702
  %list = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %32, i32 0, i32 0, !dbg !21703
  %33 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !21704
  %tx_free = getelementptr inbounds %struct.r8152, %struct.r8152* %33, i32 0, i32 10, !dbg !21705
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %tx_free) #13, !dbg !21706
  %34 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !21707
  %tx_lock39 = getelementptr inbounds %struct.r8152, %struct.r8152* %34, i32 0, i32 14, !dbg !21708
  %35 = load i64, i64* %flags, align 8, !dbg !21709
  store %struct.spinlock* %tx_lock39, %struct.spinlock** %lock.addr.i55, align 8
  store i64 %35, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !820, metadata !15497, metadata !DIExpression()) #11, !dbg !21710
  call void @llvm.dbg.declare(metadata !820, metadata !15501, metadata !DIExpression()) #11, !dbg !21710
  store i32 1, i32* %tmp.i, align 4, !dbg !21710
  %36 = load i32, i32* %tmp.i, align 4, !dbg !21710
  call void @llvm.dbg.declare(metadata !820, metadata !15502, metadata !DIExpression()) #11, !dbg !21711
  call void @llvm.dbg.declare(metadata !820, metadata !15508, metadata !DIExpression()) #11, !dbg !21711
  store i32 1, i32* %tmp8.i, align 4, !dbg !21711
  %37 = load i32, i32* %tmp8.i, align 4, !dbg !21711
  %38 = load i64, i64* %flags.addr.i, align 8, !dbg !21712
  call void @arch_local_irq_restore(i64 %38) #16, !dbg !21712
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !21713, !srcloc !15512
  %39 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i55, align 8, !dbg !21714
  %40 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %39, i32 0, i32 0, !dbg !21714
  %rlock.i56 = bitcast %union.anon.1* %40 to %struct.raw_spinlock*, !dbg !21714
  %41 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !21715
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %41, i32 0, i32 3, !dbg !21716
  %42 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !21716
  call void @usb_autopm_put_interface_async(%struct.usb_interface* %42) #13, !dbg !21717
  %43 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !21718
  %call40 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %43) #13, !dbg !21720
  br i1 %call40, label %if.end42, label %if.then41, !dbg !21721

if.then41:                                        ; preds = %do.end38
  br label %if.end54, !dbg !21722

if.end42:                                         ; preds = %do.end38
  %44 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !21723
  %flags43 = getelementptr inbounds %struct.r8152, %struct.r8152* %44, i32 0, i32 0, !dbg !21725
  %call44 = call zeroext i1 @test_bit(i64 2, i64* %flags43) #13, !dbg !21726
  br i1 %call44, label %if.end46, label %if.then45, !dbg !21727

if.then45:                                        ; preds = %if.end42
  br label %if.end54, !dbg !21728

if.end46:                                         ; preds = %if.end42
  %45 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !21729
  %flags47 = getelementptr inbounds %struct.r8152, %struct.r8152* %45, i32 0, i32 0, !dbg !21731
  %call48 = call zeroext i1 @test_bit(i64 0, i64* %flags47) #13, !dbg !21732
  br i1 %call48, label %if.then49, label %if.end50, !dbg !21733

if.then49:                                        ; preds = %if.end46
  br label %if.end54, !dbg !21734

if.end50:                                         ; preds = %if.end46
  %46 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !21735
  %tx_queue = getelementptr inbounds %struct.r8152, %struct.r8152* %46, i32 0, i32 11, !dbg !21737
  %call51 = call i32 @skb_queue_empty(%struct.sk_buff_head* %tx_queue) #13, !dbg !21738
  %tobool52 = icmp ne i32 %call51, 0, !dbg !21738
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !21739

if.then53:                                        ; preds = %if.end50
  %47 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !21740
  %tx_tl = getelementptr inbounds %struct.r8152, %struct.r8152* %47, i32 0, i32 20, !dbg !21741
  call void @tasklet_schedule(%struct.tasklet_struct* %tx_tl) #13, !dbg !21742
  br label %if.end54, !dbg !21742

if.end54:                                         ; preds = %if.then, %if.then4, %if.then41, %if.then45, %if.then49, %if.then53, %if.end50
  ret void, !dbg !21743
}

; Function Attrs: noredzone
declare dso_local void @usb_autopm_put_interface_async(%struct.usb_interface*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_queue_after(%struct.sk_buff_head* %list, %struct.sk_buff* %prev, %struct.sk_buff* %newsk) #2 !dbg !21744 {
entry:
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %prev.addr = alloca %struct.sk_buff*, align 8
  %newsk.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !21747, metadata !DIExpression()), !dbg !21748
  store %struct.sk_buff* %prev, %struct.sk_buff** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %prev.addr, metadata !21749, metadata !DIExpression()), !dbg !21750
  store %struct.sk_buff* %newsk, %struct.sk_buff** %newsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %newsk.addr, metadata !21751, metadata !DIExpression()), !dbg !21752
  %0 = load %struct.sk_buff*, %struct.sk_buff** %newsk.addr, align 8, !dbg !21753
  %1 = load %struct.sk_buff*, %struct.sk_buff** %prev.addr, align 8, !dbg !21754
  %2 = load %struct.sk_buff*, %struct.sk_buff** %prev.addr, align 8, !dbg !21755
  %3 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 0, !dbg !21756
  %4 = bitcast %union.anon.46* %3 to %struct.anon.47*, !dbg !21756
  %next = getelementptr inbounds %struct.anon.47, %struct.anon.47* %4, i32 0, i32 0, !dbg !21756
  %5 = load %struct.sk_buff*, %struct.sk_buff** %next, align 8, !dbg !21756
  %6 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !21757
  call void @__skb_insert(%struct.sk_buff* %0, %struct.sk_buff* %1, %struct.sk_buff* %5, %struct.sk_buff_head* %6) #13, !dbg !21758
  ret void, !dbg !21759
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_insert(%struct.sk_buff* %newsk, %struct.sk_buff* %prev, %struct.sk_buff* %next, %struct.sk_buff_head* %list) #2 !dbg !21760 {
entry:
  %newsk.addr = alloca %struct.sk_buff*, align 8
  %prev.addr = alloca %struct.sk_buff*, align 8
  %next.addr = alloca %struct.sk_buff*, align 8
  %list.addr = alloca %struct.sk_buff_head*, align 8
  store %struct.sk_buff* %newsk, %struct.sk_buff** %newsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %newsk.addr, metadata !21763, metadata !DIExpression()), !dbg !21764
  store %struct.sk_buff* %prev, %struct.sk_buff** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %prev.addr, metadata !21765, metadata !DIExpression()), !dbg !21766
  store %struct.sk_buff* %next, %struct.sk_buff** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %next.addr, metadata !21767, metadata !DIExpression()), !dbg !21768
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !21769, metadata !DIExpression()), !dbg !21770
  br label %do.body, !dbg !21771

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !21772

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !21774

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !21772

do.body2:                                         ; preds = %do.end
  %0 = load %struct.sk_buff*, %struct.sk_buff** %next.addr, align 8, !dbg !21776
  %1 = load %struct.sk_buff*, %struct.sk_buff** %newsk.addr, align 8, !dbg !21776
  %2 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 0, !dbg !21776
  %3 = bitcast %union.anon.46* %2 to %struct.anon.47*, !dbg !21776
  %next3 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %3, i32 0, i32 0, !dbg !21776
  store volatile %struct.sk_buff* %0, %struct.sk_buff** %next3, align 8, !dbg !21776
  br label %do.end4, !dbg !21776

do.end4:                                          ; preds = %do.body2
  br label %do.end5, !dbg !21772

do.end5:                                          ; preds = %do.end4
  br label %do.body6, !dbg !21778

do.body6:                                         ; preds = %do.end5
  br label %do.body7, !dbg !21779

do.body7:                                         ; preds = %do.body6
  br label %do.end8, !dbg !21781

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !21779

do.body9:                                         ; preds = %do.end8
  %4 = load %struct.sk_buff*, %struct.sk_buff** %prev.addr, align 8, !dbg !21783
  %5 = load %struct.sk_buff*, %struct.sk_buff** %newsk.addr, align 8, !dbg !21783
  %6 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %5, i32 0, i32 0, !dbg !21783
  %7 = bitcast %union.anon.46* %6 to %struct.anon.47*, !dbg !21783
  %prev10 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %7, i32 0, i32 1, !dbg !21783
  store volatile %struct.sk_buff* %4, %struct.sk_buff** %prev10, align 8, !dbg !21783
  br label %do.end11, !dbg !21783

do.end11:                                         ; preds = %do.body9
  br label %do.end12, !dbg !21779

do.end12:                                         ; preds = %do.end11
  br label %do.body13, !dbg !21785

do.body13:                                        ; preds = %do.end12
  br label %do.body14, !dbg !21786

do.body14:                                        ; preds = %do.body13
  br label %do.end15, !dbg !21788

do.end15:                                         ; preds = %do.body14
  br label %do.body16, !dbg !21786

do.body16:                                        ; preds = %do.end15
  %8 = load %struct.sk_buff*, %struct.sk_buff** %newsk.addr, align 8, !dbg !21790
  %9 = load %struct.sk_buff*, %struct.sk_buff** %next.addr, align 8, !dbg !21790
  %10 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %9, i32 0, i32 0, !dbg !21790
  %11 = bitcast %union.anon.46* %10 to %struct.anon.47*, !dbg !21790
  %prev17 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %11, i32 0, i32 1, !dbg !21790
  store volatile %struct.sk_buff* %8, %struct.sk_buff** %prev17, align 8, !dbg !21790
  br label %do.end18, !dbg !21790

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !21786

do.end19:                                         ; preds = %do.end18
  br label %do.body20, !dbg !21792

do.body20:                                        ; preds = %do.end19
  br label %do.body21, !dbg !21793

do.body21:                                        ; preds = %do.body20
  br label %do.end22, !dbg !21795

do.end22:                                         ; preds = %do.body21
  br label %do.body23, !dbg !21793

do.body23:                                        ; preds = %do.end22
  %12 = load %struct.sk_buff*, %struct.sk_buff** %newsk.addr, align 8, !dbg !21797
  %13 = load %struct.sk_buff*, %struct.sk_buff** %prev.addr, align 8, !dbg !21797
  %14 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %13, i32 0, i32 0, !dbg !21797
  %15 = bitcast %union.anon.46* %14 to %struct.anon.47*, !dbg !21797
  %next24 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %15, i32 0, i32 0, !dbg !21797
  store volatile %struct.sk_buff* %12, %struct.sk_buff** %next24, align 8, !dbg !21797
  br label %do.end25, !dbg !21797

do.end25:                                         ; preds = %do.body23
  br label %do.end26, !dbg !21793

do.end26:                                         ; preds = %do.end25
  %16 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !21799
  %qlen = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %16, i32 0, i32 2, !dbg !21800
  %17 = load i32, i32* %qlen, align 8, !dbg !21801
  %inc = add i32 %17, 1, !dbg !21801
  store i32 %inc, i32* %qlen, align 8, !dbg !21801
  ret void, !dbg !21802
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_transport_header(%struct.sk_buff* %skb) #2 !dbg !21803 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21804, metadata !DIExpression()), !dbg !21805
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21806
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !21807
  %1 = load i8*, i8** %head, align 8, !dbg !21807
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21808
  %transport_header = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 30, !dbg !21809
  %3 = load i16, i16* %transport_header, align 2, !dbg !21809
  %conv = zext i16 %3 to i32, !dbg !21808
  %idx.ext = sext i32 %conv to i64, !dbg !21810
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !21810
  ret i8* %add.ptr, !dbg !21811
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @vlan_get_protocol(%struct.sk_buff* %skb) #2 !dbg !21812 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21814, metadata !DIExpression()), !dbg !21815
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21816
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21817
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 29, !dbg !21818
  %2 = load i16, i16* %protocol, align 8, !dbg !21818
  %call = call zeroext i16 @__vlan_get_protocol(%struct.sk_buff* %0, i16 zeroext %2, i32* null) #13, !dbg !21819
  ret i16 %call, !dbg !21820
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_cow_head(%struct.sk_buff* %skb, i32 %headroom) #2 !dbg !21821 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %headroom.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21824, metadata !DIExpression()), !dbg !21825
  store i32 %headroom, i32* %headroom.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %headroom.addr, metadata !21826, metadata !DIExpression()), !dbg !21827
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21828
  %1 = load i32, i32* %headroom.addr, align 4, !dbg !21829
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21830
  %call = call i32 @skb_header_cloned(%struct.sk_buff* %2) #13, !dbg !21831
  %call1 = call i32 @__skb_cow(%struct.sk_buff* %0, i32 %1, i32 %call) #13, !dbg !21832
  ret i32 %call1, !dbg !21833
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tcp_v6_gso_csum_prep(%struct.sk_buff* %skb) #2 !dbg !21834 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %ipv6h = alloca %struct.ipv6hdr*, align 8
  %th = alloca %struct.tcphdr*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21836, metadata !DIExpression()), !dbg !21837
  call void @llvm.dbg.declare(metadata %struct.ipv6hdr** %ipv6h, metadata !21838, metadata !DIExpression()), !dbg !21839
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21840
  %call = call %struct.ipv6hdr* @ipv6_hdr(%struct.sk_buff* %0) #13, !dbg !21841
  store %struct.ipv6hdr* %call, %struct.ipv6hdr** %ipv6h, align 8, !dbg !21839
  call void @llvm.dbg.declare(metadata %struct.tcphdr** %th, metadata !21842, metadata !DIExpression()), !dbg !21843
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21844
  %call1 = call %struct.tcphdr* @tcp_hdr(%struct.sk_buff* %1) #13, !dbg !21845
  store %struct.tcphdr* %call1, %struct.tcphdr** %th, align 8, !dbg !21843
  %2 = load %struct.ipv6hdr*, %struct.ipv6hdr** %ipv6h, align 8, !dbg !21846
  %payload_len = getelementptr inbounds %struct.ipv6hdr, %struct.ipv6hdr* %2, i32 0, i32 2, !dbg !21847
  store i16 0, i16* %payload_len, align 4, !dbg !21848
  %3 = load %struct.ipv6hdr*, %struct.ipv6hdr** %ipv6h, align 8, !dbg !21849
  %saddr = getelementptr inbounds %struct.ipv6hdr, %struct.ipv6hdr* %3, i32 0, i32 5, !dbg !21850
  %4 = load %struct.ipv6hdr*, %struct.ipv6hdr** %ipv6h, align 8, !dbg !21851
  %daddr = getelementptr inbounds %struct.ipv6hdr, %struct.ipv6hdr* %4, i32 0, i32 6, !dbg !21852
  %call2 = call zeroext i16 @tcp_v6_check(i32 0, %struct.in6_addr* %saddr, %struct.in6_addr* %daddr, i32 0) #13, !dbg !21853
  %conv = zext i16 %call2 to i32, !dbg !21853
  %neg = xor i32 %conv, -1, !dbg !21854
  %conv3 = trunc i32 %neg to i16, !dbg !21854
  %5 = load %struct.tcphdr*, %struct.tcphdr** %th, align 8, !dbg !21855
  %check = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %5, i32 0, i32 6, !dbg !21856
  store i16 %conv3, i16* %check, align 4, !dbg !21857
  ret void, !dbg !21858
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.iphdr* @ip_hdr(%struct.sk_buff* %skb) #2 !dbg !21859 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21863, metadata !DIExpression()), !dbg !21864
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21865
  %call = call i8* @skb_network_header(%struct.sk_buff* %0) #13, !dbg !21866
  %1 = bitcast i8* %call to %struct.iphdr*, !dbg !21867
  ret %struct.iphdr* %1, !dbg !21868
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ipv6hdr* @ipv6_hdr(%struct.sk_buff* %skb) #2 !dbg !21869 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21872, metadata !DIExpression()), !dbg !21873
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21874
  %call = call i8* @skb_network_header(%struct.sk_buff* %0) #13, !dbg !21875
  %1 = bitcast i8* %call to %struct.ipv6hdr*, !dbg !21876
  ret %struct.ipv6hdr* %1, !dbg !21877
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @__vlan_get_protocol(%struct.sk_buff* %skb, i16 zeroext %type, i32* %depth) #2 !dbg !21878 {
entry:
  %retval = alloca i16, align 2
  %skb.addr = alloca %struct.sk_buff*, align 8
  %type.addr = alloca i16, align 2
  %depth.addr = alloca i32*, align 8
  %vlan_depth = alloca i32, align 4
  %parse_depth = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %vhdr = alloca %struct.vlan_hdr, align 2
  %vh = alloca %struct.vlan_hdr*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21881, metadata !DIExpression()), !dbg !21882
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !21883, metadata !DIExpression()), !dbg !21884
  store i32* %depth, i32** %depth.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %depth.addr, metadata !21885, metadata !DIExpression()), !dbg !21886
  call void @llvm.dbg.declare(metadata i32* %vlan_depth, metadata !21887, metadata !DIExpression()), !dbg !21888
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21889
  %mac_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 7, !dbg !21890
  %1 = load i16, i16* %mac_len, align 8, !dbg !21890
  %conv = zext i16 %1 to i32, !dbg !21889
  store i32 %conv, i32* %vlan_depth, align 4, !dbg !21888
  call void @llvm.dbg.declare(metadata i32* %parse_depth, metadata !21891, metadata !DIExpression()), !dbg !21892
  store i32 8, i32* %parse_depth, align 4, !dbg !21892
  %2 = load i16, i16* %type.addr, align 2, !dbg !21893
  %call = call zeroext i1 @eth_type_vlan(i16 zeroext %2) #13, !dbg !21895
  br i1 %call, label %if.then, label %if.end44, !dbg !21896

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %vlan_depth, align 4, !dbg !21897
  %tobool = icmp ne i32 %3, 0, !dbg !21897
  br i1 %tobool, label %if.then1, label %if.else, !dbg !21900

if.then1:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !21901, metadata !DIExpression()), !dbg !21905
  %4 = load i32, i32* %vlan_depth, align 4, !dbg !21905
  %cmp = icmp ult i32 %4, 4, !dbg !21905
  %lnot = xor i1 %cmp, true, !dbg !21905
  %lnot3 = xor i1 %lnot, true, !dbg !21905
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !21905
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !21905
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !21906
  %tobool4 = icmp ne i32 %5, 0, !dbg !21906
  %lnot5 = xor i1 %tobool4, true, !dbg !21906
  %lnot7 = xor i1 %lnot5, true, !dbg !21906
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !21906
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !21906
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !21906
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !21905

if.then11:                                        ; preds = %if.then1
  br label %do.body, !dbg !21906

do.body:                                          ; preds = %if.then11
  br label %do.body12, !dbg !21908

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !21910

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !21908

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.60, i64 0, i64 0), i32 593, i32 2305, i64 12) #11, !dbg !21912, !srcloc !21914
  br label %do.end14, !dbg !21912

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 329) #11, !dbg !21915, !srcloc !21917
  br label %do.body15, !dbg !21908

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !21918

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !21908

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !21908

if.end:                                           ; preds = %do.end17, %if.then1
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !21905
  %tobool18 = icmp ne i32 %6, 0, !dbg !21905
  %lnot19 = xor i1 %tobool18, true, !dbg !21905
  %lnot21 = xor i1 %lnot19, true, !dbg !21905
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !21905
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !21905
  store i64 %conv23, i64* %tmp, align 8, !dbg !21906
  %7 = load i64, i64* %tmp, align 8, !dbg !21905
  %tobool24 = icmp ne i64 %7, 0, !dbg !21920
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !21921

if.then25:                                        ; preds = %if.end
  store i16 0, i16* %retval, align 2, !dbg !21922
  br label %return, !dbg !21922

if.end26:                                         ; preds = %if.end
  %8 = load i32, i32* %vlan_depth, align 4, !dbg !21923
  %sub = sub i32 %8, 4, !dbg !21923
  store i32 %sub, i32* %vlan_depth, align 4, !dbg !21923
  br label %if.end27, !dbg !21924

if.else:                                          ; preds = %if.then
  store i32 14, i32* %vlan_depth, align 4, !dbg !21925
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.end26
  br label %do.body28, !dbg !21927

do.body28:                                        ; preds = %do.cond, %if.end27
  call void @llvm.dbg.declare(metadata %struct.vlan_hdr* %vhdr, metadata !21928, metadata !DIExpression()), !dbg !21934
  call void @llvm.dbg.declare(metadata %struct.vlan_hdr** %vh, metadata !21935, metadata !DIExpression()), !dbg !21937
  %9 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21938
  %10 = load i32, i32* %vlan_depth, align 4, !dbg !21939
  %11 = bitcast %struct.vlan_hdr* %vhdr to i8*, !dbg !21940
  %call29 = call i8* @skb_header_pointer(%struct.sk_buff* %9, i32 %10, i32 4, i8* %11) #13, !dbg !21941
  %12 = bitcast i8* %call29 to %struct.vlan_hdr*, !dbg !21941
  store %struct.vlan_hdr* %12, %struct.vlan_hdr** %vh, align 8, !dbg !21942
  %13 = load %struct.vlan_hdr*, %struct.vlan_hdr** %vh, align 8, !dbg !21943
  %tobool30 = icmp ne %struct.vlan_hdr* %13, null, !dbg !21943
  br i1 %tobool30, label %lor.rhs, label %lor.end, !dbg !21943

lor.rhs:                                          ; preds = %do.body28
  %14 = load i32, i32* %parse_depth, align 4, !dbg !21943
  %dec = add i32 %14, -1, !dbg !21943
  store i32 %dec, i32* %parse_depth, align 4, !dbg !21943
  %tobool31 = icmp ne i32 %dec, 0, !dbg !21943
  %lnot32 = xor i1 %tobool31, true, !dbg !21943
  br label %lor.end, !dbg !21943

lor.end:                                          ; preds = %lor.rhs, %do.body28
  %15 = phi i1 [ true, %do.body28 ], [ %lnot32, %lor.rhs ]
  %lnot34 = xor i1 %15, true, !dbg !21943
  %lnot36 = xor i1 %lnot34, true, !dbg !21943
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !21943
  %conv38 = sext i32 %lnot.ext37 to i64, !dbg !21943
  %tobool39 = icmp ne i64 %conv38, 0, !dbg !21943
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !21945

if.then40:                                        ; preds = %lor.end
  store i16 0, i16* %retval, align 2, !dbg !21946
  br label %return, !dbg !21946

if.end41:                                         ; preds = %lor.end
  %16 = load %struct.vlan_hdr*, %struct.vlan_hdr** %vh, align 8, !dbg !21947
  %h_vlan_encapsulated_proto = getelementptr inbounds %struct.vlan_hdr, %struct.vlan_hdr* %16, i32 0, i32 1, !dbg !21948
  %17 = load i16, i16* %h_vlan_encapsulated_proto, align 2, !dbg !21948
  store i16 %17, i16* %type.addr, align 2, !dbg !21949
  %18 = load i32, i32* %vlan_depth, align 4, !dbg !21950
  %add = add i32 %18, 4, !dbg !21950
  store i32 %add, i32* %vlan_depth, align 4, !dbg !21950
  br label %do.cond, !dbg !21951

do.cond:                                          ; preds = %if.end41
  %19 = load i16, i16* %type.addr, align 2, !dbg !21952
  %call42 = call zeroext i1 @eth_type_vlan(i16 zeroext %19) #13, !dbg !21953
  br i1 %call42, label %do.body28, label %do.end43, !dbg !21951, !llvm.loop !21954

do.end43:                                         ; preds = %do.cond
  br label %if.end44, !dbg !21956

if.end44:                                         ; preds = %do.end43, %entry
  %20 = load i32*, i32** %depth.addr, align 8, !dbg !21957
  %tobool45 = icmp ne i32* %20, null, !dbg !21957
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !21959

if.then46:                                        ; preds = %if.end44
  %21 = load i32, i32* %vlan_depth, align 4, !dbg !21960
  %22 = load i32*, i32** %depth.addr, align 8, !dbg !21961
  store i32 %21, i32* %22, align 4, !dbg !21962
  br label %if.end47, !dbg !21963

if.end47:                                         ; preds = %if.then46, %if.end44
  %23 = load i16, i16* %type.addr, align 2, !dbg !21964
  store i16 %23, i16* %retval, align 2, !dbg !21965
  br label %return, !dbg !21965

return:                                           ; preds = %if.end47, %if.then40, %if.then25
  %24 = load i16, i16* %retval, align 2, !dbg !21966
  ret i16 %24, !dbg !21966
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @eth_type_vlan(i16 zeroext %ethertype) #2 !dbg !21967 {
entry:
  %retval = alloca i1, align 1
  %ethertype.addr = alloca i16, align 2
  store i16 %ethertype, i16* %ethertype.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %ethertype.addr, metadata !21970, metadata !DIExpression()), !dbg !21971
  %0 = load i16, i16* %ethertype.addr, align 2, !dbg !21972
  %conv = zext i16 %0 to i32, !dbg !21972
  switch i32 %conv, label %sw.default [
    i32 129, label %sw.bb
    i32 43144, label %sw.bb
  ], !dbg !21973

sw.bb:                                            ; preds = %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21974
  br label %return, !dbg !21974

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21976
  br label %return, !dbg !21976

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21977
  ret i1 %1, !dbg !21977
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_header_pointer(%struct.sk_buff* %skb, i32 %offset, i32 %len, i8* %buffer) #2 !dbg !21978 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %offset.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21981, metadata !DIExpression()), !dbg !21982
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !21983, metadata !DIExpression()), !dbg !21984
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !21985, metadata !DIExpression()), !dbg !21986
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !21987, metadata !DIExpression()), !dbg !21988
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21989
  %1 = load i32, i32* %offset.addr, align 4, !dbg !21990
  %2 = load i32, i32* %len.addr, align 4, !dbg !21991
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21992
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 37, !dbg !21993
  %4 = load i8*, i8** %data, align 8, !dbg !21993
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21994
  %call = call i32 @skb_headlen(%struct.sk_buff* %5) #13, !dbg !21995
  %6 = load i8*, i8** %buffer.addr, align 8, !dbg !21996
  %call1 = call i8* @__skb_header_pointer(%struct.sk_buff* %0, i32 %1, i32 %2, i8* %4, i32 %call, i8* %6) #13, !dbg !21997
  ret i8* %call1, !dbg !21998
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @__skb_header_pointer(%struct.sk_buff* %skb, i32 %offset, i32 %len, i8* %data, i32 %hlen, i8* %buffer) #2 !dbg !21999 {
entry:
  %retval = alloca i8*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %offset.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %hlen.addr = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !22002, metadata !DIExpression()), !dbg !22003
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !22004, metadata !DIExpression()), !dbg !22005
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !22006, metadata !DIExpression()), !dbg !22007
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !22008, metadata !DIExpression()), !dbg !22009
  store i32 %hlen, i32* %hlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hlen.addr, metadata !22010, metadata !DIExpression()), !dbg !22011
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !22012, metadata !DIExpression()), !dbg !22013
  %0 = load i32, i32* %hlen.addr, align 4, !dbg !22014
  %1 = load i32, i32* %offset.addr, align 4, !dbg !22016
  %sub = sub i32 %0, %1, !dbg !22017
  %2 = load i32, i32* %len.addr, align 4, !dbg !22018
  %cmp = icmp sge i32 %sub, %2, !dbg !22019
  br i1 %cmp, label %if.then, label %if.end, !dbg !22020

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %data.addr, align 8, !dbg !22021
  %4 = load i32, i32* %offset.addr, align 4, !dbg !22022
  %idx.ext = sext i32 %4 to i64, !dbg !22023
  %add.ptr = getelementptr i8, i8* %3, i64 %idx.ext, !dbg !22023
  store i8* %add.ptr, i8** %retval, align 8, !dbg !22024
  br label %return, !dbg !22024

if.end:                                           ; preds = %entry
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22025
  %tobool = icmp ne %struct.sk_buff* %5, null, !dbg !22025
  br i1 %tobool, label %lor.lhs.false, label %if.then2, !dbg !22027

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22028
  %7 = load i32, i32* %offset.addr, align 4, !dbg !22029
  %8 = load i8*, i8** %buffer.addr, align 8, !dbg !22030
  %9 = load i32, i32* %len.addr, align 4, !dbg !22031
  %call = call i32 @skb_copy_bits(%struct.sk_buff* %6, i32 %7, i8* %8, i32 %9) #13, !dbg !22032
  %cmp1 = icmp slt i32 %call, 0, !dbg !22033
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !22034

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  store i8* null, i8** %retval, align 8, !dbg !22035
  br label %return, !dbg !22035

if.end3:                                          ; preds = %lor.lhs.false
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !22036
  store i8* %10, i8** %retval, align 8, !dbg !22037
  br label %return, !dbg !22037

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %11 = load i8*, i8** %retval, align 8, !dbg !22038
  ret i8* %11, !dbg !22038
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_headlen(%struct.sk_buff* %skb) #2 !dbg !22039 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !22042, metadata !DIExpression()), !dbg !22043
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22044
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 5, !dbg !22045
  %1 = load i32, i32* %len, align 8, !dbg !22045
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22046
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 6, !dbg !22047
  %3 = load i32, i32* %data_len, align 4, !dbg !22047
  %sub = sub i32 %1, %3, !dbg !22048
  ret i32 %sub, !dbg !22049
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__skb_cow(%struct.sk_buff* %skb, i32 %headroom, i32 %cloned) #2 !dbg !22050 {
entry:
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %headroom.addr = alloca i32, align 4
  %cloned.addr = alloca i32, align 4
  %delta = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !22053, metadata !DIExpression()), !dbg !22054
  store i32 %headroom, i32* %headroom.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %headroom.addr, metadata !22055, metadata !DIExpression()), !dbg !22056
  store i32 %cloned, i32* %cloned.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cloned.addr, metadata !22057, metadata !DIExpression()), !dbg !22058
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !22059, metadata !DIExpression()), !dbg !22060
  store i32 0, i32* %delta, align 4, !dbg !22060
  %0 = load i32, i32* %headroom.addr, align 4, !dbg !22061
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22063
  %call = call i32 @skb_headroom(%struct.sk_buff* %1) #13, !dbg !22064
  %cmp = icmp ugt i32 %0, %call, !dbg !22065
  br i1 %cmp, label %if.then, label %if.end, !dbg !22066

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %headroom.addr, align 4, !dbg !22067
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22068
  %call1 = call i32 @skb_headroom(%struct.sk_buff* %3) #13, !dbg !22069
  %sub = sub i32 %2, %call1, !dbg !22070
  store i32 %sub, i32* %delta, align 4, !dbg !22071
  br label %if.end, !dbg !22072

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %delta, align 4, !dbg !22073
  %tobool = icmp ne i32 %4, 0, !dbg !22073
  br i1 %tobool, label %if.then3, label %lor.lhs.false, !dbg !22075

lor.lhs.false:                                    ; preds = %if.end
  %5 = load i32, i32* %cloned.addr, align 4, !dbg !22076
  %tobool2 = icmp ne i32 %5, 0, !dbg !22076
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !22077

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22078
  %7 = load i32, i32* %delta, align 4, !dbg !22079
  %add = add i32 %7, 63, !dbg !22079
  %and = and i32 %add, -64, !dbg !22079
  %call4 = call i32 @pskb_expand_head(%struct.sk_buff* %6, i32 %and, i32 0, i32 2592) #13, !dbg !22080
  store i32 %call4, i32* %retval, align 4, !dbg !22081
  br label %return, !dbg !22081

if.end5:                                          ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !22082
  br label %return, !dbg !22082

return:                                           ; preds = %if.end5, %if.then3
  %8 = load i32, i32* %retval, align 4, !dbg !22083
  ret i32 %8, !dbg !22083
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_header_cloned(%struct.sk_buff* %skb) #2 !dbg !22084 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !15911, metadata !DIExpression()), !dbg !22085
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !14189, metadata !DIExpression()), !dbg !22088
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !14193, metadata !DIExpression()), !dbg !22090
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !15926, metadata !DIExpression()), !dbg !22091
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dataref = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !22092, metadata !DIExpression()), !dbg !22093
  call void @llvm.dbg.declare(metadata i32* %dataref, metadata !22094, metadata !DIExpression()), !dbg !22095
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22096
  %cloned = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 11, !dbg !22098
  %bf.load = load i8, i8* %cloned, align 2, !dbg !22098
  %bf.clear = and i8 %bf.load, 1, !dbg !22098
  %tobool = icmp ne i8 %bf.clear, 0, !dbg !22096
  br i1 %tobool, label %if.end, label %if.then, !dbg !22099

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !22100
  br label %return, !dbg !22100

if.end:                                           ; preds = %entry
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22101
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %1) #13, !dbg !22101
  %2 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !22102
  %dataref1 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %2, i32 0, i32 10, !dbg !22102
  store %struct.atomic_t* %dataref1, %struct.atomic_t** %v.addr.i, align 8
  %3 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !22103
  %4 = bitcast %struct.atomic_t* %3 to i8*, !dbg !22103
  store i8* %4, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !22104
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !22105
  %conv.i.i = trunc i64 %6 to i32, !dbg !22105
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %5, i32 %conv.i.i) #16, !dbg !22106
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !22107
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !22107
  call void @kcsan_check_access(i8* %7, i64 %8, i32 4) #16, !dbg !22107
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !22108
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !22109
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %10, i32 0, i32 0, !dbg !22109
  %11 = load volatile i32, i32* %counter.i.i, align 4, !dbg !22109
  store i32 %11, i32* %dataref, align 4, !dbg !22110
  %12 = load i32, i32* %dataref, align 4, !dbg !22111
  %and = and i32 %12, 65535, !dbg !22112
  %13 = load i32, i32* %dataref, align 4, !dbg !22113
  %shr = ashr i32 %13, 16, !dbg !22114
  %sub = sub i32 %and, %shr, !dbg !22115
  store i32 %sub, i32* %dataref, align 4, !dbg !22116
  %14 = load i32, i32* %dataref, align 4, !dbg !22117
  %cmp = icmp ne i32 %14, 1, !dbg !22118
  %conv = zext i1 %cmp to i32, !dbg !22118
  store i32 %conv, i32* %retval, align 4, !dbg !22119
  br label %return, !dbg !22119

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !22120
  ret i32 %15, !dbg !22120
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_headroom(%struct.sk_buff* %skb) #2 !dbg !22121 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !22122, metadata !DIExpression()), !dbg !22123
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22124
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 37, !dbg !22125
  %1 = load i8*, i8** %data, align 8, !dbg !22125
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22126
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 36, !dbg !22127
  %3 = load i8*, i8** %head, align 8, !dbg !22127
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !22128
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !22128
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !22128
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !22124
  ret i32 %conv, !dbg !22129
}

; Function Attrs: noredzone
declare dso_local i32 @pskb_expand_head(%struct.sk_buff*, i32, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.tcphdr* @tcp_hdr(%struct.sk_buff* %skb) #2 !dbg !22130 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !22134, metadata !DIExpression()), !dbg !22135
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22136
  %call = call i8* @skb_transport_header(%struct.sk_buff* %0) #13, !dbg !22137
  %1 = bitcast i8* %call to %struct.tcphdr*, !dbg !22138
  ret %struct.tcphdr* %1, !dbg !22139
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @tcp_v6_check(i32 %len, %struct.in6_addr* %saddr, %struct.in6_addr* %daddr, i32 %base) #2 !dbg !22140 {
entry:
  %len.addr = alloca i32, align 4
  %saddr.addr = alloca %struct.in6_addr*, align 8
  %daddr.addr = alloca %struct.in6_addr*, align 8
  %base.addr = alloca i32, align 4
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !22145, metadata !DIExpression()), !dbg !22146
  store %struct.in6_addr* %saddr, %struct.in6_addr** %saddr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %saddr.addr, metadata !22147, metadata !DIExpression()), !dbg !22148
  store %struct.in6_addr* %daddr, %struct.in6_addr** %daddr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %daddr.addr, metadata !22149, metadata !DIExpression()), !dbg !22150
  store i32 %base, i32* %base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !22151, metadata !DIExpression()), !dbg !22152
  %0 = load %struct.in6_addr*, %struct.in6_addr** %saddr.addr, align 8, !dbg !22153
  %1 = load %struct.in6_addr*, %struct.in6_addr** %daddr.addr, align 8, !dbg !22154
  %2 = load i32, i32* %len.addr, align 4, !dbg !22155
  %3 = load i32, i32* %base.addr, align 4, !dbg !22156
  %call = call zeroext i16 @csum_ipv6_magic(%struct.in6_addr* %0, %struct.in6_addr* %1, i32 %2, i8 zeroext 6, i32 %3) #13, !dbg !22157
  ret i16 %call, !dbg !22158
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @csum_ipv6_magic(%struct.in6_addr*, %struct.in6_addr*, i32, i8 zeroext, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_network_header(%struct.sk_buff* %skb) #2 !dbg !22159 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !22160, metadata !DIExpression()), !dbg !22161
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22162
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !22163
  %1 = load i8*, i8** %head, align 8, !dbg !22163
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22164
  %network_header = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 31, !dbg !22165
  %3 = load i16, i16* %network_header, align 4, !dbg !22165
  %conv = zext i16 %3 to i32, !dbg !22164
  %idx.ext = sext i32 %conv to i64, !dbg !22166
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !22166
  ret i8* %add.ptr, !dbg !22167
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @skb_gso_segment(%struct.sk_buff* %skb, i64 %features) #2 !dbg !22168 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %features.addr = alloca i64, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !22171, metadata !DIExpression()), !dbg !22172
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !22173, metadata !DIExpression()), !dbg !22174
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22175
  %1 = load i64, i64* %features.addr, align 8, !dbg !22176
  %call = call %struct.sk_buff* @__skb_gso_segment(%struct.sk_buff* %0, i64 %1, i1 zeroext true) #13, !dbg !22177
  ret %struct.sk_buff* %call, !dbg !22178
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_mark_not_on_list(%struct.sk_buff* %skb) #2 !dbg !22179 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !22180, metadata !DIExpression()), !dbg !22181
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22182
  %1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 0, !dbg !22183
  %2 = bitcast %union.anon.46* %1 to %struct.anon.47*, !dbg !22183
  %next = getelementptr inbounds %struct.anon.47, %struct.anon.47* %2, i32 0, i32 0, !dbg !22183
  store %struct.sk_buff* null, %struct.sk_buff** %next, align 8, !dbg !22184
  ret void, !dbg !22185
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_queue_tail(%struct.sk_buff_head* %list, %struct.sk_buff* %newsk) #2 !dbg !22186 {
entry:
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %newsk.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !22187, metadata !DIExpression()), !dbg !22188
  store %struct.sk_buff* %newsk, %struct.sk_buff** %newsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %newsk.addr, metadata !22189, metadata !DIExpression()), !dbg !22190
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !22191
  %1 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !22192
  %2 = bitcast %struct.sk_buff_head* %1 to %struct.sk_buff*, !dbg !22193
  %3 = load %struct.sk_buff*, %struct.sk_buff** %newsk.addr, align 8, !dbg !22194
  call void @__skb_queue_before(%struct.sk_buff_head* %0, %struct.sk_buff* %2, %struct.sk_buff* %3) #13, !dbg !22195
  ret void, !dbg !22196
}

; Function Attrs: noredzone
declare dso_local i32 @skb_checksum_help(%struct.sk_buff*) #1

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__skb_gso_segment(%struct.sk_buff*, i64, i1 zeroext) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_queue_before(%struct.sk_buff_head* %list, %struct.sk_buff* %next, %struct.sk_buff* %newsk) #2 !dbg !22197 {
entry:
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %next.addr = alloca %struct.sk_buff*, align 8
  %newsk.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !22198, metadata !DIExpression()), !dbg !22199
  store %struct.sk_buff* %next, %struct.sk_buff** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %next.addr, metadata !22200, metadata !DIExpression()), !dbg !22201
  store %struct.sk_buff* %newsk, %struct.sk_buff** %newsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %newsk.addr, metadata !22202, metadata !DIExpression()), !dbg !22203
  %0 = load %struct.sk_buff*, %struct.sk_buff** %newsk.addr, align 8, !dbg !22204
  %1 = load %struct.sk_buff*, %struct.sk_buff** %next.addr, align 8, !dbg !22205
  %2 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 0, !dbg !22206
  %3 = bitcast %union.anon.46* %2 to %struct.anon.47*, !dbg !22206
  %prev = getelementptr inbounds %struct.anon.47, %struct.anon.47* %3, i32 0, i32 1, !dbg !22206
  %4 = load %struct.sk_buff*, %struct.sk_buff** %prev, align 8, !dbg !22206
  %5 = load %struct.sk_buff*, %struct.sk_buff** %next.addr, align 8, !dbg !22207
  %6 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !22208
  call void @__skb_insert(%struct.sk_buff* %0, %struct.sk_buff* %4, %struct.sk_buff* %5, %struct.sk_buff_head* %6) #13, !dbg !22209
  ret void, !dbg !22210
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i16(i16) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal zeroext i16 @__fswab16(i16 zeroext %val) #8 !dbg !22211 {
entry:
  %val.addr = alloca i16, align 2
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !22214, metadata !DIExpression()), !dbg !22215
  %0 = load i16, i16* %val.addr, align 2, !dbg !22216
  %conv = zext i16 %0 to i32, !dbg !22216
  %and = and i32 %conv, 255, !dbg !22216
  %shl = shl i32 %and, 8, !dbg !22216
  %1 = load i16, i16* %val.addr, align 2, !dbg !22216
  %conv1 = zext i16 %1 to i32, !dbg !22216
  %and2 = and i32 %conv1, 65280, !dbg !22216
  %shr = ashr i32 %and2, 8, !dbg !22216
  %or = or i32 %shl, %shr, !dbg !22216
  %conv3 = trunc i32 %or to i16, !dbg !22216
  ret i16 %conv3, !dbg !22217
}

; Function Attrs: noredzone
declare dso_local void @__dev_kfree_skb_any(%struct.sk_buff*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__netif_tx_lock(%struct.netdev_queue* %txq, i32 %cpu) #2 !dbg !22218 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !20911, metadata !DIExpression()), !dbg !22221
  %txq.addr = alloca %struct.netdev_queue*, align 8
  %cpu.addr = alloca i32, align 4
  store %struct.netdev_queue* %txq, %struct.netdev_queue** %txq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq.addr, metadata !22223, metadata !DIExpression()), !dbg !22224
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !22225, metadata !DIExpression()), !dbg !22226
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !22227
  %_xmit_lock = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 7, !dbg !22228
  store %struct.spinlock* %_xmit_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !22229, !srcloc !20940
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !22230
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !22230
  %rlock.i = bitcast %union.anon.1* %2 to %struct.raw_spinlock*, !dbg !22230
  %3 = load i32, i32* %cpu.addr, align 4, !dbg !22231
  %4 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !22232
  %xmit_lock_owner = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %4, i32 0, i32 8, !dbg !22233
  store i32 %3, i32* %xmit_lock_owner, align 8, !dbg !22234
  ret void, !dbg !22235
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__netif_tx_unlock(%struct.netdev_queue* %txq) #2 !dbg !22236 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !20905, metadata !DIExpression()), !dbg !22237
  %txq.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %txq, %struct.netdev_queue** %txq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq.addr, metadata !22239, metadata !DIExpression()), !dbg !22240
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !22241
  %xmit_lock_owner = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 8, !dbg !22242
  store i32 -1, i32* %xmit_lock_owner, align 8, !dbg !22243
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !22244
  %_xmit_lock = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 7, !dbg !22245
  store %struct.spinlock* %_xmit_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !22246, !srcloc !20949
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !22247
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !22247
  %rlock.i = bitcast %union.anon.1* %3 to %struct.raw_spinlock*, !dbg !22247
  ret void, !dbg !22248
}

; Function Attrs: noredzone
declare dso_local void @netif_schedule_queue(%struct.netdev_queue*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_disable_nosync(%struct.tasklet_struct* %t) #2 !dbg !22249 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !22250, metadata !DIExpression()), !dbg !22252
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !15953, metadata !DIExpression()), !dbg !22256
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15957, metadata !DIExpression()), !dbg !22258
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !22259, metadata !DIExpression()), !dbg !22260
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !22261, metadata !DIExpression()), !dbg !22262
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !22263
  %count = getelementptr inbounds %struct.tasklet_struct, %struct.tasklet_struct* %0, i32 0, i32 2, !dbg !22264
  store %struct.atomic_t* %count, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !22265
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !22265
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !22266
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !22267
  %conv.i.i = trunc i64 %4 to i32, !dbg !22267
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #16, !dbg !22268
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !22269
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !22269
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #16, !dbg !22269
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !22270
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !22271
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !22272
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #11, !dbg !22273, !srcloc !22274
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !22275, !srcloc !22276
  ret void, !dbg !22277
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_open(%struct.net_device* %netdev) #2 !dbg !22278 {
entry:
  %retval = alloca i32, align 4
  %netdev.addr = alloca %struct.net_device*, align 8
  %tp = alloca %struct.r8152*, align 8
  %res = alloca i32, align 4
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !22279, metadata !DIExpression()), !dbg !22280
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !22281, metadata !DIExpression()), !dbg !22282
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !22283
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !22284
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !22284
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !22282
  call void @llvm.dbg.declare(metadata i32* %res, metadata !22285, metadata !DIExpression()), !dbg !22286
  store i32 0, i32* %res, align 4, !dbg !22286
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22287
  %hw_phy_work = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 16, !dbg !22289
  %work = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %hw_phy_work, i32 0, i32 0, !dbg !22290
  %call1 = call i32 @work_busy(%struct.work_struct* %work) #13, !dbg !22291
  %and = and i32 %call1, 1, !dbg !22292
  %tobool = icmp ne i32 %and, 0, !dbg !22292
  br i1 %tobool, label %if.then, label %if.end, !dbg !22293

if.then:                                          ; preds = %entry
  %3 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22294
  %hw_phy_work2 = getelementptr inbounds %struct.r8152, %struct.r8152* %3, i32 0, i32 16, !dbg !22296
  %call3 = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %hw_phy_work2) #13, !dbg !22297
  %4 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22298
  %hw_phy_work4 = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 16, !dbg !22299
  %work5 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %hw_phy_work4, i32 0, i32 0, !dbg !22300
  call void @rtl_hw_phy_work_func_t(%struct.work_struct* %work5) #13, !dbg !22301
  br label %if.end, !dbg !22302

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22303
  %call6 = call i32 @alloc_all_mem(%struct.r8152* %5) #13, !dbg !22304
  store i32 %call6, i32* %res, align 4, !dbg !22305
  %6 = load i32, i32* %res, align 4, !dbg !22306
  %tobool7 = icmp ne i32 %6, 0, !dbg !22306
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !22308

if.then8:                                         ; preds = %if.end
  br label %out, !dbg !22309

if.end9:                                          ; preds = %if.end
  %7 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22310
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 3, !dbg !22311
  %8 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !22311
  %call10 = call i32 @usb_autopm_get_interface(%struct.usb_interface* %8) #13, !dbg !22312
  store i32 %call10, i32* %res, align 4, !dbg !22313
  %9 = load i32, i32* %res, align 4, !dbg !22314
  %cmp = icmp slt i32 %9, 0, !dbg !22316
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !22317

if.then11:                                        ; preds = %if.end9
  br label %out_free, !dbg !22318

if.end12:                                         ; preds = %if.end9
  %10 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22319
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %10, i32 0, i32 18, !dbg !22320
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !22321
  %11 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22322
  %rtl_ops = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 21, !dbg !22323
  %up = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops, i32 0, i32 3, !dbg !22324
  %12 = load void (%struct.r8152*)*, void (%struct.r8152*)** %up, align 8, !dbg !22324
  %13 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22325
  call void %12(%struct.r8152* %13) #13, !dbg !22322
  %14 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !22326
  call void @netif_carrier_off(%struct.net_device* %14) #13, !dbg !22327
  %15 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !22328
  call void @netif_start_queue(%struct.net_device* %15) #13, !dbg !22329
  %16 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22330
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %16, i32 0, i32 0, !dbg !22331
  call void @set_bit(i64 2, i64* %flags) #13, !dbg !22332
  %17 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22333
  %intr_urb = getelementptr inbounds %struct.r8152, %struct.r8152* %17, i32 0, i32 5, !dbg !22334
  %18 = load %struct.urb*, %struct.urb** %intr_urb, align 8, !dbg !22334
  %call13 = call i32 @usb_submit_urb(%struct.urb* %18, i32 3264) #13, !dbg !22335
  store i32 %call13, i32* %res, align 4, !dbg !22336
  %19 = load i32, i32* %res, align 4, !dbg !22337
  %tobool14 = icmp ne i32 %19, 0, !dbg !22337
  br i1 %tobool14, label %if.then15, label %if.end24, !dbg !22339

if.then15:                                        ; preds = %if.end12
  %20 = load i32, i32* %res, align 4, !dbg !22340
  %cmp16 = icmp eq i32 %20, -19, !dbg !22343
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !22344

if.then17:                                        ; preds = %if.then15
  %21 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22345
  %netdev18 = getelementptr inbounds %struct.r8152, %struct.r8152* %21, i32 0, i32 4, !dbg !22346
  %22 = load %struct.net_device*, %struct.net_device** %netdev18, align 8, !dbg !22346
  call void @netif_device_detach(%struct.net_device* %22) #13, !dbg !22347
  br label %if.end19, !dbg !22347

if.end19:                                         ; preds = %if.then17, %if.then15
  br label %do.body, !dbg !22348

do.body:                                          ; preds = %if.end19
  %23 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22349
  %msg_enable = getelementptr inbounds %struct.r8152, %struct.r8152* %23, i32 0, i32 28, !dbg !22349
  %24 = load i32, i32* %msg_enable, align 8, !dbg !22349
  %and20 = and i32 %24, 32, !dbg !22349
  %tobool21 = icmp ne i32 %and20, 0, !dbg !22349
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !22352

if.then22:                                        ; preds = %do.body
  %25 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !22349
  %26 = load i32, i32* %res, align 4, !dbg !22349
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %25, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.62, i64 0, i64 0), i32 %26) #14, !dbg !22349
  br label %if.end23, !dbg !22349

if.end23:                                         ; preds = %if.then22, %do.body
  br label %do.end, !dbg !22352

do.end:                                           ; preds = %if.end23
  br label %out_unlock, !dbg !22353

if.end24:                                         ; preds = %if.end12
  %27 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22354
  %napi = getelementptr inbounds %struct.r8152, %struct.r8152* %27, i32 0, i32 2, !dbg !22355
  call void @napi_enable(%struct.napi_struct* %napi) #13, !dbg !22356
  %28 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22357
  %tx_tl = getelementptr inbounds %struct.r8152, %struct.r8152* %28, i32 0, i32 20, !dbg !22358
  call void @tasklet_enable(%struct.tasklet_struct* %tx_tl) #13, !dbg !22359
  %29 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22360
  %control25 = getelementptr inbounds %struct.r8152, %struct.r8152* %29, i32 0, i32 18, !dbg !22361
  call void @mutex_unlock(%struct.mutex* %control25) #13, !dbg !22362
  %30 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22363
  %intf26 = getelementptr inbounds %struct.r8152, %struct.r8152* %30, i32 0, i32 3, !dbg !22364
  %31 = load %struct.usb_interface*, %struct.usb_interface** %intf26, align 8, !dbg !22364
  call void @usb_autopm_put_interface(%struct.usb_interface* %31) #13, !dbg !22365
  %32 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22366
  %pm_notifier = getelementptr inbounds %struct.r8152, %struct.r8152* %32, i32 0, i32 19, !dbg !22367
  %notifier_call = getelementptr inbounds %struct.notifier_block, %struct.notifier_block* %pm_notifier, i32 0, i32 0, !dbg !22368
  store i32 (%struct.notifier_block*, i64, i8*)* @rtl_notifier, i32 (%struct.notifier_block*, i64, i8*)** %notifier_call, align 8, !dbg !22369
  %33 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22370
  %pm_notifier27 = getelementptr inbounds %struct.r8152, %struct.r8152* %33, i32 0, i32 19, !dbg !22371
  %call28 = call i32 @register_pm_notifier(%struct.notifier_block* %pm_notifier27) #13, !dbg !22372
  store i32 0, i32* %retval, align 4, !dbg !22373
  br label %return, !dbg !22373

out_unlock:                                       ; preds = %do.end
  call void @llvm.dbg.label(metadata !22374), !dbg !22375
  %34 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22376
  %control29 = getelementptr inbounds %struct.r8152, %struct.r8152* %34, i32 0, i32 18, !dbg !22377
  call void @mutex_unlock(%struct.mutex* %control29) #13, !dbg !22378
  %35 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22379
  %intf30 = getelementptr inbounds %struct.r8152, %struct.r8152* %35, i32 0, i32 3, !dbg !22380
  %36 = load %struct.usb_interface*, %struct.usb_interface** %intf30, align 8, !dbg !22380
  call void @usb_autopm_put_interface(%struct.usb_interface* %36) #13, !dbg !22381
  br label %out_free, !dbg !22381

out_free:                                         ; preds = %out_unlock, %if.then11
  call void @llvm.dbg.label(metadata !22382), !dbg !22383
  %37 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22384
  call void @free_all_mem(%struct.r8152* %37) #13, !dbg !22385
  br label %out, !dbg !22385

out:                                              ; preds = %out_free, %if.then8
  call void @llvm.dbg.label(metadata !22386), !dbg !22387
  %38 = load i32, i32* %res, align 4, !dbg !22388
  store i32 %38, i32* %retval, align 4, !dbg !22389
  br label %return, !dbg !22389

return:                                           ; preds = %out, %if.end24
  %39 = load i32, i32* %retval, align 4, !dbg !22390
  ret i32 %39, !dbg !22390
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_close(%struct.net_device* %netdev) #2 !dbg !22391 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %tp = alloca %struct.r8152*, align 8
  %res = alloca i32, align 4
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !22392, metadata !DIExpression()), !dbg !22393
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !22394, metadata !DIExpression()), !dbg !22395
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !22396
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !22397
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !22397
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !22395
  call void @llvm.dbg.declare(metadata i32* %res, metadata !22398, metadata !DIExpression()), !dbg !22399
  store i32 0, i32* %res, align 4, !dbg !22399
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22400
  %pm_notifier = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 19, !dbg !22401
  %call1 = call i32 @unregister_pm_notifier(%struct.notifier_block* %pm_notifier) #13, !dbg !22402
  %3 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22403
  %tx_tl = getelementptr inbounds %struct.r8152, %struct.r8152* %3, i32 0, i32 20, !dbg !22404
  call void @tasklet_disable(%struct.tasklet_struct* %tx_tl) #13, !dbg !22405
  %4 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22406
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 0, !dbg !22407
  call void @clear_bit(i64 2, i64* %flags) #13, !dbg !22408
  %5 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22409
  %intr_urb = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 5, !dbg !22410
  %6 = load %struct.urb*, %struct.urb** %intr_urb, align 8, !dbg !22410
  call void @usb_kill_urb(%struct.urb* %6) #13, !dbg !22411
  %7 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22412
  %schedule = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 15, !dbg !22413
  %call2 = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %schedule) #13, !dbg !22414
  %8 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22415
  %napi = getelementptr inbounds %struct.r8152, %struct.r8152* %8, i32 0, i32 2, !dbg !22416
  call void @napi_disable(%struct.napi_struct* %napi) #13, !dbg !22417
  %9 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !22418
  call void @netif_stop_queue(%struct.net_device* %9) #13, !dbg !22419
  %10 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22420
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %10, i32 0, i32 3, !dbg !22421
  %11 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !22421
  %call3 = call i32 @usb_autopm_get_interface(%struct.usb_interface* %11) #13, !dbg !22422
  store i32 %call3, i32* %res, align 4, !dbg !22423
  %12 = load i32, i32* %res, align 4, !dbg !22424
  %cmp = icmp slt i32 %12, 0, !dbg !22426
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !22427

lor.lhs.false:                                    ; preds = %entry
  %13 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22428
  %flags4 = getelementptr inbounds %struct.r8152, %struct.r8152* %13, i32 0, i32 0, !dbg !22429
  %call5 = call zeroext i1 @test_bit(i64 0, i64* %flags4) #13, !dbg !22430
  br i1 %call5, label %if.then, label %if.else, !dbg !22431

if.then:                                          ; preds = %lor.lhs.false, %entry
  %14 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22432
  call void @rtl_drop_queued_tx(%struct.r8152* %14) #13, !dbg !22434
  %15 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22435
  %call6 = call i32 @rtl_stop_rx(%struct.r8152* %15) #13, !dbg !22436
  br label %if.end, !dbg !22437

if.else:                                          ; preds = %lor.lhs.false
  %16 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22438
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %16, i32 0, i32 18, !dbg !22440
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !22441
  %17 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22442
  %rtl_ops = getelementptr inbounds %struct.r8152, %struct.r8152* %17, i32 0, i32 21, !dbg !22443
  %down = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops, i32 0, i32 4, !dbg !22444
  %18 = load void (%struct.r8152*)*, void (%struct.r8152*)** %down, align 8, !dbg !22444
  %19 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22445
  call void %18(%struct.r8152* %19) #13, !dbg !22442
  %20 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22446
  %control7 = getelementptr inbounds %struct.r8152, %struct.r8152* %20, i32 0, i32 18, !dbg !22447
  call void @mutex_unlock(%struct.mutex* %control7) #13, !dbg !22448
  %21 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22449
  %intf8 = getelementptr inbounds %struct.r8152, %struct.r8152* %21, i32 0, i32 3, !dbg !22450
  %22 = load %struct.usb_interface*, %struct.usb_interface** %intf8, align 8, !dbg !22450
  call void @usb_autopm_put_interface(%struct.usb_interface* %22) #13, !dbg !22451
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %23 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22452
  call void @free_all_mem(%struct.r8152* %23) #13, !dbg !22453
  %24 = load i32, i32* %res, align 4, !dbg !22454
  ret i32 %24, !dbg !22455
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_start_xmit(%struct.sk_buff* %skb, %struct.net_device* %netdev) #2 !dbg !22456 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %netdev.addr = alloca %struct.net_device*, align 8
  %tp = alloca %struct.r8152*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !22457, metadata !DIExpression()), !dbg !22458
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !22459, metadata !DIExpression()), !dbg !22460
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !22461, metadata !DIExpression()), !dbg !22462
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !22463
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !22464
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !22464
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !22462
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22465
  call void @skb_tx_timestamp(%struct.sk_buff* %2) #13, !dbg !22466
  %3 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22467
  %tx_queue = getelementptr inbounds %struct.r8152, %struct.r8152* %3, i32 0, i32 11, !dbg !22468
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22469
  call void @skb_queue_tail(%struct.sk_buff_head* %tx_queue, %struct.sk_buff* %4) #13, !dbg !22470
  %5 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22471
  %tx_free = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 10, !dbg !22473
  %call1 = call i32 @list_empty(%struct.list_head* %tx_free) #13, !dbg !22474
  %tobool = icmp ne i32 %call1, 0, !dbg !22474
  br i1 %tobool, label %if.else6, label %if.then, !dbg !22475

if.then:                                          ; preds = %entry
  %6 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22476
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 0, !dbg !22479
  %call2 = call zeroext i1 @test_bit(i64 4, i64* %flags) #13, !dbg !22480
  br i1 %call2, label %if.then3, label %if.else, !dbg !22481

if.then3:                                         ; preds = %if.then
  %7 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22482
  %flags4 = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 0, !dbg !22484
  call void @set_bit(i64 6, i64* %flags4) #13, !dbg !22485
  %8 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22486
  %schedule = getelementptr inbounds %struct.r8152, %struct.r8152* %8, i32 0, i32 15, !dbg !22487
  %call5 = call zeroext i1 @schedule_delayed_work(%struct.delayed_work* %schedule, i64 0) #13, !dbg !22488
  br label %if.end, !dbg !22489

if.else:                                          ; preds = %if.then
  %9 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22490
  %udev = getelementptr inbounds %struct.r8152, %struct.r8152* %9, i32 0, i32 1, !dbg !22492
  %10 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !22492
  call void @usb_mark_last_busy(%struct.usb_device* %10) #13, !dbg !22493
  %11 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22494
  %tx_tl = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 20, !dbg !22495
  call void @tasklet_schedule(%struct.tasklet_struct* %tx_tl) #13, !dbg !22496
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end11, !dbg !22497

if.else6:                                         ; preds = %entry
  %12 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22498
  %tx_queue7 = getelementptr inbounds %struct.r8152, %struct.r8152* %12, i32 0, i32 11, !dbg !22500
  %call8 = call i32 @skb_queue_len(%struct.sk_buff_head* %tx_queue7) #13, !dbg !22501
  %13 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22502
  %tx_qlen = getelementptr inbounds %struct.r8152, %struct.r8152* %13, i32 0, i32 29, !dbg !22503
  %14 = load i32, i32* %tx_qlen, align 4, !dbg !22503
  %cmp = icmp ugt i32 %call8, %14, !dbg !22504
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !22505

if.then9:                                         ; preds = %if.else6
  %15 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !22506
  call void @netif_stop_queue(%struct.net_device* %15) #13, !dbg !22508
  br label %if.end10, !dbg !22509

if.end10:                                         ; preds = %if.then9, %if.else6
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.end
  ret i32 0, !dbg !22510
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @rtl8152_features_check(%struct.sk_buff* %skb, %struct.net_device* %dev, i64 %features) #2 !dbg !22511 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %features.addr = alloca i64, align 8
  %mss = alloca i32, align 4
  %max_offset = alloca i32, align 4
  %offset = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !22512, metadata !DIExpression()), !dbg !22513
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22514, metadata !DIExpression()), !dbg !22515
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !22516, metadata !DIExpression()), !dbg !22517
  call void @llvm.dbg.declare(metadata i32* %mss, metadata !22518, metadata !DIExpression()), !dbg !22519
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22520
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %0) #13, !dbg !22520
  %1 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !22521
  %gso_size = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %1, i32 0, i32 4, !dbg !22521
  %2 = load i16, i16* %gso_size, align 4, !dbg !22521
  %conv = zext i16 %2 to i32, !dbg !22520
  store i32 %conv, i32* %mss, align 4, !dbg !22519
  call void @llvm.dbg.declare(metadata i32* %max_offset, metadata !22522, metadata !DIExpression()), !dbg !22523
  %3 = load i32, i32* %mss, align 4, !dbg !22524
  %tobool = icmp ne i32 %3, 0, !dbg !22524
  %4 = zext i1 %tobool to i64, !dbg !22524
  %cond = select i1 %tobool, i32 127, i32 2047, !dbg !22524
  store i32 %cond, i32* %max_offset, align 4, !dbg !22523
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !22525, metadata !DIExpression()), !dbg !22526
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22527
  %call1 = call i32 @skb_transport_offset(%struct.sk_buff* %5) #13, !dbg !22528
  store i32 %call1, i32* %offset, align 4, !dbg !22526
  %6 = load i32, i32* %mss, align 4, !dbg !22529
  %tobool2 = icmp ne i32 %6, 0, !dbg !22529
  br i1 %tobool2, label %land.lhs.true, label %lor.lhs.false, !dbg !22531

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22532
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %7, i32 0, i32 14, !dbg !22533
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !22533
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !22533
  %bf.clear = and i16 %bf.lshr, 3, !dbg !22533
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !22533
  %conv3 = zext i8 %bf.cast to i32, !dbg !22532
  %cmp = icmp eq i32 %conv3, 3, !dbg !22534
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !22535

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %8 = load i32, i32* %offset, align 4, !dbg !22536
  %9 = load i32, i32* %max_offset, align 4, !dbg !22537
  %cmp5 = icmp sgt i32 %8, %9, !dbg !22538
  br i1 %cmp5, label %if.then, label %if.else, !dbg !22539

if.then:                                          ; preds = %land.lhs.true
  %10 = load i64, i64* %features.addr, align 8, !dbg !22540
  %and = and i64 %10, -34359672859, !dbg !22540
  store i64 %and, i64* %features.addr, align 8, !dbg !22540
  br label %if.end13, !dbg !22541

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22542
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %11, i32 0, i32 5, !dbg !22544
  %12 = load i32, i32* %len, align 8, !dbg !22544
  %conv7 = zext i32 %12 to i64, !dbg !22542
  %add = add i64 %conv7, 8, !dbg !22545
  %13 = load i32, i32* @agg_buf_sz, align 4, !dbg !22546
  %conv8 = zext i32 %13 to i64, !dbg !22546
  %cmp9 = icmp ugt i64 %add, %conv8, !dbg !22547
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !22548

if.then11:                                        ; preds = %if.else
  %14 = load i64, i64* %features.addr, align 8, !dbg !22549
  %and12 = and i64 %14, -34359672833, !dbg !22549
  store i64 %and12, i64* %features.addr, align 8, !dbg !22549
  br label %if.end, !dbg !22550

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then
  %15 = load i64, i64* %features.addr, align 8, !dbg !22551
  ret i64 %15, !dbg !22552
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8152_set_rx_mode(%struct.net_device* %netdev) #2 !dbg !22553 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %tp = alloca %struct.r8152*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !22554, metadata !DIExpression()), !dbg !22555
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !22556, metadata !DIExpression()), !dbg !22557
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !22558
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !22559
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !22559
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !22557
  %2 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !22560
  %call1 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %2) #13, !dbg !22562
  br i1 %call1, label %if.then, label %if.end, !dbg !22563

if.then:                                          ; preds = %entry
  %3 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22564
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %3, i32 0, i32 0, !dbg !22566
  call void @set_bit(i64 1, i64* %flags) #13, !dbg !22567
  %4 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22568
  %schedule = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 15, !dbg !22569
  %call2 = call zeroext i1 @schedule_delayed_work(%struct.delayed_work* %schedule, i64 0) #13, !dbg !22570
  br label %if.end, !dbg !22571

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !22572
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_set_mac_address(%struct.net_device* %netdev, i8* %p) #2 !dbg !22573 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %p.addr = alloca i8*, align 8
  %tp = alloca %struct.r8152*, align 8
  %addr = alloca %struct.sockaddr*, align 8
  %ret = alloca i32, align 4
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !22574, metadata !DIExpression()), !dbg !22575
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !22576, metadata !DIExpression()), !dbg !22577
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !22578, metadata !DIExpression()), !dbg !22579
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !22580
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !22581
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !22581
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !22579
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %addr, metadata !22582, metadata !DIExpression()), !dbg !22583
  %2 = load i8*, i8** %p.addr, align 8, !dbg !22584
  %3 = bitcast i8* %2 to %struct.sockaddr*, !dbg !22584
  store %struct.sockaddr* %3, %struct.sockaddr** %addr, align 8, !dbg !22583
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !22585, metadata !DIExpression()), !dbg !22586
  store i32 -99, i32* %ret, align 4, !dbg !22586
  %4 = load %struct.sockaddr*, %struct.sockaddr** %addr, align 8, !dbg !22587
  %sa_data = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i32 0, i32 1, !dbg !22589
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data, i64 0, i64 0, !dbg !22587
  %call1 = call zeroext i1 @is_valid_ether_addr(i8* %arraydecay) #13, !dbg !22590
  br i1 %call1, label %if.end, label %if.then, !dbg !22591

if.then:                                          ; preds = %entry
  br label %out1, !dbg !22592

if.end:                                           ; preds = %entry
  %5 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22593
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 3, !dbg !22594
  %6 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !22594
  %call2 = call i32 @usb_autopm_get_interface(%struct.usb_interface* %6) #13, !dbg !22595
  store i32 %call2, i32* %ret, align 4, !dbg !22596
  %7 = load i32, i32* %ret, align 4, !dbg !22597
  %cmp = icmp slt i32 %7, 0, !dbg !22599
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !22600

if.then3:                                         ; preds = %if.end
  br label %out1, !dbg !22601

if.end4:                                          ; preds = %if.end
  %8 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22602
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %8, i32 0, i32 18, !dbg !22603
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !22604
  %9 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !22605
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 74, !dbg !22606
  %10 = load i8*, i8** %dev_addr, align 8, !dbg !22606
  %11 = load %struct.sockaddr*, %struct.sockaddr** %addr, align 8, !dbg !22607
  %sa_data5 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %11, i32 0, i32 1, !dbg !22608
  %arraydecay6 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data5, i64 0, i64 0, !dbg !22609
  %12 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !22610
  %addr_len = getelementptr inbounds %struct.net_device, %struct.net_device* %12, i32 0, i32 55, !dbg !22611
  %13 = load i8, i8* %addr_len, align 1, !dbg !22611
  %conv = zext i8 %13 to i64, !dbg !22610
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 2 %arraydecay6, i64 %conv, i1 false), !dbg !22609
  %14 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22612
  call void @ocp_write_byte(%struct.r8152* %14, i16 zeroext 256, i16 zeroext -6116, i32 192) #13, !dbg !22613
  %15 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22614
  %16 = load %struct.sockaddr*, %struct.sockaddr** %addr, align 8, !dbg !22615
  %sa_data7 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %16, i32 0, i32 1, !dbg !22616
  %arraydecay8 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data7, i64 0, i64 0, !dbg !22615
  %call9 = call i32 @pla_ocp_write(%struct.r8152* %15, i16 zeroext -16384, i16 zeroext 63, i16 zeroext 8, i8* %arraydecay8) #13, !dbg !22617
  %17 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22618
  call void @ocp_write_byte(%struct.r8152* %17, i16 zeroext 256, i16 zeroext -6116, i32 0) #13, !dbg !22619
  %18 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22620
  %control10 = getelementptr inbounds %struct.r8152, %struct.r8152* %18, i32 0, i32 18, !dbg !22621
  call void @mutex_unlock(%struct.mutex* %control10) #13, !dbg !22622
  %19 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22623
  %intf11 = getelementptr inbounds %struct.r8152, %struct.r8152* %19, i32 0, i32 3, !dbg !22624
  %20 = load %struct.usb_interface*, %struct.usb_interface** %intf11, align 8, !dbg !22624
  call void @usb_autopm_put_interface(%struct.usb_interface* %20) #13, !dbg !22625
  br label %out1, !dbg !22625

out1:                                             ; preds = %if.end4, %if.then3, %if.then
  call void @llvm.dbg.label(metadata !22626), !dbg !22627
  %21 = load i32, i32* %ret, align 4, !dbg !22628
  ret i32 %21, !dbg !22629
}

; Function Attrs: noredzone
declare dso_local i32 @eth_validate_addr(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_ioctl(%struct.net_device* %netdev, %struct.ifreq* %rq, i32 %cmd) #2 !dbg !22630 {
entry:
  %retval = alloca i32, align 4
  %netdev.addr = alloca %struct.net_device*, align 8
  %rq.addr = alloca %struct.ifreq*, align 8
  %cmd.addr = alloca i32, align 4
  %tp = alloca %struct.r8152*, align 8
  %data = alloca %struct.mii_ioctl_data*, align 8
  %res = alloca i32, align 4
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !22631, metadata !DIExpression()), !dbg !22632
  store %struct.ifreq* %rq, %struct.ifreq** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %rq.addr, metadata !22633, metadata !DIExpression()), !dbg !22634
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !22635, metadata !DIExpression()), !dbg !22636
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !22637, metadata !DIExpression()), !dbg !22638
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !22639
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !22640
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !22640
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !22638
  call void @llvm.dbg.declare(metadata %struct.mii_ioctl_data** %data, metadata !22641, metadata !DIExpression()), !dbg !22642
  %2 = load %struct.ifreq*, %struct.ifreq** %rq.addr, align 8, !dbg !22643
  %call1 = call %struct.mii_ioctl_data* @if_mii(%struct.ifreq* %2) #13, !dbg !22644
  store %struct.mii_ioctl_data* %call1, %struct.mii_ioctl_data** %data, align 8, !dbg !22642
  call void @llvm.dbg.declare(metadata i32* %res, metadata !22645, metadata !DIExpression()), !dbg !22646
  %3 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22647
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %3, i32 0, i32 0, !dbg !22649
  %call2 = call zeroext i1 @test_bit(i64 0, i64* %flags) #13, !dbg !22650
  br i1 %call2, label %if.then, label %if.end, !dbg !22651

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !22652
  br label %return, !dbg !22652

if.end:                                           ; preds = %entry
  %4 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22653
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 3, !dbg !22654
  %5 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !22654
  %call3 = call i32 @usb_autopm_get_interface(%struct.usb_interface* %5) #13, !dbg !22655
  store i32 %call3, i32* %res, align 4, !dbg !22656
  %6 = load i32, i32* %res, align 4, !dbg !22657
  %cmp = icmp slt i32 %6, 0, !dbg !22659
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !22660

if.then4:                                         ; preds = %if.end
  br label %out, !dbg !22661

if.end5:                                          ; preds = %if.end
  %7 = load i32, i32* %cmd.addr, align 4, !dbg !22662
  switch i32 %7, label %sw.default [
    i32 35143, label %sw.bb
    i32 35144, label %sw.bb6
    i32 35145, label %sw.bb10
  ], !dbg !22663

sw.bb:                                            ; preds = %if.end5
  %8 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !22664
  %phy_id = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %8, i32 0, i32 0, !dbg !22666
  store i16 32, i16* %phy_id, align 2, !dbg !22667
  br label %sw.epilog, !dbg !22668

sw.bb6:                                           ; preds = %if.end5
  %9 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22669
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %9, i32 0, i32 18, !dbg !22670
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !22671
  %10 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22672
  %11 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !22673
  %reg_num = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %11, i32 0, i32 1, !dbg !22674
  %12 = load i16, i16* %reg_num, align 2, !dbg !22674
  %conv = zext i16 %12 to i32, !dbg !22673
  %call7 = call i32 @r8152_mdio_read(%struct.r8152* %10, i32 %conv) #13, !dbg !22675
  %conv8 = trunc i32 %call7 to i16, !dbg !22675
  %13 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !22676
  %val_out = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %13, i32 0, i32 3, !dbg !22677
  store i16 %conv8, i16* %val_out, align 2, !dbg !22678
  %14 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22679
  %control9 = getelementptr inbounds %struct.r8152, %struct.r8152* %14, i32 0, i32 18, !dbg !22680
  call void @mutex_unlock(%struct.mutex* %control9) #13, !dbg !22681
  br label %sw.epilog, !dbg !22682

sw.bb10:                                          ; preds = %if.end5
  %call11 = call zeroext i1 @capable(i32 12) #13, !dbg !22683
  br i1 %call11, label %if.end13, label %if.then12, !dbg !22685

if.then12:                                        ; preds = %sw.bb10
  store i32 -1, i32* %res, align 4, !dbg !22686
  br label %sw.epilog, !dbg !22688

if.end13:                                         ; preds = %sw.bb10
  %15 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22689
  %control14 = getelementptr inbounds %struct.r8152, %struct.r8152* %15, i32 0, i32 18, !dbg !22690
  call void @mutex_lock(%struct.mutex* %control14) #13, !dbg !22691
  %16 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22692
  %17 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !22693
  %reg_num15 = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %17, i32 0, i32 1, !dbg !22694
  %18 = load i16, i16* %reg_num15, align 2, !dbg !22694
  %conv16 = zext i16 %18 to i32, !dbg !22693
  %19 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !22695
  %val_in = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %19, i32 0, i32 2, !dbg !22696
  %20 = load i16, i16* %val_in, align 2, !dbg !22696
  %conv17 = zext i16 %20 to i32, !dbg !22695
  call void @r8152_mdio_write(%struct.r8152* %16, i32 %conv16, i32 %conv17) #13, !dbg !22697
  %21 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22698
  %control18 = getelementptr inbounds %struct.r8152, %struct.r8152* %21, i32 0, i32 18, !dbg !22699
  call void @mutex_unlock(%struct.mutex* %control18) #13, !dbg !22700
  br label %sw.epilog, !dbg !22701

sw.default:                                       ; preds = %if.end5
  store i32 -95, i32* %res, align 4, !dbg !22702
  br label %sw.epilog, !dbg !22703

sw.epilog:                                        ; preds = %sw.default, %if.end13, %if.then12, %sw.bb6, %sw.bb
  %22 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22704
  %intf19 = getelementptr inbounds %struct.r8152, %struct.r8152* %22, i32 0, i32 3, !dbg !22705
  %23 = load %struct.usb_interface*, %struct.usb_interface** %intf19, align 8, !dbg !22705
  call void @usb_autopm_put_interface(%struct.usb_interface* %23) #13, !dbg !22706
  br label %out, !dbg !22706

out:                                              ; preds = %sw.epilog, %if.then4
  call void @llvm.dbg.label(metadata !22707), !dbg !22708
  %24 = load i32, i32* %res, align 4, !dbg !22709
  store i32 %24, i32* %retval, align 4, !dbg !22710
  br label %return, !dbg !22710

return:                                           ; preds = %out, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !22711
  ret i32 %25, !dbg !22711
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_change_mtu(%struct.net_device* %dev, i32 %new_mtu) #2 !dbg !22712 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %new_mtu.addr = alloca i32, align 4
  %tp = alloca %struct.r8152*, align 8
  %ret = alloca i32, align 4
  %rms = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22713, metadata !DIExpression()), !dbg !22714
  store i32 %new_mtu, i32* %new_mtu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_mtu.addr, metadata !22715, metadata !DIExpression()), !dbg !22716
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !22717, metadata !DIExpression()), !dbg !22718
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22719
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !22720
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !22720
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !22718
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !22721, metadata !DIExpression()), !dbg !22722
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22723
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 39, !dbg !22724
  %3 = load i8, i8* %version, align 8, !dbg !22724
  %conv = zext i8 %3 to i32, !dbg !22723
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 7, label %sw.bb
  ], !dbg !22725

sw.bb:                                            ; preds = %entry, %entry, %entry
  %4 = load i32, i32* %new_mtu.addr, align 4, !dbg !22726
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22728
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 44, !dbg !22729
  store i32 %4, i32* %mtu, align 8, !dbg !22730
  store i32 0, i32* %retval, align 4, !dbg !22731
  br label %return, !dbg !22731

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !22732

sw.epilog:                                        ; preds = %sw.default
  %6 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22733
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 3, !dbg !22734
  %7 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !22734
  %call1 = call i32 @usb_autopm_get_interface(%struct.usb_interface* %7) #13, !dbg !22735
  store i32 %call1, i32* %ret, align 4, !dbg !22736
  %8 = load i32, i32* %ret, align 4, !dbg !22737
  %cmp = icmp slt i32 %8, 0, !dbg !22739
  br i1 %cmp, label %if.then, label %if.end, !dbg !22740

if.then:                                          ; preds = %sw.epilog
  %9 = load i32, i32* %ret, align 4, !dbg !22741
  store i32 %9, i32* %retval, align 4, !dbg !22742
  br label %return, !dbg !22742

if.end:                                           ; preds = %sw.epilog
  %10 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22743
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %10, i32 0, i32 18, !dbg !22744
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !22745
  %11 = load i32, i32* %new_mtu.addr, align 4, !dbg !22746
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22747
  %mtu3 = getelementptr inbounds %struct.net_device, %struct.net_device* %12, i32 0, i32 44, !dbg !22748
  store i32 %11, i32* %mtu3, align 8, !dbg !22749
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22750
  %call4 = call zeroext i1 @netif_running(%struct.net_device* %13) #13, !dbg !22752
  br i1 %call4, label %if.then5, label %if.end10, !dbg !22753

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %rms, metadata !22754, metadata !DIExpression()), !dbg !22756
  %14 = load i32, i32* %new_mtu.addr, align 4, !dbg !22757
  %add = add i32 %14, 18, !dbg !22758
  %add6 = add i32 %add, 4, !dbg !22759
  store i32 %add6, i32* %rms, align 4, !dbg !22756
  %15 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22760
  %16 = load i32, i32* %rms, align 4, !dbg !22761
  call void @ocp_write_word(%struct.r8152* %15, i16 zeroext 256, i16 zeroext -16362, i32 %16) #13, !dbg !22762
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22763
  %call7 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %17) #13, !dbg !22765
  br i1 %call7, label %if.then8, label %if.end9, !dbg !22766

if.then8:                                         ; preds = %if.then5
  %18 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22767
  call void @r8153_set_rx_early_size(%struct.r8152* %18) #13, !dbg !22768
  br label %if.end9, !dbg !22768

if.end9:                                          ; preds = %if.then8, %if.then5
  br label %if.end10, !dbg !22769

if.end10:                                         ; preds = %if.end9, %if.end
  %19 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22770
  %control11 = getelementptr inbounds %struct.r8152, %struct.r8152* %19, i32 0, i32 18, !dbg !22771
  call void @mutex_unlock(%struct.mutex* %control11) #13, !dbg !22772
  %20 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22773
  %intf12 = getelementptr inbounds %struct.r8152, %struct.r8152* %20, i32 0, i32 3, !dbg !22774
  %21 = load %struct.usb_interface*, %struct.usb_interface** %intf12, align 8, !dbg !22774
  call void @usb_autopm_put_interface(%struct.usb_interface* %21) #13, !dbg !22775
  %22 = load i32, i32* %ret, align 4, !dbg !22776
  store i32 %22, i32* %retval, align 4, !dbg !22777
  br label %return, !dbg !22777

return:                                           ; preds = %if.end10, %if.then, %sw.bb
  %23 = load i32, i32* %retval, align 4, !dbg !22778
  ret i32 %23, !dbg !22778
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8152_tx_timeout(%struct.net_device* %netdev, i32 %txqueue) #2 !dbg !22779 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %txqueue.addr = alloca i32, align 4
  %tp = alloca %struct.r8152*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !22780, metadata !DIExpression()), !dbg !22781
  store i32 %txqueue, i32* %txqueue.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %txqueue.addr, metadata !22782, metadata !DIExpression()), !dbg !22783
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !22784, metadata !DIExpression()), !dbg !22785
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !22786
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !22787
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !22787
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !22785
  br label %do.body, !dbg !22788

do.body:                                          ; preds = %entry
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22789
  %msg_enable = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 28, !dbg !22789
  %3 = load i32, i32* %msg_enable, align 8, !dbg !22789
  %and = and i32 %3, 128, !dbg !22789
  %tobool = icmp ne i32 %and, 0, !dbg !22789
  br i1 %tobool, label %if.then, label %if.end, !dbg !22792

if.then:                                          ; preds = %do.body
  %4 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !22789
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.67, i64 0, i64 0)) #14, !dbg !22789
  br label %if.end, !dbg !22789

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !22792

do.end:                                           ; preds = %if.end
  %5 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22793
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 3, !dbg !22794
  %6 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !22794
  call void @usb_queue_reset_device(%struct.usb_interface* %6) #13, !dbg !22795
  ret void, !dbg !22796
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_set_features(%struct.net_device* %dev, i64 %features) #2 !dbg !22797 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %features.addr = alloca i64, align 8
  %changed = alloca i64, align 8
  %tp = alloca %struct.r8152*, align 8
  %ret = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22798, metadata !DIExpression()), !dbg !22799
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !22800, metadata !DIExpression()), !dbg !22801
  call void @llvm.dbg.declare(metadata i64* %changed, metadata !22802, metadata !DIExpression()), !dbg !22803
  %0 = load i64, i64* %features.addr, align 8, !dbg !22804
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22805
  %features1 = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 15, !dbg !22806
  %2 = load i64, i64* %features1, align 8, !dbg !22806
  %xor = xor i64 %0, %2, !dbg !22807
  store i64 %xor, i64* %changed, align 8, !dbg !22803
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !22808, metadata !DIExpression()), !dbg !22809
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22810
  %call = call i8* @netdev_priv(%struct.net_device* %3) #13, !dbg !22811
  %4 = bitcast i8* %call to %struct.r8152*, !dbg !22811
  store %struct.r8152* %4, %struct.r8152** %tp, align 8, !dbg !22809
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !22812, metadata !DIExpression()), !dbg !22813
  %5 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22814
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 3, !dbg !22815
  %6 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !22815
  %call2 = call i32 @usb_autopm_get_interface(%struct.usb_interface* %6) #13, !dbg !22816
  store i32 %call2, i32* %ret, align 4, !dbg !22817
  %7 = load i32, i32* %ret, align 4, !dbg !22818
  %cmp = icmp slt i32 %7, 0, !dbg !22820
  br i1 %cmp, label %if.then, label %if.end, !dbg !22821

if.then:                                          ; preds = %entry
  br label %out, !dbg !22822

if.end:                                           ; preds = %entry
  %8 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22823
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %8, i32 0, i32 18, !dbg !22824
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !22825
  %9 = load i64, i64* %changed, align 8, !dbg !22826
  %and = and i64 %9, 256, !dbg !22828
  %tobool = icmp ne i64 %and, 0, !dbg !22828
  br i1 %tobool, label %if.then3, label %if.end8, !dbg !22829

if.then3:                                         ; preds = %if.end
  %10 = load i64, i64* %features.addr, align 8, !dbg !22830
  %and4 = and i64 %10, 256, !dbg !22833
  %tobool5 = icmp ne i64 %and4, 0, !dbg !22833
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !22834

if.then6:                                         ; preds = %if.then3
  %11 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22835
  call void @rtl_rx_vlan_en(%struct.r8152* %11, i1 zeroext true) #13, !dbg !22836
  br label %if.end7, !dbg !22836

if.else:                                          ; preds = %if.then3
  %12 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22837
  call void @rtl_rx_vlan_en(%struct.r8152* %12, i1 zeroext false) #13, !dbg !22838
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then6
  br label %if.end8, !dbg !22839

if.end8:                                          ; preds = %if.end7, %if.end
  %13 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22840
  %control9 = getelementptr inbounds %struct.r8152, %struct.r8152* %13, i32 0, i32 18, !dbg !22841
  call void @mutex_unlock(%struct.mutex* %control9) #13, !dbg !22842
  %14 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !22843
  %intf10 = getelementptr inbounds %struct.r8152, %struct.r8152* %14, i32 0, i32 3, !dbg !22844
  %15 = load %struct.usb_interface*, %struct.usb_interface** %intf10, align 8, !dbg !22844
  call void @usb_autopm_put_interface(%struct.usb_interface* %15) #13, !dbg !22845
  br label %out, !dbg !22845

out:                                              ; preds = %if.end8, %if.then
  call void @llvm.dbg.label(metadata !22846), !dbg !22847
  %16 = load i32, i32* %ret, align 4, !dbg !22848
  ret i32 %16, !dbg !22849
}

; Function Attrs: noredzone
declare dso_local i32 @work_busy(%struct.work_struct*) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alloc_all_mem(%struct.r8152* %tp) #2 !dbg !22850 {
entry:
  %s.addr.i.i221 = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i221, metadata !11594, metadata !DIExpression()), !dbg !22851
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !11606, metadata !DIExpression()), !dbg !22854
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !11608, metadata !DIExpression()), !dbg !22855
  %ret.i.i222 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i222, metadata !11610, metadata !DIExpression()), !dbg !22856
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !11612, metadata !DIExpression()), !dbg !22857
  %retval.i.i223 = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !11618, metadata !DIExpression()), !dbg !22859
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !11624, metadata !DIExpression()), !dbg !22861
  %flags.addr.i.i.i224 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i224, metadata !11633, metadata !DIExpression()), !dbg !22864
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !11635, metadata !DIExpression()), !dbg !22865
  %size.addr.i.i225 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i225, metadata !11637, metadata !DIExpression()), !dbg !22866
  %flags.addr.i.i226 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i226, metadata !11639, metadata !DIExpression()), !dbg !22867
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !11641, metadata !DIExpression()), !dbg !22868
  %retval.i227 = alloca i8*, align 8
  %size.addr.i228 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i228, metadata !11643, metadata !DIExpression()), !dbg !22869
  %flags.addr.i229 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i229, metadata !11645, metadata !DIExpression()), !dbg !22870
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !11647, metadata !DIExpression()), !dbg !22871
  %size.addr.i13.i80 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i13.i80, metadata !22872, metadata !DIExpression()), !dbg !22876
  %flags.addr.i14.i81 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i14.i81, metadata !22885, metadata !DIExpression()), !dbg !22886
  %node.addr.i15.i82 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i15.i82, metadata !22887, metadata !DIExpression()), !dbg !22888
  %s.addr.i.i.i83 = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i.i83, metadata !22889, metadata !DIExpression()), !dbg !22893
  %flags.addr.i.i.i84 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i84, metadata !22901, metadata !DIExpression()), !dbg !22902
  %node.addr.i.i.i85 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i.i.i85, metadata !22903, metadata !DIExpression()), !dbg !22904
  %s.addr.i.i86 = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i86, metadata !22905, metadata !DIExpression()), !dbg !22906
  %gfpflags.addr.i.i87 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %gfpflags.addr.i.i87, metadata !22907, metadata !DIExpression()), !dbg !22908
  %node.addr.i.i88 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i.i88, metadata !22909, metadata !DIExpression()), !dbg !22910
  %size.addr.i12.i89 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i12.i89, metadata !22911, metadata !DIExpression()), !dbg !22912
  %ret.i.i90 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i90, metadata !22913, metadata !DIExpression()), !dbg !22914
  %retval.i8.i91 = alloca i32, align 4
  %flags.addr.i.i92 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i92, metadata !11612, metadata !DIExpression()), !dbg !22915
  %retval.i.i93 = alloca i32, align 4
  %size.addr.i.i94 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i94, metadata !11618, metadata !DIExpression()), !dbg !22917
  %retval.i95 = alloca i8*, align 8
  %size.addr.i96 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i96, metadata !22919, metadata !DIExpression()), !dbg !22920
  %flags.addr.i97 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i97, metadata !22921, metadata !DIExpression()), !dbg !22922
  %node.addr.i98 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i98, metadata !22923, metadata !DIExpression()), !dbg !22924
  %i.i99 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i99, metadata !22925, metadata !DIExpression()), !dbg !22926
  %size.addr.i13.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i13.i, metadata !22872, metadata !DIExpression()), !dbg !22927
  %flags.addr.i14.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i14.i, metadata !22885, metadata !DIExpression()), !dbg !22930
  %node.addr.i15.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i15.i, metadata !22887, metadata !DIExpression()), !dbg !22931
  %s.addr.i.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i.i, metadata !22889, metadata !DIExpression()), !dbg !22932
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !22901, metadata !DIExpression()), !dbg !22935
  %node.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i.i.i, metadata !22903, metadata !DIExpression()), !dbg !22936
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !22905, metadata !DIExpression()), !dbg !22937
  %gfpflags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %gfpflags.addr.i.i, metadata !22907, metadata !DIExpression()), !dbg !22938
  %node.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i.i, metadata !22909, metadata !DIExpression()), !dbg !22939
  %size.addr.i12.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i12.i, metadata !22911, metadata !DIExpression()), !dbg !22940
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !22913, metadata !DIExpression()), !dbg !22941
  %retval.i8.i = alloca i32, align 4
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !11612, metadata !DIExpression()), !dbg !22942
  %retval.i.i = alloca i32, align 4
  %size.addr.i.i77 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i77, metadata !11618, metadata !DIExpression()), !dbg !22944
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !22919, metadata !DIExpression()), !dbg !22946
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !22921, metadata !DIExpression()), !dbg !22947
  %node.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i, metadata !22923, metadata !DIExpression()), !dbg !22948
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !22925, metadata !DIExpression()), !dbg !22949
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !22950, metadata !DIExpression()), !dbg !22954
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !22958, metadata !DIExpression()), !dbg !22959
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !12365, metadata !DIExpression()), !dbg !22960
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12375, metadata !DIExpression()), !dbg !22962
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !22963, metadata !DIExpression()), !dbg !22964
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !22965, metadata !DIExpression()), !dbg !22966
  %lock.addr.i75 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i75, metadata !15437, metadata !DIExpression()), !dbg !22967
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !15437, metadata !DIExpression()), !dbg !22970
  %retval = alloca i32, align 4
  %tp.addr = alloca %struct.r8152*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %intf = alloca %struct.usb_interface*, align 8
  %alt = alloca %struct.usb_host_interface*, align 8
  %ep_intr = alloca %struct.usb_host_endpoint*, align 8
  %node = alloca i32, align 4
  %i = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  %.compoundliteral10 = alloca %struct.spinlock, align 1
  %urb = alloca %struct.urb*, align 8
  %buf = alloca i8*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !22973, metadata !DIExpression()), !dbg !22974
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !22975, metadata !DIExpression()), !dbg !22976
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !22977
  %netdev1 = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 4, !dbg !22978
  %1 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !22978
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !22976
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf, metadata !22979, metadata !DIExpression()), !dbg !22980
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !22981
  %intf2 = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 3, !dbg !22982
  %3 = load %struct.usb_interface*, %struct.usb_interface** %intf2, align 8, !dbg !22982
  store %struct.usb_interface* %3, %struct.usb_interface** %intf, align 8, !dbg !22980
  call void @llvm.dbg.declare(metadata %struct.usb_host_interface** %alt, metadata !22983, metadata !DIExpression()), !dbg !22984
  %4 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !22985
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %4, i32 0, i32 1, !dbg !22986
  %5 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !dbg !22986
  store %struct.usb_host_interface* %5, %struct.usb_host_interface** %alt, align 8, !dbg !22984
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep_intr, metadata !22987, metadata !DIExpression()), !dbg !22988
  %6 = load %struct.usb_host_interface*, %struct.usb_host_interface** %alt, align 8, !dbg !22989
  %endpoint = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %6, i32 0, i32 3, !dbg !22990
  %7 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %endpoint, align 8, !dbg !22990
  %add.ptr = getelementptr %struct.usb_host_endpoint, %struct.usb_host_endpoint* %7, i64 2, !dbg !22991
  store %struct.usb_host_endpoint* %add.ptr, %struct.usb_host_endpoint** %ep_intr, align 8, !dbg !22988
  call void @llvm.dbg.declare(metadata i32* %node, metadata !22992, metadata !DIExpression()), !dbg !22993
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22994, metadata !DIExpression()), !dbg !22995
  %8 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !22996
  %dev = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 106, !dbg !22997
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !22998
  %9 = load %struct.device*, %struct.device** %parent, align 8, !dbg !22998
  %tobool = icmp ne %struct.device* %9, null, !dbg !22996
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !22996

cond.true:                                        ; preds = %entry
  %10 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !22999
  %dev3 = getelementptr inbounds %struct.net_device, %struct.net_device* %10, i32 0, i32 106, !dbg !23000
  %parent4 = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 1, !dbg !23001
  %11 = load %struct.device*, %struct.device** %parent4, align 8, !dbg !23001
  %call = call i32 @dev_to_node(%struct.device* %11) #13, !dbg !23002
  br label %cond.end, !dbg !22996

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !22996

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ -1, %cond.false ], !dbg !22996
  store i32 %cond, i32* %node, align 4, !dbg !23003
  br label %do.body, !dbg !23004

do.body:                                          ; preds = %cond.end
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23005
  %rx_lock = getelementptr inbounds %struct.r8152, %struct.r8152* %12, i32 0, i32 13, !dbg !23005
  store %struct.spinlock* %rx_lock, %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !23006
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !23007
  %rlock.i = bitcast %union.anon.1* %14 to %struct.raw_spinlock*, !dbg !23007
  %15 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23005
  %rx_lock6 = getelementptr inbounds %struct.r8152, %struct.r8152* %15, i32 0, i32 13, !dbg !23005
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !23005
  %rlock = bitcast %union.anon.1* %16 to %struct.raw_spinlock*, !dbg !23005
  %17 = bitcast %struct.spinlock* %rx_lock6 to i8*, !dbg !23005
  %18 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !23005
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 1 %18, i64 0, i1 false), !dbg !23005
  br label %do.end, !dbg !23005

do.end:                                           ; preds = %do.body
  br label %do.body7, !dbg !23008

do.body7:                                         ; preds = %do.end
  %19 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23009
  %tx_lock = getelementptr inbounds %struct.r8152, %struct.r8152* %19, i32 0, i32 14, !dbg !23009
  store %struct.spinlock* %tx_lock, %struct.spinlock** %lock.addr.i75, align 8
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i75, align 8, !dbg !23010
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !23011
  %rlock.i76 = bitcast %union.anon.1* %21 to %struct.raw_spinlock*, !dbg !23011
  %22 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23009
  %tx_lock9 = getelementptr inbounds %struct.r8152, %struct.r8152* %22, i32 0, i32 14, !dbg !23009
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral10, i32 0, i32 0, !dbg !23009
  %rlock11 = bitcast %union.anon.1* %23 to %struct.raw_spinlock*, !dbg !23009
  %24 = bitcast %struct.spinlock* %tx_lock9 to i8*, !dbg !23009
  %25 = bitcast %struct.spinlock* %.compoundliteral10 to i8*, !dbg !23009
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 1 %25, i64 0, i1 false), !dbg !23009
  br label %do.end12, !dbg !23009

do.end12:                                         ; preds = %do.body7
  %26 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23012
  %rx_info = getelementptr inbounds %struct.r8152, %struct.r8152* %26, i32 0, i32 7, !dbg !23013
  call void @INIT_LIST_HEAD(%struct.list_head* %rx_info) #13, !dbg !23014
  %27 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23015
  %tx_free = getelementptr inbounds %struct.r8152, %struct.r8152* %27, i32 0, i32 10, !dbg !23016
  call void @INIT_LIST_HEAD(%struct.list_head* %tx_free) #13, !dbg !23017
  %28 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23018
  %rx_done = getelementptr inbounds %struct.r8152, %struct.r8152* %28, i32 0, i32 9, !dbg !23019
  call void @INIT_LIST_HEAD(%struct.list_head* %rx_done) #13, !dbg !23020
  %29 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23021
  %tx_queue = getelementptr inbounds %struct.r8152, %struct.r8152* %29, i32 0, i32 11, !dbg !23022
  call void @skb_queue_head_init(%struct.sk_buff_head* %tx_queue) #13, !dbg !23023
  %30 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23024
  %rx_queue = getelementptr inbounds %struct.r8152, %struct.r8152* %30, i32 0, i32 12, !dbg !23025
  call void @skb_queue_head_init(%struct.sk_buff_head* %rx_queue) #13, !dbg !23026
  %31 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23027
  %rx_count = getelementptr inbounds %struct.r8152, %struct.r8152* %31, i32 0, i32 24, !dbg !23028
  store %struct.atomic_t* %rx_count, %struct.atomic_t** %v.addr.i, align 8
  store i32 0, i32* %i.addr.i, align 4
  %32 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !23029
  %33 = bitcast %struct.atomic_t* %32 to i8*, !dbg !23029
  store i8* %33, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %34 = load i8*, i8** %v.addr.i.i, align 8, !dbg !23030
  %35 = load i64, i64* %size.addr.i.i, align 8, !dbg !23031
  %conv.i.i = trunc i64 %35 to i32, !dbg !23031
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %34, i32 %conv.i.i) #16, !dbg !23032
  %36 = load i8*, i8** %v.addr.i.i, align 8, !dbg !23033
  %37 = load i64, i64* %size.addr.i.i, align 8, !dbg !23033
  call void @kcsan_check_access(i8* %36, i64 %37, i32 5) #16, !dbg !23033
  %38 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !23034
  %39 = load i32, i32* %i.addr.i, align 4, !dbg !23035
  store %struct.atomic_t* %38, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %39, i32* %i.addr.i.i, align 4
  %40 = load i32, i32* %i.addr.i.i, align 4, !dbg !23036
  %41 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !23036
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %41, i32 0, i32 0, !dbg !23036
  store volatile i32 %40, i32* %counter.i.i, align 4, !dbg !23036
  store i32 0, i32* %i, align 4, !dbg !23038
  br label %for.cond, !dbg !23040

for.cond:                                         ; preds = %for.inc, %do.end12
  %42 = load i32, i32* %i, align 4, !dbg !23041
  %cmp = icmp slt i32 %42, 10, !dbg !23043
  br i1 %cmp, label %for.body, label %for.end, !dbg !23044

for.body:                                         ; preds = %for.cond
  %43 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23045
  %call13 = call %struct.rx_agg* @alloc_rx_agg(%struct.r8152* %43, i32 3264) #13, !dbg !23048
  %tobool14 = icmp ne %struct.rx_agg* %call13, null, !dbg !23048
  br i1 %tobool14, label %if.end, label %if.then, !dbg !23049

if.then:                                          ; preds = %for.body
  br label %err1, !dbg !23050

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !23051

for.inc:                                          ; preds = %if.end
  %44 = load i32, i32* %i, align 4, !dbg !23052
  %inc = add i32 %44, 1, !dbg !23052
  store i32 %inc, i32* %i, align 4, !dbg !23052
  br label %for.cond, !dbg !23053, !llvm.loop !23054

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !23056
  br label %for.cond15, !dbg !23057

for.cond15:                                       ; preds = %for.inc55, %for.end
  %45 = load i32, i32* %i, align 4, !dbg !23058
  %cmp16 = icmp slt i32 %45, 4, !dbg !23059
  br i1 %cmp16, label %for.body17, label %for.end57, !dbg !23060

for.body17:                                       ; preds = %for.cond15
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !23061, metadata !DIExpression()), !dbg !23062
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !23063, metadata !DIExpression()), !dbg !23064
  %46 = load i32, i32* @agg_buf_sz, align 4, !dbg !23065
  %conv = zext i32 %46 to i64, !dbg !23065
  %47 = load i32, i32* %node, align 4, !dbg !23066
  store i64 %conv, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  store i32 %47, i32* %node.addr.i, align 4
  %48 = load i64, i64* %size.addr.i, align 8, !dbg !23067
  %49 = call i1 @llvm.is.constant.i64(i64 %48) #11, !dbg !23068
  br i1 %49, label %land.lhs.true.i, label %if.end6.i, !dbg !23069

land.lhs.true.i:                                  ; preds = %for.body17
  %50 = load i64, i64* %size.addr.i, align 8, !dbg !23070
  %cmp.i = icmp ule i64 %50, 8192, !dbg !23071
  br i1 %cmp.i, label %if.then.i, label %if.end6.i, !dbg !23072

if.then.i:                                        ; preds = %land.lhs.true.i
  %51 = load i64, i64* %size.addr.i, align 8, !dbg !23073
  store i64 %51, i64* %size.addr.i.i77, align 8
  %52 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23074
  %tobool.i.i = icmp ne i64 %52, 0, !dbg !23074
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !23075

if.then.i.i:                                      ; preds = %if.then.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !23076
  br label %kmalloc_index.exit.i, !dbg !23076

if.end.i.i:                                       ; preds = %if.then.i
  %53 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23077
  %cmp.i.i = icmp ule i64 %53, 8, !dbg !23078
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !23079

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !23080
  br label %kmalloc_index.exit.i, !dbg !23080

if.end2.i.i:                                      ; preds = %if.end.i.i
  %54 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23081
  %cmp3.i.i = icmp ugt i64 %54, 64, !dbg !23082
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !23083

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %55 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23084
  %cmp4.i.i = icmp ule i64 %55, 96, !dbg !23085
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !23086

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !23087
  br label %kmalloc_index.exit.i, !dbg !23087

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %56 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23088
  %cmp7.i.i = icmp ugt i64 %56, 128, !dbg !23089
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !23090

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %57 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23091
  %cmp9.i.i = icmp ule i64 %57, 192, !dbg !23092
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !23093

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !23094
  br label %kmalloc_index.exit.i, !dbg !23094

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %58 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23095
  %cmp12.i.i = icmp ule i64 %58, 8, !dbg !23096
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !23097

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !23098
  br label %kmalloc_index.exit.i, !dbg !23098

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %59 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23099
  %cmp15.i.i = icmp ule i64 %59, 16, !dbg !23100
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !23101

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !23102
  br label %kmalloc_index.exit.i, !dbg !23102

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %60 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23103
  %cmp18.i.i = icmp ule i64 %60, 32, !dbg !23104
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !23105

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !23106
  br label %kmalloc_index.exit.i, !dbg !23106

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %61 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23107
  %cmp21.i.i = icmp ule i64 %61, 64, !dbg !23108
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !23109

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !23110
  br label %kmalloc_index.exit.i, !dbg !23110

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %62 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23111
  %cmp24.i.i = icmp ule i64 %62, 128, !dbg !23112
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !23113

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !23114
  br label %kmalloc_index.exit.i, !dbg !23114

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %63 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23115
  %cmp27.i.i = icmp ule i64 %63, 256, !dbg !23116
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !23117

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !23118
  br label %kmalloc_index.exit.i, !dbg !23118

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %64 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23119
  %cmp30.i.i = icmp ule i64 %64, 512, !dbg !23120
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !23121

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !23122
  br label %kmalloc_index.exit.i, !dbg !23122

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %65 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23123
  %cmp33.i.i = icmp ule i64 %65, 1024, !dbg !23124
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !23125

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !23126
  br label %kmalloc_index.exit.i, !dbg !23126

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %66 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23127
  %cmp36.i.i = icmp ule i64 %66, 2048, !dbg !23128
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !23129

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !23130
  br label %kmalloc_index.exit.i, !dbg !23130

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %67 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23131
  %cmp39.i.i = icmp ule i64 %67, 4096, !dbg !23132
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !23133

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !23134
  br label %kmalloc_index.exit.i, !dbg !23134

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %68 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23135
  %cmp42.i.i = icmp ule i64 %68, 8192, !dbg !23136
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !23137

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !23138
  br label %kmalloc_index.exit.i, !dbg !23138

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %69 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23139
  %cmp45.i.i = icmp ule i64 %69, 16384, !dbg !23140
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !23141

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !23142
  br label %kmalloc_index.exit.i, !dbg !23142

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %70 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23143
  %cmp48.i.i = icmp ule i64 %70, 32768, !dbg !23144
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !23145

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !23146
  br label %kmalloc_index.exit.i, !dbg !23146

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %71 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23147
  %cmp51.i.i = icmp ule i64 %71, 65536, !dbg !23148
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !23149

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !23150
  br label %kmalloc_index.exit.i, !dbg !23150

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %72 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23151
  %cmp54.i.i = icmp ule i64 %72, 131072, !dbg !23152
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !23153

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !23154
  br label %kmalloc_index.exit.i, !dbg !23154

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %73 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23155
  %cmp57.i.i = icmp ule i64 %73, 262144, !dbg !23156
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !23157

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !23158
  br label %kmalloc_index.exit.i, !dbg !23158

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %74 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23159
  %cmp60.i.i = icmp ule i64 %74, 524288, !dbg !23160
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !23161

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !23162
  br label %kmalloc_index.exit.i, !dbg !23162

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %75 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23163
  %cmp63.i.i = icmp ule i64 %75, 1048576, !dbg !23164
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !23165

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !23166
  br label %kmalloc_index.exit.i, !dbg !23166

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %76 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23167
  %cmp66.i.i = icmp ule i64 %76, 2097152, !dbg !23168
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !23169

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !23170
  br label %kmalloc_index.exit.i, !dbg !23170

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %77 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23171
  %cmp69.i.i = icmp ule i64 %77, 4194304, !dbg !23172
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !23173

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !23174
  br label %kmalloc_index.exit.i, !dbg !23174

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %78 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23175
  %cmp72.i.i = icmp ule i64 %78, 8388608, !dbg !23176
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !23177

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !23178
  br label %kmalloc_index.exit.i, !dbg !23178

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %79 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23179
  %cmp75.i.i = icmp ule i64 %79, 16777216, !dbg !23180
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !23181

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !23182
  br label %kmalloc_index.exit.i, !dbg !23182

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %80 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23183
  %cmp78.i.i = icmp ule i64 %80, 33554432, !dbg !23184
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !23185

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !23186
  br label %kmalloc_index.exit.i, !dbg !23186

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %81 = load i64, i64* %size.addr.i.i77, align 8, !dbg !23187
  %cmp81.i.i = icmp ule i64 %81, 67108864, !dbg !23188
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !23189

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !23190
  br label %kmalloc_index.exit.i, !dbg !23190

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #11, !dbg !23191, !srcloc !11831
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 93) #11, !dbg !23192, !srcloc !11835
  unreachable, !dbg !23193

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %82 = load i32, i32* %retval.i.i, align 4, !dbg !23194
  store i32 %82, i32* %i.i, align 4, !dbg !22949
  %83 = load i32, i32* %i.i, align 4, !dbg !23195
  %tobool.i = icmp ne i32 %83, 0, !dbg !23195
  br i1 %tobool.i, label %if.end.i, label %if.then1.i, !dbg !23197

if.then1.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !23198
  br label %kmalloc_node.exit, !dbg !23198

if.end.i:                                         ; preds = %kmalloc_index.exit.i
  %84 = load i32, i32* %flags.addr.i, align 4, !dbg !23199
  store i32 %84, i32* %flags.addr.i.i, align 4
  %85 = load i32, i32* %flags.addr.i.i, align 4, !dbg !23200
  %and.i.i = and i32 %85, 17, !dbg !23200
  %cmp.i9.i = icmp eq i32 %and.i.i, 0, !dbg !23200
  %lnot.i.i = xor i1 %cmp.i9.i, true, !dbg !23200
  %lnot.ext.i.i = zext i1 %cmp.i9.i to i32, !dbg !23200
  %conv.i.i78 = sext i32 %lnot.ext.i.i to i64, !dbg !23200
  br i1 %cmp.i9.i, label %if.then.i10.i, label %if.end.i11.i, !dbg !23201

if.then.i10.i:                                    ; preds = %if.end.i
  store i32 0, i32* %retval.i8.i, align 4, !dbg !23202
  br label %kmalloc_type.exit.i, !dbg !23202

if.end.i11.i:                                     ; preds = %if.end.i
  %86 = load i32, i32* %flags.addr.i.i, align 4, !dbg !23203
  %and2.i.i = and i32 %86, 1, !dbg !23204
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !23203
  %87 = zext i1 %tobool3.i.i to i64, !dbg !23203
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !23203
  store i32 %cond.i.i, i32* %retval.i8.i, align 4, !dbg !23205
  br label %kmalloc_type.exit.i, !dbg !23205

kmalloc_type.exit.i:                              ; preds = %if.end.i11.i, %if.then.i10.i
  %88 = load i32, i32* %retval.i8.i, align 4, !dbg !23206
  %idxprom.i = zext i32 %88 to i64, !dbg !23207
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !23207
  %89 = load i32, i32* %i.i, align 4, !dbg !23208
  %idxprom3.i = zext i32 %89 to i64, !dbg !23207
  %arrayidx4.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom3.i, !dbg !23207
  %90 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx4.i, align 8, !dbg !23207
  %91 = load i32, i32* %flags.addr.i, align 4, !dbg !23209
  %92 = load i32, i32* %node.addr.i, align 4, !dbg !23210
  %93 = load i64, i64* %size.addr.i, align 8, !dbg !23211
  store %struct.kmem_cache* %90, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %91, i32* %gfpflags.addr.i.i, align 4
  store i32 %92, i32* %node.addr.i.i, align 4
  store i64 %93, i64* %size.addr.i12.i, align 8
  %94 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !23212
  %95 = load i32, i32* %gfpflags.addr.i.i, align 4, !dbg !23213
  %96 = load i32, i32* %node.addr.i.i, align 4, !dbg !23214
  store %struct.kmem_cache* %94, %struct.kmem_cache** %s.addr.i.i.i, align 8
  store i32 %95, i32* %flags.addr.i.i.i, align 4
  store i32 %96, i32* %node.addr.i.i.i, align 4
  %97 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i.i, align 8, !dbg !23215
  %98 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !23216
  %call.i.i.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %97, i32 %98) #16, !dbg !23217
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !23217
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 7, !dbg !23217
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !23217
  call void @llvm.assume(i1 %maskcond.i.i.i) #11, !dbg !23217
  store i8* %call.i.i.i, i8** %ret.i.i, align 8, !dbg !22941
  %99 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !23218
  %100 = load i8*, i8** %ret.i.i, align 8, !dbg !23219
  %101 = load i64, i64* %size.addr.i12.i, align 8, !dbg !23220
  %102 = load i32, i32* %gfpflags.addr.i.i, align 4, !dbg !23221
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %99, i8* %100, i64 %101, i32 %102) #16, !dbg !23222
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !23223
  %103 = load i8*, i8** %ret.i.i, align 8, !dbg !23224
  store i8* %103, i8** %retval.i, align 8, !dbg !23225
  br label %kmalloc_node.exit, !dbg !23225

if.end6.i:                                        ; preds = %land.lhs.true.i, %for.body17
  %104 = load i64, i64* %size.addr.i, align 8, !dbg !23226
  %105 = load i32, i32* %flags.addr.i, align 4, !dbg !23227
  %106 = load i32, i32* %node.addr.i, align 4, !dbg !23228
  store i64 %104, i64* %size.addr.i13.i, align 8
  store i32 %105, i32* %flags.addr.i14.i, align 4
  store i32 %106, i32* %node.addr.i15.i, align 4
  %107 = load i64, i64* %size.addr.i13.i, align 8, !dbg !23229
  %108 = load i32, i32* %flags.addr.i14.i, align 4, !dbg !23230
  %call.i.i79 = call noalias i8* @__kmalloc(i64 %107, i32 %108) #16, !dbg !23231
  %ptrint.i.i = ptrtoint i8* %call.i.i79 to i64, !dbg !23231
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !23231
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !23231
  call void @llvm.assume(i1 %maskcond.i.i) #11, !dbg !23231
  store i8* %call.i.i79, i8** %retval.i, align 8, !dbg !23232
  br label %kmalloc_node.exit, !dbg !23232

kmalloc_node.exit:                                ; preds = %if.then1.i, %kmalloc_type.exit.i, %if.end6.i
  %109 = load i8*, i8** %retval.i, align 8, !dbg !23233
  store i8* %109, i8** %buf, align 8, !dbg !23234
  %110 = load i8*, i8** %buf, align 8, !dbg !23235
  %tobool19 = icmp ne i8* %110, null, !dbg !23235
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !23237

if.then20:                                        ; preds = %kmalloc_node.exit
  br label %err1, !dbg !23238

if.end21:                                         ; preds = %kmalloc_node.exit
  %111 = load i8*, i8** %buf, align 8, !dbg !23239
  %112 = load i8*, i8** %buf, align 8, !dbg !23240
  %call22 = call i8* @tx_agg_align(i8* %112) #13, !dbg !23241
  %cmp23 = icmp ne i8* %111, %call22, !dbg !23242
  br i1 %cmp23, label %if.then25, label %if.end31, !dbg !23243

if.then25:                                        ; preds = %if.end21
  %113 = load i8*, i8** %buf, align 8, !dbg !23244
  call void @kfree(i8* %113) #13, !dbg !23245
  %114 = load i32, i32* @agg_buf_sz, align 4, !dbg !23246
  %add = add i32 %114, 4, !dbg !23247
  %conv26 = zext i32 %add to i64, !dbg !23246
  %115 = load i32, i32* %node, align 4, !dbg !23248
  store i64 %conv26, i64* %size.addr.i96, align 8
  store i32 3264, i32* %flags.addr.i97, align 4
  store i32 %115, i32* %node.addr.i98, align 4
  %116 = load i64, i64* %size.addr.i96, align 8, !dbg !23249
  %117 = call i1 @llvm.is.constant.i64(i64 %116) #11, !dbg !23250
  br i1 %117, label %land.lhs.true.i101, label %if.end6.i219, !dbg !23251

land.lhs.true.i101:                               ; preds = %if.then25
  %118 = load i64, i64* %size.addr.i96, align 8, !dbg !23252
  %cmp.i100 = icmp ule i64 %118, 8192, !dbg !23253
  br i1 %cmp.i100, label %if.then.i103, label %if.end6.i219, !dbg !23254

if.then.i103:                                     ; preds = %land.lhs.true.i101
  %119 = load i64, i64* %size.addr.i96, align 8, !dbg !23255
  store i64 %119, i64* %size.addr.i.i94, align 8
  %120 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23256
  %tobool.i.i102 = icmp ne i64 %120, 0, !dbg !23256
  br i1 %tobool.i.i102, label %if.end.i.i106, label %if.then.i.i104, !dbg !23257

if.then.i.i104:                                   ; preds = %if.then.i103
  store i32 0, i32* %retval.i.i93, align 4, !dbg !23258
  br label %kmalloc_index.exit.i192, !dbg !23258

if.end.i.i106:                                    ; preds = %if.then.i103
  %121 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23259
  %cmp.i.i105 = icmp ule i64 %121, 8, !dbg !23260
  br i1 %cmp.i.i105, label %if.then1.i.i107, label %if.end2.i.i109, !dbg !23261

if.then1.i.i107:                                  ; preds = %if.end.i.i106
  store i32 3, i32* %retval.i.i93, align 4, !dbg !23262
  br label %kmalloc_index.exit.i192, !dbg !23262

if.end2.i.i109:                                   ; preds = %if.end.i.i106
  %122 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23263
  %cmp3.i.i108 = icmp ugt i64 %122, 64, !dbg !23264
  br i1 %cmp3.i.i108, label %land.lhs.true.i.i111, label %if.end6.i.i114, !dbg !23265

land.lhs.true.i.i111:                             ; preds = %if.end2.i.i109
  %123 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23266
  %cmp4.i.i110 = icmp ule i64 %123, 96, !dbg !23267
  br i1 %cmp4.i.i110, label %if.then5.i.i112, label %if.end6.i.i114, !dbg !23268

if.then5.i.i112:                                  ; preds = %land.lhs.true.i.i111
  store i32 1, i32* %retval.i.i93, align 4, !dbg !23269
  br label %kmalloc_index.exit.i192, !dbg !23269

if.end6.i.i114:                                   ; preds = %land.lhs.true.i.i111, %if.end2.i.i109
  %124 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23270
  %cmp7.i.i113 = icmp ugt i64 %124, 128, !dbg !23271
  br i1 %cmp7.i.i113, label %land.lhs.true8.i.i116, label %if.end11.i.i119, !dbg !23272

land.lhs.true8.i.i116:                            ; preds = %if.end6.i.i114
  %125 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23273
  %cmp9.i.i115 = icmp ule i64 %125, 192, !dbg !23274
  br i1 %cmp9.i.i115, label %if.then10.i.i117, label %if.end11.i.i119, !dbg !23275

if.then10.i.i117:                                 ; preds = %land.lhs.true8.i.i116
  store i32 2, i32* %retval.i.i93, align 4, !dbg !23276
  br label %kmalloc_index.exit.i192, !dbg !23276

if.end11.i.i119:                                  ; preds = %land.lhs.true8.i.i116, %if.end6.i.i114
  %126 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23277
  %cmp12.i.i118 = icmp ule i64 %126, 8, !dbg !23278
  br i1 %cmp12.i.i118, label %if.then13.i.i120, label %if.end14.i.i122, !dbg !23279

if.then13.i.i120:                                 ; preds = %if.end11.i.i119
  store i32 3, i32* %retval.i.i93, align 4, !dbg !23280
  br label %kmalloc_index.exit.i192, !dbg !23280

if.end14.i.i122:                                  ; preds = %if.end11.i.i119
  %127 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23281
  %cmp15.i.i121 = icmp ule i64 %127, 16, !dbg !23282
  br i1 %cmp15.i.i121, label %if.then16.i.i123, label %if.end17.i.i125, !dbg !23283

if.then16.i.i123:                                 ; preds = %if.end14.i.i122
  store i32 4, i32* %retval.i.i93, align 4, !dbg !23284
  br label %kmalloc_index.exit.i192, !dbg !23284

if.end17.i.i125:                                  ; preds = %if.end14.i.i122
  %128 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23285
  %cmp18.i.i124 = icmp ule i64 %128, 32, !dbg !23286
  br i1 %cmp18.i.i124, label %if.then19.i.i126, label %if.end20.i.i128, !dbg !23287

if.then19.i.i126:                                 ; preds = %if.end17.i.i125
  store i32 5, i32* %retval.i.i93, align 4, !dbg !23288
  br label %kmalloc_index.exit.i192, !dbg !23288

if.end20.i.i128:                                  ; preds = %if.end17.i.i125
  %129 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23289
  %cmp21.i.i127 = icmp ule i64 %129, 64, !dbg !23290
  br i1 %cmp21.i.i127, label %if.then22.i.i129, label %if.end23.i.i131, !dbg !23291

if.then22.i.i129:                                 ; preds = %if.end20.i.i128
  store i32 6, i32* %retval.i.i93, align 4, !dbg !23292
  br label %kmalloc_index.exit.i192, !dbg !23292

if.end23.i.i131:                                  ; preds = %if.end20.i.i128
  %130 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23293
  %cmp24.i.i130 = icmp ule i64 %130, 128, !dbg !23294
  br i1 %cmp24.i.i130, label %if.then25.i.i132, label %if.end26.i.i134, !dbg !23295

if.then25.i.i132:                                 ; preds = %if.end23.i.i131
  store i32 7, i32* %retval.i.i93, align 4, !dbg !23296
  br label %kmalloc_index.exit.i192, !dbg !23296

if.end26.i.i134:                                  ; preds = %if.end23.i.i131
  %131 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23297
  %cmp27.i.i133 = icmp ule i64 %131, 256, !dbg !23298
  br i1 %cmp27.i.i133, label %if.then28.i.i135, label %if.end29.i.i137, !dbg !23299

if.then28.i.i135:                                 ; preds = %if.end26.i.i134
  store i32 8, i32* %retval.i.i93, align 4, !dbg !23300
  br label %kmalloc_index.exit.i192, !dbg !23300

if.end29.i.i137:                                  ; preds = %if.end26.i.i134
  %132 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23301
  %cmp30.i.i136 = icmp ule i64 %132, 512, !dbg !23302
  br i1 %cmp30.i.i136, label %if.then31.i.i138, label %if.end32.i.i140, !dbg !23303

if.then31.i.i138:                                 ; preds = %if.end29.i.i137
  store i32 9, i32* %retval.i.i93, align 4, !dbg !23304
  br label %kmalloc_index.exit.i192, !dbg !23304

if.end32.i.i140:                                  ; preds = %if.end29.i.i137
  %133 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23305
  %cmp33.i.i139 = icmp ule i64 %133, 1024, !dbg !23306
  br i1 %cmp33.i.i139, label %if.then34.i.i141, label %if.end35.i.i143, !dbg !23307

if.then34.i.i141:                                 ; preds = %if.end32.i.i140
  store i32 10, i32* %retval.i.i93, align 4, !dbg !23308
  br label %kmalloc_index.exit.i192, !dbg !23308

if.end35.i.i143:                                  ; preds = %if.end32.i.i140
  %134 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23309
  %cmp36.i.i142 = icmp ule i64 %134, 2048, !dbg !23310
  br i1 %cmp36.i.i142, label %if.then37.i.i144, label %if.end38.i.i146, !dbg !23311

if.then37.i.i144:                                 ; preds = %if.end35.i.i143
  store i32 11, i32* %retval.i.i93, align 4, !dbg !23312
  br label %kmalloc_index.exit.i192, !dbg !23312

if.end38.i.i146:                                  ; preds = %if.end35.i.i143
  %135 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23313
  %cmp39.i.i145 = icmp ule i64 %135, 4096, !dbg !23314
  br i1 %cmp39.i.i145, label %if.then40.i.i147, label %if.end41.i.i149, !dbg !23315

if.then40.i.i147:                                 ; preds = %if.end38.i.i146
  store i32 12, i32* %retval.i.i93, align 4, !dbg !23316
  br label %kmalloc_index.exit.i192, !dbg !23316

if.end41.i.i149:                                  ; preds = %if.end38.i.i146
  %136 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23317
  %cmp42.i.i148 = icmp ule i64 %136, 8192, !dbg !23318
  br i1 %cmp42.i.i148, label %if.then43.i.i150, label %if.end44.i.i152, !dbg !23319

if.then43.i.i150:                                 ; preds = %if.end41.i.i149
  store i32 13, i32* %retval.i.i93, align 4, !dbg !23320
  br label %kmalloc_index.exit.i192, !dbg !23320

if.end44.i.i152:                                  ; preds = %if.end41.i.i149
  %137 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23321
  %cmp45.i.i151 = icmp ule i64 %137, 16384, !dbg !23322
  br i1 %cmp45.i.i151, label %if.then46.i.i153, label %if.end47.i.i155, !dbg !23323

if.then46.i.i153:                                 ; preds = %if.end44.i.i152
  store i32 14, i32* %retval.i.i93, align 4, !dbg !23324
  br label %kmalloc_index.exit.i192, !dbg !23324

if.end47.i.i155:                                  ; preds = %if.end44.i.i152
  %138 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23325
  %cmp48.i.i154 = icmp ule i64 %138, 32768, !dbg !23326
  br i1 %cmp48.i.i154, label %if.then49.i.i156, label %if.end50.i.i158, !dbg !23327

if.then49.i.i156:                                 ; preds = %if.end47.i.i155
  store i32 15, i32* %retval.i.i93, align 4, !dbg !23328
  br label %kmalloc_index.exit.i192, !dbg !23328

if.end50.i.i158:                                  ; preds = %if.end47.i.i155
  %139 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23329
  %cmp51.i.i157 = icmp ule i64 %139, 65536, !dbg !23330
  br i1 %cmp51.i.i157, label %if.then52.i.i159, label %if.end53.i.i161, !dbg !23331

if.then52.i.i159:                                 ; preds = %if.end50.i.i158
  store i32 16, i32* %retval.i.i93, align 4, !dbg !23332
  br label %kmalloc_index.exit.i192, !dbg !23332

if.end53.i.i161:                                  ; preds = %if.end50.i.i158
  %140 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23333
  %cmp54.i.i160 = icmp ule i64 %140, 131072, !dbg !23334
  br i1 %cmp54.i.i160, label %if.then55.i.i162, label %if.end56.i.i164, !dbg !23335

if.then55.i.i162:                                 ; preds = %if.end53.i.i161
  store i32 17, i32* %retval.i.i93, align 4, !dbg !23336
  br label %kmalloc_index.exit.i192, !dbg !23336

if.end56.i.i164:                                  ; preds = %if.end53.i.i161
  %141 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23337
  %cmp57.i.i163 = icmp ule i64 %141, 262144, !dbg !23338
  br i1 %cmp57.i.i163, label %if.then58.i.i165, label %if.end59.i.i167, !dbg !23339

if.then58.i.i165:                                 ; preds = %if.end56.i.i164
  store i32 18, i32* %retval.i.i93, align 4, !dbg !23340
  br label %kmalloc_index.exit.i192, !dbg !23340

if.end59.i.i167:                                  ; preds = %if.end56.i.i164
  %142 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23341
  %cmp60.i.i166 = icmp ule i64 %142, 524288, !dbg !23342
  br i1 %cmp60.i.i166, label %if.then61.i.i168, label %if.end62.i.i170, !dbg !23343

if.then61.i.i168:                                 ; preds = %if.end59.i.i167
  store i32 19, i32* %retval.i.i93, align 4, !dbg !23344
  br label %kmalloc_index.exit.i192, !dbg !23344

if.end62.i.i170:                                  ; preds = %if.end59.i.i167
  %143 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23345
  %cmp63.i.i169 = icmp ule i64 %143, 1048576, !dbg !23346
  br i1 %cmp63.i.i169, label %if.then64.i.i171, label %if.end65.i.i173, !dbg !23347

if.then64.i.i171:                                 ; preds = %if.end62.i.i170
  store i32 20, i32* %retval.i.i93, align 4, !dbg !23348
  br label %kmalloc_index.exit.i192, !dbg !23348

if.end65.i.i173:                                  ; preds = %if.end62.i.i170
  %144 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23349
  %cmp66.i.i172 = icmp ule i64 %144, 2097152, !dbg !23350
  br i1 %cmp66.i.i172, label %if.then67.i.i174, label %if.end68.i.i176, !dbg !23351

if.then67.i.i174:                                 ; preds = %if.end65.i.i173
  store i32 21, i32* %retval.i.i93, align 4, !dbg !23352
  br label %kmalloc_index.exit.i192, !dbg !23352

if.end68.i.i176:                                  ; preds = %if.end65.i.i173
  %145 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23353
  %cmp69.i.i175 = icmp ule i64 %145, 4194304, !dbg !23354
  br i1 %cmp69.i.i175, label %if.then70.i.i177, label %if.end71.i.i179, !dbg !23355

if.then70.i.i177:                                 ; preds = %if.end68.i.i176
  store i32 22, i32* %retval.i.i93, align 4, !dbg !23356
  br label %kmalloc_index.exit.i192, !dbg !23356

if.end71.i.i179:                                  ; preds = %if.end68.i.i176
  %146 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23357
  %cmp72.i.i178 = icmp ule i64 %146, 8388608, !dbg !23358
  br i1 %cmp72.i.i178, label %if.then73.i.i180, label %if.end74.i.i182, !dbg !23359

if.then73.i.i180:                                 ; preds = %if.end71.i.i179
  store i32 23, i32* %retval.i.i93, align 4, !dbg !23360
  br label %kmalloc_index.exit.i192, !dbg !23360

if.end74.i.i182:                                  ; preds = %if.end71.i.i179
  %147 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23361
  %cmp75.i.i181 = icmp ule i64 %147, 16777216, !dbg !23362
  br i1 %cmp75.i.i181, label %if.then76.i.i183, label %if.end77.i.i185, !dbg !23363

if.then76.i.i183:                                 ; preds = %if.end74.i.i182
  store i32 24, i32* %retval.i.i93, align 4, !dbg !23364
  br label %kmalloc_index.exit.i192, !dbg !23364

if.end77.i.i185:                                  ; preds = %if.end74.i.i182
  %148 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23365
  %cmp78.i.i184 = icmp ule i64 %148, 33554432, !dbg !23366
  br i1 %cmp78.i.i184, label %if.then79.i.i186, label %if.end80.i.i188, !dbg !23367

if.then79.i.i186:                                 ; preds = %if.end77.i.i185
  store i32 25, i32* %retval.i.i93, align 4, !dbg !23368
  br label %kmalloc_index.exit.i192, !dbg !23368

if.end80.i.i188:                                  ; preds = %if.end77.i.i185
  %149 = load i64, i64* %size.addr.i.i94, align 8, !dbg !23369
  %cmp81.i.i187 = icmp ule i64 %149, 67108864, !dbg !23370
  br i1 %cmp81.i.i187, label %if.then82.i.i189, label %if.end83.i.i190, !dbg !23371

if.then82.i.i189:                                 ; preds = %if.end80.i.i188
  store i32 26, i32* %retval.i.i93, align 4, !dbg !23372
  br label %kmalloc_index.exit.i192, !dbg !23372

if.end83.i.i190:                                  ; preds = %if.end80.i.i188
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #11, !dbg !23373, !srcloc !11831
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 93) #11, !dbg !23374, !srcloc !11835
  unreachable, !dbg !23375

kmalloc_index.exit.i192:                          ; preds = %if.then82.i.i189, %if.then79.i.i186, %if.then76.i.i183, %if.then73.i.i180, %if.then70.i.i177, %if.then67.i.i174, %if.then64.i.i171, %if.then61.i.i168, %if.then58.i.i165, %if.then55.i.i162, %if.then52.i.i159, %if.then49.i.i156, %if.then46.i.i153, %if.then43.i.i150, %if.then40.i.i147, %if.then37.i.i144, %if.then34.i.i141, %if.then31.i.i138, %if.then28.i.i135, %if.then25.i.i132, %if.then22.i.i129, %if.then19.i.i126, %if.then16.i.i123, %if.then13.i.i120, %if.then10.i.i117, %if.then5.i.i112, %if.then1.i.i107, %if.then.i.i104
  %150 = load i32, i32* %retval.i.i93, align 4, !dbg !23376
  store i32 %150, i32* %i.i99, align 4, !dbg !22926
  %151 = load i32, i32* %i.i99, align 4, !dbg !23377
  %tobool.i191 = icmp ne i32 %151, 0, !dbg !23377
  br i1 %tobool.i191, label %if.end.i199, label %if.then1.i193, !dbg !23378

if.then1.i193:                                    ; preds = %kmalloc_index.exit.i192
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i95, align 8, !dbg !23379
  br label %kmalloc_node.exit220, !dbg !23379

if.end.i199:                                      ; preds = %kmalloc_index.exit.i192
  %152 = load i32, i32* %flags.addr.i97, align 4, !dbg !23380
  store i32 %152, i32* %flags.addr.i.i92, align 4
  %153 = load i32, i32* %flags.addr.i.i92, align 4, !dbg !23381
  %and.i.i194 = and i32 %153, 17, !dbg !23381
  %cmp.i9.i195 = icmp eq i32 %and.i.i194, 0, !dbg !23381
  %lnot.i.i196 = xor i1 %cmp.i9.i195, true, !dbg !23381
  %lnot.ext.i.i197 = zext i1 %cmp.i9.i195 to i32, !dbg !23381
  %conv.i.i198 = sext i32 %lnot.ext.i.i197 to i64, !dbg !23381
  br i1 %cmp.i9.i195, label %if.then.i10.i200, label %if.end.i11.i204, !dbg !23382

if.then.i10.i200:                                 ; preds = %if.end.i199
  store i32 0, i32* %retval.i8.i91, align 4, !dbg !23383
  br label %kmalloc_type.exit.i214, !dbg !23383

if.end.i11.i204:                                  ; preds = %if.end.i199
  %154 = load i32, i32* %flags.addr.i.i92, align 4, !dbg !23384
  %and2.i.i201 = and i32 %154, 1, !dbg !23385
  %tobool3.i.i202 = icmp ne i32 %and2.i.i201, 0, !dbg !23384
  %155 = zext i1 %tobool3.i.i202 to i64, !dbg !23384
  %cond.i.i203 = select i1 %tobool3.i.i202, i32 2, i32 1, !dbg !23384
  store i32 %cond.i.i203, i32* %retval.i8.i91, align 4, !dbg !23386
  br label %kmalloc_type.exit.i214, !dbg !23386

kmalloc_type.exit.i214:                           ; preds = %if.end.i11.i204, %if.then.i10.i200
  %156 = load i32, i32* %retval.i8.i91, align 4, !dbg !23387
  %idxprom.i205 = zext i32 %156 to i64, !dbg !23388
  %arrayidx.i206 = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i205, !dbg !23388
  %157 = load i32, i32* %i.i99, align 4, !dbg !23389
  %idxprom3.i207 = zext i32 %157 to i64, !dbg !23388
  %arrayidx4.i208 = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i206, i64 0, i64 %idxprom3.i207, !dbg !23388
  %158 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx4.i208, align 8, !dbg !23388
  %159 = load i32, i32* %flags.addr.i97, align 4, !dbg !23390
  %160 = load i32, i32* %node.addr.i98, align 4, !dbg !23391
  %161 = load i64, i64* %size.addr.i96, align 8, !dbg !23392
  store %struct.kmem_cache* %158, %struct.kmem_cache** %s.addr.i.i86, align 8
  store i32 %159, i32* %gfpflags.addr.i.i87, align 4
  store i32 %160, i32* %node.addr.i.i88, align 4
  store i64 %161, i64* %size.addr.i12.i89, align 8
  %162 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i86, align 8, !dbg !23393
  %163 = load i32, i32* %gfpflags.addr.i.i87, align 4, !dbg !23394
  %164 = load i32, i32* %node.addr.i.i88, align 4, !dbg !23395
  store %struct.kmem_cache* %162, %struct.kmem_cache** %s.addr.i.i.i83, align 8
  store i32 %163, i32* %flags.addr.i.i.i84, align 4
  store i32 %164, i32* %node.addr.i.i.i85, align 4
  %165 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i.i83, align 8, !dbg !23396
  %166 = load i32, i32* %flags.addr.i.i.i84, align 4, !dbg !23397
  %call.i.i.i209 = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %165, i32 %166) #16, !dbg !23398
  %ptrint.i.i.i210 = ptrtoint i8* %call.i.i.i209 to i64, !dbg !23398
  %maskedptr.i.i.i211 = and i64 %ptrint.i.i.i210, 7, !dbg !23398
  %maskcond.i.i.i212 = icmp eq i64 %maskedptr.i.i.i211, 0, !dbg !23398
  call void @llvm.assume(i1 %maskcond.i.i.i212) #11, !dbg !23398
  store i8* %call.i.i.i209, i8** %ret.i.i90, align 8, !dbg !22914
  %167 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i86, align 8, !dbg !23399
  %168 = load i8*, i8** %ret.i.i90, align 8, !dbg !23400
  %169 = load i64, i64* %size.addr.i12.i89, align 8, !dbg !23401
  %170 = load i32, i32* %gfpflags.addr.i.i87, align 4, !dbg !23402
  %call1.i.i213 = call i8* @kasan_kmalloc(%struct.kmem_cache* %167, i8* %168, i64 %169, i32 %170) #16, !dbg !23403
  store i8* %call1.i.i213, i8** %ret.i.i90, align 8, !dbg !23404
  %171 = load i8*, i8** %ret.i.i90, align 8, !dbg !23405
  store i8* %171, i8** %retval.i95, align 8, !dbg !23406
  br label %kmalloc_node.exit220, !dbg !23406

if.end6.i219:                                     ; preds = %land.lhs.true.i101, %if.then25
  %172 = load i64, i64* %size.addr.i96, align 8, !dbg !23407
  %173 = load i32, i32* %flags.addr.i97, align 4, !dbg !23408
  %174 = load i32, i32* %node.addr.i98, align 4, !dbg !23409
  store i64 %172, i64* %size.addr.i13.i80, align 8
  store i32 %173, i32* %flags.addr.i14.i81, align 4
  store i32 %174, i32* %node.addr.i15.i82, align 4
  %175 = load i64, i64* %size.addr.i13.i80, align 8, !dbg !23410
  %176 = load i32, i32* %flags.addr.i14.i81, align 4, !dbg !23411
  %call.i.i215 = call noalias i8* @__kmalloc(i64 %175, i32 %176) #16, !dbg !23412
  %ptrint.i.i216 = ptrtoint i8* %call.i.i215 to i64, !dbg !23412
  %maskedptr.i.i217 = and i64 %ptrint.i.i216, 7, !dbg !23412
  %maskcond.i.i218 = icmp eq i64 %maskedptr.i.i217, 0, !dbg !23412
  call void @llvm.assume(i1 %maskcond.i.i218) #11, !dbg !23412
  store i8* %call.i.i215, i8** %retval.i95, align 8, !dbg !23413
  br label %kmalloc_node.exit220, !dbg !23413

kmalloc_node.exit220:                             ; preds = %if.then1.i193, %kmalloc_type.exit.i214, %if.end6.i219
  %177 = load i8*, i8** %retval.i95, align 8, !dbg !23414
  store i8* %177, i8** %buf, align 8, !dbg !23415
  %178 = load i8*, i8** %buf, align 8, !dbg !23416
  %tobool28 = icmp ne i8* %178, null, !dbg !23416
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !23418

if.then29:                                        ; preds = %kmalloc_node.exit220
  br label %err1, !dbg !23419

if.end30:                                         ; preds = %kmalloc_node.exit220
  br label %if.end31, !dbg !23420

if.end31:                                         ; preds = %if.end30, %if.end21
  %call32 = call %struct.urb* @usb_alloc_urb(i32 0, i32 3264) #13, !dbg !23421
  store %struct.urb* %call32, %struct.urb** %urb, align 8, !dbg !23422
  %179 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !23423
  %tobool33 = icmp ne %struct.urb* %179, null, !dbg !23423
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !23425

if.then34:                                        ; preds = %if.end31
  %180 = load i8*, i8** %buf, align 8, !dbg !23426
  call void @kfree(i8* %180) #13, !dbg !23428
  br label %err1, !dbg !23429

if.end35:                                         ; preds = %if.end31
  %181 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23430
  %tx_info = getelementptr inbounds %struct.r8152, %struct.r8152* %181, i32 0, i32 6, !dbg !23431
  %182 = load i32, i32* %i, align 4, !dbg !23432
  %idxprom = sext i32 %182 to i64, !dbg !23430
  %arrayidx = getelementptr [4 x %struct.tx_agg], [4 x %struct.tx_agg]* %tx_info, i64 0, i64 %idxprom, !dbg !23430
  %list = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %arrayidx, i32 0, i32 0, !dbg !23433
  call void @INIT_LIST_HEAD(%struct.list_head* %list) #13, !dbg !23434
  %183 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23435
  %184 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23436
  %tx_info36 = getelementptr inbounds %struct.r8152, %struct.r8152* %184, i32 0, i32 6, !dbg !23437
  %185 = load i32, i32* %i, align 4, !dbg !23438
  %idxprom37 = sext i32 %185 to i64, !dbg !23436
  %arrayidx38 = getelementptr [4 x %struct.tx_agg], [4 x %struct.tx_agg]* %tx_info36, i64 0, i64 %idxprom37, !dbg !23436
  %context = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %arrayidx38, i32 0, i32 2, !dbg !23439
  store %struct.r8152* %183, %struct.r8152** %context, align 8, !dbg !23440
  %186 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !23441
  %187 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23442
  %tx_info39 = getelementptr inbounds %struct.r8152, %struct.r8152* %187, i32 0, i32 6, !dbg !23443
  %188 = load i32, i32* %i, align 4, !dbg !23444
  %idxprom40 = sext i32 %188 to i64, !dbg !23442
  %arrayidx41 = getelementptr [4 x %struct.tx_agg], [4 x %struct.tx_agg]* %tx_info39, i64 0, i64 %idxprom40, !dbg !23442
  %urb42 = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %arrayidx41, i32 0, i32 1, !dbg !23445
  store %struct.urb* %186, %struct.urb** %urb42, align 8, !dbg !23446
  %189 = load i8*, i8** %buf, align 8, !dbg !23447
  %190 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23448
  %tx_info43 = getelementptr inbounds %struct.r8152, %struct.r8152* %190, i32 0, i32 6, !dbg !23449
  %191 = load i32, i32* %i, align 4, !dbg !23450
  %idxprom44 = sext i32 %191 to i64, !dbg !23448
  %arrayidx45 = getelementptr [4 x %struct.tx_agg], [4 x %struct.tx_agg]* %tx_info43, i64 0, i64 %idxprom44, !dbg !23448
  %buffer = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %arrayidx45, i32 0, i32 3, !dbg !23451
  store i8* %189, i8** %buffer, align 8, !dbg !23452
  %192 = load i8*, i8** %buf, align 8, !dbg !23453
  %call46 = call i8* @tx_agg_align(i8* %192) #13, !dbg !23454
  %193 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23455
  %tx_info47 = getelementptr inbounds %struct.r8152, %struct.r8152* %193, i32 0, i32 6, !dbg !23456
  %194 = load i32, i32* %i, align 4, !dbg !23457
  %idxprom48 = sext i32 %194 to i64, !dbg !23455
  %arrayidx49 = getelementptr [4 x %struct.tx_agg], [4 x %struct.tx_agg]* %tx_info47, i64 0, i64 %idxprom48, !dbg !23455
  %head = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %arrayidx49, i32 0, i32 4, !dbg !23458
  store i8* %call46, i8** %head, align 8, !dbg !23459
  %195 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23460
  %tx_info50 = getelementptr inbounds %struct.r8152, %struct.r8152* %195, i32 0, i32 6, !dbg !23461
  %196 = load i32, i32* %i, align 4, !dbg !23462
  %idxprom51 = sext i32 %196 to i64, !dbg !23460
  %arrayidx52 = getelementptr [4 x %struct.tx_agg], [4 x %struct.tx_agg]* %tx_info50, i64 0, i64 %idxprom51, !dbg !23460
  %list53 = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %arrayidx52, i32 0, i32 0, !dbg !23463
  %197 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23464
  %tx_free54 = getelementptr inbounds %struct.r8152, %struct.r8152* %197, i32 0, i32 10, !dbg !23465
  call void @list_add_tail(%struct.list_head* %list53, %struct.list_head* %tx_free54) #13, !dbg !23466
  br label %for.inc55, !dbg !23467

for.inc55:                                        ; preds = %if.end35
  %198 = load i32, i32* %i, align 4, !dbg !23468
  %inc56 = add i32 %198, 1, !dbg !23468
  store i32 %inc56, i32* %i, align 4, !dbg !23468
  br label %for.cond15, !dbg !23469, !llvm.loop !23470

for.end57:                                        ; preds = %for.cond15
  %call58 = call %struct.urb* @usb_alloc_urb(i32 0, i32 3264) #13, !dbg !23472
  %199 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23473
  %intr_urb = getelementptr inbounds %struct.r8152, %struct.r8152* %199, i32 0, i32 5, !dbg !23474
  store %struct.urb* %call58, %struct.urb** %intr_urb, align 8, !dbg !23475
  %200 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23476
  %intr_urb59 = getelementptr inbounds %struct.r8152, %struct.r8152* %200, i32 0, i32 5, !dbg !23478
  %201 = load %struct.urb*, %struct.urb** %intr_urb59, align 8, !dbg !23478
  %tobool60 = icmp ne %struct.urb* %201, null, !dbg !23476
  br i1 %tobool60, label %if.end62, label %if.then61, !dbg !23479

if.then61:                                        ; preds = %for.end57
  br label %err1, !dbg !23480

if.end62:                                         ; preds = %for.end57
  store i64 2, i64* %size.addr.i228, align 8
  store i32 3264, i32* %flags.addr.i229, align 4
  %202 = load i64, i64* %size.addr.i228, align 8, !dbg !23481
  %203 = call i1 @llvm.is.constant.i64(i64 %202) #11, !dbg !23482
  br i1 %203, label %if.then.i231, label %if.end9.i, !dbg !23483

if.then.i231:                                     ; preds = %if.end62
  %204 = load i64, i64* %size.addr.i228, align 8, !dbg !23484
  %cmp.i230 = icmp ugt i64 %204, 8192, !dbg !23485
  br i1 %cmp.i230, label %if.then1.i237, label %if.end.i239, !dbg !23486

if.then1.i237:                                    ; preds = %if.then.i231
  %205 = load i64, i64* %size.addr.i228, align 8, !dbg !23487
  %206 = load i32, i32* %flags.addr.i229, align 4, !dbg !23488
  store i64 %205, i64* %size.addr.i.i225, align 8
  store i32 %206, i32* %flags.addr.i.i226, align 4
  %207 = load i64, i64* %size.addr.i.i225, align 8, !dbg !23489
  %call.i.i232 = call i32 @get_order(i64 %207) #15, !dbg !23490
  store i32 %call.i.i232, i32* %order.i.i, align 4, !dbg !22868
  %208 = load i64, i64* %size.addr.i.i225, align 8, !dbg !23491
  %209 = load i32, i32* %flags.addr.i.i226, align 4, !dbg !23492
  %210 = load i32, i32* %order.i.i, align 4, !dbg !23493
  store i64 %208, i64* %size.addr.i.i.i, align 8
  store i32 %209, i32* %flags.addr.i.i.i224, align 4
  store i32 %210, i32* %order.addr.i.i.i, align 4
  %211 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !23494
  %212 = load i32, i32* %flags.addr.i.i.i224, align 4, !dbg !23495
  %213 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !23496
  %call.i.i.i233 = call noalias i8* @kmalloc_order(i64 %211, i32 %212, i32 %213) #16, !dbg !23497
  %ptrint.i.i.i234 = ptrtoint i8* %call.i.i.i233 to i64, !dbg !23497
  %maskedptr.i.i.i235 = and i64 %ptrint.i.i.i234, 4095, !dbg !23497
  %maskcond.i.i.i236 = icmp eq i64 %maskedptr.i.i.i235, 0, !dbg !23497
  call void @llvm.assume(i1 %maskcond.i.i.i236) #11, !dbg !23497
  store i8* %call.i.i.i233, i8** %retval.i227, align 8, !dbg !23498
  br label %kmalloc.exit, !dbg !23498

if.end.i239:                                      ; preds = %if.then.i231
  %214 = load i64, i64* %size.addr.i228, align 8, !dbg !23499
  store i64 %214, i64* %size.addr.i11.i, align 8
  %215 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23500
  %tobool.i.i238 = icmp ne i64 %215, 0, !dbg !23500
  br i1 %tobool.i.i238, label %if.end.i.i242, label %if.then.i.i240, !dbg !23501

if.then.i.i240:                                   ; preds = %if.end.i239
  store i32 0, i32* %retval.i.i223, align 4, !dbg !23502
  br label %kmalloc_index.exit.i328, !dbg !23502

if.end.i.i242:                                    ; preds = %if.end.i239
  %216 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23503
  %cmp.i.i241 = icmp ule i64 %216, 8, !dbg !23504
  br i1 %cmp.i.i241, label %if.then1.i.i243, label %if.end2.i.i245, !dbg !23505

if.then1.i.i243:                                  ; preds = %if.end.i.i242
  store i32 3, i32* %retval.i.i223, align 4, !dbg !23506
  br label %kmalloc_index.exit.i328, !dbg !23506

if.end2.i.i245:                                   ; preds = %if.end.i.i242
  %217 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23507
  %cmp3.i.i244 = icmp ugt i64 %217, 64, !dbg !23508
  br i1 %cmp3.i.i244, label %land.lhs.true.i.i247, label %if.end6.i.i250, !dbg !23509

land.lhs.true.i.i247:                             ; preds = %if.end2.i.i245
  %218 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23510
  %cmp4.i.i246 = icmp ule i64 %218, 96, !dbg !23511
  br i1 %cmp4.i.i246, label %if.then5.i.i248, label %if.end6.i.i250, !dbg !23512

if.then5.i.i248:                                  ; preds = %land.lhs.true.i.i247
  store i32 1, i32* %retval.i.i223, align 4, !dbg !23513
  br label %kmalloc_index.exit.i328, !dbg !23513

if.end6.i.i250:                                   ; preds = %land.lhs.true.i.i247, %if.end2.i.i245
  %219 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23514
  %cmp7.i.i249 = icmp ugt i64 %219, 128, !dbg !23515
  br i1 %cmp7.i.i249, label %land.lhs.true8.i.i252, label %if.end11.i.i255, !dbg !23516

land.lhs.true8.i.i252:                            ; preds = %if.end6.i.i250
  %220 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23517
  %cmp9.i.i251 = icmp ule i64 %220, 192, !dbg !23518
  br i1 %cmp9.i.i251, label %if.then10.i.i253, label %if.end11.i.i255, !dbg !23519

if.then10.i.i253:                                 ; preds = %land.lhs.true8.i.i252
  store i32 2, i32* %retval.i.i223, align 4, !dbg !23520
  br label %kmalloc_index.exit.i328, !dbg !23520

if.end11.i.i255:                                  ; preds = %land.lhs.true8.i.i252, %if.end6.i.i250
  %221 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23521
  %cmp12.i.i254 = icmp ule i64 %221, 8, !dbg !23522
  br i1 %cmp12.i.i254, label %if.then13.i.i256, label %if.end14.i.i258, !dbg !23523

if.then13.i.i256:                                 ; preds = %if.end11.i.i255
  store i32 3, i32* %retval.i.i223, align 4, !dbg !23524
  br label %kmalloc_index.exit.i328, !dbg !23524

if.end14.i.i258:                                  ; preds = %if.end11.i.i255
  %222 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23525
  %cmp15.i.i257 = icmp ule i64 %222, 16, !dbg !23526
  br i1 %cmp15.i.i257, label %if.then16.i.i259, label %if.end17.i.i261, !dbg !23527

if.then16.i.i259:                                 ; preds = %if.end14.i.i258
  store i32 4, i32* %retval.i.i223, align 4, !dbg !23528
  br label %kmalloc_index.exit.i328, !dbg !23528

if.end17.i.i261:                                  ; preds = %if.end14.i.i258
  %223 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23529
  %cmp18.i.i260 = icmp ule i64 %223, 32, !dbg !23530
  br i1 %cmp18.i.i260, label %if.then19.i.i262, label %if.end20.i.i264, !dbg !23531

if.then19.i.i262:                                 ; preds = %if.end17.i.i261
  store i32 5, i32* %retval.i.i223, align 4, !dbg !23532
  br label %kmalloc_index.exit.i328, !dbg !23532

if.end20.i.i264:                                  ; preds = %if.end17.i.i261
  %224 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23533
  %cmp21.i.i263 = icmp ule i64 %224, 64, !dbg !23534
  br i1 %cmp21.i.i263, label %if.then22.i.i265, label %if.end23.i.i267, !dbg !23535

if.then22.i.i265:                                 ; preds = %if.end20.i.i264
  store i32 6, i32* %retval.i.i223, align 4, !dbg !23536
  br label %kmalloc_index.exit.i328, !dbg !23536

if.end23.i.i267:                                  ; preds = %if.end20.i.i264
  %225 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23537
  %cmp24.i.i266 = icmp ule i64 %225, 128, !dbg !23538
  br i1 %cmp24.i.i266, label %if.then25.i.i268, label %if.end26.i.i270, !dbg !23539

if.then25.i.i268:                                 ; preds = %if.end23.i.i267
  store i32 7, i32* %retval.i.i223, align 4, !dbg !23540
  br label %kmalloc_index.exit.i328, !dbg !23540

if.end26.i.i270:                                  ; preds = %if.end23.i.i267
  %226 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23541
  %cmp27.i.i269 = icmp ule i64 %226, 256, !dbg !23542
  br i1 %cmp27.i.i269, label %if.then28.i.i271, label %if.end29.i.i273, !dbg !23543

if.then28.i.i271:                                 ; preds = %if.end26.i.i270
  store i32 8, i32* %retval.i.i223, align 4, !dbg !23544
  br label %kmalloc_index.exit.i328, !dbg !23544

if.end29.i.i273:                                  ; preds = %if.end26.i.i270
  %227 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23545
  %cmp30.i.i272 = icmp ule i64 %227, 512, !dbg !23546
  br i1 %cmp30.i.i272, label %if.then31.i.i274, label %if.end32.i.i276, !dbg !23547

if.then31.i.i274:                                 ; preds = %if.end29.i.i273
  store i32 9, i32* %retval.i.i223, align 4, !dbg !23548
  br label %kmalloc_index.exit.i328, !dbg !23548

if.end32.i.i276:                                  ; preds = %if.end29.i.i273
  %228 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23549
  %cmp33.i.i275 = icmp ule i64 %228, 1024, !dbg !23550
  br i1 %cmp33.i.i275, label %if.then34.i.i277, label %if.end35.i.i279, !dbg !23551

if.then34.i.i277:                                 ; preds = %if.end32.i.i276
  store i32 10, i32* %retval.i.i223, align 4, !dbg !23552
  br label %kmalloc_index.exit.i328, !dbg !23552

if.end35.i.i279:                                  ; preds = %if.end32.i.i276
  %229 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23553
  %cmp36.i.i278 = icmp ule i64 %229, 2048, !dbg !23554
  br i1 %cmp36.i.i278, label %if.then37.i.i280, label %if.end38.i.i282, !dbg !23555

if.then37.i.i280:                                 ; preds = %if.end35.i.i279
  store i32 11, i32* %retval.i.i223, align 4, !dbg !23556
  br label %kmalloc_index.exit.i328, !dbg !23556

if.end38.i.i282:                                  ; preds = %if.end35.i.i279
  %230 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23557
  %cmp39.i.i281 = icmp ule i64 %230, 4096, !dbg !23558
  br i1 %cmp39.i.i281, label %if.then40.i.i283, label %if.end41.i.i285, !dbg !23559

if.then40.i.i283:                                 ; preds = %if.end38.i.i282
  store i32 12, i32* %retval.i.i223, align 4, !dbg !23560
  br label %kmalloc_index.exit.i328, !dbg !23560

if.end41.i.i285:                                  ; preds = %if.end38.i.i282
  %231 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23561
  %cmp42.i.i284 = icmp ule i64 %231, 8192, !dbg !23562
  br i1 %cmp42.i.i284, label %if.then43.i.i286, label %if.end44.i.i288, !dbg !23563

if.then43.i.i286:                                 ; preds = %if.end41.i.i285
  store i32 13, i32* %retval.i.i223, align 4, !dbg !23564
  br label %kmalloc_index.exit.i328, !dbg !23564

if.end44.i.i288:                                  ; preds = %if.end41.i.i285
  %232 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23565
  %cmp45.i.i287 = icmp ule i64 %232, 16384, !dbg !23566
  br i1 %cmp45.i.i287, label %if.then46.i.i289, label %if.end47.i.i291, !dbg !23567

if.then46.i.i289:                                 ; preds = %if.end44.i.i288
  store i32 14, i32* %retval.i.i223, align 4, !dbg !23568
  br label %kmalloc_index.exit.i328, !dbg !23568

if.end47.i.i291:                                  ; preds = %if.end44.i.i288
  %233 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23569
  %cmp48.i.i290 = icmp ule i64 %233, 32768, !dbg !23570
  br i1 %cmp48.i.i290, label %if.then49.i.i292, label %if.end50.i.i294, !dbg !23571

if.then49.i.i292:                                 ; preds = %if.end47.i.i291
  store i32 15, i32* %retval.i.i223, align 4, !dbg !23572
  br label %kmalloc_index.exit.i328, !dbg !23572

if.end50.i.i294:                                  ; preds = %if.end47.i.i291
  %234 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23573
  %cmp51.i.i293 = icmp ule i64 %234, 65536, !dbg !23574
  br i1 %cmp51.i.i293, label %if.then52.i.i295, label %if.end53.i.i297, !dbg !23575

if.then52.i.i295:                                 ; preds = %if.end50.i.i294
  store i32 16, i32* %retval.i.i223, align 4, !dbg !23576
  br label %kmalloc_index.exit.i328, !dbg !23576

if.end53.i.i297:                                  ; preds = %if.end50.i.i294
  %235 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23577
  %cmp54.i.i296 = icmp ule i64 %235, 131072, !dbg !23578
  br i1 %cmp54.i.i296, label %if.then55.i.i298, label %if.end56.i.i300, !dbg !23579

if.then55.i.i298:                                 ; preds = %if.end53.i.i297
  store i32 17, i32* %retval.i.i223, align 4, !dbg !23580
  br label %kmalloc_index.exit.i328, !dbg !23580

if.end56.i.i300:                                  ; preds = %if.end53.i.i297
  %236 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23581
  %cmp57.i.i299 = icmp ule i64 %236, 262144, !dbg !23582
  br i1 %cmp57.i.i299, label %if.then58.i.i301, label %if.end59.i.i303, !dbg !23583

if.then58.i.i301:                                 ; preds = %if.end56.i.i300
  store i32 18, i32* %retval.i.i223, align 4, !dbg !23584
  br label %kmalloc_index.exit.i328, !dbg !23584

if.end59.i.i303:                                  ; preds = %if.end56.i.i300
  %237 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23585
  %cmp60.i.i302 = icmp ule i64 %237, 524288, !dbg !23586
  br i1 %cmp60.i.i302, label %if.then61.i.i304, label %if.end62.i.i306, !dbg !23587

if.then61.i.i304:                                 ; preds = %if.end59.i.i303
  store i32 19, i32* %retval.i.i223, align 4, !dbg !23588
  br label %kmalloc_index.exit.i328, !dbg !23588

if.end62.i.i306:                                  ; preds = %if.end59.i.i303
  %238 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23589
  %cmp63.i.i305 = icmp ule i64 %238, 1048576, !dbg !23590
  br i1 %cmp63.i.i305, label %if.then64.i.i307, label %if.end65.i.i309, !dbg !23591

if.then64.i.i307:                                 ; preds = %if.end62.i.i306
  store i32 20, i32* %retval.i.i223, align 4, !dbg !23592
  br label %kmalloc_index.exit.i328, !dbg !23592

if.end65.i.i309:                                  ; preds = %if.end62.i.i306
  %239 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23593
  %cmp66.i.i308 = icmp ule i64 %239, 2097152, !dbg !23594
  br i1 %cmp66.i.i308, label %if.then67.i.i310, label %if.end68.i.i312, !dbg !23595

if.then67.i.i310:                                 ; preds = %if.end65.i.i309
  store i32 21, i32* %retval.i.i223, align 4, !dbg !23596
  br label %kmalloc_index.exit.i328, !dbg !23596

if.end68.i.i312:                                  ; preds = %if.end65.i.i309
  %240 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23597
  %cmp69.i.i311 = icmp ule i64 %240, 4194304, !dbg !23598
  br i1 %cmp69.i.i311, label %if.then70.i.i313, label %if.end71.i.i315, !dbg !23599

if.then70.i.i313:                                 ; preds = %if.end68.i.i312
  store i32 22, i32* %retval.i.i223, align 4, !dbg !23600
  br label %kmalloc_index.exit.i328, !dbg !23600

if.end71.i.i315:                                  ; preds = %if.end68.i.i312
  %241 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23601
  %cmp72.i.i314 = icmp ule i64 %241, 8388608, !dbg !23602
  br i1 %cmp72.i.i314, label %if.then73.i.i316, label %if.end74.i.i318, !dbg !23603

if.then73.i.i316:                                 ; preds = %if.end71.i.i315
  store i32 23, i32* %retval.i.i223, align 4, !dbg !23604
  br label %kmalloc_index.exit.i328, !dbg !23604

if.end74.i.i318:                                  ; preds = %if.end71.i.i315
  %242 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23605
  %cmp75.i.i317 = icmp ule i64 %242, 16777216, !dbg !23606
  br i1 %cmp75.i.i317, label %if.then76.i.i319, label %if.end77.i.i321, !dbg !23607

if.then76.i.i319:                                 ; preds = %if.end74.i.i318
  store i32 24, i32* %retval.i.i223, align 4, !dbg !23608
  br label %kmalloc_index.exit.i328, !dbg !23608

if.end77.i.i321:                                  ; preds = %if.end74.i.i318
  %243 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23609
  %cmp78.i.i320 = icmp ule i64 %243, 33554432, !dbg !23610
  br i1 %cmp78.i.i320, label %if.then79.i.i322, label %if.end80.i.i324, !dbg !23611

if.then79.i.i322:                                 ; preds = %if.end77.i.i321
  store i32 25, i32* %retval.i.i223, align 4, !dbg !23612
  br label %kmalloc_index.exit.i328, !dbg !23612

if.end80.i.i324:                                  ; preds = %if.end77.i.i321
  %244 = load i64, i64* %size.addr.i11.i, align 8, !dbg !23613
  %cmp81.i.i323 = icmp ule i64 %244, 67108864, !dbg !23614
  br i1 %cmp81.i.i323, label %if.then82.i.i325, label %if.end83.i.i326, !dbg !23615

if.then82.i.i325:                                 ; preds = %if.end80.i.i324
  store i32 26, i32* %retval.i.i223, align 4, !dbg !23616
  br label %kmalloc_index.exit.i328, !dbg !23616

if.end83.i.i326:                                  ; preds = %if.end80.i.i324
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #11, !dbg !23617, !srcloc !11831
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 93) #11, !dbg !23618, !srcloc !11835
  unreachable, !dbg !23619

kmalloc_index.exit.i328:                          ; preds = %if.then82.i.i325, %if.then79.i.i322, %if.then76.i.i319, %if.then73.i.i316, %if.then70.i.i313, %if.then67.i.i310, %if.then64.i.i307, %if.then61.i.i304, %if.then58.i.i301, %if.then55.i.i298, %if.then52.i.i295, %if.then49.i.i292, %if.then46.i.i289, %if.then43.i.i286, %if.then40.i.i283, %if.then37.i.i280, %if.then34.i.i277, %if.then31.i.i274, %if.then28.i.i271, %if.then25.i.i268, %if.then22.i.i265, %if.then19.i.i262, %if.then16.i.i259, %if.then13.i.i256, %if.then10.i.i253, %if.then5.i.i248, %if.then1.i.i243, %if.then.i.i240
  %245 = load i32, i32* %retval.i.i223, align 4, !dbg !23620
  store i32 %245, i32* %index.i, align 4, !dbg !23621
  %246 = load i32, i32* %index.i, align 4, !dbg !23622
  %tobool.i327 = icmp ne i32 %246, 0, !dbg !23622
  br i1 %tobool.i327, label %if.end4.i, label %if.then3.i, !dbg !23623

if.then3.i:                                       ; preds = %kmalloc_index.exit.i328
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i227, align 8, !dbg !23624
  br label %kmalloc.exit, !dbg !23624

if.end4.i:                                        ; preds = %kmalloc_index.exit.i328
  %247 = load i32, i32* %flags.addr.i229, align 4, !dbg !23625
  store i32 %247, i32* %flags.addr.i13.i, align 4
  %248 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !23626
  %and.i.i329 = and i32 %248, 17, !dbg !23626
  %cmp.i14.i = icmp eq i32 %and.i.i329, 0, !dbg !23626
  %lnot.i.i330 = xor i1 %cmp.i14.i, true, !dbg !23626
  %lnot.ext.i.i331 = zext i1 %cmp.i14.i to i32, !dbg !23626
  %conv.i.i332 = sext i32 %lnot.ext.i.i331 to i64, !dbg !23626
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !23627

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !23628
  br label %kmalloc_type.exit.i342, !dbg !23628

if.end.i16.i:                                     ; preds = %if.end4.i
  %249 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !23629
  %and2.i.i333 = and i32 %249, 1, !dbg !23630
  %tobool3.i.i334 = icmp ne i32 %and2.i.i333, 0, !dbg !23629
  %250 = zext i1 %tobool3.i.i334 to i64, !dbg !23629
  %cond.i.i335 = select i1 %tobool3.i.i334, i32 2, i32 1, !dbg !23629
  store i32 %cond.i.i335, i32* %retval.i12.i, align 4, !dbg !23631
  br label %kmalloc_type.exit.i342, !dbg !23631

kmalloc_type.exit.i342:                           ; preds = %if.end.i16.i, %if.then.i15.i
  %251 = load i32, i32* %retval.i12.i, align 4, !dbg !23632
  %idxprom.i336 = zext i32 %251 to i64, !dbg !23633
  %arrayidx.i337 = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i336, !dbg !23633
  %252 = load i32, i32* %index.i, align 4, !dbg !23634
  %idxprom6.i = zext i32 %252 to i64, !dbg !23633
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i337, i64 0, i64 %idxprom6.i, !dbg !23633
  %253 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !23633
  %254 = load i32, i32* %flags.addr.i229, align 4, !dbg !23635
  %255 = load i64, i64* %size.addr.i228, align 8, !dbg !23636
  store %struct.kmem_cache* %253, %struct.kmem_cache** %s.addr.i.i221, align 8
  store i32 %254, i32* %flags.addr.i17.i, align 4
  store i64 %255, i64* %size.addr.i18.i, align 8
  %256 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i221, align 8, !dbg !23637
  %257 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !23638
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %256, i32 %257) #16, !dbg !23639
  %ptrint.i.i338 = ptrtoint i8* %call.i19.i to i64, !dbg !23639
  %maskedptr.i.i339 = and i64 %ptrint.i.i338, 7, !dbg !23639
  %maskcond.i.i340 = icmp eq i64 %maskedptr.i.i339, 0, !dbg !23639
  call void @llvm.assume(i1 %maskcond.i.i340) #11, !dbg !23639
  store i8* %call.i19.i, i8** %ret.i.i222, align 8, !dbg !22856
  %258 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i221, align 8, !dbg !23640
  %259 = load i8*, i8** %ret.i.i222, align 8, !dbg !23641
  %260 = load i64, i64* %size.addr.i18.i, align 8, !dbg !23642
  %261 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !23643
  %call1.i.i341 = call i8* @kasan_kmalloc(%struct.kmem_cache* %258, i8* %259, i64 %260, i32 %261) #16, !dbg !23644
  store i8* %call1.i.i341, i8** %ret.i.i222, align 8, !dbg !23645
  %262 = load i8*, i8** %ret.i.i222, align 8, !dbg !23646
  store i8* %262, i8** %retval.i227, align 8, !dbg !23647
  br label %kmalloc.exit, !dbg !23647

if.end9.i:                                        ; preds = %if.end62
  %263 = load i64, i64* %size.addr.i228, align 8, !dbg !23648
  %264 = load i32, i32* %flags.addr.i229, align 4, !dbg !23649
  %call10.i = call noalias i8* @__kmalloc(i64 %263, i32 %264) #16, !dbg !23650
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !23650
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !23650
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !23650
  call void @llvm.assume(i1 %maskcond.i) #11, !dbg !23650
  store i8* %call10.i, i8** %retval.i227, align 8, !dbg !23651
  br label %kmalloc.exit, !dbg !23651

kmalloc.exit:                                     ; preds = %if.then1.i237, %if.then3.i, %kmalloc_type.exit.i342, %if.end9.i
  %265 = load i8*, i8** %retval.i227, align 8, !dbg !23652
  %266 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23653
  %intr_buff = getelementptr inbounds %struct.r8152, %struct.r8152* %266, i32 0, i32 38, !dbg !23654
  store i8* %265, i8** %intr_buff, align 8, !dbg !23655
  %267 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23656
  %intr_buff64 = getelementptr inbounds %struct.r8152, %struct.r8152* %267, i32 0, i32 38, !dbg !23658
  %268 = load i8*, i8** %intr_buff64, align 8, !dbg !23658
  %tobool65 = icmp ne i8* %268, null, !dbg !23656
  br i1 %tobool65, label %if.end67, label %if.then66, !dbg !23659

if.then66:                                        ; preds = %kmalloc.exit
  br label %err1, !dbg !23660

if.end67:                                         ; preds = %kmalloc.exit
  %269 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep_intr, align 8, !dbg !23661
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %269, i32 0, i32 0, !dbg !23662
  %bInterval = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc, i32 0, i32 5, !dbg !23663
  %270 = load i8, i8* %bInterval, align 2, !dbg !23663
  %conv68 = zext i8 %270 to i32, !dbg !23664
  %271 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23665
  %intr_interval = getelementptr inbounds %struct.r8152, %struct.r8152* %271, i32 0, i32 26, !dbg !23666
  store i32 %conv68, i32* %intr_interval, align 8, !dbg !23667
  %272 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23668
  %intr_urb69 = getelementptr inbounds %struct.r8152, %struct.r8152* %272, i32 0, i32 5, !dbg !23669
  %273 = load %struct.urb*, %struct.urb** %intr_urb69, align 8, !dbg !23669
  %274 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23670
  %udev = getelementptr inbounds %struct.r8152, %struct.r8152* %274, i32 0, i32 1, !dbg !23671
  %275 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !23671
  %276 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23672
  %udev70 = getelementptr inbounds %struct.r8152, %struct.r8152* %276, i32 0, i32 1, !dbg !23672
  %277 = load %struct.usb_device*, %struct.usb_device** %udev70, align 8, !dbg !23672
  %call71 = call i32 @__create_pipe(%struct.usb_device* %277, i32 3) #13, !dbg !23672
  %or = or i32 1073741824, %call71, !dbg !23672
  %or72 = or i32 %or, 128, !dbg !23672
  %278 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23673
  %intr_buff73 = getelementptr inbounds %struct.r8152, %struct.r8152* %278, i32 0, i32 38, !dbg !23674
  %279 = load i8*, i8** %intr_buff73, align 8, !dbg !23674
  %280 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23675
  %281 = bitcast %struct.r8152* %280 to i8*, !dbg !23675
  %282 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23676
  %intr_interval74 = getelementptr inbounds %struct.r8152, %struct.r8152* %282, i32 0, i32 26, !dbg !23677
  %283 = load i32, i32* %intr_interval74, align 8, !dbg !23677
  call void @usb_fill_int_urb(%struct.urb* %273, %struct.usb_device* %275, i32 %or72, i8* %279, i32 2, void (%struct.urb*)* @intr_callback, i8* %281, i32 %283) #13, !dbg !23678
  store i32 0, i32* %retval, align 4, !dbg !23679
  br label %return, !dbg !23679

err1:                                             ; preds = %if.then66, %if.then61, %if.then34, %if.then29, %if.then20, %if.then
  call void @llvm.dbg.label(metadata !23680), !dbg !23681
  %284 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23682
  call void @free_all_mem(%struct.r8152* %284) #13, !dbg !23683
  store i32 -12, i32* %retval, align 4, !dbg !23684
  br label %return, !dbg !23684

return:                                           ; preds = %err1, %if.end67
  %285 = load i32, i32* %retval, align 4, !dbg !23685
  ret i32 %285, !dbg !23685
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_start_queue(%struct.net_device* %dev) #2 !dbg !23686 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !23687, metadata !DIExpression()), !dbg !23689
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !23691, metadata !DIExpression()), !dbg !23692
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23693
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #13, !dbg !23694
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !23695
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !23696
  call void @clear_bit(i64 0, i64* %state.i) #16, !dbg !23697
  ret void, !dbg !23698
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl_notifier(%struct.notifier_block* %nb, i64 %action, i8* %data) #2 !dbg !23699 {
entry:
  %nb.addr = alloca %struct.notifier_block*, align 8
  %action.addr = alloca i64, align 8
  %data.addr = alloca i8*, align 8
  %tp = alloca %struct.r8152*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.r8152*, align 8
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !23700, metadata !DIExpression()), !dbg !23701
  store i64 %action, i64* %action.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %action.addr, metadata !23702, metadata !DIExpression()), !dbg !23703
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !23704, metadata !DIExpression()), !dbg !23705
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !23706, metadata !DIExpression()), !dbg !23707
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !23708, metadata !DIExpression()), !dbg !23710
  %0 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !23710
  %1 = bitcast %struct.notifier_block* %0 to i8*, !dbg !23710
  store i8* %1, i8** %__mptr, align 8, !dbg !23710
  br label %do.body, !dbg !23710

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !23711

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !23710
  %add.ptr = getelementptr i8, i8* %2, i64 -1008, !dbg !23710
  %3 = bitcast i8* %add.ptr to %struct.r8152*, !dbg !23710
  store %struct.r8152* %3, %struct.r8152** %tmp, align 8, !dbg !23711
  %4 = load %struct.r8152*, %struct.r8152** %tmp, align 8, !dbg !23710
  store %struct.r8152* %4, %struct.r8152** %tp, align 8, !dbg !23707
  %5 = load i64, i64* %action.addr, align 8, !dbg !23713
  switch i64 %5, label %sw.default [
    i64 1, label %sw.bb
    i64 3, label %sw.bb
    i64 2, label %sw.bb1
    i64 4, label %sw.bb1
    i64 6, label %sw.bb3
    i64 5, label %sw.bb3
  ], !dbg !23714

sw.bb:                                            ; preds = %do.end, %do.end
  %6 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !23715
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 3, !dbg !23717
  %7 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !23717
  %call = call i32 @usb_autopm_get_interface(%struct.usb_interface* %7) #13, !dbg !23718
  br label %sw.epilog, !dbg !23719

sw.bb1:                                           ; preds = %do.end, %do.end
  %8 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !23720
  %intf2 = getelementptr inbounds %struct.r8152, %struct.r8152* %8, i32 0, i32 3, !dbg !23721
  %9 = load %struct.usb_interface*, %struct.usb_interface** %intf2, align 8, !dbg !23721
  call void @usb_autopm_put_interface(%struct.usb_interface* %9) #13, !dbg !23722
  br label %sw.epilog, !dbg !23723

sw.bb3:                                           ; preds = %do.end, %do.end
  br label %sw.default, !dbg !23723

sw.default:                                       ; preds = %do.end, %sw.bb3
  br label %sw.epilog, !dbg !23724

sw.epilog:                                        ; preds = %sw.default, %sw.bb1, %sw.bb
  ret i32 0, !dbg !23725
}

; Function Attrs: noredzone
declare dso_local i32 @register_pm_notifier(%struct.notifier_block*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @free_all_mem(%struct.r8152* %tp) #2 !dbg !23726 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !15911, metadata !DIExpression()), !dbg !23727
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !14189, metadata !DIExpression()), !dbg !23731
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !14193, metadata !DIExpression()), !dbg !23733
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !15926, metadata !DIExpression()), !dbg !23734
  %lock.addr.i87 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i87, metadata !15428, metadata !DIExpression()), !dbg !23735
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !15435, metadata !DIExpression()), !dbg !23737
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !15437, metadata !DIExpression()), !dbg !23738
  %tp.addr = alloca %struct.r8152*, align 8
  %agg = alloca %struct.rx_agg*, align 8
  %agg_next = alloca %struct.rx_agg*, align 8
  %flags = alloca i64, align 8
  %i = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp21 = alloca %struct.rx_agg*, align 8
  %__mptr22 = alloca i8*, align 8
  %tmp26 = alloca %struct.rx_agg*, align 8
  %__mptr32 = alloca i8*, align 8
  %tmp37 = alloca %struct.rx_agg*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp58 = alloca i64, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !23745, metadata !DIExpression()), !dbg !23746
  call void @llvm.dbg.declare(metadata %struct.rx_agg** %agg, metadata !23747, metadata !DIExpression()), !dbg !23748
  call void @llvm.dbg.declare(metadata %struct.rx_agg** %agg_next, metadata !23749, metadata !DIExpression()), !dbg !23750
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !23751, metadata !DIExpression()), !dbg !23752
  call void @llvm.dbg.declare(metadata i32* %i, metadata !23753, metadata !DIExpression()), !dbg !23754
  br label %do.body, !dbg !23755

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !23756

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !23757, metadata !DIExpression()), !dbg !23759
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !23760, metadata !DIExpression()), !dbg !23759
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !23759
  %conv = zext i1 %cmp to i32, !dbg !23759
  store i32 1, i32* %tmp, align 4, !dbg !23759
  %0 = load i32, i32* %tmp, align 4, !dbg !23759
  br label %do.body2, !dbg !23761

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !23762

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !23763

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !23765, metadata !DIExpression()), !dbg !23768
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !23769, metadata !DIExpression()), !dbg !23768
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !23768
  %conv8 = zext i1 %cmp7 to i32, !dbg !23768
  store i32 1, i32* %tmp9, align 4, !dbg !23768
  %1 = load i32, i32* %tmp9, align 4, !dbg !23768
  %call = call i64 @arch_local_irq_save() #13, !dbg !23770
  store i64 %call, i64* %flags, align 8, !dbg !23770
  br label %do.end, !dbg !23770

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !23763

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !23762

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !23771, !srcloc !23772
  br label %do.body12, !dbg !23771

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23773
  %rx_lock = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 13, !dbg !23773
  store %struct.spinlock* %rx_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !23774
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !23775
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !23775
  br label %do.end14, !dbg !23773

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !23771

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !23762

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !23761

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !23756

do.end18:                                         ; preds = %do.end17
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !23776, metadata !DIExpression()), !dbg !23779
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23779
  %rx_info = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 7, !dbg !23779
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %rx_info, i32 0, i32 0, !dbg !23779
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !23779
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !23779
  store i8* %7, i8** %__mptr, align 8, !dbg !23779
  br label %do.body19, !dbg !23779

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !23780

do.end20:                                         ; preds = %do.body19
  %8 = load i8*, i8** %__mptr, align 8, !dbg !23779
  %add.ptr = getelementptr i8, i8* %8, i64 -16, !dbg !23779
  %9 = bitcast i8* %add.ptr to %struct.rx_agg*, !dbg !23779
  store %struct.rx_agg* %9, %struct.rx_agg** %tmp21, align 8, !dbg !23780
  %10 = load %struct.rx_agg*, %struct.rx_agg** %tmp21, align 8, !dbg !23779
  store %struct.rx_agg* %10, %struct.rx_agg** %agg, align 8, !dbg !23782
  call void @llvm.dbg.declare(metadata i8** %__mptr22, metadata !23783, metadata !DIExpression()), !dbg !23785
  %11 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !23785
  %info_list = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %11, i32 0, i32 1, !dbg !23785
  %next23 = getelementptr inbounds %struct.list_head, %struct.list_head* %info_list, i32 0, i32 0, !dbg !23785
  %12 = load %struct.list_head*, %struct.list_head** %next23, align 8, !dbg !23785
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !23785
  store i8* %13, i8** %__mptr22, align 8, !dbg !23785
  br label %do.body24, !dbg !23785

do.body24:                                        ; preds = %do.end20
  br label %do.end25, !dbg !23786

do.end25:                                         ; preds = %do.body24
  %14 = load i8*, i8** %__mptr22, align 8, !dbg !23785
  %add.ptr27 = getelementptr i8, i8* %14, i64 -16, !dbg !23785
  %15 = bitcast i8* %add.ptr27 to %struct.rx_agg*, !dbg !23785
  store %struct.rx_agg* %15, %struct.rx_agg** %tmp26, align 8, !dbg !23786
  %16 = load %struct.rx_agg*, %struct.rx_agg** %tmp26, align 8, !dbg !23785
  store %struct.rx_agg* %16, %struct.rx_agg** %agg_next, align 8, !dbg !23782
  br label %for.cond, !dbg !23782

for.cond:                                         ; preds = %do.end36, %do.end25
  %17 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !23788
  %info_list28 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %17, i32 0, i32 1, !dbg !23788
  %18 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23788
  %rx_info29 = getelementptr inbounds %struct.r8152, %struct.r8152* %18, i32 0, i32 7, !dbg !23788
  %cmp30 = icmp eq %struct.list_head* %info_list28, %rx_info29, !dbg !23788
  %lnot = xor i1 %cmp30, true, !dbg !23788
  br i1 %lnot, label %for.body, label %for.end, !dbg !23782

for.body:                                         ; preds = %for.cond
  %19 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23790
  %20 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !23791
  call void @free_rx_agg(%struct.r8152* %19, %struct.rx_agg* %20) #13, !dbg !23792
  br label %for.inc, !dbg !23792

for.inc:                                          ; preds = %for.body
  %21 = load %struct.rx_agg*, %struct.rx_agg** %agg_next, align 8, !dbg !23788
  store %struct.rx_agg* %21, %struct.rx_agg** %agg, align 8, !dbg !23788
  call void @llvm.dbg.declare(metadata i8** %__mptr32, metadata !23793, metadata !DIExpression()), !dbg !23795
  %22 = load %struct.rx_agg*, %struct.rx_agg** %agg_next, align 8, !dbg !23795
  %info_list33 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %22, i32 0, i32 1, !dbg !23795
  %next34 = getelementptr inbounds %struct.list_head, %struct.list_head* %info_list33, i32 0, i32 0, !dbg !23795
  %23 = load %struct.list_head*, %struct.list_head** %next34, align 8, !dbg !23795
  %24 = bitcast %struct.list_head* %23 to i8*, !dbg !23795
  store i8* %24, i8** %__mptr32, align 8, !dbg !23795
  br label %do.body35, !dbg !23795

do.body35:                                        ; preds = %for.inc
  br label %do.end36, !dbg !23796

do.end36:                                         ; preds = %do.body35
  %25 = load i8*, i8** %__mptr32, align 8, !dbg !23795
  %add.ptr38 = getelementptr i8, i8* %25, i64 -16, !dbg !23795
  %26 = bitcast i8* %add.ptr38 to %struct.rx_agg*, !dbg !23795
  store %struct.rx_agg* %26, %struct.rx_agg** %tmp37, align 8, !dbg !23796
  %27 = load %struct.rx_agg*, %struct.rx_agg** %tmp37, align 8, !dbg !23795
  store %struct.rx_agg* %27, %struct.rx_agg** %agg_next, align 8, !dbg !23788
  br label %for.cond, !dbg !23788, !llvm.loop !23798

for.end:                                          ; preds = %for.cond
  %28 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23800
  %rx_lock39 = getelementptr inbounds %struct.r8152, %struct.r8152* %28, i32 0, i32 13, !dbg !23801
  %29 = load i64, i64* %flags, align 8, !dbg !23802
  store %struct.spinlock* %rx_lock39, %struct.spinlock** %lock.addr.i87, align 8
  store i64 %29, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !820, metadata !15497, metadata !DIExpression()) #11, !dbg !23803
  call void @llvm.dbg.declare(metadata !820, metadata !15501, metadata !DIExpression()) #11, !dbg !23803
  store i32 1, i32* %tmp.i, align 4, !dbg !23803
  %30 = load i32, i32* %tmp.i, align 4, !dbg !23803
  call void @llvm.dbg.declare(metadata !820, metadata !15502, metadata !DIExpression()) #11, !dbg !23804
  call void @llvm.dbg.declare(metadata !820, metadata !15508, metadata !DIExpression()) #11, !dbg !23804
  store i32 1, i32* %tmp8.i, align 4, !dbg !23804
  %31 = load i32, i32* %tmp8.i, align 4, !dbg !23804
  %32 = load i64, i64* %flags.addr.i, align 8, !dbg !23805
  call void @arch_local_irq_restore(i64 %32) #16, !dbg !23805
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !23806, !srcloc !15512
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i87, align 8, !dbg !23807
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !23807
  %rlock.i88 = bitcast %union.anon.1* %34 to %struct.raw_spinlock*, !dbg !23807
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !23808, metadata !DIExpression()), !dbg !23809
  %35 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23809
  %rx_count = getelementptr inbounds %struct.r8152, %struct.r8152* %35, i32 0, i32 24, !dbg !23809
  store %struct.atomic_t* %rx_count, %struct.atomic_t** %v.addr.i, align 8
  %36 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !23810
  %37 = bitcast %struct.atomic_t* %36 to i8*, !dbg !23810
  store i8* %37, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %38 = load i8*, i8** %v.addr.i.i, align 8, !dbg !23811
  %39 = load i64, i64* %size.addr.i.i, align 8, !dbg !23812
  %conv.i.i = trunc i64 %39 to i32, !dbg !23812
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %38, i32 %conv.i.i) #16, !dbg !23813
  %40 = load i8*, i8** %v.addr.i.i, align 8, !dbg !23814
  %41 = load i64, i64* %size.addr.i.i, align 8, !dbg !23814
  call void @kcsan_check_access(i8* %40, i64 %41, i32 4) #16, !dbg !23814
  %42 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !23815
  store %struct.atomic_t* %42, %struct.atomic_t** %v.addr.i1.i, align 8
  %43 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !23816
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %43, i32 0, i32 0, !dbg !23816
  %44 = load volatile i32, i32* %counter.i.i, align 4, !dbg !23816
  %tobool = icmp ne i32 %44, 0, !dbg !23809
  %lnot41 = xor i1 %tobool, true, !dbg !23809
  %lnot42 = xor i1 %lnot41, true, !dbg !23809
  %lnot.ext = zext i1 %lnot42 to i32, !dbg !23809
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !23809
  %45 = load i32, i32* %__ret_warn_on, align 4, !dbg !23817
  %tobool43 = icmp ne i32 %45, 0, !dbg !23817
  %lnot44 = xor i1 %tobool43, true, !dbg !23817
  %lnot46 = xor i1 %lnot44, true, !dbg !23817
  %lnot.ext47 = zext i1 %lnot46 to i32, !dbg !23817
  %conv48 = sext i32 %lnot.ext47 to i64, !dbg !23817
  %tobool49 = icmp ne i64 %conv48, 0, !dbg !23817
  br i1 %tobool49, label %if.then, label %if.end, !dbg !23809

if.then:                                          ; preds = %for.end
  br label %do.body50, !dbg !23817

do.body50:                                        ; preds = %if.then
  br label %do.body51, !dbg !23819

do.body51:                                        ; preds = %do.body50
  br label %do.end52, !dbg !23821

do.end52:                                         ; preds = %do.body51
  br label %do.body53, !dbg !23819

do.body53:                                        ; preds = %do.end52
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 1800, i32 2305, i64 12) #11, !dbg !23823, !srcloc !23825
  br label %do.end54, !dbg !23823

do.end54:                                         ; preds = %do.body53
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 563) #11, !dbg !23826, !srcloc !23828
  br label %do.body55, !dbg !23819

do.body55:                                        ; preds = %do.end54
  br label %do.end56, !dbg !23829

do.end56:                                         ; preds = %do.body55
  br label %do.end57, !dbg !23819

do.end57:                                         ; preds = %do.end56
  br label %if.end, !dbg !23819

if.end:                                           ; preds = %do.end57, %for.end
  %46 = load i32, i32* %__ret_warn_on, align 4, !dbg !23809
  %tobool59 = icmp ne i32 %46, 0, !dbg !23809
  %lnot60 = xor i1 %tobool59, true, !dbg !23809
  %lnot62 = xor i1 %lnot60, true, !dbg !23809
  %lnot.ext63 = zext i1 %lnot62 to i32, !dbg !23809
  %conv64 = sext i32 %lnot.ext63 to i64, !dbg !23809
  store i64 %conv64, i64* %tmp58, align 8, !dbg !23817
  %47 = load i64, i64* %tmp58, align 8, !dbg !23809
  store i32 0, i32* %i, align 4, !dbg !23831
  br label %for.cond65, !dbg !23833

for.cond65:                                       ; preds = %for.inc83, %if.end
  %48 = load i32, i32* %i, align 4, !dbg !23834
  %cmp66 = icmp slt i32 %48, 4, !dbg !23836
  br i1 %cmp66, label %for.body68, label %for.end84, !dbg !23837

for.body68:                                       ; preds = %for.cond65
  %49 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23838
  %tx_info = getelementptr inbounds %struct.r8152, %struct.r8152* %49, i32 0, i32 6, !dbg !23840
  %50 = load i32, i32* %i, align 4, !dbg !23841
  %idxprom = sext i32 %50 to i64, !dbg !23838
  %arrayidx = getelementptr [4 x %struct.tx_agg], [4 x %struct.tx_agg]* %tx_info, i64 0, i64 %idxprom, !dbg !23838
  %urb = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %arrayidx, i32 0, i32 1, !dbg !23842
  %51 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !23842
  call void @usb_free_urb(%struct.urb* %51) #13, !dbg !23843
  %52 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23844
  %tx_info69 = getelementptr inbounds %struct.r8152, %struct.r8152* %52, i32 0, i32 6, !dbg !23845
  %53 = load i32, i32* %i, align 4, !dbg !23846
  %idxprom70 = sext i32 %53 to i64, !dbg !23844
  %arrayidx71 = getelementptr [4 x %struct.tx_agg], [4 x %struct.tx_agg]* %tx_info69, i64 0, i64 %idxprom70, !dbg !23844
  %urb72 = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %arrayidx71, i32 0, i32 1, !dbg !23847
  store %struct.urb* null, %struct.urb** %urb72, align 8, !dbg !23848
  %54 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23849
  %tx_info73 = getelementptr inbounds %struct.r8152, %struct.r8152* %54, i32 0, i32 6, !dbg !23850
  %55 = load i32, i32* %i, align 4, !dbg !23851
  %idxprom74 = sext i32 %55 to i64, !dbg !23849
  %arrayidx75 = getelementptr [4 x %struct.tx_agg], [4 x %struct.tx_agg]* %tx_info73, i64 0, i64 %idxprom74, !dbg !23849
  %buffer = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %arrayidx75, i32 0, i32 3, !dbg !23852
  %56 = load i8*, i8** %buffer, align 8, !dbg !23852
  call void @kfree(i8* %56) #13, !dbg !23853
  %57 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23854
  %tx_info76 = getelementptr inbounds %struct.r8152, %struct.r8152* %57, i32 0, i32 6, !dbg !23855
  %58 = load i32, i32* %i, align 4, !dbg !23856
  %idxprom77 = sext i32 %58 to i64, !dbg !23854
  %arrayidx78 = getelementptr [4 x %struct.tx_agg], [4 x %struct.tx_agg]* %tx_info76, i64 0, i64 %idxprom77, !dbg !23854
  %buffer79 = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %arrayidx78, i32 0, i32 3, !dbg !23857
  store i8* null, i8** %buffer79, align 8, !dbg !23858
  %59 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23859
  %tx_info80 = getelementptr inbounds %struct.r8152, %struct.r8152* %59, i32 0, i32 6, !dbg !23860
  %60 = load i32, i32* %i, align 4, !dbg !23861
  %idxprom81 = sext i32 %60 to i64, !dbg !23859
  %arrayidx82 = getelementptr [4 x %struct.tx_agg], [4 x %struct.tx_agg]* %tx_info80, i64 0, i64 %idxprom81, !dbg !23859
  %head = getelementptr inbounds %struct.tx_agg, %struct.tx_agg* %arrayidx82, i32 0, i32 4, !dbg !23862
  store i8* null, i8** %head, align 8, !dbg !23863
  br label %for.inc83, !dbg !23864

for.inc83:                                        ; preds = %for.body68
  %61 = load i32, i32* %i, align 4, !dbg !23865
  %inc = add i32 %61, 1, !dbg !23865
  store i32 %inc, i32* %i, align 4, !dbg !23865
  br label %for.cond65, !dbg !23866, !llvm.loop !23867

for.end84:                                        ; preds = %for.cond65
  %62 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23869
  %intr_urb = getelementptr inbounds %struct.r8152, %struct.r8152* %62, i32 0, i32 5, !dbg !23870
  %63 = load %struct.urb*, %struct.urb** %intr_urb, align 8, !dbg !23870
  call void @usb_free_urb(%struct.urb* %63) #13, !dbg !23871
  %64 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23872
  %intr_urb85 = getelementptr inbounds %struct.r8152, %struct.r8152* %64, i32 0, i32 5, !dbg !23873
  store %struct.urb* null, %struct.urb** %intr_urb85, align 8, !dbg !23874
  %65 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23875
  %intr_buff = getelementptr inbounds %struct.r8152, %struct.r8152* %65, i32 0, i32 38, !dbg !23876
  %66 = load i8*, i8** %intr_buff, align 8, !dbg !23876
  call void @kfree(i8* %66) #13, !dbg !23877
  %67 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23878
  %intr_buff86 = getelementptr inbounds %struct.r8152, %struct.r8152* %67, i32 0, i32 38, !dbg !23879
  store i8* null, i8** %intr_buff86, align 8, !dbg !23880
  ret void, !dbg !23881
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dev_to_node(%struct.device* %dev) #2 !dbg !23882 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !23883, metadata !DIExpression()), !dbg !23884
  ret i32 -1, !dbg !23885
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_queue_head_init(%struct.sk_buff_head* %list) #2 !dbg !23886 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !15437, metadata !DIExpression()), !dbg !23887
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !23890, metadata !DIExpression()), !dbg !23891
  br label %do.body, !dbg !23892

do.body:                                          ; preds = %entry
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !23893
  %lock = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %0, i32 0, i32 3, !dbg !23893
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !23894
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !23895
  %rlock.i = bitcast %union.anon.1* %2 to %struct.raw_spinlock*, !dbg !23895
  %3 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !23893
  %lock1 = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %3, i32 0, i32 3, !dbg !23893
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !23893
  %rlock = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !23893
  %5 = bitcast %struct.spinlock* %lock1 to i8*, !dbg !23893
  %6 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !23893
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 1 %6, i64 0, i1 false), !dbg !23893
  br label %do.end, !dbg !23893

do.end:                                           ; preds = %do.body
  %7 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !23896
  call void @__skb_queue_head_init(%struct.sk_buff_head* %7) #13, !dbg !23897
  ret void, !dbg !23898
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.rx_agg* @alloc_rx_agg(%struct.r8152* %tp, i32 %mflags) #2 !dbg !23899 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !22250, metadata !DIExpression()), !dbg !23902
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !15953, metadata !DIExpression()), !dbg !23905
  %size.addr.i.i45 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i45, metadata !15957, metadata !DIExpression()), !dbg !23907
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !22259, metadata !DIExpression()), !dbg !23908
  %lock.addr.i42 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i42, metadata !15428, metadata !DIExpression()), !dbg !23909
  %flags.addr.i43 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i43, metadata !15435, metadata !DIExpression()), !dbg !23911
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !15437, metadata !DIExpression()), !dbg !23912
  %page.addr.i = alloca %struct.page*, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr.i, metadata !23919, metadata !DIExpression()), !dbg !23925
  %size.addr.i13.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i13.i, metadata !22872, metadata !DIExpression()), !dbg !23927
  %flags.addr.i14.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i14.i, metadata !22885, metadata !DIExpression()), !dbg !23930
  %node.addr.i15.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i15.i, metadata !22887, metadata !DIExpression()), !dbg !23931
  %s.addr.i.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i.i, metadata !22889, metadata !DIExpression()), !dbg !23932
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !22901, metadata !DIExpression()), !dbg !23935
  %node.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i.i.i, metadata !22903, metadata !DIExpression()), !dbg !23936
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !22905, metadata !DIExpression()), !dbg !23937
  %gfpflags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %gfpflags.addr.i.i, metadata !22907, metadata !DIExpression()), !dbg !23938
  %node.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i.i, metadata !22909, metadata !DIExpression()), !dbg !23939
  %size.addr.i12.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i12.i, metadata !22911, metadata !DIExpression()), !dbg !23940
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !22913, metadata !DIExpression()), !dbg !23941
  %retval.i8.i = alloca i32, align 4
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !11612, metadata !DIExpression()), !dbg !23942
  %retval.i.i = alloca i32, align 4
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !11618, metadata !DIExpression()), !dbg !23944
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !22919, metadata !DIExpression()), !dbg !23946
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !22921, metadata !DIExpression()), !dbg !23947
  %node.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i, metadata !22923, metadata !DIExpression()), !dbg !23948
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !22925, metadata !DIExpression()), !dbg !23949
  %retval = alloca %struct.rx_agg*, align 8
  %tp.addr = alloca %struct.r8152*, align 8
  %mflags.addr = alloca i32, align 4
  %netdev = alloca %struct.net_device*, align 8
  %node = alloca i32, align 4
  %order = alloca i32, align 4
  %rx_agg = alloca %struct.rx_agg*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy24 = alloca i64, align 8
  %__dummy225 = alloca i64, align 8
  %tmp28 = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !23950, metadata !DIExpression()), !dbg !23951
  store i32 %mflags, i32* %mflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mflags.addr, metadata !23952, metadata !DIExpression()), !dbg !23953
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !23954, metadata !DIExpression()), !dbg !23955
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23956
  %netdev1 = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 4, !dbg !23957
  %1 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !23957
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !23955
  call void @llvm.dbg.declare(metadata i32* %node, metadata !23958, metadata !DIExpression()), !dbg !23959
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23960
  %dev = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 106, !dbg !23961
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !23962
  %3 = load %struct.device*, %struct.device** %parent, align 8, !dbg !23962
  %tobool = icmp ne %struct.device* %3, null, !dbg !23960
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !23960

cond.true:                                        ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23963
  %dev2 = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 106, !dbg !23964
  %parent3 = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 1, !dbg !23965
  %5 = load %struct.device*, %struct.device** %parent3, align 8, !dbg !23965
  %call = call i32 @dev_to_node(%struct.device* %5) #13, !dbg !23966
  br label %cond.end, !dbg !23960

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !23960

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ -1, %cond.false ], !dbg !23960
  store i32 %cond, i32* %node, align 4, !dbg !23959
  call void @llvm.dbg.declare(metadata i32* %order, metadata !23967, metadata !DIExpression()), !dbg !23968
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !23969
  %rx_buf_sz = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 32, !dbg !23970
  %7 = load i32, i32* %rx_buf_sz, align 8, !dbg !23970
  %conv = zext i32 %7 to i64, !dbg !23969
  %call4 = call i32 @get_order(i64 %conv) #15, !dbg !23971
  store i32 %call4, i32* %order, align 4, !dbg !23968
  call void @llvm.dbg.declare(metadata %struct.rx_agg** %rx_agg, metadata !23972, metadata !DIExpression()), !dbg !23973
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !23974, metadata !DIExpression()), !dbg !23975
  %8 = load i32, i32* %mflags.addr, align 4, !dbg !23976
  %9 = load i32, i32* %node, align 4, !dbg !23977
  store i64 64, i64* %size.addr.i, align 8
  store i32 %8, i32* %flags.addr.i, align 4
  store i32 %9, i32* %node.addr.i, align 4
  %10 = load i64, i64* %size.addr.i, align 8, !dbg !23978
  %11 = call i1 @llvm.is.constant.i64(i64 %10) #11, !dbg !23979
  br i1 %11, label %land.lhs.true.i, label %if.end6.i, !dbg !23980

land.lhs.true.i:                                  ; preds = %cond.end
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !23981
  %cmp.i = icmp ule i64 %12, 8192, !dbg !23982
  br i1 %cmp.i, label %if.then.i, label %if.end6.i, !dbg !23983

if.then.i:                                        ; preds = %land.lhs.true.i
  %13 = load i64, i64* %size.addr.i, align 8, !dbg !23984
  store i64 %13, i64* %size.addr.i.i, align 8
  %14 = load i64, i64* %size.addr.i.i, align 8, !dbg !23985
  %tobool.i.i = icmp ne i64 %14, 0, !dbg !23985
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !23986

if.then.i.i:                                      ; preds = %if.then.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !23987
  br label %kmalloc_index.exit.i, !dbg !23987

if.end.i.i:                                       ; preds = %if.then.i
  %15 = load i64, i64* %size.addr.i.i, align 8, !dbg !23988
  %cmp.i.i = icmp ule i64 %15, 8, !dbg !23989
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !23990

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !23991
  br label %kmalloc_index.exit.i, !dbg !23991

if.end2.i.i:                                      ; preds = %if.end.i.i
  %16 = load i64, i64* %size.addr.i.i, align 8, !dbg !23992
  %cmp3.i.i = icmp ugt i64 %16, 64, !dbg !23993
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !23994

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %17 = load i64, i64* %size.addr.i.i, align 8, !dbg !23995
  %cmp4.i.i = icmp ule i64 %17, 96, !dbg !23996
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !23997

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !23998
  br label %kmalloc_index.exit.i, !dbg !23998

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %18 = load i64, i64* %size.addr.i.i, align 8, !dbg !23999
  %cmp7.i.i = icmp ugt i64 %18, 128, !dbg !24000
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !24001

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %19 = load i64, i64* %size.addr.i.i, align 8, !dbg !24002
  %cmp9.i.i = icmp ule i64 %19, 192, !dbg !24003
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !24004

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !24005
  br label %kmalloc_index.exit.i, !dbg !24005

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %20 = load i64, i64* %size.addr.i.i, align 8, !dbg !24006
  %cmp12.i.i = icmp ule i64 %20, 8, !dbg !24007
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !24008

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !24009
  br label %kmalloc_index.exit.i, !dbg !24009

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !24010
  %cmp15.i.i = icmp ule i64 %21, 16, !dbg !24011
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !24012

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !24013
  br label %kmalloc_index.exit.i, !dbg !24013

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !24014
  %cmp18.i.i = icmp ule i64 %22, 32, !dbg !24015
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !24016

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !24017
  br label %kmalloc_index.exit.i, !dbg !24017

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %23 = load i64, i64* %size.addr.i.i, align 8, !dbg !24018
  %cmp21.i.i = icmp ule i64 %23, 64, !dbg !24019
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !24020

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !24021
  br label %kmalloc_index.exit.i, !dbg !24021

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %24 = load i64, i64* %size.addr.i.i, align 8, !dbg !24022
  %cmp24.i.i = icmp ule i64 %24, 128, !dbg !24023
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !24024

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !24025
  br label %kmalloc_index.exit.i, !dbg !24025

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %25 = load i64, i64* %size.addr.i.i, align 8, !dbg !24026
  %cmp27.i.i = icmp ule i64 %25, 256, !dbg !24027
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !24028

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !24029
  br label %kmalloc_index.exit.i, !dbg !24029

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %26 = load i64, i64* %size.addr.i.i, align 8, !dbg !24030
  %cmp30.i.i = icmp ule i64 %26, 512, !dbg !24031
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !24032

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !24033
  br label %kmalloc_index.exit.i, !dbg !24033

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %27 = load i64, i64* %size.addr.i.i, align 8, !dbg !24034
  %cmp33.i.i = icmp ule i64 %27, 1024, !dbg !24035
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !24036

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !24037
  br label %kmalloc_index.exit.i, !dbg !24037

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %28 = load i64, i64* %size.addr.i.i, align 8, !dbg !24038
  %cmp36.i.i = icmp ule i64 %28, 2048, !dbg !24039
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !24040

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !24041
  br label %kmalloc_index.exit.i, !dbg !24041

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %29 = load i64, i64* %size.addr.i.i, align 8, !dbg !24042
  %cmp39.i.i = icmp ule i64 %29, 4096, !dbg !24043
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !24044

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !24045
  br label %kmalloc_index.exit.i, !dbg !24045

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %30 = load i64, i64* %size.addr.i.i, align 8, !dbg !24046
  %cmp42.i.i = icmp ule i64 %30, 8192, !dbg !24047
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !24048

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !24049
  br label %kmalloc_index.exit.i, !dbg !24049

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %31 = load i64, i64* %size.addr.i.i, align 8, !dbg !24050
  %cmp45.i.i = icmp ule i64 %31, 16384, !dbg !24051
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !24052

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !24053
  br label %kmalloc_index.exit.i, !dbg !24053

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %32 = load i64, i64* %size.addr.i.i, align 8, !dbg !24054
  %cmp48.i.i = icmp ule i64 %32, 32768, !dbg !24055
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !24056

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !24057
  br label %kmalloc_index.exit.i, !dbg !24057

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %33 = load i64, i64* %size.addr.i.i, align 8, !dbg !24058
  %cmp51.i.i = icmp ule i64 %33, 65536, !dbg !24059
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !24060

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !24061
  br label %kmalloc_index.exit.i, !dbg !24061

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %34 = load i64, i64* %size.addr.i.i, align 8, !dbg !24062
  %cmp54.i.i = icmp ule i64 %34, 131072, !dbg !24063
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !24064

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !24065
  br label %kmalloc_index.exit.i, !dbg !24065

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %35 = load i64, i64* %size.addr.i.i, align 8, !dbg !24066
  %cmp57.i.i = icmp ule i64 %35, 262144, !dbg !24067
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !24068

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !24069
  br label %kmalloc_index.exit.i, !dbg !24069

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %36 = load i64, i64* %size.addr.i.i, align 8, !dbg !24070
  %cmp60.i.i = icmp ule i64 %36, 524288, !dbg !24071
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !24072

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !24073
  br label %kmalloc_index.exit.i, !dbg !24073

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %37 = load i64, i64* %size.addr.i.i, align 8, !dbg !24074
  %cmp63.i.i = icmp ule i64 %37, 1048576, !dbg !24075
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !24076

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !24077
  br label %kmalloc_index.exit.i, !dbg !24077

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %38 = load i64, i64* %size.addr.i.i, align 8, !dbg !24078
  %cmp66.i.i = icmp ule i64 %38, 2097152, !dbg !24079
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !24080

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !24081
  br label %kmalloc_index.exit.i, !dbg !24081

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %39 = load i64, i64* %size.addr.i.i, align 8, !dbg !24082
  %cmp69.i.i = icmp ule i64 %39, 4194304, !dbg !24083
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !24084

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !24085
  br label %kmalloc_index.exit.i, !dbg !24085

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %40 = load i64, i64* %size.addr.i.i, align 8, !dbg !24086
  %cmp72.i.i = icmp ule i64 %40, 8388608, !dbg !24087
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !24088

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !24089
  br label %kmalloc_index.exit.i, !dbg !24089

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %41 = load i64, i64* %size.addr.i.i, align 8, !dbg !24090
  %cmp75.i.i = icmp ule i64 %41, 16777216, !dbg !24091
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !24092

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !24093
  br label %kmalloc_index.exit.i, !dbg !24093

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %42 = load i64, i64* %size.addr.i.i, align 8, !dbg !24094
  %cmp78.i.i = icmp ule i64 %42, 33554432, !dbg !24095
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !24096

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !24097
  br label %kmalloc_index.exit.i, !dbg !24097

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %43 = load i64, i64* %size.addr.i.i, align 8, !dbg !24098
  %cmp81.i.i = icmp ule i64 %43, 67108864, !dbg !24099
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !24100

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !24101
  br label %kmalloc_index.exit.i, !dbg !24101

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #11, !dbg !24102, !srcloc !11831
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 93) #11, !dbg !24103, !srcloc !11835
  unreachable, !dbg !24104

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %44 = load i32, i32* %retval.i.i, align 4, !dbg !24105
  store i32 %44, i32* %i.i, align 4, !dbg !23949
  %45 = load i32, i32* %i.i, align 4, !dbg !24106
  %tobool.i = icmp ne i32 %45, 0, !dbg !24106
  br i1 %tobool.i, label %if.end.i, label %if.then1.i, !dbg !24107

if.then1.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !24108
  br label %kmalloc_node.exit, !dbg !24108

if.end.i:                                         ; preds = %kmalloc_index.exit.i
  %46 = load i32, i32* %flags.addr.i, align 4, !dbg !24109
  store i32 %46, i32* %flags.addr.i.i, align 4
  %47 = load i32, i32* %flags.addr.i.i, align 4, !dbg !24110
  %and.i.i = and i32 %47, 17, !dbg !24110
  %cmp.i9.i = icmp eq i32 %and.i.i, 0, !dbg !24110
  %lnot.i.i = xor i1 %cmp.i9.i, true, !dbg !24110
  %lnot.ext.i.i = zext i1 %cmp.i9.i to i32, !dbg !24110
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !24110
  br i1 %cmp.i9.i, label %if.then.i10.i, label %if.end.i11.i, !dbg !24111

if.then.i10.i:                                    ; preds = %if.end.i
  store i32 0, i32* %retval.i8.i, align 4, !dbg !24112
  br label %kmalloc_type.exit.i, !dbg !24112

if.end.i11.i:                                     ; preds = %if.end.i
  %48 = load i32, i32* %flags.addr.i.i, align 4, !dbg !24113
  %and2.i.i = and i32 %48, 1, !dbg !24114
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !24113
  %49 = zext i1 %tobool3.i.i to i64, !dbg !24113
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !24113
  store i32 %cond.i.i, i32* %retval.i8.i, align 4, !dbg !24115
  br label %kmalloc_type.exit.i, !dbg !24115

kmalloc_type.exit.i:                              ; preds = %if.end.i11.i, %if.then.i10.i
  %50 = load i32, i32* %retval.i8.i, align 4, !dbg !24116
  %idxprom.i = zext i32 %50 to i64, !dbg !24117
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !24117
  %51 = load i32, i32* %i.i, align 4, !dbg !24118
  %idxprom3.i = zext i32 %51 to i64, !dbg !24117
  %arrayidx4.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom3.i, !dbg !24117
  %52 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx4.i, align 8, !dbg !24117
  %53 = load i32, i32* %flags.addr.i, align 4, !dbg !24119
  %54 = load i32, i32* %node.addr.i, align 4, !dbg !24120
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !24121
  store %struct.kmem_cache* %52, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %53, i32* %gfpflags.addr.i.i, align 4
  store i32 %54, i32* %node.addr.i.i, align 4
  store i64 %55, i64* %size.addr.i12.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !24122
  %57 = load i32, i32* %gfpflags.addr.i.i, align 4, !dbg !24123
  %58 = load i32, i32* %node.addr.i.i, align 4, !dbg !24124
  store %struct.kmem_cache* %56, %struct.kmem_cache** %s.addr.i.i.i, align 8
  store i32 %57, i32* %flags.addr.i.i.i, align 4
  store i32 %58, i32* %node.addr.i.i.i, align 4
  %59 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i.i, align 8, !dbg !24125
  %60 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !24126
  %call.i.i.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %59, i32 %60) #16, !dbg !24127
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !24127
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 7, !dbg !24127
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !24127
  call void @llvm.assume(i1 %maskcond.i.i.i) #11, !dbg !24127
  store i8* %call.i.i.i, i8** %ret.i.i, align 8, !dbg !23941
  %61 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !24128
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !24129
  %63 = load i64, i64* %size.addr.i12.i, align 8, !dbg !24130
  %64 = load i32, i32* %gfpflags.addr.i.i, align 4, !dbg !24131
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %61, i8* %62, i64 %63, i32 %64) #16, !dbg !24132
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !24133
  %65 = load i8*, i8** %ret.i.i, align 8, !dbg !24134
  store i8* %65, i8** %retval.i, align 8, !dbg !24135
  br label %kmalloc_node.exit, !dbg !24135

if.end6.i:                                        ; preds = %land.lhs.true.i, %cond.end
  %66 = load i64, i64* %size.addr.i, align 8, !dbg !24136
  %67 = load i32, i32* %flags.addr.i, align 4, !dbg !24137
  %68 = load i32, i32* %node.addr.i, align 4, !dbg !24138
  store i64 %66, i64* %size.addr.i13.i, align 8
  store i32 %67, i32* %flags.addr.i14.i, align 4
  store i32 %68, i32* %node.addr.i15.i, align 4
  %69 = load i64, i64* %size.addr.i13.i, align 8, !dbg !24139
  %70 = load i32, i32* %flags.addr.i14.i, align 4, !dbg !24140
  %call.i.i = call noalias i8* @__kmalloc(i64 %69, i32 %70) #16, !dbg !24141
  %ptrint.i.i = ptrtoint i8* %call.i.i to i64, !dbg !24141
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !24141
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !24141
  call void @llvm.assume(i1 %maskcond.i.i) #11, !dbg !24141
  store i8* %call.i.i, i8** %retval.i, align 8, !dbg !24142
  br label %kmalloc_node.exit, !dbg !24142

kmalloc_node.exit:                                ; preds = %if.then1.i, %kmalloc_type.exit.i, %if.end6.i
  %71 = load i8*, i8** %retval.i, align 8, !dbg !24143
  %72 = bitcast i8* %71 to %struct.rx_agg*, !dbg !24144
  store %struct.rx_agg* %72, %struct.rx_agg** %rx_agg, align 8, !dbg !24145
  %73 = load %struct.rx_agg*, %struct.rx_agg** %rx_agg, align 8, !dbg !24146
  %tobool6 = icmp ne %struct.rx_agg* %73, null, !dbg !24146
  br i1 %tobool6, label %if.end, label %if.then, !dbg !24148

if.then:                                          ; preds = %kmalloc_node.exit
  store %struct.rx_agg* null, %struct.rx_agg** %retval, align 8, !dbg !24149
  br label %return, !dbg !24149

if.end:                                           ; preds = %kmalloc_node.exit
  %74 = load i32, i32* %mflags.addr, align 4, !dbg !24150
  %or = or i32 %74, 262144, !dbg !24151
  %75 = load i32, i32* %order, align 4, !dbg !24152
  %call7 = call %struct.page* @alloc_pages(i32 %or, i32 %75) #13, !dbg !24153
  %76 = load %struct.rx_agg*, %struct.rx_agg** %rx_agg, align 8, !dbg !24154
  %page = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %76, i32 0, i32 4, !dbg !24155
  store %struct.page* %call7, %struct.page** %page, align 8, !dbg !24156
  %77 = load %struct.rx_agg*, %struct.rx_agg** %rx_agg, align 8, !dbg !24157
  %page8 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %77, i32 0, i32 4, !dbg !24159
  %78 = load %struct.page*, %struct.page** %page8, align 8, !dbg !24159
  %tobool9 = icmp ne %struct.page* %78, null, !dbg !24157
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !24160

if.then10:                                        ; preds = %if.end
  br label %free_rx, !dbg !24161

if.end11:                                         ; preds = %if.end
  %79 = load %struct.rx_agg*, %struct.rx_agg** %rx_agg, align 8, !dbg !24162
  %page12 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %79, i32 0, i32 4, !dbg !24162
  %80 = load %struct.page*, %struct.page** %page12, align 8, !dbg !24162
  store %struct.page* %80, %struct.page** %page.addr.i, align 8
  %81 = load %struct.page*, %struct.page** %page.addr.i, align 8, !dbg !24163
  %82 = load i64, i64* @vmemmap_base, align 8, !dbg !24163
  %83 = inttoptr i64 %82 to %struct.page*, !dbg !24163
  %sub.ptr.lhs.cast.i = ptrtoint %struct.page* %81 to i64, !dbg !24163
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %82, !dbg !24163
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 64, !dbg !24163
  %shl.i = shl i64 %sub.ptr.div.i, 12, !dbg !24163
  %84 = load i64, i64* @page_offset_base, align 8, !dbg !24163
  %add.i = add i64 %shl.i, %84, !dbg !24163
  %85 = inttoptr i64 %add.i to i8*, !dbg !24163
  %86 = load %struct.rx_agg*, %struct.rx_agg** %rx_agg, align 8, !dbg !24164
  %buffer = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %86, i32 0, i32 5, !dbg !24165
  store i8* %85, i8** %buffer, align 8, !dbg !24166
  %87 = load i32, i32* %mflags.addr, align 4, !dbg !24167
  %call14 = call %struct.urb* @usb_alloc_urb(i32 0, i32 %87) #13, !dbg !24168
  %88 = load %struct.rx_agg*, %struct.rx_agg** %rx_agg, align 8, !dbg !24169
  %urb = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %88, i32 0, i32 2, !dbg !24170
  store %struct.urb* %call14, %struct.urb** %urb, align 8, !dbg !24171
  %89 = load %struct.rx_agg*, %struct.rx_agg** %rx_agg, align 8, !dbg !24172
  %urb15 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %89, i32 0, i32 2, !dbg !24174
  %90 = load %struct.urb*, %struct.urb** %urb15, align 8, !dbg !24174
  %tobool16 = icmp ne %struct.urb* %90, null, !dbg !24172
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !24175

if.then17:                                        ; preds = %if.end11
  br label %free_buf, !dbg !24176

if.end18:                                         ; preds = %if.end11
  %91 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !24177
  %92 = load %struct.rx_agg*, %struct.rx_agg** %rx_agg, align 8, !dbg !24178
  %context = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %92, i32 0, i32 3, !dbg !24179
  store %struct.r8152* %91, %struct.r8152** %context, align 8, !dbg !24180
  %93 = load %struct.rx_agg*, %struct.rx_agg** %rx_agg, align 8, !dbg !24181
  %list = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %93, i32 0, i32 0, !dbg !24182
  call void @INIT_LIST_HEAD(%struct.list_head* %list) #13, !dbg !24183
  %94 = load %struct.rx_agg*, %struct.rx_agg** %rx_agg, align 8, !dbg !24184
  %info_list = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %94, i32 0, i32 1, !dbg !24185
  call void @INIT_LIST_HEAD(%struct.list_head* %info_list) #13, !dbg !24186
  br label %do.body, !dbg !24187

do.body:                                          ; preds = %if.end18
  br label %do.body19, !dbg !24188

do.body19:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !24189, metadata !DIExpression()), !dbg !24191
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !24192, metadata !DIExpression()), !dbg !24191
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !24191
  %conv20 = zext i1 %cmp to i32, !dbg !24191
  store i32 1, i32* %tmp, align 4, !dbg !24191
  %95 = load i32, i32* %tmp, align 4, !dbg !24191
  br label %do.body21, !dbg !24193

do.body21:                                        ; preds = %do.body19
  br label %do.body22, !dbg !24194

do.body22:                                        ; preds = %do.body21
  br label %do.body23, !dbg !24195

do.body23:                                        ; preds = %do.body22
  call void @llvm.dbg.declare(metadata i64* %__dummy24, metadata !24197, metadata !DIExpression()), !dbg !24200
  call void @llvm.dbg.declare(metadata i64* %__dummy225, metadata !24201, metadata !DIExpression()), !dbg !24200
  %cmp26 = icmp eq i64* %__dummy24, %__dummy225, !dbg !24200
  %conv27 = zext i1 %cmp26 to i32, !dbg !24200
  store i32 1, i32* %tmp28, align 4, !dbg !24200
  %96 = load i32, i32* %tmp28, align 4, !dbg !24200
  %call29 = call i64 @arch_local_irq_save() #13, !dbg !24202
  store i64 %call29, i64* %flags, align 8, !dbg !24202
  br label %do.end, !dbg !24202

do.end:                                           ; preds = %do.body23
  br label %do.end30, !dbg !24195

do.end30:                                         ; preds = %do.end
  br label %do.body31, !dbg !24194

do.body31:                                        ; preds = %do.end30
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !24203, !srcloc !24204
  br label %do.body32, !dbg !24203

do.body32:                                        ; preds = %do.body31
  %97 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !24205
  %rx_lock = getelementptr inbounds %struct.r8152, %struct.r8152* %97, i32 0, i32 13, !dbg !24205
  store %struct.spinlock* %rx_lock, %struct.spinlock** %lock.addr.i, align 8
  %98 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !24206
  %99 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %98, i32 0, i32 0, !dbg !24207
  %rlock.i = bitcast %union.anon.1* %99 to %struct.raw_spinlock*, !dbg !24207
  br label %do.end34, !dbg !24205

do.end34:                                         ; preds = %do.body32
  br label %do.end35, !dbg !24203

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !24194

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !24193

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !24188

do.end38:                                         ; preds = %do.end37
  %100 = load %struct.rx_agg*, %struct.rx_agg** %rx_agg, align 8, !dbg !24208
  %info_list39 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %100, i32 0, i32 1, !dbg !24209
  %101 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !24210
  %rx_info = getelementptr inbounds %struct.r8152, %struct.r8152* %101, i32 0, i32 7, !dbg !24211
  call void @list_add_tail(%struct.list_head* %info_list39, %struct.list_head* %rx_info) #13, !dbg !24212
  %102 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !24213
  %rx_lock40 = getelementptr inbounds %struct.r8152, %struct.r8152* %102, i32 0, i32 13, !dbg !24214
  %103 = load i64, i64* %flags, align 8, !dbg !24215
  store %struct.spinlock* %rx_lock40, %struct.spinlock** %lock.addr.i42, align 8
  store i64 %103, i64* %flags.addr.i43, align 8
  call void @llvm.dbg.declare(metadata !820, metadata !15497, metadata !DIExpression()) #11, !dbg !24216
  call void @llvm.dbg.declare(metadata !820, metadata !15501, metadata !DIExpression()) #11, !dbg !24216
  store i32 1, i32* %tmp.i, align 4, !dbg !24216
  %104 = load i32, i32* %tmp.i, align 4, !dbg !24216
  call void @llvm.dbg.declare(metadata !820, metadata !15502, metadata !DIExpression()) #11, !dbg !24217
  call void @llvm.dbg.declare(metadata !820, metadata !15508, metadata !DIExpression()) #11, !dbg !24217
  store i32 1, i32* %tmp8.i, align 4, !dbg !24217
  %105 = load i32, i32* %tmp8.i, align 4, !dbg !24217
  %106 = load i64, i64* %flags.addr.i43, align 8, !dbg !24218
  call void @arch_local_irq_restore(i64 %106) #16, !dbg !24218
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !24219, !srcloc !15512
  %107 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i42, align 8, !dbg !24220
  %108 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %107, i32 0, i32 0, !dbg !24220
  %rlock.i44 = bitcast %union.anon.1* %108 to %struct.raw_spinlock*, !dbg !24220
  %109 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !24221
  %rx_count = getelementptr inbounds %struct.r8152, %struct.r8152* %109, i32 0, i32 24, !dbg !24222
  store %struct.atomic_t* %rx_count, %struct.atomic_t** %v.addr.i, align 8
  %110 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !24223
  %111 = bitcast %struct.atomic_t* %110 to i8*, !dbg !24223
  store i8* %111, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i45, align 8
  %112 = load i8*, i8** %v.addr.i.i, align 8, !dbg !24224
  %113 = load i64, i64* %size.addr.i.i45, align 8, !dbg !24225
  %conv.i.i46 = trunc i64 %113 to i32, !dbg !24225
  %call.i.i47 = call zeroext i1 @kasan_check_write(i8* %112, i32 %conv.i.i46) #16, !dbg !24226
  %114 = load i8*, i8** %v.addr.i.i, align 8, !dbg !24227
  %115 = load i64, i64* %size.addr.i.i45, align 8, !dbg !24227
  call void @kcsan_check_access(i8* %114, i64 %115, i32 7) #16, !dbg !24227
  %116 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !24228
  store %struct.atomic_t* %116, %struct.atomic_t** %v.addr.i1.i, align 8
  %117 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !24229
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %117, i32 0, i32 0, !dbg !24230
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #11, !dbg !24231, !srcloc !22274
  %118 = load %struct.rx_agg*, %struct.rx_agg** %rx_agg, align 8, !dbg !24232
  store %struct.rx_agg* %118, %struct.rx_agg** %retval, align 8, !dbg !24233
  br label %return, !dbg !24233

free_buf:                                         ; preds = %if.then17
  call void @llvm.dbg.label(metadata !24234), !dbg !24235
  %119 = load %struct.rx_agg*, %struct.rx_agg** %rx_agg, align 8, !dbg !24236
  %page41 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %119, i32 0, i32 4, !dbg !24237
  %120 = load %struct.page*, %struct.page** %page41, align 8, !dbg !24237
  %121 = load i32, i32* %order, align 4, !dbg !24238
  call void @__free_pages(%struct.page* %120, i32 %121) #13, !dbg !24239
  br label %free_rx, !dbg !24239

free_rx:                                          ; preds = %free_buf, %if.then10
  call void @llvm.dbg.label(metadata !24240), !dbg !24241
  %122 = load %struct.rx_agg*, %struct.rx_agg** %rx_agg, align 8, !dbg !24242
  %123 = bitcast %struct.rx_agg* %122 to i8*, !dbg !24242
  call void @kfree(i8* %123) #13, !dbg !24243
  store %struct.rx_agg* null, %struct.rx_agg** %retval, align 8, !dbg !24244
  br label %return, !dbg !24244

return:                                           ; preds = %free_rx, %do.end38, %if.then
  %124 = load %struct.rx_agg*, %struct.rx_agg** %retval, align 8, !dbg !24245
  ret %struct.rx_agg* %124, !dbg !24245
}

; Function Attrs: noredzone
declare dso_local %struct.urb* @usb_alloc_urb(i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb_fill_int_urb(%struct.urb* %urb, %struct.usb_device* %dev, i32 %pipe, i8* %transfer_buffer, i32 %buffer_length, void (%struct.urb*)* %complete_fn, i8* %context, i32 %interval) #2 !dbg !24246 {
entry:
  %urb.addr = alloca %struct.urb*, align 8
  %dev.addr = alloca %struct.usb_device*, align 8
  %pipe.addr = alloca i32, align 4
  %transfer_buffer.addr = alloca i8*, align 8
  %buffer_length.addr = alloca i32, align 4
  %complete_fn.addr = alloca void (%struct.urb*)*, align 8
  %context.addr = alloca i8*, align 8
  %interval.addr = alloca i32, align 4
  %__UNIQUE_ID___x320 = alloca i32, align 4
  %__UNIQUE_ID___x318 = alloca i32, align 4
  %__UNIQUE_ID___y319 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___y321 = alloca i32, align 4
  %tmp8 = alloca i32, align 4
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !24249, metadata !DIExpression()), !dbg !24250
  store %struct.usb_device* %dev, %struct.usb_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev.addr, metadata !24251, metadata !DIExpression()), !dbg !24252
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !24253, metadata !DIExpression()), !dbg !24254
  store i8* %transfer_buffer, i8** %transfer_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %transfer_buffer.addr, metadata !24255, metadata !DIExpression()), !dbg !24256
  store i32 %buffer_length, i32* %buffer_length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_length.addr, metadata !24257, metadata !DIExpression()), !dbg !24258
  store void (%struct.urb*)* %complete_fn, void (%struct.urb*)** %complete_fn.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.urb*)** %complete_fn.addr, metadata !24259, metadata !DIExpression()), !dbg !24260
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !24261, metadata !DIExpression()), !dbg !24262
  store i32 %interval, i32* %interval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interval.addr, metadata !24263, metadata !DIExpression()), !dbg !24264
  %0 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !24265
  %1 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !24266
  %dev1 = getelementptr inbounds %struct.urb, %struct.urb* %1, i32 0, i32 8, !dbg !24267
  store %struct.usb_device* %0, %struct.usb_device** %dev1, align 8, !dbg !24268
  %2 = load i32, i32* %pipe.addr, align 4, !dbg !24269
  %3 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !24270
  %pipe2 = getelementptr inbounds %struct.urb, %struct.urb* %3, i32 0, i32 10, !dbg !24271
  store i32 %2, i32* %pipe2, align 8, !dbg !24272
  %4 = load i8*, i8** %transfer_buffer.addr, align 8, !dbg !24273
  %5 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !24274
  %transfer_buffer3 = getelementptr inbounds %struct.urb, %struct.urb* %5, i32 0, i32 14, !dbg !24275
  store i8* %4, i8** %transfer_buffer3, align 8, !dbg !24276
  %6 = load i32, i32* %buffer_length.addr, align 4, !dbg !24277
  %7 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !24278
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %7, i32 0, i32 19, !dbg !24279
  store i32 %6, i32* %transfer_buffer_length, align 8, !dbg !24280
  %8 = load void (%struct.urb*)*, void (%struct.urb*)** %complete_fn.addr, align 8, !dbg !24281
  %9 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !24282
  %complete = getelementptr inbounds %struct.urb, %struct.urb* %9, i32 0, i32 28, !dbg !24283
  store void (%struct.urb*)* %8, void (%struct.urb*)** %complete, align 8, !dbg !24284
  %10 = load i8*, i8** %context.addr, align 8, !dbg !24285
  %11 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !24286
  %context4 = getelementptr inbounds %struct.urb, %struct.urb* %11, i32 0, i32 27, !dbg !24287
  store i8* %10, i8** %context4, align 8, !dbg !24288
  %12 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !24289
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 4, !dbg !24291
  %13 = load i32, i32* %speed, align 4, !dbg !24291
  %cmp = icmp eq i32 %13, 3, !dbg !24292
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !24293

lor.lhs.false:                                    ; preds = %entry
  %14 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !24294
  %speed5 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %14, i32 0, i32 4, !dbg !24295
  %15 = load i32, i32* %speed5, align 4, !dbg !24295
  %cmp6 = icmp uge i32 %15, 5, !dbg !24296
  br i1 %cmp6, label %if.then, label %if.else, !dbg !24297

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x320, metadata !24298, metadata !DIExpression()), !dbg !24301
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x318, metadata !24302, metadata !DIExpression()), !dbg !24304
  %16 = load i32, i32* %interval.addr, align 4, !dbg !24304
  store i32 %16, i32* %__UNIQUE_ID___x318, align 4, !dbg !24304
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y319, metadata !24305, metadata !DIExpression()), !dbg !24304
  store i32 1, i32* %__UNIQUE_ID___y319, align 4, !dbg !24304
  %17 = load i32, i32* %__UNIQUE_ID___x318, align 4, !dbg !24304
  %18 = load i32, i32* %__UNIQUE_ID___y319, align 4, !dbg !24304
  %cmp7 = icmp sgt i32 %17, %18, !dbg !24304
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !24304

cond.true:                                        ; preds = %if.then
  %19 = load i32, i32* %__UNIQUE_ID___x318, align 4, !dbg !24304
  br label %cond.end, !dbg !24304

cond.false:                                       ; preds = %if.then
  %20 = load i32, i32* %__UNIQUE_ID___y319, align 4, !dbg !24304
  br label %cond.end, !dbg !24304

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %19, %cond.true ], [ %20, %cond.false ], !dbg !24304
  store i32 %cond, i32* %tmp, align 4, !dbg !24304
  %21 = load i32, i32* %tmp, align 4, !dbg !24304
  store i32 %21, i32* %__UNIQUE_ID___x320, align 4, !dbg !24301
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y321, metadata !24306, metadata !DIExpression()), !dbg !24301
  store i32 16, i32* %__UNIQUE_ID___y321, align 4, !dbg !24301
  %22 = load i32, i32* %__UNIQUE_ID___x320, align 4, !dbg !24301
  %23 = load i32, i32* %__UNIQUE_ID___y321, align 4, !dbg !24301
  %cmp9 = icmp slt i32 %22, %23, !dbg !24301
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !24301

cond.true10:                                      ; preds = %cond.end
  %24 = load i32, i32* %__UNIQUE_ID___x320, align 4, !dbg !24301
  br label %cond.end12, !dbg !24301

cond.false11:                                     ; preds = %cond.end
  %25 = load i32, i32* %__UNIQUE_ID___y321, align 4, !dbg !24301
  br label %cond.end12, !dbg !24301

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond13 = phi i32 [ %24, %cond.true10 ], [ %25, %cond.false11 ], !dbg !24301
  store i32 %cond13, i32* %tmp8, align 4, !dbg !24301
  %26 = load i32, i32* %tmp8, align 4, !dbg !24301
  store i32 %26, i32* %interval.addr, align 4, !dbg !24307
  %27 = load i32, i32* %interval.addr, align 4, !dbg !24308
  %sub = sub i32 %27, 1, !dbg !24309
  %shl = shl i32 1, %sub, !dbg !24310
  %28 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !24311
  %interval14 = getelementptr inbounds %struct.urb, %struct.urb* %28, i32 0, i32 25, !dbg !24312
  store i32 %shl, i32* %interval14, align 8, !dbg !24313
  br label %if.end, !dbg !24314

if.else:                                          ; preds = %lor.lhs.false
  %29 = load i32, i32* %interval.addr, align 4, !dbg !24315
  %30 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !24317
  %interval15 = getelementptr inbounds %struct.urb, %struct.urb* %30, i32 0, i32 25, !dbg !24318
  store i32 %29, i32* %interval15, align 8, !dbg !24319
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end12
  %31 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !24320
  %start_frame = getelementptr inbounds %struct.urb, %struct.urb* %31, i32 0, i32 23, !dbg !24321
  store i32 -1, i32* %start_frame, align 8, !dbg !24322
  ret void, !dbg !24323
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @intr_callback(%struct.urb* %urb) #2 !dbg !24324 {
entry:
  %urb.addr = alloca %struct.urb*, align 8
  %tp = alloca %struct.r8152*, align 8
  %d = alloca i16*, align 8
  %status = alloca i32, align 4
  %res = alloca i32, align 4
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !24325, metadata !DIExpression()), !dbg !24326
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !24327, metadata !DIExpression()), !dbg !24328
  call void @llvm.dbg.declare(metadata i16** %d, metadata !24329, metadata !DIExpression()), !dbg !24330
  call void @llvm.dbg.declare(metadata i32* %status, metadata !24331, metadata !DIExpression()), !dbg !24332
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !24333
  %status1 = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 12, !dbg !24334
  %1 = load i32, i32* %status1, align 8, !dbg !24334
  store i32 %1, i32* %status, align 4, !dbg !24332
  call void @llvm.dbg.declare(metadata i32* %res, metadata !24335, metadata !DIExpression()), !dbg !24336
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !24337
  %context = getelementptr inbounds %struct.urb, %struct.urb* %2, i32 0, i32 27, !dbg !24338
  %3 = load i8*, i8** %context, align 8, !dbg !24338
  %4 = bitcast i8* %3 to %struct.r8152*, !dbg !24337
  store %struct.r8152* %4, %struct.r8152** %tp, align 8, !dbg !24339
  %5 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24340
  %tobool = icmp ne %struct.r8152* %5, null, !dbg !24340
  br i1 %tobool, label %if.end, label %if.then, !dbg !24342

if.then:                                          ; preds = %entry
  br label %if.end65, !dbg !24343

if.end:                                           ; preds = %entry
  %6 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24344
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 0, !dbg !24346
  %call = call zeroext i1 @test_bit(i64 2, i64* %flags) #13, !dbg !24347
  br i1 %call, label %if.end3, label %if.then2, !dbg !24348

if.then2:                                         ; preds = %if.end
  br label %if.end65, !dbg !24349

if.end3:                                          ; preds = %if.end
  %7 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24350
  %flags4 = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 0, !dbg !24352
  %call5 = call zeroext i1 @test_bit(i64 0, i64* %flags4) #13, !dbg !24353
  br i1 %call5, label %if.then6, label %if.end7, !dbg !24354

if.then6:                                         ; preds = %if.end3
  br label %if.end65, !dbg !24355

if.end7:                                          ; preds = %if.end3
  %8 = load i32, i32* %status, align 4, !dbg !24356
  switch i32 %8, label %sw.default [
    i32 0, label %sw.bb
    i32 -104, label %sw.bb8
    i32 -108, label %sw.bb8
    i32 -2, label %sw.bb9
    i32 -71, label %sw.bb9
    i32 -75, label %sw.bb14
  ], !dbg !24357

sw.bb:                                            ; preds = %if.end7
  br label %sw.epilog, !dbg !24358

sw.bb8:                                           ; preds = %if.end7, %if.end7
  %9 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24360
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %9, i32 0, i32 4, !dbg !24361
  %10 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !24361
  call void @netif_device_detach(%struct.net_device* %10) #13, !dbg !24362
  br label %sw.bb9, !dbg !24362

sw.bb9:                                           ; preds = %if.end7, %if.end7, %sw.bb8
  br label %do.body, !dbg !24363

do.body:                                          ; preds = %sw.bb9
  %11 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24364
  %msg_enable = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 28, !dbg !24364
  %12 = load i32, i32* %msg_enable, align 8, !dbg !24364
  %and = and i32 %12, 512, !dbg !24364
  %tobool10 = icmp ne i32 %and, 0, !dbg !24364
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !24367

if.then11:                                        ; preds = %do.body
  %13 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24364
  %netdev12 = getelementptr inbounds %struct.r8152, %struct.r8152* %13, i32 0, i32 4, !dbg !24364
  %14 = load %struct.net_device*, %struct.net_device** %netdev12, align 8, !dbg !24364
  %15 = load i32, i32* %status, align 4, !dbg !24364
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %14, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.63, i64 0, i64 0), i32 %15) #14, !dbg !24364
  br label %if.end13, !dbg !24364

if.end13:                                         ; preds = %if.then11, %do.body
  br label %do.end, !dbg !24367

do.end:                                           ; preds = %if.end13
  br label %if.end65, !dbg !24368

sw.bb14:                                          ; preds = %if.end7
  br label %do.body15, !dbg !24369

do.body15:                                        ; preds = %sw.bb14
  %16 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24370
  %msg_enable16 = getelementptr inbounds %struct.r8152, %struct.r8152* %16, i32 0, i32 28, !dbg !24370
  %17 = load i32, i32* %msg_enable16, align 8, !dbg !24370
  %and17 = and i32 %17, 512, !dbg !24370
  %tobool18 = icmp ne i32 %and17, 0, !dbg !24370
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !24373

if.then19:                                        ; preds = %do.body15
  %18 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24370
  %netdev20 = getelementptr inbounds %struct.r8152, %struct.r8152* %18, i32 0, i32 4, !dbg !24370
  %19 = load %struct.net_device*, %struct.net_device** %netdev20, align 8, !dbg !24370
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %19, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.64, i64 0, i64 0)) #14, !dbg !24370
  br label %if.end21, !dbg !24370

if.end21:                                         ; preds = %if.then19, %do.body15
  br label %do.end22, !dbg !24373

do.end22:                                         ; preds = %if.end21
  br label %resubmit, !dbg !24374

sw.default:                                       ; preds = %if.end7
  br label %do.body23, !dbg !24375

do.body23:                                        ; preds = %sw.default
  %20 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24376
  %msg_enable24 = getelementptr inbounds %struct.r8152, %struct.r8152* %20, i32 0, i32 28, !dbg !24376
  %21 = load i32, i32* %msg_enable24, align 8, !dbg !24376
  %and25 = and i32 %21, 512, !dbg !24376
  %tobool26 = icmp ne i32 %and25, 0, !dbg !24376
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !24379

if.then27:                                        ; preds = %do.body23
  %22 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24376
  %netdev28 = getelementptr inbounds %struct.r8152, %struct.r8152* %22, i32 0, i32 4, !dbg !24376
  %23 = load %struct.net_device*, %struct.net_device** %netdev28, align 8, !dbg !24376
  %24 = load i32, i32* %status, align 4, !dbg !24376
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %23, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.65, i64 0, i64 0), i32 %24) #14, !dbg !24376
  br label %if.end29, !dbg !24376

if.end29:                                         ; preds = %if.then27, %do.body23
  br label %do.end30, !dbg !24379

do.end30:                                         ; preds = %if.end29
  br label %resubmit, !dbg !24380

sw.epilog:                                        ; preds = %sw.bb
  %25 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !24381
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %25, i32 0, i32 14, !dbg !24382
  %26 = load i8*, i8** %transfer_buffer, align 8, !dbg !24382
  %27 = bitcast i8* %26 to i16*, !dbg !24381
  store i16* %27, i16** %d, align 8, !dbg !24383
  %28 = load i16*, i16** %d, align 8, !dbg !24384
  %arrayidx = getelementptr i16, i16* %28, i64 0, !dbg !24384
  %29 = load i16, i16* %arrayidx, align 2, !dbg !24384
  %conv = zext i16 %29 to i32, !dbg !24384
  %and31 = and i32 4, %conv, !dbg !24386
  %tobool32 = icmp ne i32 %and31, 0, !dbg !24386
  br i1 %tobool32, label %if.then33, label %if.else, !dbg !24387

if.then33:                                        ; preds = %sw.epilog
  %30 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24388
  %netdev34 = getelementptr inbounds %struct.r8152, %struct.r8152* %30, i32 0, i32 4, !dbg !24391
  %31 = load %struct.net_device*, %struct.net_device** %netdev34, align 8, !dbg !24391
  %call35 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %31) #13, !dbg !24392
  br i1 %call35, label %if.end39, label %if.then36, !dbg !24393

if.then36:                                        ; preds = %if.then33
  %32 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24394
  %flags37 = getelementptr inbounds %struct.r8152, %struct.r8152* %32, i32 0, i32 0, !dbg !24396
  call void @set_bit(i64 3, i64* %flags37) #13, !dbg !24397
  %33 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24398
  %schedule = getelementptr inbounds %struct.r8152, %struct.r8152* %33, i32 0, i32 15, !dbg !24399
  %call38 = call zeroext i1 @schedule_delayed_work(%struct.delayed_work* %schedule, i64 0) #13, !dbg !24400
  br label %if.end39, !dbg !24401

if.end39:                                         ; preds = %if.then36, %if.then33
  br label %if.end48, !dbg !24402

if.else:                                          ; preds = %sw.epilog
  %34 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24403
  %netdev40 = getelementptr inbounds %struct.r8152, %struct.r8152* %34, i32 0, i32 4, !dbg !24406
  %35 = load %struct.net_device*, %struct.net_device** %netdev40, align 8, !dbg !24406
  %call41 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %35) #13, !dbg !24407
  br i1 %call41, label %if.then42, label %if.end47, !dbg !24408

if.then42:                                        ; preds = %if.else
  %36 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24409
  %netdev43 = getelementptr inbounds %struct.r8152, %struct.r8152* %36, i32 0, i32 4, !dbg !24411
  %37 = load %struct.net_device*, %struct.net_device** %netdev43, align 8, !dbg !24411
  call void @netif_stop_queue(%struct.net_device* %37) #13, !dbg !24412
  %38 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24413
  %flags44 = getelementptr inbounds %struct.r8152, %struct.r8152* %38, i32 0, i32 0, !dbg !24414
  call void @set_bit(i64 3, i64* %flags44) #13, !dbg !24415
  %39 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24416
  %schedule45 = getelementptr inbounds %struct.r8152, %struct.r8152* %39, i32 0, i32 15, !dbg !24417
  %call46 = call zeroext i1 @schedule_delayed_work(%struct.delayed_work* %schedule45, i64 0) #13, !dbg !24418
  br label %if.end47, !dbg !24419

if.end47:                                         ; preds = %if.then42, %if.else
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.end39
  br label %resubmit, !dbg !24384

resubmit:                                         ; preds = %if.end48, %do.end30, %do.end22
  call void @llvm.dbg.label(metadata !24420), !dbg !24421
  %40 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !24422
  %call49 = call i32 @usb_submit_urb(%struct.urb* %40, i32 2592) #13, !dbg !24423
  store i32 %call49, i32* %res, align 4, !dbg !24424
  %41 = load i32, i32* %res, align 4, !dbg !24425
  %cmp = icmp eq i32 %41, -19, !dbg !24427
  br i1 %cmp, label %if.then51, label %if.else53, !dbg !24428

if.then51:                                        ; preds = %resubmit
  %42 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24429
  call void @rtl_set_unplug(%struct.r8152* %42) #13, !dbg !24431
  %43 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24432
  %netdev52 = getelementptr inbounds %struct.r8152, %struct.r8152* %43, i32 0, i32 4, !dbg !24433
  %44 = load %struct.net_device*, %struct.net_device** %netdev52, align 8, !dbg !24433
  call void @netif_device_detach(%struct.net_device* %44) #13, !dbg !24434
  br label %if.end65, !dbg !24435

if.else53:                                        ; preds = %resubmit
  %45 = load i32, i32* %res, align 4, !dbg !24436
  %tobool54 = icmp ne i32 %45, 0, !dbg !24436
  br i1 %tobool54, label %if.then55, label %if.end64, !dbg !24438

if.then55:                                        ; preds = %if.else53
  br label %do.body56, !dbg !24439

do.body56:                                        ; preds = %if.then55
  %46 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24441
  %msg_enable57 = getelementptr inbounds %struct.r8152, %struct.r8152* %46, i32 0, i32 28, !dbg !24441
  %47 = load i32, i32* %msg_enable57, align 8, !dbg !24441
  %and58 = and i32 %47, 512, !dbg !24441
  %tobool59 = icmp ne i32 %and58, 0, !dbg !24441
  br i1 %tobool59, label %if.then60, label %if.end62, !dbg !24444

if.then60:                                        ; preds = %do.body56
  %48 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24441
  %netdev61 = getelementptr inbounds %struct.r8152, %struct.r8152* %48, i32 0, i32 4, !dbg !24441
  %49 = load %struct.net_device*, %struct.net_device** %netdev61, align 8, !dbg !24441
  %50 = load i32, i32* %res, align 4, !dbg !24441
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %49, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.66, i64 0, i64 0), i32 %50) #14, !dbg !24441
  br label %if.end62, !dbg !24441

if.end62:                                         ; preds = %if.then60, %do.body56
  br label %do.end63, !dbg !24444

do.end63:                                         ; preds = %if.end62
  br label %if.end64, !dbg !24445

if.end64:                                         ; preds = %do.end63, %if.else53
  br label %if.end65

if.end65:                                         ; preds = %if.then, %if.then2, %if.then6, %do.end, %if.end64, %if.then51
  ret void, !dbg !24446
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @alloc_pages(i32 %gfp_mask, i32 %order) #2 !dbg !24447 {
entry:
  %gfp_mask.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !24451, metadata !DIExpression()), !dbg !24452
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !24453, metadata !DIExpression()), !dbg !24454
  %call = call i32 @numa_node_id() #13, !dbg !24455
  %0 = load i32, i32* %gfp_mask.addr, align 4, !dbg !24456
  %1 = load i32, i32* %order.addr, align 4, !dbg !24457
  %call1 = call %struct.page* @alloc_pages_node(i32 %call, i32 %0, i32 %1) #13, !dbg !24458
  ret %struct.page* %call1, !dbg !24459
}

; Function Attrs: noredzone
declare dso_local void @__free_pages(%struct.page*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @alloc_pages_node(i32 %nid, i32 %gfp_mask, i32 %order) #2 !dbg !24460 {
entry:
  %nid.addr = alloca i32, align 4
  %gfp_mask.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  store i32 %nid, i32* %nid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nid.addr, metadata !24463, metadata !DIExpression()), !dbg !24464
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !24465, metadata !DIExpression()), !dbg !24466
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !24467, metadata !DIExpression()), !dbg !24468
  %0 = load i32, i32* %nid.addr, align 4, !dbg !24469
  %cmp = icmp eq i32 %0, -1, !dbg !24471
  br i1 %cmp, label %if.then, label %if.end, !dbg !24472

if.then:                                          ; preds = %entry
  %call = call i32 @numa_mem_id() #13, !dbg !24473
  store i32 %call, i32* %nid.addr, align 4, !dbg !24474
  br label %if.end, !dbg !24475

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %nid.addr, align 4, !dbg !24476
  %2 = load i32, i32* %gfp_mask.addr, align 4, !dbg !24477
  %3 = load i32, i32* %order.addr, align 4, !dbg !24478
  %call1 = call %struct.page* @__alloc_pages_node(i32 %1, i32 %2, i32 %3) #13, !dbg !24479
  ret %struct.page* %call1, !dbg !24480
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @numa_node_id() #2 !dbg !24481 {
entry:
  ret i32 0, !dbg !24483
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @numa_mem_id() #2 !dbg !24484 {
entry:
  %call = call i32 @numa_node_id() #13, !dbg !24486
  ret i32 %call, !dbg !24487
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @__alloc_pages_node(i32 %nid, i32 %gfp_mask, i32 %order) #2 !dbg !24488 {
entry:
  %nid.addr = alloca i32, align 4
  %gfp_mask.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  store i32 %nid, i32* %nid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nid.addr, metadata !24489, metadata !DIExpression()), !dbg !24490
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !24491, metadata !DIExpression()), !dbg !24492
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !24493, metadata !DIExpression()), !dbg !24494
  %0 = load i32, i32* %gfp_mask.addr, align 4, !dbg !24495
  %1 = load i32, i32* %order.addr, align 4, !dbg !24496
  %2 = load i32, i32* %nid.addr, align 4, !dbg !24497
  %call = call %struct.page* @__alloc_pages(i32 %0, i32 %1, i32 %2) #13, !dbg !24498
  ret %struct.page* %call, !dbg !24499
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @__alloc_pages(i32 %gfp_mask, i32 %order, i32 %preferred_nid) #2 !dbg !24500 {
entry:
  %gfp_mask.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  %preferred_nid.addr = alloca i32, align 4
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !24503, metadata !DIExpression()), !dbg !24504
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !24505, metadata !DIExpression()), !dbg !24506
  store i32 %preferred_nid, i32* %preferred_nid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %preferred_nid.addr, metadata !24507, metadata !DIExpression()), !dbg !24508
  %0 = load i32, i32* %gfp_mask.addr, align 4, !dbg !24509
  %1 = load i32, i32* %order.addr, align 4, !dbg !24510
  %2 = load i32, i32* %preferred_nid.addr, align 4, !dbg !24511
  %call = call %struct.page* @__alloc_pages_nodemask(i32 %0, i32 %1, i32 %2, %struct.nodemask_t* null) #13, !dbg !24512
  ret %struct.page* %call, !dbg !24513
}

; Function Attrs: noredzone
declare dso_local %struct.page* @__alloc_pages_nodemask(i32, i32, i32, %struct.nodemask_t*) #1

; Function Attrs: noredzone
declare dso_local i32 @unregister_pm_notifier(%struct.notifier_block*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_tx_timestamp(%struct.sk_buff* %skb) #2 !dbg !24514 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !24515, metadata !DIExpression()), !dbg !24516
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !24517
  call void @skb_clone_tx_timestamp(%struct.sk_buff* %0) #13, !dbg !24518
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !24519
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %1) #13, !dbg !24519
  %2 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !24521
  %tx_flags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %2, i32 0, i32 3, !dbg !24521
  %3 = load i8, i8* %tx_flags, align 1, !dbg !24521
  %conv = zext i8 %3 to i32, !dbg !24519
  %and = and i32 %conv, 2, !dbg !24522
  %tobool = icmp ne i32 %and, 0, !dbg !24522
  br i1 %tobool, label %if.then, label %if.end, !dbg !24523

if.then:                                          ; preds = %entry
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !24524
  call void @skb_tstamp_tx(%struct.sk_buff* %4, %struct.skb_shared_hwtstamps* null) #13, !dbg !24525
  br label %if.end, !dbg !24525

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !24526
}

; Function Attrs: noredzone
declare dso_local void @skb_queue_tail(%struct.sk_buff_head*, %struct.sk_buff*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_clone_tx_timestamp(%struct.sk_buff* %skb) #2 !dbg !24527 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !24528, metadata !DIExpression()), !dbg !24529
  ret void, !dbg !24530
}

; Function Attrs: noredzone
declare dso_local void @skb_tstamp_tx(%struct.sk_buff*, %struct.skb_shared_hwtstamps*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_valid_ether_addr(i8* %addr) #2 !dbg !24531 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !24535, metadata !DIExpression()), !dbg !24536
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !24537
  %call = call zeroext i1 @is_multicast_ether_addr(i8* %0) #13, !dbg !24538
  br i1 %call, label %land.end, label %land.rhs, !dbg !24539

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !24540
  %call1 = call zeroext i1 @is_zero_ether_addr(i8* %1) #13, !dbg !24541
  %lnot = xor i1 %call1, true, !dbg !24542
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !24543
  ret i1 %2, !dbg !24544
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_multicast_ether_addr(i8* %addr) #2 !dbg !24545 {
entry:
  %addr.addr = alloca i8*, align 8
  %a = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !24546, metadata !DIExpression()), !dbg !24547
  call void @llvm.dbg.declare(metadata i32* %a, metadata !24548, metadata !DIExpression()), !dbg !24549
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !24550
  %1 = bitcast i8* %0 to i32*, !dbg !24551
  %2 = load i32, i32* %1, align 4, !dbg !24551
  store i32 %2, i32* %a, align 4, !dbg !24549
  %3 = load i32, i32* %a, align 4, !dbg !24552
  %and = and i32 1, %3, !dbg !24553
  %tobool = icmp ne i32 %and, 0, !dbg !24554
  ret i1 %tobool, !dbg !24555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_zero_ether_addr(i8* %addr) #2 !dbg !24556 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !24557, metadata !DIExpression()), !dbg !24558
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !24559
  %1 = bitcast i8* %0 to i32*, !dbg !24560
  %2 = load i32, i32* %1, align 4, !dbg !24560
  %3 = load i8*, i8** %addr.addr, align 8, !dbg !24561
  %add.ptr = getelementptr i8, i8* %3, i64 4, !dbg !24562
  %4 = bitcast i8* %add.ptr to i16*, !dbg !24563
  %5 = load i16, i16* %4, align 2, !dbg !24563
  %conv = zext i16 %5 to i32, !dbg !24564
  %or = or i32 %2, %conv, !dbg !24565
  %cmp = icmp eq i32 %or, 0, !dbg !24566
  ret i1 %cmp, !dbg !24567
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mii_ioctl_data* @if_mii(%struct.ifreq* %rq) #2 !dbg !24568 {
entry:
  %rq.addr = alloca %struct.ifreq*, align 8
  store %struct.ifreq* %rq, %struct.ifreq** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %rq.addr, metadata !24571, metadata !DIExpression()), !dbg !24572
  %0 = load %struct.ifreq*, %struct.ifreq** %rq.addr, align 8, !dbg !24573
  %ifr_ifru = getelementptr inbounds %struct.ifreq, %struct.ifreq* %0, i32 0, i32 1, !dbg !24574
  %1 = bitcast %union.anon.147* %ifr_ifru to %struct.mii_ioctl_data*, !dbg !24575
  ret %struct.mii_ioctl_data* %1, !dbg !24576
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @capable(i32) #1

; Function Attrs: noredzone
declare dso_local void @usb_queue_reset_device(%struct.usb_interface*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8152_get_drvinfo(%struct.net_device* %netdev, %struct.ethtool_drvinfo* %info) #2 !dbg !24577 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.ethtool_drvinfo*, align 8
  %tp = alloca %struct.r8152*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !24578, metadata !DIExpression()), !dbg !24579
  store %struct.ethtool_drvinfo* %info, %struct.ethtool_drvinfo** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_drvinfo** %info.addr, metadata !24580, metadata !DIExpression()), !dbg !24581
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !24582, metadata !DIExpression()), !dbg !24583
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !24584
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !24585
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !24585
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !24583
  %2 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !24586
  %driver = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %2, i32 0, i32 1, !dbg !24587
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %driver, i64 0, i64 0, !dbg !24586
  %call1 = call i64 @strlcpy(i8* %arraydecay, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 32) #13, !dbg !24588
  %3 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !24589
  %version = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %3, i32 0, i32 2, !dbg !24590
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %version, i64 0, i64 0, !dbg !24589
  %call3 = call i64 @strlcpy(i8* %arraydecay2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i64 32) #13, !dbg !24591
  %4 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24592
  %udev = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 1, !dbg !24593
  %5 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !24593
  %6 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !24594
  %bus_info = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %6, i32 0, i32 4, !dbg !24595
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %bus_info, i64 0, i64 0, !dbg !24594
  %call5 = call i32 @usb_make_path(%struct.usb_device* %5, i8* %arraydecay4, i64 32) #13, !dbg !24596
  %7 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24597
  %rtl_fw = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 23, !dbg !24599
  %fw = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %rtl_fw, i32 0, i32 1, !dbg !24600
  %8 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !24600
  %9 = bitcast %struct.firmware* %8 to i8*, !dbg !24597
  %call6 = call zeroext i1 @IS_ERR_OR_NULL(i8* %9) #13, !dbg !24601
  br i1 %call6, label %if.end, label %if.then, !dbg !24602

if.then:                                          ; preds = %entry
  %10 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !24603
  %fw_version = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %10, i32 0, i32 3, !dbg !24604
  %arraydecay7 = getelementptr inbounds [32 x i8], [32 x i8]* %fw_version, i64 0, i64 0, !dbg !24603
  %11 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24605
  %rtl_fw8 = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 23, !dbg !24606
  %version9 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %rtl_fw8, i32 0, i32 2, !dbg !24607
  %arraydecay10 = getelementptr inbounds [32 x i8], [32 x i8]* %version9, i64 0, i64 0, !dbg !24605
  %call11 = call i64 @strlcpy(i8* %arraydecay7, i8* %arraydecay10, i64 32) #13, !dbg !24608
  br label %if.end, !dbg !24608

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !24609
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8152_get_wol(%struct.net_device* %dev, %struct.ethtool_wolinfo* %wol) #2 !dbg !24610 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %wol.addr = alloca %struct.ethtool_wolinfo*, align 8
  %tp = alloca %struct.r8152*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !24611, metadata !DIExpression()), !dbg !24612
  store %struct.ethtool_wolinfo* %wol, %struct.ethtool_wolinfo** %wol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_wolinfo** %wol.addr, metadata !24613, metadata !DIExpression()), !dbg !24614
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !24615, metadata !DIExpression()), !dbg !24616
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !24617
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !24618
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !24618
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !24616
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24619
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 3, !dbg !24621
  %3 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !24621
  %call1 = call i32 @usb_autopm_get_interface(%struct.usb_interface* %3) #13, !dbg !24622
  %cmp = icmp slt i32 %call1, 0, !dbg !24623
  br i1 %cmp, label %if.then, label %if.end, !dbg !24624

if.then:                                          ; preds = %entry
  br label %return, !dbg !24625

if.end:                                           ; preds = %entry
  %4 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24626
  %call2 = call zeroext i1 @rtl_can_wakeup(%struct.r8152* %4) #13, !dbg !24628
  br i1 %call2, label %if.else, label %if.then3, !dbg !24629

if.then3:                                         ; preds = %if.end
  %5 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !24630
  %supported = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %5, i32 0, i32 1, !dbg !24632
  store i32 0, i32* %supported, align 4, !dbg !24633
  %6 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !24634
  %wolopts = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %6, i32 0, i32 2, !dbg !24635
  store i32 0, i32* %wolopts, align 4, !dbg !24636
  br label %if.end8, !dbg !24637

if.else:                                          ; preds = %if.end
  %7 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24638
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 18, !dbg !24640
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !24641
  %8 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !24642
  %supported4 = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %8, i32 0, i32 1, !dbg !24643
  store i32 47, i32* %supported4, align 4, !dbg !24644
  %9 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24645
  %call5 = call i32 @__rtl_get_wol(%struct.r8152* %9) #13, !dbg !24646
  %10 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !24647
  %wolopts6 = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %10, i32 0, i32 2, !dbg !24648
  store i32 %call5, i32* %wolopts6, align 4, !dbg !24649
  %11 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24650
  %control7 = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 18, !dbg !24651
  call void @mutex_unlock(%struct.mutex* %control7) #13, !dbg !24652
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then3
  %12 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24653
  %intf9 = getelementptr inbounds %struct.r8152, %struct.r8152* %12, i32 0, i32 3, !dbg !24654
  %13 = load %struct.usb_interface*, %struct.usb_interface** %intf9, align 8, !dbg !24654
  call void @usb_autopm_put_interface(%struct.usb_interface* %13) #13, !dbg !24655
  br label %return, !dbg !24656

return:                                           ; preds = %if.end8, %if.then
  ret void, !dbg !24656
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_set_wol(%struct.net_device* %dev, %struct.ethtool_wolinfo* %wol) #2 !dbg !24657 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %wol.addr = alloca %struct.ethtool_wolinfo*, align 8
  %tp = alloca %struct.r8152*, align 8
  %ret = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !24658, metadata !DIExpression()), !dbg !24659
  store %struct.ethtool_wolinfo* %wol, %struct.ethtool_wolinfo** %wol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_wolinfo** %wol.addr, metadata !24660, metadata !DIExpression()), !dbg !24661
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !24662, metadata !DIExpression()), !dbg !24663
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !24664
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !24665
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !24665
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !24663
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !24666, metadata !DIExpression()), !dbg !24667
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24668
  %call1 = call zeroext i1 @rtl_can_wakeup(%struct.r8152* %2) #13, !dbg !24670
  br i1 %call1, label %if.end, label %if.then, !dbg !24671

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !24672
  br label %return, !dbg !24672

if.end:                                           ; preds = %entry
  %3 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !24673
  %wolopts = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %3, i32 0, i32 2, !dbg !24675
  %4 = load i32, i32* %wolopts, align 4, !dbg !24675
  %and = and i32 %4, -48, !dbg !24676
  %tobool = icmp ne i32 %and, 0, !dbg !24676
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !24677

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !24678
  br label %return, !dbg !24678

if.end3:                                          ; preds = %if.end
  %5 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24679
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 3, !dbg !24680
  %6 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !24680
  %call4 = call i32 @usb_autopm_get_interface(%struct.usb_interface* %6) #13, !dbg !24681
  store i32 %call4, i32* %ret, align 4, !dbg !24682
  %7 = load i32, i32* %ret, align 4, !dbg !24683
  %cmp = icmp slt i32 %7, 0, !dbg !24685
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !24686

if.then5:                                         ; preds = %if.end3
  br label %out_set_wol, !dbg !24687

if.end6:                                          ; preds = %if.end3
  %8 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24688
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %8, i32 0, i32 18, !dbg !24689
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !24690
  %9 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24691
  %10 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !24692
  %wolopts7 = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %10, i32 0, i32 2, !dbg !24693
  %11 = load i32, i32* %wolopts7, align 4, !dbg !24693
  call void @__rtl_set_wol(%struct.r8152* %9, i32 %11) #13, !dbg !24694
  %12 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !24695
  %wolopts8 = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %12, i32 0, i32 2, !dbg !24696
  %13 = load i32, i32* %wolopts8, align 4, !dbg !24696
  %and9 = and i32 %13, 47, !dbg !24697
  %14 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24698
  %saved_wolopts = getelementptr inbounds %struct.r8152, %struct.r8152* %14, i32 0, i32 27, !dbg !24699
  store i32 %and9, i32* %saved_wolopts, align 4, !dbg !24700
  %15 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24701
  %control10 = getelementptr inbounds %struct.r8152, %struct.r8152* %15, i32 0, i32 18, !dbg !24702
  call void @mutex_unlock(%struct.mutex* %control10) #13, !dbg !24703
  %16 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24704
  %intf11 = getelementptr inbounds %struct.r8152, %struct.r8152* %16, i32 0, i32 3, !dbg !24705
  %17 = load %struct.usb_interface*, %struct.usb_interface** %intf11, align 8, !dbg !24705
  call void @usb_autopm_put_interface(%struct.usb_interface* %17) #13, !dbg !24706
  br label %out_set_wol, !dbg !24706

out_set_wol:                                      ; preds = %if.end6, %if.then5
  call void @llvm.dbg.label(metadata !24707), !dbg !24708
  %18 = load i32, i32* %ret, align 4, !dbg !24709
  store i32 %18, i32* %retval, align 4, !dbg !24710
  br label %return, !dbg !24710

return:                                           ; preds = %out_set_wol, %if.then2, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !24711
  ret i32 %19, !dbg !24711
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_get_msglevel(%struct.net_device* %dev) #2 !dbg !24712 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %tp = alloca %struct.r8152*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !24713, metadata !DIExpression()), !dbg !24714
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !24715, metadata !DIExpression()), !dbg !24716
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !24717
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !24718
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !24718
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !24716
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24719
  %msg_enable = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 28, !dbg !24720
  %3 = load i32, i32* %msg_enable, align 8, !dbg !24720
  ret i32 %3, !dbg !24721
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8152_set_msglevel(%struct.net_device* %dev, i32 %value) #2 !dbg !24722 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %value.addr = alloca i32, align 4
  %tp = alloca %struct.r8152*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !24723, metadata !DIExpression()), !dbg !24724
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !24725, metadata !DIExpression()), !dbg !24726
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !24727, metadata !DIExpression()), !dbg !24728
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !24729
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !24730
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !24730
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !24728
  %2 = load i32, i32* %value.addr, align 4, !dbg !24731
  %3 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24732
  %msg_enable = getelementptr inbounds %struct.r8152, %struct.r8152* %3, i32 0, i32 28, !dbg !24733
  store i32 %2, i32* %msg_enable, align 8, !dbg !24734
  ret void, !dbg !24735
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_nway_reset(%struct.net_device* %dev) #2 !dbg !24736 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %tp = alloca %struct.r8152*, align 8
  %ret = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !24737, metadata !DIExpression()), !dbg !24738
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !24739, metadata !DIExpression()), !dbg !24740
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !24741
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !24742
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !24742
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !24740
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !24743, metadata !DIExpression()), !dbg !24744
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24745
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 3, !dbg !24746
  %3 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !24746
  %call1 = call i32 @usb_autopm_get_interface(%struct.usb_interface* %3) #13, !dbg !24747
  store i32 %call1, i32* %ret, align 4, !dbg !24748
  %4 = load i32, i32* %ret, align 4, !dbg !24749
  %cmp = icmp slt i32 %4, 0, !dbg !24751
  br i1 %cmp, label %if.then, label %if.end, !dbg !24752

if.then:                                          ; preds = %entry
  br label %out, !dbg !24753

if.end:                                           ; preds = %entry
  %5 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24754
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 18, !dbg !24755
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !24756
  %6 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24757
  %mii = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 17, !dbg !24758
  %call2 = call i32 @mii_nway_restart(%struct.mii_if_info* %mii) #13, !dbg !24759
  store i32 %call2, i32* %ret, align 4, !dbg !24760
  %7 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24761
  %control3 = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 18, !dbg !24762
  call void @mutex_unlock(%struct.mutex* %control3) #13, !dbg !24763
  %8 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24764
  %intf4 = getelementptr inbounds %struct.r8152, %struct.r8152* %8, i32 0, i32 3, !dbg !24765
  %9 = load %struct.usb_interface*, %struct.usb_interface** %intf4, align 8, !dbg !24765
  call void @usb_autopm_put_interface(%struct.usb_interface* %9) #13, !dbg !24766
  br label %out, !dbg !24766

out:                                              ; preds = %if.end, %if.then
  call void @llvm.dbg.label(metadata !24767), !dbg !24768
  %10 = load i32, i32* %ret, align 4, !dbg !24769
  ret i32 %10, !dbg !24770
}

; Function Attrs: noredzone
declare dso_local i32 @ethtool_op_get_link(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_get_coalesce(%struct.net_device* %netdev, %struct.ethtool_coalesce* %coalesce) #2 !dbg !24771 {
entry:
  %retval = alloca i32, align 4
  %netdev.addr = alloca %struct.net_device*, align 8
  %coalesce.addr = alloca %struct.ethtool_coalesce*, align 8
  %tp = alloca %struct.r8152*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !24772, metadata !DIExpression()), !dbg !24773
  store %struct.ethtool_coalesce* %coalesce, %struct.ethtool_coalesce** %coalesce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_coalesce** %coalesce.addr, metadata !24774, metadata !DIExpression()), !dbg !24775
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !24776, metadata !DIExpression()), !dbg !24777
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !24778
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !24779
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !24779
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !24777
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24780
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 39, !dbg !24781
  %3 = load i8, i8* %version, align 8, !dbg !24781
  %conv = zext i8 %3 to i32, !dbg !24780
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 7, label %sw.bb
  ], !dbg !24782

sw.bb:                                            ; preds = %entry, %entry, %entry
  store i32 -95, i32* %retval, align 4, !dbg !24783
  br label %return, !dbg !24783

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !24785

sw.epilog:                                        ; preds = %sw.default
  %4 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24786
  %coalesce1 = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 30, !dbg !24787
  %5 = load i32, i32* %coalesce1, align 8, !dbg !24787
  %6 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %coalesce.addr, align 8, !dbg !24788
  %rx_coalesce_usecs = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %6, i32 0, i32 1, !dbg !24789
  store i32 %5, i32* %rx_coalesce_usecs, align 4, !dbg !24790
  store i32 0, i32* %retval, align 4, !dbg !24791
  br label %return, !dbg !24791

return:                                           ; preds = %sw.epilog, %sw.bb
  %7 = load i32, i32* %retval, align 4, !dbg !24792
  ret i32 %7, !dbg !24792
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_set_coalesce(%struct.net_device* %netdev, %struct.ethtool_coalesce* %coalesce) #2 !dbg !24793 {
entry:
  %retval = alloca i32, align 4
  %netdev.addr = alloca %struct.net_device*, align 8
  %coalesce.addr = alloca %struct.ethtool_coalesce*, align 8
  %tp = alloca %struct.r8152*, align 8
  %ret = alloca i32, align 4
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !24794, metadata !DIExpression()), !dbg !24795
  store %struct.ethtool_coalesce* %coalesce, %struct.ethtool_coalesce** %coalesce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_coalesce** %coalesce.addr, metadata !24796, metadata !DIExpression()), !dbg !24797
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !24798, metadata !DIExpression()), !dbg !24799
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !24800
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !24801
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !24801
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !24799
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !24802, metadata !DIExpression()), !dbg !24803
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24804
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 39, !dbg !24805
  %3 = load i8, i8* %version, align 8, !dbg !24805
  %conv = zext i8 %3 to i32, !dbg !24804
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 7, label %sw.bb
  ], !dbg !24806

sw.bb:                                            ; preds = %entry, %entry, %entry
  store i32 -95, i32* %retval, align 4, !dbg !24807
  br label %return, !dbg !24807

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !24809

sw.epilog:                                        ; preds = %sw.default
  %4 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %coalesce.addr, align 8, !dbg !24810
  %rx_coalesce_usecs = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %4, i32 0, i32 1, !dbg !24812
  %5 = load i32, i32* %rx_coalesce_usecs, align 4, !dbg !24812
  %cmp = icmp ugt i32 %5, 524280, !dbg !24813
  br i1 %cmp, label %if.then, label %if.end, !dbg !24814

if.then:                                          ; preds = %sw.epilog
  store i32 -22, i32* %retval, align 4, !dbg !24815
  br label %return, !dbg !24815

if.end:                                           ; preds = %sw.epilog
  %6 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24816
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 3, !dbg !24817
  %7 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !24817
  %call2 = call i32 @usb_autopm_get_interface(%struct.usb_interface* %7) #13, !dbg !24818
  store i32 %call2, i32* %ret, align 4, !dbg !24819
  %8 = load i32, i32* %ret, align 4, !dbg !24820
  %cmp3 = icmp slt i32 %8, 0, !dbg !24822
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !24823

if.then5:                                         ; preds = %if.end
  %9 = load i32, i32* %ret, align 4, !dbg !24824
  store i32 %9, i32* %retval, align 4, !dbg !24825
  br label %return, !dbg !24825

if.end6:                                          ; preds = %if.end
  %10 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24826
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %10, i32 0, i32 18, !dbg !24827
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !24828
  %11 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24829
  %coalesce7 = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 30, !dbg !24831
  %12 = load i32, i32* %coalesce7, align 8, !dbg !24831
  %13 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %coalesce.addr, align 8, !dbg !24832
  %rx_coalesce_usecs8 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %13, i32 0, i32 1, !dbg !24833
  %14 = load i32, i32* %rx_coalesce_usecs8, align 4, !dbg !24833
  %cmp9 = icmp ne i32 %12, %14, !dbg !24834
  br i1 %cmp9, label %if.then11, label %if.end24, !dbg !24835

if.then11:                                        ; preds = %if.end6
  %15 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %coalesce.addr, align 8, !dbg !24836
  %rx_coalesce_usecs12 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %15, i32 0, i32 1, !dbg !24838
  %16 = load i32, i32* %rx_coalesce_usecs12, align 4, !dbg !24838
  %17 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24839
  %coalesce13 = getelementptr inbounds %struct.r8152, %struct.r8152* %17, i32 0, i32 30, !dbg !24840
  store i32 %16, i32* %coalesce13, align 8, !dbg !24841
  %18 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !24842
  %call14 = call zeroext i1 @netif_running(%struct.net_device* %18) #13, !dbg !24844
  br i1 %call14, label %land.lhs.true, label %if.end23, !dbg !24845

land.lhs.true:                                    ; preds = %if.then11
  %19 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !24846
  %call16 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %19) #13, !dbg !24847
  br i1 %call16, label %if.then18, label %if.end23, !dbg !24848

if.then18:                                        ; preds = %land.lhs.true
  %20 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !24849
  call void @netif_stop_queue(%struct.net_device* %20) #13, !dbg !24851
  %21 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24852
  %napi = getelementptr inbounds %struct.r8152, %struct.r8152* %21, i32 0, i32 2, !dbg !24853
  call void @napi_disable(%struct.napi_struct* %napi) #13, !dbg !24854
  %22 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24855
  %rtl_ops = getelementptr inbounds %struct.r8152, %struct.r8152* %22, i32 0, i32 21, !dbg !24856
  %disable = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops, i32 0, i32 2, !dbg !24857
  %23 = load void (%struct.r8152*)*, void (%struct.r8152*)** %disable, align 8, !dbg !24857
  %24 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24858
  call void %23(%struct.r8152* %24) #13, !dbg !24855
  %25 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24859
  %rtl_ops19 = getelementptr inbounds %struct.r8152, %struct.r8152* %25, i32 0, i32 21, !dbg !24860
  %enable = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops19, i32 0, i32 1, !dbg !24861
  %26 = load i32 (%struct.r8152*)*, i32 (%struct.r8152*)** %enable, align 8, !dbg !24861
  %27 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24862
  %call20 = call i32 %26(%struct.r8152* %27) #13, !dbg !24859
  %28 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24863
  %call21 = call i32 @rtl_start_rx(%struct.r8152* %28) #13, !dbg !24864
  %29 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24865
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %29, i32 0, i32 0, !dbg !24866
  call void @clear_bit(i64 1, i64* %flags) #13, !dbg !24867
  %30 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !24868
  call void @_rtl8152_set_rx_mode(%struct.net_device* %30) #13, !dbg !24869
  %31 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24870
  %napi22 = getelementptr inbounds %struct.r8152, %struct.r8152* %31, i32 0, i32 2, !dbg !24871
  call void @napi_enable(%struct.napi_struct* %napi22) #13, !dbg !24872
  %32 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !24873
  call void @netif_wake_queue(%struct.net_device* %32) #13, !dbg !24874
  br label %if.end23, !dbg !24875

if.end23:                                         ; preds = %if.then18, %land.lhs.true, %if.then11
  br label %if.end24, !dbg !24876

if.end24:                                         ; preds = %if.end23, %if.end6
  %33 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24877
  %control25 = getelementptr inbounds %struct.r8152, %struct.r8152* %33, i32 0, i32 18, !dbg !24878
  call void @mutex_unlock(%struct.mutex* %control25) #13, !dbg !24879
  %34 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24880
  %intf26 = getelementptr inbounds %struct.r8152, %struct.r8152* %34, i32 0, i32 3, !dbg !24881
  %35 = load %struct.usb_interface*, %struct.usb_interface** %intf26, align 8, !dbg !24881
  call void @usb_autopm_put_interface(%struct.usb_interface* %35) #13, !dbg !24882
  %36 = load i32, i32* %ret, align 4, !dbg !24883
  store i32 %36, i32* %retval, align 4, !dbg !24884
  br label %return, !dbg !24884

return:                                           ; preds = %if.end24, %if.then5, %if.then, %sw.bb
  %37 = load i32, i32* %retval, align 4, !dbg !24885
  ret i32 %37, !dbg !24885
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8152_get_ringparam(%struct.net_device* %netdev, %struct.ethtool_ringparam* %ring) #2 !dbg !24886 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %ring.addr = alloca %struct.ethtool_ringparam*, align 8
  %tp = alloca %struct.r8152*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !24887, metadata !DIExpression()), !dbg !24888
  store %struct.ethtool_ringparam* %ring, %struct.ethtool_ringparam** %ring.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_ringparam** %ring.addr, metadata !24889, metadata !DIExpression()), !dbg !24890
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !24891, metadata !DIExpression()), !dbg !24892
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !24893
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !24894
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !24894
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !24892
  %2 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !24895
  %rx_max_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %2, i32 0, i32 1, !dbg !24896
  store i32 4096, i32* %rx_max_pending, align 4, !dbg !24897
  %3 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24898
  %rx_pending = getelementptr inbounds %struct.r8152, %struct.r8152* %3, i32 0, i32 34, !dbg !24899
  %4 = load i32, i32* %rx_pending, align 8, !dbg !24899
  %5 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !24900
  %rx_pending1 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %5, i32 0, i32 5, !dbg !24901
  store i32 %4, i32* %rx_pending1, align 4, !dbg !24902
  ret void, !dbg !24903
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_set_ringparam(%struct.net_device* %netdev, %struct.ethtool_ringparam* %ring) #2 !dbg !24904 {
entry:
  %retval = alloca i32, align 4
  %netdev.addr = alloca %struct.net_device*, align 8
  %ring.addr = alloca %struct.ethtool_ringparam*, align 8
  %tp = alloca %struct.r8152*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !24905, metadata !DIExpression()), !dbg !24906
  store %struct.ethtool_ringparam* %ring, %struct.ethtool_ringparam** %ring.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_ringparam** %ring.addr, metadata !24907, metadata !DIExpression()), !dbg !24908
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !24909, metadata !DIExpression()), !dbg !24910
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !24911
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !24912
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !24912
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !24910
  %2 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !24913
  %rx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %2, i32 0, i32 5, !dbg !24915
  %3 = load i32, i32* %rx_pending, align 4, !dbg !24915
  %cmp = icmp ult i32 %3, 20, !dbg !24916
  br i1 %cmp, label %if.then, label %if.end, !dbg !24917

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !24918
  br label %return, !dbg !24918

if.end:                                           ; preds = %entry
  %4 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24919
  %rx_pending1 = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 34, !dbg !24921
  %5 = load i32, i32* %rx_pending1, align 8, !dbg !24921
  %6 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !24922
  %rx_pending2 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %6, i32 0, i32 5, !dbg !24923
  %7 = load i32, i32* %rx_pending2, align 4, !dbg !24923
  %cmp3 = icmp ne i32 %5, %7, !dbg !24924
  br i1 %cmp3, label %if.then4, label %if.end13, !dbg !24925

if.then4:                                         ; preds = %if.end
  %8 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !24926
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 36, !dbg !24929
  %9 = load i32, i32* %flags, align 8, !dbg !24929
  %and = and i32 %9, 1, !dbg !24930
  %tobool = icmp ne i32 %and, 0, !dbg !24930
  br i1 %tobool, label %if.then5, label %if.else, !dbg !24931

if.then5:                                         ; preds = %if.then4
  %10 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24932
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %10, i32 0, i32 18, !dbg !24934
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !24935
  %11 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24936
  %napi = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 2, !dbg !24937
  call void @napi_disable(%struct.napi_struct* %napi) #13, !dbg !24938
  %12 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !24939
  %rx_pending6 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %12, i32 0, i32 5, !dbg !24940
  %13 = load i32, i32* %rx_pending6, align 4, !dbg !24940
  %14 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24941
  %rx_pending7 = getelementptr inbounds %struct.r8152, %struct.r8152* %14, i32 0, i32 34, !dbg !24942
  store i32 %13, i32* %rx_pending7, align 8, !dbg !24943
  %15 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24944
  %napi8 = getelementptr inbounds %struct.r8152, %struct.r8152* %15, i32 0, i32 2, !dbg !24945
  call void @napi_enable(%struct.napi_struct* %napi8) #13, !dbg !24946
  %16 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24947
  %control9 = getelementptr inbounds %struct.r8152, %struct.r8152* %16, i32 0, i32 18, !dbg !24948
  call void @mutex_unlock(%struct.mutex* %control9) #13, !dbg !24949
  br label %if.end12, !dbg !24950

if.else:                                          ; preds = %if.then4
  %17 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !24951
  %rx_pending10 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %17, i32 0, i32 5, !dbg !24953
  %18 = load i32, i32* %rx_pending10, align 4, !dbg !24953
  %19 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !24954
  %rx_pending11 = getelementptr inbounds %struct.r8152, %struct.r8152* %19, i32 0, i32 34, !dbg !24955
  store i32 %18, i32* %rx_pending11, align 8, !dbg !24956
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then5
  br label %if.end13, !dbg !24957

if.end13:                                         ; preds = %if.end12, %if.end
  store i32 0, i32* %retval, align 4, !dbg !24958
  br label %return, !dbg !24958

return:                                           ; preds = %if.end13, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !24959
  ret i32 %20, !dbg !24959
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8152_get_strings(%struct.net_device* %dev, i32 %stringset, i8* %data) #2 !dbg !24960 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %stringset.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !24961, metadata !DIExpression()), !dbg !24962
  store i32 %stringset, i32* %stringset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stringset.addr, metadata !24963, metadata !DIExpression()), !dbg !24964
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !24965, metadata !DIExpression()), !dbg !24966
  %0 = load i32, i32* %stringset.addr, align 4, !dbg !24967
  switch i32 %0, label %sw.epilog [
    i32 1, label %sw.bb
  ], !dbg !24968

sw.bb:                                            ; preds = %entry
  %1 = load i8*, i8** %data.addr, align 8, !dbg !24969
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 16 getelementptr inbounds ([13 x [32 x i8]], [13 x [32 x i8]]* @rtl8152_gstrings, i64 0, i64 0, i64 0), i64 416, i1 false), !dbg !24971
  br label %sw.epilog, !dbg !24972

sw.epilog:                                        ; preds = %entry, %sw.bb
  ret void, !dbg !24973
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8152_get_ethtool_stats(%struct.net_device* %dev, %struct.ethtool_stats* %stats, i64* %data) #2 !dbg !24974 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %stats.addr = alloca %struct.ethtool_stats*, align 8
  %data.addr = alloca i64*, align 8
  %tp = alloca %struct.r8152*, align 8
  %tally = alloca %struct.tally_counter, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !24975, metadata !DIExpression()), !dbg !24976
  store %struct.ethtool_stats* %stats, %struct.ethtool_stats** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_stats** %stats.addr, metadata !24977, metadata !DIExpression()), !dbg !24978
  store i64* %data, i64** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %data.addr, metadata !24979, metadata !DIExpression()), !dbg !24980
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !24981, metadata !DIExpression()), !dbg !24982
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !24983
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !24984
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !24984
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !24982
  call void @llvm.dbg.declare(metadata %struct.tally_counter* %tally, metadata !24985, metadata !DIExpression()), !dbg !25001
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25002
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 3, !dbg !25004
  %3 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !25004
  %call1 = call i32 @usb_autopm_get_interface(%struct.usb_interface* %3) #13, !dbg !25005
  %cmp = icmp slt i32 %call1, 0, !dbg !25006
  br i1 %cmp, label %if.then, label %if.end, !dbg !25007

if.then:                                          ; preds = %entry
  br label %return, !dbg !25008

if.end:                                           ; preds = %entry
  %4 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25009
  %5 = bitcast %struct.tally_counter* %tally to i8*, !dbg !25010
  %call2 = call i32 @generic_ocp_read(%struct.r8152* %4, i16 zeroext -6000, i16 zeroext 64, i8* %5, i16 zeroext 256) #13, !dbg !25011
  %6 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25012
  %intf3 = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 3, !dbg !25013
  %7 = load %struct.usb_interface*, %struct.usb_interface** %intf3, align 8, !dbg !25013
  call void @usb_autopm_put_interface(%struct.usb_interface* %7) #13, !dbg !25014
  %tx_packets = getelementptr inbounds %struct.tally_counter, %struct.tally_counter* %tally, i32 0, i32 0, !dbg !25015
  %8 = load i64, i64* %tx_packets, align 8, !dbg !25015
  %9 = load i64*, i64** %data.addr, align 8, !dbg !25016
  %arrayidx = getelementptr i64, i64* %9, i64 0, !dbg !25016
  store i64 %8, i64* %arrayidx, align 8, !dbg !25017
  %rx_packets = getelementptr inbounds %struct.tally_counter, %struct.tally_counter* %tally, i32 0, i32 1, !dbg !25018
  %10 = load i64, i64* %rx_packets, align 8, !dbg !25018
  %11 = load i64*, i64** %data.addr, align 8, !dbg !25019
  %arrayidx4 = getelementptr i64, i64* %11, i64 1, !dbg !25019
  store i64 %10, i64* %arrayidx4, align 8, !dbg !25020
  %tx_errors = getelementptr inbounds %struct.tally_counter, %struct.tally_counter* %tally, i32 0, i32 2, !dbg !25021
  %12 = load i64, i64* %tx_errors, align 8, !dbg !25021
  %13 = load i64*, i64** %data.addr, align 8, !dbg !25022
  %arrayidx5 = getelementptr i64, i64* %13, i64 2, !dbg !25022
  store i64 %12, i64* %arrayidx5, align 8, !dbg !25023
  %rx_errors = getelementptr inbounds %struct.tally_counter, %struct.tally_counter* %tally, i32 0, i32 3, !dbg !25024
  %14 = load i32, i32* %rx_errors, align 8, !dbg !25024
  %conv = zext i32 %14 to i64, !dbg !25024
  %15 = load i64*, i64** %data.addr, align 8, !dbg !25025
  %arrayidx6 = getelementptr i64, i64* %15, i64 3, !dbg !25025
  store i64 %conv, i64* %arrayidx6, align 8, !dbg !25026
  %rx_missed = getelementptr inbounds %struct.tally_counter, %struct.tally_counter* %tally, i32 0, i32 4, !dbg !25027
  %16 = load i16, i16* %rx_missed, align 4, !dbg !25027
  %conv7 = zext i16 %16 to i64, !dbg !25027
  %17 = load i64*, i64** %data.addr, align 8, !dbg !25028
  %arrayidx8 = getelementptr i64, i64* %17, i64 4, !dbg !25028
  store i64 %conv7, i64* %arrayidx8, align 8, !dbg !25029
  %align_errors = getelementptr inbounds %struct.tally_counter, %struct.tally_counter* %tally, i32 0, i32 5, !dbg !25030
  %18 = load i16, i16* %align_errors, align 2, !dbg !25030
  %conv9 = zext i16 %18 to i64, !dbg !25030
  %19 = load i64*, i64** %data.addr, align 8, !dbg !25031
  %arrayidx10 = getelementptr i64, i64* %19, i64 5, !dbg !25031
  store i64 %conv9, i64* %arrayidx10, align 8, !dbg !25032
  %tx_one_collision = getelementptr inbounds %struct.tally_counter, %struct.tally_counter* %tally, i32 0, i32 6, !dbg !25033
  %20 = load i32, i32* %tx_one_collision, align 8, !dbg !25033
  %conv11 = zext i32 %20 to i64, !dbg !25033
  %21 = load i64*, i64** %data.addr, align 8, !dbg !25034
  %arrayidx12 = getelementptr i64, i64* %21, i64 6, !dbg !25034
  store i64 %conv11, i64* %arrayidx12, align 8, !dbg !25035
  %tx_multi_collision = getelementptr inbounds %struct.tally_counter, %struct.tally_counter* %tally, i32 0, i32 7, !dbg !25036
  %22 = load i32, i32* %tx_multi_collision, align 4, !dbg !25036
  %conv13 = zext i32 %22 to i64, !dbg !25036
  %23 = load i64*, i64** %data.addr, align 8, !dbg !25037
  %arrayidx14 = getelementptr i64, i64* %23, i64 7, !dbg !25037
  store i64 %conv13, i64* %arrayidx14, align 8, !dbg !25038
  %rx_unicast = getelementptr inbounds %struct.tally_counter, %struct.tally_counter* %tally, i32 0, i32 8, !dbg !25039
  %24 = load i64, i64* %rx_unicast, align 8, !dbg !25039
  %25 = load i64*, i64** %data.addr, align 8, !dbg !25040
  %arrayidx15 = getelementptr i64, i64* %25, i64 8, !dbg !25040
  store i64 %24, i64* %arrayidx15, align 8, !dbg !25041
  %rx_broadcast = getelementptr inbounds %struct.tally_counter, %struct.tally_counter* %tally, i32 0, i32 9, !dbg !25042
  %26 = load i64, i64* %rx_broadcast, align 8, !dbg !25042
  %27 = load i64*, i64** %data.addr, align 8, !dbg !25043
  %arrayidx16 = getelementptr i64, i64* %27, i64 9, !dbg !25043
  store i64 %26, i64* %arrayidx16, align 8, !dbg !25044
  %rx_multicast = getelementptr inbounds %struct.tally_counter, %struct.tally_counter* %tally, i32 0, i32 10, !dbg !25045
  %28 = load i32, i32* %rx_multicast, align 8, !dbg !25045
  %conv17 = zext i32 %28 to i64, !dbg !25045
  %29 = load i64*, i64** %data.addr, align 8, !dbg !25046
  %arrayidx18 = getelementptr i64, i64* %29, i64 10, !dbg !25046
  store i64 %conv17, i64* %arrayidx18, align 8, !dbg !25047
  %tx_aborted = getelementptr inbounds %struct.tally_counter, %struct.tally_counter* %tally, i32 0, i32 11, !dbg !25048
  %30 = load i16, i16* %tx_aborted, align 4, !dbg !25048
  %conv19 = zext i16 %30 to i64, !dbg !25048
  %31 = load i64*, i64** %data.addr, align 8, !dbg !25049
  %arrayidx20 = getelementptr i64, i64* %31, i64 11, !dbg !25049
  store i64 %conv19, i64* %arrayidx20, align 8, !dbg !25050
  %tx_underrun = getelementptr inbounds %struct.tally_counter, %struct.tally_counter* %tally, i32 0, i32 12, !dbg !25051
  %32 = load i16, i16* %tx_underrun, align 2, !dbg !25051
  %conv21 = zext i16 %32 to i64, !dbg !25051
  %33 = load i64*, i64** %data.addr, align 8, !dbg !25052
  %arrayidx22 = getelementptr i64, i64* %33, i64 12, !dbg !25052
  store i64 %conv21, i64* %arrayidx22, align 8, !dbg !25053
  br label %return, !dbg !25054

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !25054
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_get_sset_count(%struct.net_device* %dev, i32 %sset) #2 !dbg !25055 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %sset.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !25056, metadata !DIExpression()), !dbg !25057
  store i32 %sset, i32* %sset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sset.addr, metadata !25058, metadata !DIExpression()), !dbg !25059
  %0 = load i32, i32* %sset.addr, align 4, !dbg !25060
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
  ], !dbg !25061

sw.bb:                                            ; preds = %entry
  store i32 13, i32* %retval, align 4, !dbg !25062
  br label %return, !dbg !25062

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !25064
  br label %return, !dbg !25064

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i32, i32* %retval, align 4, !dbg !25065
  ret i32 %1, !dbg !25065
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl_ethtool_get_eee(%struct.net_device* %net, %struct.ethtool_eee* %edata) #2 !dbg !25066 {
entry:
  %net.addr = alloca %struct.net_device*, align 8
  %edata.addr = alloca %struct.ethtool_eee*, align 8
  %tp = alloca %struct.r8152*, align 8
  %ret = alloca i32, align 4
  store %struct.net_device* %net, %struct.net_device** %net.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %net.addr, metadata !25067, metadata !DIExpression()), !dbg !25068
  store %struct.ethtool_eee* %edata, %struct.ethtool_eee** %edata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_eee** %edata.addr, metadata !25069, metadata !DIExpression()), !dbg !25070
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !25071, metadata !DIExpression()), !dbg !25072
  %0 = load %struct.net_device*, %struct.net_device** %net.addr, align 8, !dbg !25073
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !25074
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !25074
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !25072
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !25075, metadata !DIExpression()), !dbg !25076
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25077
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 3, !dbg !25078
  %3 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !25078
  %call1 = call i32 @usb_autopm_get_interface(%struct.usb_interface* %3) #13, !dbg !25079
  store i32 %call1, i32* %ret, align 4, !dbg !25080
  %4 = load i32, i32* %ret, align 4, !dbg !25081
  %cmp = icmp slt i32 %4, 0, !dbg !25083
  br i1 %cmp, label %if.then, label %if.end, !dbg !25084

if.then:                                          ; preds = %entry
  br label %out, !dbg !25085

if.end:                                           ; preds = %entry
  %5 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25086
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 18, !dbg !25087
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !25088
  %6 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25089
  %rtl_ops = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 21, !dbg !25090
  %eee_get = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops, i32 0, i32 6, !dbg !25091
  %7 = load i32 (%struct.r8152*, %struct.ethtool_eee*)*, i32 (%struct.r8152*, %struct.ethtool_eee*)** %eee_get, align 8, !dbg !25091
  %8 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25092
  %9 = load %struct.ethtool_eee*, %struct.ethtool_eee** %edata.addr, align 8, !dbg !25093
  %call2 = call i32 %7(%struct.r8152* %8, %struct.ethtool_eee* %9) #13, !dbg !25089
  store i32 %call2, i32* %ret, align 4, !dbg !25094
  %10 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25095
  %control3 = getelementptr inbounds %struct.r8152, %struct.r8152* %10, i32 0, i32 18, !dbg !25096
  call void @mutex_unlock(%struct.mutex* %control3) #13, !dbg !25097
  %11 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25098
  %intf4 = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 3, !dbg !25099
  %12 = load %struct.usb_interface*, %struct.usb_interface** %intf4, align 8, !dbg !25099
  call void @usb_autopm_put_interface(%struct.usb_interface* %12) #13, !dbg !25100
  br label %out, !dbg !25100

out:                                              ; preds = %if.end, %if.then
  call void @llvm.dbg.label(metadata !25101), !dbg !25102
  %13 = load i32, i32* %ret, align 4, !dbg !25103
  ret i32 %13, !dbg !25104
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl_ethtool_set_eee(%struct.net_device* %net, %struct.ethtool_eee* %edata) #2 !dbg !25105 {
entry:
  %net.addr = alloca %struct.net_device*, align 8
  %edata.addr = alloca %struct.ethtool_eee*, align 8
  %tp = alloca %struct.r8152*, align 8
  %ret = alloca i32, align 4
  store %struct.net_device* %net, %struct.net_device** %net.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %net.addr, metadata !25106, metadata !DIExpression()), !dbg !25107
  store %struct.ethtool_eee* %edata, %struct.ethtool_eee** %edata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_eee** %edata.addr, metadata !25108, metadata !DIExpression()), !dbg !25109
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !25110, metadata !DIExpression()), !dbg !25111
  %0 = load %struct.net_device*, %struct.net_device** %net.addr, align 8, !dbg !25112
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !25113
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !25113
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !25111
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !25114, metadata !DIExpression()), !dbg !25115
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25116
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 3, !dbg !25117
  %3 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !25117
  %call1 = call i32 @usb_autopm_get_interface(%struct.usb_interface* %3) #13, !dbg !25118
  store i32 %call1, i32* %ret, align 4, !dbg !25119
  %4 = load i32, i32* %ret, align 4, !dbg !25120
  %cmp = icmp slt i32 %4, 0, !dbg !25122
  br i1 %cmp, label %if.then, label %if.end, !dbg !25123

if.then:                                          ; preds = %entry
  br label %out, !dbg !25124

if.end:                                           ; preds = %entry
  %5 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25125
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 18, !dbg !25126
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !25127
  %6 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25128
  %rtl_ops = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 21, !dbg !25129
  %eee_set = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops, i32 0, i32 7, !dbg !25130
  %7 = load i32 (%struct.r8152*, %struct.ethtool_eee*)*, i32 (%struct.r8152*, %struct.ethtool_eee*)** %eee_set, align 8, !dbg !25130
  %8 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25131
  %9 = load %struct.ethtool_eee*, %struct.ethtool_eee** %edata.addr, align 8, !dbg !25132
  %call2 = call i32 %7(%struct.r8152* %8, %struct.ethtool_eee* %9) #13, !dbg !25128
  store i32 %call2, i32* %ret, align 4, !dbg !25133
  %10 = load i32, i32* %ret, align 4, !dbg !25134
  %tobool = icmp ne i32 %10, 0, !dbg !25134
  br i1 %tobool, label %if.end5, label %if.then3, !dbg !25136

if.then3:                                         ; preds = %if.end
  %11 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25137
  %mii = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 17, !dbg !25138
  %call4 = call i32 @mii_nway_restart(%struct.mii_if_info* %mii) #13, !dbg !25139
  store i32 %call4, i32* %ret, align 4, !dbg !25140
  br label %if.end5, !dbg !25141

if.end5:                                          ; preds = %if.then3, %if.end
  %12 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25142
  %control6 = getelementptr inbounds %struct.r8152, %struct.r8152* %12, i32 0, i32 18, !dbg !25143
  call void @mutex_unlock(%struct.mutex* %control6) #13, !dbg !25144
  %13 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25145
  %intf7 = getelementptr inbounds %struct.r8152, %struct.r8152* %13, i32 0, i32 3, !dbg !25146
  %14 = load %struct.usb_interface*, %struct.usb_interface** %intf7, align 8, !dbg !25146
  call void @usb_autopm_put_interface(%struct.usb_interface* %14) #13, !dbg !25147
  br label %out, !dbg !25147

out:                                              ; preds = %if.end5, %if.then
  call void @llvm.dbg.label(metadata !25148), !dbg !25149
  %15 = load i32, i32* %ret, align 4, !dbg !25150
  ret i32 %15, !dbg !25151
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_get_tunable(%struct.net_device* %netdev, %struct.ethtool_tunable* %tunable, i8* %d) #2 !dbg !25152 {
entry:
  %retval = alloca i32, align 4
  %netdev.addr = alloca %struct.net_device*, align 8
  %tunable.addr = alloca %struct.ethtool_tunable*, align 8
  %d.addr = alloca i8*, align 8
  %tp = alloca %struct.r8152*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !25153, metadata !DIExpression()), !dbg !25154
  store %struct.ethtool_tunable* %tunable, %struct.ethtool_tunable** %tunable.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_tunable** %tunable.addr, metadata !25155, metadata !DIExpression()), !dbg !25156
  store i8* %d, i8** %d.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %d.addr, metadata !25157, metadata !DIExpression()), !dbg !25158
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !25159, metadata !DIExpression()), !dbg !25160
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !25161
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !25162
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !25162
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !25160
  %2 = load %struct.ethtool_tunable*, %struct.ethtool_tunable** %tunable.addr, align 8, !dbg !25163
  %id = getelementptr inbounds %struct.ethtool_tunable, %struct.ethtool_tunable* %2, i32 0, i32 1, !dbg !25164
  %3 = load i32, i32* %id, align 4, !dbg !25164
  switch i32 %3, label %sw.default [
    i32 1, label %sw.bb
  ], !dbg !25165

sw.bb:                                            ; preds = %entry
  %4 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25166
  %rx_copybreak = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 33, !dbg !25168
  %5 = load i32, i32* %rx_copybreak, align 4, !dbg !25168
  %6 = load i8*, i8** %d.addr, align 8, !dbg !25169
  %7 = bitcast i8* %6 to i32*, !dbg !25170
  store i32 %5, i32* %7, align 4, !dbg !25171
  br label %sw.epilog, !dbg !25172

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !25173
  br label %return, !dbg !25173

sw.epilog:                                        ; preds = %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !25174
  br label %return, !dbg !25174

return:                                           ; preds = %sw.epilog, %sw.default
  %8 = load i32, i32* %retval, align 4, !dbg !25175
  ret i32 %8, !dbg !25175
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_set_tunable(%struct.net_device* %netdev, %struct.ethtool_tunable* %tunable, i8* %d) #2 !dbg !25176 {
entry:
  %retval = alloca i32, align 4
  %netdev.addr = alloca %struct.net_device*, align 8
  %tunable.addr = alloca %struct.ethtool_tunable*, align 8
  %d.addr = alloca i8*, align 8
  %tp = alloca %struct.r8152*, align 8
  %val = alloca i32, align 4
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !25177, metadata !DIExpression()), !dbg !25178
  store %struct.ethtool_tunable* %tunable, %struct.ethtool_tunable** %tunable.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_tunable** %tunable.addr, metadata !25179, metadata !DIExpression()), !dbg !25180
  store i8* %d, i8** %d.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %d.addr, metadata !25181, metadata !DIExpression()), !dbg !25182
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !25183, metadata !DIExpression()), !dbg !25184
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !25185
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !25186
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !25186
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !25184
  call void @llvm.dbg.declare(metadata i32* %val, metadata !25187, metadata !DIExpression()), !dbg !25188
  %2 = load %struct.ethtool_tunable*, %struct.ethtool_tunable** %tunable.addr, align 8, !dbg !25189
  %id = getelementptr inbounds %struct.ethtool_tunable, %struct.ethtool_tunable* %2, i32 0, i32 1, !dbg !25190
  %3 = load i32, i32* %id, align 4, !dbg !25190
  switch i32 %3, label %sw.default [
    i32 1, label %sw.bb
  ], !dbg !25191

sw.bb:                                            ; preds = %entry
  %4 = load i8*, i8** %d.addr, align 8, !dbg !25192
  %5 = bitcast i8* %4 to i32*, !dbg !25194
  %6 = load i32, i32* %5, align 4, !dbg !25195
  store i32 %6, i32* %val, align 4, !dbg !25196
  %7 = load i32, i32* %val, align 4, !dbg !25197
  %cmp = icmp ult i32 %7, 60, !dbg !25199
  br i1 %cmp, label %if.then, label %if.end2, !dbg !25200

if.then:                                          ; preds = %sw.bb
  br label %do.body, !dbg !25201

do.body:                                          ; preds = %if.then
  %8 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25203
  %msg_enable = getelementptr inbounds %struct.r8152, %struct.r8152* %8, i32 0, i32 28, !dbg !25203
  %9 = load i32, i32* %msg_enable, align 8, !dbg !25203
  %and = and i32 %9, 64, !dbg !25203
  %tobool = icmp ne i32 %and, 0, !dbg !25203
  br i1 %tobool, label %if.then1, label %if.end, !dbg !25206

if.then1:                                         ; preds = %do.body
  %10 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !25203
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %10, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.69, i64 0, i64 0)) #14, !dbg !25203
  br label %if.end, !dbg !25203

if.end:                                           ; preds = %if.then1, %do.body
  br label %do.end, !dbg !25206

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !25207
  br label %return, !dbg !25207

if.end2:                                          ; preds = %sw.bb
  %11 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25208
  %rx_copybreak = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 33, !dbg !25210
  %12 = load i32, i32* %rx_copybreak, align 4, !dbg !25210
  %13 = load i32, i32* %val, align 4, !dbg !25211
  %cmp3 = icmp ne i32 %12, %13, !dbg !25212
  br i1 %cmp3, label %if.then4, label %if.end13, !dbg !25213

if.then4:                                         ; preds = %if.end2
  %14 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !25214
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 36, !dbg !25217
  %15 = load i32, i32* %flags, align 8, !dbg !25217
  %and5 = and i32 %15, 1, !dbg !25218
  %tobool6 = icmp ne i32 %and5, 0, !dbg !25218
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !25219

if.then7:                                         ; preds = %if.then4
  %16 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25220
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %16, i32 0, i32 18, !dbg !25222
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !25223
  %17 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25224
  %napi = getelementptr inbounds %struct.r8152, %struct.r8152* %17, i32 0, i32 2, !dbg !25225
  call void @napi_disable(%struct.napi_struct* %napi) #13, !dbg !25226
  %18 = load i32, i32* %val, align 4, !dbg !25227
  %19 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25228
  %rx_copybreak8 = getelementptr inbounds %struct.r8152, %struct.r8152* %19, i32 0, i32 33, !dbg !25229
  store i32 %18, i32* %rx_copybreak8, align 4, !dbg !25230
  %20 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25231
  %napi9 = getelementptr inbounds %struct.r8152, %struct.r8152* %20, i32 0, i32 2, !dbg !25232
  call void @napi_enable(%struct.napi_struct* %napi9) #13, !dbg !25233
  %21 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25234
  %control10 = getelementptr inbounds %struct.r8152, %struct.r8152* %21, i32 0, i32 18, !dbg !25235
  call void @mutex_unlock(%struct.mutex* %control10) #13, !dbg !25236
  br label %if.end12, !dbg !25237

if.else:                                          ; preds = %if.then4
  %22 = load i32, i32* %val, align 4, !dbg !25238
  %23 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25240
  %rx_copybreak11 = getelementptr inbounds %struct.r8152, %struct.r8152* %23, i32 0, i32 33, !dbg !25241
  store i32 %22, i32* %rx_copybreak11, align 4, !dbg !25242
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  br label %if.end13, !dbg !25243

if.end13:                                         ; preds = %if.end12, %if.end2
  br label %sw.epilog, !dbg !25244

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !25245
  br label %return, !dbg !25245

sw.epilog:                                        ; preds = %if.end13
  store i32 0, i32* %retval, align 4, !dbg !25246
  br label %return, !dbg !25246

return:                                           ; preds = %sw.epilog, %sw.default, %do.end
  %24 = load i32, i32* %retval, align 4, !dbg !25247
  ret i32 %24, !dbg !25247
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_get_link_ksettings(%struct.net_device* %netdev, %struct.ethtool_link_ksettings* %cmd) #2 !dbg !25248 {
entry:
  %retval = alloca i32, align 4
  %netdev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %tp = alloca %struct.r8152*, align 8
  %ret = alloca i32, align 4
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !25249, metadata !DIExpression()), !dbg !25250
  store %struct.ethtool_link_ksettings* %cmd, %struct.ethtool_link_ksettings** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %cmd.addr, metadata !25251, metadata !DIExpression()), !dbg !25252
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !25253, metadata !DIExpression()), !dbg !25254
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !25255
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !25256
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !25256
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !25254
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !25257, metadata !DIExpression()), !dbg !25258
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25259
  %mii = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 17, !dbg !25261
  %mdio_read = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii, i32 0, i32 6, !dbg !25262
  %3 = load i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, i32)** %mdio_read, align 8, !dbg !25262
  %tobool = icmp ne i32 (%struct.net_device*, i32, i32)* %3, null, !dbg !25259
  br i1 %tobool, label %if.end, label %if.then, !dbg !25263

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !25264
  br label %return, !dbg !25264

if.end:                                           ; preds = %entry
  %4 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25265
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 3, !dbg !25266
  %5 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !25266
  %call1 = call i32 @usb_autopm_get_interface(%struct.usb_interface* %5) #13, !dbg !25267
  store i32 %call1, i32* %ret, align 4, !dbg !25268
  %6 = load i32, i32* %ret, align 4, !dbg !25269
  %cmp = icmp slt i32 %6, 0, !dbg !25271
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !25272

if.then2:                                         ; preds = %if.end
  br label %out, !dbg !25273

if.end3:                                          ; preds = %if.end
  %7 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25274
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 18, !dbg !25275
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !25276
  %8 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25277
  %mii4 = getelementptr inbounds %struct.r8152, %struct.r8152* %8, i32 0, i32 17, !dbg !25278
  %9 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !25279
  call void @mii_ethtool_get_link_ksettings(%struct.mii_if_info* %mii4, %struct.ethtool_link_ksettings* %9) #13, !dbg !25280
  %10 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25281
  %control5 = getelementptr inbounds %struct.r8152, %struct.r8152* %10, i32 0, i32 18, !dbg !25282
  call void @mutex_unlock(%struct.mutex* %control5) #13, !dbg !25283
  %11 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25284
  %intf6 = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 3, !dbg !25285
  %12 = load %struct.usb_interface*, %struct.usb_interface** %intf6, align 8, !dbg !25285
  call void @usb_autopm_put_interface(%struct.usb_interface* %12) #13, !dbg !25286
  br label %out, !dbg !25286

out:                                              ; preds = %if.end3, %if.then2
  call void @llvm.dbg.label(metadata !25287), !dbg !25288
  %13 = load i32, i32* %ret, align 4, !dbg !25289
  store i32 %13, i32* %retval, align 4, !dbg !25290
  br label %return, !dbg !25290

return:                                           ; preds = %out, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !25291
  ret i32 %14, !dbg !25291
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_set_link_ksettings(%struct.net_device* %dev, %struct.ethtool_link_ksettings* %cmd) #2 !dbg !25292 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %tp = alloca %struct.r8152*, align 8
  %advertising = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !25293, metadata !DIExpression()), !dbg !25294
  store %struct.ethtool_link_ksettings* %cmd, %struct.ethtool_link_ksettings** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %cmd.addr, metadata !25295, metadata !DIExpression()), !dbg !25296
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp, metadata !25297, metadata !DIExpression()), !dbg !25298
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !25299
  %call = call i8* @netdev_priv(%struct.net_device* %0) #13, !dbg !25300
  %1 = bitcast i8* %call to %struct.r8152*, !dbg !25300
  store %struct.r8152* %1, %struct.r8152** %tp, align 8, !dbg !25298
  call void @llvm.dbg.declare(metadata i32* %advertising, metadata !25301, metadata !DIExpression()), !dbg !25302
  store i32 0, i32* %advertising, align 4, !dbg !25302
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !25303, metadata !DIExpression()), !dbg !25304
  %2 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25305
  %intf = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 3, !dbg !25306
  %3 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !25306
  %call1 = call i32 @usb_autopm_get_interface(%struct.usb_interface* %3) #13, !dbg !25307
  store i32 %call1, i32* %ret, align 4, !dbg !25308
  %4 = load i32, i32* %ret, align 4, !dbg !25309
  %cmp = icmp slt i32 %4, 0, !dbg !25311
  br i1 %cmp, label %if.then, label %if.end, !dbg !25312

if.then:                                          ; preds = %entry
  br label %out, !dbg !25313

if.end:                                           ; preds = %entry
  %5 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !25314
  %link_modes = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %5, i32 0, i32 1, !dbg !25316
  %advertising2 = getelementptr inbounds %struct.anon.156, %struct.anon.156* %link_modes, i32 0, i32 1, !dbg !25317
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %advertising2, i64 0, i64 0, !dbg !25314
  %call3 = call zeroext i1 @test_bit(i64 0, i64* %arraydecay) #13, !dbg !25318
  br i1 %call3, label %if.then4, label %if.end6, !dbg !25319

if.then4:                                         ; preds = %if.end
  %6 = load i32, i32* %advertising, align 4, !dbg !25320
  %conv = zext i32 %6 to i64, !dbg !25320
  %or = or i64 %conv, 1, !dbg !25320
  %conv5 = trunc i64 %or to i32, !dbg !25320
  store i32 %conv5, i32* %advertising, align 4, !dbg !25320
  br label %if.end6, !dbg !25321

if.end6:                                          ; preds = %if.then4, %if.end
  %7 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !25322
  %link_modes7 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %7, i32 0, i32 1, !dbg !25324
  %advertising8 = getelementptr inbounds %struct.anon.156, %struct.anon.156* %link_modes7, i32 0, i32 1, !dbg !25325
  %arraydecay9 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising8, i64 0, i64 0, !dbg !25322
  %call10 = call zeroext i1 @test_bit(i64 1, i64* %arraydecay9) #13, !dbg !25326
  br i1 %call10, label %if.then11, label %if.end15, !dbg !25327

if.then11:                                        ; preds = %if.end6
  %8 = load i32, i32* %advertising, align 4, !dbg !25328
  %conv12 = zext i32 %8 to i64, !dbg !25328
  %or13 = or i64 %conv12, 2, !dbg !25328
  %conv14 = trunc i64 %or13 to i32, !dbg !25328
  store i32 %conv14, i32* %advertising, align 4, !dbg !25328
  br label %if.end15, !dbg !25329

if.end15:                                         ; preds = %if.then11, %if.end6
  %9 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !25330
  %link_modes16 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %9, i32 0, i32 1, !dbg !25332
  %advertising17 = getelementptr inbounds %struct.anon.156, %struct.anon.156* %link_modes16, i32 0, i32 1, !dbg !25333
  %arraydecay18 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising17, i64 0, i64 0, !dbg !25330
  %call19 = call zeroext i1 @test_bit(i64 2, i64* %arraydecay18) #13, !dbg !25334
  br i1 %call19, label %if.then20, label %if.end24, !dbg !25335

if.then20:                                        ; preds = %if.end15
  %10 = load i32, i32* %advertising, align 4, !dbg !25336
  %conv21 = zext i32 %10 to i64, !dbg !25336
  %or22 = or i64 %conv21, 4, !dbg !25336
  %conv23 = trunc i64 %or22 to i32, !dbg !25336
  store i32 %conv23, i32* %advertising, align 4, !dbg !25336
  br label %if.end24, !dbg !25337

if.end24:                                         ; preds = %if.then20, %if.end15
  %11 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !25338
  %link_modes25 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %11, i32 0, i32 1, !dbg !25340
  %advertising26 = getelementptr inbounds %struct.anon.156, %struct.anon.156* %link_modes25, i32 0, i32 1, !dbg !25341
  %arraydecay27 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising26, i64 0, i64 0, !dbg !25338
  %call28 = call zeroext i1 @test_bit(i64 3, i64* %arraydecay27) #13, !dbg !25342
  br i1 %call28, label %if.then29, label %if.end33, !dbg !25343

if.then29:                                        ; preds = %if.end24
  %12 = load i32, i32* %advertising, align 4, !dbg !25344
  %conv30 = zext i32 %12 to i64, !dbg !25344
  %or31 = or i64 %conv30, 8, !dbg !25344
  %conv32 = trunc i64 %or31 to i32, !dbg !25344
  store i32 %conv32, i32* %advertising, align 4, !dbg !25344
  br label %if.end33, !dbg !25345

if.end33:                                         ; preds = %if.then29, %if.end24
  %13 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !25346
  %link_modes34 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %13, i32 0, i32 1, !dbg !25348
  %advertising35 = getelementptr inbounds %struct.anon.156, %struct.anon.156* %link_modes34, i32 0, i32 1, !dbg !25349
  %arraydecay36 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising35, i64 0, i64 0, !dbg !25346
  %call37 = call zeroext i1 @test_bit(i64 4, i64* %arraydecay36) #13, !dbg !25350
  br i1 %call37, label %if.then38, label %if.end42, !dbg !25351

if.then38:                                        ; preds = %if.end33
  %14 = load i32, i32* %advertising, align 4, !dbg !25352
  %conv39 = zext i32 %14 to i64, !dbg !25352
  %or40 = or i64 %conv39, 16, !dbg !25352
  %conv41 = trunc i64 %or40 to i32, !dbg !25352
  store i32 %conv41, i32* %advertising, align 4, !dbg !25352
  br label %if.end42, !dbg !25353

if.end42:                                         ; preds = %if.then38, %if.end33
  %15 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !25354
  %link_modes43 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %15, i32 0, i32 1, !dbg !25356
  %advertising44 = getelementptr inbounds %struct.anon.156, %struct.anon.156* %link_modes43, i32 0, i32 1, !dbg !25357
  %arraydecay45 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising44, i64 0, i64 0, !dbg !25354
  %call46 = call zeroext i1 @test_bit(i64 5, i64* %arraydecay45) #13, !dbg !25358
  br i1 %call46, label %if.then47, label %if.end51, !dbg !25359

if.then47:                                        ; preds = %if.end42
  %16 = load i32, i32* %advertising, align 4, !dbg !25360
  %conv48 = zext i32 %16 to i64, !dbg !25360
  %or49 = or i64 %conv48, 32, !dbg !25360
  %conv50 = trunc i64 %or49 to i32, !dbg !25360
  store i32 %conv50, i32* %advertising, align 4, !dbg !25360
  br label %if.end51, !dbg !25361

if.end51:                                         ; preds = %if.then47, %if.end42
  %17 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25362
  %control = getelementptr inbounds %struct.r8152, %struct.r8152* %17, i32 0, i32 18, !dbg !25363
  call void @mutex_lock(%struct.mutex* %control) #13, !dbg !25364
  %18 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25365
  %19 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !25366
  %base = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %19, i32 0, i32 0, !dbg !25367
  %autoneg = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base, i32 0, i32 5, !dbg !25368
  %20 = load i8, i8* %autoneg, align 1, !dbg !25368
  %21 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !25369
  %base52 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %21, i32 0, i32 0, !dbg !25370
  %speed = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base52, i32 0, i32 1, !dbg !25371
  %22 = load i32, i32* %speed, align 4, !dbg !25371
  %23 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !25372
  %base53 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %23, i32 0, i32 0, !dbg !25373
  %duplex = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base53, i32 0, i32 2, !dbg !25374
  %24 = load i8, i8* %duplex, align 8, !dbg !25374
  %25 = load i32, i32* %advertising, align 4, !dbg !25375
  %call54 = call i32 @rtl8152_set_speed(%struct.r8152* %18, i8 zeroext %20, i32 %22, i8 zeroext %24, i32 %25) #13, !dbg !25376
  store i32 %call54, i32* %ret, align 4, !dbg !25377
  %26 = load i32, i32* %ret, align 4, !dbg !25378
  %tobool = icmp ne i32 %26, 0, !dbg !25378
  br i1 %tobool, label %if.end67, label %if.then55, !dbg !25380

if.then55:                                        ; preds = %if.end51
  %27 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !25381
  %base56 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %27, i32 0, i32 0, !dbg !25383
  %autoneg57 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base56, i32 0, i32 5, !dbg !25384
  %28 = load i8, i8* %autoneg57, align 1, !dbg !25384
  %29 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25385
  %autoneg58 = getelementptr inbounds %struct.r8152, %struct.r8152* %29, i32 0, i32 41, !dbg !25386
  store i8 %28, i8* %autoneg58, align 2, !dbg !25387
  %30 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !25388
  %base59 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %30, i32 0, i32 0, !dbg !25389
  %speed60 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base59, i32 0, i32 1, !dbg !25390
  %31 = load i32, i32* %speed60, align 4, !dbg !25390
  %conv61 = trunc i32 %31 to i16, !dbg !25388
  %32 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25391
  %speed62 = getelementptr inbounds %struct.r8152, %struct.r8152* %32, i32 0, i32 36, !dbg !25392
  store i16 %conv61, i16* %speed62, align 2, !dbg !25393
  %33 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !25394
  %base63 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %33, i32 0, i32 0, !dbg !25395
  %duplex64 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base63, i32 0, i32 2, !dbg !25396
  %34 = load i8, i8* %duplex64, align 8, !dbg !25396
  %35 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25397
  %duplex65 = getelementptr inbounds %struct.r8152, %struct.r8152* %35, i32 0, i32 40, !dbg !25398
  store i8 %34, i8* %duplex65, align 1, !dbg !25399
  %36 = load i32, i32* %advertising, align 4, !dbg !25400
  %37 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25401
  %advertising66 = getelementptr inbounds %struct.r8152, %struct.r8152* %37, i32 0, i32 31, !dbg !25402
  store i32 %36, i32* %advertising66, align 4, !dbg !25403
  br label %if.end67, !dbg !25404

if.end67:                                         ; preds = %if.then55, %if.end51
  %38 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25405
  %control68 = getelementptr inbounds %struct.r8152, %struct.r8152* %38, i32 0, i32 18, !dbg !25406
  call void @mutex_unlock(%struct.mutex* %control68) #13, !dbg !25407
  %39 = load %struct.r8152*, %struct.r8152** %tp, align 8, !dbg !25408
  %intf69 = getelementptr inbounds %struct.r8152, %struct.r8152* %39, i32 0, i32 3, !dbg !25409
  %40 = load %struct.usb_interface*, %struct.usb_interface** %intf69, align 8, !dbg !25409
  call void @usb_autopm_put_interface(%struct.usb_interface* %40) #13, !dbg !25410
  br label %out, !dbg !25410

out:                                              ; preds = %if.end67, %if.then
  call void @llvm.dbg.label(metadata !25411), !dbg !25412
  %41 = load i32, i32* %ret, align 4, !dbg !25413
  ret i32 %41, !dbg !25414
}

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_make_path(%struct.usb_device* %dev, i8* %buf, i64 %size) #2 !dbg !25415 {
entry:
  %dev.addr = alloca %struct.usb_device*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %actual = alloca i32, align 4
  store %struct.usb_device* %dev, %struct.usb_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev.addr, metadata !25418, metadata !DIExpression()), !dbg !25419
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !25420, metadata !DIExpression()), !dbg !25421
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !25422, metadata !DIExpression()), !dbg !25423
  call void @llvm.dbg.declare(metadata i32* %actual, metadata !25424, metadata !DIExpression()), !dbg !25425
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !25426
  %1 = load i64, i64* %size.addr, align 8, !dbg !25427
  %2 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !25428
  %bus = getelementptr inbounds %struct.usb_device, %struct.usb_device* %2, i32 0, i32 12, !dbg !25429
  %3 = load %struct.usb_bus*, %struct.usb_bus** %bus, align 8, !dbg !25429
  %bus_name = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %3, i32 0, i32 3, !dbg !25430
  %4 = load i8*, i8** %bus_name, align 8, !dbg !25430
  %5 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !25431
  %devpath = getelementptr inbounds %struct.usb_device, %struct.usb_device* %5, i32 0, i32 1, !dbg !25432
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %devpath, i64 0, i64 0, !dbg !25431
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68, i64 0, i64 0), i8* %4, i8* %arraydecay) #13, !dbg !25433
  store i32 %call, i32* %actual, align 4, !dbg !25434
  %6 = load i32, i32* %actual, align 4, !dbg !25435
  %7 = load i64, i64* %size.addr, align 8, !dbg !25436
  %conv = trunc i64 %7 to i32, !dbg !25437
  %cmp = icmp sge i32 %6, %conv, !dbg !25438
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !25439

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !25439

cond.false:                                       ; preds = %entry
  %8 = load i32, i32* %actual, align 4, !dbg !25440
  br label %cond.end, !dbg !25439

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %8, %cond.false ], !dbg !25439
  ret i32 %cond, !dbg !25441
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #1

; Function Attrs: noredzone
declare dso_local i32 @mii_nway_restart(%struct.mii_if_info*) #1

; Function Attrs: noredzone
declare dso_local void @mii_ethtool_get_link_ksettings(%struct.mii_if_info*, %struct.ethtool_link_ksettings*) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_delayed_work_on(i32, %struct.workqueue_struct*, %struct.delayed_work*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @determine_ethernet_addr(%struct.r8152* %tp, %struct.sockaddr* %sa) #2 !dbg !25442 {
entry:
  %retval = alloca i32, align 4
  %tp.addr = alloca %struct.r8152*, align 8
  %sa.addr = alloca %struct.sockaddr*, align 8
  %dev = alloca %struct.net_device*, align 8
  %ret = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !25445, metadata !DIExpression()), !dbg !25446
  store %struct.sockaddr* %sa, %struct.sockaddr** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %sa.addr, metadata !25447, metadata !DIExpression()), !dbg !25448
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !25449, metadata !DIExpression()), !dbg !25450
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25451
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 4, !dbg !25452
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !25452
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !25450
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !25453, metadata !DIExpression()), !dbg !25454
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !25455
  %type = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 47, !dbg !25456
  %3 = load i16, i16* %type, align 4, !dbg !25456
  %4 = load %struct.sockaddr*, %struct.sockaddr** %sa.addr, align 8, !dbg !25457
  %sa_family = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i32 0, i32 0, !dbg !25458
  store i16 %3, i16* %sa_family, align 2, !dbg !25459
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25460
  %udev = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 1, !dbg !25461
  %6 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !25461
  %dev1 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 14, !dbg !25462
  %7 = load %struct.sockaddr*, %struct.sockaddr** %sa.addr, align 8, !dbg !25463
  %sa_data = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %7, i32 0, i32 1, !dbg !25464
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data, i64 0, i64 0, !dbg !25463
  %call = call i32 @eth_platform_get_mac_address(%struct.device* %dev1, i8* %arraydecay) #13, !dbg !25465
  store i32 %call, i32* %ret, align 4, !dbg !25466
  %8 = load i32, i32* %ret, align 4, !dbg !25467
  %cmp = icmp slt i32 %8, 0, !dbg !25469
  br i1 %cmp, label %if.then, label %if.end16, !dbg !25470

if.then:                                          ; preds = %entry
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25471
  %version = getelementptr inbounds %struct.r8152, %struct.r8152* %9, i32 0, i32 39, !dbg !25474
  %10 = load i8, i8* %version, align 8, !dbg !25474
  %conv = zext i8 %10 to i32, !dbg !25471
  %cmp2 = icmp eq i32 %conv, 1, !dbg !25475
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !25476

if.then4:                                         ; preds = %if.then
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25477
  %12 = load %struct.sockaddr*, %struct.sockaddr** %sa.addr, align 8, !dbg !25479
  %sa_data5 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %12, i32 0, i32 1, !dbg !25480
  %arraydecay6 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data5, i64 0, i64 0, !dbg !25479
  %call7 = call i32 @pla_ocp_read(%struct.r8152* %11, i16 zeroext -16384, i16 zeroext 8, i8* %arraydecay6) #13, !dbg !25481
  store i32 %call7, i32* %ret, align 4, !dbg !25482
  br label %if.end15, !dbg !25483

if.else:                                          ; preds = %if.then
  %13 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25484
  %14 = load %struct.sockaddr*, %struct.sockaddr** %sa.addr, align 8, !dbg !25486
  %call8 = call i32 @vendor_mac_passthru_addr_read(%struct.r8152* %13, %struct.sockaddr* %14) #13, !dbg !25487
  store i32 %call8, i32* %ret, align 4, !dbg !25488
  %15 = load i32, i32* %ret, align 4, !dbg !25489
  %cmp9 = icmp slt i32 %15, 0, !dbg !25491
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !25492

if.then11:                                        ; preds = %if.else
  %16 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25493
  %17 = load %struct.sockaddr*, %struct.sockaddr** %sa.addr, align 8, !dbg !25494
  %sa_data12 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %17, i32 0, i32 1, !dbg !25495
  %arraydecay13 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data12, i64 0, i64 0, !dbg !25494
  %call14 = call i32 @pla_ocp_read(%struct.r8152* %16, i16 zeroext -12288, i16 zeroext 8, i8* %arraydecay13) #13, !dbg !25496
  store i32 %call14, i32* %ret, align 4, !dbg !25497
  br label %if.end, !dbg !25498

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then4
  br label %if.end16, !dbg !25499

if.end16:                                         ; preds = %if.end15, %entry
  %18 = load i32, i32* %ret, align 4, !dbg !25500
  %cmp17 = icmp slt i32 %18, 0, !dbg !25502
  br i1 %cmp17, label %if.then19, label %if.else22, !dbg !25503

if.then19:                                        ; preds = %if.end16
  br label %do.body, !dbg !25504

do.body:                                          ; preds = %if.then19
  %19 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25506
  %msg_enable = getelementptr inbounds %struct.r8152, %struct.r8152* %19, i32 0, i32 28, !dbg !25506
  %20 = load i32, i32* %msg_enable, align 8, !dbg !25506
  %and = and i32 %20, 2, !dbg !25506
  %tobool = icmp ne i32 %and, 0, !dbg !25506
  br i1 %tobool, label %if.then20, label %if.end21, !dbg !25509

if.then20:                                        ; preds = %do.body
  %21 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !25506
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %21, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.70, i64 0, i64 0)) #14, !dbg !25506
  br label %if.end21, !dbg !25506

if.end21:                                         ; preds = %if.then20, %do.body
  br label %do.end, !dbg !25509

do.end:                                           ; preds = %if.end21
  br label %if.end48, !dbg !25510

if.else22:                                        ; preds = %if.end16
  %22 = load %struct.sockaddr*, %struct.sockaddr** %sa.addr, align 8, !dbg !25511
  %sa_data23 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %22, i32 0, i32 1, !dbg !25513
  %arraydecay24 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data23, i64 0, i64 0, !dbg !25511
  %call25 = call zeroext i1 @is_valid_ether_addr(i8* %arraydecay24) #13, !dbg !25514
  br i1 %call25, label %if.end47, label %if.then26, !dbg !25515

if.then26:                                        ; preds = %if.else22
  br label %do.body27, !dbg !25516

do.body27:                                        ; preds = %if.then26
  %23 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25518
  %msg_enable28 = getelementptr inbounds %struct.r8152, %struct.r8152* %23, i32 0, i32 28, !dbg !25518
  %24 = load i32, i32* %msg_enable28, align 8, !dbg !25518
  %and29 = and i32 %24, 2, !dbg !25518
  %tobool30 = icmp ne i32 %and29, 0, !dbg !25518
  br i1 %tobool30, label %if.then31, label %if.end34, !dbg !25521

if.then31:                                        ; preds = %do.body27
  %25 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !25518
  %26 = load %struct.sockaddr*, %struct.sockaddr** %sa.addr, align 8, !dbg !25518
  %sa_data32 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %26, i32 0, i32 1, !dbg !25518
  %arraydecay33 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data32, i64 0, i64 0, !dbg !25518
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %25, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.71, i64 0, i64 0), i8* %arraydecay33) #14, !dbg !25518
  br label %if.end34, !dbg !25518

if.end34:                                         ; preds = %if.then31, %do.body27
  br label %do.end35, !dbg !25521

do.end35:                                         ; preds = %if.end34
  %27 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !25522
  call void @eth_hw_addr_random(%struct.net_device* %27) #13, !dbg !25523
  %28 = load %struct.sockaddr*, %struct.sockaddr** %sa.addr, align 8, !dbg !25524
  %sa_data36 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %28, i32 0, i32 1, !dbg !25525
  %arraydecay37 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data36, i64 0, i64 0, !dbg !25524
  %29 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !25526
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %29, i32 0, i32 74, !dbg !25527
  %30 = load i8*, i8** %dev_addr, align 8, !dbg !25527
  call void @ether_addr_copy(i8* %arraydecay37, i8* %30) #13, !dbg !25528
  br label %do.body38, !dbg !25529

do.body38:                                        ; preds = %do.end35
  %31 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25530
  %msg_enable39 = getelementptr inbounds %struct.r8152, %struct.r8152* %31, i32 0, i32 28, !dbg !25530
  %32 = load i32, i32* %msg_enable39, align 8, !dbg !25530
  %and40 = and i32 %32, 2, !dbg !25530
  %tobool41 = icmp ne i32 %and40, 0, !dbg !25530
  br i1 %tobool41, label %if.then42, label %if.end45, !dbg !25533

if.then42:                                        ; preds = %do.body38
  %33 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !25530
  %34 = load %struct.sockaddr*, %struct.sockaddr** %sa.addr, align 8, !dbg !25530
  %sa_data43 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %34, i32 0, i32 1, !dbg !25530
  %arraydecay44 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data43, i64 0, i64 0, !dbg !25530
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %33, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.72, i64 0, i64 0), i8* %arraydecay44) #14, !dbg !25530
  br label %if.end45, !dbg !25530

if.end45:                                         ; preds = %if.then42, %do.body38
  br label %do.end46, !dbg !25533

do.end46:                                         ; preds = %if.end45
  store i32 0, i32* %retval, align 4, !dbg !25534
  br label %return, !dbg !25534

if.end47:                                         ; preds = %if.else22
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %do.end
  %35 = load i32, i32* %ret, align 4, !dbg !25535
  store i32 %35, i32* %retval, align 4, !dbg !25536
  br label %return, !dbg !25536

return:                                           ; preds = %if.end48, %do.end46
  %36 = load i32, i32* %retval, align 4, !dbg !25537
  ret i32 %36, !dbg !25537
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ether_addr_copy(i8* %dst, i8* %src) #2 !dbg !25538 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !25541, metadata !DIExpression()), !dbg !25542
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !25543, metadata !DIExpression()), !dbg !25544
  %0 = load i8*, i8** %src.addr, align 8, !dbg !25545
  %1 = bitcast i8* %0 to i32*, !dbg !25546
  %2 = load i32, i32* %1, align 4, !dbg !25546
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !25547
  %4 = bitcast i8* %3 to i32*, !dbg !25548
  store i32 %2, i32* %4, align 4, !dbg !25549
  %5 = load i8*, i8** %src.addr, align 8, !dbg !25550
  %add.ptr = getelementptr i8, i8* %5, i64 4, !dbg !25551
  %6 = bitcast i8* %add.ptr to i16*, !dbg !25552
  %7 = load i16, i16* %6, align 2, !dbg !25552
  %8 = load i8*, i8** %dst.addr, align 8, !dbg !25553
  %add.ptr1 = getelementptr i8, i8* %8, i64 4, !dbg !25554
  %9 = bitcast i8* %add.ptr1 to i16*, !dbg !25555
  store i16 %7, i16* %9, align 2, !dbg !25556
  ret void, !dbg !25557
}

; Function Attrs: noredzone
declare dso_local i32 @eth_platform_get_mac_address(%struct.device*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pla_ocp_read(%struct.r8152* %tp, i16 zeroext %index, i16 zeroext %size, i8* %data) #2 !dbg !25558 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %index.addr = alloca i16, align 2
  %size.addr = alloca i16, align 2
  %data.addr = alloca i8*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !25561, metadata !DIExpression()), !dbg !25562
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !25563, metadata !DIExpression()), !dbg !25564
  store i16 %size, i16* %size.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %size.addr, metadata !25565, metadata !DIExpression()), !dbg !25566
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !25567, metadata !DIExpression()), !dbg !25568
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25569
  %1 = load i16, i16* %index.addr, align 2, !dbg !25570
  %2 = load i16, i16* %size.addr, align 2, !dbg !25571
  %3 = load i8*, i8** %data.addr, align 8, !dbg !25572
  %call = call i32 @generic_ocp_read(%struct.r8152* %0, i16 zeroext %1, i16 zeroext %2, i8* %3, i16 zeroext 256) #13, !dbg !25573
  ret i32 %call, !dbg !25574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vendor_mac_passthru_addr_read(%struct.r8152* %tp, %struct.sockaddr* %sa) #2 !dbg !25575 {
entry:
  %retval = alloca i32, align 4
  %tp.addr = alloca %struct.r8152*, align 8
  %sa.addr = alloca %struct.sockaddr*, align 8
  %status = alloca i32, align 4
  %buffer = alloca %struct.acpi_buffer, align 8
  %obj = alloca %union.acpi_object*, align 8
  %ret = alloca i32, align 4
  %ocp_data = alloca i32, align 4
  %buf = alloca [6 x i8], align 1
  %mac_obj_name = alloca i8*, align 8
  %mac_obj_type = alloca i32, align 4
  %mac_strlen = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp20 = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !25576, metadata !DIExpression()), !dbg !25577
  store %struct.sockaddr* %sa, %struct.sockaddr** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %sa.addr, metadata !25578, metadata !DIExpression()), !dbg !25579
  call void @llvm.dbg.declare(metadata i32* %status, metadata !25580, metadata !DIExpression()), !dbg !25582
  call void @llvm.dbg.declare(metadata %struct.acpi_buffer* %buffer, metadata !25583, metadata !DIExpression()), !dbg !25589
  %0 = bitcast %struct.acpi_buffer* %buffer to i8*, !dbg !25589
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.acpi_buffer* @__const.vendor_mac_passthru_addr_read.buffer to i8*), i64 16, i1 false), !dbg !25589
  call void @llvm.dbg.declare(metadata %union.acpi_object** %obj, metadata !25590, metadata !DIExpression()), !dbg !25591
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !25592, metadata !DIExpression()), !dbg !25593
  store i32 -22, i32* %ret, align 4, !dbg !25593
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !25594, metadata !DIExpression()), !dbg !25595
  call void @llvm.dbg.declare(metadata [6 x i8]* %buf, metadata !25596, metadata !DIExpression()), !dbg !25597
  call void @llvm.dbg.declare(metadata i8** %mac_obj_name, metadata !25598, metadata !DIExpression()), !dbg !25599
  call void @llvm.dbg.declare(metadata i32* %mac_obj_type, metadata !25600, metadata !DIExpression()), !dbg !25601
  call void @llvm.dbg.declare(metadata i32* %mac_strlen, metadata !25602, metadata !DIExpression()), !dbg !25603
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25604
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %1, i32 0, i32 0, !dbg !25606
  %call = call zeroext i1 @test_bit(i64 9, i64* %flags) #13, !dbg !25607
  br i1 %call, label %if.then, label %if.else, !dbg !25608

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0), i8** %mac_obj_name, align 8, !dbg !25609
  store i32 2, i32* %mac_obj_type, align 4, !dbg !25611
  store i32 22, i32* %mac_strlen, align 4, !dbg !25612
  br label %if.end23, !dbg !25613

if.else:                                          ; preds = %entry
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25614
  %call1 = call zeroext i16 @ocp_read_word(%struct.r8152* %2, i16 zeroext 0, i16 zeroext -10214) #13, !dbg !25616
  %conv = zext i16 %call1 to i32, !dbg !25616
  store i32 %conv, i32* %ocp_data, align 4, !dbg !25617
  %3 = load i32, i32* %ocp_data, align 4, !dbg !25618
  %and = and i32 %3, 65248, !dbg !25620
  %cmp = icmp eq i32 %and, 4096, !dbg !25621
  br i1 %cmp, label %if.then3, label %if.else10, !dbg !25622

if.then3:                                         ; preds = %if.else
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25623
  %call4 = call zeroext i8 @ocp_read_byte(%struct.r8152* %4, i16 zeroext 0, i16 zeroext -12325) #13, !dbg !25625
  %conv5 = zext i8 %call4 to i32, !dbg !25625
  store i32 %conv5, i32* %ocp_data, align 4, !dbg !25626
  %5 = load i32, i32* %ocp_data, align 4, !dbg !25627
  %and6 = and i32 %5, 1, !dbg !25629
  %cmp7 = icmp ne i32 %and6, 1, !dbg !25630
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !25631

if.then9:                                         ; preds = %if.then3
  store i32 0, i32* %tmp, align 4, !dbg !25632
  %6 = load i32, i32* %tmp, align 4, !dbg !25636
  store i32 -19, i32* %retval, align 4, !dbg !25637
  br label %return, !dbg !25637

if.end:                                           ; preds = %if.then3
  br label %if.end22, !dbg !25638

if.else10:                                        ; preds = %if.else
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25639
  %call11 = call zeroext i8 @ocp_read_byte(%struct.r8152* %7, i16 zeroext 0, i16 zeroext -10209) #13, !dbg !25641
  %conv12 = zext i8 %call11 to i32, !dbg !25641
  store i32 %conv12, i32* %ocp_data, align 4, !dbg !25642
  %8 = load i32, i32* %ocp_data, align 4, !dbg !25643
  %and13 = and i32 %8, 4, !dbg !25645
  %cmp14 = icmp eq i32 %and13, 0, !dbg !25646
  br i1 %cmp14, label %land.lhs.true, label %if.end21, !dbg !25647

land.lhs.true:                                    ; preds = %if.else10
  %9 = load i32, i32* %ocp_data, align 4, !dbg !25648
  %and16 = and i32 %9, 1, !dbg !25649
  %cmp17 = icmp eq i32 %and16, 0, !dbg !25650
  br i1 %cmp17, label %if.then19, label %if.end21, !dbg !25651

if.then19:                                        ; preds = %land.lhs.true
  store i32 0, i32* %tmp20, align 4, !dbg !25652
  %10 = load i32, i32* %tmp20, align 4, !dbg !25656
  store i32 -19, i32* %retval, align 4, !dbg !25657
  br label %return, !dbg !25657

if.end21:                                         ; preds = %land.lhs.true, %if.else10
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.end
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.74, i64 0, i64 0), i8** %mac_obj_name, align 8, !dbg !25658
  store i32 3, i32* %mac_obj_type, align 4, !dbg !25659
  store i32 23, i32* %mac_strlen, align 4, !dbg !25660
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then
  %11 = load i8*, i8** %mac_obj_name, align 8, !dbg !25661
  %call24 = call i32 @acpi_evaluate_object(i8* null, i8* %11, %struct.acpi_object_list* null, %struct.acpi_buffer* %buffer) #13, !dbg !25662
  store i32 %call24, i32* %status, align 4, !dbg !25663
  %pointer = getelementptr inbounds %struct.acpi_buffer, %struct.acpi_buffer* %buffer, i32 0, i32 1, !dbg !25664
  %12 = load i8*, i8** %pointer, align 8, !dbg !25664
  %13 = bitcast i8* %12 to %union.acpi_object*, !dbg !25665
  store %union.acpi_object* %13, %union.acpi_object** %obj, align 8, !dbg !25666
  %14 = load i32, i32* %status, align 4, !dbg !25667
  %tobool = icmp ne i32 %14, 0, !dbg !25667
  br i1 %tobool, label %if.then25, label %if.end26, !dbg !25669

if.then25:                                        ; preds = %if.end23
  store i32 -19, i32* %retval, align 4, !dbg !25670
  br label %return, !dbg !25670

if.end26:                                         ; preds = %if.end23
  %15 = load %union.acpi_object*, %union.acpi_object** %obj, align 8, !dbg !25671
  %type = bitcast %union.acpi_object* %15 to i32*, !dbg !25673
  %16 = load i32, i32* %type, align 8, !dbg !25673
  %17 = load i32, i32* %mac_obj_type, align 4, !dbg !25674
  %cmp27 = icmp ne i32 %16, %17, !dbg !25675
  br i1 %cmp27, label %if.then31, label %lor.lhs.false, !dbg !25676

lor.lhs.false:                                    ; preds = %if.end26
  %18 = load %union.acpi_object*, %union.acpi_object** %obj, align 8, !dbg !25677
  %string = bitcast %union.acpi_object* %18 to %struct.anon.165*, !dbg !25678
  %length = getelementptr inbounds %struct.anon.165, %struct.anon.165* %string, i32 0, i32 1, !dbg !25679
  %19 = load i32, i32* %length, align 4, !dbg !25679
  %20 = load i32, i32* %mac_strlen, align 4, !dbg !25680
  %cmp29 = icmp ne i32 %19, %20, !dbg !25681
  br i1 %cmp29, label %if.then31, label %if.end39, !dbg !25682

if.then31:                                        ; preds = %lor.lhs.false, %if.end26
  br label %do.body, !dbg !25683

do.body:                                          ; preds = %if.then31
  %21 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25685
  %msg_enable = getelementptr inbounds %struct.r8152, %struct.r8152* %21, i32 0, i32 28, !dbg !25685
  %22 = load i32, i32* %msg_enable, align 8, !dbg !25685
  %and32 = and i32 %22, 2, !dbg !25685
  %tobool33 = icmp ne i32 %and32, 0, !dbg !25685
  br i1 %tobool33, label %if.then34, label %if.end38, !dbg !25688

if.then34:                                        ; preds = %do.body
  %23 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25685
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %23, i32 0, i32 4, !dbg !25685
  %24 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !25685
  %25 = load %union.acpi_object*, %union.acpi_object** %obj, align 8, !dbg !25685
  %type35 = bitcast %union.acpi_object* %25 to i32*, !dbg !25685
  %26 = load i32, i32* %type35, align 8, !dbg !25685
  %27 = load %union.acpi_object*, %union.acpi_object** %obj, align 8, !dbg !25685
  %string36 = bitcast %union.acpi_object* %27 to %struct.anon.165*, !dbg !25685
  %length37 = getelementptr inbounds %struct.anon.165, %struct.anon.165* %string36, i32 0, i32 1, !dbg !25685
  %28 = load i32, i32* %length37, align 4, !dbg !25685
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %24, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.75, i64 0, i64 0), i32 %26, i32 %28) #14, !dbg !25685
  br label %if.end38, !dbg !25685

if.end38:                                         ; preds = %if.then34, %do.body
  br label %do.end, !dbg !25688

do.end:                                           ; preds = %if.end38
  br label %amacout, !dbg !25689

if.end39:                                         ; preds = %lor.lhs.false
  %29 = load %union.acpi_object*, %union.acpi_object** %obj, align 8, !dbg !25690
  %string40 = bitcast %union.acpi_object* %29 to %struct.anon.165*, !dbg !25692
  %pointer41 = getelementptr inbounds %struct.anon.165, %struct.anon.165* %string40, i32 0, i32 2, !dbg !25693
  %30 = load i8*, i8** %pointer41, align 8, !dbg !25693
  %call42 = call i32 @strncmp(i8* %30, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.76, i64 0, i64 0), i64 9) #13, !dbg !25694
  %cmp43 = icmp ne i32 %call42, 0, !dbg !25695
  br i1 %cmp43, label %if.then51, label %lor.lhs.false45, !dbg !25696

lor.lhs.false45:                                  ; preds = %if.end39
  %31 = load %union.acpi_object*, %union.acpi_object** %obj, align 8, !dbg !25697
  %string46 = bitcast %union.acpi_object* %31 to %struct.anon.165*, !dbg !25698
  %pointer47 = getelementptr inbounds %struct.anon.165, %struct.anon.165* %string46, i32 0, i32 2, !dbg !25699
  %32 = load i8*, i8** %pointer47, align 8, !dbg !25699
  %add.ptr = getelementptr i8, i8* %32, i64 21, !dbg !25700
  %call48 = call i32 @strncmp(i8* %add.ptr, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.77, i64 0, i64 0), i64 1) #13, !dbg !25701
  %cmp49 = icmp ne i32 %call48, 0, !dbg !25702
  br i1 %cmp49, label %if.then51, label %if.end60, !dbg !25703

if.then51:                                        ; preds = %lor.lhs.false45, %if.end39
  br label %do.body52, !dbg !25704

do.body52:                                        ; preds = %if.then51
  %33 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25706
  %msg_enable53 = getelementptr inbounds %struct.r8152, %struct.r8152* %33, i32 0, i32 28, !dbg !25706
  %34 = load i32, i32* %msg_enable53, align 8, !dbg !25706
  %and54 = and i32 %34, 2, !dbg !25706
  %tobool55 = icmp ne i32 %and54, 0, !dbg !25706
  br i1 %tobool55, label %if.then56, label %if.end58, !dbg !25709

if.then56:                                        ; preds = %do.body52
  %35 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25706
  %netdev57 = getelementptr inbounds %struct.r8152, %struct.r8152* %35, i32 0, i32 4, !dbg !25706
  %36 = load %struct.net_device*, %struct.net_device** %netdev57, align 8, !dbg !25706
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %36, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.78, i64 0, i64 0)) #14, !dbg !25706
  br label %if.end58, !dbg !25706

if.end58:                                         ; preds = %if.then56, %do.body52
  br label %do.end59, !dbg !25709

do.end59:                                         ; preds = %if.end58
  br label %amacout, !dbg !25710

if.end60:                                         ; preds = %lor.lhs.false45
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %buf, i64 0, i64 0, !dbg !25711
  %37 = load %union.acpi_object*, %union.acpi_object** %obj, align 8, !dbg !25712
  %string61 = bitcast %union.acpi_object* %37 to %struct.anon.165*, !dbg !25713
  %pointer62 = getelementptr inbounds %struct.anon.165, %struct.anon.165* %string61, i32 0, i32 2, !dbg !25714
  %38 = load i8*, i8** %pointer62, align 8, !dbg !25714
  %add.ptr63 = getelementptr i8, i8* %38, i64 9, !dbg !25715
  %call64 = call i32 @hex2bin(i8* %arraydecay, i8* %add.ptr63, i64 6) #13, !dbg !25716
  store i32 %call64, i32* %ret, align 4, !dbg !25717
  %39 = load i32, i32* %ret, align 4, !dbg !25718
  %cmp65 = icmp eq i32 %39, 0, !dbg !25720
  br i1 %cmp65, label %land.lhs.true67, label %if.then71, !dbg !25721

land.lhs.true67:                                  ; preds = %if.end60
  %arraydecay68 = getelementptr inbounds [6 x i8], [6 x i8]* %buf, i64 0, i64 0, !dbg !25722
  %call69 = call zeroext i1 @is_valid_ether_addr(i8* %arraydecay68) #13, !dbg !25723
  br i1 %call69, label %if.end81, label %if.then71, !dbg !25724

if.then71:                                        ; preds = %land.lhs.true67, %if.end60
  br label %do.body72, !dbg !25725

do.body72:                                        ; preds = %if.then71
  %40 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25727
  %msg_enable73 = getelementptr inbounds %struct.r8152, %struct.r8152* %40, i32 0, i32 28, !dbg !25727
  %41 = load i32, i32* %msg_enable73, align 8, !dbg !25727
  %and74 = and i32 %41, 2, !dbg !25727
  %tobool75 = icmp ne i32 %and74, 0, !dbg !25727
  br i1 %tobool75, label %if.then76, label %if.end79, !dbg !25730

if.then76:                                        ; preds = %do.body72
  %42 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25727
  %netdev77 = getelementptr inbounds %struct.r8152, %struct.r8152* %42, i32 0, i32 4, !dbg !25727
  %43 = load %struct.net_device*, %struct.net_device** %netdev77, align 8, !dbg !25727
  %44 = load i32, i32* %ret, align 4, !dbg !25727
  %arraydecay78 = getelementptr inbounds [6 x i8], [6 x i8]* %buf, i64 0, i64 0, !dbg !25727
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %43, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.79, i64 0, i64 0), i32 %44, i8* %arraydecay78) #14, !dbg !25727
  br label %if.end79, !dbg !25727

if.end79:                                         ; preds = %if.then76, %do.body72
  br label %do.end80, !dbg !25730

do.end80:                                         ; preds = %if.end79
  store i32 -22, i32* %ret, align 4, !dbg !25731
  br label %amacout, !dbg !25732

if.end81:                                         ; preds = %land.lhs.true67
  %45 = load %struct.sockaddr*, %struct.sockaddr** %sa.addr, align 8, !dbg !25733
  %sa_data = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %45, i32 0, i32 1, !dbg !25734
  %arraydecay82 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data, i64 0, i64 0, !dbg !25735
  %arraydecay83 = getelementptr inbounds [6 x i8], [6 x i8]* %buf, i64 0, i64 0, !dbg !25735
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay82, i8* align 1 %arraydecay83, i64 6, i1 false), !dbg !25735
  br label %do.body84, !dbg !25736

do.body84:                                        ; preds = %if.end81
  %46 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25737
  %msg_enable85 = getelementptr inbounds %struct.r8152, %struct.r8152* %46, i32 0, i32 28, !dbg !25737
  %47 = load i32, i32* %msg_enable85, align 8, !dbg !25737
  %and86 = and i32 %47, 2, !dbg !25737
  %tobool87 = icmp ne i32 %and86, 0, !dbg !25737
  br i1 %tobool87, label %if.then88, label %if.end92, !dbg !25740

if.then88:                                        ; preds = %do.body84
  %48 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25737
  %netdev89 = getelementptr inbounds %struct.r8152, %struct.r8152* %48, i32 0, i32 4, !dbg !25737
  %49 = load %struct.net_device*, %struct.net_device** %netdev89, align 8, !dbg !25737
  %50 = load %struct.sockaddr*, %struct.sockaddr** %sa.addr, align 8, !dbg !25737
  %sa_data90 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %50, i32 0, i32 1, !dbg !25737
  %arraydecay91 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data90, i64 0, i64 0, !dbg !25737
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %49, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.80, i64 0, i64 0), i8* %arraydecay91) #14, !dbg !25737
  br label %if.end92, !dbg !25737

if.end92:                                         ; preds = %if.then88, %do.body84
  br label %do.end93, !dbg !25740

do.end93:                                         ; preds = %if.end92
  br label %amacout, !dbg !25740

amacout:                                          ; preds = %do.end93, %do.end80, %do.end59, %do.end
  call void @llvm.dbg.label(metadata !25741), !dbg !25742
  %51 = load %union.acpi_object*, %union.acpi_object** %obj, align 8, !dbg !25743
  %52 = bitcast %union.acpi_object* %51 to i8*, !dbg !25743
  call void @kfree(i8* %52) #13, !dbg !25744
  %53 = load i32, i32* %ret, align 4, !dbg !25745
  store i32 %53, i32* %retval, align 4, !dbg !25746
  br label %return, !dbg !25746

return:                                           ; preds = %amacout, %if.then25, %if.then19, %if.then9
  %54 = load i32, i32* %retval, align 4, !dbg !25747
  ret i32 %54, !dbg !25747
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eth_hw_addr_random(%struct.net_device* %dev) #2 !dbg !25748 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !25749, metadata !DIExpression()), !dbg !25750
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !25751
  %addr_assign_type = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 54, !dbg !25752
  store i8 1, i8* %addr_assign_type, align 2, !dbg !25753
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !25754
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 74, !dbg !25755
  %2 = load i8*, i8** %dev_addr, align 8, !dbg !25755
  call void @eth_random_addr(i8* %2) #13, !dbg !25756
  ret void, !dbg !25757
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_evaluate_object(i8*, i8*, %struct.acpi_object_list*, %struct.acpi_buffer*) #1

; Function Attrs: noredzone
declare dso_local i32 @strncmp(i8*, i8*, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @hex2bin(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eth_random_addr(i8* %addr) #2 !dbg !25758 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !25761, metadata !DIExpression()), !dbg !25762
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !25763
  call void @get_random_bytes(i8* %0, i32 6) #13, !dbg !25764
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !25765
  %arrayidx = getelementptr i8, i8* %1, i64 0, !dbg !25765
  %2 = load i8, i8* %arrayidx, align 1, !dbg !25766
  %conv = zext i8 %2 to i32, !dbg !25766
  %and = and i32 %conv, 254, !dbg !25766
  %conv1 = trunc i32 %and to i8, !dbg !25766
  store i8 %conv1, i8* %arrayidx, align 1, !dbg !25766
  %3 = load i8*, i8** %addr.addr, align 8, !dbg !25767
  %arrayidx2 = getelementptr i8, i8* %3, i64 0, !dbg !25767
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !25768
  %conv3 = zext i8 %4 to i32, !dbg !25768
  %or = or i32 %conv3, 2, !dbg !25768
  %conv4 = trunc i32 %or to i8, !dbg !25768
  store i8 %conv4, i8* %arrayidx2, align 1, !dbg !25768
  ret void, !dbg !25769
}

; Function Attrs: noredzone
declare dso_local void @get_random_bytes(i8*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #2 !dbg !25770 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !25773, metadata !DIExpression()), !dbg !25774
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !25775, metadata !DIExpression()), !dbg !25776
  %0 = load i8*, i8** %data.addr, align 8, !dbg !25777
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !25778
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !25779
  store i8* %0, i8** %driver_data, align 8, !dbg !25780
  ret void, !dbg !25781
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rx_bottom(%struct.r8152* %tp, i32 %budget) #2 !dbg !25782 {
entry:
  %lock.addr.i263 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i263, metadata !15437, metadata !DIExpression()), !dbg !25785
  %lock.addr.i258 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i258, metadata !15428, metadata !DIExpression()), !dbg !25794
  %flags.addr.i259 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i259, metadata !15435, metadata !DIExpression()), !dbg !25801
  %tmp.i260 = alloca i32, align 4
  %tmp8.i261 = alloca i32, align 4
  %lock.addr.i256 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i256, metadata !15437, metadata !DIExpression()), !dbg !25802
  %lock.addr.i251 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i251, metadata !15428, metadata !DIExpression()), !dbg !25809
  %flags.addr.i252 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i252, metadata !15435, metadata !DIExpression()), !dbg !25811
  %tmp.i253 = alloca i32, align 4
  %tmp8.i254 = alloca i32, align 4
  %lock.addr.i249 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i249, metadata !15428, metadata !DIExpression()), !dbg !25812
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !15435, metadata !DIExpression()), !dbg !25814
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !15437, metadata !DIExpression()), !dbg !25815
  %tp.addr = alloca %struct.r8152*, align 8
  %budget.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %cursor = alloca %struct.list_head*, align 8
  %next = alloca %struct.list_head*, align 8
  %rx_queue = alloca %struct.list_head, align 8
  %ret = alloca i32, align 4
  %work_done = alloca i32, align 4
  %napi = alloca %struct.napi_struct*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %stats = alloca %struct.net_device_stats*, align 8
  %pkt_len = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy22 = alloca i64, align 8
  %__dummy223 = alloca i64, align 8
  %tmp26 = alloca i32, align 4
  %rx_desc = alloca %struct.rx_desc*, align 8
  %agg = alloca %struct.rx_agg*, align 8
  %agg_free = alloca %struct.rx_agg*, align 8
  %len_used = alloca i32, align 4
  %urb = alloca %struct.urb*, align 8
  %rx_data = alloca i8*, align 8
  %__mptr = alloca i8*, align 8
  %tmp45 = alloca %struct.rx_agg*, align 8
  %netdev61 = alloca %struct.net_device*, align 8
  %stats63 = alloca %struct.net_device_stats*, align 8
  %pkt_len65 = alloca i32, align 4
  %rx_frag_head_sz = alloca i32, align 4
  %skb66 = alloca %struct.sk_buff*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp160 = alloca i64, align 8
  %__dummy171 = alloca i64, align 8
  %__dummy2172 = alloca i64, align 8
  %tmp175 = alloca i32, align 4
  %__dummy179 = alloca i64, align 8
  %__dummy2180 = alloca i64, align 8
  %tmp183 = alloca i32, align 4
  %__dummy221 = alloca i64, align 8
  %__dummy2222 = alloca i64, align 8
  %tmp225 = alloca i32, align 4
  %__dummy229 = alloca i64, align 8
  %__dummy2230 = alloca i64, align 8
  %tmp233 = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !25822, metadata !DIExpression()), !dbg !25823
  store i32 %budget, i32* %budget.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %budget.addr, metadata !25824, metadata !DIExpression()), !dbg !25825
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !25826, metadata !DIExpression()), !dbg !25827
  call void @llvm.dbg.declare(metadata %struct.list_head** %cursor, metadata !25828, metadata !DIExpression()), !dbg !25829
  call void @llvm.dbg.declare(metadata %struct.list_head** %next, metadata !25830, metadata !DIExpression()), !dbg !25831
  call void @llvm.dbg.declare(metadata %struct.list_head* %rx_queue, metadata !25832, metadata !DIExpression()), !dbg !25833
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !25834, metadata !DIExpression()), !dbg !25835
  store i32 0, i32* %ret, align 4, !dbg !25835
  call void @llvm.dbg.declare(metadata i32* %work_done, metadata !25836, metadata !DIExpression()), !dbg !25837
  store i32 0, i32* %work_done, align 4, !dbg !25837
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi, metadata !25838, metadata !DIExpression()), !dbg !25839
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25840
  %napi1 = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 2, !dbg !25841
  store %struct.napi_struct* %napi1, %struct.napi_struct** %napi, align 8, !dbg !25839
  %1 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25842
  %rx_queue2 = getelementptr inbounds %struct.r8152, %struct.r8152* %1, i32 0, i32 12, !dbg !25844
  %call = call i32 @skb_queue_empty(%struct.sk_buff_head* %rx_queue2) #13, !dbg !25845
  %tobool = icmp ne i32 %call, 0, !dbg !25845
  br i1 %tobool, label %if.end11, label %if.then, !dbg !25846

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !25847

while.cond:                                       ; preds = %if.end, %if.then
  %2 = load i32, i32* %work_done, align 4, !dbg !25849
  %3 = load i32, i32* %budget.addr, align 4, !dbg !25850
  %cmp = icmp slt i32 %2, %3, !dbg !25851
  br i1 %cmp, label %while.body, label %while.end, !dbg !25847

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !25852, metadata !DIExpression()), !dbg !25854
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25855
  %rx_queue3 = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 12, !dbg !25856
  %call4 = call %struct.sk_buff* @__skb_dequeue(%struct.sk_buff_head* %rx_queue3) #13, !dbg !25857
  store %struct.sk_buff* %call4, %struct.sk_buff** %skb, align 8, !dbg !25854
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !25858, metadata !DIExpression()), !dbg !25859
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25860
  %netdev5 = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 4, !dbg !25861
  %6 = load %struct.net_device*, %struct.net_device** %netdev5, align 8, !dbg !25861
  store %struct.net_device* %6, %struct.net_device** %netdev, align 8, !dbg !25859
  call void @llvm.dbg.declare(metadata %struct.net_device_stats** %stats, metadata !25862, metadata !DIExpression()), !dbg !25863
  %7 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !25864
  %stats6 = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 24, !dbg !25865
  store %struct.net_device_stats* %stats6, %struct.net_device_stats** %stats, align 8, !dbg !25863
  call void @llvm.dbg.declare(metadata i32* %pkt_len, metadata !25866, metadata !DIExpression()), !dbg !25867
  %8 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !25868
  %tobool7 = icmp ne %struct.sk_buff* %8, null, !dbg !25868
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !25870

if.then8:                                         ; preds = %while.body
  br label %while.end, !dbg !25871

if.end:                                           ; preds = %while.body
  %9 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !25872
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %9, i32 0, i32 5, !dbg !25873
  %10 = load i32, i32* %len, align 8, !dbg !25873
  store i32 %10, i32* %pkt_len, align 4, !dbg !25874
  %11 = load %struct.napi_struct*, %struct.napi_struct** %napi, align 8, !dbg !25875
  %12 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !25876
  %call9 = call i32 @napi_gro_receive(%struct.napi_struct* %11, %struct.sk_buff* %12) #13, !dbg !25877
  %13 = load i32, i32* %work_done, align 4, !dbg !25878
  %inc = add i32 %13, 1, !dbg !25878
  store i32 %inc, i32* %work_done, align 4, !dbg !25878
  %14 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !25879
  %rx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %14, i32 0, i32 0, !dbg !25880
  %15 = load i64, i64* %rx_packets, align 8, !dbg !25881
  %inc10 = add i64 %15, 1, !dbg !25881
  store i64 %inc10, i64* %rx_packets, align 8, !dbg !25881
  %16 = load i32, i32* %pkt_len, align 4, !dbg !25882
  %conv = zext i32 %16 to i64, !dbg !25882
  %17 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !25883
  %rx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %17, i32 0, i32 2, !dbg !25884
  %18 = load i64, i64* %rx_bytes, align 8, !dbg !25885
  %add = add i64 %18, %conv, !dbg !25885
  store i64 %add, i64* %rx_bytes, align 8, !dbg !25885
  br label %while.cond, !dbg !25847, !llvm.loop !25886

while.end:                                        ; preds = %if.then8, %while.cond
  br label %if.end11, !dbg !25888

if.end11:                                         ; preds = %while.end, %entry
  %19 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25889
  %rx_done = getelementptr inbounds %struct.r8152, %struct.r8152* %19, i32 0, i32 9, !dbg !25891
  %call12 = call i32 @list_empty(%struct.list_head* %rx_done) #13, !dbg !25892
  %tobool13 = icmp ne i32 %call12, 0, !dbg !25892
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !25893

if.then14:                                        ; preds = %if.end11
  br label %out1, !dbg !25894

if.end15:                                         ; preds = %if.end11
  call void @INIT_LIST_HEAD(%struct.list_head* %rx_queue) #13, !dbg !25895
  br label %do.body, !dbg !25896

do.body:                                          ; preds = %if.end15
  br label %do.body16, !dbg !25897

do.body16:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !25898, metadata !DIExpression()), !dbg !25900
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !25901, metadata !DIExpression()), !dbg !25900
  %cmp17 = icmp eq i64* %__dummy, %__dummy2, !dbg !25900
  %conv18 = zext i1 %cmp17 to i32, !dbg !25900
  store i32 1, i32* %tmp, align 4, !dbg !25900
  %20 = load i32, i32* %tmp, align 4, !dbg !25900
  br label %do.body19, !dbg !25902

do.body19:                                        ; preds = %do.body16
  br label %do.body20, !dbg !25903

do.body20:                                        ; preds = %do.body19
  br label %do.body21, !dbg !25904

do.body21:                                        ; preds = %do.body20
  call void @llvm.dbg.declare(metadata i64* %__dummy22, metadata !25906, metadata !DIExpression()), !dbg !25909
  call void @llvm.dbg.declare(metadata i64* %__dummy223, metadata !25910, metadata !DIExpression()), !dbg !25909
  %cmp24 = icmp eq i64* %__dummy22, %__dummy223, !dbg !25909
  %conv25 = zext i1 %cmp24 to i32, !dbg !25909
  store i32 1, i32* %tmp26, align 4, !dbg !25909
  %21 = load i32, i32* %tmp26, align 4, !dbg !25909
  %call27 = call i64 @arch_local_irq_save() #13, !dbg !25911
  store i64 %call27, i64* %flags, align 8, !dbg !25911
  br label %do.end, !dbg !25911

do.end:                                           ; preds = %do.body21
  br label %do.end28, !dbg !25904

do.end28:                                         ; preds = %do.end
  br label %do.body29, !dbg !25903

do.body29:                                        ; preds = %do.end28
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !25912, !srcloc !25913
  br label %do.body30, !dbg !25912

do.body30:                                        ; preds = %do.body29
  %22 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25914
  %rx_lock = getelementptr inbounds %struct.r8152, %struct.r8152* %22, i32 0, i32 13, !dbg !25914
  store %struct.spinlock* %rx_lock, %struct.spinlock** %lock.addr.i, align 8
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !25915
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !25916
  %rlock.i = bitcast %union.anon.1* %24 to %struct.raw_spinlock*, !dbg !25916
  br label %do.end32, !dbg !25914

do.end32:                                         ; preds = %do.body30
  br label %do.end33, !dbg !25912

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !25903

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !25902

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !25897

do.end36:                                         ; preds = %do.end35
  %25 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25917
  %rx_done37 = getelementptr inbounds %struct.r8152, %struct.r8152* %25, i32 0, i32 9, !dbg !25918
  call void @list_splice_init(%struct.list_head* %rx_done37, %struct.list_head* %rx_queue) #13, !dbg !25919
  %26 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25920
  %rx_lock38 = getelementptr inbounds %struct.r8152, %struct.r8152* %26, i32 0, i32 13, !dbg !25921
  %27 = load i64, i64* %flags, align 8, !dbg !25922
  store %struct.spinlock* %rx_lock38, %struct.spinlock** %lock.addr.i251, align 8
  store i64 %27, i64* %flags.addr.i252, align 8
  call void @llvm.dbg.declare(metadata !820, metadata !15497, metadata !DIExpression()) #11, !dbg !25923
  call void @llvm.dbg.declare(metadata !820, metadata !15501, metadata !DIExpression()) #11, !dbg !25923
  store i32 1, i32* %tmp.i253, align 4, !dbg !25923
  %28 = load i32, i32* %tmp.i253, align 4, !dbg !25923
  call void @llvm.dbg.declare(metadata !820, metadata !15502, metadata !DIExpression()) #11, !dbg !25924
  call void @llvm.dbg.declare(metadata !820, metadata !15508, metadata !DIExpression()) #11, !dbg !25924
  store i32 1, i32* %tmp8.i254, align 4, !dbg !25924
  %29 = load i32, i32* %tmp8.i254, align 4, !dbg !25924
  %30 = load i64, i64* %flags.addr.i252, align 8, !dbg !25925
  call void @arch_local_irq_restore(i64 %30) #16, !dbg !25925
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !25926, !srcloc !15512
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i251, align 8, !dbg !25927
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !25927
  %rlock.i255 = bitcast %union.anon.1* %32 to %struct.raw_spinlock*, !dbg !25927
  %next39 = getelementptr inbounds %struct.list_head, %struct.list_head* %rx_queue, i32 0, i32 0, !dbg !25928
  %33 = load %struct.list_head*, %struct.list_head** %next39, align 8, !dbg !25928
  store %struct.list_head* %33, %struct.list_head** %cursor, align 8, !dbg !25928
  %34 = load %struct.list_head*, %struct.list_head** %cursor, align 8, !dbg !25928
  %next40 = getelementptr inbounds %struct.list_head, %struct.list_head* %34, i32 0, i32 0, !dbg !25928
  %35 = load %struct.list_head*, %struct.list_head** %next40, align 8, !dbg !25928
  store %struct.list_head* %35, %struct.list_head** %next, align 8, !dbg !25928
  br label %for.cond, !dbg !25928

for.cond:                                         ; preds = %for.inc, %do.end36
  %36 = load %struct.list_head*, %struct.list_head** %cursor, align 8, !dbg !25929
  %cmp41 = icmp ne %struct.list_head* %36, %rx_queue, !dbg !25929
  br i1 %cmp41, label %for.body, label %for.end, !dbg !25928

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rx_desc** %rx_desc, metadata !25930, metadata !DIExpression()), !dbg !25931
  call void @llvm.dbg.declare(metadata %struct.rx_agg** %agg, metadata !25932, metadata !DIExpression()), !dbg !25933
  call void @llvm.dbg.declare(metadata %struct.rx_agg** %agg_free, metadata !25934, metadata !DIExpression()), !dbg !25935
  call void @llvm.dbg.declare(metadata i32* %len_used, metadata !25936, metadata !DIExpression()), !dbg !25937
  store i32 0, i32* %len_used, align 4, !dbg !25937
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !25938, metadata !DIExpression()), !dbg !25939
  call void @llvm.dbg.declare(metadata i8** %rx_data, metadata !25940, metadata !DIExpression()), !dbg !25941
  %37 = load %struct.list_head*, %struct.list_head** %cursor, align 8, !dbg !25942
  call void @list_del_init(%struct.list_head* %37) #13, !dbg !25943
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !25944, metadata !DIExpression()), !dbg !25946
  %38 = load %struct.list_head*, %struct.list_head** %cursor, align 8, !dbg !25946
  %39 = bitcast %struct.list_head* %38 to i8*, !dbg !25946
  store i8* %39, i8** %__mptr, align 8, !dbg !25946
  br label %do.body43, !dbg !25946

do.body43:                                        ; preds = %for.body
  br label %do.end44, !dbg !25947

do.end44:                                         ; preds = %do.body43
  %40 = load i8*, i8** %__mptr, align 8, !dbg !25946
  %add.ptr = getelementptr i8, i8* %40, i64 0, !dbg !25946
  %41 = bitcast i8* %add.ptr to %struct.rx_agg*, !dbg !25946
  store %struct.rx_agg* %41, %struct.rx_agg** %tmp45, align 8, !dbg !25947
  %42 = load %struct.rx_agg*, %struct.rx_agg** %tmp45, align 8, !dbg !25946
  store %struct.rx_agg* %42, %struct.rx_agg** %agg, align 8, !dbg !25949
  %43 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !25950
  %urb46 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %43, i32 0, i32 2, !dbg !25951
  %44 = load %struct.urb*, %struct.urb** %urb46, align 8, !dbg !25951
  store %struct.urb* %44, %struct.urb** %urb, align 8, !dbg !25952
  %45 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !25953
  %actual_length = getelementptr inbounds %struct.urb, %struct.urb* %45, i32 0, i32 20, !dbg !25955
  %46 = load i32, i32* %actual_length, align 4, !dbg !25955
  %cmp47 = icmp ult i32 %46, 60, !dbg !25956
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !25957

if.then49:                                        ; preds = %do.end44
  br label %submit, !dbg !25958

if.end50:                                         ; preds = %do.end44
  %47 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25959
  %call51 = call %struct.rx_agg* @rtl_get_free_rx(%struct.r8152* %47, i32 2592) #13, !dbg !25960
  store %struct.rx_agg* %call51, %struct.rx_agg** %agg_free, align 8, !dbg !25961
  %48 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !25962
  %buffer = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %48, i32 0, i32 5, !dbg !25963
  %49 = load i8*, i8** %buffer, align 8, !dbg !25963
  %50 = bitcast i8* %49 to %struct.rx_desc*, !dbg !25962
  store %struct.rx_desc* %50, %struct.rx_desc** %rx_desc, align 8, !dbg !25964
  %51 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !25965
  %buffer52 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %51, i32 0, i32 5, !dbg !25966
  %52 = load i8*, i8** %buffer52, align 8, !dbg !25966
  store i8* %52, i8** %rx_data, align 8, !dbg !25967
  %53 = load i32, i32* %len_used, align 4, !dbg !25968
  %conv53 = sext i32 %53 to i64, !dbg !25968
  %add54 = add i64 %conv53, 24, !dbg !25968
  %conv55 = trunc i64 %add54 to i32, !dbg !25968
  store i32 %conv55, i32* %len_used, align 4, !dbg !25968
  br label %while.cond56, !dbg !25969

while.cond56:                                     ; preds = %find_next_rx, %if.end50
  %54 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !25970
  %actual_length57 = getelementptr inbounds %struct.urb, %struct.urb* %54, i32 0, i32 20, !dbg !25971
  %55 = load i32, i32* %actual_length57, align 4, !dbg !25971
  %56 = load i32, i32* %len_used, align 4, !dbg !25972
  %cmp58 = icmp ugt i32 %55, %56, !dbg !25973
  br i1 %cmp58, label %while.body60, label %while.end133, !dbg !25969

while.body60:                                     ; preds = %while.cond56
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev61, metadata !25974, metadata !DIExpression()), !dbg !25976
  %57 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25977
  %netdev62 = getelementptr inbounds %struct.r8152, %struct.r8152* %57, i32 0, i32 4, !dbg !25978
  %58 = load %struct.net_device*, %struct.net_device** %netdev62, align 8, !dbg !25978
  store %struct.net_device* %58, %struct.net_device** %netdev61, align 8, !dbg !25976
  call void @llvm.dbg.declare(metadata %struct.net_device_stats** %stats63, metadata !25979, metadata !DIExpression()), !dbg !25980
  %59 = load %struct.net_device*, %struct.net_device** %netdev61, align 8, !dbg !25981
  %stats64 = getelementptr inbounds %struct.net_device, %struct.net_device* %59, i32 0, i32 24, !dbg !25982
  store %struct.net_device_stats* %stats64, %struct.net_device_stats** %stats63, align 8, !dbg !25980
  call void @llvm.dbg.declare(metadata i32* %pkt_len65, metadata !25983, metadata !DIExpression()), !dbg !25984
  call void @llvm.dbg.declare(metadata i32* %rx_frag_head_sz, metadata !25985, metadata !DIExpression()), !dbg !25986
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb66, metadata !25987, metadata !DIExpression()), !dbg !25988
  %60 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !25989
  %rx_queue67 = getelementptr inbounds %struct.r8152, %struct.r8152* %60, i32 0, i32 12, !dbg !25989
  %call68 = call i32 @skb_queue_len(%struct.sk_buff_head* %rx_queue67) #13, !dbg !25989
  %cmp69 = icmp uge i32 %call68, 1000, !dbg !25989
  %lnot = xor i1 %cmp69, true, !dbg !25989
  %lnot71 = xor i1 %lnot, true, !dbg !25989
  %lnot.ext = zext i1 %lnot71 to i32, !dbg !25989
  %conv72 = sext i32 %lnot.ext to i64, !dbg !25989
  %tobool73 = icmp ne i64 %conv72, 0, !dbg !25989
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !25991

if.then74:                                        ; preds = %while.body60
  br label %while.end133, !dbg !25992

if.end75:                                         ; preds = %while.body60
  %61 = load %struct.rx_desc*, %struct.rx_desc** %rx_desc, align 8, !dbg !25993
  %opts1 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %61, i32 0, i32 0, !dbg !25993
  %62 = load i32, i32* %opts1, align 4, !dbg !25993
  %and = and i32 %62, 32767, !dbg !25994
  store i32 %and, i32* %pkt_len65, align 4, !dbg !25995
  %63 = load i32, i32* %pkt_len65, align 4, !dbg !25996
  %cmp76 = icmp ult i32 %63, 60, !dbg !25998
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !25999

if.then78:                                        ; preds = %if.end75
  br label %while.end133, !dbg !26000

if.end79:                                         ; preds = %if.end75
  %64 = load i32, i32* %pkt_len65, align 4, !dbg !26001
  %65 = load i32, i32* %len_used, align 4, !dbg !26002
  %add80 = add i32 %65, %64, !dbg !26002
  store i32 %add80, i32* %len_used, align 4, !dbg !26002
  %66 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !26003
  %actual_length81 = getelementptr inbounds %struct.urb, %struct.urb* %66, i32 0, i32 20, !dbg !26005
  %67 = load i32, i32* %actual_length81, align 4, !dbg !26005
  %68 = load i32, i32* %len_used, align 4, !dbg !26006
  %cmp82 = icmp ult i32 %67, %68, !dbg !26007
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !26008

if.then84:                                        ; preds = %if.end79
  br label %while.end133, !dbg !26009

if.end85:                                         ; preds = %if.end79
  %69 = load i32, i32* %pkt_len65, align 4, !dbg !26010
  %sub = sub i32 %69, 4, !dbg !26010
  store i32 %sub, i32* %pkt_len65, align 4, !dbg !26010
  %70 = load i8*, i8** %rx_data, align 8, !dbg !26011
  %add.ptr86 = getelementptr i8, i8* %70, i64 24, !dbg !26011
  store i8* %add.ptr86, i8** %rx_data, align 8, !dbg !26011
  %71 = load %struct.rx_agg*, %struct.rx_agg** %agg_free, align 8, !dbg !26012
  %tobool87 = icmp ne %struct.rx_agg* %71, null, !dbg !26012
  br i1 %tobool87, label %lor.lhs.false, label %if.then90, !dbg !26014

lor.lhs.false:                                    ; preds = %if.end85
  %72 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26015
  %rx_copybreak = getelementptr inbounds %struct.r8152, %struct.r8152* %72, i32 0, i32 33, !dbg !26016
  %73 = load i32, i32* %rx_copybreak, align 4, !dbg !26016
  %74 = load i32, i32* %pkt_len65, align 4, !dbg !26017
  %cmp88 = icmp ugt i32 %73, %74, !dbg !26018
  br i1 %cmp88, label %if.then90, label %if.else, !dbg !26019

if.then90:                                        ; preds = %lor.lhs.false, %if.end85
  %75 = load i32, i32* %pkt_len65, align 4, !dbg !26020
  store i32 %75, i32* %rx_frag_head_sz, align 4, !dbg !26021
  br label %if.end92, !dbg !26022

if.else:                                          ; preds = %lor.lhs.false
  %76 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26023
  %rx_copybreak91 = getelementptr inbounds %struct.r8152, %struct.r8152* %76, i32 0, i32 33, !dbg !26024
  %77 = load i32, i32* %rx_copybreak91, align 4, !dbg !26024
  store i32 %77, i32* %rx_frag_head_sz, align 4, !dbg !26025
  br label %if.end92

if.end92:                                         ; preds = %if.else, %if.then90
  %78 = load %struct.napi_struct*, %struct.napi_struct** %napi, align 8, !dbg !26026
  %79 = load i32, i32* %rx_frag_head_sz, align 4, !dbg !26027
  %call93 = call %struct.sk_buff* @napi_alloc_skb(%struct.napi_struct* %78, i32 %79) #13, !dbg !26028
  store %struct.sk_buff* %call93, %struct.sk_buff** %skb66, align 8, !dbg !26029
  %80 = load %struct.sk_buff*, %struct.sk_buff** %skb66, align 8, !dbg !26030
  %tobool94 = icmp ne %struct.sk_buff* %80, null, !dbg !26030
  br i1 %tobool94, label %if.end97, label %if.then95, !dbg !26032

if.then95:                                        ; preds = %if.end92
  %81 = load %struct.net_device_stats*, %struct.net_device_stats** %stats63, align 8, !dbg !26033
  %rx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %81, i32 0, i32 6, !dbg !26035
  %82 = load i64, i64* %rx_dropped, align 8, !dbg !26036
  %inc96 = add i64 %82, 1, !dbg !26036
  store i64 %inc96, i64* %rx_dropped, align 8, !dbg !26036
  br label %find_next_rx, !dbg !26037

if.end97:                                         ; preds = %if.end92
  %83 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26038
  %84 = load %struct.rx_desc*, %struct.rx_desc** %rx_desc, align 8, !dbg !26039
  %call98 = call zeroext i8 @r8152_rx_csum(%struct.r8152* %83, %struct.rx_desc* %84) #13, !dbg !26040
  %85 = load %struct.sk_buff*, %struct.sk_buff** %skb66, align 8, !dbg !26041
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %85, i32 0, i32 14, !dbg !26042
  %86 = zext i8 %call98 to i16, !dbg !26043
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !26043
  %bf.value = and i16 %86, 3, !dbg !26043
  %bf.shl = shl i16 %bf.value, 5, !dbg !26043
  %bf.clear = and i16 %bf.load, -97, !dbg !26043
  %bf.set = or i16 %bf.clear, %bf.shl, !dbg !26043
  store i16 %bf.set, i16* %ip_summed, align 8, !dbg !26043
  %bf.result.cast = trunc i16 %bf.value to i8, !dbg !26043
  %87 = load %struct.sk_buff*, %struct.sk_buff** %skb66, align 8, !dbg !26044
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %87, i32 0, i32 37, !dbg !26045
  %88 = load i8*, i8** %data, align 8, !dbg !26045
  %89 = load i8*, i8** %rx_data, align 8, !dbg !26046
  %90 = load i32, i32* %rx_frag_head_sz, align 4, !dbg !26047
  %conv99 = zext i32 %90 to i64, !dbg !26047
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %88, i8* align 1 %89, i64 %conv99, i1 false), !dbg !26048
  %91 = load %struct.sk_buff*, %struct.sk_buff** %skb66, align 8, !dbg !26049
  %92 = load i32, i32* %rx_frag_head_sz, align 4, !dbg !26050
  %call100 = call i8* @skb_put(%struct.sk_buff* %91, i32 %92) #13, !dbg !26051
  %93 = load i32, i32* %rx_frag_head_sz, align 4, !dbg !26052
  %94 = load i32, i32* %pkt_len65, align 4, !dbg !26053
  %sub101 = sub i32 %94, %93, !dbg !26053
  store i32 %sub101, i32* %pkt_len65, align 4, !dbg !26053
  %95 = load i32, i32* %rx_frag_head_sz, align 4, !dbg !26054
  %96 = load i8*, i8** %rx_data, align 8, !dbg !26055
  %idx.ext = zext i32 %95 to i64, !dbg !26055
  %add.ptr102 = getelementptr i8, i8* %96, i64 %idx.ext, !dbg !26055
  store i8* %add.ptr102, i8** %rx_data, align 8, !dbg !26055
  %97 = load i32, i32* %pkt_len65, align 4, !dbg !26056
  %tobool103 = icmp ne i32 %97, 0, !dbg !26056
  br i1 %tobool103, label %if.then104, label %if.end109, !dbg !26058

if.then104:                                       ; preds = %if.end97
  %98 = load %struct.sk_buff*, %struct.sk_buff** %skb66, align 8, !dbg !26059
  %99 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !26061
  %page = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %99, i32 0, i32 4, !dbg !26062
  %100 = load %struct.page*, %struct.page** %page, align 8, !dbg !26062
  %101 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !26063
  %102 = load i8*, i8** %rx_data, align 8, !dbg !26064
  %call105 = call i32 @agg_offset(%struct.rx_agg* %101, i8* %102) #13, !dbg !26065
  %103 = load i32, i32* %pkt_len65, align 4, !dbg !26066
  %104 = load i32, i32* %pkt_len65, align 4, !dbg !26067
  %add106 = add i32 %104, 63, !dbg !26067
  %and107 = and i32 %add106, -64, !dbg !26067
  call void @skb_add_rx_frag(%struct.sk_buff* %98, i32 0, %struct.page* %100, i32 %call105, i32 %103, i32 %and107) #13, !dbg !26068
  %105 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !26069
  %page108 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %105, i32 0, i32 4, !dbg !26070
  %106 = load %struct.page*, %struct.page** %page108, align 8, !dbg !26070
  call void @get_page(%struct.page* %106) #13, !dbg !26071
  br label %if.end109, !dbg !26072

if.end109:                                        ; preds = %if.then104, %if.end97
  %107 = load %struct.sk_buff*, %struct.sk_buff** %skb66, align 8, !dbg !26073
  %108 = load %struct.net_device*, %struct.net_device** %netdev61, align 8, !dbg !26074
  %call110 = call zeroext i16 @eth_type_trans(%struct.sk_buff* %107, %struct.net_device* %108) #13, !dbg !26075
  %109 = load %struct.sk_buff*, %struct.sk_buff** %skb66, align 8, !dbg !26076
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %109, i32 0, i32 29, !dbg !26077
  store i16 %call110, i16* %protocol, align 8, !dbg !26078
  %110 = load %struct.rx_desc*, %struct.rx_desc** %rx_desc, align 8, !dbg !26079
  %111 = load %struct.sk_buff*, %struct.sk_buff** %skb66, align 8, !dbg !26080
  call void @rtl_rx_vlan_tag(%struct.rx_desc* %110, %struct.sk_buff* %111) #13, !dbg !26081
  %112 = load i32, i32* %work_done, align 4, !dbg !26082
  %113 = load i32, i32* %budget.addr, align 4, !dbg !26084
  %cmp111 = icmp slt i32 %112, %113, !dbg !26085
  br i1 %cmp111, label %if.then113, label %if.else122, !dbg !26086

if.then113:                                       ; preds = %if.end109
  %114 = load i32, i32* %work_done, align 4, !dbg !26087
  %inc114 = add i32 %114, 1, !dbg !26087
  store i32 %inc114, i32* %work_done, align 4, !dbg !26087
  %115 = load %struct.net_device_stats*, %struct.net_device_stats** %stats63, align 8, !dbg !26089
  %rx_packets115 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %115, i32 0, i32 0, !dbg !26090
  %116 = load i64, i64* %rx_packets115, align 8, !dbg !26091
  %inc116 = add i64 %116, 1, !dbg !26091
  store i64 %inc116, i64* %rx_packets115, align 8, !dbg !26091
  %117 = load %struct.sk_buff*, %struct.sk_buff** %skb66, align 8, !dbg !26092
  %len117 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %117, i32 0, i32 5, !dbg !26093
  %118 = load i32, i32* %len117, align 8, !dbg !26093
  %conv118 = zext i32 %118 to i64, !dbg !26092
  %119 = load %struct.net_device_stats*, %struct.net_device_stats** %stats63, align 8, !dbg !26094
  %rx_bytes119 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %119, i32 0, i32 2, !dbg !26095
  %120 = load i64, i64* %rx_bytes119, align 8, !dbg !26096
  %add120 = add i64 %120, %conv118, !dbg !26096
  store i64 %add120, i64* %rx_bytes119, align 8, !dbg !26096
  %121 = load %struct.napi_struct*, %struct.napi_struct** %napi, align 8, !dbg !26097
  %122 = load %struct.sk_buff*, %struct.sk_buff** %skb66, align 8, !dbg !26098
  %call121 = call i32 @napi_gro_receive(%struct.napi_struct* %121, %struct.sk_buff* %122) #13, !dbg !26099
  br label %if.end124, !dbg !26100

if.else122:                                       ; preds = %if.end109
  %123 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26101
  %rx_queue123 = getelementptr inbounds %struct.r8152, %struct.r8152* %123, i32 0, i32 12, !dbg !26103
  %124 = load %struct.sk_buff*, %struct.sk_buff** %skb66, align 8, !dbg !26104
  call void @__skb_queue_tail(%struct.sk_buff_head* %rx_queue123, %struct.sk_buff* %124) #13, !dbg !26105
  br label %if.end124

if.end124:                                        ; preds = %if.else122, %if.then113
  br label %find_next_rx, !dbg !26084

find_next_rx:                                     ; preds = %if.end124, %if.then95
  call void @llvm.dbg.label(metadata !26106), !dbg !26107
  %125 = load i8*, i8** %rx_data, align 8, !dbg !26108
  %126 = load i32, i32* %pkt_len65, align 4, !dbg !26109
  %idx.ext125 = zext i32 %126 to i64, !dbg !26110
  %add.ptr126 = getelementptr i8, i8* %125, i64 %idx.ext125, !dbg !26110
  %add.ptr127 = getelementptr i8, i8* %add.ptr126, i64 4, !dbg !26111
  %call128 = call i8* @rx_agg_align(i8* %add.ptr127) #13, !dbg !26112
  store i8* %call128, i8** %rx_data, align 8, !dbg !26113
  %127 = load i8*, i8** %rx_data, align 8, !dbg !26114
  %128 = bitcast i8* %127 to %struct.rx_desc*, !dbg !26115
  store %struct.rx_desc* %128, %struct.rx_desc** %rx_desc, align 8, !dbg !26116
  %129 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !26117
  %130 = load i8*, i8** %rx_data, align 8, !dbg !26118
  %call129 = call i32 @agg_offset(%struct.rx_agg* %129, i8* %130) #13, !dbg !26119
  store i32 %call129, i32* %len_used, align 4, !dbg !26120
  %131 = load i32, i32* %len_used, align 4, !dbg !26121
  %conv130 = sext i32 %131 to i64, !dbg !26121
  %add131 = add i64 %conv130, 24, !dbg !26121
  %conv132 = trunc i64 %add131 to i32, !dbg !26121
  store i32 %conv132, i32* %len_used, align 4, !dbg !26121
  br label %while.cond56, !dbg !25969, !llvm.loop !26122

while.end133:                                     ; preds = %if.then84, %if.then78, %if.then74, %while.cond56
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !26124, metadata !DIExpression()), !dbg !26126
  %132 = load %struct.rx_agg*, %struct.rx_agg** %agg_free, align 8, !dbg !26126
  %tobool134 = icmp ne %struct.rx_agg* %132, null, !dbg !26126
  br i1 %tobool134, label %land.end, label %land.rhs, !dbg !26126

land.rhs:                                         ; preds = %while.end133
  %133 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !26126
  %page135 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %133, i32 0, i32 4, !dbg !26126
  %134 = load %struct.page*, %struct.page** %page135, align 8, !dbg !26126
  %call136 = call i32 @page_count(%struct.page* %134) #13, !dbg !26126
  %cmp137 = icmp sgt i32 %call136, 1, !dbg !26126
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.end133
  %135 = phi i1 [ false, %while.end133 ], [ %cmp137, %land.rhs ], !dbg !26127
  %lnot139 = xor i1 %135, true, !dbg !26126
  %lnot141 = xor i1 %lnot139, true, !dbg !26126
  %lnot.ext142 = zext i1 %lnot141 to i32, !dbg !26126
  store i32 %lnot.ext142, i32* %__ret_warn_on, align 4, !dbg !26126
  %136 = load i32, i32* %__ret_warn_on, align 4, !dbg !26128
  %tobool143 = icmp ne i32 %136, 0, !dbg !26128
  %lnot144 = xor i1 %tobool143, true, !dbg !26128
  %lnot146 = xor i1 %lnot144, true, !dbg !26128
  %lnot.ext147 = zext i1 %lnot146 to i32, !dbg !26128
  %conv148 = sext i32 %lnot.ext147 to i64, !dbg !26128
  %tobool149 = icmp ne i64 %conv148, 0, !dbg !26128
  br i1 %tobool149, label %if.then150, label %if.end159, !dbg !26126

if.then150:                                       ; preds = %land.end
  br label %do.body151, !dbg !26128

do.body151:                                       ; preds = %if.then150
  br label %do.body152, !dbg !26130

do.body152:                                       ; preds = %do.body151
  br label %do.end153, !dbg !26132

do.end153:                                        ; preds = %do.body152
  br label %do.body154, !dbg !26130

do.body154:                                       ; preds = %do.end153
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 2343, i32 2305, i64 12) #11, !dbg !26134, !srcloc !26136
  br label %do.end155, !dbg !26134

do.end155:                                        ; preds = %do.body154
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 574) #11, !dbg !26137, !srcloc !26139
  br label %do.body156, !dbg !26130

do.body156:                                       ; preds = %do.end155
  br label %do.end157, !dbg !26140

do.end157:                                        ; preds = %do.body156
  br label %do.end158, !dbg !26130

do.end158:                                        ; preds = %do.end157
  br label %if.end159, !dbg !26130

if.end159:                                        ; preds = %do.end158, %land.end
  %137 = load i32, i32* %__ret_warn_on, align 4, !dbg !26126
  %tobool161 = icmp ne i32 %137, 0, !dbg !26126
  %lnot162 = xor i1 %tobool161, true, !dbg !26126
  %lnot164 = xor i1 %lnot162, true, !dbg !26126
  %lnot.ext165 = zext i1 %lnot164 to i32, !dbg !26126
  %conv166 = sext i32 %lnot.ext165 to i64, !dbg !26126
  store i64 %conv166, i64* %tmp160, align 8, !dbg !26128
  %138 = load i64, i64* %tmp160, align 8, !dbg !26126
  %139 = load %struct.rx_agg*, %struct.rx_agg** %agg_free, align 8, !dbg !26142
  %tobool167 = icmp ne %struct.rx_agg* %139, null, !dbg !26142
  br i1 %tobool167, label %if.then168, label %if.end207, !dbg !26143

if.then168:                                       ; preds = %if.end159
  br label %do.body169, !dbg !26144

do.body169:                                       ; preds = %if.then168
  br label %do.body170, !dbg !26145

do.body170:                                       ; preds = %do.body169
  call void @llvm.dbg.declare(metadata i64* %__dummy171, metadata !26146, metadata !DIExpression()), !dbg !26148
  call void @llvm.dbg.declare(metadata i64* %__dummy2172, metadata !26149, metadata !DIExpression()), !dbg !26148
  %cmp173 = icmp eq i64* %__dummy171, %__dummy2172, !dbg !26148
  %conv174 = zext i1 %cmp173 to i32, !dbg !26148
  store i32 1, i32* %tmp175, align 4, !dbg !26148
  %140 = load i32, i32* %tmp175, align 4, !dbg !26148
  br label %do.body176, !dbg !26150

do.body176:                                       ; preds = %do.body170
  br label %do.body177, !dbg !26151

do.body177:                                       ; preds = %do.body176
  br label %do.body178, !dbg !26152

do.body178:                                       ; preds = %do.body177
  call void @llvm.dbg.declare(metadata i64* %__dummy179, metadata !26154, metadata !DIExpression()), !dbg !26157
  call void @llvm.dbg.declare(metadata i64* %__dummy2180, metadata !26158, metadata !DIExpression()), !dbg !26157
  %cmp181 = icmp eq i64* %__dummy179, %__dummy2180, !dbg !26157
  %conv182 = zext i1 %cmp181 to i32, !dbg !26157
  store i32 1, i32* %tmp183, align 4, !dbg !26157
  %141 = load i32, i32* %tmp183, align 4, !dbg !26157
  %call184 = call i64 @arch_local_irq_save() #13, !dbg !26159
  store i64 %call184, i64* %flags, align 8, !dbg !26159
  br label %do.end185, !dbg !26159

do.end185:                                        ; preds = %do.body178
  br label %do.end186, !dbg !26152

do.end186:                                        ; preds = %do.end185
  br label %do.body187, !dbg !26151

do.body187:                                       ; preds = %do.end186
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !26160, !srcloc !26161
  br label %do.body188, !dbg !26160

do.body188:                                       ; preds = %do.body187
  %142 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26162
  %rx_lock189 = getelementptr inbounds %struct.r8152, %struct.r8152* %142, i32 0, i32 13, !dbg !26162
  store %struct.spinlock* %rx_lock189, %struct.spinlock** %lock.addr.i256, align 8
  %143 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i256, align 8, !dbg !26163
  %144 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %143, i32 0, i32 0, !dbg !26164
  %rlock.i257 = bitcast %union.anon.1* %144 to %struct.raw_spinlock*, !dbg !26164
  br label %do.end191, !dbg !26162

do.end191:                                        ; preds = %do.body188
  br label %do.end192, !dbg !26160

do.end192:                                        ; preds = %do.end191
  br label %do.end193, !dbg !26151

do.end193:                                        ; preds = %do.end192
  br label %do.end194, !dbg !26150

do.end194:                                        ; preds = %do.end193
  br label %do.end195, !dbg !26145

do.end195:                                        ; preds = %do.end194
  %145 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !26165
  %page196 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %145, i32 0, i32 4, !dbg !26167
  %146 = load %struct.page*, %struct.page** %page196, align 8, !dbg !26167
  %call197 = call i32 @page_count(%struct.page* %146) #13, !dbg !26168
  %cmp198 = icmp eq i32 %call197, 1, !dbg !26169
  br i1 %cmp198, label %if.then200, label %if.else201, !dbg !26170

if.then200:                                       ; preds = %do.end195
  %147 = load %struct.rx_agg*, %struct.rx_agg** %agg_free, align 8, !dbg !26171
  %list = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %147, i32 0, i32 0, !dbg !26173
  %148 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26174
  %rx_used = getelementptr inbounds %struct.r8152, %struct.r8152* %148, i32 0, i32 8, !dbg !26175
  call void @list_add(%struct.list_head* %list, %struct.list_head* %rx_used) #13, !dbg !26176
  br label %if.end205, !dbg !26177

if.else201:                                       ; preds = %do.end195
  %149 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !26178
  %list202 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %149, i32 0, i32 0, !dbg !26180
  %150 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26181
  %rx_used203 = getelementptr inbounds %struct.r8152, %struct.r8152* %150, i32 0, i32 8, !dbg !26182
  call void @list_add_tail(%struct.list_head* %list202, %struct.list_head* %rx_used203) #13, !dbg !26183
  %151 = load %struct.rx_agg*, %struct.rx_agg** %agg_free, align 8, !dbg !26184
  store %struct.rx_agg* %151, %struct.rx_agg** %agg, align 8, !dbg !26185
  %152 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !26186
  %urb204 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %152, i32 0, i32 2, !dbg !26187
  %153 = load %struct.urb*, %struct.urb** %urb204, align 8, !dbg !26187
  store %struct.urb* %153, %struct.urb** %urb, align 8, !dbg !26188
  br label %if.end205

if.end205:                                        ; preds = %if.else201, %if.then200
  %154 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26189
  %rx_lock206 = getelementptr inbounds %struct.r8152, %struct.r8152* %154, i32 0, i32 13, !dbg !26190
  %155 = load i64, i64* %flags, align 8, !dbg !26191
  store %struct.spinlock* %rx_lock206, %struct.spinlock** %lock.addr.i258, align 8
  store i64 %155, i64* %flags.addr.i259, align 8
  call void @llvm.dbg.declare(metadata !820, metadata !15497, metadata !DIExpression()) #11, !dbg !26192
  call void @llvm.dbg.declare(metadata !820, metadata !15501, metadata !DIExpression()) #11, !dbg !26192
  store i32 1, i32* %tmp.i260, align 4, !dbg !26192
  %156 = load i32, i32* %tmp.i260, align 4, !dbg !26192
  call void @llvm.dbg.declare(metadata !820, metadata !15502, metadata !DIExpression()) #11, !dbg !26193
  call void @llvm.dbg.declare(metadata !820, metadata !15508, metadata !DIExpression()) #11, !dbg !26193
  store i32 1, i32* %tmp8.i261, align 4, !dbg !26193
  %157 = load i32, i32* %tmp8.i261, align 4, !dbg !26193
  %158 = load i64, i64* %flags.addr.i259, align 8, !dbg !26194
  call void @arch_local_irq_restore(i64 %158) #16, !dbg !26194
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !26195, !srcloc !15512
  %159 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i258, align 8, !dbg !26196
  %160 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %159, i32 0, i32 0, !dbg !26196
  %rlock.i262 = bitcast %union.anon.1* %160 to %struct.raw_spinlock*, !dbg !26196
  br label %if.end207, !dbg !26197

if.end207:                                        ; preds = %if.end205, %if.end159
  br label %submit, !dbg !26142

submit:                                           ; preds = %if.end207, %if.then49
  call void @llvm.dbg.label(metadata !26198), !dbg !26199
  %161 = load i32, i32* %ret, align 4, !dbg !26200
  %tobool208 = icmp ne i32 %161, 0, !dbg !26200
  br i1 %tobool208, label %if.else211, label %if.then209, !dbg !26202

if.then209:                                       ; preds = %submit
  %162 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26203
  %163 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !26205
  %call210 = call i32 @r8152_submit_rx(%struct.r8152* %162, %struct.rx_agg* %163, i32 2592) #13, !dbg !26206
  store i32 %call210, i32* %ret, align 4, !dbg !26207
  br label %if.end214, !dbg !26208

if.else211:                                       ; preds = %submit
  %164 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !26209
  %actual_length212 = getelementptr inbounds %struct.urb, %struct.urb* %164, i32 0, i32 20, !dbg !26211
  store i32 0, i32* %actual_length212, align 4, !dbg !26212
  %165 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !26213
  %list213 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %165, i32 0, i32 0, !dbg !26214
  %166 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !26215
  call void @list_add_tail(%struct.list_head* %list213, %struct.list_head* %166) #13, !dbg !26216
  br label %if.end214

if.end214:                                        ; preds = %if.else211, %if.then209
  br label %for.inc, !dbg !26217

for.inc:                                          ; preds = %if.end214
  %167 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !25929
  store %struct.list_head* %167, %struct.list_head** %cursor, align 8, !dbg !25929
  %168 = load %struct.list_head*, %struct.list_head** %cursor, align 8, !dbg !25929
  %next215 = getelementptr inbounds %struct.list_head, %struct.list_head* %168, i32 0, i32 0, !dbg !25929
  %169 = load %struct.list_head*, %struct.list_head** %next215, align 8, !dbg !25929
  store %struct.list_head* %169, %struct.list_head** %next, align 8, !dbg !25929
  br label %for.cond, !dbg !25929, !llvm.loop !26218

for.end:                                          ; preds = %for.cond
  %call216 = call i32 @list_empty(%struct.list_head* %rx_queue) #13, !dbg !26220
  %tobool217 = icmp ne i32 %call216, 0, !dbg !26220
  br i1 %tobool217, label %if.end248, label %if.then218, !dbg !26221

if.then218:                                       ; preds = %for.end
  br label %do.body219, !dbg !26222

do.body219:                                       ; preds = %if.then218
  br label %do.body220, !dbg !26223

do.body220:                                       ; preds = %do.body219
  call void @llvm.dbg.declare(metadata i64* %__dummy221, metadata !26224, metadata !DIExpression()), !dbg !26226
  call void @llvm.dbg.declare(metadata i64* %__dummy2222, metadata !26227, metadata !DIExpression()), !dbg !26226
  %cmp223 = icmp eq i64* %__dummy221, %__dummy2222, !dbg !26226
  %conv224 = zext i1 %cmp223 to i32, !dbg !26226
  store i32 1, i32* %tmp225, align 4, !dbg !26226
  %170 = load i32, i32* %tmp225, align 4, !dbg !26226
  br label %do.body226, !dbg !26228

do.body226:                                       ; preds = %do.body220
  br label %do.body227, !dbg !26229

do.body227:                                       ; preds = %do.body226
  br label %do.body228, !dbg !26230

do.body228:                                       ; preds = %do.body227
  call void @llvm.dbg.declare(metadata i64* %__dummy229, metadata !26232, metadata !DIExpression()), !dbg !26235
  call void @llvm.dbg.declare(metadata i64* %__dummy2230, metadata !26236, metadata !DIExpression()), !dbg !26235
  %cmp231 = icmp eq i64* %__dummy229, %__dummy2230, !dbg !26235
  %conv232 = zext i1 %cmp231 to i32, !dbg !26235
  store i32 1, i32* %tmp233, align 4, !dbg !26235
  %171 = load i32, i32* %tmp233, align 4, !dbg !26235
  %call234 = call i64 @arch_local_irq_save() #13, !dbg !26237
  store i64 %call234, i64* %flags, align 8, !dbg !26237
  br label %do.end235, !dbg !26237

do.end235:                                        ; preds = %do.body228
  br label %do.end236, !dbg !26230

do.end236:                                        ; preds = %do.end235
  br label %do.body237, !dbg !26229

do.body237:                                       ; preds = %do.end236
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !26238, !srcloc !26239
  br label %do.body238, !dbg !26238

do.body238:                                       ; preds = %do.body237
  %172 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26240
  %rx_lock239 = getelementptr inbounds %struct.r8152, %struct.r8152* %172, i32 0, i32 13, !dbg !26240
  store %struct.spinlock* %rx_lock239, %struct.spinlock** %lock.addr.i263, align 8
  %173 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i263, align 8, !dbg !26241
  %174 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %173, i32 0, i32 0, !dbg !26242
  %rlock.i264 = bitcast %union.anon.1* %174 to %struct.raw_spinlock*, !dbg !26242
  br label %do.end241, !dbg !26240

do.end241:                                        ; preds = %do.body238
  br label %do.end242, !dbg !26238

do.end242:                                        ; preds = %do.end241
  br label %do.end243, !dbg !26229

do.end243:                                        ; preds = %do.end242
  br label %do.end244, !dbg !26228

do.end244:                                        ; preds = %do.end243
  br label %do.end245, !dbg !26223

do.end245:                                        ; preds = %do.end244
  %175 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26243
  %rx_done246 = getelementptr inbounds %struct.r8152, %struct.r8152* %175, i32 0, i32 9, !dbg !26244
  call void @list_splice_tail(%struct.list_head* %rx_queue, %struct.list_head* %rx_done246) #13, !dbg !26245
  %176 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26246
  %rx_lock247 = getelementptr inbounds %struct.r8152, %struct.r8152* %176, i32 0, i32 13, !dbg !26247
  %177 = load i64, i64* %flags, align 8, !dbg !26248
  store %struct.spinlock* %rx_lock247, %struct.spinlock** %lock.addr.i249, align 8
  store i64 %177, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !820, metadata !15497, metadata !DIExpression()) #11, !dbg !26249
  call void @llvm.dbg.declare(metadata !820, metadata !15501, metadata !DIExpression()) #11, !dbg !26249
  store i32 1, i32* %tmp.i, align 4, !dbg !26249
  %178 = load i32, i32* %tmp.i, align 4, !dbg !26249
  call void @llvm.dbg.declare(metadata !820, metadata !15502, metadata !DIExpression()) #11, !dbg !26250
  call void @llvm.dbg.declare(metadata !820, metadata !15508, metadata !DIExpression()) #11, !dbg !26250
  store i32 1, i32* %tmp8.i, align 4, !dbg !26250
  %179 = load i32, i32* %tmp8.i, align 4, !dbg !26250
  %180 = load i64, i64* %flags.addr.i, align 8, !dbg !26251
  call void @arch_local_irq_restore(i64 %180) #16, !dbg !26251
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !26252, !srcloc !15512
  %181 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i249, align 8, !dbg !26253
  %182 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %181, i32 0, i32 0, !dbg !26253
  %rlock.i250 = bitcast %union.anon.1* %182 to %struct.raw_spinlock*, !dbg !26253
  br label %if.end248, !dbg !26254

if.end248:                                        ; preds = %do.end245, %for.end
  br label %out1, !dbg !26255

out1:                                             ; preds = %if.end248, %if.then14
  call void @llvm.dbg.label(metadata !26256), !dbg !26257
  %183 = load i32, i32* %work_done, align 4, !dbg !26258
  ret i32 %183, !dbg !26259
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @napi_complete_done(%struct.napi_struct*, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @napi_gro_receive(%struct.napi_struct*, %struct.sk_buff*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.rx_agg* @rtl_get_free_rx(%struct.r8152* %tp, i32 %mflags) #2 !dbg !26260 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !15911, metadata !DIExpression()), !dbg !26261
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !14189, metadata !DIExpression()), !dbg !26265
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !14193, metadata !DIExpression()), !dbg !26267
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !15926, metadata !DIExpression()), !dbg !26268
  %lock.addr.i57 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i57, metadata !15428, metadata !DIExpression()), !dbg !26269
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !15435, metadata !DIExpression()), !dbg !26271
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !15437, metadata !DIExpression()), !dbg !26272
  %tp.addr = alloca %struct.r8152*, align 8
  %mflags.addr = alloca i32, align 4
  %agg = alloca %struct.rx_agg*, align 8
  %agg_next = alloca %struct.rx_agg*, align 8
  %agg_free = alloca %struct.rx_agg*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp21 = alloca %struct.rx_agg*, align 8
  %__mptr22 = alloca i8*, align 8
  %tmp26 = alloca %struct.rx_agg*, align 8
  %__mptr42 = alloca i8*, align 8
  %tmp47 = alloca %struct.rx_agg*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !26279, metadata !DIExpression()), !dbg !26280
  store i32 %mflags, i32* %mflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mflags.addr, metadata !26281, metadata !DIExpression()), !dbg !26282
  call void @llvm.dbg.declare(metadata %struct.rx_agg** %agg, metadata !26283, metadata !DIExpression()), !dbg !26284
  call void @llvm.dbg.declare(metadata %struct.rx_agg** %agg_next, metadata !26285, metadata !DIExpression()), !dbg !26286
  call void @llvm.dbg.declare(metadata %struct.rx_agg** %agg_free, metadata !26287, metadata !DIExpression()), !dbg !26288
  store %struct.rx_agg* null, %struct.rx_agg** %agg_free, align 8, !dbg !26288
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !26289, metadata !DIExpression()), !dbg !26290
  br label %do.body, !dbg !26291

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !26292

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !26293, metadata !DIExpression()), !dbg !26295
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !26296, metadata !DIExpression()), !dbg !26295
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !26295
  %conv = zext i1 %cmp to i32, !dbg !26295
  store i32 1, i32* %tmp, align 4, !dbg !26295
  %0 = load i32, i32* %tmp, align 4, !dbg !26295
  br label %do.body2, !dbg !26297

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !26298

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !26299

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !26301, metadata !DIExpression()), !dbg !26304
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !26305, metadata !DIExpression()), !dbg !26304
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !26304
  %conv8 = zext i1 %cmp7 to i32, !dbg !26304
  store i32 1, i32* %tmp9, align 4, !dbg !26304
  %1 = load i32, i32* %tmp9, align 4, !dbg !26304
  %call = call i64 @arch_local_irq_save() #13, !dbg !26306
  store i64 %call, i64* %flags, align 8, !dbg !26306
  br label %do.end, !dbg !26306

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !26299

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !26298

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !26307, !srcloc !26308
  br label %do.body12, !dbg !26307

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26309
  %rx_lock = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 13, !dbg !26309
  store %struct.spinlock* %rx_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !26310
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !26311
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !26311
  br label %do.end14, !dbg !26309

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !26307

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !26298

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !26297

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !26292

do.end18:                                         ; preds = %do.end17
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !26312, metadata !DIExpression()), !dbg !26315
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26315
  %rx_used = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 8, !dbg !26315
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %rx_used, i32 0, i32 0, !dbg !26315
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !26315
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !26315
  store i8* %7, i8** %__mptr, align 8, !dbg !26315
  br label %do.body19, !dbg !26315

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !26316

do.end20:                                         ; preds = %do.body19
  %8 = load i8*, i8** %__mptr, align 8, !dbg !26315
  %add.ptr = getelementptr i8, i8* %8, i64 0, !dbg !26315
  %9 = bitcast i8* %add.ptr to %struct.rx_agg*, !dbg !26315
  store %struct.rx_agg* %9, %struct.rx_agg** %tmp21, align 8, !dbg !26316
  %10 = load %struct.rx_agg*, %struct.rx_agg** %tmp21, align 8, !dbg !26315
  store %struct.rx_agg* %10, %struct.rx_agg** %agg, align 8, !dbg !26318
  call void @llvm.dbg.declare(metadata i8** %__mptr22, metadata !26319, metadata !DIExpression()), !dbg !26321
  %11 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !26321
  %list = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %11, i32 0, i32 0, !dbg !26321
  %next23 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !26321
  %12 = load %struct.list_head*, %struct.list_head** %next23, align 8, !dbg !26321
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !26321
  store i8* %13, i8** %__mptr22, align 8, !dbg !26321
  br label %do.body24, !dbg !26321

do.body24:                                        ; preds = %do.end20
  br label %do.end25, !dbg !26322

do.end25:                                         ; preds = %do.body24
  %14 = load i8*, i8** %__mptr22, align 8, !dbg !26321
  %add.ptr27 = getelementptr i8, i8* %14, i64 0, !dbg !26321
  %15 = bitcast i8* %add.ptr27 to %struct.rx_agg*, !dbg !26321
  store %struct.rx_agg* %15, %struct.rx_agg** %tmp26, align 8, !dbg !26322
  %16 = load %struct.rx_agg*, %struct.rx_agg** %tmp26, align 8, !dbg !26321
  store %struct.rx_agg* %16, %struct.rx_agg** %agg_next, align 8, !dbg !26318
  br label %for.cond, !dbg !26318

for.cond:                                         ; preds = %do.end46, %do.end25
  %17 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !26324
  %list28 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %17, i32 0, i32 0, !dbg !26324
  %18 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26324
  %rx_used29 = getelementptr inbounds %struct.r8152, %struct.r8152* %18, i32 0, i32 8, !dbg !26324
  %cmp30 = icmp eq %struct.list_head* %list28, %rx_used29, !dbg !26324
  %lnot = xor i1 %cmp30, true, !dbg !26324
  br i1 %lnot, label %for.body, label %for.end, !dbg !26318

for.body:                                         ; preds = %for.cond
  %19 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !26326
  %page = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %19, i32 0, i32 4, !dbg !26329
  %20 = load %struct.page*, %struct.page** %page, align 8, !dbg !26329
  %call32 = call i32 @page_count(%struct.page* %20) #13, !dbg !26330
  %cmp33 = icmp eq i32 %call32, 1, !dbg !26331
  br i1 %cmp33, label %if.then, label %if.end41, !dbg !26332

if.then:                                          ; preds = %for.body
  %21 = load %struct.rx_agg*, %struct.rx_agg** %agg_free, align 8, !dbg !26333
  %tobool = icmp ne %struct.rx_agg* %21, null, !dbg !26333
  br i1 %tobool, label %if.end, label %if.then35, !dbg !26336

if.then35:                                        ; preds = %if.then
  %22 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !26337
  %list36 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %22, i32 0, i32 0, !dbg !26339
  call void @list_del_init(%struct.list_head* %list36) #13, !dbg !26340
  %23 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !26341
  store %struct.rx_agg* %23, %struct.rx_agg** %agg_free, align 8, !dbg !26342
  br label %for.inc, !dbg !26343

if.end:                                           ; preds = %if.then
  %24 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26344
  %call37 = call zeroext i1 @rx_count_exceed(%struct.r8152* %24) #13, !dbg !26346
  br i1 %call37, label %if.then38, label %if.end40, !dbg !26347

if.then38:                                        ; preds = %if.end
  %25 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !26348
  %list39 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %25, i32 0, i32 0, !dbg !26350
  call void @list_del_init(%struct.list_head* %list39) #13, !dbg !26351
  %26 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26352
  %27 = load %struct.rx_agg*, %struct.rx_agg** %agg, align 8, !dbg !26353
  call void @free_rx_agg(%struct.r8152* %26, %struct.rx_agg* %27) #13, !dbg !26354
  br label %if.end40, !dbg !26355

if.end40:                                         ; preds = %if.then38, %if.end
  br label %for.end, !dbg !26356

if.end41:                                         ; preds = %for.body
  br label %for.inc, !dbg !26357

for.inc:                                          ; preds = %if.end41, %if.then35
  %28 = load %struct.rx_agg*, %struct.rx_agg** %agg_next, align 8, !dbg !26324
  store %struct.rx_agg* %28, %struct.rx_agg** %agg, align 8, !dbg !26324
  call void @llvm.dbg.declare(metadata i8** %__mptr42, metadata !26358, metadata !DIExpression()), !dbg !26360
  %29 = load %struct.rx_agg*, %struct.rx_agg** %agg_next, align 8, !dbg !26360
  %list43 = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %29, i32 0, i32 0, !dbg !26360
  %next44 = getelementptr inbounds %struct.list_head, %struct.list_head* %list43, i32 0, i32 0, !dbg !26360
  %30 = load %struct.list_head*, %struct.list_head** %next44, align 8, !dbg !26360
  %31 = bitcast %struct.list_head* %30 to i8*, !dbg !26360
  store i8* %31, i8** %__mptr42, align 8, !dbg !26360
  br label %do.body45, !dbg !26360

do.body45:                                        ; preds = %for.inc
  br label %do.end46, !dbg !26361

do.end46:                                         ; preds = %do.body45
  %32 = load i8*, i8** %__mptr42, align 8, !dbg !26360
  %add.ptr48 = getelementptr i8, i8* %32, i64 0, !dbg !26360
  %33 = bitcast i8* %add.ptr48 to %struct.rx_agg*, !dbg !26360
  store %struct.rx_agg* %33, %struct.rx_agg** %tmp47, align 8, !dbg !26361
  %34 = load %struct.rx_agg*, %struct.rx_agg** %tmp47, align 8, !dbg !26360
  store %struct.rx_agg* %34, %struct.rx_agg** %agg_next, align 8, !dbg !26324
  br label %for.cond, !dbg !26324, !llvm.loop !26363

for.end:                                          ; preds = %if.end40, %for.cond
  %35 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26365
  %rx_lock49 = getelementptr inbounds %struct.r8152, %struct.r8152* %35, i32 0, i32 13, !dbg !26366
  %36 = load i64, i64* %flags, align 8, !dbg !26367
  store %struct.spinlock* %rx_lock49, %struct.spinlock** %lock.addr.i57, align 8
  store i64 %36, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !820, metadata !15497, metadata !DIExpression()) #11, !dbg !26368
  call void @llvm.dbg.declare(metadata !820, metadata !15501, metadata !DIExpression()) #11, !dbg !26368
  store i32 1, i32* %tmp.i, align 4, !dbg !26368
  %37 = load i32, i32* %tmp.i, align 4, !dbg !26368
  call void @llvm.dbg.declare(metadata !820, metadata !15502, metadata !DIExpression()) #11, !dbg !26369
  call void @llvm.dbg.declare(metadata !820, metadata !15508, metadata !DIExpression()) #11, !dbg !26369
  store i32 1, i32* %tmp8.i, align 4, !dbg !26369
  %38 = load i32, i32* %tmp8.i, align 4, !dbg !26369
  %39 = load i64, i64* %flags.addr.i, align 8, !dbg !26370
  call void @arch_local_irq_restore(i64 %39) #16, !dbg !26370
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !26371, !srcloc !15512
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i57, align 8, !dbg !26372
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !26372
  %rlock.i58 = bitcast %union.anon.1* %41 to %struct.raw_spinlock*, !dbg !26372
  %42 = load %struct.rx_agg*, %struct.rx_agg** %agg_free, align 8, !dbg !26373
  %tobool50 = icmp ne %struct.rx_agg* %42, null, !dbg !26373
  br i1 %tobool50, label %if.end56, label %land.lhs.true, !dbg !26374

land.lhs.true:                                    ; preds = %for.end
  %43 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26375
  %rx_count = getelementptr inbounds %struct.r8152, %struct.r8152* %43, i32 0, i32 24, !dbg !26376
  store %struct.atomic_t* %rx_count, %struct.atomic_t** %v.addr.i, align 8
  %44 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !26377
  %45 = bitcast %struct.atomic_t* %44 to i8*, !dbg !26377
  store i8* %45, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %46 = load i8*, i8** %v.addr.i.i, align 8, !dbg !26378
  %47 = load i64, i64* %size.addr.i.i, align 8, !dbg !26379
  %conv.i.i = trunc i64 %47 to i32, !dbg !26379
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %46, i32 %conv.i.i) #16, !dbg !26380
  %48 = load i8*, i8** %v.addr.i.i, align 8, !dbg !26381
  %49 = load i64, i64* %size.addr.i.i, align 8, !dbg !26381
  call void @kcsan_check_access(i8* %48, i64 %49, i32 4) #16, !dbg !26381
  %50 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !26382
  store %struct.atomic_t* %50, %struct.atomic_t** %v.addr.i1.i, align 8
  %51 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !26383
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %51, i32 0, i32 0, !dbg !26383
  %52 = load volatile i32, i32* %counter.i.i, align 4, !dbg !26383
  %53 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26384
  %rx_pending = getelementptr inbounds %struct.r8152, %struct.r8152* %53, i32 0, i32 34, !dbg !26385
  %54 = load i32, i32* %rx_pending, align 8, !dbg !26385
  %cmp52 = icmp ult i32 %52, %54, !dbg !26386
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !26387

if.then54:                                        ; preds = %land.lhs.true
  %55 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26388
  %56 = load i32, i32* %mflags.addr, align 4, !dbg !26389
  %call55 = call %struct.rx_agg* @alloc_rx_agg(%struct.r8152* %55, i32 %56) #13, !dbg !26390
  store %struct.rx_agg* %call55, %struct.rx_agg** %agg_free, align 8, !dbg !26391
  br label %if.end56, !dbg !26392

if.end56:                                         ; preds = %if.then54, %land.lhs.true, %for.end
  %57 = load %struct.rx_agg*, %struct.rx_agg** %agg_free, align 8, !dbg !26393
  ret %struct.rx_agg* %57, !dbg !26394
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @napi_alloc_skb(%struct.napi_struct* %napi, i32 %length) #2 !dbg !26395 {
entry:
  %napi.addr = alloca %struct.napi_struct*, align 8
  %length.addr = alloca i32, align 4
  store %struct.napi_struct* %napi, %struct.napi_struct** %napi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi.addr, metadata !26398, metadata !DIExpression()), !dbg !26399
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !26400, metadata !DIExpression()), !dbg !26401
  %0 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !26402
  %1 = load i32, i32* %length.addr, align 4, !dbg !26403
  %call = call %struct.sk_buff* @__napi_alloc_skb(%struct.napi_struct* %0, i32 %1, i32 2592) #13, !dbg !26404
  ret %struct.sk_buff* %call, !dbg !26405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @r8152_rx_csum(%struct.r8152* %tp, %struct.rx_desc* %rx_desc) #2 !dbg !26406 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %rx_desc.addr = alloca %struct.rx_desc*, align 8
  %checksum = alloca i8, align 1
  %opts2 = alloca i32, align 4
  %opts3 = alloca i32, align 4
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !26409, metadata !DIExpression()), !dbg !26410
  store %struct.rx_desc* %rx_desc, %struct.rx_desc** %rx_desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rx_desc** %rx_desc.addr, metadata !26411, metadata !DIExpression()), !dbg !26412
  call void @llvm.dbg.declare(metadata i8* %checksum, metadata !26413, metadata !DIExpression()), !dbg !26414
  store i8 0, i8* %checksum, align 1, !dbg !26414
  call void @llvm.dbg.declare(metadata i32* %opts2, metadata !26415, metadata !DIExpression()), !dbg !26416
  call void @llvm.dbg.declare(metadata i32* %opts3, metadata !26417, metadata !DIExpression()), !dbg !26418
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26419
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 4, !dbg !26421
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !26421
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 15, !dbg !26422
  %2 = load i64, i64* %features, align 8, !dbg !26422
  %and = and i64 %2, 1099511627776, !dbg !26423
  %tobool = icmp ne i64 %and, 0, !dbg !26423
  br i1 %tobool, label %if.end, label %if.then, !dbg !26424

if.then:                                          ; preds = %entry
  br label %return_result, !dbg !26425

if.end:                                           ; preds = %entry
  %3 = load %struct.rx_desc*, %struct.rx_desc** %rx_desc.addr, align 8, !dbg !26426
  %opts21 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %3, i32 0, i32 1, !dbg !26426
  %4 = load i32, i32* %opts21, align 4, !dbg !26426
  store i32 %4, i32* %opts2, align 4, !dbg !26427
  %5 = load %struct.rx_desc*, %struct.rx_desc** %rx_desc.addr, align 8, !dbg !26428
  %opts32 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %5, i32 0, i32 2, !dbg !26428
  %6 = load i32, i32* %opts32, align 4, !dbg !26428
  store i32 %6, i32* %opts3, align 4, !dbg !26429
  %7 = load i32, i32* %opts2, align 4, !dbg !26430
  %conv = zext i32 %7 to i64, !dbg !26430
  %and3 = and i64 %conv, 524288, !dbg !26432
  %tobool4 = icmp ne i64 %and3, 0, !dbg !26432
  br i1 %tobool4, label %if.then5, label %if.else29, !dbg !26433

if.then5:                                         ; preds = %if.end
  %8 = load i32, i32* %opts3, align 4, !dbg !26434
  %conv6 = zext i32 %8 to i64, !dbg !26434
  %and7 = and i64 %conv6, 8388608, !dbg !26437
  %tobool8 = icmp ne i64 %and7, 0, !dbg !26437
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !26438

if.then9:                                         ; preds = %if.then5
  store i8 0, i8* %checksum, align 1, !dbg !26439
  br label %if.end28, !dbg !26440

if.else:                                          ; preds = %if.then5
  %9 = load i32, i32* %opts2, align 4, !dbg !26441
  %conv10 = zext i32 %9 to i64, !dbg !26441
  %and11 = and i64 %conv10, 8388608, !dbg !26443
  %tobool12 = icmp ne i64 %and11, 0, !dbg !26443
  br i1 %tobool12, label %land.lhs.true, label %if.else17, !dbg !26444

land.lhs.true:                                    ; preds = %if.else
  %10 = load i32, i32* %opts3, align 4, !dbg !26445
  %conv13 = zext i32 %10 to i64, !dbg !26445
  %and14 = and i64 %conv13, 4194304, !dbg !26446
  %tobool15 = icmp ne i64 %and14, 0, !dbg !26446
  br i1 %tobool15, label %if.else17, label %if.then16, !dbg !26447

if.then16:                                        ; preds = %land.lhs.true
  store i8 1, i8* %checksum, align 1, !dbg !26448
  br label %if.end27, !dbg !26449

if.else17:                                        ; preds = %land.lhs.true, %if.else
  %11 = load i32, i32* %opts2, align 4, !dbg !26450
  %conv18 = zext i32 %11 to i64, !dbg !26450
  %and19 = and i64 %conv18, 4194304, !dbg !26452
  %tobool20 = icmp ne i64 %and19, 0, !dbg !26452
  br i1 %tobool20, label %land.lhs.true21, label %if.end26, !dbg !26453

land.lhs.true21:                                  ; preds = %if.else17
  %12 = load i32, i32* %opts3, align 4, !dbg !26454
  %conv22 = zext i32 %12 to i64, !dbg !26454
  %and23 = and i64 %conv22, 2097152, !dbg !26455
  %tobool24 = icmp ne i64 %and23, 0, !dbg !26455
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !26456

if.then25:                                        ; preds = %land.lhs.true21
  store i8 1, i8* %checksum, align 1, !dbg !26457
  br label %if.end26, !dbg !26458

if.end26:                                         ; preds = %if.then25, %land.lhs.true21, %if.else17
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then16
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then9
  br label %if.end54, !dbg !26459

if.else29:                                        ; preds = %if.end
  %13 = load i32, i32* %opts2, align 4, !dbg !26460
  %conv30 = zext i32 %13 to i64, !dbg !26460
  %and31 = and i64 %conv30, 1048576, !dbg !26462
  %tobool32 = icmp ne i64 %and31, 0, !dbg !26462
  br i1 %tobool32, label %if.then33, label %if.end53, !dbg !26463

if.then33:                                        ; preds = %if.else29
  %14 = load i32, i32* %opts2, align 4, !dbg !26464
  %conv34 = zext i32 %14 to i64, !dbg !26464
  %and35 = and i64 %conv34, 8388608, !dbg !26467
  %tobool36 = icmp ne i64 %and35, 0, !dbg !26467
  br i1 %tobool36, label %land.lhs.true37, label %if.else42, !dbg !26468

land.lhs.true37:                                  ; preds = %if.then33
  %15 = load i32, i32* %opts3, align 4, !dbg !26469
  %conv38 = zext i32 %15 to i64, !dbg !26469
  %and39 = and i64 %conv38, 4194304, !dbg !26470
  %tobool40 = icmp ne i64 %and39, 0, !dbg !26470
  br i1 %tobool40, label %if.else42, label %if.then41, !dbg !26471

if.then41:                                        ; preds = %land.lhs.true37
  store i8 1, i8* %checksum, align 1, !dbg !26472
  br label %if.end52, !dbg !26473

if.else42:                                        ; preds = %land.lhs.true37, %if.then33
  %16 = load i32, i32* %opts2, align 4, !dbg !26474
  %conv43 = zext i32 %16 to i64, !dbg !26474
  %and44 = and i64 %conv43, 4194304, !dbg !26476
  %tobool45 = icmp ne i64 %and44, 0, !dbg !26476
  br i1 %tobool45, label %land.lhs.true46, label %if.end51, !dbg !26477

land.lhs.true46:                                  ; preds = %if.else42
  %17 = load i32, i32* %opts3, align 4, !dbg !26478
  %conv47 = zext i32 %17 to i64, !dbg !26478
  %and48 = and i64 %conv47, 2097152, !dbg !26479
  %tobool49 = icmp ne i64 %and48, 0, !dbg !26479
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !26480

if.then50:                                        ; preds = %land.lhs.true46
  store i8 1, i8* %checksum, align 1, !dbg !26481
  br label %if.end51, !dbg !26482

if.end51:                                         ; preds = %if.then50, %land.lhs.true46, %if.else42
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then41
  br label %if.end53, !dbg !26483

if.end53:                                         ; preds = %if.end52, %if.else29
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.end28
  br label %return_result, !dbg !26484

return_result:                                    ; preds = %if.end54, %if.then
  call void @llvm.dbg.label(metadata !26485), !dbg !26486
  %18 = load i8, i8* %checksum, align 1, !dbg !26487
  ret i8 %18, !dbg !26488
}

; Function Attrs: noredzone
declare dso_local i8* @skb_put(%struct.sk_buff*, i32) #1

; Function Attrs: noredzone
declare dso_local void @skb_add_rx_frag(%struct.sk_buff*, i32, %struct.page*, i32, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @agg_offset(%struct.rx_agg* %agg, i8* %addr) #2 !dbg !26489 {
entry:
  %agg.addr = alloca %struct.rx_agg*, align 8
  %addr.addr = alloca i8*, align 8
  store %struct.rx_agg* %agg, %struct.rx_agg** %agg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rx_agg** %agg.addr, metadata !26492, metadata !DIExpression()), !dbg !26493
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !26494, metadata !DIExpression()), !dbg !26495
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !26496
  %1 = load %struct.rx_agg*, %struct.rx_agg** %agg.addr, align 8, !dbg !26497
  %buffer = getelementptr inbounds %struct.rx_agg, %struct.rx_agg* %1, i32 0, i32 5, !dbg !26498
  %2 = load i8*, i8** %buffer, align 8, !dbg !26498
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !26499
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !26499
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !26499
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !26500
  ret i32 %conv, !dbg !26501
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @get_page(%struct.page* %page) #2 !dbg !26502 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !26503, metadata !DIExpression()), !dbg !26504
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !26505
  %call = call %struct.page* @compound_head(%struct.page* %0) #13, !dbg !26506
  store %struct.page* %call, %struct.page** %page.addr, align 8, !dbg !26507
  %1 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !26508
  call void @page_ref_inc(%struct.page* %1) #13, !dbg !26509
  ret void, !dbg !26510
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @eth_type_trans(%struct.sk_buff*, %struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl_rx_vlan_tag(%struct.rx_desc* %desc, %struct.sk_buff* %skb) #2 !dbg !26511 {
entry:
  %desc.addr = alloca %struct.rx_desc*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %opts2 = alloca i32, align 4
  store %struct.rx_desc* %desc, %struct.rx_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rx_desc** %desc.addr, metadata !26514, metadata !DIExpression()), !dbg !26515
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !26516, metadata !DIExpression()), !dbg !26517
  call void @llvm.dbg.declare(metadata i32* %opts2, metadata !26518, metadata !DIExpression()), !dbg !26519
  %0 = load %struct.rx_desc*, %struct.rx_desc** %desc.addr, align 8, !dbg !26520
  %opts21 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %0, i32 0, i32 1, !dbg !26520
  %1 = load i32, i32* %opts21, align 4, !dbg !26520
  store i32 %1, i32* %opts2, align 4, !dbg !26519
  %2 = load i32, i32* %opts2, align 4, !dbg !26521
  %conv = zext i32 %2 to i64, !dbg !26521
  %and = and i64 %conv, 65536, !dbg !26523
  %tobool = icmp ne i64 %and, 0, !dbg !26523
  br i1 %tobool, label %if.then, label %if.end, !dbg !26524

if.then:                                          ; preds = %entry
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !26525
  %4 = load i32, i32* %opts2, align 4, !dbg !26526
  %and2 = and i32 %4, 65535, !dbg !26526
  %conv3 = trunc i32 %and2 to i16, !dbg !26526
  %5 = call i1 @llvm.is.constant.i16(i16 %conv3), !dbg !26526
  br i1 %5, label %cond.true, label %cond.false, !dbg !26526

cond.true:                                        ; preds = %if.then
  %6 = load i32, i32* %opts2, align 4, !dbg !26526
  %and4 = and i32 %6, 65535, !dbg !26526
  %conv5 = trunc i32 %and4 to i16, !dbg !26526
  %conv6 = zext i16 %conv5 to i32, !dbg !26526
  %and7 = and i32 %conv6, 255, !dbg !26526
  %shl = shl i32 %and7, 8, !dbg !26526
  %7 = load i32, i32* %opts2, align 4, !dbg !26526
  %and8 = and i32 %7, 65535, !dbg !26526
  %conv9 = trunc i32 %and8 to i16, !dbg !26526
  %conv10 = zext i16 %conv9 to i32, !dbg !26526
  %and11 = and i32 %conv10, 65280, !dbg !26526
  %shr = ashr i32 %and11, 8, !dbg !26526
  %or = or i32 %shl, %shr, !dbg !26526
  %conv12 = trunc i32 %or to i16, !dbg !26526
  %conv13 = zext i16 %conv12 to i32, !dbg !26526
  br label %cond.end, !dbg !26526

cond.false:                                       ; preds = %if.then
  %8 = load i32, i32* %opts2, align 4, !dbg !26526
  %and14 = and i32 %8, 65535, !dbg !26526
  %conv15 = trunc i32 %and14 to i16, !dbg !26526
  %call = call zeroext i16 @__fswab16(i16 zeroext %conv15) #15, !dbg !26526
  %conv16 = zext i16 %call to i32, !dbg !26526
  br label %cond.end, !dbg !26526

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv13, %cond.true ], [ %conv16, %cond.false ], !dbg !26526
  %conv17 = trunc i32 %cond to i16, !dbg !26526
  call void @__vlan_hwaccel_put_tag(%struct.sk_buff* %3, i16 zeroext 129, i16 zeroext %conv17) #13, !dbg !26527
  br label %if.end, !dbg !26527

if.end:                                           ; preds = %cond.end, %entry
  ret void, !dbg !26528
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @rx_agg_align(i8* %data) #2 !dbg !26529 {
entry:
  %data.addr = alloca i8*, align 8
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !26530, metadata !DIExpression()), !dbg !26531
  %0 = load i8*, i8** %data.addr, align 8, !dbg !26532
  %1 = ptrtoint i8* %0 to i64, !dbg !26532
  %add = add i64 %1, 7, !dbg !26532
  %and = and i64 %add, -8, !dbg !26532
  %2 = inttoptr i64 %and to i8*, !dbg !26533
  ret i8* %2, !dbg !26534
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #2 !dbg !26535 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !26536, metadata !DIExpression()), !dbg !26537
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !26538, metadata !DIExpression()), !dbg !26539
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !26540
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !26541
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !26542
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !26543
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !26543
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #13, !dbg !26544
  ret void, !dbg !26545
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_splice_tail(%struct.list_head* %list, %struct.list_head* %head) #2 !dbg !26546 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !26547, metadata !DIExpression()), !dbg !26548
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !26549, metadata !DIExpression()), !dbg !26550
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !26551
  %call = call i32 @list_empty(%struct.list_head* %0) #13, !dbg !26553
  %tobool = icmp ne i32 %call, 0, !dbg !26553
  br i1 %tobool, label %if.end, label %if.then, !dbg !26554

if.then:                                          ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !26555
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !26556
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !26557
  %3 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !26557
  %4 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !26558
  call void @__list_splice(%struct.list_head* %1, %struct.list_head* %3, %struct.list_head* %4) #13, !dbg !26559
  br label %if.end, !dbg !26559

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !26560
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @rx_count_exceed(%struct.r8152* %tp) #2 !dbg !26561 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !15911, metadata !DIExpression()), !dbg !26562
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !14189, metadata !DIExpression()), !dbg !26565
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !14193, metadata !DIExpression()), !dbg !26567
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !15926, metadata !DIExpression()), !dbg !26568
  %tp.addr = alloca %struct.r8152*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !26569, metadata !DIExpression()), !dbg !26570
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26571
  %rx_count = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 24, !dbg !26572
  store %struct.atomic_t* %rx_count, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !26573
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !26573
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !26574
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !26575
  %conv.i.i = trunc i64 %4 to i32, !dbg !26575
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i.i) #16, !dbg !26576
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !26577
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !26577
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #16, !dbg !26577
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !26578
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !26579
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !26579
  %9 = load volatile i32, i32* %counter.i.i, align 4, !dbg !26579
  %cmp = icmp sgt i32 %9, 10, !dbg !26580
  ret i1 %cmp, !dbg !26581
}

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__napi_alloc_skb(%struct.napi_struct*, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @page_ref_inc(%struct.page* %page) #2 !dbg !26582 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !22250, metadata !DIExpression()), !dbg !26583
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !15953, metadata !DIExpression()), !dbg !26586
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15957, metadata !DIExpression()), !dbg !26588
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !22259, metadata !DIExpression()), !dbg !26589
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !26590, metadata !DIExpression()), !dbg !26591
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !26592
  %_refcount = getelementptr inbounds %struct.page, %struct.page* %0, i32 0, i32 3, !dbg !26593
  store %struct.atomic_t* %_refcount, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !26594
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !26594
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !26595
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !26596
  %conv.i.i = trunc i64 %4 to i32, !dbg !26596
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #16, !dbg !26597
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !26598
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !26598
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #16, !dbg !26598
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !26599
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !26600
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !26601
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #11, !dbg !26602, !srcloc !22274
  ret void, !dbg !26603
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__vlan_hwaccel_put_tag(%struct.sk_buff* %skb, i16 zeroext %vlan_proto, i16 zeroext %vlan_tci) #2 !dbg !26604 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %vlan_proto.addr = alloca i16, align 2
  %vlan_tci.addr = alloca i16, align 2
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !26607, metadata !DIExpression()), !dbg !26608
  store i16 %vlan_proto, i16* %vlan_proto.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vlan_proto.addr, metadata !26609, metadata !DIExpression()), !dbg !26610
  store i16 %vlan_tci, i16* %vlan_tci.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vlan_tci.addr, metadata !26611, metadata !DIExpression()), !dbg !26612
  %0 = load i16, i16* %vlan_proto.addr, align 2, !dbg !26613
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !26614
  %vlan_proto1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 21, !dbg !26615
  store i16 %0, i16* %vlan_proto1, align 4, !dbg !26616
  %2 = load i16, i16* %vlan_tci.addr, align 2, !dbg !26617
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !26618
  %vlan_tci2 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 22, !dbg !26619
  store i16 %2, i16* %vlan_tci2, align 2, !dbg !26620
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !26621
  %vlan_present = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 16, !dbg !26622
  %bf.load = load i16, i16* %vlan_present, align 2, !dbg !26623
  %bf.clear = and i16 %bf.load, -2, !dbg !26623
  %bf.set = or i16 %bf.clear, 1, !dbg !26623
  store i16 %bf.set, i16* %vlan_present, align 2, !dbg !26623
  ret void, !dbg !26624
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @usb_get_intfdata(%struct.usb_interface* %intf) #2 !dbg !26625 {
entry:
  %intf.addr = alloca %struct.usb_interface*, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !26628, metadata !DIExpression()), !dbg !26629
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !26630
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 7, !dbg !26631
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #13, !dbg !26632
  ret i8* %call, !dbg !26633
}

; Function Attrs: noredzone
declare dso_local void @unregister_netdev(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rtl8152_release_firmware(%struct.r8152* %tp) #2 !dbg !26634 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %rtl_fw = alloca %struct.rtl_fw*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !26635, metadata !DIExpression()), !dbg !26636
  call void @llvm.dbg.declare(metadata %struct.rtl_fw** %rtl_fw, metadata !26637, metadata !DIExpression()), !dbg !26638
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26639
  %rtl_fw1 = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 23, !dbg !26640
  store %struct.rtl_fw* %rtl_fw1, %struct.rtl_fw** %rtl_fw, align 8, !dbg !26638
  %1 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !26641
  %fw = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %1, i32 0, i32 1, !dbg !26643
  %2 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !26643
  %3 = bitcast %struct.firmware* %2 to i8*, !dbg !26641
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %3) #13, !dbg !26644
  br i1 %call, label %if.end, label %if.then, !dbg !26645

if.then:                                          ; preds = %entry
  %4 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !26646
  %fw2 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %4, i32 0, i32 1, !dbg !26648
  %5 = load %struct.firmware*, %struct.firmware** %fw2, align 8, !dbg !26648
  call void @release_firmware(%struct.firmware* %5) #13, !dbg !26649
  %6 = load %struct.rtl_fw*, %struct.rtl_fw** %rtl_fw, align 8, !dbg !26650
  %fw3 = getelementptr inbounds %struct.rtl_fw, %struct.rtl_fw* %6, i32 0, i32 1, !dbg !26651
  store %struct.firmware* null, %struct.firmware** %fw3, align 8, !dbg !26652
  br label %if.end, !dbg !26653

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !26654
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #2 !dbg !26655 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !26658, metadata !DIExpression()), !dbg !26659
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !26660
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !26661
  %1 = load i8*, i8** %driver_data, align 8, !dbg !26661
  ret i8* %1, !dbg !26662
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_runtime_suspend(%struct.r8152* %tp) #2 !dbg !26663 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %ret = alloca i32, align 4
  %rcr = alloca i32, align 4
  %ocp_data = alloca i32, align 4
  %napi = alloca %struct.napi_struct*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !26664, metadata !DIExpression()), !dbg !26665
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !26666, metadata !DIExpression()), !dbg !26667
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26668
  %netdev1 = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 4, !dbg !26669
  %1 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !26669
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !26667
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !26670, metadata !DIExpression()), !dbg !26671
  store i32 0, i32* %ret, align 4, !dbg !26671
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26672
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %2, i32 0, i32 0, !dbg !26673
  call void @set_bit(i64 4, i64* %flags) #13, !dbg !26674
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !26675, !srcloc !26676
  %3 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !26677
  %call = call zeroext i1 @netif_running(%struct.net_device* %3) #13, !dbg !26679
  br i1 %call, label %land.lhs.true, label %if.end22, !dbg !26680

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26681
  %flags2 = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 0, !dbg !26682
  %call3 = call zeroext i1 @test_bit(i64 2, i64* %flags2) #13, !dbg !26683
  br i1 %call3, label %if.then, label %if.end22, !dbg !26684

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %rcr, metadata !26685, metadata !DIExpression()), !dbg !26687
  store i32 0, i32* %rcr, align 4, !dbg !26687
  %5 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !26688
  %call4 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %5) #13, !dbg !26690
  br i1 %call4, label %if.then5, label %if.end11, !dbg !26691

if.then5:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %ocp_data, metadata !26692, metadata !DIExpression()), !dbg !26694
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26695
  %call6 = call i32 @ocp_read_dword(%struct.r8152* %6, i16 zeroext 256, i16 zeroext -16368) #13, !dbg !26696
  store i32 %call6, i32* %rcr, align 4, !dbg !26697
  %7 = load i32, i32* %rcr, align 4, !dbg !26698
  %and = and i32 %7, -16, !dbg !26699
  store i32 %and, i32* %ocp_data, align 4, !dbg !26700
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26701
  %9 = load i32, i32* %ocp_data, align 4, !dbg !26702
  call void @ocp_write_dword(%struct.r8152* %8, i16 zeroext 256, i16 zeroext -16368, i32 %9) #13, !dbg !26703
  %10 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26704
  call void @rxdy_gated_en(%struct.r8152* %10, i1 zeroext true) #13, !dbg !26705
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26706
  %call7 = call zeroext i8 @ocp_read_byte(%struct.r8152* %11, i16 zeroext 256, i16 zeroext -6065) #13, !dbg !26707
  %conv = zext i8 %call7 to i32, !dbg !26707
  store i32 %conv, i32* %ocp_data, align 4, !dbg !26708
  %12 = load i32, i32* %ocp_data, align 4, !dbg !26709
  %and8 = and i32 %12, 16, !dbg !26711
  %tobool = icmp ne i32 %and8, 0, !dbg !26711
  br i1 %tobool, label %if.end, label %if.then9, !dbg !26712

if.then9:                                         ; preds = %if.then5
  %13 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26713
  call void @rxdy_gated_en(%struct.r8152* %13, i1 zeroext false) #13, !dbg !26715
  %14 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26716
  %15 = load i32, i32* %rcr, align 4, !dbg !26717
  call void @ocp_write_dword(%struct.r8152* %14, i16 zeroext 256, i16 zeroext -16368, i32 %15) #13, !dbg !26718
  %16 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26719
  %flags10 = getelementptr inbounds %struct.r8152, %struct.r8152* %16, i32 0, i32 0, !dbg !26720
  call void @clear_bit(i64 4, i64* %flags10) #13, !dbg !26721
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !26722, !srcloc !26723
  store i32 -16, i32* %ret, align 4, !dbg !26724
  br label %out1, !dbg !26725

if.end:                                           ; preds = %if.then5
  br label %if.end11, !dbg !26726

if.end11:                                         ; preds = %if.end, %if.then
  %17 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26727
  %flags12 = getelementptr inbounds %struct.r8152, %struct.r8152* %17, i32 0, i32 0, !dbg !26728
  call void @clear_bit(i64 2, i64* %flags12) #13, !dbg !26729
  %18 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26730
  %intr_urb = getelementptr inbounds %struct.r8152, %struct.r8152* %18, i32 0, i32 5, !dbg !26731
  %19 = load %struct.urb*, %struct.urb** %intr_urb, align 8, !dbg !26731
  call void @usb_kill_urb(%struct.urb* %19) #13, !dbg !26732
  %20 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26733
  %rtl_ops = getelementptr inbounds %struct.r8152, %struct.r8152* %20, i32 0, i32 21, !dbg !26734
  %autosuspend_en = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops, i32 0, i32 10, !dbg !26735
  %21 = load void (%struct.r8152*, i1)*, void (%struct.r8152*, i1)** %autosuspend_en, align 8, !dbg !26735
  %22 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26736
  call void %21(%struct.r8152* %22, i1 zeroext true) #13, !dbg !26733
  %23 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !26737
  %call13 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %23) #13, !dbg !26739
  br i1 %call13, label %if.then14, label %if.end17, !dbg !26740

if.then14:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi, metadata !26741, metadata !DIExpression()), !dbg !26743
  %24 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26744
  %napi15 = getelementptr inbounds %struct.r8152, %struct.r8152* %24, i32 0, i32 2, !dbg !26745
  store %struct.napi_struct* %napi15, %struct.napi_struct** %napi, align 8, !dbg !26743
  %25 = load %struct.napi_struct*, %struct.napi_struct** %napi, align 8, !dbg !26746
  call void @napi_disable(%struct.napi_struct* %25) #13, !dbg !26747
  %26 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26748
  %call16 = call i32 @rtl_stop_rx(%struct.r8152* %26) #13, !dbg !26749
  %27 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26750
  call void @rxdy_gated_en(%struct.r8152* %27, i1 zeroext false) #13, !dbg !26751
  %28 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26752
  %29 = load i32, i32* %rcr, align 4, !dbg !26753
  call void @ocp_write_dword(%struct.r8152* %28, i16 zeroext 256, i16 zeroext -16368, i32 %29) #13, !dbg !26754
  %30 = load %struct.napi_struct*, %struct.napi_struct** %napi, align 8, !dbg !26755
  call void @napi_enable(%struct.napi_struct* %30) #13, !dbg !26756
  br label %if.end17, !dbg !26757

if.end17:                                         ; preds = %if.then14, %if.end11
  %31 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26758
  %call18 = call zeroext i1 @delay_autosuspend(%struct.r8152* %31) #13, !dbg !26760
  br i1 %call18, label %if.then19, label %if.end21, !dbg !26761

if.then19:                                        ; preds = %if.end17
  %32 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26762
  %call20 = call i32 @rtl8152_runtime_resume(%struct.r8152* %32) #13, !dbg !26764
  store i32 -16, i32* %ret, align 4, !dbg !26765
  br label %if.end21, !dbg !26766

if.end21:                                         ; preds = %if.then19, %if.end17
  br label %if.end22, !dbg !26767

if.end22:                                         ; preds = %if.end21, %land.lhs.true, %entry
  br label %out1, !dbg !26768

out1:                                             ; preds = %if.end22, %if.then9
  call void @llvm.dbg.label(metadata !26769), !dbg !26770
  %33 = load i32, i32* %ret, align 4, !dbg !26771
  ret i32 %33, !dbg !26772
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_system_suspend(%struct.r8152* %tp) #2 !dbg !26773 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %napi = alloca %struct.napi_struct*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !26774, metadata !DIExpression()), !dbg !26775
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !26776, metadata !DIExpression()), !dbg !26777
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26778
  %netdev1 = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 4, !dbg !26779
  %1 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !26779
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !26777
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !26780
  call void @netif_device_detach(%struct.net_device* %2) #13, !dbg !26781
  %3 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !26782
  %call = call zeroext i1 @netif_running(%struct.net_device* %3) #13, !dbg !26784
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !26785

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26786
  %flags = getelementptr inbounds %struct.r8152, %struct.r8152* %4, i32 0, i32 0, !dbg !26787
  %call2 = call zeroext i1 @test_bit(i64 2, i64* %flags) #13, !dbg !26788
  br i1 %call2, label %if.then, label %if.end, !dbg !26789

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi, metadata !26790, metadata !DIExpression()), !dbg !26792
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26793
  %napi3 = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 2, !dbg !26794
  store %struct.napi_struct* %napi3, %struct.napi_struct** %napi, align 8, !dbg !26792
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26795
  %flags4 = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 0, !dbg !26796
  call void @clear_bit(i64 2, i64* %flags4) #13, !dbg !26797
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26798
  %intr_urb = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 5, !dbg !26799
  %8 = load %struct.urb*, %struct.urb** %intr_urb, align 8, !dbg !26799
  call void @usb_kill_urb(%struct.urb* %8) #13, !dbg !26800
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26801
  %tx_tl = getelementptr inbounds %struct.r8152, %struct.r8152* %9, i32 0, i32 20, !dbg !26802
  call void @tasklet_disable(%struct.tasklet_struct* %tx_tl) #13, !dbg !26803
  %10 = load %struct.napi_struct*, %struct.napi_struct** %napi, align 8, !dbg !26804
  call void @napi_disable(%struct.napi_struct* %10) #13, !dbg !26805
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26806
  %schedule = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 15, !dbg !26807
  %call5 = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %schedule) #13, !dbg !26808
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26809
  %rtl_ops = getelementptr inbounds %struct.r8152, %struct.r8152* %12, i32 0, i32 21, !dbg !26810
  %down = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops, i32 0, i32 4, !dbg !26811
  %13 = load void (%struct.r8152*)*, void (%struct.r8152*)** %down, align 8, !dbg !26811
  %14 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26812
  call void %13(%struct.r8152* %14) #13, !dbg !26809
  %15 = load %struct.napi_struct*, %struct.napi_struct** %napi, align 8, !dbg !26813
  call void @napi_enable(%struct.napi_struct* %15) #13, !dbg !26814
  %16 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26815
  %tx_tl6 = getelementptr inbounds %struct.r8152, %struct.r8152* %16, i32 0, i32 20, !dbg !26816
  call void @tasklet_enable(%struct.tasklet_struct* %tx_tl6) #13, !dbg !26817
  br label %if.end, !dbg !26818

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret i32 0, !dbg !26819
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @delay_autosuspend(%struct.r8152* %tp) #2 !dbg !26820 {
entry:
  %retval = alloca i1, align 1
  %tp.addr = alloca %struct.r8152*, align 8
  %sw_linking = alloca i8, align 1
  %hw_linking = alloca i8, align 1
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !26821, metadata !DIExpression()), !dbg !26822
  call void @llvm.dbg.declare(metadata i8* %sw_linking, metadata !26823, metadata !DIExpression()), !dbg !26824
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26825
  %netdev = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 4, !dbg !26826
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !26826
  %call = call zeroext i1 @netif_carrier_ok(%struct.net_device* %1) #13, !dbg !26827
  %lnot = xor i1 %call, true, !dbg !26828
  %lnot1 = xor i1 %lnot, true, !dbg !26829
  %frombool = zext i1 %lnot1 to i8, !dbg !26824
  store i8 %frombool, i8* %sw_linking, align 1, !dbg !26824
  call void @llvm.dbg.declare(metadata i8* %hw_linking, metadata !26830, metadata !DIExpression()), !dbg !26831
  %2 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26832
  %call2 = call zeroext i8 @rtl8152_get_speed(%struct.r8152* %2) #13, !dbg !26833
  %conv = zext i8 %call2 to i32, !dbg !26833
  %and = and i32 %conv, 2, !dbg !26834
  %tobool = icmp ne i32 %and, 0, !dbg !26835
  %lnot3 = xor i1 %tobool, true, !dbg !26835
  %lnot4 = xor i1 %lnot3, true, !dbg !26836
  %frombool5 = zext i1 %lnot4 to i8, !dbg !26831
  store i8 %frombool5, i8* %hw_linking, align 1, !dbg !26831
  %3 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26837
  %schedule = getelementptr inbounds %struct.r8152, %struct.r8152* %3, i32 0, i32 15, !dbg !26839
  %work = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %schedule, i32 0, i32 0, !dbg !26840
  %call6 = call i32 @work_busy(%struct.work_struct* %work) #13, !dbg !26841
  %tobool7 = icmp ne i32 %call6, 0, !dbg !26841
  br i1 %tobool7, label %if.then, label %lor.lhs.false, !dbg !26842

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* %sw_linking, align 1, !dbg !26843
  %tobool8 = trunc i8 %4 to i1, !dbg !26843
  %conv9 = zext i1 %tobool8 to i32, !dbg !26843
  %5 = load i8, i8* %hw_linking, align 1, !dbg !26844
  %tobool10 = trunc i8 %5 to i1, !dbg !26844
  %conv11 = zext i1 %tobool10 to i32, !dbg !26844
  %cmp = icmp ne i32 %conv9, %conv11, !dbg !26845
  br i1 %cmp, label %if.then, label %if.end, !dbg !26846

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 true, i1* %retval, align 1, !dbg !26847
  br label %return, !dbg !26847

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i8, i8* %sw_linking, align 1, !dbg !26848
  %tobool13 = trunc i8 %6 to i1, !dbg !26848
  br i1 %tobool13, label %if.else, label %land.lhs.true, !dbg !26850

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26851
  %rtl_ops = getelementptr inbounds %struct.r8152, %struct.r8152* %7, i32 0, i32 21, !dbg !26852
  %in_nway = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops, i32 0, i32 8, !dbg !26853
  %8 = load i1 (%struct.r8152*)*, i1 (%struct.r8152*)** %in_nway, align 8, !dbg !26853
  %9 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26854
  %call14 = call zeroext i1 %8(%struct.r8152* %9) #13, !dbg !26851
  br i1 %call14, label %if.then16, label %if.else, !dbg !26855

if.then16:                                        ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !26856
  br label %return, !dbg !26856

if.else:                                          ; preds = %land.lhs.true, %if.end
  %10 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26857
  %tx_queue = getelementptr inbounds %struct.r8152, %struct.r8152* %10, i32 0, i32 11, !dbg !26859
  %call17 = call i32 @skb_queue_empty(%struct.sk_buff_head* %tx_queue) #13, !dbg !26860
  %tobool18 = icmp ne i32 %call17, 0, !dbg !26860
  br i1 %tobool18, label %if.else20, label %if.then19, !dbg !26861

if.then19:                                        ; preds = %if.else
  store i1 true, i1* %retval, align 1, !dbg !26862
  br label %return, !dbg !26862

if.else20:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !26863
  br label %return, !dbg !26863

return:                                           ; preds = %if.else20, %if.then19, %if.then16, %if.then
  %11 = load i1, i1* %retval, align 1, !dbg !26864
  ret i1 %11, !dbg !26864
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_runtime_resume(%struct.r8152* %tp) #2 !dbg !26865 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %napi = alloca %struct.napi_struct*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !26866, metadata !DIExpression()), !dbg !26867
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !26868, metadata !DIExpression()), !dbg !26869
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26870
  %netdev1 = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 4, !dbg !26871
  %1 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !26871
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !26869
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !26872
  %call = call zeroext i1 @netif_running(%struct.net_device* %2) #13, !dbg !26874
  br i1 %call, label %land.lhs.true, label %if.else24, !dbg !26875

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !26876
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 36, !dbg !26877
  %4 = load i32, i32* %flags, align 8, !dbg !26877
  %and = and i32 %4, 1, !dbg !26878
  %tobool = icmp ne i32 %and, 0, !dbg !26878
  br i1 %tobool, label %if.then, label %if.else24, !dbg !26879

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi, metadata !26880, metadata !DIExpression()), !dbg !26882
  %5 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26883
  %napi2 = getelementptr inbounds %struct.r8152, %struct.r8152* %5, i32 0, i32 2, !dbg !26884
  store %struct.napi_struct* %napi2, %struct.napi_struct** %napi, align 8, !dbg !26882
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26885
  %rtl_ops = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 21, !dbg !26886
  %autosuspend_en = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops, i32 0, i32 10, !dbg !26887
  %7 = load void (%struct.r8152*, i1)*, void (%struct.r8152*, i1)** %autosuspend_en, align 8, !dbg !26887
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26888
  call void %7(%struct.r8152* %8, i1 zeroext false) #13, !dbg !26885
  %9 = load %struct.napi_struct*, %struct.napi_struct** %napi, align 8, !dbg !26889
  call void @napi_disable(%struct.napi_struct* %9) #13, !dbg !26890
  %10 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26891
  %flags3 = getelementptr inbounds %struct.r8152, %struct.r8152* %10, i32 0, i32 0, !dbg !26892
  call void @set_bit(i64 2, i64* %flags3) #13, !dbg !26893
  %11 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !26894
  %call4 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %11) #13, !dbg !26896
  br i1 %call4, label %if.then5, label %if.end16, !dbg !26897

if.then5:                                         ; preds = %if.then
  %12 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26898
  %call6 = call zeroext i8 @rtl8152_get_speed(%struct.r8152* %12) #13, !dbg !26901
  %conv = zext i8 %call6 to i32, !dbg !26901
  %and7 = and i32 %conv, 2, !dbg !26902
  %tobool8 = icmp ne i32 %and7, 0, !dbg !26902
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !26903

if.then9:                                         ; preds = %if.then5
  %13 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26904
  %call10 = call i32 @rtl_start_rx(%struct.r8152* %13) #13, !dbg !26906
  br label %if.end15, !dbg !26907

if.else:                                          ; preds = %if.then5
  %14 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !26908
  call void @netif_carrier_off(%struct.net_device* %14) #13, !dbg !26910
  %15 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26911
  %rtl_ops11 = getelementptr inbounds %struct.r8152, %struct.r8152* %15, i32 0, i32 21, !dbg !26912
  %disable = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops11, i32 0, i32 2, !dbg !26913
  %16 = load void (%struct.r8152*)*, void (%struct.r8152*)** %disable, align 8, !dbg !26913
  %17 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26914
  call void %16(%struct.r8152* %17) #13, !dbg !26911
  br label %do.body, !dbg !26915

do.body:                                          ; preds = %if.else
  %18 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26916
  %msg_enable = getelementptr inbounds %struct.r8152, %struct.r8152* %18, i32 0, i32 28, !dbg !26916
  %19 = load i32, i32* %msg_enable, align 8, !dbg !26916
  %and12 = and i32 %19, 4, !dbg !26916
  %tobool13 = icmp ne i32 %and12, 0, !dbg !26916
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !26919

if.then14:                                        ; preds = %do.body
  %20 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !26916
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.81, i64 0, i64 0)) #14, !dbg !26916
  br label %if.end, !dbg !26916

if.end:                                           ; preds = %if.then14, %do.body
  br label %do.end, !dbg !26919

do.end:                                           ; preds = %if.end
  br label %if.end15

if.end15:                                         ; preds = %do.end, %if.then9
  br label %if.end16, !dbg !26920

if.end16:                                         ; preds = %if.end15, %if.then
  %21 = load %struct.napi_struct*, %struct.napi_struct** %napi, align 8, !dbg !26921
  call void @napi_enable(%struct.napi_struct* %21) #13, !dbg !26922
  %22 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26923
  %flags17 = getelementptr inbounds %struct.r8152, %struct.r8152* %22, i32 0, i32 0, !dbg !26924
  call void @clear_bit(i64 4, i64* %flags17) #13, !dbg !26925
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !26926, !srcloc !26927
  %23 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26928
  %rx_done = getelementptr inbounds %struct.r8152, %struct.r8152* %23, i32 0, i32 9, !dbg !26930
  %call18 = call i32 @list_empty(%struct.list_head* %rx_done) #13, !dbg !26931
  %tobool19 = icmp ne i32 %call18, 0, !dbg !26931
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !26932

if.then20:                                        ; preds = %if.end16
  %24 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26933
  %napi21 = getelementptr inbounds %struct.r8152, %struct.r8152* %24, i32 0, i32 2, !dbg !26934
  call void @napi_schedule(%struct.napi_struct* %napi21) #13, !dbg !26935
  br label %if.end22, !dbg !26935

if.end22:                                         ; preds = %if.then20, %if.end16
  %25 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26936
  %intr_urb = getelementptr inbounds %struct.r8152, %struct.r8152* %25, i32 0, i32 5, !dbg !26937
  %26 = load %struct.urb*, %struct.urb** %intr_urb, align 8, !dbg !26937
  %call23 = call i32 @usb_submit_urb(%struct.urb* %26, i32 3072) #13, !dbg !26938
  br label %if.end33, !dbg !26939

if.else24:                                        ; preds = %land.lhs.true, %entry
  %27 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !26940
  %flags25 = getelementptr inbounds %struct.net_device, %struct.net_device* %27, i32 0, i32 36, !dbg !26943
  %28 = load i32, i32* %flags25, align 8, !dbg !26943
  %and26 = and i32 %28, 1, !dbg !26944
  %tobool27 = icmp ne i32 %and26, 0, !dbg !26944
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !26945

if.then28:                                        ; preds = %if.else24
  %29 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26946
  %rtl_ops29 = getelementptr inbounds %struct.r8152, %struct.r8152* %29, i32 0, i32 21, !dbg !26947
  %autosuspend_en30 = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops29, i32 0, i32 10, !dbg !26948
  %30 = load void (%struct.r8152*, i1)*, void (%struct.r8152*, i1)** %autosuspend_en30, align 8, !dbg !26948
  %31 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26949
  call void %30(%struct.r8152* %31, i1 zeroext false) #13, !dbg !26946
  br label %if.end31, !dbg !26946

if.end31:                                         ; preds = %if.then28, %if.else24
  %32 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26950
  %flags32 = getelementptr inbounds %struct.r8152, %struct.r8152* %32, i32 0, i32 0, !dbg !26951
  call void @clear_bit(i64 4, i64* %flags32) #13, !dbg !26952
  br label %if.end33

if.end33:                                         ; preds = %if.end31, %if.end22
  ret i32 0, !dbg !26953
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rtl8152_system_resume(%struct.r8152* %tp) #2 !dbg !26954 {
entry:
  %tp.addr = alloca %struct.r8152*, align 8
  %netdev = alloca %struct.net_device*, align 8
  store %struct.r8152* %tp, %struct.r8152** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.r8152** %tp.addr, metadata !26955, metadata !DIExpression()), !dbg !26956
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !26957, metadata !DIExpression()), !dbg !26958
  %0 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26959
  %netdev1 = getelementptr inbounds %struct.r8152, %struct.r8152* %0, i32 0, i32 4, !dbg !26960
  %1 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !26960
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !26958
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !26961
  call void @netif_device_attach(%struct.net_device* %2) #13, !dbg !26962
  %3 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !26963
  %call = call zeroext i1 @netif_running(%struct.net_device* %3) #13, !dbg !26965
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !26966

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !26967
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 36, !dbg !26968
  %5 = load i32, i32* %flags, align 8, !dbg !26968
  %and = and i32 %5, 1, !dbg !26969
  %tobool = icmp ne i32 %and, 0, !dbg !26969
  br i1 %tobool, label %if.then, label %if.end, !dbg !26970

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26971
  %rtl_ops = getelementptr inbounds %struct.r8152, %struct.r8152* %6, i32 0, i32 21, !dbg !26973
  %up = getelementptr inbounds %struct.rtl_ops, %struct.rtl_ops* %rtl_ops, i32 0, i32 3, !dbg !26974
  %7 = load void (%struct.r8152*)*, void (%struct.r8152*)** %up, align 8, !dbg !26974
  %8 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26975
  call void %7(%struct.r8152* %8) #13, !dbg !26971
  %9 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !26976
  call void @netif_carrier_off(%struct.net_device* %9) #13, !dbg !26977
  %10 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26978
  %flags2 = getelementptr inbounds %struct.r8152, %struct.r8152* %10, i32 0, i32 0, !dbg !26979
  call void @set_bit(i64 2, i64* %flags2) #13, !dbg !26980
  %11 = load %struct.r8152*, %struct.r8152** %tp.addr, align 8, !dbg !26981
  %intr_urb = getelementptr inbounds %struct.r8152, %struct.r8152* %11, i32 0, i32 5, !dbg !26982
  %12 = load %struct.urb*, %struct.urb** %intr_urb, align 8, !dbg !26982
  %call3 = call i32 @usb_submit_urb(%struct.urb* %12, i32 3072) #13, !dbg !26983
  br label %if.end, !dbg !26984

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret i32 0, !dbg !26985
}

; Function Attrs: noredzone
declare dso_local void @netif_device_attach(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local void @rtnl_lock() #1

; Function Attrs: noredzone
declare dso_local i32 @dev_set_mac_address(%struct.net_device*, %struct.sockaddr*, %struct.netlink_ext_ack*) #1

; Function Attrs: noredzone
declare dso_local void @rtnl_unlock() #1

; Function Attrs: noredzone
declare dso_local i64 @__modver_version_show(%struct.module_attribute*, %struct.module_kobject*, i8*) #1

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { alwaysinline noredzone nounwind sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noredzone }
attributes #14 = { cold noredzone }
attributes #15 = { noredzone nounwind readnone }
attributes #16 = { noredzone nounwind }
attributes #17 = { noredzone nounwind readonly }
attributes #18 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!10981}
!llvm.module.flags = !{!10982, !10983, !10984, !10985}
!llvm.ident = !{!10986}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware601", scope: !2, file: !3, line: 6582, type: !10817, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !9905, globals: !10814, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/net/usb/r8152.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !18, !24, !31, !36, !44, !50, !64, !70, !77, !111, !152, !183, !190, !196, !202, !209, !221, !226, !232, !263, !283, !290, !303, !311, !317, !324, !328, !332, !339, !345, !9342, !7388, !7034, !6291, !6182, !6201, !9504, !9511, !9523, !9532, !9537, !9550, !9581, !9645, !9657, !9662, !9680, !9687, !9694, !9789, !9797, !9802, !9811, !9832, !9837, !9845, !9856, !9861, !9892, !9896}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !6, line: 41, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !12, line: 15, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17}
!14 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !19, line: 44, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !25, line: 343, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29, !30}
!27 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!30 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!31 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !32, line: 65, baseType: !7, size: 32, elements: !33)
!32 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!33 = !{!34, !35}
!34 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!35 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !37, line: 524, baseType: !7, size: 32, elements: !38)
!37 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !37, line: 502, baseType: !7, size: 32, elements: !45)
!45 = !{!46, !47, !48, !49}
!46 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !51, line: 76, baseType: !7, size: 32, elements: !52)
!51 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!52 = !{!53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63}
!53 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!54 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!55 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!56 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!57 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!58 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!59 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!60 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!61 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!62 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!63 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !65, line: 26, baseType: !7, size: 32, elements: !66)
!65 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!66 = !{!67, !68, !69}
!67 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!68 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!70 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !71, line: 115, baseType: !72, size: 32, elements: !73)
!71 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!72 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!73 = !{!74, !75, !76}
!74 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!75 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!76 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!77 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !78, line: 170, baseType: !7, size: 32, elements: !79)
!78 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!79 = !{!80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110}
!80 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!81 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!82 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!83 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!84 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!85 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!86 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!87 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!88 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!89 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!90 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!91 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!92 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!93 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!94 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!95 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!96 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!97 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!98 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!99 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!100 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!101 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!102 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!103 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!104 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!105 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!106 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!107 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!108 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!109 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!110 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!111 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !78, line: 204, baseType: !7, size: 32, elements: !112)
!112 = !{!113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151}
!113 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!114 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!115 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!116 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!117 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!118 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!119 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!120 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!121 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!122 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!123 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!124 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!125 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!126 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!127 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!128 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!129 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!130 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!131 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!132 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!133 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!134 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!135 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!136 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!137 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!142 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!143 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!144 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!145 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!146 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!147 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!148 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!149 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!150 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!151 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !153, line: 369, baseType: !7, size: 32, elements: !154)
!153 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!154 = !{!155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182}
!155 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!158 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!159 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!160 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!161 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!162 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!163 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!164 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!165 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!166 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!167 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!168 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!169 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!170 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!171 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!172 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!173 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!174 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!175 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!176 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!177 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!178 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!179 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!180 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!181 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!182 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !153, line: 578, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189}
!185 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !191, line: 16, baseType: !7, size: 32, elements: !192)
!191 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!192 = !{!193, !194, !195}
!193 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!194 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!195 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !197, line: 118, baseType: !7, size: 32, elements: !198)
!197 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!198 = !{!199, !200, !201}
!199 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!200 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!201 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!202 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !203, line: 19, baseType: !7, size: 32, elements: !204)
!203 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!204 = !{!205, !206, !207, !208}
!205 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!206 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!207 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!208 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!209 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !210, line: 49, baseType: !7, size: 32, elements: !211)
!210 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!211 = !{!212, !213, !214, !215, !216, !217, !218, !219, !220}
!212 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!213 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!214 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!215 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!216 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!217 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!218 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!219 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!220 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!221 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !197, line: 315, baseType: !7, size: 32, elements: !222)
!222 = !{!223, !224, !225}
!223 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!224 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!225 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!226 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !227, line: 546, baseType: !7, size: 32, elements: !228)
!227 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!228 = !{!229, !230, !231}
!229 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!230 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!231 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!232 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !78, line: 130, baseType: !7, size: 32, elements: !233)
!233 = !{!234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262}
!234 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!235 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!236 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!237 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!238 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!239 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!240 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!241 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!242 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!243 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!244 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!245 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!246 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!247 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!248 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!249 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!250 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!251 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!252 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!253 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!254 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!255 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!256 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!257 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!258 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!259 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!260 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!261 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!262 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!263 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !71, line: 836, baseType: !7, size: 32, elements: !264)
!264 = !{!265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282}
!265 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!266 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!267 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!268 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!269 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!270 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!271 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!272 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!273 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!274 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!275 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!276 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!277 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!278 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!279 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!280 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!281 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!282 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!283 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !71, line: 860, baseType: !7, size: 32, elements: !284)
!284 = !{!285, !286, !287, !288, !289}
!285 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!286 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!287 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!288 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!289 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!290 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !291, line: 585, baseType: !7, size: 32, elements: !292)
!291 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!292 = !{!293, !294, !295, !296, !297, !298, !299, !300, !301, !302}
!293 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!294 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!295 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!296 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!297 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!298 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!299 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!300 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!301 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!302 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!303 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !291, line: 602, baseType: !7, size: 32, elements: !304)
!304 = !{!305, !306, !307, !308, !309, !310}
!305 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!306 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!307 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!308 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!309 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!310 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!311 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !291, line: 615, baseType: !7, size: 32, elements: !312)
!312 = !{!313, !314, !315, !316}
!313 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!314 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!315 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!316 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!317 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !291, line: 626, baseType: !7, size: 32, elements: !318)
!318 = !{!319, !320, !321, !322, !323}
!319 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!320 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!321 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!322 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!323 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!324 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !291, line: 638, baseType: !7, size: 32, elements: !325)
!325 = !{!326, !327}
!326 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!327 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!328 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !291, line: 647, baseType: !7, size: 32, elements: !329)
!329 = !{!330, !331}
!330 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!331 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!332 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !333, line: 54, baseType: !7, size: 32, elements: !334)
!333 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!334 = !{!335, !336, !337, !338}
!335 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!336 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!337 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!338 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!339 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !71, line: 423, baseType: !7, size: 32, elements: !340)
!340 = !{!341, !342, !343, !344}
!341 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!342 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!343 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!344 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!345 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !346, file: !71, line: 2085, baseType: !7, size: 32, elements: !9497)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !71, line: 1858, size: 15808, elements: !347)
!347 = !{!348, !353, !376, !393, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !410, !418, !419, !420, !421, !422, !423, !424, !425, !426, !452, !462, !463, !464, !469, !470, !474, !477, !8150, !8663, !8804, !8836, !8837, !8838, !8839, !8840, !8841, !8842, !8843, !8844, !8845, !8846, !8847, !8848, !8849, !8850, !8851, !8852, !8853, !8854, !8855, !8856, !8857, !8858, !8859, !8860, !8861, !8862, !8867, !8868, !8869, !8870, !8871, !8872, !8873, !8876, !8879, !8880, !8883, !8886, !8887, !8900, !8901, !8902, !8903, !8904, !8905, !8912, !8913, !9322, !9323, !9324, !9325, !9326, !9327, !9328, !9329, !9330, !9333, !9334, !9335, !9336, !9337, !9338, !9339, !9340, !9341, !9346, !9347, !9348, !9349, !9386, !9387, !9389, !9390, !9459, !9460, !9461, !9462, !9468, !9470, !9473, !9476, !9478, !9479, !9480, !9481, !9482, !9486, !9489}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !346, file: !71, line: 1859, baseType: !349, size: 128)
!349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 128, elements: !351)
!350 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!351 = !{!352}
!352 = !DISubrange(count: 16)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !346, file: !71, line: 1860, baseType: !354, size: 64, offset: 128)
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !71, line: 938, size: 384, elements: !356)
!356 = !{!357, !365, !371, !373}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !355, file: !71, line: 939, baseType: !358, size: 128)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !359, line: 186, size: 128, elements: !360)
!359 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!360 = !{!361, !363}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !358, file: !359, line: 187, baseType: !362, size: 64)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !358, file: !359, line: 187, baseType: !364, size: 64, offset: 64)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !355, file: !71, line: 940, baseType: !366, size: 128, offset: 128)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !359, line: 178, size: 128, elements: !367)
!367 = !{!368, !370}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !366, file: !359, line: 179, baseType: !369, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !366, file: !359, line: 179, baseType: !369, size: 64, offset: 64)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !355, file: !71, line: 941, baseType: !372, size: 64, offset: 256)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !355, file: !71, line: 942, baseType: !374, size: 64, offset: 320)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !346, file: !71, line: 1861, baseType: !377, size: 64, offset: 192)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !71, line: 930, size: 128, elements: !379)
!379 = !{!380, !389}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !378, file: !71, line: 931, baseType: !381, size: 128, align: 64)
!381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !359, line: 216, size: 128, align: 64, elements: !382)
!382 = !{!383, !385}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !381, file: !359, line: 217, baseType: !384, size: 64)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !381, file: !359, line: 218, baseType: !386, size: 64, offset: 64)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = !DISubroutineType(types: !388)
!388 = !{null, !384}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !378, file: !71, line: 932, baseType: !390, offset: 128)
!390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, elements: !391)
!391 = !{!392}
!392 = !DISubrange(count: -1)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !346, file: !71, line: 1866, baseType: !394, size: 64, offset: 256)
!394 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !346, file: !71, line: 1867, baseType: !394, size: 64, offset: 320)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !346, file: !71, line: 1868, baseType: !394, size: 64, offset: 384)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !346, file: !71, line: 1869, baseType: !72, size: 32, offset: 448)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !346, file: !71, line: 1877, baseType: !394, size: 64, offset: 512)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !346, file: !71, line: 1879, baseType: !366, size: 128, offset: 576)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !346, file: !71, line: 1880, baseType: !366, size: 128, offset: 704)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !346, file: !71, line: 1881, baseType: !366, size: 128, offset: 832)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !346, file: !71, line: 1882, baseType: !366, size: 128, offset: 960)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !346, file: !71, line: 1883, baseType: !366, size: 128, offset: 1088)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !346, file: !71, line: 1884, baseType: !366, size: 128, offset: 1216)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !346, file: !71, line: 1889, baseType: !406, size: 256, offset: 1344)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !346, file: !71, line: 1886, size: 256, elements: !407)
!407 = !{!408, !409}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !406, file: !71, line: 1887, baseType: !366, size: 128)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !406, file: !71, line: 1888, baseType: !366, size: 128, offset: 128)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !346, file: !71, line: 1891, baseType: !411, size: 64, offset: 1600)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !412, line: 12, baseType: !413)
!412 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!413 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !414, line: 23, baseType: !415)
!414 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !416, line: 31, baseType: !417)
!416 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!417 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !346, file: !71, line: 1892, baseType: !411, size: 64, offset: 1664)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !346, file: !71, line: 1893, baseType: !411, size: 64, offset: 1728)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !346, file: !71, line: 1894, baseType: !411, size: 64, offset: 1792)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !346, file: !71, line: 1895, baseType: !411, size: 64, offset: 1856)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !346, file: !71, line: 1896, baseType: !411, size: 64, offset: 1920)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !346, file: !71, line: 1897, baseType: !411, size: 64, offset: 1984)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !346, file: !71, line: 1899, baseType: !72, size: 32, offset: 2048)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !346, file: !71, line: 1900, baseType: !72, size: 32, offset: 2080)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !346, file: !71, line: 1902, baseType: !427, size: 1472, offset: 2112)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !71, line: 169, size: 1472, elements: !428)
!428 = !{!429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !427, file: !71, line: 170, baseType: !394, size: 64)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !427, file: !71, line: 171, baseType: !394, size: 64, offset: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !427, file: !71, line: 172, baseType: !394, size: 64, offset: 128)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !427, file: !71, line: 173, baseType: !394, size: 64, offset: 192)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !427, file: !71, line: 174, baseType: !394, size: 64, offset: 256)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !427, file: !71, line: 175, baseType: !394, size: 64, offset: 320)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !427, file: !71, line: 176, baseType: !394, size: 64, offset: 384)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !427, file: !71, line: 177, baseType: !394, size: 64, offset: 448)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !427, file: !71, line: 178, baseType: !394, size: 64, offset: 512)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !427, file: !71, line: 179, baseType: !394, size: 64, offset: 576)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !427, file: !71, line: 180, baseType: !394, size: 64, offset: 640)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !427, file: !71, line: 181, baseType: !394, size: 64, offset: 704)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !427, file: !71, line: 182, baseType: !394, size: 64, offset: 768)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !427, file: !71, line: 183, baseType: !394, size: 64, offset: 832)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !427, file: !71, line: 184, baseType: !394, size: 64, offset: 896)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !427, file: !71, line: 185, baseType: !394, size: 64, offset: 960)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !427, file: !71, line: 186, baseType: !394, size: 64, offset: 1024)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !427, file: !71, line: 187, baseType: !394, size: 64, offset: 1088)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !427, file: !71, line: 188, baseType: !394, size: 64, offset: 1152)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !427, file: !71, line: 189, baseType: !394, size: 64, offset: 1216)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !427, file: !71, line: 190, baseType: !394, size: 64, offset: 1280)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !427, file: !71, line: 191, baseType: !394, size: 64, offset: 1344)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !427, file: !71, line: 192, baseType: !394, size: 64, offset: 1408)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !346, file: !71, line: 1904, baseType: !453, size: 64, offset: 3584)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !454, line: 13, baseType: !455)
!454 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!455 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !359, line: 175, baseType: !456)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !359, line: 173, size: 64, elements: !457)
!457 = !{!458}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !456, file: !359, line: 174, baseType: !459, size: 64)
!459 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !414, line: 22, baseType: !460)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !416, line: 30, baseType: !461)
!461 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !346, file: !71, line: 1905, baseType: !453, size: 64, offset: 3648)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !346, file: !71, line: 1906, baseType: !453, size: 64, offset: 3712)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !346, file: !71, line: 1909, baseType: !465, size: 32, offset: 3776)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !359, line: 168, baseType: !466)
!466 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !359, line: 166, size: 32, elements: !467)
!467 = !{!468}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !466, file: !359, line: 167, baseType: !72, size: 32)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !346, file: !71, line: 1910, baseType: !465, size: 32, offset: 3808)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !346, file: !71, line: 1913, baseType: !471, size: 64, offset: 3840)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!473 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !71, line: 1913, flags: DIFlagFwdDecl)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !346, file: !71, line: 1914, baseType: !475, size: 64, offset: 3904)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !71, line: 1914, flags: DIFlagFwdDecl)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !346, file: !71, line: 1916, baseType: !478, size: 64, offset: 3968)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !71, line: 1283, size: 4416, elements: !481)
!481 = !{!482, !486, !490, !491, !492, !7623, !7627, !7631, !7635, !7636, !7640, !7641, !7752, !7757, !7761, !7765, !7769, !7801, !7805, !7809, !7814, !7818, !7819, !7824, !7828, !7832, !7836, !7837, !7857, !7861, !7876, !7882, !7886, !7895, !7899, !7900, !7904, !7908, !7912, !7916, !7920, !7924, !7928, !7932, !7947, !7951, !7993, !7997, !8002, !8006, !8010, !8014, !8023, !8024, !8028, !8034, !8035, !8039, !8043, !8047, !8051, !8052, !8056, !8057, !8110, !8130, !8134, !8140, !8146}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !480, file: !71, line: 1284, baseType: !483, size: 64)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DISubroutineType(types: !485)
!485 = !{!72, !372}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !480, file: !71, line: 1285, baseType: !487, size: 64, offset: 64)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!488 = !DISubroutineType(types: !489)
!489 = !{null, !372}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !480, file: !71, line: 1286, baseType: !483, size: 64, offset: 128)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !480, file: !71, line: 1287, baseType: !483, size: 64, offset: 192)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !480, file: !71, line: 1288, baseType: !493, size: 64, offset: 256)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DISubroutineType(types: !495)
!495 = !{!496, !497, !372}
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !71, line: 120, baseType: !70)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !499, line: 713, size: 1600, elements: !500)
!499 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!500 = !{!501, !523, !7519, !7524, !7528, !7537, !7538, !7539, !7540, !7541, !7542, !7544, !7545, !7546, !7547, !7548, !7549, !7550, !7552, !7553, !7554, !7555, !7556, !7557, !7558, !7559, !7560, !7561, !7562, !7563, !7564, !7565, !7566, !7567, !7568, !7569, !7570, !7571, !7572, !7573, !7574, !7575, !7576, !7577, !7578, !7588, !7589, !7590, !7591, !7592, !7593, !7598, !7603, !7608, !7609, !7610, !7611, !7612, !7613, !7614, !7615, !7616, !7618, !7619, !7620, !7621, !7622}
!501 = !DIDerivedType(tag: DW_TAG_member, scope: !498, file: !499, line: 714, baseType: !502, size: 192)
!502 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !498, file: !499, line: 714, size: 192, elements: !503)
!503 = !{!504, !514, !522}
!504 = !DIDerivedType(tag: DW_TAG_member, scope: !502, file: !499, line: 715, baseType: !505, size: 192)
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !502, file: !499, line: 715, size: 192, elements: !506)
!506 = !{!507, !508, !509}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !505, file: !499, line: 717, baseType: !497, size: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !505, file: !499, line: 718, baseType: !497, size: 64, offset: 64)
!509 = !DIDerivedType(tag: DW_TAG_member, scope: !505, file: !499, line: 720, baseType: !510, size: 64, offset: 128)
!510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !505, file: !499, line: 720, size: 64, elements: !511)
!511 = !{!512, !513}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !510, file: !499, line: 721, baseType: !372, size: 64)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !510, file: !499, line: 726, baseType: !394, size: 64)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !502, file: !499, line: 729, baseType: !515, size: 192, align: 64)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !516, line: 24, size: 192, align: 64, elements: !517)
!516 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!517 = !{!518, !519, !521}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !515, file: !516, line: 25, baseType: !394, size: 64)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !515, file: !516, line: 26, baseType: !520, size: 64, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !515, file: !516, line: 27, baseType: !520, size: 64, offset: 128)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !502, file: !499, line: 730, baseType: !366, size: 128)
!523 = !DIDerivedType(tag: DW_TAG_member, scope: !498, file: !499, line: 733, baseType: !524, size: 64, offset: 192)
!524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !498, file: !499, line: 733, size: 64, elements: !525)
!525 = !{!526, !7518}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !524, file: !499, line: 734, baseType: !527, size: 64)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !529, line: 347, size: 5568, elements: !530)
!529 = !DIFile(filename: "./include/net/sock.h", directory: "/home/lizy2001/genbc/linux")
!530 = !{!531, !7277, !7284, !7285, !7286, !7287, !7288, !7289, !7296, !7297, !7298, !7299, !7300, !7307, !7320, !7321, !7322, !7323, !7324, !7325, !7326, !7327, !7332, !7333, !7334, !7335, !7336, !7337, !7338, !7339, !7340, !7341, !7342, !7343, !7344, !7345, !7346, !7347, !7348, !7349, !7350, !7351, !7352, !7353, !7354, !7355, !7356, !7357, !7358, !7359, !7360, !7361, !7362, !7363, !7364, !7365, !7366, !7367, !7368, !7369, !7370, !7371, !7372, !7373, !7374, !7375, !7376, !7377, !7378, !7379, !7380, !7381, !7503, !7504, !7507, !7508, !7509, !7510, !7511, !7512, !7513, !7514, !7517}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "__sk_common", scope: !528, file: !529, line: 352, baseType: !532, size: 1088)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_common", file: !529, line: 162, size: 1088, elements: !533)
!533 = !{!534, !547, !557, !568, !569, !572, !573, !574, !575, !576, !577, !582, !7237, !7238, !7239, !7240, !7241, !7248, !7250, !7262, !7263, !7269, !7270, !7271}
!534 = !DIDerivedType(tag: DW_TAG_member, scope: !532, file: !529, line: 166, baseType: !535, size: 64)
!535 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !532, file: !529, line: 166, size: 64, elements: !536)
!536 = !{!537, !539}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "skc_addrpair", scope: !535, file: !529, line: 167, baseType: !538, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "__addrpair", file: !529, line: 115, baseType: !415)
!539 = !DIDerivedType(tag: DW_TAG_member, scope: !535, file: !529, line: 168, baseType: !540, size: 64)
!540 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !535, file: !529, line: 168, size: 64, elements: !541)
!541 = !{!542, !546}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "skc_daddr", scope: !540, file: !529, line: 169, baseType: !543, size: 32)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !544, line: 32, baseType: !545)
!544 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !416, line: 27, baseType: !7)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_saddr", scope: !540, file: !529, line: 170, baseType: !543, size: 32, offset: 32)
!547 = !DIDerivedType(tag: DW_TAG_member, scope: !532, file: !529, line: 173, baseType: !548, size: 32, offset: 64)
!548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !532, file: !529, line: 173, size: 32, elements: !549)
!549 = !{!550, !551}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "skc_hash", scope: !548, file: !529, line: 174, baseType: !7, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "skc_u16hashes", scope: !548, file: !529, line: 175, baseType: !552, size: 32)
!552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !553, size: 32, elements: !555)
!553 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !416, line: 24, baseType: !554)
!554 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!555 = !{!556}
!556 = !DISubrange(count: 2)
!557 = !DIDerivedType(tag: DW_TAG_member, scope: !532, file: !529, line: 178, baseType: !558, size: 32, offset: 96)
!558 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !532, file: !529, line: 178, size: 32, elements: !559)
!559 = !{!560, !562}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portpair", scope: !558, file: !529, line: 179, baseType: !561, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "__portpair", file: !529, line: 114, baseType: !545)
!562 = !DIDerivedType(tag: DW_TAG_member, scope: !558, file: !529, line: 180, baseType: !563, size: 32)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !558, file: !529, line: 180, size: 32, elements: !564)
!564 = !{!565, !567}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dport", scope: !563, file: !529, line: 181, baseType: !566, size: 16)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !544, line: 30, baseType: !553)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "skc_num", scope: !563, file: !529, line: 182, baseType: !553, size: 16, offset: 16)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "skc_family", scope: !532, file: !529, line: 186, baseType: !554, size: 16, offset: 128)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "skc_state", scope: !532, file: !529, line: 187, baseType: !570, size: 8, offset: 144)
!570 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !571)
!571 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuse", scope: !532, file: !529, line: 188, baseType: !571, size: 4, offset: 152, flags: DIFlagBitField, extraData: i64 152)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuseport", scope: !532, file: !529, line: 189, baseType: !571, size: 1, offset: 156, flags: DIFlagBitField, extraData: i64 152)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "skc_ipv6only", scope: !532, file: !529, line: 190, baseType: !571, size: 1, offset: 157, flags: DIFlagBitField, extraData: i64 152)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net_refcnt", scope: !532, file: !529, line: 191, baseType: !571, size: 1, offset: 158, flags: DIFlagBitField, extraData: i64 152)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bound_dev_if", scope: !532, file: !529, line: 192, baseType: !72, size: 32, offset: 160)
!577 = !DIDerivedType(tag: DW_TAG_member, scope: !532, file: !529, line: 193, baseType: !578, size: 128, offset: 192)
!578 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !532, file: !529, line: 193, size: 128, elements: !579)
!579 = !{!580, !581}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bind_node", scope: !578, file: !529, line: 194, baseType: !358, size: 128)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portaddr_node", scope: !578, file: !529, line: 195, baseType: !358, size: 128)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "skc_prot", scope: !532, file: !529, line: 197, baseType: !583, size: 64, offset: 320)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto", file: !529, line: 1127, size: 3264, elements: !585)
!585 = !{!586, !591, !607, !608, !612, !619, !623, !627, !631, !635, !650, !655, !656, !7097, !7101, !7105, !7106, !7107, !7111, !7112, !7113, !7114, !7115, !7119, !7120, !7126, !7130, !7131, !7132, !7133, !7135, !7136, !7138, !7139, !7140, !7141, !7142, !7143, !7144, !7145, !7146, !7148, !7149, !7150, !7151, !7207, !7220, !7233, !7234, !7235, !7236}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !584, file: !529, line: 1128, baseType: !587, size: 64)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = !DISubroutineType(types: !589)
!589 = !{null, !527, !590}
!590 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "pre_connect", scope: !584, file: !529, line: 1130, baseType: !592, size: 64, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!593 = !DISubroutineType(types: !594)
!594 = !{!72, !527, !595, !72}
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !597, line: 32, size: 128, elements: !598)
!597 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!598 = !{!599, !603}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !596, file: !597, line: 33, baseType: !600, size: 16)
!600 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !597, line: 26, baseType: !601)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !602, line: 10, baseType: !554)
!602 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!603 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !596, file: !597, line: 34, baseType: !604, size: 112, offset: 16)
!604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 112, elements: !605)
!605 = !{!606}
!606 = !DISubrange(count: 14)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !584, file: !529, line: 1133, baseType: !592, size: 64, offset: 128)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !584, file: !529, line: 1136, baseType: !609, size: 64, offset: 192)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DISubroutineType(types: !611)
!611 = !{!72, !527, !72}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !584, file: !529, line: 1138, baseType: !613, size: 64, offset: 256)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DISubroutineType(types: !615)
!615 = !{!527, !527, !72, !616, !617}
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !359, line: 30, baseType: !618)
!618 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !584, file: !529, line: 1141, baseType: !620, size: 64, offset: 320)
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!621 = !DISubroutineType(types: !622)
!622 = !{!72, !527, !72, !394}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !584, file: !529, line: 1143, baseType: !624, size: 64, offset: 384)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = !DISubroutineType(types: !626)
!626 = !{!72, !527}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !584, file: !529, line: 1144, baseType: !628, size: 64, offset: 448)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = !DISubroutineType(types: !630)
!630 = !{null, !527}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !584, file: !529, line: 1145, baseType: !632, size: 64, offset: 512)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = !DISubroutineType(types: !634)
!634 = !{null, !527, !72}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !584, file: !529, line: 1146, baseType: !636, size: 64, offset: 576)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!637 = !DISubroutineType(types: !638)
!638 = !{!72, !527, !72, !72, !639, !7}
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "sockptr_t", file: !640, line: 20, baseType: !641)
!640 = !DIFile(filename: "./include/linux/sockptr.h", directory: "/home/lizy2001/genbc/linux")
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !640, line: 14, size: 128, elements: !642)
!642 = !{!643, !649}
!643 = !DIDerivedType(tag: DW_TAG_member, scope: !641, file: !640, line: 15, baseType: !644, size: 64)
!644 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !641, file: !640, line: 15, size: 64, elements: !645)
!645 = !{!646, !648}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "kernel", scope: !644, file: !640, line: 16, baseType: !647, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !644, file: !640, line: 17, baseType: !647, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "is_kernel", scope: !641, file: !640, line: 19, baseType: !617, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !584, file: !529, line: 1149, baseType: !651, size: 64, offset: 640)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!652 = !DISubroutineType(types: !653)
!653 = !{!72, !527, !72, !72, !654, !616}
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "keepalive", scope: !584, file: !529, line: 1152, baseType: !632, size: 64, offset: 704)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !584, file: !529, line: 1157, baseType: !657, size: 64, offset: 768)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DISubroutineType(types: !659)
!659 = !{!72, !527, !660, !671}
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !597, line: 50, size: 768, elements: !662)
!662 = !{!663, !664, !665, !7088, !7093, !7094, !7095, !7096}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !661, file: !597, line: 51, baseType: !647, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !661, file: !597, line: 52, baseType: !72, size: 32, offset: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iter", scope: !661, file: !597, line: 53, baseType: !666, size: 320, offset: 128)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !667, line: 29, size: 320, elements: !668)
!667 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!668 = !{!669, !670, !675, !676, !7079}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !666, file: !667, line: 35, baseType: !7, size: 32)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !666, file: !667, line: 36, baseType: !671, size: 64, offset: 64)
!671 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !359, line: 55, baseType: !672)
!672 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !673, line: 72, baseType: !674)
!673 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !673, line: 16, baseType: !394)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !666, file: !667, line: 37, baseType: !671, size: 64, offset: 128)
!676 = !DIDerivedType(tag: DW_TAG_member, scope: !666, file: !667, line: 38, baseType: !677, size: 64, offset: 192)
!677 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !666, file: !667, line: 38, size: 64, elements: !678)
!678 = !{!679, !687, !694, !7078}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !677, file: !667, line: 39, baseType: !680, size: 64)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64)
!681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !682)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !683, line: 17, size: 128, elements: !684)
!683 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!684 = !{!685, !686}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !682, file: !683, line: 19, baseType: !647, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !682, file: !683, line: 20, baseType: !672, size: 64, offset: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !677, file: !667, line: 40, baseType: !688, size: 64)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !690)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !667, line: 15, size: 128, elements: !691)
!691 = !{!692, !693}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !690, file: !667, line: 16, baseType: !647, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !690, file: !667, line: 17, baseType: !671, size: 64, offset: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !677, file: !667, line: 41, baseType: !695, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !698, line: 31, size: 128, elements: !699)
!698 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!699 = !{!700, !7076, !7077}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !697, file: !698, line: 32, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !703, line: 68, size: 512, align: 128, elements: !704)
!703 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!704 = !{!705, !706, !7068, !7075}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !702, file: !703, line: 69, baseType: !394, size: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, scope: !702, file: !703, line: 77, baseType: !707, size: 320, offset: 64)
!707 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !702, file: !703, line: 77, size: 320, elements: !708)
!708 = !{!709, !6955, !6960, !6986, !6994, !7000, !7012, !7067}
!709 = !DIDerivedType(tag: DW_TAG_member, scope: !707, file: !703, line: 78, baseType: !710, size: 320)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !707, file: !703, line: 78, size: 320, elements: !711)
!711 = !{!712, !713, !6953, !6954}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !710, file: !703, line: 84, baseType: !366, size: 128)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !710, file: !703, line: 86, baseType: !714, size: 64, offset: 128)
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 64)
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !716, line: 451, size: 1216, align: 64, elements: !717)
!716 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!717 = !{!718, !6792, !6793, !6794, !6795, !6796, !6797, !6798, !6799, !6800, !6948, !6949, !6950, !6951, !6952}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !715, file: !716, line: 452, baseType: !719, size: 64)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !716, line: 610, size: 4224, elements: !721)
!721 = !{!722, !724, !725, !733, !740, !741, !6725, !6726, !6727, !6728, !6733, !6734, !6735, !6736, !6737, !6738, !6739, !6740, !6741, !6742, !6743, !6744, !6745, !6746, !6747, !6748, !6749, !6750, !6751, !6752, !6757, !6758, !6759, !6760, !6761, !6762, !6763, !6768, !6776, !6777, !6778, !6788, !6789, !6790, !6791}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !720, file: !716, line: 611, baseType: !723, size: 16)
!723 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !359, line: 19, baseType: !554)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !720, file: !716, line: 612, baseType: !554, size: 16, offset: 16)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !720, file: !716, line: 613, baseType: !726, size: 32, offset: 32)
!726 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !727, line: 23, baseType: !728)
!727 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !727, line: 21, size: 32, elements: !729)
!729 = !{!730}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !728, file: !727, line: 22, baseType: !731, size: 32)
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !359, line: 32, baseType: !732)
!732 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !673, line: 49, baseType: !7)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !720, file: !716, line: 614, baseType: !734, size: 32, offset: 64)
!734 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !727, line: 28, baseType: !735)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !727, line: 26, size: 32, elements: !736)
!736 = !{!737}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !735, file: !727, line: 27, baseType: !738, size: 32)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !359, line: 33, baseType: !739)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !673, line: 50, baseType: !7)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !720, file: !716, line: 615, baseType: !7, size: 32, offset: 96)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !720, file: !716, line: 622, baseType: !742, size: 64, offset: 128)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !744)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !716, line: 1864, size: 1536, align: 512, elements: !745)
!745 = !{!746, !6602, !6612, !6616, !6622, !6626, !6630, !6634, !6638, !6642, !6646, !6647, !6651, !6655, !6675, !6701, !6705, !6711, !6716, !6720, !6721}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !744, file: !716, line: 1865, baseType: !747, size: 64)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DISubroutineType(types: !749)
!749 = !{!750, !719, !750, !7}
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !752, line: 89, size: 1536, elements: !753)
!752 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!753 = !{!754, !755, !765, !773, !774, !790, !791, !795, !822, !890, !6587, !6588, !6589, !6594, !6595, !6596}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !751, file: !752, line: 91, baseType: !7, size: 32)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !751, file: !752, line: 92, baseType: !756, size: 32, offset: 32)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !757, line: 277, baseType: !758)
!757 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !757, line: 277, size: 32, elements: !759)
!759 = !{!760}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !758, file: !757, line: 277, baseType: !761, size: 32)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !757, line: 70, baseType: !762)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !757, line: 65, size: 32, elements: !763)
!763 = !{!764}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !762, file: !757, line: 66, baseType: !7, size: 32)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !751, file: !752, line: 93, baseType: !766, size: 128, offset: 64)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !767, line: 38, size: 128, elements: !768)
!767 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!768 = !{!769, !771}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !766, file: !767, line: 39, baseType: !770, size: 64)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !766, file: !767, line: 39, baseType: !772, size: 64, offset: 64)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !751, file: !752, line: 94, baseType: !750, size: 64, offset: 192)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !751, file: !752, line: 95, baseType: !775, size: 128, offset: 256)
!775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !752, line: 47, size: 128, elements: !776)
!776 = !{!777, !787}
!777 = !DIDerivedType(tag: DW_TAG_member, scope: !775, file: !752, line: 48, baseType: !778, size: 64)
!778 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !775, file: !752, line: 48, size: 64, elements: !779)
!779 = !{!780, !786}
!780 = !DIDerivedType(tag: DW_TAG_member, scope: !778, file: !752, line: 49, baseType: !781, size: 64)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !778, file: !752, line: 49, size: 64, elements: !782)
!782 = !{!783, !785}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !781, file: !752, line: 50, baseType: !784, size: 32)
!784 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !414, line: 21, baseType: !545)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !781, file: !752, line: 50, baseType: !784, size: 32, offset: 32)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !778, file: !752, line: 52, baseType: !413, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !775, file: !752, line: 54, baseType: !788, size: 64, offset: 64)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !571)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !751, file: !752, line: 96, baseType: !719, size: 64, offset: 384)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !751, file: !752, line: 98, baseType: !792, size: 256, offset: 448)
!792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 256, elements: !793)
!793 = !{!794}
!794 = !DISubrange(count: 32)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !751, file: !752, line: 101, baseType: !796, size: 32, offset: 704)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !797, line: 25, size: 32, elements: !798)
!797 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!798 = !{!799}
!799 = !DIDerivedType(tag: DW_TAG_member, scope: !796, file: !797, line: 26, baseType: !800, size: 32)
!800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !796, file: !797, line: 26, size: 32, elements: !801)
!801 = !{!802}
!802 = !DIDerivedType(tag: DW_TAG_member, scope: !800, file: !797, line: 30, baseType: !803, size: 32)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !800, file: !797, line: 30, size: 32, elements: !804)
!804 = !{!805, !821}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !803, file: !797, line: 31, baseType: !806)
!806 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !807, line: 83, baseType: !808)
!807 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !807, line: 71, elements: !809)
!809 = !{!810}
!810 = !DIDerivedType(tag: DW_TAG_member, scope: !808, file: !807, line: 72, baseType: !811)
!811 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !808, file: !807, line: 72, elements: !812)
!812 = !{!813}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !811, file: !807, line: 73, baseType: !814)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !807, line: 20, elements: !815)
!815 = !{!816}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !814, file: !807, line: 21, baseType: !817)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !818, line: 25, baseType: !819)
!818 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !818, line: 25, elements: !820)
!820 = !{}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !803, file: !797, line: 32, baseType: !72, size: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !751, file: !752, line: 102, baseType: !823, size: 64, offset: 768)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !825)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !752, line: 135, size: 1024, align: 512, elements: !826)
!826 = !{!827, !831, !832, !839, !845, !849, !853, !857, !858, !862, !866, !878, !884}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !825, file: !752, line: 136, baseType: !828, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DISubroutineType(types: !830)
!830 = !{!72, !750, !7}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !825, file: !752, line: 137, baseType: !828, size: 64, offset: 64)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !825, file: !752, line: 138, baseType: !833, size: 64, offset: 128)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DISubroutineType(types: !835)
!835 = !{!72, !836, !838}
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !751)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !825, file: !752, line: 139, baseType: !840, size: 64, offset: 192)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DISubroutineType(types: !842)
!842 = !{!72, !836, !7, !374, !843}
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !775)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !825, file: !752, line: 141, baseType: !846, size: 64, offset: 256)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = !DISubroutineType(types: !848)
!848 = !{!72, !836}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !825, file: !752, line: 142, baseType: !850, size: 64, offset: 320)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!72, !750}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !825, file: !752, line: 143, baseType: !854, size: 64, offset: 384)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DISubroutineType(types: !856)
!856 = !{null, !750}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !825, file: !752, line: 144, baseType: !854, size: 64, offset: 448)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !825, file: !752, line: 145, baseType: !859, size: 64, offset: 512)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DISubroutineType(types: !861)
!861 = !{null, !750, !719}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !825, file: !752, line: 146, baseType: !863, size: 64, offset: 576)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DISubroutineType(types: !865)
!865 = !{!654, !750, !654, !72}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !825, file: !752, line: 147, baseType: !867, size: 64, offset: 640)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DISubroutineType(types: !869)
!869 = !{!870, !872}
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !752, line: 18, flags: DIFlagFwdDecl)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !874, line: 8, size: 128, elements: !875)
!874 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!875 = !{!876, !877}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !873, file: !874, line: 9, baseType: !870, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !873, file: !874, line: 10, baseType: !750, size: 64, offset: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !825, file: !752, line: 148, baseType: !879, size: 64, offset: 704)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DISubroutineType(types: !881)
!881 = !{!72, !882, !617}
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !873)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !825, file: !752, line: 149, baseType: !885, size: 64, offset: 768)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DISubroutineType(types: !887)
!887 = !{!750, !750, !888}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !720)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !751, file: !752, line: 103, baseType: !891, size: 64, offset: 832)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !716, line: 1416, size: 9472, elements: !893)
!893 = !{!894, !895, !898, !899, !900, !903, !949, !6254, !6342, !6425, !6429, !6430, !6431, !6432, !6433, !6434, !6435, !6436, !6441, !6445, !6446, !6447, !6448, !6451, !6452, !6453, !6494, !6520, !6521, !6522, !6523, !6524, !6525, !6528, !6529, !6535, !6536, !6537, !6538, !6539, !6540, !6541, !6556, !6557, !6558, !6559, !6560, !6561, !6562, !6563, !6578, !6579, !6580, !6581, !6582, !6583, !6584, !6585, !6586}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !892, file: !716, line: 1417, baseType: !366, size: 128)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !892, file: !716, line: 1418, baseType: !896, size: 32, offset: 128)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !359, line: 16, baseType: !897)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !359, line: 13, baseType: !784)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !892, file: !716, line: 1419, baseType: !571, size: 8, offset: 160)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !892, file: !716, line: 1420, baseType: !394, size: 64, offset: 192)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !892, file: !716, line: 1421, baseType: !901, size: 64, offset: 256)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !359, line: 46, baseType: !902)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !673, line: 88, baseType: !461)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !892, file: !716, line: 1422, baseType: !904, size: 64, offset: 320)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !716, line: 2228, size: 576, elements: !906)
!906 = !{!907, !908, !909, !916, !920, !924, !928, !932, !933, !937, !940, !941, !942, !946, !947, !948}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !905, file: !716, line: 2229, baseType: !374, size: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !905, file: !716, line: 2230, baseType: !72, size: 32, offset: 64)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !905, file: !716, line: 2238, baseType: !910, size: 64, offset: 128)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DISubroutineType(types: !912)
!912 = !{!72, !913}
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !915, line: 28, flags: DIFlagFwdDecl)
!915 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!916 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !905, file: !716, line: 2239, baseType: !917, size: 64, offset: 192)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !919)
!919 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !716, line: 70, flags: DIFlagFwdDecl)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !905, file: !716, line: 2240, baseType: !921, size: 64, offset: 256)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{!750, !904, !72, !374, !647}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !905, file: !716, line: 2242, baseType: !925, size: 64, offset: 320)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = !DISubroutineType(types: !927)
!927 = !{null, !891}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !905, file: !716, line: 2243, baseType: !929, size: 64, offset: 384)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !931, line: 76, flags: DIFlagFwdDecl)
!931 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!932 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !905, file: !716, line: 2244, baseType: !904, size: 64, offset: 448)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !905, file: !716, line: 2245, baseType: !934, size: 64, offset: 512)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !359, line: 182, size: 64, elements: !935)
!935 = !{!936}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !934, file: !359, line: 183, baseType: !362, size: 64)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !905, file: !716, line: 2247, baseType: !938, offset: 576)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !939, line: 187, elements: !820)
!939 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!940 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !905, file: !716, line: 2248, baseType: !938, offset: 576)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !905, file: !716, line: 2249, baseType: !938, offset: 576)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !905, file: !716, line: 2250, baseType: !943, offset: 576)
!943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !938, elements: !944)
!944 = !{!945}
!945 = !DISubrange(count: 3)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !905, file: !716, line: 2252, baseType: !938, offset: 576)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !905, file: !716, line: 2253, baseType: !938, offset: 576)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !905, file: !716, line: 2254, baseType: !938, offset: 576)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !892, file: !716, line: 1423, baseType: !950, size: 64, offset: 384)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !952)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !716, line: 1935, size: 1472, elements: !953)
!953 = !{!954, !958, !962, !963, !967, !987, !991, !992, !993, !997, !1001, !1002, !1003, !1004, !1010, !1014, !1015, !6231, !6232, !6233, !6234, !6238, !6253}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !952, file: !716, line: 1936, baseType: !955, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DISubroutineType(types: !957)
!957 = !{!719, !891}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !952, file: !716, line: 1937, baseType: !959, size: 64, offset: 64)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!960 = !DISubroutineType(types: !961)
!961 = !{null, !719}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !952, file: !716, line: 1938, baseType: !959, size: 64, offset: 128)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !952, file: !716, line: 1940, baseType: !964, size: 64, offset: 192)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = !DISubroutineType(types: !966)
!966 = !{null, !719, !72}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !952, file: !716, line: 1941, baseType: !968, size: 64, offset: 256)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DISubroutineType(types: !970)
!970 = !{!72, !719, !971}
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !6, line: 51, size: 320, elements: !973)
!973 = !{!974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !972, file: !6, line: 52, baseType: !590, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !972, file: !6, line: 54, baseType: !590, size: 64, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !972, file: !6, line: 61, baseType: !901, size: 64, offset: 128)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !972, file: !6, line: 62, baseType: !901, size: 64, offset: 192)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !972, file: !6, line: 64, baseType: !5, size: 32, offset: 256)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !972, file: !6, line: 66, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !972, file: !6, line: 67, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !972, file: !6, line: 68, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !972, file: !6, line: 69, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !972, file: !6, line: 70, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !972, file: !6, line: 71, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !972, file: !6, line: 79, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !972, file: !6, line: 81, baseType: !7, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !952, file: !716, line: 1942, baseType: !988, size: 64, offset: 320)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = !DISubroutineType(types: !990)
!990 = !{!72, !719}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !952, file: !716, line: 1943, baseType: !959, size: 64, offset: 384)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !952, file: !716, line: 1944, baseType: !925, size: 64, offset: 448)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !952, file: !716, line: 1945, baseType: !994, size: 64, offset: 512)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = !DISubroutineType(types: !996)
!996 = !{!72, !891, !72}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !952, file: !716, line: 1946, baseType: !998, size: 64, offset: 576)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = !DISubroutineType(types: !1000)
!1000 = !{!72, !891}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !952, file: !716, line: 1947, baseType: !998, size: 64, offset: 640)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !952, file: !716, line: 1948, baseType: !998, size: 64, offset: 704)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !952, file: !716, line: 1949, baseType: !998, size: 64, offset: 768)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !952, file: !716, line: 1950, baseType: !1005, size: 64, offset: 832)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!72, !750, !1008}
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !716, line: 57, flags: DIFlagFwdDecl)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !952, file: !716, line: 1951, baseType: !1011, size: 64, offset: 896)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{!72, !891, !616, !654}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !952, file: !716, line: 1952, baseType: !925, size: 64, offset: 960)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !952, file: !716, line: 1954, baseType: !1016, size: 64, offset: 1024)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!72, !1019, !750}
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1021, line: 16, size: 896, elements: !1022)
!1021 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1022 = !{!1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1037, !1059, !1060, !6230}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1020, file: !1021, line: 17, baseType: !654, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1020, file: !1021, line: 18, baseType: !671, size: 64, offset: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1020, file: !1021, line: 19, baseType: !671, size: 64, offset: 128)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1020, file: !1021, line: 20, baseType: !671, size: 64, offset: 192)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1020, file: !1021, line: 21, baseType: !671, size: 64, offset: 256)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1020, file: !1021, line: 22, baseType: !901, size: 64, offset: 320)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1020, file: !1021, line: 23, baseType: !901, size: 64, offset: 384)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1020, file: !1021, line: 24, baseType: !1031, size: 192, offset: 448)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1032, line: 53, size: 192, elements: !1033)
!1032 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1033 = !{!1034, !1035, !1036}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1031, file: !1032, line: 54, baseType: !453, size: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1031, file: !1032, line: 55, baseType: !806, offset: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1031, file: !1032, line: 59, baseType: !366, size: 128, offset: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1020, file: !1021, line: 25, baseType: !1038, size: 64, offset: 640)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1040)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1021, line: 31, size: 256, elements: !1041)
!1041 = !{!1042, !1047, !1051, !1055}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1040, file: !1021, line: 32, baseType: !1043, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!647, !1019, !1046}
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1040, file: !1021, line: 33, baseType: !1048, size: 64, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{null, !1019, !647}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1040, file: !1021, line: 34, baseType: !1052, size: 64, offset: 128)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{!647, !1019, !647, !1046}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1040, file: !1021, line: 35, baseType: !1056, size: 64, offset: 192)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!72, !1019, !647}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1020, file: !1021, line: 26, baseType: !72, size: 32, offset: 704)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1020, file: !1021, line: 27, baseType: !1061, size: 64, offset: 768)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1063)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !716, line: 916, size: 1856, align: 32, elements: !1064)
!1064 = !{!1065, !1075, !1076, !1077, !6180, !6181, !6190, !6191, !6192, !6193, !6194, !6195, !6211, !6212, !6221, !6222, !6223, !6224, !6225, !6226, !6229}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1063, file: !716, line: 920, baseType: !1066, size: 128)
!1066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1063, file: !716, line: 917, size: 128, elements: !1067)
!1067 = !{!1068, !1074}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1066, file: !716, line: 918, baseType: !1069, size: 64)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1070, line: 58, size: 64, elements: !1071)
!1070 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1071 = !{!1072}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1069, file: !1070, line: 59, baseType: !1073, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1066, file: !716, line: 919, baseType: !381, size: 128, align: 64)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1063, file: !716, line: 921, baseType: !873, size: 128, offset: 128)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1063, file: !716, line: 922, baseType: !719, size: 64, offset: 256)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1063, file: !716, line: 923, baseType: !1078, size: 64, offset: 320)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1080)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !716, line: 1822, size: 2048, elements: !1081)
!1081 = !{!1082, !1083, !1088, !1095, !1099, !1143, !1144, !1148, !1161, !1162, !1183, !1187, !1188, !6029, !6030, !6034, !6039, !6040, !6044, !6048, !6140, !6144, !6145, !6149, !6150, !6154, !6158, !6163, !6167, !6171, !6175, !6179}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1080, file: !716, line: 1823, baseType: !929, size: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !1080, file: !716, line: 1824, baseType: !1084, size: 64, offset: 64)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{!901, !1087, !901, !72}
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1080, file: !716, line: 1825, baseType: !1089, size: 64, offset: 128)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!1092, !1087, !654, !671, !1046}
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !359, line: 60, baseType: !1093)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !673, line: 73, baseType: !1094)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !673, line: 15, baseType: !590)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1080, file: !716, line: 1826, baseType: !1096, size: 64, offset: 192)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!1092, !1087, !374, !671, !1046}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !1080, file: !716, line: 1827, baseType: !1100, size: 64, offset: 256)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!1092, !1103, !1142}
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !716, line: 320, size: 384, elements: !1105)
!1105 = !{!1106, !1107, !1108, !1112, !1113, !1114, !1116, !1117}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1104, file: !716, line: 321, baseType: !1087, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1104, file: !716, line: 326, baseType: !901, size: 64, offset: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1104, file: !716, line: 327, baseType: !1109, size: 64, offset: 128)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{null, !1103, !590, !590}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1104, file: !716, line: 328, baseType: !647, size: 64, offset: 192)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1104, file: !716, line: 329, baseType: !72, size: 32, offset: 256)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1104, file: !716, line: 330, baseType: !1115, size: 16, offset: 288)
!1115 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !414, line: 19, baseType: !553)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1104, file: !716, line: 331, baseType: !1115, size: 16, offset: 304)
!1117 = !DIDerivedType(tag: DW_TAG_member, scope: !1104, file: !716, line: 332, baseType: !1118, size: 64, offset: 320)
!1118 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1104, file: !716, line: 332, size: 64, elements: !1119)
!1119 = !{!1120, !1121}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1118, file: !716, line: 333, baseType: !7, size: 32)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1118, file: !716, line: 334, baseType: !1122, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1124, line: 569, size: 448, elements: !1125)
!1124 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1125 = !{!1126, !1127, !1128}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1123, file: !1124, line: 570, baseType: !701, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1123, file: !1124, line: 571, baseType: !72, size: 32, offset: 64)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1123, file: !1124, line: 572, baseType: !1129, size: 320, offset: 128)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1130, line: 14, baseType: !1131)
!1130 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1130, line: 29, size: 320, elements: !1132)
!1132 = !{!1133, !1134, !1135, !1141}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1131, file: !1130, line: 30, baseType: !7, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1131, file: !1130, line: 31, baseType: !647, size: 64, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1131, file: !1130, line: 32, baseType: !1136, size: 64, offset: 128)
!1136 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1130, line: 16, baseType: !1137)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{!72, !1140, !7, !72, !647}
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1131, file: !1130, line: 33, baseType: !366, size: 128, offset: 192)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !1080, file: !716, line: 1828, baseType: !1100, size: 64, offset: 320)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !1080, file: !716, line: 1829, baseType: !1145, size: 64, offset: 384)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64)
!1146 = !DISubroutineType(types: !1147)
!1147 = !{!72, !1103, !617}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !1080, file: !716, line: 1830, baseType: !1149, size: 64, offset: 448)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!1150 = !DISubroutineType(types: !1151)
!1151 = !{!72, !1087, !1152}
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !716, line: 1776, size: 128, elements: !1154)
!1154 = !{!1155, !1160}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1153, file: !716, line: 1777, baseType: !1156, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !716, line: 1773, baseType: !1157)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{!72, !1152, !374, !72, !901, !413, !7}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1153, file: !716, line: 1778, baseType: !901, size: 64, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !1080, file: !716, line: 1831, baseType: !1149, size: 64, offset: 512)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1080, file: !716, line: 1832, baseType: !1163, size: 64, offset: 576)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{!1166, !1087, !1167}
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !544, line: 52, baseType: !7)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1169, line: 43, size: 128, elements: !1170)
!1169 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!1170 = !{!1171, !1182}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !1168, file: !1169, line: 44, baseType: !1172, size: 64)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !1169, line: 37, baseType: !1173)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{null, !1087, !1176, !1167}
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1130, line: 40, baseType: !1178)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1130, line: 36, size: 128, elements: !1179)
!1179 = !{!1180, !1181}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1178, file: !1130, line: 37, baseType: !806)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1178, file: !1130, line: 38, baseType: !366, size: 128)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !1168, file: !1169, line: 45, baseType: !1166, size: 32, offset: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !1080, file: !716, line: 1833, baseType: !1184, size: 64, offset: 640)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!590, !1087, !7, !394}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1080, file: !716, line: 1834, baseType: !1184, size: 64, offset: 704)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1080, file: !716, line: 1835, baseType: !1189, size: 64, offset: 768)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = !DISubroutineType(types: !1191)
!1191 = !{!72, !1087, !1192}
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !703, line: 305, size: 1472, elements: !1194)
!1194 = !{!1195, !1196, !1197, !1198, !1199, !1200, !1201, !6006, !6012, !6013, !6018, !6019, !6022, !6023, !6024, !6025, !6026, !6027}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1193, file: !703, line: 308, baseType: !394, size: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1193, file: !703, line: 309, baseType: !394, size: 64, offset: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1193, file: !703, line: 313, baseType: !1192, size: 64, offset: 128)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1193, file: !703, line: 313, baseType: !1192, size: 64, offset: 192)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1193, file: !703, line: 315, baseType: !515, size: 192, align: 64, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1193, file: !703, line: 323, baseType: !394, size: 64, offset: 448)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1193, file: !703, line: 327, baseType: !1202, size: 64, offset: 512)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !703, line: 388, size: 7296, elements: !1204)
!1204 = !{!1205, !6004}
!1205 = !DIDerivedType(tag: DW_TAG_member, scope: !1203, file: !703, line: 389, baseType: !1206, size: 7296)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1203, file: !703, line: 389, size: 7296, elements: !1207)
!1207 = !{!1208, !1209, !1213, !1214, !1218, !1219, !1220, !1221, !1222, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1273, !1281, !1284, !1324, !1325, !5988, !5989, !5992, !5993, !5994, !5997, !5998, !5999, !6002, !6003}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1206, file: !703, line: 390, baseType: !1192, size: 64)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1206, file: !703, line: 391, baseType: !1210, size: 64, offset: 64)
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !516, line: 31, size: 64, elements: !1211)
!1211 = !{!1212}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1210, file: !516, line: 32, baseType: !520, size: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1206, file: !703, line: 392, baseType: !413, size: 64, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1206, file: !703, line: 394, baseType: !1215, size: 64, offset: 192)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{!394, !1087, !394, !394, !394, !394}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1206, file: !703, line: 398, baseType: !394, size: 64, offset: 256)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1206, file: !703, line: 399, baseType: !394, size: 64, offset: 320)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1206, file: !703, line: 405, baseType: !394, size: 64, offset: 384)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1206, file: !703, line: 406, baseType: !394, size: 64, offset: 448)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1206, file: !703, line: 407, baseType: !1223, size: 64, offset: 512)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1225, line: 286, baseType: !1226)
!1225 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1225, line: 286, size: 64, elements: !1227)
!1227 = !{!1228}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1226, file: !1225, line: 286, baseType: !1229, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1230, line: 18, baseType: !394)
!1230 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1206, file: !703, line: 416, baseType: !465, size: 32, offset: 576)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1206, file: !703, line: 428, baseType: !465, size: 32, offset: 608)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1206, file: !703, line: 437, baseType: !465, size: 32, offset: 640)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1206, file: !703, line: 447, baseType: !465, size: 32, offset: 672)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1206, file: !703, line: 450, baseType: !453, size: 64, offset: 704)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1206, file: !703, line: 452, baseType: !72, size: 32, offset: 768)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1206, file: !703, line: 454, baseType: !806, offset: 800)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1206, file: !703, line: 457, baseType: !1239, size: 256, offset: 832)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1240, line: 35, size: 256, elements: !1241)
!1240 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1241 = !{!1242, !1243, !1244, !1246}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1239, file: !1240, line: 36, baseType: !453, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1239, file: !1240, line: 42, baseType: !453, size: 64, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1239, file: !1240, line: 46, baseType: !1245, offset: 128)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !807, line: 29, baseType: !814)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1239, file: !1240, line: 47, baseType: !366, size: 128, offset: 128)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1206, file: !703, line: 459, baseType: !366, size: 128, offset: 1088)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1206, file: !703, line: 466, baseType: !394, size: 64, offset: 1216)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1206, file: !703, line: 467, baseType: !394, size: 64, offset: 1280)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1206, file: !703, line: 469, baseType: !394, size: 64, offset: 1344)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1206, file: !703, line: 470, baseType: !394, size: 64, offset: 1408)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1206, file: !703, line: 471, baseType: !455, size: 64, offset: 1472)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1206, file: !703, line: 472, baseType: !394, size: 64, offset: 1536)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1206, file: !703, line: 473, baseType: !394, size: 64, offset: 1600)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1206, file: !703, line: 474, baseType: !394, size: 64, offset: 1664)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1206, file: !703, line: 475, baseType: !394, size: 64, offset: 1728)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1206, file: !703, line: 477, baseType: !806, offset: 1792)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1206, file: !703, line: 478, baseType: !394, size: 64, offset: 1792)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1206, file: !703, line: 478, baseType: !394, size: 64, offset: 1856)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1206, file: !703, line: 478, baseType: !394, size: 64, offset: 1920)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1206, file: !703, line: 478, baseType: !394, size: 64, offset: 1984)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1206, file: !703, line: 479, baseType: !394, size: 64, offset: 2048)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1206, file: !703, line: 479, baseType: !394, size: 64, offset: 2112)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1206, file: !703, line: 479, baseType: !394, size: 64, offset: 2176)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1206, file: !703, line: 480, baseType: !394, size: 64, offset: 2240)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1206, file: !703, line: 480, baseType: !394, size: 64, offset: 2304)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1206, file: !703, line: 480, baseType: !394, size: 64, offset: 2368)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1206, file: !703, line: 480, baseType: !394, size: 64, offset: 2432)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1206, file: !703, line: 482, baseType: !1270, size: 2816, offset: 2496)
!1270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 2816, elements: !1271)
!1271 = !{!1272}
!1272 = !DISubrange(count: 44)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1206, file: !703, line: 488, baseType: !1274, size: 256, offset: 5312)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1275, line: 60, size: 256, elements: !1276)
!1275 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1276 = !{!1277}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1274, file: !1275, line: 61, baseType: !1278, size: 256)
!1278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 256, elements: !1279)
!1279 = !{!1280}
!1280 = !DISubrange(count: 4)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1206, file: !703, line: 490, baseType: !1282, size: 64, offset: 5568)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !703, line: 490, flags: DIFlagFwdDecl)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1206, file: !703, line: 493, baseType: !1285, size: 896, offset: 5632)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1286, line: 53, baseType: !1287)
!1286 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1286, line: 13, size: 896, elements: !1288)
!1288 = !{!1289, !1290, !1291, !1292, !1295, !1296, !1297, !1298, !1318, !1319, !1320}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1287, file: !1286, line: 18, baseType: !413, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1287, file: !1286, line: 28, baseType: !455, size: 64, offset: 64)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1287, file: !1286, line: 31, baseType: !1239, size: 256, offset: 128)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1287, file: !1286, line: 32, baseType: !1293, size: 64, offset: 384)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1286, line: 32, flags: DIFlagFwdDecl)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1287, file: !1286, line: 37, baseType: !554, size: 16, offset: 448)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1287, file: !1286, line: 40, baseType: !1031, size: 192, offset: 512)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1287, file: !1286, line: 41, baseType: !647, size: 64, offset: 704)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1287, file: !1286, line: 42, baseType: !1299, size: 64, offset: 768)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1301)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1302, line: 13, size: 896, elements: !1303)
!1302 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1303 = !{!1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1301, file: !1302, line: 14, baseType: !647, size: 64)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1301, file: !1302, line: 15, baseType: !394, size: 64, offset: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1301, file: !1302, line: 17, baseType: !394, size: 64, offset: 128)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1301, file: !1302, line: 17, baseType: !394, size: 64, offset: 192)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1301, file: !1302, line: 19, baseType: !590, size: 64, offset: 256)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1301, file: !1302, line: 21, baseType: !590, size: 64, offset: 320)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1301, file: !1302, line: 22, baseType: !590, size: 64, offset: 384)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1301, file: !1302, line: 23, baseType: !590, size: 64, offset: 448)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1301, file: !1302, line: 24, baseType: !590, size: 64, offset: 512)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1301, file: !1302, line: 25, baseType: !590, size: 64, offset: 576)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1301, file: !1302, line: 26, baseType: !590, size: 64, offset: 640)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1301, file: !1302, line: 27, baseType: !590, size: 64, offset: 704)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1301, file: !1302, line: 28, baseType: !590, size: 64, offset: 768)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1301, file: !1302, line: 29, baseType: !590, size: 64, offset: 832)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1287, file: !1286, line: 44, baseType: !465, size: 32, offset: 832)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1287, file: !1286, line: 50, baseType: !1115, size: 16, offset: 864)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1287, file: !1286, line: 51, baseType: !1321, size: 16, offset: 880)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !414, line: 18, baseType: !1322)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !416, line: 23, baseType: !1323)
!1323 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1206, file: !703, line: 495, baseType: !394, size: 64, offset: 6528)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1206, file: !703, line: 497, baseType: !1326, size: 64, offset: 6592)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !703, line: 381, size: 384, elements: !1328)
!1328 = !{!1329, !1330, !5987}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1327, file: !703, line: 382, baseType: !465, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1327, file: !703, line: 383, baseType: !1331, size: 128, offset: 64)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !703, line: 376, size: 128, elements: !1332)
!1332 = !{!1333, !5985}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1331, file: !703, line: 377, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1336, line: 640, size: 48640, elements: !1337)
!1336 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1337 = !{!1338, !1344, !1346, !1347, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1364, !1382, !1393, !1482, !1483, !1484, !1495, !1496, !1498, !1499, !1500, !1501, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1585, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1618, !1620, !1621, !1622, !1634, !1635, !1636, !1637, !1638, !1639, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1663, !1668, !2006, !2007, !2008, !2009, !2010, !2013, !2016, !2019, !2022, !3725, !3821, !3852, !3853, !3854, !3855, !3856, !3857, !3858, !3859, !3860, !3869, !3870, !3871, !3872, !3873, !3878, !3879, !3880, !3883, !3884, !5579, !5588, !5594, !5595, !5596, !5599, !5600, !5679, !5680, !5683, !5684, !5687, !5688, !5689, !5693, !5694, !5695, !5708, !5709, !5710, !5720, !5725, !5783, !5789, !5790, !5791, !5792, !5793, !5794, !5795, !5796, !5811, !5812, !5813, !5814, !5815, !5816, !5817, !5818, !5819}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1335, file: !1336, line: 646, baseType: !1339, size: 128)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1340, line: 56, size: 128, elements: !1341)
!1340 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1341 = !{!1342, !1343}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1339, file: !1340, line: 57, baseType: !394, size: 64)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1339, file: !1340, line: 58, baseType: !784, size: 32, offset: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1335, file: !1336, line: 649, baseType: !1345, size: 64, offset: 128)
!1345 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !590)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1335, file: !1336, line: 657, baseType: !647, size: 64, offset: 192)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1335, file: !1336, line: 658, baseType: !1348, size: 32, offset: 256)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1349, line: 113, baseType: !1350)
!1349 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1349, line: 111, size: 32, elements: !1351)
!1351 = !{!1352}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1350, file: !1349, line: 112, baseType: !465, size: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1335, file: !1336, line: 660, baseType: !7, size: 32, offset: 288)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1335, file: !1336, line: 661, baseType: !7, size: 32, offset: 320)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1335, file: !1336, line: 684, baseType: !72, size: 32, offset: 352)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1335, file: !1336, line: 686, baseType: !72, size: 32, offset: 384)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1335, file: !1336, line: 687, baseType: !72, size: 32, offset: 416)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1335, file: !1336, line: 688, baseType: !72, size: 32, offset: 448)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1335, file: !1336, line: 689, baseType: !7, size: 32, offset: 480)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1335, file: !1336, line: 691, baseType: !1361, size: 64, offset: 512)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1363)
!1363 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1336, line: 691, flags: DIFlagFwdDecl)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1335, file: !1336, line: 692, baseType: !1365, size: 832, offset: 576)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1336, line: 451, size: 832, elements: !1366)
!1366 = !{!1367, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1365, file: !1336, line: 453, baseType: !1368, size: 128)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1336, line: 325, size: 128, elements: !1369)
!1369 = !{!1370, !1371}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1368, file: !1336, line: 326, baseType: !394, size: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1368, file: !1336, line: 327, baseType: !784, size: 32, offset: 64)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1365, file: !1336, line: 454, baseType: !515, size: 192, align: 64, offset: 128)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1365, file: !1336, line: 455, baseType: !366, size: 128, offset: 320)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1365, file: !1336, line: 456, baseType: !7, size: 32, offset: 448)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1365, file: !1336, line: 458, baseType: !413, size: 64, offset: 512)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1365, file: !1336, line: 459, baseType: !413, size: 64, offset: 576)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1365, file: !1336, line: 460, baseType: !413, size: 64, offset: 640)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1365, file: !1336, line: 461, baseType: !413, size: 64, offset: 704)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1365, file: !1336, line: 463, baseType: !413, size: 64, offset: 768)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1365, file: !1336, line: 465, baseType: !1381, offset: 832)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1336, line: 415, elements: !820)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1335, file: !1336, line: 693, baseType: !1383, size: 384, offset: 1408)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1336, line: 489, size: 384, elements: !1384)
!1384 = !{!1385, !1386, !1387, !1388, !1389, !1390, !1391}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1383, file: !1336, line: 490, baseType: !366, size: 128)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1383, file: !1336, line: 491, baseType: !394, size: 64, offset: 128)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1383, file: !1336, line: 492, baseType: !394, size: 64, offset: 192)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1383, file: !1336, line: 493, baseType: !7, size: 32, offset: 256)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1383, file: !1336, line: 494, baseType: !554, size: 16, offset: 288)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1383, file: !1336, line: 495, baseType: !554, size: 16, offset: 304)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1383, file: !1336, line: 497, baseType: !1392, size: 64, offset: 320)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1335, file: !1336, line: 697, baseType: !1394, size: 1792, offset: 1792)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1336, line: 507, size: 1792, elements: !1395)
!1395 = !{!1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1479, !1480}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1394, file: !1336, line: 508, baseType: !515, size: 192, align: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1394, file: !1336, line: 515, baseType: !413, size: 64, offset: 192)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1394, file: !1336, line: 516, baseType: !413, size: 64, offset: 256)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1394, file: !1336, line: 517, baseType: !413, size: 64, offset: 320)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1394, file: !1336, line: 518, baseType: !413, size: 64, offset: 384)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1394, file: !1336, line: 519, baseType: !413, size: 64, offset: 448)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1394, file: !1336, line: 526, baseType: !459, size: 64, offset: 512)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1394, file: !1336, line: 527, baseType: !413, size: 64, offset: 576)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1394, file: !1336, line: 528, baseType: !7, size: 32, offset: 640)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1394, file: !1336, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1394, file: !1336, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1394, file: !1336, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1394, file: !1336, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1394, file: !1336, line: 563, baseType: !1410, size: 512, offset: 704)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !32, line: 118, size: 512, elements: !1411)
!1411 = !{!1412, !1420, !1421, !1426, !1473, !1476, !1477, !1478}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1410, file: !32, line: 119, baseType: !1413, size: 256)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1414, line: 9, size: 256, elements: !1415)
!1414 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1415 = !{!1416, !1417}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1413, file: !1414, line: 10, baseType: !515, size: 192, align: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1413, file: !1414, line: 11, baseType: !1418, size: 64, offset: 192)
!1418 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1419, line: 29, baseType: !459)
!1419 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1410, file: !32, line: 120, baseType: !1418, size: 64, offset: 256)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1410, file: !32, line: 121, baseType: !1422, size: 64, offset: 320)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{!31, !1425}
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1410, file: !32, line: 122, baseType: !1427, size: 64, offset: 384)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !32, line: 159, size: 512, align: 512, elements: !1429)
!1429 = !{!1430, !1450, !1451, !1454, !1459, !1460, !1468, !1472}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1428, file: !32, line: 160, baseType: !1431, size: 64)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !32, line: 214, size: 4608, align: 512, elements: !1433)
!1433 = !{!1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1432, file: !32, line: 215, baseType: !1245)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1432, file: !32, line: 216, baseType: !7, size: 32)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1432, file: !32, line: 217, baseType: !7, size: 32, offset: 32)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1432, file: !32, line: 218, baseType: !7, size: 32, offset: 64)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1432, file: !32, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1432, file: !32, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1432, file: !32, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1432, file: !32, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1432, file: !32, line: 233, baseType: !1418, size: 64, offset: 128)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1432, file: !32, line: 234, baseType: !1425, size: 64, offset: 192)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1432, file: !32, line: 235, baseType: !1418, size: 64, offset: 256)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1432, file: !32, line: 236, baseType: !1425, size: 64, offset: 320)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1432, file: !32, line: 237, baseType: !1447, size: 4096, offset: 512)
!1447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1428, size: 4096, elements: !1448)
!1448 = !{!1449}
!1449 = !DISubrange(count: 8)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1428, file: !32, line: 161, baseType: !7, size: 32, offset: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1428, file: !32, line: 162, baseType: !1452, size: 32, offset: 96)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !359, line: 27, baseType: !1453)
!1453 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !673, line: 96, baseType: !72)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1428, file: !32, line: 163, baseType: !1455, size: 32, offset: 128)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !757, line: 276, baseType: !1456)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !757, line: 276, size: 32, elements: !1457)
!1457 = !{!1458}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1456, file: !757, line: 276, baseType: !761, size: 32)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1428, file: !32, line: 164, baseType: !1425, size: 64, offset: 192)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1428, file: !32, line: 165, baseType: !1461, size: 128, offset: 256)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1414, line: 14, size: 128, elements: !1462)
!1462 = !{!1463}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1461, file: !1414, line: 15, baseType: !1464, size: 128)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !516, line: 125, size: 128, elements: !1465)
!1465 = !{!1466, !1467}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1464, file: !516, line: 126, baseType: !1210, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1464, file: !516, line: 127, baseType: !520, size: 64, offset: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1428, file: !32, line: 166, baseType: !1469, size: 64, offset: 384)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64)
!1470 = !DISubroutineType(types: !1471)
!1471 = !{!1418}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1428, file: !32, line: 167, baseType: !1418, size: 64, offset: 448)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1410, file: !32, line: 123, baseType: !1474, size: 8, offset: 448)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !414, line: 17, baseType: !1475)
!1475 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !416, line: 21, baseType: !571)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1410, file: !32, line: 124, baseType: !1474, size: 8, offset: 456)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1410, file: !32, line: 125, baseType: !1474, size: 8, offset: 464)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1410, file: !32, line: 126, baseType: !1474, size: 8, offset: 472)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1394, file: !1336, line: 572, baseType: !1410, size: 512, offset: 1216)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1394, file: !1336, line: 580, baseType: !1481, size: 64, offset: 1728)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1335, file: !1336, line: 721, baseType: !7, size: 32, offset: 3584)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1335, file: !1336, line: 722, baseType: !72, size: 32, offset: 3616)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1335, file: !1336, line: 723, baseType: !1485, size: 64, offset: 3648)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1487)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1488, line: 17, baseType: !1489)
!1488 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1488, line: 17, size: 64, elements: !1490)
!1490 = !{!1491}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1489, file: !1488, line: 17, baseType: !1492, size: 64)
!1492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 64, elements: !1493)
!1493 = !{!1494}
!1494 = !DISubrange(count: 1)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1335, file: !1336, line: 724, baseType: !1487, size: 64, offset: 3712)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1335, file: !1336, line: 749, baseType: !1497, offset: 3776)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1336, line: 290, elements: !820)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1335, file: !1336, line: 751, baseType: !366, size: 128, offset: 3776)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1335, file: !1336, line: 757, baseType: !1202, size: 64, offset: 3904)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1335, file: !1336, line: 758, baseType: !1202, size: 64, offset: 3968)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1335, file: !1336, line: 761, baseType: !1502, size: 320, offset: 4032)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1275, line: 34, size: 320, elements: !1503)
!1503 = !{!1504, !1505}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1502, file: !1275, line: 35, baseType: !413, size: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1502, file: !1275, line: 36, baseType: !1506, size: 256, offset: 64)
!1506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1192, size: 256, elements: !1279)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1335, file: !1336, line: 766, baseType: !72, size: 32, offset: 4352)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1335, file: !1336, line: 767, baseType: !72, size: 32, offset: 4384)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1335, file: !1336, line: 768, baseType: !72, size: 32, offset: 4416)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1335, file: !1336, line: 770, baseType: !72, size: 32, offset: 4448)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1335, file: !1336, line: 772, baseType: !394, size: 64, offset: 4480)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1335, file: !1336, line: 775, baseType: !7, size: 32, offset: 4544)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1335, file: !1336, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1335, file: !1336, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1335, file: !1336, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1335, file: !1336, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1335, file: !1336, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1335, file: !1336, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1335, file: !1336, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1335, file: !1336, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1335, file: !1336, line: 831, baseType: !394, size: 64, offset: 4672)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1335, file: !1336, line: 833, baseType: !1523, size: 384, offset: 4736)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !191, line: 25, size: 384, elements: !1524)
!1524 = !{!1525, !1530}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1523, file: !191, line: 26, baseType: !1526, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{!590, !1529}
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1530 = !DIDerivedType(tag: DW_TAG_member, scope: !1523, file: !191, line: 27, baseType: !1531, size: 320, offset: 64)
!1531 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1523, file: !191, line: 27, size: 320, elements: !1532)
!1532 = !{!1533, !1543, !1570}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1531, file: !191, line: 36, baseType: !1534, size: 320)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1531, file: !191, line: 29, size: 320, elements: !1535)
!1535 = !{!1536, !1538, !1539, !1540, !1541, !1542}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1534, file: !191, line: 30, baseType: !1537, size: 64)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1534, file: !191, line: 31, baseType: !784, size: 32, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1534, file: !191, line: 32, baseType: !784, size: 32, offset: 96)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1534, file: !191, line: 33, baseType: !784, size: 32, offset: 128)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1534, file: !191, line: 34, baseType: !413, size: 64, offset: 192)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1534, file: !191, line: 35, baseType: !1537, size: 64, offset: 256)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1531, file: !191, line: 46, baseType: !1544, size: 192)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1531, file: !191, line: 38, size: 192, elements: !1545)
!1545 = !{!1546, !1547, !1548, !1569}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1544, file: !191, line: 39, baseType: !1452, size: 32)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1544, file: !191, line: 40, baseType: !190, size: 32, offset: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, scope: !1544, file: !191, line: 41, baseType: !1549, size: 64, offset: 64)
!1549 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1544, file: !191, line: 41, size: 64, elements: !1550)
!1550 = !{!1551, !1559}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1549, file: !191, line: 42, baseType: !1552, size: 64)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1554, line: 7, size: 128, elements: !1555)
!1554 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1555 = !{!1556, !1558}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1553, file: !1554, line: 8, baseType: !1557, size: 64)
!1557 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !673, line: 93, baseType: !461)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1553, file: !1554, line: 9, baseType: !461, size: 64, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1549, file: !191, line: 43, baseType: !1560, size: 64)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1562, line: 7, size: 64, elements: !1563)
!1562 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1563 = !{!1564, !1568}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1561, file: !1562, line: 8, baseType: !1565, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1562, line: 5, baseType: !1566)
!1566 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !414, line: 20, baseType: !1567)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !416, line: 26, baseType: !72)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1561, file: !1562, line: 9, baseType: !1566, size: 32, offset: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1544, file: !191, line: 45, baseType: !413, size: 64, offset: 128)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1531, file: !191, line: 54, baseType: !1571, size: 256)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1531, file: !191, line: 48, size: 256, elements: !1572)
!1572 = !{!1573, !1581, !1582, !1583, !1584}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1571, file: !191, line: 49, baseType: !1574, size: 64)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1576, line: 36, size: 64, elements: !1577)
!1576 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1577 = !{!1578, !1579, !1580}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1575, file: !1576, line: 37, baseType: !72, size: 32)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1575, file: !1576, line: 38, baseType: !1323, size: 16, offset: 32)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1575, file: !1576, line: 39, baseType: !1323, size: 16, offset: 48)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1571, file: !191, line: 50, baseType: !72, size: 32, offset: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1571, file: !191, line: 51, baseType: !72, size: 32, offset: 96)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1571, file: !191, line: 52, baseType: !394, size: 64, offset: 128)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1571, file: !191, line: 53, baseType: !394, size: 64, offset: 192)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1335, file: !1336, line: 835, baseType: !1586, size: 32, offset: 5120)
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !359, line: 22, baseType: !1587)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !673, line: 28, baseType: !72)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1335, file: !1336, line: 836, baseType: !1586, size: 32, offset: 5152)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1335, file: !1336, line: 840, baseType: !394, size: 64, offset: 5184)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1335, file: !1336, line: 849, baseType: !1334, size: 64, offset: 5248)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1335, file: !1336, line: 852, baseType: !1334, size: 64, offset: 5312)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1335, file: !1336, line: 857, baseType: !366, size: 128, offset: 5376)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1335, file: !1336, line: 858, baseType: !366, size: 128, offset: 5504)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1335, file: !1336, line: 859, baseType: !1334, size: 64, offset: 5632)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1335, file: !1336, line: 867, baseType: !366, size: 128, offset: 5696)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1335, file: !1336, line: 868, baseType: !366, size: 128, offset: 5824)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1335, file: !1336, line: 871, baseType: !1598, size: 64, offset: 5952)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !1600, line: 59, size: 768, elements: !1601)
!1600 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!1601 = !{!1602, !1603, !1604, !1605, !1607, !1608, !1609, !1610}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1599, file: !1600, line: 61, baseType: !1348, size: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1599, file: !1600, line: 62, baseType: !7, size: 32, offset: 32)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1599, file: !1600, line: 63, baseType: !806, offset: 64)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1599, file: !1600, line: 65, baseType: !1606, size: 256, offset: 64)
!1606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 256, elements: !1279)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1599, file: !1600, line: 66, baseType: !934, size: 64, offset: 320)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1599, file: !1600, line: 68, baseType: !1177, size: 128, offset: 384)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1599, file: !1600, line: 69, baseType: !381, size: 128, align: 64, offset: 512)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1599, file: !1600, line: 70, baseType: !1611, size: 128, offset: 640)
!1611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1612, size: 128, elements: !1493)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !1600, line: 54, size: 128, elements: !1613)
!1613 = !{!1614, !1615}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1612, file: !1600, line: 55, baseType: !72, size: 32)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1612, file: !1600, line: 56, baseType: !1616, size: 64, offset: 64)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !1600, line: 56, flags: DIFlagFwdDecl)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1335, file: !1336, line: 872, baseType: !1619, size: 512, offset: 6016)
!1619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 512, elements: !1279)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1335, file: !1336, line: 873, baseType: !366, size: 128, offset: 6528)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1335, file: !1336, line: 874, baseType: !366, size: 128, offset: 6656)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1335, file: !1336, line: 876, baseType: !1623, size: 64, offset: 6784)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1625, line: 26, size: 192, elements: !1626)
!1625 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1626 = !{!1627, !1628}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1624, file: !1625, line: 27, baseType: !7, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1624, file: !1625, line: 28, baseType: !1629, size: 128, offset: 64)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1630, line: 43, size: 128, elements: !1631)
!1630 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1631 = !{!1632, !1633}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1629, file: !1630, line: 44, baseType: !1245)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1629, file: !1630, line: 45, baseType: !366, size: 128)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1335, file: !1336, line: 879, baseType: !616, size: 64, offset: 6848)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1335, file: !1336, line: 882, baseType: !616, size: 64, offset: 6912)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1335, file: !1336, line: 884, baseType: !413, size: 64, offset: 6976)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1335, file: !1336, line: 885, baseType: !413, size: 64, offset: 7040)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1335, file: !1336, line: 890, baseType: !413, size: 64, offset: 7104)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1335, file: !1336, line: 891, baseType: !1640, size: 128, offset: 7168)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1336, line: 242, size: 128, elements: !1641)
!1641 = !{!1642, !1643, !1644}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1640, file: !1336, line: 244, baseType: !413, size: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1640, file: !1336, line: 245, baseType: !413, size: 64, offset: 64)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1640, file: !1336, line: 246, baseType: !1245, offset: 128)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1335, file: !1336, line: 900, baseType: !394, size: 64, offset: 7296)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1335, file: !1336, line: 901, baseType: !394, size: 64, offset: 7360)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1335, file: !1336, line: 904, baseType: !413, size: 64, offset: 7424)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1335, file: !1336, line: 907, baseType: !413, size: 64, offset: 7488)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1335, file: !1336, line: 910, baseType: !394, size: 64, offset: 7552)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1335, file: !1336, line: 911, baseType: !394, size: 64, offset: 7616)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1335, file: !1336, line: 914, baseType: !1652, size: 640, offset: 7680)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1653, line: 123, size: 640, elements: !1654)
!1653 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1654 = !{!1655, !1661, !1662}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1652, file: !1653, line: 124, baseType: !1656, size: 576)
!1656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1657, size: 576, elements: !944)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1653, line: 108, size: 192, elements: !1658)
!1658 = !{!1659, !1660}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1657, file: !1653, line: 109, baseType: !413, size: 64)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1657, file: !1653, line: 110, baseType: !1461, size: 128, offset: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1652, file: !1653, line: 125, baseType: !7, size: 32, offset: 576)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1652, file: !1653, line: 126, baseType: !7, size: 32, offset: 608)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1335, file: !1336, line: 917, baseType: !1664, size: 192, offset: 8320)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1653, line: 134, size: 192, elements: !1665)
!1665 = !{!1666, !1667}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1664, file: !1653, line: 135, baseType: !381, size: 128, align: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1664, file: !1653, line: 136, baseType: !7, size: 32, offset: 128)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1335, file: !1336, line: 923, baseType: !1669, size: 64, offset: 8512)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!1670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1671)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1672, line: 111, size: 1280, elements: !1673)
!1672 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1673 = !{!1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1691, !1692, !1693, !1694, !1695, !1696, !1806, !1807, !1808, !1809, !1835, !1991, !2001}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1671, file: !1672, line: 112, baseType: !465, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1671, file: !1672, line: 120, baseType: !726, size: 32, offset: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1671, file: !1672, line: 121, baseType: !734, size: 32, offset: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1671, file: !1672, line: 122, baseType: !726, size: 32, offset: 96)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1671, file: !1672, line: 123, baseType: !734, size: 32, offset: 128)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1671, file: !1672, line: 124, baseType: !726, size: 32, offset: 160)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1671, file: !1672, line: 125, baseType: !734, size: 32, offset: 192)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1671, file: !1672, line: 126, baseType: !726, size: 32, offset: 224)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1671, file: !1672, line: 127, baseType: !734, size: 32, offset: 256)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1671, file: !1672, line: 128, baseType: !7, size: 32, offset: 288)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1671, file: !1672, line: 129, baseType: !1685, size: 64, offset: 320)
!1685 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1686, line: 26, baseType: !1687)
!1686 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1686, line: 24, size: 64, elements: !1688)
!1688 = !{!1689}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1687, file: !1686, line: 25, baseType: !1690, size: 64)
!1690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !545, size: 64, elements: !555)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1671, file: !1672, line: 130, baseType: !1685, size: 64, offset: 384)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1671, file: !1672, line: 131, baseType: !1685, size: 64, offset: 448)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1671, file: !1672, line: 132, baseType: !1685, size: 64, offset: 512)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1671, file: !1672, line: 133, baseType: !1685, size: 64, offset: 576)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1671, file: !1672, line: 135, baseType: !571, size: 8, offset: 640)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1671, file: !1672, line: 137, baseType: !1697, size: 64, offset: 704)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1699, line: 189, size: 1664, elements: !1700)
!1699 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1700 = !{!1701, !1702, !1705, !1710, !1711, !1714, !1715, !1722, !1723, !1724, !1725, !1728, !1729, !1730, !1731, !1732, !1770, !1791}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1698, file: !1699, line: 190, baseType: !1348, size: 32)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1698, file: !1699, line: 191, baseType: !1703, size: 32, offset: 32)
!1703 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1699, line: 28, baseType: !1704)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !359, line: 98, baseType: !1566)
!1705 = !DIDerivedType(tag: DW_TAG_member, scope: !1698, file: !1699, line: 192, baseType: !1706, size: 192, offset: 64)
!1706 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1698, file: !1699, line: 192, size: 192, elements: !1707)
!1707 = !{!1708, !1709}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1706, file: !1699, line: 193, baseType: !366, size: 128)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1706, file: !1699, line: 194, baseType: !515, size: 192, align: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1698, file: !1699, line: 199, baseType: !1239, size: 256, offset: 256)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1698, file: !1699, line: 200, baseType: !1712, size: 64, offset: 512)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1713 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1699, line: 200, flags: DIFlagFwdDecl)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1698, file: !1699, line: 201, baseType: !647, size: 64, offset: 576)
!1715 = !DIDerivedType(tag: DW_TAG_member, scope: !1698, file: !1699, line: 202, baseType: !1716, size: 64, offset: 640)
!1716 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1698, file: !1699, line: 202, size: 64, elements: !1717)
!1717 = !{!1718, !1721}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1716, file: !1699, line: 203, baseType: !1719, size: 64)
!1719 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1720, line: 8, baseType: !460)
!1720 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1716, file: !1699, line: 204, baseType: !1719, size: 64)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1698, file: !1699, line: 206, baseType: !1719, size: 64, offset: 704)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1698, file: !1699, line: 207, baseType: !726, size: 32, offset: 768)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1698, file: !1699, line: 208, baseType: !734, size: 32, offset: 800)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1698, file: !1699, line: 209, baseType: !1726, size: 32, offset: 832)
!1726 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1699, line: 31, baseType: !1727)
!1727 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !359, line: 104, baseType: !784)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1698, file: !1699, line: 210, baseType: !554, size: 16, offset: 864)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1698, file: !1699, line: 211, baseType: !554, size: 16, offset: 880)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1698, file: !1699, line: 215, baseType: !1323, size: 16, offset: 896)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1698, file: !1699, line: 222, baseType: !394, size: 64, offset: 960)
!1732 = !DIDerivedType(tag: DW_TAG_member, scope: !1698, file: !1699, line: 239, baseType: !1733, size: 320, offset: 1024)
!1733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1698, file: !1699, line: 239, size: 320, elements: !1734)
!1734 = !{!1735, !1762}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1733, file: !1699, line: 240, baseType: !1736, size: 320)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1699, line: 108, size: 320, elements: !1737)
!1737 = !{!1738, !1739, !1751, !1754, !1761}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1736, file: !1699, line: 110, baseType: !394, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, scope: !1736, file: !1699, line: 111, baseType: !1740, size: 64, offset: 64)
!1740 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1736, file: !1699, line: 111, size: 64, elements: !1741)
!1741 = !{!1742, !1750}
!1742 = !DIDerivedType(tag: DW_TAG_member, scope: !1740, file: !1699, line: 112, baseType: !1743, size: 64)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1740, file: !1699, line: 112, size: 64, elements: !1744)
!1744 = !{!1745, !1746}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1743, file: !1699, line: 114, baseType: !1115, size: 16)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1743, file: !1699, line: 115, baseType: !1747, size: 48, offset: 16)
!1747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 48, elements: !1748)
!1748 = !{!1749}
!1749 = !DISubrange(count: 6)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1740, file: !1699, line: 121, baseType: !394, size: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1736, file: !1699, line: 123, baseType: !1752, size: 64, offset: 128)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64)
!1753 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1699, line: 96, flags: DIFlagFwdDecl)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1736, file: !1699, line: 124, baseType: !1755, size: 64, offset: 192)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1699, line: 102, size: 192, elements: !1757)
!1757 = !{!1758, !1759, !1760}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1756, file: !1699, line: 103, baseType: !381, size: 128, align: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1756, file: !1699, line: 104, baseType: !1348, size: 32, offset: 128)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1756, file: !1699, line: 105, baseType: !617, size: 8, offset: 160)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1736, file: !1699, line: 125, baseType: !374, size: 64, offset: 256)
!1762 = !DIDerivedType(tag: DW_TAG_member, scope: !1733, file: !1699, line: 241, baseType: !1763, size: 320)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1733, file: !1699, line: 241, size: 320, elements: !1764)
!1764 = !{!1765, !1766, !1767, !1768, !1769}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1763, file: !1699, line: 242, baseType: !394, size: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1763, file: !1699, line: 243, baseType: !394, size: 64, offset: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1763, file: !1699, line: 244, baseType: !1752, size: 64, offset: 128)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1763, file: !1699, line: 245, baseType: !1755, size: 64, offset: 192)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1763, file: !1699, line: 246, baseType: !654, size: 64, offset: 256)
!1770 = !DIDerivedType(tag: DW_TAG_member, scope: !1698, file: !1699, line: 254, baseType: !1771, size: 256, offset: 1344)
!1771 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1698, file: !1699, line: 254, size: 256, elements: !1772)
!1772 = !{!1773, !1779}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1771, file: !1699, line: 255, baseType: !1774, size: 256)
!1774 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1699, line: 128, size: 256, elements: !1775)
!1775 = !{!1776, !1777}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1774, file: !1699, line: 129, baseType: !647, size: 64)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1774, file: !1699, line: 130, baseType: !1778, size: 256)
!1778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 256, elements: !1279)
!1779 = !DIDerivedType(tag: DW_TAG_member, scope: !1771, file: !1699, line: 256, baseType: !1780, size: 256)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1771, file: !1699, line: 256, size: 256, elements: !1781)
!1781 = !{!1782, !1783}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1780, file: !1699, line: 258, baseType: !366, size: 128)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1780, file: !1699, line: 259, baseType: !1784, size: 128, offset: 128)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1785, line: 22, size: 128, elements: !1786)
!1785 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1786 = !{!1787, !1790}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1784, file: !1785, line: 23, baseType: !1788, size: 64)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64)
!1789 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1785, line: 23, flags: DIFlagFwdDecl)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1784, file: !1785, line: 24, baseType: !394, size: 64, offset: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1698, file: !1699, line: 274, baseType: !1792, size: 64, offset: 1600)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1699, line: 170, size: 192, elements: !1794)
!1794 = !{!1795, !1804, !1805}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1793, file: !1699, line: 171, baseType: !1796, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1699, line: 165, baseType: !1797)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = !DISubroutineType(types: !1799)
!1799 = !{!72, !1697, !1800, !1802, !1697}
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1753)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1774)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1793, file: !1699, line: 172, baseType: !1697, size: 64, offset: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1793, file: !1699, line: 173, baseType: !1752, size: 64, offset: 128)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1671, file: !1672, line: 138, baseType: !1697, size: 64, offset: 768)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1671, file: !1672, line: 139, baseType: !1697, size: 64, offset: 832)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1671, file: !1672, line: 140, baseType: !1697, size: 64, offset: 896)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1671, file: !1672, line: 145, baseType: !1810, size: 64, offset: 960)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1812, line: 13, size: 896, elements: !1813)
!1812 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1813 = !{!1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1811, file: !1812, line: 14, baseType: !1348, size: 32)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1811, file: !1812, line: 15, baseType: !465, size: 32, offset: 32)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1811, file: !1812, line: 16, baseType: !465, size: 32, offset: 64)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1811, file: !1812, line: 21, baseType: !453, size: 64, offset: 128)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1811, file: !1812, line: 27, baseType: !394, size: 64, offset: 192)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1811, file: !1812, line: 28, baseType: !394, size: 64, offset: 256)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1811, file: !1812, line: 29, baseType: !453, size: 64, offset: 320)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1811, file: !1812, line: 32, baseType: !358, size: 128, offset: 384)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1811, file: !1812, line: 33, baseType: !726, size: 32, offset: 512)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1811, file: !1812, line: 37, baseType: !453, size: 64, offset: 576)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1811, file: !1812, line: 44, baseType: !1825, size: 256, offset: 640)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1826, line: 15, size: 256, elements: !1827)
!1826 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1827 = !{!1828, !1829, !1830, !1831, !1832, !1833, !1834}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1825, file: !1826, line: 16, baseType: !1245)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1825, file: !1826, line: 18, baseType: !72, size: 32)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1825, file: !1826, line: 19, baseType: !72, size: 32, offset: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1825, file: !1826, line: 20, baseType: !72, size: 32, offset: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1825, file: !1826, line: 21, baseType: !72, size: 32, offset: 96)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1825, file: !1826, line: 22, baseType: !394, size: 64, offset: 128)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1825, file: !1826, line: 23, baseType: !394, size: 64, offset: 192)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1671, file: !1672, line: 146, baseType: !1836, size: 64, offset: 1024)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1838, line: 56, size: 4160, elements: !1839)
!1838 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1839 = !{!1840, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1879, !1880, !1881, !1882, !1883, !1895, !1976, !1977, !1989}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !1837, file: !1838, line: 57, baseType: !1841, size: 576)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !1838, line: 23, size: 576, elements: !1842)
!1842 = !{!1843, !1844}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !1841, file: !1838, line: 24, baseType: !784, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, scope: !1841, file: !1838, line: 25, baseType: !1845, size: 512, offset: 64)
!1845 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1841, file: !1838, line: 25, size: 512, elements: !1846)
!1846 = !{!1847, !1856}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !1845, file: !1838, line: 26, baseType: !1848, size: 480)
!1848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1849, size: 480, elements: !1854)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !1838, line: 17, size: 96, elements: !1850)
!1850 = !{!1851, !1852, !1853}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1849, file: !1838, line: 18, baseType: !784, size: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !1849, file: !1838, line: 19, baseType: !784, size: 32, offset: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1849, file: !1838, line: 20, baseType: !784, size: 32, offset: 64)
!1854 = !{!1855}
!1855 = !DISubrange(count: 5)
!1856 = !DIDerivedType(tag: DW_TAG_member, scope: !1845, file: !1838, line: 27, baseType: !1857, size: 128)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1845, file: !1838, line: 27, size: 128, elements: !1858)
!1858 = !{!1859, !1861}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !1857, file: !1838, line: 28, baseType: !1860, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !1857, file: !1838, line: 29, baseType: !1860, size: 64, offset: 64)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !1837, file: !1838, line: 58, baseType: !1841, size: 576, offset: 576)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !1837, file: !1838, line: 59, baseType: !1841, size: 576, offset: 1152)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1837, file: !1838, line: 60, baseType: !465, size: 32, offset: 1728)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1837, file: !1838, line: 61, baseType: !1836, size: 64, offset: 1792)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1837, file: !1838, line: 62, baseType: !72, size: 32, offset: 1856)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1837, file: !1838, line: 63, baseType: !726, size: 32, offset: 1888)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1837, file: !1838, line: 64, baseType: !734, size: 32, offset: 1920)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1837, file: !1838, line: 65, baseType: !1870, size: 192, offset: 1984)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1871, line: 7, size: 192, elements: !1872)
!1871 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1872 = !{!1873, !1874, !1878}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1870, file: !1871, line: 8, baseType: !453, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1870, file: !1871, line: 9, baseType: !1875, size: 64, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64)
!1876 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1877)
!1877 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1871, line: 5, flags: DIFlagFwdDecl)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1870, file: !1871, line: 10, baseType: !7, size: 32, offset: 128)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1837, file: !1838, line: 66, baseType: !394, size: 64, offset: 2176)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !1837, file: !1838, line: 74, baseType: !366, size: 128, offset: 2240)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !1837, file: !1838, line: 75, baseType: !1697, size: 64, offset: 2368)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !1837, file: !1838, line: 76, baseType: !1239, size: 256, offset: 2432)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1837, file: !1838, line: 83, baseType: !1884, size: 256, offset: 2688)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1885, line: 102, size: 256, elements: !1886)
!1885 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1886 = !{!1887, !1888, !1889}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1884, file: !1885, line: 103, baseType: !453, size: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1884, file: !1885, line: 104, baseType: !366, size: 128, offset: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1884, file: !1885, line: 105, baseType: !1890, size: 64, offset: 192)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1885, line: 21, baseType: !1891)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!1892 = !DISubroutineType(types: !1893)
!1893 = !{null, !1894}
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1837, file: !1838, line: 85, baseType: !1896, size: 768, offset: 2944)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !1897, line: 156, size: 768, elements: !1898)
!1897 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1898 = !{!1899, !1904}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !1896, file: !1897, line: 157, baseType: !1900, size: 64)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{!72, !1903}
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1896, file: !1897, line: 158, baseType: !1905, size: 704, offset: 64)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !1897, line: 150, size: 704, elements: !1906)
!1906 = !{!1907, !1975}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1905, file: !1897, line: 152, baseType: !1908, size: 640)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !1897, line: 131, size: 640, elements: !1909)
!1909 = !{!1910, !1943, !1944, !1945, !1965, !1966, !1968, !1974}
!1910 = !DIDerivedType(tag: DW_TAG_member, scope: !1908, file: !1897, line: 132, baseType: !1911, size: 192)
!1911 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1908, file: !1897, line: 132, size: 192, elements: !1912)
!1912 = !{!1913, !1942}
!1913 = !DIDerivedType(tag: DW_TAG_member, scope: !1911, file: !1897, line: 133, baseType: !1914, size: 192)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1911, file: !1897, line: 133, size: 192, elements: !1915)
!1915 = !{!1916, !1939, !1940, !1941}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !1914, file: !1897, line: 134, baseType: !1917, size: 64)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 64)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !1897, line: 112, size: 512, elements: !1919)
!1919 = !{!1920, !1921, !1922, !1923, !1924, !1925, !1931, !1937, !1938}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !1918, file: !1897, line: 113, baseType: !374, size: 64)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1918, file: !1897, line: 114, baseType: !647, size: 64, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !1918, file: !1897, line: 115, baseType: !72, size: 32, offset: 128)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1918, file: !1897, line: 116, baseType: !723, size: 16, offset: 160)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1918, file: !1897, line: 117, baseType: !1917, size: 64, offset: 192)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !1918, file: !1897, line: 118, baseType: !1926, size: 64, offset: 256)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !1897, line: 47, baseType: !1928)
!1928 = !DISubroutineType(types: !1929)
!1929 = !{!72, !1917, !72, !647, !1930, !1046}
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1918, file: !1897, line: 119, baseType: !1932, size: 64, offset: 320)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !1897, line: 94, size: 192, elements: !1934)
!1934 = !{!1935, !1936}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1933, file: !1897, line: 95, baseType: !465, size: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1933, file: !1897, line: 96, baseType: !1177, size: 128, offset: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !1918, file: !1897, line: 120, baseType: !647, size: 64, offset: 384)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !1918, file: !1897, line: 121, baseType: !647, size: 64, offset: 448)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1914, file: !1897, line: 135, baseType: !72, size: 32, offset: 64)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1914, file: !1897, line: 136, baseType: !72, size: 32, offset: 96)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !1914, file: !1897, line: 137, baseType: !72, size: 32, offset: 128)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1911, file: !1897, line: 139, baseType: !381, size: 128, align: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !1908, file: !1897, line: 141, baseType: !1623, size: 64, offset: 192)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !1908, file: !1897, line: 142, baseType: !1917, size: 64, offset: 256)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1908, file: !1897, line: 143, baseType: !1946, size: 64, offset: 320)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !1897, line: 161, size: 960, elements: !1948)
!1948 = !{!1949, !1950, !1954, !1961}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !1947, file: !1897, line: 162, baseType: !1896, size: 768)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1947, file: !1897, line: 163, baseType: !1951, size: 64, offset: 768)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = !DISubroutineType(types: !1953)
!1953 = !{!1903, !1946}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !1947, file: !1897, line: 164, baseType: !1955, size: 64, offset: 832)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!1956 = !DISubroutineType(types: !1957)
!1957 = !{null, !1958, !1917, !1959, !1960}
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !1947, file: !1897, line: 167, baseType: !1962, size: 64, offset: 896)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64)
!1963 = !DISubroutineType(types: !1964)
!1964 = !{!72, !1958, !1917}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1908, file: !1897, line: 144, baseType: !1903, size: 64, offset: 384)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1908, file: !1897, line: 145, baseType: !1967, size: 64, offset: 448)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1908, file: !1897, line: 146, baseType: !1969, size: 64, offset: 512)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !1897, line: 124, size: 256, elements: !1971)
!1971 = !{!1972, !1973}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1970, file: !1897, line: 125, baseType: !515, size: 192, align: 64)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1970, file: !1897, line: 126, baseType: !1958, size: 64, offset: 192)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1908, file: !1897, line: 147, baseType: !934, size: 64, offset: 576)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1905, file: !1897, line: 153, baseType: !1210, size: 64, offset: 640)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1837, file: !1838, line: 86, baseType: !1958, size: 64, offset: 3712)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1837, file: !1838, line: 88, baseType: !1978, size: 64, offset: 3776)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1838, line: 92, size: 576, elements: !1980)
!1980 = !{!1981, !1982, !1983, !1984, !1985}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1979, file: !1838, line: 93, baseType: !358, size: 128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1979, file: !1838, line: 94, baseType: !1836, size: 64, offset: 128)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1979, file: !1838, line: 95, baseType: !726, size: 32, offset: 192)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1979, file: !1838, line: 96, baseType: !72, size: 32, offset: 224)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !1979, file: !1838, line: 97, baseType: !1986, size: 320, offset: 256)
!1986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 320, elements: !1987)
!1987 = !{!1988}
!1988 = !DISubrange(count: 10)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !1837, file: !1838, line: 89, baseType: !1990, size: 320, offset: 3840)
!1990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !72, size: 320, elements: !1987)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1671, file: !1672, line: 147, baseType: !1992, size: 64, offset: 1088)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1672, line: 25, size: 64, elements: !1994)
!1994 = !{!1995, !1996, !1997}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1993, file: !1672, line: 26, baseType: !465, size: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1993, file: !1672, line: 27, baseType: !72, size: 32, offset: 32)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1993, file: !1672, line: 28, baseType: !1998, offset: 64)
!1998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !734, elements: !1999)
!1999 = !{!2000}
!2000 = !DISubrange(count: 0)
!2001 = !DIDerivedType(tag: DW_TAG_member, scope: !1671, file: !1672, line: 149, baseType: !2002, size: 128, offset: 1152)
!2002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1671, file: !1672, line: 149, size: 128, elements: !2003)
!2003 = !{!2004, !2005}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2002, file: !1672, line: 150, baseType: !72, size: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2002, file: !1672, line: 151, baseType: !381, size: 128, align: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1335, file: !1336, line: 926, baseType: !1669, size: 64, offset: 8576)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1335, file: !1336, line: 929, baseType: !1669, size: 64, offset: 8640)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1335, file: !1336, line: 933, baseType: !1697, size: 64, offset: 8704)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1335, file: !1336, line: 943, baseType: !349, size: 128, offset: 8768)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1335, file: !1336, line: 945, baseType: !2011, size: 64, offset: 8896)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 64)
!2012 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1336, line: 49, flags: DIFlagFwdDecl)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1335, file: !1336, line: 956, baseType: !2014, size: 64, offset: 8960)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 64)
!2015 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1336, line: 45, flags: DIFlagFwdDecl)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1335, file: !1336, line: 959, baseType: !2017, size: 64, offset: 9024)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!2018 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1336, line: 959, flags: DIFlagFwdDecl)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1335, file: !1336, line: 962, baseType: !2020, size: 64, offset: 9088)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1336, line: 66, flags: DIFlagFwdDecl)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1335, file: !1336, line: 966, baseType: !2023, size: 64, offset: 9152)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 64)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2025, line: 31, size: 576, elements: !2026)
!2025 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2026 = !{!2027, !2028, !2031, !2034, !2037, !2038, !3708, !3711, !3712}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2024, file: !2025, line: 32, baseType: !465, size: 32)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2024, file: !2025, line: 33, baseType: !2029, size: 64, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 64)
!2030 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2025, line: 9, flags: DIFlagFwdDecl)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2024, file: !2025, line: 34, baseType: !2032, size: 64, offset: 128)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64)
!2033 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2025, line: 10, flags: DIFlagFwdDecl)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2024, file: !2025, line: 35, baseType: !2035, size: 64, offset: 192)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!2036 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2025, line: 8, flags: DIFlagFwdDecl)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2024, file: !2025, line: 36, baseType: !1616, size: 64, offset: 256)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2024, file: !2025, line: 37, baseType: !2039, size: 64, offset: 320)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2041, line: 56, size: 16896, elements: !2042)
!2041 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2042 = !{!2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2071, !2072, !2073, !2077, !2078, !2079, !2080, !2081, !2084, !2086, !2087, !2102, !2103, !2104, !2105, !2115, !2184, !2190, !2196, !2209, !2606, !3033, !3034, !3037, !3680, !3681, !3707}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !2040, file: !2041, line: 60, baseType: !1348, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2040, file: !2041, line: 63, baseType: !1348, size: 32, offset: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !2040, file: !2041, line: 66, baseType: !806, offset: 64)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !2040, file: !2041, line: 68, baseType: !7, size: 32, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !2040, file: !2041, line: 70, baseType: !7, size: 32, offset: 96)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !2040, file: !2041, line: 71, baseType: !72, size: 32, offset: 128)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !2040, file: !2041, line: 73, baseType: !806, offset: 160)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !2040, file: !2041, line: 74, baseType: !465, size: 32, offset: 160)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2040, file: !2041, line: 76, baseType: !366, size: 128, offset: 192)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !2040, file: !2041, line: 77, baseType: !366, size: 128, offset: 320)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !2040, file: !2041, line: 83, baseType: !1069, size: 64, offset: 448)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !2040, file: !2041, line: 86, baseType: !1755, size: 64, offset: 512)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2040, file: !2041, line: 88, baseType: !1836, size: 64, offset: 576)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2040, file: !2041, line: 89, baseType: !1978, size: 64, offset: 640)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !2040, file: !2041, line: 90, baseType: !2058, size: 192, offset: 704)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !2059, line: 19, size: 192, elements: !2060)
!2059 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!2060 = !{!2061, !2069, !2070}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !2058, file: !2059, line: 20, baseType: !2062, size: 128)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !2063, line: 292, size: 128, elements: !2064)
!2063 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!2064 = !{!2065, !2066, !2068}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !2062, file: !2063, line: 293, baseType: !806)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !2062, file: !2063, line: 295, baseType: !2067, size: 32)
!2067 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !359, line: 148, baseType: !7)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !2062, file: !2063, line: 296, baseType: !647, size: 64, offset: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !2058, file: !2059, line: 21, baseType: !7, size: 32, offset: 128)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !2058, file: !2059, line: 22, baseType: !7, size: 32, offset: 160)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2040, file: !2041, line: 92, baseType: !1870, size: 192, offset: 896)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !2040, file: !2041, line: 94, baseType: !366, size: 128, offset: 1088)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !2040, file: !2041, line: 95, baseType: !2074, size: 64, offset: 1216)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 64)
!2075 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !2076, line: 17, flags: DIFlagFwdDecl)
!2076 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !2040, file: !2041, line: 96, baseType: !2074, size: 64, offset: 1280)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2040, file: !2041, line: 99, baseType: !1896, size: 768, offset: 1344)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !2040, file: !2041, line: 102, baseType: !527, size: 64, offset: 2112)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !2040, file: !2041, line: 103, baseType: !527, size: 64, offset: 2176)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !2040, file: !2041, line: 105, baseType: !2082, size: 64, offset: 2240)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2083 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !2041, line: 48, flags: DIFlagFwdDecl)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !2040, file: !2041, line: 107, baseType: !2085, size: 64, offset: 2304)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !2040, file: !2041, line: 108, baseType: !2085, size: 64, offset: 2368)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !2040, file: !2041, line: 109, baseType: !2088, size: 64, offset: 2432)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !2089, line: 70, size: 64, elements: !2090)
!2089 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!2090 = !{!2091}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2088, file: !2089, line: 71, baseType: !2092, size: 64)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !2089, line: 54, size: 192, elements: !2094)
!2094 = !{!2095, !2100, !2101}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !2093, file: !2089, line: 55, baseType: !2096, size: 64)
!2096 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !2089, line: 51, baseType: !2097)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64)
!2098 = !DISubroutineType(types: !2099)
!2099 = !{!72, !2092, !394, !647}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2093, file: !2089, line: 56, baseType: !2092, size: 64, offset: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2093, file: !2089, line: 57, baseType: !72, size: 32, offset: 128)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !2040, file: !2041, line: 114, baseType: !784, size: 32, offset: 2496)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !2040, file: !2041, line: 116, baseType: !372, size: 64, offset: 2560)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !2040, file: !2041, line: 119, baseType: !366, size: 128, offset: 2624)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !2040, file: !2041, line: 121, baseType: !2106, size: 256, offset: 2752)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !2107, line: 8, size: 256, elements: !2108)
!2107 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!2108 = !{!2109, !2110, !2111, !2112}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !2106, file: !2107, line: 10, baseType: !1958, size: 64)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !2106, file: !2107, line: 12, baseType: !72, size: 32, offset: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !2106, file: !2107, line: 15, baseType: !616, size: 64, offset: 128)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !2106, file: !2107, line: 16, baseType: !2113, size: 64, offset: 192)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64)
!2114 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !2107, line: 6, flags: DIFlagFwdDecl)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !2040, file: !2041, line: 122, baseType: !2116, size: 832, offset: 3008)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !2076, line: 7, size: 832, elements: !2117)
!2117 = !{!2118, !2125, !2136, !2144, !2152, !2153, !2161, !2169, !2170, !2171, !2172, !2173, !2179}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !2116, file: !2076, line: 8, baseType: !2119, size: 64)
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 64)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !2121, line: 92, size: 1024, elements: !2122)
!2121 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!2122 = !{!2123}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2120, file: !2121, line: 93, baseType: !2124, size: 1024)
!2124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 1024, elements: !351)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !2116, file: !2076, line: 9, baseType: !2126, size: 64, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !2121, line: 51, size: 2368, elements: !2128)
!2128 = !{!2129, !2133}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2127, file: !2121, line: 53, baseType: !2130, size: 2368)
!2130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !413, size: 2368, elements: !2131)
!2131 = !{!2132}
!2132 = !DISubrange(count: 37)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !2127, file: !2121, line: 54, baseType: !2134, offset: 2368)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !2135, line: 68, elements: !820)
!2135 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !2116, file: !2076, line: 10, baseType: !2137, size: 64, offset: 128)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 64)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !2121, line: 104, size: 7936, elements: !2139)
!2139 = !{!2140}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2138, file: !2121, line: 105, baseType: !2141, size: 7936)
!2141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 7936, elements: !2142)
!2142 = !{!2143}
!2143 = !DISubrange(count: 124)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !2116, file: !2076, line: 11, baseType: !2145, size: 64, offset: 192)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 64)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !2121, line: 98, size: 576, elements: !2147)
!2147 = !{!2148}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2146, file: !2121, line: 99, baseType: !2149, size: 576)
!2149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 576, elements: !2150)
!2150 = !{!2151}
!2151 = !DISubrange(count: 9)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !2116, file: !2076, line: 12, baseType: !2145, size: 64, offset: 256)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !2116, file: !2076, line: 13, baseType: !2154, size: 64, offset: 320)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !2121, line: 59, size: 1792, elements: !2156)
!2156 = !{!2157}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2155, file: !2121, line: 60, baseType: !2158, size: 1792)
!2158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 1792, elements: !2159)
!2159 = !{!2160}
!2160 = !DISubrange(count: 28)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !2116, file: !2076, line: 14, baseType: !2162, size: 64, offset: 384)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !2121, line: 64, size: 32768, elements: !2164)
!2164 = !{!2165}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2163, file: !2121, line: 65, baseType: !2166, size: 32768)
!2166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 32768, elements: !2167)
!2167 = !{!2168}
!2168 = !DISubrange(count: 512)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !2116, file: !2076, line: 17, baseType: !2074, size: 64, offset: 448)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !2116, file: !2076, line: 18, baseType: !2145, size: 64, offset: 512)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !2116, file: !2076, line: 19, baseType: !2145, size: 64, offset: 576)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !2116, file: !2076, line: 20, baseType: !2126, size: 64, offset: 640)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !2116, file: !2076, line: 21, baseType: !2174, size: 64, offset: 704)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!2175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !2121, line: 71, size: 384, elements: !2176)
!2176 = !{!2177}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2175, file: !2121, line: 72, baseType: !2178, size: 384)
!2178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 384, elements: !1748)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !2116, file: !2076, line: 22, baseType: !2180, size: 64, offset: 768)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !2121, line: 81, size: 32768, elements: !2182)
!2182 = !{!2183}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2181, file: !2121, line: 82, baseType: !2166, size: 32768)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !2040, file: !2041, line: 123, baseType: !2185, size: 256, offset: 3840)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !2186, line: 11, size: 256, elements: !2187)
!2186 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!2187 = !{!2188, !2189}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !2185, file: !2186, line: 12, baseType: !1031, size: 192)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !2185, file: !2186, line: 13, baseType: !934, size: 64, offset: 192)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !2040, file: !2041, line: 124, baseType: !2191, size: 128, offset: 4096)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !2192, line: 9, size: 128, elements: !2193)
!2192 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!2193 = !{!2194, !2195}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !2191, file: !2192, line: 10, baseType: !72, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !2191, file: !2192, line: 11, baseType: !1958, size: 64, offset: 64)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !2040, file: !2041, line: 125, baseType: !2197, size: 512, offset: 4224)
!2197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !2198, line: 11, size: 512, elements: !2199)
!2198 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!2199 = !{!2200, !2201, !2202, !2203, !2204}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2197, file: !2198, line: 12, baseType: !1210, size: 64)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !2197, file: !2198, line: 13, baseType: !2085, size: 64, offset: 64)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2197, file: !2198, line: 15, baseType: !7, size: 32, offset: 128)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !2197, file: !2198, line: 16, baseType: !784, size: 32, offset: 160)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !2197, file: !2198, line: 17, baseType: !2205, size: 320, offset: 192)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !2089, line: 65, size: 320, elements: !2206)
!2206 = !{!2207, !2208}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !2205, file: !2089, line: 66, baseType: !1239, size: 256)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2205, file: !2089, line: 67, baseType: !2092, size: 64, offset: 256)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !2040, file: !2041, line: 126, baseType: !2210, size: 5440, offset: 4736)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !2211, line: 43, size: 5440, elements: !2212)
!2211 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!2212 = !{!2213, !2214, !2215, !2216, !2217, !2218, !2221, !2222, !2235, !2236, !2237, !2238, !2239, !2240, !2242, !2243, !2256, !2257, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2479, !2480, !2481, !2482, !2483, !2491, !2492, !2493, !2497, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2517, !2518, !2520, !2521, !2595, !2596, !2597, !2598, !2599}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !2210, file: !2211, line: 45, baseType: !1958, size: 64)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2210, file: !2211, line: 46, baseType: !1958, size: 64, offset: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !2210, file: !2211, line: 47, baseType: !1958, size: 64, offset: 128)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2210, file: !2211, line: 48, baseType: !1958, size: 64, offset: 192)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !2210, file: !2211, line: 49, baseType: !1958, size: 64, offset: 256)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2210, file: !2211, line: 51, baseType: !2219, size: 64, offset: 320)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 64)
!2220 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !2211, line: 16, flags: DIFlagFwdDecl)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2210, file: !2211, line: 52, baseType: !2219, size: 64, offset: 384)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !2210, file: !2211, line: 53, baseType: !2223, size: 64, offset: 448)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 64)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !2225, line: 122, size: 320, elements: !2226)
!2225 = !DIFile(filename: "./include/net/ip.h", directory: "/home/lizy2001/genbc/linux")
!2226 = !{!2227, !2228, !2229, !2234}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2224, file: !2225, line: 123, baseType: !2223, size: 64)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !2224, file: !2225, line: 124, baseType: !527, size: 64, offset: 64)
!2229 = !DIDerivedType(tag: DW_TAG_member, scope: !2224, file: !2225, line: 125, baseType: !2230, size: 64, offset: 128)
!2230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2224, file: !2225, line: 125, size: 64, elements: !2231)
!2231 = !{!2232, !2233}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !2230, file: !2225, line: 126, baseType: !628, size: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sk", scope: !2230, file: !2225, line: 127, baseType: !527, size: 64)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2224, file: !2225, line: 129, baseType: !381, size: 128, align: 64, offset: 192)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !2210, file: !2211, line: 54, baseType: !1031, size: 192, offset: 512)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !2210, file: !2211, line: 62, baseType: !617, size: 8, offset: 704)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2210, file: !2211, line: 66, baseType: !2085, size: 64, offset: 768)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !2210, file: !2211, line: 67, baseType: !617, size: 8, offset: 832)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !2210, file: !2211, line: 68, baseType: !527, size: 64, offset: 896)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2210, file: !2211, line: 70, baseType: !2241, size: 64, offset: 960)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2210, file: !2211, line: 71, baseType: !527, size: 64, offset: 1024)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2210, file: !2211, line: 73, baseType: !2244, size: 64, offset: 1088)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 64)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !2246, line: 61, size: 128, elements: !2247)
!2246 = !DIFile(filename: "./include/net/inetpeer.h", directory: "/home/lizy2001/genbc/linux")
!2247 = !{!2248, !2249, !2255}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2245, file: !2246, line: 62, baseType: !1210, size: 64)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2245, file: !2246, line: 63, baseType: !2250, size: 32, offset: 64)
!2250 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !757, line: 805, baseType: !2251)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !757, line: 798, size: 32, elements: !2252)
!2252 = !{!2253, !2254}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2251, file: !757, line: 803, baseType: !756, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2251, file: !757, line: 804, baseType: !806, offset: 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !2245, file: !2246, line: 64, baseType: !72, size: 32, offset: 96)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2210, file: !2211, line: 74, baseType: !2241, size: 64, offset: 1152)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2210, file: !2211, line: 75, baseType: !2258, size: 64, offset: 1216)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !2260, line: 9, size: 1728, elements: !2261)
!2260 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!2261 = !{!2262, !2263, !2264, !2265, !2266, !2395, !2396, !2397, !2398, !2399}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !2259, file: !2260, line: 11, baseType: !590, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !2259, file: !2260, line: 12, baseType: !590, size: 64, offset: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2259, file: !2260, line: 13, baseType: !72, size: 32, offset: 128)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !2259, file: !2260, line: 14, baseType: !72, size: 32, offset: 160)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2259, file: !2260, line: 15, baseType: !2267, size: 64, offset: 192)
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 64)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !2260, line: 98, size: 960, elements: !2269)
!2269 = !{!2270, !2271, !2342, !2346, !2347, !2351, !2352, !2393, !2394}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !2268, file: !2260, line: 99, baseType: !7, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2268, file: !2260, line: 101, baseType: !2272, size: 64, offset: 64)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2273 = !DISubroutineType(types: !2274)
!2274 = !{null, !2275, !2340}
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 64)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !2260, line: 77, size: 1408, elements: !2277)
!2277 = !{!2278, !2284, !2316, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2276, file: !2260, line: 78, baseType: !2279, size: 64)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !2280, line: 17, size: 64, elements: !2281)
!2280 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!2281 = !{!2282}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2279, file: !2280, line: 18, baseType: !2283, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2276, file: !2260, line: 82, baseType: !2285, size: 352, offset: 64)
!2285 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2276, file: !2260, line: 79, size: 352, elements: !2286)
!2286 = !{!2287, !2296}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2285, file: !2260, line: 80, baseType: !2288, size: 160)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !2260, line: 41, size: 160, elements: !2289)
!2289 = !{!2290, !2291, !2292, !2293, !2294, !2295}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2288, file: !2260, line: 42, baseType: !543, size: 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2288, file: !2260, line: 43, baseType: !543, size: 32, offset: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2288, file: !2260, line: 44, baseType: !784, size: 32, offset: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !2288, file: !2260, line: 45, baseType: !784, size: 32, offset: 96)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2288, file: !2260, line: 46, baseType: !566, size: 16, offset: 128)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2288, file: !2260, line: 47, baseType: !1115, size: 16, offset: 144)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2285, file: !2260, line: 81, baseType: !2297, size: 352)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !2260, line: 50, size: 352, elements: !2298)
!2298 = !{!2299, !2312, !2313, !2314, !2315}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2297, file: !2260, line: 51, baseType: !2300, size: 128)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !2301, line: 33, size: 128, elements: !2302)
!2301 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!2302 = !{!2303}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !2300, file: !2301, line: 40, baseType: !2304, size: 128)
!2304 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2300, file: !2301, line: 34, size: 128, elements: !2305)
!2305 = !{!2306, !2308, !2310}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !2304, file: !2301, line: 35, baseType: !2307, size: 128)
!2307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1475, size: 128, elements: !351)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !2304, file: !2301, line: 37, baseType: !2309, size: 128)
!2309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !566, size: 128, elements: !1448)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !2304, file: !2301, line: 38, baseType: !2311, size: 128)
!2311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !543, size: 128, elements: !1279)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2297, file: !2260, line: 52, baseType: !2300, size: 128, offset: 128)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2297, file: !2260, line: 53, baseType: !784, size: 32, offset: 256)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2297, file: !2260, line: 54, baseType: !543, size: 32, offset: 288)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !2297, file: !2260, line: 55, baseType: !784, size: 32, offset: 320)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2276, file: !2260, line: 83, baseType: !2317, size: 320, offset: 448)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2318, line: 11, size: 320, elements: !2319)
!2318 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2319 = !{!2320, !2321, !2322, !2327}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2317, file: !2318, line: 16, baseType: !358, size: 128)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2317, file: !2318, line: 17, baseType: !394, size: 64, offset: 128)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2317, file: !2318, line: 18, baseType: !2323, size: 64, offset: 192)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 64)
!2324 = !DISubroutineType(types: !2325)
!2325 = !{null, !2326}
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2317, file: !2318, line: 19, baseType: !784, size: 32, offset: 256)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2276, file: !2260, line: 84, baseType: !806, offset: 768)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2276, file: !2260, line: 85, baseType: !1348, size: 32, offset: 768)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !2276, file: !2260, line: 86, baseType: !1210, size: 64, offset: 832)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !2276, file: !2260, line: 87, baseType: !497, size: 64, offset: 896)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !2276, file: !2260, line: 88, baseType: !497, size: 64, offset: 960)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2276, file: !2260, line: 89, baseType: !1418, size: 64, offset: 1024)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2276, file: !2260, line: 90, baseType: !72, size: 32, offset: 1088)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !2276, file: !2260, line: 91, baseType: !72, size: 32, offset: 1120)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2276, file: !2260, line: 92, baseType: !1475, size: 8, offset: 1152)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2276, file: !2260, line: 93, baseType: !1115, size: 16, offset: 1168)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2276, file: !2260, line: 94, baseType: !2258, size: 64, offset: 1216)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2276, file: !2260, line: 95, baseType: !381, size: 128, align: 64, offset: 1280)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 64)
!2341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !2268, file: !2260, line: 103, baseType: !2343, size: 64, offset: 128)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 64)
!2344 = !DISubroutineType(types: !2345)
!2345 = !{null, !2275}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !2268, file: !2260, line: 104, baseType: !2323, size: 64, offset: 192)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !2268, file: !2260, line: 105, baseType: !2348, size: 64, offset: 256)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !2350, line: 323, flags: DIFlagFwdDecl)
!2350 = !DIFile(filename: "./include/linux/signal.h", directory: "/home/lizy2001/genbc/linux")
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !2268, file: !2260, line: 106, baseType: !374, size: 64, offset: 320)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !2268, file: !2260, line: 107, baseType: !2353, size: 320, offset: 384)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !2280, line: 56, size: 320, elements: !2354)
!2354 = !{!2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2367, !2369}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !2353, file: !2280, line: 57, baseType: !1115, size: 16)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2353, file: !2280, line: 58, baseType: !1115, size: 16, offset: 16)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !2353, file: !2280, line: 59, baseType: !1115, size: 16, offset: 32)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !2353, file: !2280, line: 60, baseType: !1115, size: 16, offset: 48)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2353, file: !2280, line: 61, baseType: !7, size: 32, offset: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !2353, file: !2280, line: 62, baseType: !1115, size: 16, offset: 96)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !2353, file: !2280, line: 63, baseType: !617, size: 8, offset: 112)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !2353, file: !2280, line: 64, baseType: !2363, size: 64, offset: 128)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !2280, line: 38, baseType: !2364)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 64)
!2365 = !DISubroutineType(types: !2366)
!2366 = !{!784, !2340, !784, !784}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !2353, file: !2280, line: 65, baseType: !2368, size: 64, offset: 192)
!2368 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !2280, line: 39, baseType: !2364)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !2353, file: !2280, line: 66, baseType: !2370, size: 64, offset: 256)
!2370 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !2280, line: 40, baseType: !2371)
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 64)
!2372 = !DISubroutineType(types: !2373)
!2373 = !{!72, !2374, !2340}
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !2280, line: 33, size: 128, elements: !2376)
!2376 = !{!2377, !2392}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !2375, file: !2280, line: 34, baseType: !2378, size: 64)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 64)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !2280, line: 81, size: 1024, elements: !2380)
!2380 = !{!2381, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2379, file: !2280, line: 82, baseType: !2382, size: 64)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64)
!2383 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !2280, line: 26, flags: DIFlagFwdDecl)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2379, file: !2280, line: 83, baseType: !7, size: 32, offset: 64)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !2379, file: !2280, line: 84, baseType: !7, size: 32, offset: 96)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2379, file: !2280, line: 85, baseType: !2353, size: 320, offset: 128)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !2379, file: !2280, line: 86, baseType: !617, size: 8, offset: 448)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !2379, file: !2280, line: 87, baseType: !1884, size: 256, offset: 512)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2379, file: !2280, line: 88, baseType: !1031, size: 192, offset: 768)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2379, file: !2280, line: 89, baseType: !806, offset: 960)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !2379, file: !2280, line: 90, baseType: !465, size: 32, offset: 960)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2375, file: !2280, line: 35, baseType: !2340, size: 64, offset: 64)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2268, file: !2260, line: 108, baseType: !1348, size: 32, offset: 704)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !2268, file: !2260, line: 109, baseType: !1624, size: 192, offset: 768)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2259, file: !2260, line: 16, baseType: !2039, size: 64, offset: 256)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2259, file: !2260, line: 17, baseType: !617, size: 8, offset: 320)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !2259, file: !2260, line: 19, baseType: !2379, size: 1024, offset: 384)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !2259, file: !2260, line: 22, baseType: !453, size: 64, offset: 1408)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !2259, file: !2260, line: 23, baseType: !1884, size: 256, offset: 1472)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !2210, file: !2211, line: 87, baseType: !72, size: 32, offset: 1280)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !2210, file: !2211, line: 88, baseType: !72, size: 32, offset: 1312)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !2210, file: !2211, line: 89, baseType: !72, size: 32, offset: 1344)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !2210, file: !2211, line: 90, baseType: !72, size: 32, offset: 1376)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !2210, file: !2211, line: 91, baseType: !72, size: 32, offset: 1408)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !2210, file: !2211, line: 92, baseType: !72, size: 32, offset: 1440)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !2210, file: !2211, line: 94, baseType: !2407, size: 128, offset: 1472)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !2211, line: 21, size: 128, elements: !2408)
!2408 = !{!2409, !2410, !2412}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2407, file: !2211, line: 22, baseType: !2250, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2407, file: !2211, line: 23, baseType: !2411, size: 64, offset: 32)
!2411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !72, size: 64, elements: !555)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !2407, file: !2211, line: 24, baseType: !617, size: 8, offset: 96)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !2210, file: !2211, line: 96, baseType: !72, size: 32, offset: 1600)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !2210, file: !2211, line: 97, baseType: !72, size: 32, offset: 1632)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !2210, file: !2211, line: 99, baseType: !72, size: 32, offset: 1664)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !2210, file: !2211, line: 100, baseType: !72, size: 32, offset: 1696)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !2210, file: !2211, line: 101, baseType: !72, size: 32, offset: 1728)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !2210, file: !2211, line: 102, baseType: !72, size: 32, offset: 1760)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !2210, file: !2211, line: 103, baseType: !72, size: 32, offset: 1792)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !2210, file: !2211, line: 104, baseType: !72, size: 32, offset: 1824)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !2210, file: !2211, line: 106, baseType: !72, size: 32, offset: 1856)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !2210, file: !2211, line: 107, baseType: !72, size: 32, offset: 1888)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !2210, file: !2211, line: 111, baseType: !72, size: 32, offset: 1920)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !2210, file: !2211, line: 112, baseType: !72, size: 32, offset: 1952)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !2210, file: !2211, line: 114, baseType: !72, size: 32, offset: 1984)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !2210, file: !2211, line: 116, baseType: !72, size: 32, offset: 2016)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !2210, file: !2211, line: 117, baseType: !72, size: 32, offset: 2048)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !2210, file: !2211, line: 121, baseType: !72, size: 32, offset: 2080)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !2210, file: !2211, line: 122, baseType: !72, size: 32, offset: 2112)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !2210, file: !2211, line: 123, baseType: !72, size: 32, offset: 2144)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !2210, file: !2211, line: 124, baseType: !72, size: 32, offset: 2176)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !2210, file: !2211, line: 125, baseType: !72, size: 32, offset: 2208)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !2210, file: !2211, line: 126, baseType: !784, size: 32, offset: 2240)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !2210, file: !2211, line: 128, baseType: !72, size: 32, offset: 2272)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !2210, file: !2211, line: 129, baseType: !72, size: 32, offset: 2304)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !2210, file: !2211, line: 130, baseType: !72, size: 32, offset: 2336)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !2210, file: !2211, line: 132, baseType: !72, size: 32, offset: 2368)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !2210, file: !2211, line: 133, baseType: !72, size: 32, offset: 2400)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !2210, file: !2211, line: 134, baseType: !72, size: 32, offset: 2432)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !2210, file: !2211, line: 135, baseType: !72, size: 32, offset: 2464)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !2210, file: !2211, line: 136, baseType: !72, size: 32, offset: 2496)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !2210, file: !2211, line: 137, baseType: !72, size: 32, offset: 2528)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !2210, file: !2211, line: 138, baseType: !72, size: 32, offset: 2560)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !2210, file: !2211, line: 139, baseType: !72, size: 32, offset: 2592)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !2210, file: !2211, line: 140, baseType: !7, size: 32, offset: 2624)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !2210, file: !2211, line: 141, baseType: !72, size: 32, offset: 2656)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !2210, file: !2211, line: 142, baseType: !72, size: 32, offset: 2688)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !2210, file: !2211, line: 143, baseType: !72, size: 32, offset: 2720)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !2210, file: !2211, line: 144, baseType: !72, size: 32, offset: 2752)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !2210, file: !2211, line: 145, baseType: !72, size: 32, offset: 2784)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !2210, file: !2211, line: 146, baseType: !72, size: 32, offset: 2816)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !2210, file: !2211, line: 147, baseType: !72, size: 32, offset: 2848)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !2210, file: !2211, line: 148, baseType: !72, size: 32, offset: 2880)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !2210, file: !2211, line: 149, baseType: !72, size: 32, offset: 2912)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !2210, file: !2211, line: 150, baseType: !72, size: 32, offset: 2944)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !2210, file: !2211, line: 151, baseType: !72, size: 32, offset: 2976)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !2210, file: !2211, line: 152, baseType: !72, size: 32, offset: 3008)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !2210, file: !2211, line: 153, baseType: !72, size: 32, offset: 3040)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !2210, file: !2211, line: 154, baseType: !72, size: 32, offset: 3072)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !2210, file: !2211, line: 155, baseType: !72, size: 32, offset: 3104)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !2210, file: !2211, line: 156, baseType: !72, size: 32, offset: 3136)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !2210, file: !2211, line: 157, baseType: !72, size: 32, offset: 3168)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !2210, file: !2211, line: 158, baseType: !72, size: 32, offset: 3200)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !2210, file: !2211, line: 159, baseType: !72, size: 32, offset: 3232)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !2210, file: !2211, line: 160, baseType: !72, size: 32, offset: 3264)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !2210, file: !2211, line: 161, baseType: !72, size: 32, offset: 3296)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !2210, file: !2211, line: 162, baseType: !72, size: 32, offset: 3328)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !2210, file: !2211, line: 163, baseType: !72, size: 32, offset: 3360)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !2210, file: !2211, line: 164, baseType: !72, size: 32, offset: 3392)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !2210, file: !2211, line: 165, baseType: !72, size: 32, offset: 3424)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !2210, file: !2211, line: 166, baseType: !72, size: 32, offset: 3456)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !2210, file: !2211, line: 167, baseType: !72, size: 32, offset: 3488)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !2210, file: !2211, line: 168, baseType: !72, size: 32, offset: 3520)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !2210, file: !2211, line: 169, baseType: !72, size: 32, offset: 3552)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !2210, file: !2211, line: 170, baseType: !72, size: 32, offset: 3584)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !2210, file: !2211, line: 171, baseType: !72, size: 32, offset: 3616)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !2210, file: !2211, line: 172, baseType: !2478, size: 96, offset: 3648)
!2478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !72, size: 96, elements: !944)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !2210, file: !2211, line: 173, baseType: !2478, size: 96, offset: 3744)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !2210, file: !2211, line: 174, baseType: !72, size: 32, offset: 3840)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !2210, file: !2211, line: 175, baseType: !394, size: 64, offset: 3904)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !2210, file: !2211, line: 176, baseType: !394, size: 64, offset: 3968)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !2210, file: !2211, line: 177, baseType: !2484, size: 192, offset: 4032)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !2211, line: 34, size: 192, elements: !2485)
!2485 = !{!2486, !2487, !2490}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !2484, file: !2211, line: 35, baseType: !465, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !2484, file: !2211, line: 37, baseType: !2488, size: 64, offset: 64)
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 64)
!2489 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !2211, line: 32, flags: DIFlagFwdDecl)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !2484, file: !2211, line: 38, baseType: !72, size: 32, offset: 128)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !2210, file: !2211, line: 178, baseType: !72, size: 32, offset: 4224)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !2210, file: !2211, line: 179, baseType: !72, size: 32, offset: 4256)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !2210, file: !2211, line: 180, baseType: !2494, size: 64, offset: 4288)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64)
!2495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2496)
!2496 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !2211, line: 180, flags: DIFlagFwdDecl)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !2210, file: !2211, line: 181, baseType: !2498, size: 64, offset: 4352)
!2498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 64)
!2499 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !2211, line: 41, flags: DIFlagFwdDecl)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !2210, file: !2211, line: 182, baseType: !806, offset: 4416)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !2210, file: !2211, line: 183, baseType: !7, size: 32, offset: 4416)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !2210, file: !2211, line: 184, baseType: !465, size: 32, offset: 4448)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !2210, file: !2211, line: 185, baseType: !394, size: 64, offset: 4480)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !2210, file: !2211, line: 186, baseType: !72, size: 32, offset: 4544)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !2210, file: !2211, line: 188, baseType: !72, size: 32, offset: 4576)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !2210, file: !2211, line: 189, baseType: !72, size: 32, offset: 4608)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !2210, file: !2211, line: 195, baseType: !72, size: 32, offset: 4640)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !2210, file: !2211, line: 196, baseType: !72, size: 32, offset: 4672)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !2210, file: !2211, line: 197, baseType: !72, size: 32, offset: 4704)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !2210, file: !2211, line: 198, baseType: !72, size: 32, offset: 4736)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !2210, file: !2211, line: 200, baseType: !2512, size: 96, offset: 4768)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !2211, line: 27, size: 96, elements: !2513)
!2513 = !{!2514, !2515}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2512, file: !2211, line: 28, baseType: !2250, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2512, file: !2211, line: 29, baseType: !2516, size: 64, offset: 32)
!2516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !734, size: 64, elements: !555)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2210, file: !2211, line: 202, baseType: !465, size: 32, offset: 4864)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !2210, file: !2211, line: 205, baseType: !2519, size: 64, offset: 4928)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !2210, file: !2211, line: 206, baseType: !72, size: 32, offset: 4992)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2210, file: !2211, line: 222, baseType: !2522, size: 64, offset: 5056)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !2524, line: 28, size: 512, elements: !2525)
!2524 = !DIFile(filename: "./include/net/fib_notifier.h", directory: "/home/lizy2001/genbc/linux")
!2525 = !{!2526, !2527, !2528, !2532, !2593, !2594}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2523, file: !2524, line: 29, baseType: !72, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2523, file: !2524, line: 30, baseType: !366, size: 128, offset: 64)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq_read", scope: !2523, file: !2524, line: 31, baseType: !2529, size: 64, offset: 192)
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 64)
!2530 = !DISubroutineType(types: !2531)
!2531 = !{!7, !2039}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "fib_dump", scope: !2523, file: !2524, line: 32, baseType: !2533, size: 64, offset: 256)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 64)
!2534 = !DISubroutineType(types: !2535)
!2535 = !{!72, !2039, !2092, !2536}
!2536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2537, size: 64)
!2537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !2538, line: 75, size: 384, elements: !2539)
!2538 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2539 = !{!2540, !2541, !2549, !2588, !2592}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !2537, file: !2538, line: 76, baseType: !374, size: 64)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !2537, file: !2538, line: 77, baseType: !2542, size: 64, offset: 64)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 64)
!2543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2544)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !2545, line: 213, size: 32, elements: !2546)
!2545 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2546 = !{!2547, !2548}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !2544, file: !2545, line: 214, baseType: !553, size: 16)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !2544, file: !2545, line: 215, baseType: !553, size: 16, offset: 16)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2537, file: !2538, line: 78, baseType: !2550, size: 64, offset: 128)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 64)
!2551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2552)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !2553, line: 315, size: 128, elements: !2554)
!2553 = !DIFile(filename: "./include/net/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2554 = !{!2555, !2556, !2557, !2558}
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2552, file: !2553, line: 316, baseType: !1474, size: 8)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "validation_type", scope: !2552, file: !2553, line: 317, baseType: !1474, size: 8, offset: 8)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2552, file: !2553, line: 318, baseType: !1115, size: 16, offset: 16)
!2558 = !DIDerivedType(tag: DW_TAG_member, scope: !2552, file: !2553, line: 319, baseType: !2559, size: 64, offset: 64)
!2559 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2552, file: !2553, line: 319, size: 64, elements: !2560)
!2560 = !{!2561, !2563, !2564, !2565, !2566, !2572, !2578, !2583, !2587}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "bitfield32_valid", scope: !2559, file: !2553, line: 320, baseType: !2562, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !784)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2559, file: !2553, line: 321, baseType: !2562, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "reject_message", scope: !2559, file: !2553, line: 322, baseType: !374, size: 64)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "nested_policy", scope: !2559, file: !2553, line: 323, baseType: !2550, size: 64)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2559, file: !2553, line: 324, baseType: !2567, size: 64)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation", file: !2553, line: 189, size: 128, elements: !2569)
!2569 = !{!2570, !2571}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2568, file: !2553, line: 190, baseType: !413, size: 64)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2568, file: !2553, line: 190, baseType: !413, size: 64, offset: 64)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "range_signed", scope: !2559, file: !2553, line: 325, baseType: !2573, size: 64)
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 64)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation_signed", file: !2553, line: 193, size: 128, elements: !2575)
!2575 = !{!2576, !2577}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2574, file: !2553, line: 194, baseType: !459, size: 64)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2574, file: !2553, line: 194, baseType: !459, size: 64, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, scope: !2559, file: !2553, line: 326, baseType: !2579, size: 32)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2559, file: !2553, line: 326, size: 32, elements: !2580)
!2580 = !{!2581, !2582}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2579, file: !2553, line: 327, baseType: !1321, size: 16)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2579, file: !2553, line: 327, baseType: !1321, size: 16, offset: 16)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !2559, file: !2553, line: 329, baseType: !2584, size: 64)
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 64)
!2585 = !DISubroutineType(types: !2586)
!2586 = !{!72, !2542, !2536}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "strict_start_type", scope: !2559, file: !2553, line: 349, baseType: !1115, size: 16)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !2537, file: !2538, line: 79, baseType: !2589, size: 160, offset: 192)
!2589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1474, size: 160, elements: !2590)
!2590 = !{!2591}
!2591 = !DISubrange(count: 20)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !2537, file: !2538, line: 80, baseType: !1474, size: 8, offset: 352)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2523, file: !2524, line: 34, baseType: !929, size: 64, offset: 320)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2523, file: !2524, line: 35, baseType: !381, size: 128, align: 64, offset: 384)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !2210, file: !2211, line: 223, baseType: !7, size: 32, offset: 5120)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !2210, file: !2211, line: 225, baseType: !2522, size: 64, offset: 5184)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2210, file: !2211, line: 226, baseType: !7, size: 32, offset: 5248)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !2210, file: !2211, line: 228, baseType: !465, size: 32, offset: 5280)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !2210, file: !2211, line: 229, baseType: !2600, size: 128, offset: 5312)
!2600 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !2601, line: 22, baseType: !2602)
!2601 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2601, line: 20, size: 128, elements: !2603)
!2603 = !{!2604}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2602, file: !2601, line: 21, baseType: !2605, size: 128)
!2605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !413, size: 128, elements: !555)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !2040, file: !2041, line: 128, baseType: !2607, size: 4608, offset: 10176)
!2607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !2608, line: 56, size: 4608, elements: !2609)
!2608 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!2609 = !{!2610, !2650, !2704, !2705, !2706, !2707, !2710, !2713, !2716, !2717, !2718, !2721, !2722, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3024, !3025, !3026, !3027}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !2607, file: !2608, line: 57, baseType: !2611, size: 1600)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !2608, line: 15, size: 1600, elements: !2612)
!2612 = !{!2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !2611, file: !2608, line: 17, baseType: !1958, size: 64)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2611, file: !2608, line: 18, baseType: !1958, size: 64, offset: 64)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !2611, file: !2608, line: 19, baseType: !1958, size: 64, offset: 128)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2611, file: !2608, line: 20, baseType: !1958, size: 64, offset: 192)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !2611, file: !2608, line: 21, baseType: !1958, size: 64, offset: 256)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !2611, file: !2608, line: 23, baseType: !72, size: 32, offset: 320)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !2611, file: !2608, line: 24, baseType: !72, size: 32, offset: 352)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !2611, file: !2608, line: 25, baseType: !72, size: 32, offset: 384)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !2611, file: !2608, line: 26, baseType: !72, size: 32, offset: 416)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !2611, file: !2608, line: 27, baseType: !72, size: 32, offset: 448)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !2611, file: !2608, line: 28, baseType: !72, size: 32, offset: 480)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !2611, file: !2608, line: 29, baseType: !72, size: 32, offset: 512)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !2611, file: !2608, line: 30, baseType: !72, size: 32, offset: 544)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !2611, file: !2608, line: 31, baseType: !72, size: 32, offset: 576)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !2611, file: !2608, line: 32, baseType: !72, size: 32, offset: 608)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !2611, file: !2608, line: 33, baseType: !72, size: 32, offset: 640)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !2611, file: !2608, line: 34, baseType: !72, size: 32, offset: 672)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !2611, file: !2608, line: 35, baseType: !72, size: 32, offset: 704)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !2611, file: !2608, line: 36, baseType: !72, size: 32, offset: 736)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !2611, file: !2608, line: 37, baseType: !72, size: 32, offset: 768)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !2611, file: !2608, line: 38, baseType: !72, size: 32, offset: 800)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !2611, file: !2608, line: 39, baseType: !2635, size: 256, offset: 832)
!2635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 256, elements: !1279)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !2611, file: !2608, line: 40, baseType: !2519, size: 64, offset: 1088)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !2611, file: !2608, line: 41, baseType: !72, size: 32, offset: 1152)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !2611, file: !2608, line: 42, baseType: !72, size: 32, offset: 1184)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !2611, file: !2608, line: 43, baseType: !72, size: 32, offset: 1216)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !2611, file: !2608, line: 44, baseType: !72, size: 32, offset: 1248)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !2611, file: !2608, line: 45, baseType: !72, size: 32, offset: 1280)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !2611, file: !2608, line: 46, baseType: !72, size: 32, offset: 1312)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !2611, file: !2608, line: 47, baseType: !72, size: 32, offset: 1344)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !2611, file: !2608, line: 48, baseType: !72, size: 32, offset: 1376)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !2611, file: !2608, line: 49, baseType: !72, size: 32, offset: 1408)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !2611, file: !2608, line: 50, baseType: !72, size: 32, offset: 1440)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !2611, file: !2608, line: 51, baseType: !72, size: 32, offset: 1472)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !2611, file: !2608, line: 52, baseType: !72, size: 32, offset: 1504)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !2611, file: !2608, line: 53, baseType: !617, size: 8, offset: 1536)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2607, file: !2608, line: 58, baseType: !2651, size: 64, offset: 1600)
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 64)
!2652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !2653, line: 12, size: 1600, elements: !2654)
!2653 = !DIFile(filename: "./include/linux/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!2654 = !{!2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "forwarding", scope: !2652, file: !2653, line: 13, baseType: !1567, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "hop_limit", scope: !2652, file: !2653, line: 14, baseType: !1567, size: 32, offset: 32)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "mtu6", scope: !2652, file: !2653, line: 15, baseType: !1567, size: 32, offset: 64)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra", scope: !2652, file: !2653, line: 16, baseType: !1567, size: 32, offset: 96)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "accept_redirects", scope: !2652, file: !2653, line: 17, baseType: !1567, size: 32, offset: 128)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "autoconf", scope: !2652, file: !2653, line: 18, baseType: !1567, size: 32, offset: 160)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "dad_transmits", scope: !2652, file: !2653, line: 19, baseType: !1567, size: 32, offset: 192)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicits", scope: !2652, file: !2653, line: 20, baseType: !1567, size: 32, offset: 224)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_interval", scope: !2652, file: !2653, line: 21, baseType: !1567, size: 32, offset: 256)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_max_interval", scope: !2652, file: !2653, line: 22, baseType: !1567, size: 32, offset: 288)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_delay", scope: !2652, file: !2653, line: 23, baseType: !1567, size: 32, offset: 320)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "force_mld_version", scope: !2652, file: !2653, line: 24, baseType: !1567, size: 32, offset: 352)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "mldv1_unsolicited_report_interval", scope: !2652, file: !2653, line: 25, baseType: !1567, size: 32, offset: 384)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "mldv2_unsolicited_report_interval", scope: !2652, file: !2653, line: 26, baseType: !1567, size: 32, offset: 416)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "use_tempaddr", scope: !2652, file: !2653, line: 27, baseType: !1567, size: 32, offset: 448)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "temp_valid_lft", scope: !2652, file: !2653, line: 28, baseType: !1567, size: 32, offset: 480)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "temp_prefered_lft", scope: !2652, file: !2653, line: 29, baseType: !1567, size: 32, offset: 512)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "regen_max_retry", scope: !2652, file: !2653, line: 30, baseType: !1567, size: 32, offset: 544)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "max_desync_factor", scope: !2652, file: !2653, line: 31, baseType: !1567, size: 32, offset: 576)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "max_addresses", scope: !2652, file: !2653, line: 32, baseType: !1567, size: 32, offset: 608)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_defrtr", scope: !2652, file: !2653, line: 33, baseType: !1567, size: 32, offset: 640)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_min_hop_limit", scope: !2652, file: !2653, line: 34, baseType: !1567, size: 32, offset: 672)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_pinfo", scope: !2652, file: !2653, line: 35, baseType: !1567, size: 32, offset: 704)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_routes_with_linkdown", scope: !2652, file: !2653, line: 36, baseType: !1567, size: 32, offset: 736)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ndp", scope: !2652, file: !2653, line: 45, baseType: !1567, size: 32, offset: 768)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "accept_source_route", scope: !2652, file: !2653, line: 46, baseType: !1567, size: 32, offset: 800)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_from_local", scope: !2652, file: !2653, line: 47, baseType: !1567, size: 32, offset: 832)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "disable_ipv6", scope: !2652, file: !2653, line: 55, baseType: !1567, size: 32, offset: 864)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "drop_unicast_in_l2_multicast", scope: !2652, file: !2653, line: 56, baseType: !1567, size: 32, offset: 896)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "accept_dad", scope: !2652, file: !2653, line: 57, baseType: !1567, size: 32, offset: 928)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "force_tllao", scope: !2652, file: !2653, line: 58, baseType: !1567, size: 32, offset: 960)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_notify", scope: !2652, file: !2653, line: 59, baseType: !1567, size: 32, offset: 992)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_frag_ndisc", scope: !2652, file: !2653, line: 60, baseType: !1567, size: 32, offset: 1024)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_mtu", scope: !2652, file: !2653, line: 61, baseType: !1567, size: 32, offset: 1056)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "drop_unsolicited_na", scope: !2652, file: !2653, line: 62, baseType: !1567, size: 32, offset: 1088)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "stable_secret", scope: !2652, file: !2653, line: 66, baseType: !2691, size: 160, offset: 1120)
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_stable_secret", file: !2653, line: 63, size: 160, elements: !2692)
!2692 = !{!2693, !2694}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2691, file: !2653, line: 64, baseType: !617, size: 8)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "secret", scope: !2691, file: !2653, line: 65, baseType: !2300, size: 128, offset: 32)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "use_oif_addrs_only", scope: !2652, file: !2653, line: 67, baseType: !1567, size: 32, offset: 1280)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "keep_addr_on_down", scope: !2652, file: !2653, line: 68, baseType: !1567, size: 32, offset: 1312)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_enabled", scope: !2652, file: !2653, line: 69, baseType: !1567, size: 32, offset: 1344)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_dad", scope: !2652, file: !2653, line: 73, baseType: !545, size: 32, offset: 1376)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "addr_gen_mode", scope: !2652, file: !2653, line: 74, baseType: !545, size: 32, offset: 1408)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "disable_policy", scope: !2652, file: !2653, line: 75, baseType: !1567, size: 32, offset: 1440)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_tclass", scope: !2652, file: !2653, line: 76, baseType: !1567, size: 32, offset: 1472)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "rpl_seg_enabled", scope: !2652, file: !2653, line: 77, baseType: !1567, size: 32, offset: 1504)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_header", scope: !2652, file: !2653, line: 79, baseType: !1958, size: 64, offset: 1536)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2607, file: !2608, line: 59, baseType: !2651, size: 64, offset: 1664)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2607, file: !2608, line: 60, baseType: !2244, size: 64, offset: 1728)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2607, file: !2608, line: 61, baseType: !2258, size: 64, offset: 1792)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !2607, file: !2608, line: 71, baseType: !2708, size: 64, offset: 1856)
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 64)
!2709 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !2608, line: 71, flags: DIFlagFwdDecl)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !2607, file: !2608, line: 72, baseType: !2711, size: 64, offset: 1920)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!2712 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !2608, line: 72, flags: DIFlagFwdDecl)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !2607, file: !2608, line: 73, baseType: !2714, size: 64, offset: 1984)
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 64)
!2715 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !2608, line: 73, flags: DIFlagFwdDecl)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !2607, file: !2608, line: 74, baseType: !2317, size: 320, offset: 2048)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2607, file: !2608, line: 75, baseType: !2085, size: 64, offset: 2368)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !2607, file: !2608, line: 76, baseType: !2719, size: 64, offset: 2432)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 64)
!2720 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !2608, line: 76, flags: DIFlagFwdDecl)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !2607, file: !2608, line: 77, baseType: !366, size: 128, offset: 2496)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !2607, file: !2608, line: 78, baseType: !2723, size: 1088, offset: 2624)
!2723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !2724, line: 15, size: 1088, elements: !2725)
!2724 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!2725 = !{!2726, !2727, !2728, !2733, !2768, !2774, !2775, !2779, !2783, !2787, !2791, !2795, !2799, !2803, !2804, !3000, !3004, !3005}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2723, file: !2724, line: 16, baseType: !554, size: 16)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !2723, file: !2724, line: 17, baseType: !7, size: 32, offset: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !2723, file: !2724, line: 19, baseType: !2729, size: 64, offset: 64)
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 64)
!2730 = !DISubroutineType(types: !2731)
!2731 = !{!72, !2732}
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2723, file: !2724, line: 20, baseType: !2734, size: 64, offset: 128)
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 64)
!2735 = !DISubroutineType(types: !2736)
!2736 = !{!2737, !2737, !545}
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 64)
!2738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !2739, line: 24, size: 896, elements: !2740)
!2739 = !DIFile(filename: "./include/net/dst.h", directory: "/home/lizy2001/genbc/linux")
!2740 = !{!2741, !2742, !2743, !2744, !2745, !2746, !2750, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2764, !2765, !2766, !2767}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2738, file: !2739, line: 25, baseType: !372, size: 64)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2738, file: !2739, line: 26, baseType: !2732, size: 64, offset: 64)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "_metrics", scope: !2738, file: !2739, line: 27, baseType: !394, size: 64, offset: 128)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2738, file: !2739, line: 28, baseType: !394, size: 64, offset: 192)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2738, file: !2739, line: 32, baseType: !647, size: 64, offset: 256)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !2738, file: !2739, line: 34, baseType: !2747, size: 64, offset: 320)
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2748, size: 64)
!2748 = !DISubroutineType(types: !2749)
!2749 = !{!72, !497}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2738, file: !2739, line: 35, baseType: !2751, size: 64, offset: 384)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 64)
!2752 = !DISubroutineType(types: !2753)
!2753 = !{!72, !2039, !527, !497}
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2738, file: !2739, line: 37, baseType: !554, size: 16, offset: 448)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "obsolete", scope: !2738, file: !2739, line: 54, baseType: !1323, size: 16, offset: 464)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "header_len", scope: !2738, file: !2739, line: 59, baseType: !554, size: 16, offset: 480)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "trailer_len", scope: !2738, file: !2739, line: 60, baseType: !554, size: 16, offset: 496)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "__refcnt", scope: !2738, file: !2739, line: 67, baseType: !465, size: 32, offset: 512)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "__use", scope: !2738, file: !2739, line: 69, baseType: !72, size: 32, offset: 544)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "lastuse", scope: !2738, file: !2739, line: 70, baseType: !394, size: 64, offset: 576)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "lwtstate", scope: !2738, file: !2739, line: 71, baseType: !2762, size: 64, offset: 640)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!2763 = !DICompositeType(tag: DW_TAG_structure_type, name: "lwtunnel_state", file: !2739, line: 71, flags: DIFlagFwdDecl)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2738, file: !2739, line: 72, baseType: !381, size: 128, align: 64, offset: 704)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2738, file: !2739, line: 73, baseType: !1323, size: 16, offset: 832)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !2738, file: !2739, line: 74, baseType: !1323, size: 16, offset: 848)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "tclassid", scope: !2738, file: !2739, line: 75, baseType: !545, size: 32, offset: 864)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !2723, file: !2724, line: 21, baseType: !2769, size: 64, offset: 192)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64)
!2770 = !DISubroutineType(types: !2771)
!2771 = !{!7, !2772}
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2738)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !2723, file: !2724, line: 22, baseType: !2769, size: 64, offset: 256)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !2723, file: !2724, line: 23, baseType: !2776, size: 64, offset: 320)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DISubroutineType(types: !2778)
!2778 = !{!1537, !2737, !394}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !2723, file: !2724, line: 24, baseType: !2780, size: 64, offset: 384)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = !DISubroutineType(types: !2782)
!2782 = !{null, !2737}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !2723, file: !2724, line: 25, baseType: !2784, size: 64, offset: 448)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = !DISubroutineType(types: !2786)
!2786 = !{null, !2737, !372, !72}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !2723, file: !2724, line: 27, baseType: !2788, size: 64, offset: 512)
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 64)
!2789 = !DISubroutineType(types: !2790)
!2790 = !{!2737, !2737}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !2723, file: !2724, line: 28, baseType: !2792, size: 64, offset: 576)
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 64)
!2793 = !DISubroutineType(types: !2794)
!2794 = !{null, !497}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !2723, file: !2724, line: 29, baseType: !2796, size: 64, offset: 640)
!2796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2797, size: 64)
!2797 = !DISubroutineType(types: !2798)
!2798 = !{null, !2737, !527, !497, !784, !617}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !2723, file: !2724, line: 32, baseType: !2800, size: 64, offset: 704)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 64)
!2801 = !DISubroutineType(types: !2802)
!2802 = !{null, !2737, !527, !497}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !2723, file: !2724, line: 34, baseType: !2751, size: 64, offset: 768)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !2723, file: !2724, line: 35, baseType: !2805, size: 64, offset: 832)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 64)
!2806 = !DISubroutineType(types: !2807)
!2807 = !{!2808, !2772, !497, !2340}
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !2810, line: 134, size: 2624, elements: !2811)
!2810 = !DIFile(filename: "./include/net/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!2811 = !{!2812, !2813, !2951, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2978, !2982, !2995, !2996, !2997, !2998}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2809, file: !2810, line: 135, baseType: !2808, size: 64)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2809, file: !2810, line: 136, baseType: !2814, size: 64, offset: 64)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 64)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_table", file: !2810, line: 194, size: 3840, elements: !2816)
!2816 = !{!2817, !2818, !2819, !2820, !2821, !2828, !2834, !2838, !2856, !2860, !2861, !2865, !2869, !2870, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2903, !2904, !2911, !2912, !2913, !2914, !2922, !2923, !2939, !2949}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2815, file: !2810, line: 195, baseType: !72, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "entry_size", scope: !2815, file: !2810, line: 196, baseType: !7, size: 32, offset: 32)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2815, file: !2810, line: 197, baseType: !7, size: 32, offset: 64)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2815, file: !2810, line: 198, baseType: !566, size: 16, offset: 96)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2815, file: !2810, line: 199, baseType: !2822, size: 64, offset: 128)
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 64)
!2823 = !DISubroutineType(types: !2824)
!2824 = !{!545, !2340, !2825, !2827}
!2825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2826, size: 64)
!2826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !346)
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "key_eq", scope: !2815, file: !2810, line: 202, baseType: !2829, size: 64, offset: 192)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2830 = !DISubroutineType(types: !2831)
!2831 = !{!617, !2832, !2340}
!2832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2833, size: 64)
!2833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2809)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2815, file: !2810, line: 203, baseType: !2835, size: 64, offset: 256)
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!2836 = !DISubroutineType(types: !2837)
!2837 = !{!72, !2808}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "pconstructor", scope: !2815, file: !2810, line: 204, baseType: !2839, size: 64, offset: 320)
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 64)
!2840 = !DISubroutineType(types: !2841)
!2841 = !{!72, !2842}
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pneigh_entry", file: !2810, line: 171, size: 256, elements: !2844)
!2844 = !{!2845, !2846, !2851, !2852, !2853, !2854}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2843, file: !2810, line: 172, baseType: !2842, size: 64)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2843, file: !2810, line: 173, baseType: !2847, size: 64, offset: 64)
!2847 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !2041, line: 318, baseType: !2848)
!2848 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2041, line: 314, size: 64, elements: !2849)
!2849 = !{!2850}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2848, file: !2041, line: 316, baseType: !2039, size: 64)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2843, file: !2810, line: 174, baseType: !372, size: 64, offset: 128)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2843, file: !2810, line: 175, baseType: !1474, size: 8, offset: 192)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2843, file: !2810, line: 176, baseType: !1474, size: 8, offset: 200)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2843, file: !2810, line: 177, baseType: !2855, offset: 208)
!2855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1474, elements: !391)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "pdestructor", scope: !2815, file: !2810, line: 205, baseType: !2857, size: 64, offset: 384)
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 64)
!2858 = !DISubroutineType(types: !2859)
!2859 = !{null, !2842}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_redo", scope: !2815, file: !2810, line: 206, baseType: !2792, size: 64, offset: 448)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "is_multicast", scope: !2815, file: !2810, line: 207, baseType: !2862, size: 64, offset: 512)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = !DISubroutineType(types: !2864)
!2864 = !{!72, !2340}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "allow_add", scope: !2815, file: !2810, line: 208, baseType: !2866, size: 64, offset: 576)
!2866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2867, size: 64)
!2867 = !DISubroutineType(types: !2868)
!2868 = !{!617, !2825, !2536}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2815, file: !2810, line: 210, baseType: !654, size: 64, offset: 640)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2815, file: !2810, line: 211, baseType: !2871, size: 1152, offset: 704)
!2871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !2810, line: 70, size: 1152, elements: !2872)
!2872 = !{!2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2887}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2871, file: !2810, line: 71, baseType: !2847, size: 64)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2871, file: !2810, line: 72, baseType: !372, size: 64, offset: 64)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2871, file: !2810, line: 73, baseType: !366, size: 128, offset: 128)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_setup", scope: !2871, file: !2810, line: 74, baseType: !2835, size: 64, offset: 256)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2871, file: !2810, line: 75, baseType: !2814, size: 64, offset: 320)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_table", scope: !2871, file: !2810, line: 77, baseType: !647, size: 64, offset: 384)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2871, file: !2810, line: 79, baseType: !72, size: 32, offset: 448)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2871, file: !2810, line: 80, baseType: !1348, size: 32, offset: 480)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2871, file: !2810, line: 81, baseType: !381, size: 128, align: 64, offset: 512)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "reachable_time", scope: !2871, file: !2810, line: 83, baseType: !72, size: 32, offset: 640)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2871, file: !2810, line: 84, baseType: !2884, size: 416, offset: 672)
!2884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !72, size: 416, elements: !2885)
!2885 = !{!2886}
!2886 = !DISubrange(count: 13)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "data_state", scope: !2871, file: !2810, line: 85, baseType: !1492, size: 64, offset: 1088)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "parms_list", scope: !2815, file: !2810, line: 212, baseType: !366, size: 128, offset: 1856)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "gc_interval", scope: !2815, file: !2810, line: 213, baseType: !72, size: 32, offset: 1984)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh1", scope: !2815, file: !2810, line: 214, baseType: !72, size: 32, offset: 2016)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh2", scope: !2815, file: !2810, line: 215, baseType: !72, size: 32, offset: 2048)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh3", scope: !2815, file: !2810, line: 216, baseType: !72, size: 32, offset: 2080)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "last_flush", scope: !2815, file: !2810, line: 217, baseType: !394, size: 64, offset: 2112)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "gc_work", scope: !2815, file: !2810, line: 218, baseType: !2895, size: 704, offset: 2176)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !1885, line: 115, size: 704, elements: !2896)
!2896 = !{!2897, !2898, !2899, !2902}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2895, file: !1885, line: 116, baseType: !1884, size: 256)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2895, file: !1885, line: 117, baseType: !2317, size: 320, offset: 256)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2895, file: !1885, line: 120, baseType: !2900, size: 64, offset: 576)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2901 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1885, line: 18, flags: DIFlagFwdDecl)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2895, file: !1885, line: 121, baseType: !72, size: 32, offset: 640)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_timer", scope: !2815, file: !2810, line: 219, baseType: !2317, size: 320, offset: 2880)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_queue", scope: !2815, file: !2810, line: 220, baseType: !2905, size: 192, offset: 3200)
!2905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !499, line: 291, size: 192, elements: !2906)
!2906 = !{!2907, !2908, !2909, !2910}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2905, file: !499, line: 293, baseType: !497, size: 64)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2905, file: !499, line: 294, baseType: !497, size: 64, offset: 64)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !2905, file: !499, line: 296, baseType: !545, size: 32, offset: 128)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2905, file: !499, line: 297, baseType: !806, offset: 160)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2815, file: !2810, line: 221, baseType: !465, size: 32, offset: 3392)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "gc_entries", scope: !2815, file: !2810, line: 222, baseType: !465, size: 32, offset: 3424)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2815, file: !2810, line: 223, baseType: !366, size: 128, offset: 3456)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2815, file: !2810, line: 224, baseType: !2915, offset: 3584)
!2915 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2916, line: 20, baseType: !2917)
!2916 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2917 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2916, line: 11, elements: !2918)
!2918 = !{!2919}
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2917, file: !2916, line: 12, baseType: !2920)
!2920 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !818, line: 33, baseType: !2921)
!2921 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !818, line: 31, elements: !820)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "last_rand", scope: !2815, file: !2810, line: 225, baseType: !394, size: 64, offset: 3584)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2815, file: !2810, line: 226, baseType: !2924, size: 64, offset: 3648)
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 64)
!2925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_statistics", file: !2810, line: 112, size: 768, elements: !2926)
!2926 = !{!2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "allocs", scope: !2925, file: !2810, line: 113, baseType: !394, size: 64)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "destroys", scope: !2925, file: !2810, line: 114, baseType: !394, size: 64, offset: 64)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "hash_grows", scope: !2925, file: !2810, line: 115, baseType: !394, size: 64, offset: 128)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "res_failed", scope: !2925, file: !2810, line: 117, baseType: !394, size: 64, offset: 192)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "lookups", scope: !2925, file: !2810, line: 119, baseType: !394, size: 64, offset: 256)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "hits", scope: !2925, file: !2810, line: 120, baseType: !394, size: 64, offset: 320)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_mcast", scope: !2925, file: !2810, line: 122, baseType: !394, size: 64, offset: 384)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_ucast", scope: !2925, file: !2810, line: 123, baseType: !394, size: 64, offset: 448)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "periodic_gc_runs", scope: !2925, file: !2810, line: 125, baseType: !394, size: 64, offset: 512)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "forced_gc_runs", scope: !2925, file: !2810, line: 126, baseType: !394, size: 64, offset: 576)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "unres_discards", scope: !2925, file: !2810, line: 128, baseType: !394, size: 64, offset: 640)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "table_fulls", scope: !2925, file: !2810, line: 129, baseType: !394, size: 64, offset: 704)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "nht", scope: !2815, file: !2810, line: 227, baseType: !2940, size: 64, offset: 3712)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 64)
!2941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_hash_table", file: !2810, line: 186, size: 384, elements: !2942)
!2942 = !{!2943, !2945, !2946, !2948}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "hash_buckets", scope: !2941, file: !2810, line: 187, baseType: !2944, size: 64)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2808, size: 64)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "hash_shift", scope: !2941, file: !2810, line: 188, baseType: !7, size: 32, offset: 64)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rnd", scope: !2941, file: !2810, line: 189, baseType: !2947, size: 128, offset: 96)
!2947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !545, size: 128, elements: !1279)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2941, file: !2810, line: 190, baseType: !381, size: 128, align: 64, offset: 256)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "phash_buckets", scope: !2815, file: !2810, line: 228, baseType: !2950, size: 64, offset: 3776)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 64)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2809, file: !2810, line: 137, baseType: !2952, size: 64, offset: 128)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 64)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "confirmed", scope: !2809, file: !2810, line: 138, baseType: !394, size: 64, offset: 192)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "updated", scope: !2809, file: !2810, line: 139, baseType: !394, size: 64, offset: 256)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2809, file: !2810, line: 140, baseType: !2915, offset: 320)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2809, file: !2810, line: 141, baseType: !1348, size: 32, offset: 320)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue_len_bytes", scope: !2809, file: !2810, line: 142, baseType: !7, size: 32, offset: 352)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue", scope: !2809, file: !2810, line: 143, baseType: !2905, size: 192, offset: 384)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2809, file: !2810, line: 144, baseType: !2317, size: 320, offset: 576)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2809, file: !2810, line: 145, baseType: !394, size: 64, offset: 896)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "probes", scope: !2809, file: !2810, line: 146, baseType: !465, size: 32, offset: 960)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2809, file: !2810, line: 147, baseType: !1475, size: 8, offset: 992)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "nud_state", scope: !2809, file: !2810, line: 148, baseType: !1475, size: 8, offset: 1000)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2809, file: !2810, line: 149, baseType: !1475, size: 8, offset: 1008)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2809, file: !2810, line: 150, baseType: !1475, size: 8, offset: 1016)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2809, file: !2810, line: 151, baseType: !1474, size: 8, offset: 1024)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "ha_lock", scope: !2809, file: !2810, line: 152, baseType: !2250, size: 32, offset: 1056)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "ha", scope: !2809, file: !2810, line: 153, baseType: !792, size: 256, align: 64, offset: 1088)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "hh", scope: !2809, file: !2810, line: 154, baseType: !2970, size: 832, offset: 1344)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !71, line: 244, size: 832, elements: !2971)
!2971 = !{!2972, !2973, !2974}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !2970, file: !71, line: 245, baseType: !7, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !2970, file: !71, line: 246, baseType: !2250, size: 32, offset: 32)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !2970, file: !71, line: 254, baseType: !2975, size: 768, offset: 64)
!2975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 768, elements: !2976)
!2976 = !{!2977}
!2977 = !DISubrange(count: 12)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2809, file: !2810, line: 155, baseType: !2979, size: 64, offset: 2176)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 64)
!2980 = !DISubroutineType(types: !2981)
!2981 = !{!72, !2808, !497}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2809, file: !2810, line: 156, baseType: !2983, size: 64, offset: 2240)
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 64)
!2984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2985)
!2985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_ops", file: !2810, line: 163, size: 320, elements: !2986)
!2986 = !{!2987, !2988, !2992, !2993, !2994}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2985, file: !2810, line: 164, baseType: !72, size: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "solicit", scope: !2985, file: !2810, line: 165, baseType: !2989, size: 64, offset: 64)
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 64)
!2990 = !DISubroutineType(types: !2991)
!2991 = !{null, !2808, !497}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "error_report", scope: !2985, file: !2810, line: 166, baseType: !2989, size: 64, offset: 128)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2985, file: !2810, line: 167, baseType: !2979, size: 64, offset: 192)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "connected_output", scope: !2985, file: !2810, line: 168, baseType: !2979, size: 64, offset: 256)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2809, file: !2810, line: 157, baseType: !366, size: 128, offset: 2304)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2809, file: !2810, line: 158, baseType: !381, size: 128, align: 64, offset: 2432)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2809, file: !2810, line: 159, baseType: !372, size: 64, offset: 2560)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "primary_key", scope: !2809, file: !2810, line: 160, baseType: !2999, offset: 2624)
!2999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1474, elements: !1999)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !2723, file: !2724, line: 38, baseType: !3001, size: 64, offset: 896)
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 64)
!3002 = !DISubroutineType(types: !3003)
!3003 = !{null, !2772, !2340}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !2723, file: !2724, line: 41, baseType: !2348, size: 64, offset: 960)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !2723, file: !2724, line: 43, baseType: !3006, size: 64, offset: 1024)
!3006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3007, line: 97, size: 64, elements: !3008)
!3007 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3008 = !{!3009}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3006, file: !3007, line: 98, baseType: !459, size: 64)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !2607, file: !2608, line: 79, baseType: !2915, offset: 3712)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !2607, file: !2608, line: 80, baseType: !806, offset: 3712)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !2607, file: !2608, line: 81, baseType: !7, size: 32, offset: 3712)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !2607, file: !2608, line: 82, baseType: !394, size: 64, offset: 3776)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2607, file: !2608, line: 94, baseType: !2241, size: 64, offset: 3840)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !2607, file: !2608, line: 95, baseType: !527, size: 64, offset: 3904)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2607, file: !2608, line: 96, baseType: !527, size: 64, offset: 3968)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !2607, file: !2608, line: 97, baseType: !527, size: 64, offset: 4032)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2607, file: !2608, line: 98, baseType: !527, size: 64, offset: 4096)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2607, file: !2608, line: 107, baseType: !465, size: 32, offset: 4160)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !2607, file: !2608, line: 108, baseType: !465, size: 32, offset: 4192)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !2607, file: !2608, line: 109, baseType: !3022, size: 64, offset: 4224)
!3022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3023, size: 64)
!3023 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !2608, line: 109, flags: DIFlagFwdDecl)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2607, file: !2608, line: 110, baseType: !2522, size: 64, offset: 4288)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !2607, file: !2608, line: 111, baseType: !2522, size: 64, offset: 4352)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2607, file: !2608, line: 112, baseType: !7, size: 32, offset: 4416)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !2607, file: !2608, line: 117, baseType: !3028, size: 128, offset: 4480)
!3028 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2607, file: !2608, line: 113, size: 128, elements: !3029)
!3029 = !{!3030, !3031, !3032}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3028, file: !2608, line: 114, baseType: !934, size: 64)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3028, file: !2608, line: 115, baseType: !806, offset: 64)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3028, file: !2608, line: 116, baseType: !784, size: 32, offset: 64)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !2040, file: !2041, line: 162, baseType: !2905, size: 192, offset: 14784)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !2040, file: !2041, line: 164, baseType: !3035, size: 64, offset: 14976)
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 64)
!3036 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !2041, line: 47, flags: DIFlagFwdDecl)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !2040, file: !2041, line: 167, baseType: !3038, size: 512, offset: 15040)
!3038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3039, line: 14, size: 512, elements: !3040)
!3039 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3040 = !{!3041, !3676, !3678}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3038, file: !3039, line: 16, baseType: !3042, size: 128)
!3042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3043, size: 128, elements: !555)
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 64)
!3044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !153, line: 1037, size: 128, elements: !3045)
!3045 = !{!3046, !3047}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3044, file: !153, line: 1038, baseType: !381, size: 128, align: 64)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3044, file: !153, line: 1039, baseType: !3048, offset: 128)
!3048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3049, elements: !391)
!3049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !153, line: 1032, size: 192, elements: !3050)
!3050 = !{!3051, !3672}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3049, file: !153, line: 1033, baseType: !3052, size: 64)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 64)
!3053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !3054, line: 525, size: 448, elements: !3055)
!3054 = !DIFile(filename: "./include/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!3055 = !{!3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3074, !3648, !3662, !3668, !3670}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3053, file: !3054, line: 526, baseType: !1115, size: 16)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "jited", scope: !3053, file: !3054, line: 527, baseType: !1115, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "jit_requested", scope: !3053, file: !3054, line: 528, baseType: !1115, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 16)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "gpl_compatible", scope: !3053, file: !3054, line: 529, baseType: !1115, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 16)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "cb_access", scope: !3053, file: !3054, line: 530, baseType: !1115, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 16)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "dst_needed", scope: !3053, file: !3054, line: 531, baseType: !1115, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 16)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "blinded", scope: !3053, file: !3054, line: 532, baseType: !1115, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 16)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "is_func", scope: !3053, file: !3054, line: 533, baseType: !1115, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 16)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "kprobe_override", scope: !3053, file: !3054, line: 534, baseType: !1115, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 16)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "has_callchain_buf", scope: !3053, file: !3054, line: 535, baseType: !1115, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 16)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "enforce_expected_attach_type", scope: !3053, file: !3054, line: 536, baseType: !1115, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 16)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "call_get_stack", scope: !3053, file: !3054, line: 537, baseType: !1115, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 16)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3053, file: !3054, line: 538, baseType: !77, size: 32, offset: 32)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3053, file: !3054, line: 539, baseType: !111, size: 32, offset: 64)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3053, file: !3054, line: 540, baseType: !784, size: 32, offset: 96)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !3053, file: !3054, line: 541, baseType: !784, size: 32, offset: 128)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !3053, file: !3054, line: 542, baseType: !3073, size: 64, offset: 160)
!3073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1474, size: 64, elements: !1448)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !3053, file: !3054, line: 543, baseType: !3075, size: 64, offset: 256)
!3075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3076, size: 64)
!3076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !153, line: 757, size: 4928, elements: !3077)
!3077 = !{!3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3099, !3100, !3101, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3158, !3159, !3161, !3162, !3566, !3567, !3568, !3577, !3579, !3580, !3581, !3582, !3583, !3585, !3586, !3601, !3602, !3608, !3614, !3622, !3624, !3625, !3626, !3627, !3628, !3636, !3643}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3076, file: !153, line: 758, baseType: !455, size: 64)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !3076, file: !153, line: 759, baseType: !784, size: 32, offset: 64)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !3076, file: !153, line: 760, baseType: !784, size: 32, offset: 96)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !3076, file: !153, line: 761, baseType: !784, size: 32, offset: 128)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !3076, file: !153, line: 762, baseType: !784, size: 32, offset: 160)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !3076, file: !153, line: 763, baseType: !784, size: 32, offset: 192)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3076, file: !153, line: 764, baseType: !784, size: 32, offset: 224)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !3076, file: !153, line: 765, baseType: !784, size: 32, offset: 256)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !3076, file: !153, line: 766, baseType: !784, size: 32, offset: 288)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3076, file: !153, line: 767, baseType: !784, size: 32, offset: 320)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !3076, file: !153, line: 768, baseType: !784, size: 32, offset: 352)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !3076, file: !153, line: 769, baseType: !784, size: 32, offset: 384)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !3076, file: !153, line: 770, baseType: !784, size: 32, offset: 416)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !3076, file: !153, line: 771, baseType: !3092, size: 64, offset: 448)
!3092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3093, size: 64)
!3093 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3094)
!3094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !153, line: 751, size: 96, elements: !3095)
!3095 = !{!3096, !3097, !3098}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3094, file: !153, line: 752, baseType: !784, size: 32)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !3094, file: !153, line: 753, baseType: !152, size: 32, offset: 32)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3094, file: !153, line: 754, baseType: !784, size: 32, offset: 64)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !3076, file: !153, line: 772, baseType: !1031, size: 192, offset: 512)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !3076, file: !153, line: 773, baseType: !3052, size: 64, offset: 704)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !3076, file: !153, line: 774, baseType: !3102, size: 64, offset: 768)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !153, line: 586, size: 2944, elements: !3104)
!3104 = !{!3105, !3106, !3107, !3108, !3109, !3121, !3122, !3124, !3125, !3126, !3127}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !3103, file: !153, line: 588, baseType: !358, size: 128)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3103, file: !153, line: 590, baseType: !1031, size: 192, offset: 128)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3103, file: !153, line: 591, baseType: !1348, size: 32, offset: 320)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3103, file: !153, line: 592, baseType: !413, size: 64, offset: 384)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3103, file: !153, line: 597, baseType: !3110, size: 256, offset: 448)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3103, file: !153, line: 593, size: 256, elements: !3111)
!3111 = !{!3112, !3119, !3120}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !3110, file: !153, line: 594, baseType: !3113, size: 112)
!3113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !153, line: 509, size: 112, elements: !3114)
!3114 = !{!3115, !3116, !3117}
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !3113, file: !153, line: 510, baseType: !1474, size: 8)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !3113, file: !153, line: 511, baseType: !1474, size: 8, offset: 8)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !3113, file: !153, line: 512, baseType: !3118, size: 96, offset: 16)
!3118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1474, size: 96, elements: !2976)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3110, file: !153, line: 595, baseType: !647, size: 64, offset: 128)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !3110, file: !153, line: 596, baseType: !617, size: 8, offset: 192)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !3103, file: !153, line: 602, baseType: !3052, size: 64, offset: 704)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !3103, file: !153, line: 604, baseType: !3123, size: 192, offset: 768)
!3123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 192, elements: !944)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !3103, file: !153, line: 606, baseType: !2478, size: 96, offset: 960)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3103, file: !153, line: 608, baseType: !647, size: 64, offset: 1088)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !3103, file: !153, line: 609, baseType: !413, size: 64, offset: 1152)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !3103, file: !153, line: 610, baseType: !3128, size: 1728, offset: 1216)
!3128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !153, line: 569, size: 1728, elements: !3129)
!3129 = !{!3130, !3131, !3132, !3136, !3137, !3143}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3128, file: !153, line: 570, baseType: !394, size: 64)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3128, file: !153, line: 571, baseType: !394, size: 64, offset: 64)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3128, file: !153, line: 572, baseType: !3133, size: 1024, offset: 128)
!3133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 1024, elements: !3134)
!3134 = !{!3135}
!3135 = !DISubrange(count: 128)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !3128, file: !153, line: 573, baseType: !366, size: 128, offset: 1152)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !3128, file: !153, line: 574, baseType: !3138, size: 384, offset: 1280)
!3138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !3139, line: 40, size: 384, elements: !3140)
!3139 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!3140 = !{!3141}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3138, file: !3139, line: 41, baseType: !3142, size: 384)
!3142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, size: 384, elements: !555)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3128, file: !153, line: 575, baseType: !617, size: 8, offset: 1664)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !3076, file: !153, line: 775, baseType: !77, size: 32, offset: 832)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !3076, file: !153, line: 776, baseType: !111, size: 32, offset: 864)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !3076, file: !153, line: 777, baseType: !617, size: 8, offset: 896)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !3076, file: !153, line: 778, baseType: !617, size: 8, offset: 904)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !3076, file: !153, line: 779, baseType: !617, size: 8, offset: 912)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !3076, file: !153, line: 780, baseType: !617, size: 8, offset: 920)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !3076, file: !153, line: 781, baseType: !617, size: 8, offset: 928)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !3076, file: !153, line: 782, baseType: !617, size: 8, offset: 936)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !3076, file: !153, line: 783, baseType: !183, size: 32, offset: 960)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !3076, file: !153, line: 784, baseType: !358, size: 128, offset: 1024)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !3076, file: !153, line: 786, baseType: !3155, size: 64, offset: 1152)
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 64)
!3156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3157)
!3157 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !153, line: 33, flags: DIFlagFwdDecl)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !3076, file: !153, line: 788, baseType: !374, size: 64, offset: 1216)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3076, file: !153, line: 789, baseType: !3160, size: 64, offset: 1280)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 64)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !3076, file: !153, line: 790, baseType: !647, size: 64, offset: 1344)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !3076, file: !153, line: 791, baseType: !3163, size: 64, offset: 1408)
!3163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3164, size: 64)
!3164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !153, line: 734, size: 384, elements: !3165)
!3165 = !{!3166, !3167, !3168, !3169, !3562, !3563, !3564, !3565}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !3164, file: !153, line: 735, baseType: !647, size: 64)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !3164, file: !153, line: 736, baseType: !647, size: 64, offset: 64)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !3164, file: !153, line: 737, baseType: !647, size: 64, offset: 128)
!3169 = !DIDerivedType(tag: DW_TAG_member, scope: !3164, file: !153, line: 738, baseType: !3170, size: 128, offset: 192)
!3170 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3164, file: !153, line: 738, size: 128, elements: !3171)
!3171 = !{!3172}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !3170, file: !153, line: 742, baseType: !3173, size: 128)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3170, file: !153, line: 739, size: 128, elements: !3174)
!3174 = !{!3175, !3561}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3173, file: !153, line: 740, baseType: !3176, size: 64)
!3176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3177, size: 64)
!3177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !153, line: 141, size: 2048, elements: !3178)
!3178 = !{!3179, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3547, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3177, file: !153, line: 145, baseType: !3180, size: 64, align: 512)
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 64)
!3181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3182)
!3182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !153, line: 54, size: 2368, elements: !3183)
!3183 = !{!3184, !3383, !3387, !3391, !3395, !3399, !3400, !3404, !3410, !3411, !3412, !3413, !3414, !3418, !3422, !3426, !3427, !3428, !3432, !3436, !3448, !3452, !3456, !3465, !3469, !3473, !3477, !3482, !3486, !3490, !3494, !3500, !3504, !3511, !3515, !3517, !3518}
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !3182, file: !153, line: 56, baseType: !3185, size: 64)
!3185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3186, size: 64)
!3186 = !DISubroutineType(types: !3187)
!3187 = !{!72, !3188}
!3188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3189, size: 64)
!3189 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !78, line: 483, size: 960, align: 64, elements: !3190)
!3190 = !{!3191, !3207, !3218, !3229, !3253, !3259, !3267, !3284, !3297, !3303, !3312, !3317, !3325, !3337, !3357, !3364, !3368, !3372, !3377}
!3191 = !DIDerivedType(tag: DW_TAG_member, scope: !3189, file: !78, line: 484, baseType: !3192, size: 512)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !78, line: 484, size: 512, elements: !3193)
!3193 = !{!3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3192, file: !78, line: 485, baseType: !545, size: 32)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3192, file: !78, line: 486, baseType: !545, size: 32, offset: 32)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3192, file: !78, line: 487, baseType: !545, size: 32, offset: 64)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3192, file: !78, line: 488, baseType: !545, size: 32, offset: 96)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3192, file: !78, line: 489, baseType: !545, size: 32, offset: 128)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !3192, file: !78, line: 492, baseType: !545, size: 32, offset: 160)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3192, file: !78, line: 493, baseType: !545, size: 32, offset: 192)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !3192, file: !78, line: 496, baseType: !349, size: 128, offset: 224)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !3192, file: !78, line: 497, baseType: !545, size: 32, offset: 352)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !3192, file: !78, line: 498, baseType: !545, size: 32, offset: 384)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3192, file: !78, line: 499, baseType: !545, size: 32, offset: 416)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3192, file: !78, line: 500, baseType: !545, size: 32, offset: 448)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3192, file: !78, line: 501, baseType: !545, size: 32, offset: 480)
!3207 = !DIDerivedType(tag: DW_TAG_member, scope: !3189, file: !78, line: 507, baseType: !3208, size: 256)
!3208 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !78, line: 507, size: 256, elements: !3209)
!3209 = !{!3210, !3211, !3212, !3217}
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3208, file: !78, line: 508, baseType: !545, size: 32)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3208, file: !78, line: 509, baseType: !415, size: 64, align: 64, offset: 64)
!3212 = !DIDerivedType(tag: DW_TAG_member, scope: !3208, file: !78, line: 510, baseType: !3213, size: 64, offset: 128)
!3213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3208, file: !78, line: 510, size: 64, elements: !3214)
!3214 = !{!3215, !3216}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3213, file: !78, line: 511, baseType: !415, size: 64, align: 64)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !3213, file: !78, line: 512, baseType: !415, size: 64, align: 64)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3208, file: !78, line: 514, baseType: !415, size: 64, offset: 192)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3189, file: !78, line: 532, baseType: !3219, size: 448)
!3219 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !78, line: 517, size: 448, elements: !3220)
!3220 = !{!3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !3219, file: !78, line: 518, baseType: !415, size: 64, align: 64)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !3219, file: !78, line: 521, baseType: !415, size: 64, align: 64, offset: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3219, file: !78, line: 522, baseType: !415, size: 64, align: 64, offset: 128)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !3219, file: !78, line: 523, baseType: !415, size: 64, align: 64, offset: 192)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3219, file: !78, line: 524, baseType: !545, size: 32, offset: 256)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3219, file: !78, line: 529, baseType: !545, size: 32, offset: 288)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !3219, file: !78, line: 530, baseType: !415, size: 64, offset: 320)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3219, file: !78, line: 531, baseType: !415, size: 64, offset: 384)
!3229 = !DIDerivedType(tag: DW_TAG_member, scope: !3189, file: !78, line: 534, baseType: !3230, size: 960)
!3230 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !78, line: 534, size: 960, elements: !3231)
!3231 = !{!3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !3230, file: !78, line: 535, baseType: !545, size: 32)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !3230, file: !78, line: 536, baseType: !545, size: 32, offset: 32)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3230, file: !78, line: 537, baseType: !415, size: 64, align: 64, offset: 64)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !3230, file: !78, line: 538, baseType: !415, size: 64, align: 64, offset: 128)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !3230, file: !78, line: 539, baseType: !545, size: 32, offset: 192)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !3230, file: !78, line: 540, baseType: !545, size: 32, offset: 224)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !3230, file: !78, line: 541, baseType: !415, size: 64, align: 64, offset: 256)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !3230, file: !78, line: 542, baseType: !545, size: 32, offset: 320)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !3230, file: !78, line: 543, baseType: !545, size: 32, offset: 352)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !3230, file: !78, line: 544, baseType: !349, size: 128, offset: 384)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !3230, file: !78, line: 545, baseType: !545, size: 32, offset: 512)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3230, file: !78, line: 550, baseType: !545, size: 32, offset: 544)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !3230, file: !78, line: 551, baseType: !545, size: 32, offset: 576)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !3230, file: !78, line: 552, baseType: !545, size: 32, offset: 608)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3230, file: !78, line: 553, baseType: !415, size: 64, align: 64, offset: 640)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3230, file: !78, line: 554, baseType: !545, size: 32, offset: 704)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !3230, file: !78, line: 555, baseType: !545, size: 32, offset: 736)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !3230, file: !78, line: 556, baseType: !415, size: 64, align: 64, offset: 768)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !3230, file: !78, line: 557, baseType: !545, size: 32, offset: 832)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3230, file: !78, line: 558, baseType: !545, size: 32, offset: 864)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !3230, file: !78, line: 559, baseType: !545, size: 32, offset: 896)
!3253 = !DIDerivedType(tag: DW_TAG_member, scope: !3189, file: !78, line: 562, baseType: !3254, size: 128)
!3254 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !78, line: 562, size: 128, elements: !3255)
!3255 = !{!3256, !3257, !3258}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !3254, file: !78, line: 563, baseType: !415, size: 64, align: 64)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3254, file: !78, line: 564, baseType: !545, size: 32, offset: 64)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !3254, file: !78, line: 565, baseType: !545, size: 32, offset: 96)
!3259 = !DIDerivedType(tag: DW_TAG_member, scope: !3189, file: !78, line: 568, baseType: !3260, size: 160)
!3260 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !78, line: 568, size: 160, elements: !3261)
!3261 = !{!3262, !3263, !3264, !3265, !3266}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3260, file: !78, line: 569, baseType: !545, size: 32)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !3260, file: !78, line: 570, baseType: !545, size: 32, offset: 32)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3260, file: !78, line: 571, baseType: !545, size: 32, offset: 64)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3260, file: !78, line: 572, baseType: !545, size: 32, offset: 96)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !3260, file: !78, line: 573, baseType: !545, size: 32, offset: 128)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !3189, file: !78, line: 600, baseType: !3268, size: 576)
!3268 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !78, line: 579, size: 576, elements: !3269)
!3269 = !{!3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3268, file: !78, line: 580, baseType: !545, size: 32)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !3268, file: !78, line: 581, baseType: !545, size: 32, offset: 32)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !3268, file: !78, line: 582, baseType: !545, size: 32, offset: 64)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !3268, file: !78, line: 583, baseType: !545, size: 32, offset: 96)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !3268, file: !78, line: 587, baseType: !415, size: 64, align: 64, offset: 128)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !3268, file: !78, line: 588, baseType: !415, size: 64, align: 64, offset: 192)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !3268, file: !78, line: 589, baseType: !545, size: 32, offset: 256)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3268, file: !78, line: 590, baseType: !545, size: 32, offset: 288)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !3268, file: !78, line: 591, baseType: !545, size: 32, offset: 320)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !3268, file: !78, line: 592, baseType: !545, size: 32, offset: 352)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !3268, file: !78, line: 596, baseType: !415, size: 64, align: 64, offset: 384)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !3268, file: !78, line: 597, baseType: !415, size: 64, align: 64, offset: 448)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3268, file: !78, line: 598, baseType: !545, size: 32, offset: 512)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3268, file: !78, line: 599, baseType: !545, size: 32, offset: 544)
!3284 = !DIDerivedType(tag: DW_TAG_member, scope: !3189, file: !78, line: 602, baseType: !3285, size: 96)
!3285 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !78, line: 602, size: 96, elements: !3286)
!3286 = !{!3287, !3295, !3296}
!3287 = !DIDerivedType(tag: DW_TAG_member, scope: !3285, file: !78, line: 603, baseType: !3288, size: 32)
!3288 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3285, file: !78, line: 603, size: 32, elements: !3289)
!3289 = !{!3290, !3291, !3292, !3293, !3294}
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !3288, file: !78, line: 604, baseType: !545, size: 32)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3288, file: !78, line: 605, baseType: !545, size: 32)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !3288, file: !78, line: 606, baseType: !545, size: 32)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3288, file: !78, line: 607, baseType: !545, size: 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !3288, file: !78, line: 608, baseType: !545, size: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !3285, file: !78, line: 610, baseType: !545, size: 32, offset: 32)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !3285, file: !78, line: 611, baseType: !545, size: 32, offset: 64)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3189, file: !78, line: 618, baseType: !3298, size: 128)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !78, line: 614, size: 128, elements: !3299)
!3299 = !{!3300, !3301, !3302}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3298, file: !78, line: 615, baseType: !545, size: 32)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !3298, file: !78, line: 616, baseType: !545, size: 32, offset: 32)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3298, file: !78, line: 617, baseType: !415, size: 64, align: 64, offset: 64)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !3189, file: !78, line: 627, baseType: !3304, size: 256)
!3304 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !78, line: 620, size: 256, elements: !3305)
!3305 = !{!3306, !3307, !3308, !3309, !3310, !3311}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3304, file: !78, line: 621, baseType: !545, size: 32)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3304, file: !78, line: 622, baseType: !545, size: 32, offset: 32)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !3304, file: !78, line: 623, baseType: !545, size: 32, offset: 64)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3304, file: !78, line: 624, baseType: !545, size: 32, offset: 96)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !3304, file: !78, line: 625, baseType: !415, size: 64, align: 64, offset: 128)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !3304, file: !78, line: 626, baseType: !545, size: 32, offset: 192)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !3189, file: !78, line: 632, baseType: !3313, size: 128)
!3313 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !78, line: 629, size: 128, elements: !3314)
!3314 = !{!3315, !3316}
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3313, file: !78, line: 630, baseType: !415, size: 64)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3313, file: !78, line: 631, baseType: !545, size: 32, offset: 64)
!3317 = !DIDerivedType(tag: DW_TAG_member, scope: !3189, file: !78, line: 634, baseType: !3318, size: 256)
!3318 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !78, line: 634, size: 256, elements: !3319)
!3319 = !{!3320, !3321, !3322, !3323, !3324}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3318, file: !78, line: 635, baseType: !415, size: 64, align: 64)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !3318, file: !78, line: 636, baseType: !415, size: 64, align: 64, offset: 64)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !3318, file: !78, line: 637, baseType: !545, size: 32, offset: 128)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !3318, file: !78, line: 638, baseType: !545, size: 32, offset: 160)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !3318, file: !78, line: 639, baseType: !545, size: 32, offset: 192)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !3189, file: !78, line: 656, baseType: !3326, size: 384)
!3326 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !78, line: 642, size: 384, elements: !3327)
!3327 = !{!3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336}
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3326, file: !78, line: 643, baseType: !545, size: 32)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !3326, file: !78, line: 644, baseType: !545, size: 32, offset: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3326, file: !78, line: 645, baseType: !545, size: 32, offset: 64)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !3326, file: !78, line: 646, baseType: !545, size: 32, offset: 96)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3326, file: !78, line: 647, baseType: !415, size: 64, align: 64, offset: 128)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3326, file: !78, line: 652, baseType: !545, size: 32, offset: 192)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !3326, file: !78, line: 653, baseType: !545, size: 32, offset: 224)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !3326, file: !78, line: 654, baseType: !415, size: 64, offset: 256)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !3326, file: !78, line: 655, baseType: !415, size: 64, offset: 320)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !3189, file: !78, line: 673, baseType: !3338, size: 256)
!3338 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !78, line: 658, size: 256, elements: !3339)
!3339 = !{!3340, !3341, !3346, !3347, !3348}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3338, file: !78, line: 659, baseType: !545, size: 32)
!3341 = !DIDerivedType(tag: DW_TAG_member, scope: !3338, file: !78, line: 660, baseType: !3342, size: 32, offset: 32)
!3342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3338, file: !78, line: 660, size: 32, elements: !3343)
!3343 = !{!3344, !3345}
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3342, file: !78, line: 661, baseType: !545, size: 32)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !3342, file: !78, line: 662, baseType: !545, size: 32)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3338, file: !78, line: 664, baseType: !545, size: 32, offset: 64)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3338, file: !78, line: 665, baseType: !545, size: 32, offset: 96)
!3348 = !DIDerivedType(tag: DW_TAG_member, scope: !3338, file: !78, line: 666, baseType: !3349, size: 128, offset: 128)
!3349 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3338, file: !78, line: 666, size: 128, elements: !3350)
!3350 = !{!3351, !3352}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !3349, file: !78, line: 667, baseType: !545, size: 32)
!3352 = !DIDerivedType(tag: DW_TAG_member, scope: !3349, file: !78, line: 668, baseType: !3353, size: 128)
!3353 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3349, file: !78, line: 668, size: 128, elements: !3354)
!3354 = !{!3355, !3356}
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !3353, file: !78, line: 669, baseType: !415, size: 64, align: 64)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !3353, file: !78, line: 670, baseType: !545, size: 32, offset: 64)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !3189, file: !78, line: 683, baseType: !3358, size: 128)
!3358 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !78, line: 675, size: 128, elements: !3359)
!3359 = !{!3360, !3361, !3362, !3363}
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3358, file: !78, line: 676, baseType: !545, size: 32)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !3358, file: !78, line: 678, baseType: !545, size: 32, offset: 32)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3358, file: !78, line: 679, baseType: !545, size: 32, offset: 64)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !3358, file: !78, line: 682, baseType: !545, size: 32, offset: 96)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !3189, file: !78, line: 687, baseType: !3365, size: 32)
!3365 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !78, line: 685, size: 32, elements: !3366)
!3366 = !{!3367}
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3365, file: !78, line: 686, baseType: !545, size: 32)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !3189, file: !78, line: 691, baseType: !3369, size: 32)
!3369 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !78, line: 689, size: 32, elements: !3370)
!3370 = !{!3371}
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3369, file: !78, line: 690, baseType: !545, size: 32)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !3189, file: !78, line: 696, baseType: !3373, size: 64)
!3373 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !78, line: 693, size: 64, elements: !3374)
!3374 = !{!3375, !3376}
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3373, file: !78, line: 694, baseType: !545, size: 32)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3373, file: !78, line: 695, baseType: !545, size: 32, offset: 32)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !3189, file: !78, line: 702, baseType: !3378, size: 96)
!3378 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !78, line: 698, size: 96, elements: !3379)
!3379 = !{!3380, !3381, !3382}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3378, file: !78, line: 699, baseType: !545, size: 32)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3378, file: !78, line: 700, baseType: !545, size: 32, offset: 32)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3378, file: !78, line: 701, baseType: !545, size: 32, offset: 64)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !3182, file: !153, line: 57, baseType: !3384, size: 64, offset: 64)
!3384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3385, size: 64)
!3385 = !DISubroutineType(types: !3386)
!3386 = !{!3176, !3188}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !3182, file: !153, line: 58, baseType: !3388, size: 64, offset: 128)
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = !DISubroutineType(types: !3390)
!3390 = !{null, !3176, !1087}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !3182, file: !153, line: 59, baseType: !3392, size: 64, offset: 192)
!3392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3393, size: 64)
!3393 = !DISubroutineType(types: !3394)
!3394 = !{null, !3176}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !3182, file: !153, line: 60, baseType: !3396, size: 64, offset: 256)
!3396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3397, size: 64)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{!72, !3176, !647, !647}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !3182, file: !153, line: 61, baseType: !3392, size: 64, offset: 320)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !3182, file: !153, line: 62, baseType: !3401, size: 64, offset: 384)
!3401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3402, size: 64)
!3402 = !DISubroutineType(types: !3403)
!3403 = !{!647, !3176, !647}
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !3182, file: !153, line: 63, baseType: !3405, size: 64, offset: 448)
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 64)
!3406 = !DISubroutineType(types: !3407)
!3407 = !{!72, !3176, !3408, !3188}
!3408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3409, size: 64)
!3409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3189)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !3182, file: !153, line: 65, baseType: !3405, size: 64, offset: 512)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !3182, file: !153, line: 68, baseType: !3405, size: 64, offset: 576)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !3182, file: !153, line: 70, baseType: !3405, size: 64, offset: 640)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !3182, file: !153, line: 74, baseType: !3401, size: 64, offset: 704)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !3182, file: !153, line: 75, baseType: !3415, size: 64, offset: 768)
!3415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3416, size: 64)
!3416 = !DISubroutineType(types: !3417)
!3417 = !{!72, !3176, !647, !647, !413}
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !3182, file: !153, line: 76, baseType: !3419, size: 64, offset: 832)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 64)
!3420 = !DISubroutineType(types: !3421)
!3421 = !{!72, !3176, !647}
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !3182, file: !153, line: 77, baseType: !3423, size: 64, offset: 896)
!3423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 64)
!3424 = !DISubroutineType(types: !3425)
!3425 = !{!72, !3176, !647, !413}
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !3182, file: !153, line: 78, baseType: !3419, size: 64, offset: 960)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !3182, file: !153, line: 79, baseType: !3419, size: 64, offset: 1024)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !3182, file: !153, line: 82, baseType: !3429, size: 64, offset: 1088)
!3429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3430, size: 64)
!3430 = !DISubroutineType(types: !3431)
!3431 = !{!647, !3176, !1087, !72}
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !3182, file: !153, line: 84, baseType: !3433, size: 64, offset: 1152)
!3433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3434, size: 64)
!3434 = !DISubroutineType(types: !3435)
!3435 = !{null, !647}
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !3182, file: !153, line: 85, baseType: !3437, size: 64, offset: 1216)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3438, size: 64)
!3438 = !DISubroutineType(types: !3439)
!3439 = !{!72, !3176, !3440}
!3440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3441, size: 64)
!3441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !78, line: 65, size: 64, elements: !3442)
!3442 = !{!3443, !3444, !3445, !3446, !3447}
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3441, file: !78, line: 66, baseType: !1475, size: 8)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !3441, file: !78, line: 67, baseType: !1475, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !3441, file: !78, line: 68, baseType: !1475, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !3441, file: !78, line: 69, baseType: !1322, size: 16, offset: 16)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !3441, file: !78, line: 70, baseType: !1567, size: 32, offset: 32)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !3182, file: !153, line: 86, baseType: !3449, size: 64, offset: 1280)
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3450 = !DISubroutineType(types: !3451)
!3451 = !{!784, !647}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !3182, file: !153, line: 87, baseType: !3453, size: 64, offset: 1344)
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3454, size: 64)
!3454 = !DISubroutineType(types: !3455)
!3455 = !{null, !3176, !647, !1019}
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !3182, file: !153, line: 89, baseType: !3457, size: 64, offset: 1408)
!3457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3458, size: 64)
!3458 = !DISubroutineType(types: !3459)
!3459 = !{!72, !3460, !3462, !3155, !3155}
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3177)
!3462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 64)
!3463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3464)
!3464 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !153, line: 32, flags: DIFlagFwdDecl)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !3182, file: !153, line: 95, baseType: !3466, size: 64, offset: 1472)
!3466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3467, size: 64)
!3467 = !DISubroutineType(types: !3468)
!3468 = !{!72, !3176, !3075}
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !3182, file: !153, line: 96, baseType: !3470, size: 64, offset: 1536)
!3470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3471, size: 64)
!3471 = !DISubroutineType(types: !3472)
!3472 = !{null, !3176, !3075}
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !3182, file: !153, line: 97, baseType: !3474, size: 64, offset: 1600)
!3474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3475, size: 64)
!3475 = !DISubroutineType(types: !3476)
!3476 = !{null, !3176, !784, !3052, !3052}
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !3182, file: !153, line: 101, baseType: !3478, size: 64, offset: 1664)
!3478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3479, size: 64)
!3479 = !DISubroutineType(types: !3480)
!3480 = !{!72, !3460, !3481, !784}
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !3182, file: !153, line: 103, baseType: !3483, size: 64, offset: 1728)
!3483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3484, size: 64)
!3484 = !DISubroutineType(types: !3485)
!3485 = !{!72, !3460, !413, !1537}
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !3182, file: !153, line: 105, baseType: !3487, size: 64, offset: 1792)
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = !DISubroutineType(types: !3489)
!3489 = !{!72, !3176, !1192}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !3182, file: !153, line: 106, baseType: !3491, size: 64, offset: 1856)
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 64)
!3492 = !DISubroutineType(types: !3493)
!3493 = !{!1166, !3176, !1087, !1167}
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !3182, file: !153, line: 110, baseType: !3495, size: 64, offset: 1920)
!3495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3496, size: 64)
!3496 = !DISubroutineType(types: !3497)
!3497 = !{!72, !3498, !647, !784}
!3498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3499, size: 64)
!3499 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !153, line: 38, flags: DIFlagFwdDecl)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !3182, file: !153, line: 112, baseType: !3501, size: 64, offset: 1984)
!3501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3502, size: 64)
!3502 = !DISubroutineType(types: !3503)
!3503 = !{null, !3498, !647, !784}
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !3182, file: !153, line: 114, baseType: !3505, size: 64, offset: 2048)
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 64)
!3506 = !DISubroutineType(types: !3507)
!3507 = !{!3508, !647}
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 64)
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3510, size: 64)
!3510 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !153, line: 37, flags: DIFlagFwdDecl)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !3182, file: !153, line: 125, baseType: !3512, size: 64, offset: 2112)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = !DISubroutineType(types: !3514)
!3514 = !{!617, !3460, !3460}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !3182, file: !153, line: 129, baseType: !3516, size: 64, offset: 2176)
!3516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !374)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !3182, file: !153, line: 130, baseType: !616, size: 64, offset: 2240)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !3182, file: !153, line: 133, baseType: !3519, size: 64, offset: 2304)
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3520, size: 64)
!3520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3521)
!3521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !153, line: 46, size: 256, elements: !3522)
!3522 = !{!3523, !3524, !3531, !3533}
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !3521, file: !153, line: 47, baseType: !1038, size: 64)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !3521, file: !153, line: 48, baseType: !3525, size: 64, offset: 64)
!3525 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !153, line: 43, baseType: !3526)
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 64)
!3527 = !DISubroutineType(types: !3528)
!3528 = !{!72, !647, !3529}
!3529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3530, size: 64)
!3530 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !153, line: 36, flags: DIFlagFwdDecl)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !3521, file: !153, line: 49, baseType: !3532, size: 64, offset: 128)
!3532 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !153, line: 45, baseType: !3433)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !3521, file: !153, line: 50, baseType: !784, size: 32, offset: 192)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !3177, file: !153, line: 146, baseType: !3176, size: 64, offset: 64)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3177, file: !153, line: 150, baseType: !232, size: 32, offset: 128)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3177, file: !153, line: 151, baseType: !784, size: 32, offset: 160)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3177, file: !153, line: 152, baseType: !784, size: 32, offset: 192)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3177, file: !153, line: 153, baseType: !784, size: 32, offset: 224)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3177, file: !153, line: 154, baseType: !784, size: 32, offset: 256)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !3177, file: !153, line: 155, baseType: !72, size: 32, offset: 288)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3177, file: !153, line: 156, baseType: !784, size: 32, offset: 320)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3177, file: !153, line: 157, baseType: !72, size: 32, offset: 352)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3177, file: !153, line: 158, baseType: !784, size: 32, offset: 384)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3177, file: !153, line: 159, baseType: !784, size: 32, offset: 416)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3177, file: !153, line: 160, baseType: !3546, size: 64, offset: 448)
!3546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3464, size: 64)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !3177, file: !153, line: 161, baseType: !3548, size: 128, offset: 512)
!3548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !153, line: 136, size: 128, elements: !3549)
!3549 = !{!3550, !3551}
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3548, file: !153, line: 137, baseType: !784, size: 32)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3548, file: !153, line: 138, baseType: !1810, size: 64, offset: 64)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3177, file: !153, line: 162, baseType: !349, size: 128, offset: 640)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3177, file: !153, line: 163, baseType: !784, size: 32, offset: 768)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !3177, file: !153, line: 164, baseType: !617, size: 8, offset: 800)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3177, file: !153, line: 165, baseType: !617, size: 8, offset: 808)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3177, file: !153, line: 171, baseType: !455, size: 64, align: 512, offset: 1024)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !3177, file: !153, line: 172, baseType: !455, size: 64, offset: 1088)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3177, file: !153, line: 173, baseType: !1884, size: 256, offset: 1152)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !3177, file: !153, line: 174, baseType: !1031, size: 192, offset: 1408)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !3177, file: !153, line: 175, baseType: !413, size: 64, offset: 1600)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3173, file: !153, line: 741, baseType: !784, size: 32, offset: 64)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !3164, file: !153, line: 744, baseType: !617, size: 8, offset: 320)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !3164, file: !153, line: 745, baseType: !1474, size: 8, offset: 328)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !3164, file: !153, line: 746, baseType: !1115, size: 16, offset: 336)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !3164, file: !153, line: 747, baseType: !784, size: 32, offset: 352)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !3076, file: !153, line: 792, baseType: !784, size: 32, offset: 1472)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !3076, file: !153, line: 793, baseType: !3128, size: 1728, offset: 1536)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3076, file: !153, line: 794, baseType: !3569, size: 64, offset: 3264)
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 64)
!3570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3571)
!3571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !153, line: 432, size: 64, elements: !3572)
!3572 = !{!3573}
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !3571, file: !153, line: 433, baseType: !3574, size: 64)
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3575, size: 64)
!3575 = !DISubroutineType(types: !3576)
!3576 = !{!72, !3052, !3408, !3188}
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !3076, file: !153, line: 795, baseType: !3578, size: 64, offset: 3328)
!3578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3176, size: 64)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !3076, file: !153, line: 796, baseType: !1031, size: 192, offset: 3392)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3076, file: !153, line: 797, baseType: !3052, size: 64, offset: 3584)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3076, file: !153, line: 798, baseType: !1810, size: 64, offset: 3648)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !3076, file: !153, line: 799, baseType: !413, size: 64, offset: 3712)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3076, file: !153, line: 800, baseType: !3584, size: 128, offset: 3776)
!3584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3176, size: 128, elements: !555)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3076, file: !153, line: 801, baseType: !349, size: 128, offset: 3904)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !3076, file: !153, line: 805, baseType: !3587, size: 64, offset: 4032)
!3587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3588, size: 64)
!3588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !153, line: 478, size: 576, elements: !3589)
!3589 = !{!3590, !3591, !3592, !3595, !3596, !3597, !3598, !3599, !3600}
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3588, file: !153, line: 479, baseType: !3052, size: 64)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !3588, file: !153, line: 480, baseType: !372, size: 64, offset: 64)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !3588, file: !153, line: 481, baseType: !3593, size: 64, offset: 128)
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 64)
!3594 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !153, line: 209, flags: DIFlagFwdDecl)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !3588, file: !153, line: 482, baseType: !647, size: 64, offset: 192)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !3588, file: !153, line: 483, baseType: !366, size: 128, offset: 256)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !3588, file: !153, line: 484, baseType: !617, size: 8, offset: 384)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !3588, file: !153, line: 485, baseType: !617, size: 8, offset: 392)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !3588, file: !153, line: 486, baseType: !647, size: 64, offset: 448)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !3588, file: !153, line: 487, baseType: !784, size: 32, offset: 512)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3076, file: !153, line: 806, baseType: !3546, size: 64, offset: 4096)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3076, file: !153, line: 807, baseType: !3603, size: 64, offset: 4160)
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3604, size: 64)
!3604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !78, line: 4963, size: 64, elements: !3605)
!3605 = !{!3606, !3607}
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3604, file: !78, line: 4964, baseType: !545, size: 32)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !3604, file: !78, line: 4965, baseType: !545, size: 32, offset: 32)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !3076, file: !153, line: 808, baseType: !3609, size: 64, offset: 4224)
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3610, size: 64)
!3610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !153, line: 724, size: 32, elements: !3611)
!3611 = !{!3612, !3613}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !3610, file: !153, line: 725, baseType: !1115, size: 16)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !3610, file: !153, line: 726, baseType: !617, size: 8, offset: 16)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !3076, file: !153, line: 815, baseType: !3615, size: 64, offset: 4288)
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3616, size: 64)
!3616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !78, line: 4971, size: 128, elements: !3617)
!3617 = !{!3618, !3619, !3620, !3621}
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3616, file: !78, line: 4972, baseType: !545, size: 32)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !3616, file: !78, line: 4973, baseType: !545, size: 32, offset: 32)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !3616, file: !78, line: 4974, baseType: !545, size: 32, offset: 64)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !3616, file: !78, line: 4975, baseType: !545, size: 32, offset: 96)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !3076, file: !153, line: 823, baseType: !3623, size: 64, offset: 4352)
!3623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3076, file: !153, line: 824, baseType: !784, size: 32, offset: 4416)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !3076, file: !153, line: 825, baseType: !784, size: 32, offset: 4448)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !3076, file: !153, line: 830, baseType: !784, size: 32, offset: 4480)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !3076, file: !153, line: 831, baseType: !784, size: 32, offset: 4512)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !3076, file: !153, line: 832, baseType: !3629, size: 64, offset: 4544)
!3629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3630, size: 64)
!3630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !3631, line: 17, size: 96, elements: !3632)
!3631 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!3632 = !{!3633, !3634, !3635}
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !3630, file: !3631, line: 18, baseType: !72, size: 32)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !3630, file: !3631, line: 18, baseType: !72, size: 32, offset: 32)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3630, file: !3631, line: 18, baseType: !72, size: 32, offset: 64)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3076, file: !153, line: 833, baseType: !3637, size: 64, offset: 4608)
!3637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3638, size: 64)
!3638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !153, line: 503, size: 128, align: 128, elements: !3639)
!3639 = !{!3640, !3641, !3642}
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !3638, file: !153, line: 504, baseType: !413, size: 64)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !3638, file: !153, line: 505, baseType: !413, size: 64, offset: 64)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3638, file: !153, line: 506, baseType: !2134, offset: 128)
!3643 = !DIDerivedType(tag: DW_TAG_member, scope: !3076, file: !153, line: 834, baseType: !3644, size: 256, offset: 4672)
!3644 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3076, file: !153, line: 834, size: 256, elements: !3645)
!3645 = !{!3646, !3647}
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3644, file: !153, line: 835, baseType: !1884, size: 256)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3644, file: !153, line: 836, baseType: !381, size: 128, align: 64)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "orig_prog", scope: !3053, file: !3054, line: 544, baseType: !3649, size: 64, offset: 320)
!3649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3650, size: 64)
!3650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_fprog_kern", file: !3054, line: 512, size: 128, elements: !3651)
!3651 = !{!3652, !3653}
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3650, file: !3054, line: 513, baseType: !1115, size: 16)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3650, file: !3054, line: 514, baseType: !3654, size: 64, offset: 64)
!3654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3655, size: 64)
!3655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_filter", file: !3656, line: 24, size: 64, elements: !3657)
!3656 = !DIFile(filename: "./include/uapi/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!3657 = !{!3658, !3659, !3660, !3661}
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3655, file: !3656, line: 25, baseType: !553, size: 16)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "jt", scope: !3655, file: !3656, line: 26, baseType: !1475, size: 8, offset: 16)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "jf", scope: !3655, file: !3656, line: 27, baseType: !1475, size: 8, offset: 24)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !3655, file: !3656, line: 28, baseType: !545, size: 32, offset: 32)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_func", scope: !3053, file: !3054, line: 545, baseType: !3663, size: 64, offset: 384)
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 64)
!3664 = !DISubroutineType(types: !3665)
!3665 = !{!7, !2340, !3666}
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!3667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3441)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3053, file: !3054, line: 548, baseType: !3669, offset: 448)
!3669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3655, elements: !1999)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "insnsi", scope: !3053, file: !3054, line: 549, baseType: !3671, offset: 448)
!3671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3441, elements: !391)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3049, file: !153, line: 1034, baseType: !3673, size: 128, offset: 64)
!3673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3674, size: 128, elements: !555)
!3674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3675, size: 64)
!3675 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !153, line: 1034, flags: DIFlagFwdDecl)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3038, file: !3039, line: 17, baseType: !3677, size: 128, offset: 128)
!3677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3052, size: 128, elements: !555)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3038, file: !3039, line: 18, baseType: !3679, size: 256, offset: 256)
!3679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 256, elements: !555)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !2040, file: !2041, line: 174, baseType: !455, size: 64, offset: 15552)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !2040, file: !2041, line: 183, baseType: !3682, size: 1216, offset: 15616)
!3682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3683, line: 15, size: 1216, elements: !3684)
!3683 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3684 = !{!3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3698, !3699, !3700, !3703, !3706}
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3682, file: !3683, line: 17, baseType: !2074, size: 64)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3682, file: !3683, line: 18, baseType: !2074, size: 64, offset: 64)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3682, file: !3683, line: 19, baseType: !2074, size: 64, offset: 128)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3682, file: !3683, line: 20, baseType: !2074, size: 64, offset: 192)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3682, file: !3683, line: 21, baseType: !2074, size: 64, offset: 256)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3682, file: !3683, line: 22, baseType: !2074, size: 64, offset: 320)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3682, file: !3683, line: 23, baseType: !2074, size: 64, offset: 384)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3682, file: !3683, line: 24, baseType: !2074, size: 64, offset: 448)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3682, file: !3683, line: 25, baseType: !2074, size: 64, offset: 512)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3682, file: !3683, line: 26, baseType: !2074, size: 64, offset: 576)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3682, file: !3683, line: 30, baseType: !3696, size: 64, offset: 640)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 64)
!3697 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3683, line: 11, flags: DIFlagFwdDecl)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3682, file: !3683, line: 31, baseType: !806, offset: 704)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3682, file: !3683, line: 32, baseType: !2317, size: 320, offset: 704)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3682, file: !3683, line: 33, baseType: !3701, size: 64, offset: 1024)
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3702, size: 64)
!3702 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3683, line: 12, flags: DIFlagFwdDecl)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3682, file: !3683, line: 34, baseType: !3704, size: 64, offset: 1088)
!3704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3705, size: 64)
!3705 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3683, line: 13, flags: DIFlagFwdDecl)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3682, file: !3683, line: 37, baseType: !934, size: 64, offset: 1152)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !2040, file: !2041, line: 191, baseType: !527, size: 64, offset: 16832)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2024, file: !2025, line: 38, baseType: !3709, size: 64, offset: 384)
!3709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3710, size: 64)
!3710 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2025, line: 38, flags: DIFlagFwdDecl)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2024, file: !2025, line: 39, baseType: !3709, size: 64, offset: 448)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2024, file: !2025, line: 40, baseType: !3713, size: 64, offset: 512)
!3713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3714, size: 64)
!3714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3715, line: 856, size: 448, elements: !3716)
!3715 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3716 = !{!3717, !3718, !3719, !3720, !3721}
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3714, file: !3715, line: 857, baseType: !1348, size: 32)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3714, file: !3715, line: 858, baseType: !1870, size: 192, offset: 64)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3714, file: !3715, line: 859, baseType: !1836, size: 64, offset: 256)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3714, file: !3715, line: 860, baseType: !1978, size: 64, offset: 320)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3714, file: !3715, line: 861, baseType: !3722, size: 64, offset: 384)
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 64)
!3723 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3724, line: 16, flags: DIFlagFwdDecl)
!3724 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1335, file: !1336, line: 969, baseType: !3726, size: 64, offset: 9216)
!3726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3727, size: 64)
!3727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3728, line: 82, size: 7296, elements: !3729)
!3728 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3729 = !{!3730, !3731, !3732, !3733, !3734, !3735, !3736, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3765, !3774, !3775, !3777, !3778, !3779, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803, !3804, !3807, !3808, !3815, !3816, !3817, !3818, !3819, !3820}
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3727, file: !3728, line: 83, baseType: !1348, size: 32)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3727, file: !3728, line: 84, baseType: !465, size: 32, offset: 32)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3727, file: !3728, line: 85, baseType: !72, size: 32, offset: 64)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3727, file: !3728, line: 86, baseType: !366, size: 128, offset: 128)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3727, file: !3728, line: 88, baseType: !1177, size: 128, offset: 256)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3727, file: !3728, line: 91, baseType: !1334, size: 64, offset: 384)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3727, file: !3728, line: 94, baseType: !3737, size: 192, offset: 448)
!3737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3738, line: 30, size: 192, elements: !3739)
!3738 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3739 = !{!3740, !3741}
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3737, file: !3738, line: 31, baseType: !366, size: 128)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3737, file: !3738, line: 32, baseType: !3742, size: 64, offset: 128)
!3742 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3743, line: 25, baseType: !3744)
!3743 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3744 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3743, line: 23, size: 64, elements: !3745)
!3745 = !{!3746}
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3744, file: !3743, line: 24, baseType: !1492, size: 64)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3727, file: !3728, line: 97, baseType: !934, size: 64, offset: 640)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3727, file: !3728, line: 100, baseType: !72, size: 32, offset: 704)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3727, file: !3728, line: 106, baseType: !72, size: 32, offset: 736)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3727, file: !3728, line: 107, baseType: !1334, size: 64, offset: 768)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3727, file: !3728, line: 110, baseType: !72, size: 32, offset: 832)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3727, file: !3728, line: 111, baseType: !7, size: 32, offset: 864)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3727, file: !3728, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3727, file: !3728, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3727, file: !3728, line: 128, baseType: !72, size: 32, offset: 928)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3727, file: !3728, line: 129, baseType: !366, size: 128, offset: 960)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3727, file: !3728, line: 132, baseType: !1410, size: 512, offset: 1088)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3727, file: !3728, line: 133, baseType: !1418, size: 64, offset: 1600)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3727, file: !3728, line: 140, baseType: !3760, size: 256, offset: 1664)
!3760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3761, size: 256, elements: !555)
!3761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3728, line: 38, size: 128, elements: !3762)
!3762 = !{!3763, !3764}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3761, file: !3728, line: 39, baseType: !413, size: 64)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3761, file: !3728, line: 40, baseType: !413, size: 64, offset: 64)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3727, file: !3728, line: 146, baseType: !3766, size: 192, offset: 1920)
!3766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3728, line: 66, size: 192, elements: !3767)
!3767 = !{!3768}
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3766, file: !3728, line: 67, baseType: !3769, size: 192)
!3769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3728, line: 47, size: 192, elements: !3770)
!3770 = !{!3771, !3772, !3773}
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3769, file: !3728, line: 48, baseType: !455, size: 64)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3769, file: !3728, line: 49, baseType: !455, size: 64, offset: 64)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3769, file: !3728, line: 50, baseType: !455, size: 64, offset: 128)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3727, file: !3728, line: 150, baseType: !1652, size: 640, offset: 2112)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3727, file: !3728, line: 153, baseType: !3776, size: 256, offset: 2752)
!3776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1598, size: 256, elements: !1279)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3727, file: !3728, line: 159, baseType: !1598, size: 64, offset: 3008)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3727, file: !3728, line: 162, baseType: !72, size: 32, offset: 3072)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3727, file: !3728, line: 164, baseType: !3780, size: 64, offset: 3136)
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64)
!3781 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3728, line: 164, flags: DIFlagFwdDecl)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3727, file: !3728, line: 175, baseType: !2250, size: 32, offset: 3200)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3727, file: !3728, line: 176, baseType: !413, size: 64, offset: 3264)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3727, file: !3728, line: 176, baseType: !413, size: 64, offset: 3328)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3727, file: !3728, line: 176, baseType: !413, size: 64, offset: 3392)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3727, file: !3728, line: 176, baseType: !413, size: 64, offset: 3456)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3727, file: !3728, line: 177, baseType: !413, size: 64, offset: 3520)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3727, file: !3728, line: 178, baseType: !413, size: 64, offset: 3584)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3727, file: !3728, line: 179, baseType: !1640, size: 128, offset: 3648)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3727, file: !3728, line: 180, baseType: !394, size: 64, offset: 3776)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3727, file: !3728, line: 180, baseType: !394, size: 64, offset: 3840)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3727, file: !3728, line: 180, baseType: !394, size: 64, offset: 3904)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3727, file: !3728, line: 180, baseType: !394, size: 64, offset: 3968)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3727, file: !3728, line: 181, baseType: !394, size: 64, offset: 4032)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3727, file: !3728, line: 181, baseType: !394, size: 64, offset: 4096)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3727, file: !3728, line: 181, baseType: !394, size: 64, offset: 4160)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3727, file: !3728, line: 181, baseType: !394, size: 64, offset: 4224)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3727, file: !3728, line: 182, baseType: !394, size: 64, offset: 4288)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3727, file: !3728, line: 182, baseType: !394, size: 64, offset: 4352)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3727, file: !3728, line: 182, baseType: !394, size: 64, offset: 4416)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3727, file: !3728, line: 182, baseType: !394, size: 64, offset: 4480)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3727, file: !3728, line: 183, baseType: !394, size: 64, offset: 4544)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3727, file: !3728, line: 183, baseType: !394, size: 64, offset: 4608)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3727, file: !3728, line: 184, baseType: !3805, offset: 4672)
!3805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3806, line: 12, elements: !820)
!3806 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3727, file: !3728, line: 192, baseType: !417, size: 64, offset: 4672)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3727, file: !3728, line: 203, baseType: !3809, size: 2048, offset: 4736)
!3809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3810, size: 2048, elements: !351)
!3810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3811, line: 43, size: 128, elements: !3812)
!3811 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3812 = !{!3813, !3814}
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3810, file: !3811, line: 44, baseType: !674, size: 64)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3810, file: !3811, line: 45, baseType: !674, size: 64, offset: 64)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3727, file: !3728, line: 220, baseType: !617, size: 8, offset: 6784)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3727, file: !3728, line: 221, baseType: !1323, size: 16, offset: 6800)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3727, file: !3728, line: 222, baseType: !1323, size: 16, offset: 6816)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3727, file: !3728, line: 224, baseType: !1202, size: 64, offset: 6848)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3727, file: !3728, line: 227, baseType: !1031, size: 192, offset: 6912)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3727, file: !3728, line: 233, baseType: !1031, size: 192, offset: 7104)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1335, file: !1336, line: 970, baseType: !3822, size: 64, offset: 9280)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3728, line: 20, size: 16576, elements: !3824)
!3824 = !{!3825, !3826, !3827, !3828}
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3823, file: !3728, line: 21, baseType: !806)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3823, file: !3728, line: 22, baseType: !1348, size: 32)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3823, file: !3728, line: 23, baseType: !1177, size: 128, offset: 64)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3823, file: !3728, line: 24, baseType: !3829, size: 16384, offset: 192)
!3829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3830, size: 16384, elements: !3850)
!3830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3738, line: 49, size: 256, elements: !3831)
!3831 = !{!3832}
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3830, file: !3738, line: 50, baseType: !3833, size: 256)
!3833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3738, line: 35, size: 256, elements: !3834)
!3834 = !{!3835, !3842, !3843, !3849}
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3833, file: !3738, line: 37, baseType: !3836, size: 64)
!3836 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3837, line: 19, baseType: !3838)
!3837 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3839, size: 64)
!3839 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3837, line: 18, baseType: !3840)
!3840 = !DISubroutineType(types: !3841)
!3841 = !{null, !72}
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3833, file: !3738, line: 38, baseType: !394, size: 64, offset: 64)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3833, file: !3738, line: 44, baseType: !3844, size: 64, offset: 128)
!3844 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3837, line: 22, baseType: !3845)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3837, line: 21, baseType: !3847)
!3847 = !DISubroutineType(types: !3848)
!3848 = !{null}
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3833, file: !3738, line: 46, baseType: !3742, size: 64, offset: 192)
!3850 = !{!3851}
!3851 = !DISubrange(count: 64)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1335, file: !1336, line: 971, baseType: !3742, size: 64, offset: 9344)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1335, file: !1336, line: 972, baseType: !3742, size: 64, offset: 9408)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1335, file: !1336, line: 974, baseType: !3742, size: 64, offset: 9472)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1335, file: !1336, line: 975, baseType: !3737, size: 192, offset: 9536)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1335, file: !1336, line: 976, baseType: !394, size: 64, offset: 9728)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1335, file: !1336, line: 977, baseType: !671, size: 64, offset: 9792)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1335, file: !1336, line: 978, baseType: !7, size: 32, offset: 9856)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1335, file: !1336, line: 980, baseType: !384, size: 64, offset: 9920)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1335, file: !1336, line: 989, baseType: !3861, size: 128, offset: 9984)
!3861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3862, line: 35, size: 128, elements: !3863)
!3862 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3863 = !{!3864, !3865, !3866}
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3861, file: !3862, line: 36, baseType: !72, size: 32)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3861, file: !3862, line: 37, baseType: !465, size: 32, offset: 32)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3861, file: !3862, line: 38, baseType: !3867, size: 64, offset: 64)
!3867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3868, size: 64)
!3868 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3862, line: 23, flags: DIFlagFwdDecl)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1335, file: !1336, line: 992, baseType: !413, size: 64, offset: 10112)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1335, file: !1336, line: 993, baseType: !413, size: 64, offset: 10176)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1335, file: !1336, line: 996, baseType: !806, offset: 10240)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1335, file: !1336, line: 999, baseType: !1245, offset: 10240)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1335, file: !1336, line: 1001, baseType: !3874, size: 64, offset: 10240)
!3874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1336, line: 636, size: 64, elements: !3875)
!3875 = !{!3876}
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3874, file: !1336, line: 637, baseType: !3877, size: 64)
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3874, size: 64)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1335, file: !1336, line: 1005, baseType: !1464, size: 128, offset: 10304)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1335, file: !1336, line: 1007, baseType: !1334, size: 64, offset: 10432)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1335, file: !1336, line: 1009, baseType: !3881, size: 64, offset: 10496)
!3881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3882, size: 64)
!3882 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1336, line: 1009, flags: DIFlagFwdDecl)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1335, file: !1336, line: 1043, baseType: !647, size: 64, offset: 10560)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1335, file: !1336, line: 1046, baseType: !3885, size: 64, offset: 10624)
!3885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3886, size: 64)
!3886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !3887, line: 554, size: 128, elements: !3888)
!3887 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!3888 = !{!3889, !5578}
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3886, file: !3887, line: 555, baseType: !3890, size: 64)
!3890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3891, size: 64)
!3891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !3892, line: 203, size: 832, elements: !3893)
!3892 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!3893 = !{!3894, !3895, !5532, !5533, !5534, !5535, !5536, !5537, !5538, !5539, !5546, !5551, !5552, !5571, !5572, !5573, !5574, !5575, !5577}
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !3891, file: !3892, line: 204, baseType: !3890, size: 64)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !3891, file: !3892, line: 205, baseType: !3896, size: 64, offset: 64)
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3897, size: 64)
!3897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !3898, line: 167, size: 8512, elements: !3899)
!3898 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!3899 = !{!3900, !3901, !3902, !3903, !3905, !3906, !3907, !4855, !4856, !5019, !5513, !5514, !5515, !5516, !5517, !5518, !5521, !5522, !5525, !5526, !5527, !5530}
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !3897, file: !3898, line: 171, baseType: !72, size: 32)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !3897, file: !3898, line: 172, baseType: !72, size: 32, offset: 32)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !3897, file: !3898, line: 173, baseType: !72, size: 32, offset: 64)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3897, file: !3898, line: 176, baseType: !3904, size: 256, offset: 96)
!3904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 256, elements: !793)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3897, file: !3898, line: 178, baseType: !554, size: 16, offset: 352)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !3897, file: !3898, line: 179, baseType: !554, size: 16, offset: 368)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !3897, file: !3898, line: 186, baseType: !3908, size: 64, offset: 384)
!3908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3909, size: 64)
!3909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !3898, line: 149, size: 256, elements: !3910)
!3910 = !{!3911, !3912, !3913, !4853}
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3909, file: !3898, line: 150, baseType: !381, size: 128, align: 64)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3909, file: !3898, line: 151, baseType: !72, size: 32, offset: 128)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !3909, file: !3898, line: 152, baseType: !3914, size: 64, offset: 192)
!3914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3915, size: 64)
!3915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !3898, line: 53, size: 6592, elements: !3916)
!3916 = !{!3917, !3919, !3920, !3921, !3924, !3945, !4836, !4837, !4838, !4839, !4847}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !3915, file: !3898, line: 54, baseType: !3918, size: 64)
!3918 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !359, line: 125, baseType: !413)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !3915, file: !3898, line: 60, baseType: !3918, size: 64, offset: 64)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3915, file: !3898, line: 64, baseType: !394, size: 64, offset: 128)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !3915, file: !3898, line: 65, baseType: !3922, size: 64, offset: 192)
!3922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3923, size: 64)
!3923 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !3898, line: 65, flags: DIFlagFwdDecl)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3915, file: !3898, line: 66, baseType: !3925, size: 128, offset: 256)
!3925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !3926, line: 105, size: 128, elements: !3927)
!3926 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!3927 = !{!3928, !3929}
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !3925, file: !3926, line: 110, baseType: !394, size: 64)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3925, file: !3926, line: 118, baseType: !3930, size: 64, offset: 64)
!3930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3931, size: 64)
!3931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !3926, line: 95, size: 448, elements: !3932)
!3932 = !{!3933, !3934, !3940, !3941, !3942, !3943, !3944}
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3931, file: !3926, line: 96, baseType: !453, size: 64)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3931, file: !3926, line: 97, baseType: !3935, size: 64, offset: 64)
!3935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3936, size: 64)
!3936 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !3926, line: 60, baseType: !3937)
!3937 = !DISubroutineType(types: !3938)
!3938 = !{null, !3939}
!3939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3925, size: 64)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !3931, file: !3926, line: 98, baseType: !3935, size: 64, offset: 128)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !3931, file: !3926, line: 99, baseType: !617, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !3931, file: !3926, line: 100, baseType: !617, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3931, file: !3926, line: 101, baseType: !381, size: 128, align: 64, offset: 256)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3931, file: !3926, line: 102, baseType: !3939, size: 64, offset: 384)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !3915, file: !3898, line: 68, baseType: !3946, size: 5568, offset: 384)
!3946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !25, line: 461, size: 5568, elements: !3947)
!3947 = !{!3948, !4307, !4309, !4312, !4313, !4364, !4450, !4451, !4452, !4453, !4454, !4463, !4557, !4570, !4764, !4765, !4769, !4770, !4771, !4772, !4776, !4782, !4783, !4786, !4787, !4788, !4789, !4790, !4791, !4792, !4824, !4825, !4826, !4829, !4832, !4833, !4834, !4835}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3946, file: !25, line: 462, baseType: !3949, size: 512)
!3949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !3950, line: 64, size: 512, elements: !3951)
!3950 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!3951 = !{!3952, !3953, !3954, !3956, !3996, !4092, !4297, !4302, !4303, !4304, !4305, !4306}
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3949, file: !3950, line: 65, baseType: !374, size: 64)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3949, file: !3950, line: 66, baseType: !366, size: 128, offset: 64)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3949, file: !3950, line: 67, baseType: !3955, size: 64, offset: 192)
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3949, size: 64)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !3949, file: !3950, line: 68, baseType: !3957, size: 64, offset: 256)
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3958, size: 64)
!3958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !3950, line: 192, size: 704, elements: !3959)
!3959 = !{!3960, !3961, !3962, !3963}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3958, file: !3950, line: 193, baseType: !366, size: 128)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3958, file: !3950, line: 194, baseType: !806, offset: 128)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3958, file: !3950, line: 195, baseType: !3949, size: 512, offset: 128)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !3958, file: !3950, line: 196, baseType: !3964, size: 64, offset: 640)
!3964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3965, size: 64)
!3965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3966)
!3966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !3950, line: 156, size: 192, elements: !3967)
!3967 = !{!3968, !3973, !3978}
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3966, file: !3950, line: 157, baseType: !3969, size: 64)
!3969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3970)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{!72, !3957, !3955}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3966, file: !3950, line: 158, baseType: !3974, size: 64, offset: 64)
!3974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3975)
!3975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3976, size: 64)
!3976 = !DISubroutineType(types: !3977)
!3977 = !{!374, !3957, !3955}
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3966, file: !3950, line: 159, baseType: !3979, size: 64, offset: 128)
!3979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3980)
!3980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3981, size: 64)
!3981 = !DISubroutineType(types: !3982)
!3982 = !{!72, !3957, !3955, !3983}
!3983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3984, size: 64)
!3984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !3950, line: 148, size: 20736, elements: !3985)
!3985 = !{!3986, !3988, !3990, !3991, !3995}
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !3984, file: !3950, line: 149, baseType: !3987, size: 192)
!3987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !654, size: 192, elements: !944)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !3984, file: !3950, line: 150, baseType: !3989, size: 4096, offset: 192)
!3989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !654, size: 4096, elements: !3850)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !3984, file: !3950, line: 151, baseType: !72, size: 32, offset: 4288)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3984, file: !3950, line: 152, baseType: !3992, size: 16384, offset: 4320)
!3992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 16384, elements: !3993)
!3993 = !{!3994}
!3994 = !DISubrange(count: 2048)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !3984, file: !3950, line: 153, baseType: !72, size: 32, offset: 20704)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !3949, file: !3950, line: 69, baseType: !3997, size: 64, offset: 320)
!3997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3998, size: 64)
!3998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !3950, line: 138, size: 448, elements: !3999)
!3999 = !{!4000, !4004, !4023, !4025, !4058, !4084, !4088}
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3998, file: !3950, line: 139, baseType: !4001, size: 64)
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4002, size: 64)
!4002 = !DISubroutineType(types: !4003)
!4003 = !{null, !3955}
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !3998, file: !3950, line: 140, baseType: !4005, size: 64, offset: 64)
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4006, size: 64)
!4006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4007)
!4007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !4008, line: 230, size: 128, elements: !4009)
!4008 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!4009 = !{!4010, !4019}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4007, file: !4008, line: 231, baseType: !4011, size: 64)
!4011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4012, size: 64)
!4012 = !DISubroutineType(types: !4013)
!4013 = !{!1092, !3955, !4014, !654}
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !4008, line: 30, size: 128, elements: !4016)
!4016 = !{!4017, !4018}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4015, file: !4008, line: 31, baseType: !374, size: 64)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4015, file: !4008, line: 32, baseType: !723, size: 16, offset: 64)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4007, file: !4008, line: 232, baseType: !4020, size: 64, offset: 64)
!4020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4021, size: 64)
!4021 = !DISubroutineType(types: !4022)
!4022 = !{!1092, !3955, !4014, !374, !671}
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !3998, file: !3950, line: 141, baseType: !4024, size: 64, offset: 128)
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4014, size: 64)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !3998, file: !3950, line: 142, baseType: !4026, size: 64, offset: 192)
!4026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4027, size: 64)
!4027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4028, size: 64)
!4028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4029)
!4029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !4008, line: 84, size: 320, elements: !4030)
!4030 = !{!4031, !4032, !4036, !4055, !4056}
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4029, file: !4008, line: 85, baseType: !374, size: 64)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !4029, file: !4008, line: 86, baseType: !4033, size: 64, offset: 64)
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4034 = !DISubroutineType(types: !4035)
!4035 = !{!723, !3955, !4014, !72}
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !4029, file: !4008, line: 88, baseType: !4037, size: 64, offset: 128)
!4037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4038, size: 64)
!4038 = !DISubroutineType(types: !4039)
!4039 = !{!723, !3955, !4040, !72}
!4040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4041, size: 64)
!4041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !4008, line: 168, size: 448, elements: !4042)
!4042 = !{!4043, !4044, !4045, !4046, !4050, !4051}
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4041, file: !4008, line: 169, baseType: !4015, size: 128)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4041, file: !4008, line: 170, baseType: !671, size: 64, offset: 128)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4041, file: !4008, line: 171, baseType: !647, size: 64, offset: 192)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4041, file: !4008, line: 172, baseType: !4047, size: 64, offset: 256)
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 64)
!4048 = !DISubroutineType(types: !4049)
!4049 = !{!1092, !1087, !3955, !4040, !654, !901, !671}
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4041, file: !4008, line: 174, baseType: !4047, size: 64, offset: 320)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4041, file: !4008, line: 176, baseType: !4052, size: 64, offset: 384)
!4052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4053, size: 64)
!4053 = !DISubroutineType(types: !4054)
!4054 = !{!72, !1087, !3955, !4040, !1192}
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !4029, file: !4008, line: 90, baseType: !4024, size: 64, offset: 192)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !4029, file: !4008, line: 91, baseType: !4057, size: 64, offset: 256)
!4057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4040, size: 64)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !3998, file: !3950, line: 143, baseType: !4059, size: 64, offset: 256)
!4059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4060, size: 64)
!4060 = !DISubroutineType(types: !4061)
!4061 = !{!4062, !3955}
!4062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4063, size: 64)
!4063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4064)
!4064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !65, line: 39, size: 384, elements: !4065)
!4065 = !{!4066, !4067, !4071, !4075, !4079, !4083}
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4064, file: !65, line: 40, baseType: !64, size: 32)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !4064, file: !65, line: 41, baseType: !4068, size: 64, offset: 64)
!4068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4069, size: 64)
!4069 = !DISubroutineType(types: !4070)
!4070 = !{!617}
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !4064, file: !65, line: 42, baseType: !4072, size: 64, offset: 128)
!4072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4073, size: 64)
!4073 = !DISubroutineType(types: !4074)
!4074 = !{!647}
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !4064, file: !65, line: 43, baseType: !4076, size: 64, offset: 192)
!4076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4077, size: 64)
!4077 = !DISubroutineType(types: !4078)
!4078 = !{!2340, !527}
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !4064, file: !65, line: 44, baseType: !4080, size: 64, offset: 256)
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4081, size: 64)
!4081 = !DISubroutineType(types: !4082)
!4082 = !{!2340}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !4064, file: !65, line: 45, baseType: !3433, size: 64, offset: 320)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3998, file: !3950, line: 144, baseType: !4085, size: 64, offset: 320)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 64)
!4086 = !DISubroutineType(types: !4087)
!4087 = !{!2340, !3955}
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3998, file: !3950, line: 145, baseType: !4089, size: 64, offset: 384)
!4089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4090, size: 64)
!4090 = !DISubroutineType(types: !4091)
!4091 = !{null, !3955, !1959, !1960}
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !3949, file: !3950, line: 70, baseType: !4093, size: 64, offset: 384)
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4094, size: 64)
!4094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !915, line: 123, size: 1024, elements: !4095)
!4095 = !{!4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4290, !4291, !4292, !4293, !4294}
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4094, file: !915, line: 124, baseType: !465, size: 32)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4094, file: !915, line: 125, baseType: !465, size: 32, offset: 32)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4094, file: !915, line: 135, baseType: !4093, size: 64, offset: 64)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4094, file: !915, line: 136, baseType: !374, size: 64, offset: 128)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4094, file: !915, line: 138, baseType: !515, size: 192, align: 64, offset: 192)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4094, file: !915, line: 140, baseType: !2340, size: 64, offset: 384)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4094, file: !915, line: 141, baseType: !7, size: 32, offset: 448)
!4103 = !DIDerivedType(tag: DW_TAG_member, scope: !4094, file: !915, line: 142, baseType: !4104, size: 256, offset: 512)
!4104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4094, file: !915, line: 142, size: 256, elements: !4105)
!4105 = !{!4106, !4146, !4150}
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4104, file: !915, line: 143, baseType: !4107, size: 192)
!4107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !915, line: 91, size: 192, elements: !4108)
!4108 = !{!4109, !4110, !4111}
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !4107, file: !915, line: 92, baseType: !394, size: 64)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4107, file: !915, line: 94, baseType: !1210, size: 64, offset: 64)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !4107, file: !915, line: 100, baseType: !4112, size: 64, offset: 128)
!4112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4113, size: 64)
!4113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !915, line: 180, size: 704, elements: !4114)
!4114 = !{!4115, !4116, !4117, !4118, !4119, !4120, !4144, !4145}
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4113, file: !915, line: 182, baseType: !4093, size: 64)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4113, file: !915, line: 183, baseType: !7, size: 32, offset: 64)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !4113, file: !915, line: 186, baseType: !2058, size: 192, offset: 128)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !4113, file: !915, line: 187, baseType: !784, size: 32, offset: 320)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !4113, file: !915, line: 188, baseType: !784, size: 32, offset: 352)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !4113, file: !915, line: 189, baseType: !4121, size: 64, offset: 384)
!4121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4122, size: 64)
!4122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !915, line: 168, size: 320, elements: !4123)
!4123 = !{!4124, !4128, !4132, !4136, !4140}
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !4122, file: !915, line: 169, baseType: !4125, size: 64)
!4125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4126, size: 64)
!4126 = !DISubroutineType(types: !4127)
!4127 = !{!72, !1019, !4112}
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !4122, file: !915, line: 171, baseType: !4129, size: 64, offset: 64)
!4129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4130, size: 64)
!4130 = !DISubroutineType(types: !4131)
!4131 = !{!72, !4093, !374, !723}
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !4122, file: !915, line: 173, baseType: !4133, size: 64, offset: 128)
!4133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4134, size: 64)
!4134 = !DISubroutineType(types: !4135)
!4135 = !{!72, !4093}
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !4122, file: !915, line: 174, baseType: !4137, size: 64, offset: 192)
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4138, size: 64)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{!72, !4093, !4093, !374}
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !4122, file: !915, line: 176, baseType: !4141, size: 64, offset: 256)
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4142, size: 64)
!4142 = !DISubroutineType(types: !4143)
!4143 = !{!72, !1019, !4093, !4112}
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !4113, file: !915, line: 192, baseType: !366, size: 128, offset: 448)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !4113, file: !915, line: 194, baseType: !1177, size: 128, offset: 576)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4104, file: !915, line: 144, baseType: !4147, size: 64)
!4147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !915, line: 103, size: 64, elements: !4148)
!4148 = !{!4149}
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4147, file: !915, line: 104, baseType: !4093, size: 64)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4104, file: !915, line: 145, baseType: !4151, size: 256)
!4151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !915, line: 107, size: 256, elements: !4152)
!4152 = !{!4153, !4285, !4288, !4289}
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4151, file: !915, line: 108, baseType: !4154, size: 64)
!4154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4155, size: 64)
!4155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4156)
!4156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !915, line: 217, size: 768, elements: !4157)
!4157 = !{!4158, !4262, !4266, !4267, !4268, !4269, !4270, !4274, !4275, !4276, !4277, !4281}
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4156, file: !915, line: 222, baseType: !4159, size: 64)
!4159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4160, size: 64)
!4160 = !DISubroutineType(types: !4161)
!4161 = !{!72, !4162}
!4162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4163, size: 64)
!4163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !915, line: 197, size: 1088, elements: !4164)
!4164 = !{!4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177}
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4163, file: !915, line: 199, baseType: !4093, size: 64)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4163, file: !915, line: 200, baseType: !1087, size: 64, offset: 64)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4163, file: !915, line: 201, baseType: !1019, size: 64, offset: 128)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4163, file: !915, line: 202, baseType: !647, size: 64, offset: 192)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4163, file: !915, line: 205, baseType: !1031, size: 192, offset: 256)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4163, file: !915, line: 206, baseType: !1031, size: 192, offset: 448)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4163, file: !915, line: 207, baseType: !72, size: 32, offset: 640)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4163, file: !915, line: 208, baseType: !366, size: 128, offset: 704)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4163, file: !915, line: 209, baseType: !654, size: 64, offset: 832)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4163, file: !915, line: 211, baseType: !671, size: 64, offset: 896)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4163, file: !915, line: 212, baseType: !617, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4163, file: !915, line: 213, baseType: !617, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4163, file: !915, line: 214, baseType: !4178, size: 64, offset: 1024)
!4178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4179, size: 64)
!4179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4180)
!4180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !227, line: 557, size: 832, elements: !4181)
!4181 = !{!4182, !4186, !4187, !4191, !4195, !4236, !4240, !4244, !4248, !4249, !4250, !4254, !4258}
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4180, file: !227, line: 558, baseType: !4183, size: 64)
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4184, size: 64)
!4184 = !DISubroutineType(types: !4185)
!4185 = !{null, !1192}
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4180, file: !227, line: 559, baseType: !4183, size: 64, offset: 64)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !4180, file: !227, line: 560, baseType: !4188, size: 64, offset: 128)
!4188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4189, size: 64)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{!72, !1192, !394}
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !4180, file: !227, line: 561, baseType: !4192, size: 64, offset: 192)
!4192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4193, size: 64)
!4193 = !DISubroutineType(types: !4194)
!4194 = !{!72, !1192}
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !4180, file: !227, line: 562, baseType: !4196, size: 64, offset: 256)
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4197, size: 64)
!4197 = !DISubroutineType(types: !4198)
!4198 = !{!4199, !4200}
!4199 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !703, line: 682, baseType: !7)
!4200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4201, size: 64)
!4201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !227, line: 508, size: 768, elements: !4202)
!4202 = !{!4203, !4204, !4205, !4206, !4207, !4208, !4215, !4222, !4228, !4229, !4230, !4232, !4234}
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !4201, file: !227, line: 509, baseType: !1192, size: 64)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4201, file: !227, line: 510, baseType: !7, size: 32, offset: 64)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4201, file: !227, line: 511, baseType: !2067, size: 32, offset: 96)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !4201, file: !227, line: 512, baseType: !394, size: 64, offset: 128)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !4201, file: !227, line: 513, baseType: !394, size: 64, offset: 192)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4201, file: !227, line: 514, baseType: !4209, size: 64, offset: 256)
!4209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4210, size: 64)
!4210 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1225, line: 385, baseType: !4211)
!4211 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1225, line: 385, size: 64, elements: !4212)
!4212 = !{!4213}
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4211, file: !1225, line: 385, baseType: !4214, size: 64)
!4214 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1230, line: 15, baseType: !394)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4201, file: !227, line: 516, baseType: !4216, size: 64, offset: 320)
!4216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4217, size: 64)
!4217 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1225, line: 359, baseType: !4218)
!4218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1225, line: 359, size: 64, elements: !4219)
!4219 = !{!4220}
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4218, file: !1225, line: 359, baseType: !4221, size: 64)
!4221 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1230, line: 16, baseType: !394)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !4201, file: !227, line: 519, baseType: !4223, size: 64, offset: 384)
!4223 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1230, line: 21, baseType: !4224)
!4224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1230, line: 21, size: 64, elements: !4225)
!4225 = !{!4226}
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4224, file: !1230, line: 21, baseType: !4227, size: 64)
!4227 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1230, line: 14, baseType: !394)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !4201, file: !227, line: 521, baseType: !701, size: 64, offset: 448)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4201, file: !227, line: 522, baseType: !701, size: 64, offset: 512)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4201, file: !227, line: 528, baseType: !4231, size: 64, offset: 576)
!4231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4223, size: 64)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !4201, file: !227, line: 532, baseType: !4233, size: 64, offset: 640)
!4233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !4201, file: !227, line: 536, baseType: !4235, size: 64, offset: 704)
!4235 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1225, line: 509, baseType: !701)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !4180, file: !227, line: 563, baseType: !4237, size: 64, offset: 320)
!4237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4238, size: 64)
!4238 = !DISubroutineType(types: !4239)
!4239 = !{!4199, !4200, !226}
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !4180, file: !227, line: 565, baseType: !4241, size: 64, offset: 384)
!4241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4242, size: 64)
!4242 = !DISubroutineType(types: !4243)
!4243 = !{null, !4200, !394, !394}
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !4180, file: !227, line: 567, baseType: !4245, size: 64, offset: 448)
!4245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4246, size: 64)
!4246 = !DISubroutineType(types: !4247)
!4247 = !{!394, !1192}
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !4180, file: !227, line: 571, baseType: !4196, size: 64, offset: 512)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !4180, file: !227, line: 574, baseType: !4196, size: 64, offset: 576)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !4180, file: !227, line: 579, baseType: !4251, size: 64, offset: 640)
!4251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4252, size: 64)
!4252 = !DISubroutineType(types: !4253)
!4253 = !{!72, !1192, !394, !647, !72, !72}
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4180, file: !227, line: 585, baseType: !4255, size: 64, offset: 704)
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4256, size: 64)
!4256 = !DISubroutineType(types: !4257)
!4257 = !{!374, !1192}
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !4180, file: !227, line: 615, baseType: !4259, size: 64, offset: 768)
!4259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4260, size: 64)
!4260 = !DISubroutineType(types: !4261)
!4261 = !{!701, !1192, !394}
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4156, file: !915, line: 223, baseType: !4263, size: 64, offset: 64)
!4263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4264, size: 64)
!4264 = !DISubroutineType(types: !4265)
!4265 = !{null, !4162}
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4156, file: !915, line: 236, baseType: !1056, size: 64, offset: 128)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4156, file: !915, line: 238, baseType: !1043, size: 64, offset: 192)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4156, file: !915, line: 239, baseType: !1052, size: 64, offset: 256)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4156, file: !915, line: 240, baseType: !1048, size: 64, offset: 320)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4156, file: !915, line: 242, baseType: !4271, size: 64, offset: 384)
!4271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4272, size: 64)
!4272 = !DISubroutineType(types: !4273)
!4273 = !{!1092, !4162, !654, !671, !901}
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4156, file: !915, line: 252, baseType: !671, size: 64, offset: 448)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4156, file: !915, line: 259, baseType: !617, size: 8, offset: 512)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4156, file: !915, line: 260, baseType: !4271, size: 64, offset: 576)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4156, file: !915, line: 263, baseType: !4278, size: 64, offset: 640)
!4278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4279, size: 64)
!4279 = !DISubroutineType(types: !4280)
!4280 = !{!1166, !4162, !1167}
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4156, file: !915, line: 266, baseType: !4282, size: 64, offset: 704)
!4282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4283, size: 64)
!4283 = !DISubroutineType(types: !4284)
!4284 = !{!72, !4162, !1192}
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4151, file: !915, line: 109, baseType: !4286, size: 64, offset: 64)
!4286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4287, size: 64)
!4287 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !915, line: 31, flags: DIFlagFwdDecl)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4151, file: !915, line: 110, baseType: !901, size: 64, offset: 128)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4151, file: !915, line: 111, baseType: !4093, size: 64, offset: 192)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4094, file: !915, line: 148, baseType: !647, size: 64, offset: 768)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4094, file: !915, line: 154, baseType: !413, size: 64, offset: 832)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4094, file: !915, line: 156, baseType: !554, size: 16, offset: 896)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4094, file: !915, line: 157, baseType: !723, size: 16, offset: 912)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4094, file: !915, line: 158, baseType: !4295, size: 64, offset: 960)
!4295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4296, size: 64)
!4296 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !915, line: 32, flags: DIFlagFwdDecl)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3949, file: !3950, line: 71, baseType: !4298, size: 32, offset: 448)
!4298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !4299, line: 19, size: 32, elements: !4300)
!4299 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!4300 = !{!4301}
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4298, file: !4299, line: 20, baseType: !1348, size: 32)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !3949, file: !3950, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !3949, file: !3950, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !3949, file: !3950, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !3949, file: !3950, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !3949, file: !3950, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3946, file: !25, line: 463, baseType: !4308, size: 64, offset: 512)
!4308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3946, size: 64)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3946, file: !25, line: 465, baseType: !4310, size: 64, offset: 576)
!4310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4311, size: 64)
!4311 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !25, line: 36, flags: DIFlagFwdDecl)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3946, file: !25, line: 467, baseType: !374, size: 64, offset: 640)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3946, file: !25, line: 468, baseType: !4314, size: 64, offset: 704)
!4314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4315, size: 64)
!4315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4316)
!4316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !25, line: 87, size: 384, elements: !4317)
!4317 = !{!4318, !4319, !4320, !4324, !4329, !4333}
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4316, file: !25, line: 88, baseType: !374, size: 64)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4316, file: !25, line: 89, baseType: !4026, size: 64, offset: 64)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4316, file: !25, line: 90, baseType: !4321, size: 64, offset: 128)
!4321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4322, size: 64)
!4322 = !DISubroutineType(types: !4323)
!4323 = !{!72, !4308, !3983}
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4316, file: !25, line: 91, baseType: !4325, size: 64, offset: 192)
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4326, size: 64)
!4326 = !DISubroutineType(types: !4327)
!4327 = !{!654, !4308, !4328, !1959, !1960}
!4328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4316, file: !25, line: 93, baseType: !4330, size: 64, offset: 256)
!4330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4331, size: 64)
!4331 = !DISubroutineType(types: !4332)
!4332 = !{null, !4308}
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4316, file: !25, line: 95, baseType: !4334, size: 64, offset: 320)
!4334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4335, size: 64)
!4335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4336)
!4336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !37, line: 278, size: 1472, elements: !4337)
!4337 = !{!4338, !4342, !4343, !4344, !4345, !4346, !4347, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355, !4356, !4357, !4358, !4359, !4360, !4361, !4362, !4363}
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4336, file: !37, line: 279, baseType: !4339, size: 64)
!4339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4340, size: 64)
!4340 = !DISubroutineType(types: !4341)
!4341 = !{!72, !4308}
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4336, file: !37, line: 280, baseType: !4330, size: 64, offset: 64)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4336, file: !37, line: 281, baseType: !4339, size: 64, offset: 128)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4336, file: !37, line: 282, baseType: !4339, size: 64, offset: 192)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4336, file: !37, line: 283, baseType: !4339, size: 64, offset: 256)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4336, file: !37, line: 284, baseType: !4339, size: 64, offset: 320)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4336, file: !37, line: 285, baseType: !4339, size: 64, offset: 384)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4336, file: !37, line: 286, baseType: !4339, size: 64, offset: 448)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4336, file: !37, line: 287, baseType: !4339, size: 64, offset: 512)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4336, file: !37, line: 288, baseType: !4339, size: 64, offset: 576)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4336, file: !37, line: 289, baseType: !4339, size: 64, offset: 640)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4336, file: !37, line: 290, baseType: !4339, size: 64, offset: 704)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4336, file: !37, line: 291, baseType: !4339, size: 64, offset: 768)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4336, file: !37, line: 292, baseType: !4339, size: 64, offset: 832)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4336, file: !37, line: 293, baseType: !4339, size: 64, offset: 896)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4336, file: !37, line: 294, baseType: !4339, size: 64, offset: 960)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4336, file: !37, line: 295, baseType: !4339, size: 64, offset: 1024)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4336, file: !37, line: 296, baseType: !4339, size: 64, offset: 1088)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4336, file: !37, line: 297, baseType: !4339, size: 64, offset: 1152)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4336, file: !37, line: 298, baseType: !4339, size: 64, offset: 1216)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4336, file: !37, line: 299, baseType: !4339, size: 64, offset: 1280)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4336, file: !37, line: 300, baseType: !4339, size: 64, offset: 1344)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4336, file: !37, line: 301, baseType: !4339, size: 64, offset: 1408)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3946, file: !25, line: 470, baseType: !4365, size: 64, offset: 768)
!4365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4366, size: 64)
!4366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4367, line: 82, size: 1408, elements: !4368)
!4367 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4368 = !{!4369, !4370, !4371, !4372, !4373, !4374, !4375, !4429, !4430, !4431, !4432, !4433, !4434, !4435, !4436, !4437, !4438, !4439, !4440, !4441, !4445, !4448, !4449}
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4366, file: !4367, line: 83, baseType: !374, size: 64)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4366, file: !4367, line: 84, baseType: !374, size: 64, offset: 64)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4366, file: !4367, line: 85, baseType: !4308, size: 64, offset: 128)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4366, file: !4367, line: 86, baseType: !4026, size: 64, offset: 192)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4366, file: !4367, line: 87, baseType: !4026, size: 64, offset: 256)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4366, file: !4367, line: 88, baseType: !4026, size: 64, offset: 320)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4366, file: !4367, line: 90, baseType: !4376, size: 64, offset: 384)
!4376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4377, size: 64)
!4377 = !DISubroutineType(types: !4378)
!4378 = !{!72, !4308, !4379}
!4379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4380, size: 64)
!4380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !19, line: 95, size: 1152, elements: !4381)
!4381 = !{!4382, !4383, !4384, !4385, !4386, !4387, !4388, !4398, !4409, !4410, !4411, !4412, !4413, !4421, !4422, !4423, !4424, !4425, !4426}
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4380, file: !19, line: 96, baseType: !374, size: 64)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4380, file: !19, line: 97, baseType: !4365, size: 64, offset: 64)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4380, file: !19, line: 99, baseType: !929, size: 64, offset: 128)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4380, file: !19, line: 100, baseType: !374, size: 64, offset: 192)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4380, file: !19, line: 102, baseType: !617, size: 8, offset: 256)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4380, file: !19, line: 103, baseType: !18, size: 32, offset: 288)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4380, file: !19, line: 105, baseType: !4389, size: 64, offset: 320)
!4389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4390, size: 64)
!4390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4391)
!4391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4392, line: 262, size: 1600, elements: !4393)
!4392 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4393 = !{!4394, !4395, !4396, !4397}
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4391, file: !4392, line: 263, baseType: !3904, size: 256)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4391, file: !4392, line: 264, baseType: !3904, size: 256, offset: 256)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4391, file: !4392, line: 265, baseType: !3133, size: 1024, offset: 512)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4391, file: !4392, line: 266, baseType: !2340, size: 64, offset: 1536)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4380, file: !19, line: 106, baseType: !4399, size: 64, offset: 384)
!4399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4400, size: 64)
!4400 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4401)
!4401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4392, line: 210, size: 256, elements: !4402)
!4402 = !{!4403, !4405, !4407, !4408}
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4401, file: !4392, line: 211, baseType: !4404, size: 72)
!4404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1475, size: 72, elements: !2150)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4401, file: !4392, line: 212, baseType: !4406, size: 64, offset: 128)
!4406 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4392, line: 14, baseType: !394)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4401, file: !4392, line: 213, baseType: !545, size: 32, offset: 192)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4401, file: !4392, line: 214, baseType: !545, size: 32, offset: 224)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4380, file: !19, line: 108, baseType: !4339, size: 64, offset: 448)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4380, file: !19, line: 109, baseType: !4330, size: 64, offset: 512)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4380, file: !19, line: 110, baseType: !4339, size: 64, offset: 576)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4380, file: !19, line: 111, baseType: !4330, size: 64, offset: 640)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4380, file: !19, line: 112, baseType: !4414, size: 64, offset: 704)
!4414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4415, size: 64)
!4415 = !DISubroutineType(types: !4416)
!4416 = !{!72, !4308, !4417}
!4417 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !37, line: 52, baseType: !4418)
!4418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !37, line: 50, size: 32, elements: !4419)
!4419 = !{!4420}
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4418, file: !37, line: 51, baseType: !72, size: 32)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4380, file: !19, line: 113, baseType: !4339, size: 64, offset: 768)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4380, file: !19, line: 114, baseType: !4026, size: 64, offset: 832)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4380, file: !19, line: 115, baseType: !4026, size: 64, offset: 896)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4380, file: !19, line: 117, baseType: !4334, size: 64, offset: 960)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4380, file: !19, line: 118, baseType: !4330, size: 64, offset: 1024)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4380, file: !19, line: 120, baseType: !4427, size: 64, offset: 1088)
!4427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4428, size: 64)
!4428 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !19, line: 120, flags: DIFlagFwdDecl)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4366, file: !4367, line: 91, baseType: !4321, size: 64, offset: 448)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4366, file: !4367, line: 92, baseType: !4339, size: 64, offset: 512)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4366, file: !4367, line: 93, baseType: !4330, size: 64, offset: 576)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4366, file: !4367, line: 94, baseType: !4339, size: 64, offset: 640)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4366, file: !4367, line: 95, baseType: !4330, size: 64, offset: 704)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4366, file: !4367, line: 97, baseType: !4339, size: 64, offset: 768)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4366, file: !4367, line: 98, baseType: !4339, size: 64, offset: 832)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4366, file: !4367, line: 100, baseType: !4414, size: 64, offset: 896)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4366, file: !4367, line: 101, baseType: !4339, size: 64, offset: 960)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4366, file: !4367, line: 103, baseType: !4339, size: 64, offset: 1024)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4366, file: !4367, line: 105, baseType: !4339, size: 64, offset: 1088)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4366, file: !4367, line: 107, baseType: !4334, size: 64, offset: 1152)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4366, file: !4367, line: 109, baseType: !4442, size: 64, offset: 1216)
!4442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4443, size: 64)
!4443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4444)
!4444 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4367, line: 109, flags: DIFlagFwdDecl)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4366, file: !4367, line: 111, baseType: !4446, size: 64, offset: 1280)
!4446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4447, size: 64)
!4447 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4367, line: 111, flags: DIFlagFwdDecl)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4366, file: !4367, line: 112, baseType: !938, offset: 1344)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4366, file: !4367, line: 114, baseType: !617, size: 8, offset: 1344)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3946, file: !25, line: 471, baseType: !4379, size: 64, offset: 832)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3946, file: !25, line: 473, baseType: !647, size: 64, offset: 896)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3946, file: !25, line: 475, baseType: !647, size: 64, offset: 960)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3946, file: !25, line: 480, baseType: !1031, size: 192, offset: 1024)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3946, file: !25, line: 484, baseType: !4455, size: 576, offset: 1216)
!4455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !25, line: 361, size: 576, elements: !4456)
!4456 = !{!4457, !4458, !4459, !4460, !4461, !4462}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4455, file: !25, line: 362, baseType: !366, size: 128)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4455, file: !25, line: 363, baseType: !366, size: 128, offset: 128)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4455, file: !25, line: 364, baseType: !366, size: 128, offset: 256)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4455, file: !25, line: 365, baseType: !366, size: 128, offset: 384)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4455, file: !25, line: 366, baseType: !617, size: 8, offset: 512)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4455, file: !25, line: 367, baseType: !24, size: 32, offset: 544)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3946, file: !25, line: 485, baseType: !4464, size: 2304, offset: 1792)
!4464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !37, line: 565, size: 2304, elements: !4465)
!4465 = !{!4466, !4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480, !4481, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4517, !4518, !4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4535, !4536, !4537, !4538, !4539, !4540, !4550, !4554}
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4464, file: !37, line: 566, baseType: !4417, size: 32)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4464, file: !37, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4464, file: !37, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4464, file: !37, line: 569, baseType: !617, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4464, file: !37, line: 570, baseType: !617, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4464, file: !37, line: 571, baseType: !617, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4464, file: !37, line: 572, baseType: !617, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4464, file: !37, line: 573, baseType: !617, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4464, file: !37, line: 574, baseType: !617, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4464, file: !37, line: 575, baseType: !617, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4464, file: !37, line: 576, baseType: !617, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4464, file: !37, line: 577, baseType: !784, size: 32, offset: 64)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4464, file: !37, line: 578, baseType: !806, offset: 96)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4464, file: !37, line: 580, baseType: !366, size: 128, offset: 128)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4464, file: !37, line: 581, baseType: !1624, size: 192, offset: 256)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4464, file: !37, line: 582, baseType: !4482, size: 64, offset: 448)
!4482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4483, size: 64)
!4483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4484, line: 43, size: 1472, elements: !4485)
!4484 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4485 = !{!4486, !4487, !4488, !4489, !4490, !4493, !4494, !4495, !4496, !4497, !4498, !4499, !4500, !4501, !4502, !4503, !4504, !4505, !4506, !4507}
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4483, file: !4484, line: 44, baseType: !374, size: 64)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4483, file: !4484, line: 45, baseType: !72, size: 32, offset: 64)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4483, file: !4484, line: 46, baseType: !366, size: 128, offset: 128)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4483, file: !4484, line: 47, baseType: !806, offset: 256)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4483, file: !4484, line: 48, baseType: !4491, size: 64, offset: 256)
!4491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4492, size: 64)
!4492 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !37, line: 533, flags: DIFlagFwdDecl)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4483, file: !4484, line: 49, baseType: !2317, size: 320, offset: 320)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4483, file: !4484, line: 50, baseType: !394, size: 64, offset: 640)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4483, file: !4484, line: 51, baseType: !1418, size: 64, offset: 704)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4483, file: !4484, line: 52, baseType: !1418, size: 64, offset: 768)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4483, file: !4484, line: 53, baseType: !1418, size: 64, offset: 832)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4483, file: !4484, line: 54, baseType: !1418, size: 64, offset: 896)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4483, file: !4484, line: 55, baseType: !1418, size: 64, offset: 960)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4483, file: !4484, line: 56, baseType: !394, size: 64, offset: 1024)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4483, file: !4484, line: 57, baseType: !394, size: 64, offset: 1088)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4483, file: !4484, line: 58, baseType: !394, size: 64, offset: 1152)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4483, file: !4484, line: 59, baseType: !394, size: 64, offset: 1216)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4483, file: !4484, line: 60, baseType: !394, size: 64, offset: 1280)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4483, file: !4484, line: 61, baseType: !4308, size: 64, offset: 1344)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4483, file: !4484, line: 62, baseType: !617, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4483, file: !4484, line: 63, baseType: !617, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4464, file: !37, line: 583, baseType: !617, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4464, file: !37, line: 584, baseType: !617, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4464, file: !37, line: 585, baseType: !617, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4464, file: !37, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4464, file: !37, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4464, file: !37, line: 592, baseType: !1410, size: 512, offset: 576)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4464, file: !37, line: 593, baseType: !413, size: 64, offset: 1088)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4464, file: !37, line: 594, baseType: !1884, size: 256, offset: 1152)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4464, file: !37, line: 595, baseType: !1177, size: 128, offset: 1408)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4464, file: !37, line: 596, baseType: !4491, size: 64, offset: 1536)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4464, file: !37, line: 597, baseType: !465, size: 32, offset: 1600)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4464, file: !37, line: 598, baseType: !465, size: 32, offset: 1632)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4464, file: !37, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4464, file: !37, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4464, file: !37, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4464, file: !37, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4464, file: !37, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4464, file: !37, line: 604, baseType: !617, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4464, file: !37, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4464, file: !37, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4464, file: !37, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4464, file: !37, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4464, file: !37, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4464, file: !37, line: 610, baseType: !7, size: 32, offset: 1696)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4464, file: !37, line: 611, baseType: !36, size: 32, offset: 1728)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4464, file: !37, line: 612, baseType: !44, size: 32, offset: 1760)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4464, file: !37, line: 613, baseType: !72, size: 32, offset: 1792)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4464, file: !37, line: 614, baseType: !72, size: 32, offset: 1824)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4464, file: !37, line: 615, baseType: !413, size: 64, offset: 1856)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4464, file: !37, line: 616, baseType: !413, size: 64, offset: 1920)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4464, file: !37, line: 617, baseType: !413, size: 64, offset: 1984)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4464, file: !37, line: 618, baseType: !413, size: 64, offset: 2048)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4464, file: !37, line: 620, baseType: !4541, size: 64, offset: 2112)
!4541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4542, size: 64)
!4542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !37, line: 536, size: 256, elements: !4543)
!4543 = !{!4544, !4545, !4546, !4547}
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4542, file: !37, line: 537, baseType: !806)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4542, file: !37, line: 538, baseType: !7, size: 32)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4542, file: !37, line: 540, baseType: !366, size: 128, offset: 64)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4542, file: !37, line: 543, baseType: !4548, size: 64, offset: 192)
!4548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4549, size: 64)
!4549 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !37, line: 534, flags: DIFlagFwdDecl)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4464, file: !37, line: 621, baseType: !4551, size: 64, offset: 2176)
!4551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4552, size: 64)
!4552 = !DISubroutineType(types: !4553)
!4553 = !{null, !4308, !1566}
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4464, file: !37, line: 622, baseType: !4555, size: 64, offset: 2240)
!4555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4556, size: 64)
!4556 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !37, line: 622, flags: DIFlagFwdDecl)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3946, file: !25, line: 486, baseType: !4558, size: 64, offset: 4096)
!4558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4559, size: 64)
!4559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !37, line: 642, size: 1792, elements: !4560)
!4560 = !{!4561, !4562, !4563, !4567, !4568, !4569}
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4559, file: !37, line: 643, baseType: !4336, size: 1472)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4559, file: !37, line: 644, baseType: !4339, size: 64, offset: 1472)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4559, file: !37, line: 645, baseType: !4564, size: 64, offset: 1536)
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4565, size: 64)
!4565 = !DISubroutineType(types: !4566)
!4566 = !{null, !4308, !617}
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4559, file: !37, line: 646, baseType: !4339, size: 64, offset: 1600)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4559, file: !37, line: 647, baseType: !4330, size: 64, offset: 1664)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4559, file: !37, line: 648, baseType: !4330, size: 64, offset: 1728)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3946, file: !25, line: 493, baseType: !4571, size: 64, offset: 4160)
!4571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4572, size: 64)
!4572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !51, line: 162, size: 1088, elements: !4573)
!4573 = !{!4574, !4575, !4576, !4748, !4749, !4750, !4751, !4752, !4753, !4756, !4757, !4758, !4759, !4760, !4761, !4762}
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4572, file: !51, line: 163, baseType: !366, size: 128)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4572, file: !51, line: 164, baseType: !374, size: 64, offset: 128)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4572, file: !51, line: 165, baseType: !4577, size: 64, offset: 192)
!4577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4578, size: 64)
!4578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4579)
!4579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !51, line: 105, size: 640, elements: !4580)
!4580 = !{!4581, !4699, !4710, !4715, !4719, !4725, !4729, !4733, !4740, !4744}
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4579, file: !51, line: 106, baseType: !4582, size: 64)
!4582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4583, size: 64)
!4583 = !DISubroutineType(types: !4584)
!4584 = !{!72, !4571, !4585, !50}
!4585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4586, size: 64)
!4586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4587, line: 51, size: 1344, elements: !4588)
!4587 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!4588 = !{!4589, !4590, !4592, !4593, !4683, !4692, !4693, !4694, !4695, !4696, !4697, !4698}
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4586, file: !4587, line: 52, baseType: !374, size: 64)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !4586, file: !4587, line: 53, baseType: !4591, size: 32, offset: 64)
!4591 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !4587, line: 28, baseType: !784)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !4586, file: !4587, line: 54, baseType: !374, size: 64, offset: 128)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4586, file: !4587, line: 55, baseType: !4594, size: 192, offset: 192)
!4594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4595, line: 17, size: 192, elements: !4596)
!4595 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4596 = !{!4597, !4599, !4682}
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4594, file: !4595, line: 18, baseType: !4598, size: 64)
!4598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4594, size: 64)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4594, file: !4595, line: 19, baseType: !4600, size: 64, offset: 64)
!4600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4601, size: 64)
!4601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4602)
!4602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4595, line: 110, size: 1152, elements: !4603)
!4603 = !{!4604, !4608, !4612, !4618, !4624, !4628, !4632, !4637, !4641, !4642, !4646, !4650, !4654, !4665, !4666, !4667, !4668, !4678}
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4602, file: !4595, line: 111, baseType: !4605, size: 64)
!4605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4606, size: 64)
!4606 = !DISubroutineType(types: !4607)
!4607 = !{!4598, !4598}
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4602, file: !4595, line: 112, baseType: !4609, size: 64, offset: 64)
!4609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4610, size: 64)
!4610 = !DISubroutineType(types: !4611)
!4611 = !{null, !4598}
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4602, file: !4595, line: 113, baseType: !4613, size: 64, offset: 128)
!4613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4614, size: 64)
!4614 = !DISubroutineType(types: !4615)
!4615 = !{!617, !4616}
!4616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4617, size: 64)
!4617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4594)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4602, file: !4595, line: 114, baseType: !4619, size: 64, offset: 192)
!4619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4620, size: 64)
!4620 = !DISubroutineType(types: !4621)
!4621 = !{!2340, !4616, !4622}
!4622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4623, size: 64)
!4623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3946)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4602, file: !4595, line: 116, baseType: !4625, size: 64, offset: 256)
!4625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4626, size: 64)
!4626 = !DISubroutineType(types: !4627)
!4627 = !{!617, !4616, !374}
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4602, file: !4595, line: 118, baseType: !4629, size: 64, offset: 320)
!4629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4630, size: 64)
!4630 = !DISubroutineType(types: !4631)
!4631 = !{!72, !4616, !374, !7, !647, !671}
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4602, file: !4595, line: 123, baseType: !4633, size: 64, offset: 384)
!4633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4634, size: 64)
!4634 = !DISubroutineType(types: !4635)
!4635 = !{!72, !4616, !374, !4636, !671}
!4636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4602, file: !4595, line: 126, baseType: !4638, size: 64, offset: 448)
!4638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4639, size: 64)
!4639 = !DISubroutineType(types: !4640)
!4640 = !{!374, !4616}
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4602, file: !4595, line: 127, baseType: !4638, size: 64, offset: 512)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4602, file: !4595, line: 128, baseType: !4643, size: 64, offset: 576)
!4643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4644, size: 64)
!4644 = !DISubroutineType(types: !4645)
!4645 = !{!4598, !4616}
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4602, file: !4595, line: 130, baseType: !4647, size: 64, offset: 640)
!4647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4648, size: 64)
!4648 = !DISubroutineType(types: !4649)
!4649 = !{!4598, !4616, !4598}
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4602, file: !4595, line: 133, baseType: !4651, size: 64, offset: 704)
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4652, size: 64)
!4652 = !DISubroutineType(types: !4653)
!4653 = !{!4598, !4616, !374}
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4602, file: !4595, line: 135, baseType: !4655, size: 64, offset: 768)
!4655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4656, size: 64)
!4656 = !DISubroutineType(types: !4657)
!4657 = !{!72, !4616, !374, !374, !7, !7, !4658}
!4658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4659, size: 64)
!4659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4595, line: 43, size: 640, elements: !4660)
!4660 = !{!4661, !4662, !4663}
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4659, file: !4595, line: 44, baseType: !4598, size: 64)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4659, file: !4595, line: 45, baseType: !7, size: 32, offset: 64)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4659, file: !4595, line: 46, baseType: !4664, size: 512, offset: 128)
!4664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !413, size: 512, elements: !1448)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4602, file: !4595, line: 140, baseType: !4647, size: 64, offset: 832)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4602, file: !4595, line: 143, baseType: !4643, size: 64, offset: 896)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4602, file: !4595, line: 145, baseType: !4605, size: 64, offset: 960)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4602, file: !4595, line: 146, baseType: !4669, size: 64, offset: 1024)
!4669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4670, size: 64)
!4670 = !DISubroutineType(types: !4671)
!4671 = !{!72, !4616, !4672}
!4672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4673, size: 64)
!4673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4595, line: 29, size: 128, elements: !4674)
!4674 = !{!4675, !4676, !4677}
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4673, file: !4595, line: 30, baseType: !7, size: 32)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4673, file: !4595, line: 31, baseType: !7, size: 32, offset: 32)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4673, file: !4595, line: 32, baseType: !4616, size: 64, offset: 64)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4602, file: !4595, line: 148, baseType: !4679, size: 64, offset: 1088)
!4679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4680, size: 64)
!4680 = !DISubroutineType(types: !4681)
!4681 = !{!72, !4616, !4308}
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4594, file: !4595, line: 20, baseType: !4308, size: 64, offset: 128)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4586, file: !4587, line: 57, baseType: !4684, size: 64, offset: 384)
!4684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4685, size: 64)
!4685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !4587, line: 31, size: 704, elements: !4686)
!4686 = !{!4687, !4688, !4689, !4690, !4691}
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4685, file: !4587, line: 32, baseType: !654, size: 64)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4685, file: !4587, line: 33, baseType: !72, size: 32, offset: 64)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4685, file: !4587, line: 34, baseType: !647, size: 64, offset: 128)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4685, file: !4587, line: 35, baseType: !4684, size: 64, offset: 192)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4685, file: !4587, line: 43, baseType: !4041, size: 448, offset: 256)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !4586, file: !4587, line: 58, baseType: !4684, size: 64, offset: 448)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4586, file: !4587, line: 59, baseType: !4585, size: 64, offset: 512)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4586, file: !4587, line: 60, baseType: !4585, size: 64, offset: 576)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4586, file: !4587, line: 61, baseType: !4585, size: 64, offset: 640)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4586, file: !4587, line: 63, baseType: !3949, size: 512, offset: 704)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4586, file: !4587, line: 65, baseType: !394, size: 64, offset: 1216)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4586, file: !4587, line: 66, baseType: !647, size: 64, offset: 1280)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !4579, file: !51, line: 108, baseType: !4700, size: 64, offset: 64)
!4700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4701, size: 64)
!4701 = !DISubroutineType(types: !4702)
!4702 = !{!72, !4571, !4703, !50}
!4703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4704, size: 64)
!4704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !51, line: 63, size: 640, elements: !4705)
!4705 = !{!4706, !4707, !4708}
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4704, file: !51, line: 64, baseType: !4598, size: 64)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !4704, file: !51, line: 65, baseType: !72, size: 32, offset: 64)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !4704, file: !51, line: 66, baseType: !4709, size: 512, offset: 96)
!4709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !784, size: 512, elements: !351)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !4579, file: !51, line: 110, baseType: !4711, size: 64, offset: 128)
!4711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4712, size: 64)
!4712 = !DISubroutineType(types: !4713)
!4713 = !{!72, !4571, !7, !4714}
!4714 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !359, line: 164, baseType: !394)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !4579, file: !51, line: 111, baseType: !4716, size: 64, offset: 192)
!4716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4717, size: 64)
!4717 = !DISubroutineType(types: !4718)
!4718 = !{null, !4571, !7}
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !4579, file: !51, line: 112, baseType: !4720, size: 64, offset: 256)
!4720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4721, size: 64)
!4721 = !DISubroutineType(types: !4722)
!4722 = !{!72, !4571, !4585, !4723, !7, !2519, !4724}
!4723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 64)
!4724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4579, file: !51, line: 117, baseType: !4726, size: 64, offset: 320)
!4726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4727, size: 64)
!4727 = !DISubroutineType(types: !4728)
!4728 = !{!72, !4571, !7, !7, !647}
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4579, file: !51, line: 119, baseType: !4730, size: 64, offset: 384)
!4730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4731, size: 64)
!4731 = !DISubroutineType(types: !4732)
!4732 = !{null, !4571, !7, !7}
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4579, file: !51, line: 121, baseType: !4734, size: 64, offset: 448)
!4734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4735, size: 64)
!4735 = !DISubroutineType(types: !4736)
!4736 = !{!72, !4571, !4737, !617}
!4737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4738, size: 64)
!4738 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !4739, line: 11, flags: DIFlagFwdDecl)
!4739 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !4579, file: !51, line: 122, baseType: !4741, size: 64, offset: 512)
!4741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4742, size: 64)
!4742 = !DISubroutineType(types: !4743)
!4743 = !{null, !4571, !4737}
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !4579, file: !51, line: 123, baseType: !4745, size: 64, offset: 576)
!4745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4746, size: 64)
!4746 = !DISubroutineType(types: !4747)
!4747 = !{!72, !4571, !4703, !2519, !4724}
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !4572, file: !51, line: 166, baseType: !647, size: 64, offset: 256)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4572, file: !51, line: 167, baseType: !7, size: 32, offset: 320)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !4572, file: !51, line: 168, baseType: !7, size: 32, offset: 352)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4572, file: !51, line: 171, baseType: !4598, size: 64, offset: 384)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !4572, file: !51, line: 172, baseType: !50, size: 32, offset: 448)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !4572, file: !51, line: 173, baseType: !4754, size: 64, offset: 512)
!4754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4755, size: 64)
!4755 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !51, line: 134, flags: DIFlagFwdDecl)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4572, file: !51, line: 175, baseType: !4571, size: 64, offset: 576)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !4572, file: !51, line: 182, baseType: !4714, size: 64, offset: 640)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !4572, file: !51, line: 183, baseType: !7, size: 32, offset: 704)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !4572, file: !51, line: 184, baseType: !7, size: 32, offset: 736)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !4572, file: !51, line: 185, baseType: !2062, size: 128, offset: 768)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !4572, file: !51, line: 186, baseType: !1031, size: 192, offset: 896)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !4572, file: !51, line: 187, baseType: !4763, offset: 1088)
!4763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !391)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3946, file: !25, line: 499, baseType: !366, size: 128, offset: 4224)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3946, file: !25, line: 502, baseType: !4766, size: 64, offset: 4352)
!4766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4767, size: 64)
!4767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4768)
!4768 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !25, line: 502, flags: DIFlagFwdDecl)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3946, file: !25, line: 504, baseType: !3481, size: 64, offset: 4416)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3946, file: !25, line: 505, baseType: !413, size: 64, offset: 4480)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3946, file: !25, line: 510, baseType: !413, size: 64, offset: 4544)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3946, file: !25, line: 511, baseType: !4773, size: 64, offset: 4608)
!4773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4774, size: 64)
!4774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4775)
!4775 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !25, line: 511, flags: DIFlagFwdDecl)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3946, file: !25, line: 513, baseType: !4777, size: 64, offset: 4672)
!4777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4778, size: 64)
!4778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !25, line: 288, size: 128, elements: !4779)
!4779 = !{!4780, !4781}
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4778, file: !25, line: 293, baseType: !7, size: 32)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4778, file: !25, line: 294, baseType: !394, size: 64, offset: 64)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3946, file: !25, line: 515, baseType: !366, size: 128, offset: 4736)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3946, file: !25, line: 526, baseType: !4784, offset: 4864)
!4784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4785, line: 5, elements: !820)
!4785 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3946, file: !25, line: 528, baseType: !4585, size: 64, offset: 4864)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3946, file: !25, line: 529, baseType: !4598, size: 64, offset: 4928)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3946, file: !25, line: 534, baseType: !896, size: 32, offset: 4992)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3946, file: !25, line: 535, baseType: !784, size: 32, offset: 5024)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3946, file: !25, line: 537, baseType: !806, offset: 5056)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3946, file: !25, line: 538, baseType: !366, size: 128, offset: 5056)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3946, file: !25, line: 540, baseType: !4793, size: 64, offset: 5184)
!4793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4794, size: 64)
!4794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4795, line: 54, size: 960, elements: !4796)
!4795 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4796 = !{!4797, !4798, !4799, !4800, !4801, !4802, !4803, !4807, !4811, !4812, !4813, !4814, !4818, !4822, !4823}
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4794, file: !4795, line: 55, baseType: !374, size: 64)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4794, file: !4795, line: 56, baseType: !929, size: 64, offset: 64)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4794, file: !4795, line: 58, baseType: !4026, size: 64, offset: 128)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4794, file: !4795, line: 59, baseType: !4026, size: 64, offset: 192)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4794, file: !4795, line: 60, baseType: !3955, size: 64, offset: 256)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4794, file: !4795, line: 62, baseType: !4321, size: 64, offset: 320)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4794, file: !4795, line: 63, baseType: !4804, size: 64, offset: 384)
!4804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4805, size: 64)
!4805 = !DISubroutineType(types: !4806)
!4806 = !{!654, !4308, !4328}
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4794, file: !4795, line: 65, baseType: !4808, size: 64, offset: 448)
!4808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4809, size: 64)
!4809 = !DISubroutineType(types: !4810)
!4810 = !{null, !4793}
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4794, file: !4795, line: 66, baseType: !4330, size: 64, offset: 512)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4794, file: !4795, line: 68, baseType: !4339, size: 64, offset: 576)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4794, file: !4795, line: 70, baseType: !4062, size: 64, offset: 640)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4794, file: !4795, line: 71, baseType: !4815, size: 64, offset: 704)
!4815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4816, size: 64)
!4816 = !DISubroutineType(types: !4817)
!4817 = !{!2340, !4308}
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4794, file: !4795, line: 73, baseType: !4819, size: 64, offset: 768)
!4819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4820, size: 64)
!4820 = !DISubroutineType(types: !4821)
!4821 = !{null, !4308, !1959, !1960}
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4794, file: !4795, line: 75, baseType: !4334, size: 64, offset: 832)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4794, file: !4795, line: 77, baseType: !4446, size: 64, offset: 896)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3946, file: !25, line: 541, baseType: !4026, size: 64, offset: 5248)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3946, file: !25, line: 543, baseType: !4330, size: 64, offset: 5312)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3946, file: !25, line: 544, baseType: !4827, size: 64, offset: 5376)
!4827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4828, size: 64)
!4828 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !25, line: 45, flags: DIFlagFwdDecl)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3946, file: !25, line: 545, baseType: !4830, size: 64, offset: 5440)
!4830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4831, size: 64)
!4831 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !25, line: 47, flags: DIFlagFwdDecl)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3946, file: !25, line: 547, baseType: !617, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3946, file: !25, line: 548, baseType: !617, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3946, file: !25, line: 549, baseType: !617, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3946, file: !25, line: 550, baseType: !617, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !3915, file: !3898, line: 69, baseType: !3955, size: 64, offset: 5952)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !3915, file: !3898, line: 70, baseType: !72, size: 32, offset: 6016)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !3915, file: !3898, line: 70, baseType: !72, size: 32, offset: 6048)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3915, file: !3898, line: 71, baseType: !4840, size: 64, offset: 6080)
!4840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4841, size: 64)
!4841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !3898, line: 48, size: 808, elements: !4842)
!4842 = !{!4843, !4845}
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !4841, file: !3898, line: 49, baseType: !4844, size: 296)
!4844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 296, elements: !2131)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !4841, file: !3898, line: 50, baseType: !4846, size: 512, offset: 296)
!4846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1474, size: 512, elements: !3850)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !3915, file: !3898, line: 75, baseType: !4848, size: 448, offset: 6144)
!4848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !1885, line: 124, size: 448, elements: !4849)
!4849 = !{!4850, !4851, !4852}
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4848, file: !1885, line: 125, baseType: !1884, size: 256)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4848, file: !1885, line: 126, baseType: !381, size: 128, align: 64, offset: 256)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !4848, file: !1885, line: 129, baseType: !2900, size: 64, offset: 384)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3909, file: !3898, line: 153, baseType: !4854, offset: 256)
!4854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3914, elements: !391)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !3897, file: !3898, line: 187, baseType: !3915, size: 6592, offset: 448)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !3897, file: !3898, line: 189, baseType: !4857, size: 64, offset: 7040)
!4857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4858, size: 64)
!4858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4859)
!4859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !197, line: 1844, size: 960, elements: !4860)
!4860 = !{!4861, !4866, !4949, !4953, !4957, !4961, !4962, !4966, !4970, !4974, !4980, !4984, !5010, !5014, !5015}
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !4859, file: !197, line: 1845, baseType: !4862, size: 64)
!4862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4863, size: 64)
!4863 = !DISubroutineType(types: !4864)
!4864 = !{!4865, !3890}
!4865 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !3892, line: 515, baseType: !7)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4859, file: !197, line: 1846, baseType: !4867, size: 64, offset: 64)
!4867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4868, size: 64)
!4868 = !DISubroutineType(types: !4869)
!4869 = !{!72, !4870, !4948}
!4870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4871, size: 64)
!4871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !3892, line: 22, size: 1344, elements: !4872)
!4872 = !{!4873, !4874, !4875, !4876, !4877, !4878, !4879, !4880, !4881, !4882, !4883, !4884, !4885, !4886, !4887, !4888, !4889, !4946, !4947}
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !4871, file: !3892, line: 23, baseType: !896, size: 32)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !4871, file: !3892, line: 24, baseType: !72, size: 32, offset: 32)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !4871, file: !3892, line: 25, baseType: !719, size: 64, offset: 64)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !4871, file: !3892, line: 26, baseType: !891, size: 64, offset: 128)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !4871, file: !3892, line: 27, baseType: !1031, size: 192, offset: 192)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !4871, file: !3892, line: 28, baseType: !647, size: 64, offset: 384)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !4871, file: !3892, line: 29, baseType: !647, size: 64, offset: 448)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !4871, file: !3892, line: 30, baseType: !72, size: 32, offset: 512)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !4871, file: !3892, line: 31, baseType: !617, size: 8, offset: 544)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !4871, file: !3892, line: 33, baseType: !366, size: 128, offset: 576)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !4871, file: !3892, line: 35, baseType: !4870, size: 64, offset: 704)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !4871, file: !3892, line: 36, baseType: !1474, size: 8, offset: 768)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !4871, file: !3892, line: 37, baseType: !3914, size: 64, offset: 832)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !4871, file: !3892, line: 39, baseType: !7, size: 32, offset: 896)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !4871, file: !3892, line: 41, baseType: !806, offset: 928)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !4871, file: !3892, line: 42, baseType: !3896, size: 64, offset: 960)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !4871, file: !3892, line: 43, baseType: !4890, size: 64, offset: 1024)
!4890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4891, size: 64)
!4891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !210, line: 165, size: 4672, elements: !4892)
!4892 = !{!4893, !4894, !4895, !4896, !4897, !4898, !4899, !4900, !4901, !4902, !4903, !4904, !4939, !4940, !4941, !4942, !4944, !4945}
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4891, file: !210, line: 166, baseType: !413, size: 64)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !4891, file: !210, line: 167, baseType: !515, size: 192, align: 64, offset: 64)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !4891, file: !210, line: 168, baseType: !366, size: 128, offset: 256)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4891, file: !210, line: 169, baseType: !394, size: 64, offset: 384)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !4891, file: !210, line: 170, baseType: !394, size: 64, offset: 448)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !4891, file: !210, line: 172, baseType: !4298, size: 32, offset: 512)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !4891, file: !210, line: 173, baseType: !7, size: 32, offset: 544)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !4891, file: !210, line: 174, baseType: !7, size: 32, offset: 576)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !4891, file: !210, line: 175, baseType: !7, size: 32, offset: 608)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !4891, file: !210, line: 175, baseType: !7, size: 32, offset: 640)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !4891, file: !210, line: 181, baseType: !453, size: 64, offset: 704)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !4891, file: !210, line: 183, baseType: !4905, size: 2688, offset: 768)
!4905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !210, line: 107, size: 2688, elements: !4906)
!4906 = !{!4907, !4908, !4909, !4910, !4911, !4912, !4913, !4914, !4915, !4917, !4918, !4919, !4920, !4921, !4922, !4923, !4924, !4925, !4932, !4933, !4934, !4935, !4936, !4937, !4938}
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !4905, file: !210, line: 108, baseType: !4890, size: 64)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4905, file: !210, line: 110, baseType: !394, size: 64, offset: 64)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !4905, file: !210, line: 111, baseType: !394, size: 64, offset: 128)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !4905, file: !210, line: 113, baseType: !366, size: 128, offset: 192)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !4905, file: !210, line: 114, baseType: !366, size: 128, offset: 320)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !4905, file: !210, line: 115, baseType: !366, size: 128, offset: 448)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !4905, file: !210, line: 116, baseType: !366, size: 128, offset: 576)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !4905, file: !210, line: 117, baseType: !806, offset: 704)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !4905, file: !210, line: 119, baseType: !4916, size: 256, offset: 704)
!4916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3006, size: 256, elements: !1279)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !4905, file: !210, line: 121, baseType: !394, size: 64, offset: 960)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !4905, file: !210, line: 123, baseType: !394, size: 64, offset: 1024)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !4905, file: !210, line: 124, baseType: !394, size: 64, offset: 1088)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !4905, file: !210, line: 125, baseType: !394, size: 64, offset: 1152)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !4905, file: !210, line: 126, baseType: !394, size: 64, offset: 1216)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !4905, file: !210, line: 127, baseType: !394, size: 64, offset: 1280)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !4905, file: !210, line: 135, baseType: !394, size: 64, offset: 1344)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !4905, file: !210, line: 136, baseType: !394, size: 64, offset: 1408)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !4905, file: !210, line: 138, baseType: !4926, size: 128, offset: 1472)
!4926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !4927, line: 76, size: 128, elements: !4928)
!4927 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!4928 = !{!4929, !4930, !4931}
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !4926, file: !4927, line: 78, baseType: !3006, size: 64)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !4926, file: !4927, line: 80, baseType: !7, size: 32, offset: 64)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4926, file: !4927, line: 81, baseType: !1245, offset: 96)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !4905, file: !210, line: 139, baseType: !72, size: 32, offset: 1600)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !4905, file: !210, line: 140, baseType: !209, size: 32, offset: 1632)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !4905, file: !210, line: 142, baseType: !806, offset: 1664)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !4905, file: !210, line: 143, baseType: !366, size: 128, offset: 1664)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !4905, file: !210, line: 144, baseType: !2895, size: 704, offset: 1792)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !4905, file: !210, line: 146, baseType: !394, size: 64, offset: 2496)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !4905, file: !210, line: 148, baseType: !366, size: 128, offset: 2560)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !4891, file: !210, line: 184, baseType: !366, size: 128, offset: 3456)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !4891, file: !210, line: 190, baseType: !1177, size: 128, offset: 3584)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4891, file: !210, line: 192, baseType: !4308, size: 64, offset: 3712)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4891, file: !210, line: 193, baseType: !4943, size: 512, offset: 3776)
!4943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 512, elements: !3850)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4891, file: !210, line: 194, baseType: !4308, size: 64, offset: 4288)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !4891, file: !210, line: 196, baseType: !2317, size: 320, offset: 4352)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !4871, file: !3892, line: 46, baseType: !72, size: 32, offset: 1088)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !4871, file: !3892, line: 48, baseType: !1031, size: 192, offset: 1152)
!4948 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !359, line: 150, baseType: !7)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4859, file: !197, line: 1847, baseType: !4950, size: 64, offset: 128)
!4950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4951, size: 64)
!4951 = !DISubroutineType(types: !4952)
!4952 = !{null, !3896, !4948}
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !4859, file: !197, line: 1848, baseType: !4954, size: 64, offset: 192)
!4954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4955, size: 64)
!4955 = !DISubroutineType(types: !4956)
!4956 = !{!72, !4870, !3918, !701, !7}
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4859, file: !197, line: 1849, baseType: !4958, size: 64, offset: 256)
!4958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4959, size: 64)
!4959 = !DISubroutineType(types: !4960)
!4960 = !{!72, !4870, !4948, !7, !394}
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4859, file: !197, line: 1850, baseType: !4958, size: 64, offset: 320)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !4859, file: !197, line: 1851, baseType: !4963, size: 64, offset: 384)
!4963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4964, size: 64)
!4964 = !DISubroutineType(types: !4965)
!4965 = !{!7, !3896, !7}
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !4859, file: !197, line: 1853, baseType: !4967, size: 64, offset: 448)
!4967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4968, size: 64)
!4968 = !DISubroutineType(types: !4969)
!4969 = !{null, !3896}
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !4859, file: !197, line: 1854, baseType: !4971, size: 64, offset: 512)
!4971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4972, size: 64)
!4972 = !DISubroutineType(types: !4973)
!4973 = !{!72, !3896}
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !4859, file: !197, line: 1855, baseType: !4975, size: 64, offset: 576)
!4975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4976, size: 64)
!4976 = !DISubroutineType(types: !4977)
!4977 = !{!72, !4870, !4978}
!4978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4979, size: 64)
!4979 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !716, line: 51, flags: DIFlagFwdDecl)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !4859, file: !197, line: 1857, baseType: !4981, size: 64, offset: 640)
!4981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4982, size: 64)
!4982 = !DISubroutineType(types: !4983)
!4983 = !{null, !4870, !394}
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !4859, file: !197, line: 1858, baseType: !4985, size: 64, offset: 704)
!4985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4986, size: 64)
!4986 = !DISubroutineType(types: !4987)
!4987 = !{!72, !3896, !3918, !7, !4988, !647}
!4988 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !197, line: 354, baseType: !4989)
!4989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4990, size: 64)
!4990 = !DISubroutineType(types: !4991)
!4991 = !{!72, !4992, !7, !647}
!4992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4993, size: 64)
!4993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !4994, line: 106, size: 512, elements: !4995)
!4994 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!4995 = !{!4996, !4997, !4998, !4999, !5000, !5001, !5002, !5003, !5005, !5006}
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4993, file: !4994, line: 107, baseType: !415, size: 64)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4993, file: !4994, line: 108, baseType: !415, size: 64, offset: 64)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !4993, file: !4994, line: 109, baseType: !415, size: 64, offset: 128)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4993, file: !4994, line: 110, baseType: !1475, size: 8, offset: 192)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !4993, file: !4994, line: 111, baseType: !1475, size: 8, offset: 200)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !4993, file: !4994, line: 112, baseType: !1475, size: 8, offset: 208)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !4993, file: !4994, line: 113, baseType: !1475, size: 8, offset: 216)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !4993, file: !4994, line: 114, baseType: !5004, size: 32, offset: 224)
!5004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1475, size: 32, elements: !1279)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !4993, file: !4994, line: 115, baseType: !415, size: 64, offset: 256)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4993, file: !4994, line: 116, baseType: !5007, size: 192, offset: 320)
!5007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1475, size: 192, elements: !5008)
!5008 = !{!5009}
!5009 = !DISubrange(count: 24)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4859, file: !197, line: 1860, baseType: !5011, size: 64, offset: 768)
!5011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5012, size: 64)
!5012 = !DISubroutineType(types: !5013)
!5013 = !{!654, !3896, !4328}
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4859, file: !197, line: 1861, baseType: !929, size: 64, offset: 832)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !4859, file: !197, line: 1862, baseType: !5016, size: 64, offset: 896)
!5016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5017, size: 64)
!5017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5018)
!5018 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !197, line: 41, flags: DIFlagFwdDecl)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3897, file: !3898, line: 190, baseType: !5020, size: 64, offset: 7104)
!5020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5021, size: 64)
!5021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !197, line: 399, size: 14464, elements: !5022)
!5022 = !{!5023, !5153, !5275, !5276, !5279, !5282, !5286, !5287, !5288, !5290, !5291, !5292, !5293, !5294, !5295, !5296, !5297, !5298, !5299, !5300, !5336, !5337, !5338, !5339, !5340, !5341, !5342, !5343, !5344, !5347, !5356, !5357, !5358, !5359, !5360, !5390, !5391, !5392, !5393, !5394, !5395, !5398, !5399, !5400, !5401, !5402, !5403, !5404, !5405, !5406, !5468, !5469, !5470, !5471, !5474, !5475, !5508, !5509, !5510, !5511}
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !5021, file: !197, line: 400, baseType: !5024, size: 64)
!5024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5025, size: 64)
!5025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !197, line: 130, size: 2176, elements: !5026)
!5026 = !{!5027, !5028, !5031, !5034, !5035, !5037, !5038, !5039, !5040, !5041, !5042, !5043, !5044, !5049, !5056, !5105, !5106, !5107, !5108, !5109, !5110, !5111, !5112, !5113, !5114, !5115, !5116, !5117, !5118, !5151, !5152}
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5025, file: !197, line: 131, baseType: !5020, size: 64)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !5025, file: !197, line: 132, baseType: !5029, size: 64, offset: 64)
!5029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5030, size: 64)
!5030 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !197, line: 132, flags: DIFlagFwdDecl)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !5025, file: !197, line: 133, baseType: !5032, size: 64, offset: 128)
!5032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5033, size: 64)
!5033 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !197, line: 133, flags: DIFlagFwdDecl)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !5025, file: !197, line: 135, baseType: !7, size: 32, offset: 192)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !5025, file: !197, line: 136, baseType: !5036, size: 32, offset: 224)
!5036 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !197, line: 66, baseType: !545)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !5025, file: !197, line: 138, baseType: !72, size: 32, offset: 256)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !5025, file: !197, line: 139, baseType: !72, size: 32, offset: 288)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !5025, file: !197, line: 142, baseType: !7, size: 32, offset: 320)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !5025, file: !197, line: 143, baseType: !3918, size: 64, offset: 384)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !5025, file: !197, line: 145, baseType: !3890, size: 64, offset: 448)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !5025, file: !197, line: 146, baseType: !3890, size: 64, offset: 512)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !5025, file: !197, line: 148, baseType: !366, size: 128, offset: 576)
!5044 = !DIDerivedType(tag: DW_TAG_member, scope: !5025, file: !197, line: 157, baseType: !5045, size: 128, offset: 704)
!5045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5025, file: !197, line: 157, size: 128, elements: !5046)
!5046 = !{!5047, !5048}
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5045, file: !197, line: 158, baseType: !358, size: 128)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !5045, file: !197, line: 159, baseType: !366, size: 128)
!5049 = !DIDerivedType(tag: DW_TAG_member, scope: !5025, file: !197, line: 167, baseType: !5050, size: 192, offset: 832)
!5050 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5025, file: !197, line: 167, size: 192, elements: !5051)
!5051 = !{!5052, !5053, !5054, !5055}
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !5050, file: !197, line: 168, baseType: !515, size: 192, align: 64)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !5050, file: !197, line: 169, baseType: !697, size: 128)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !5050, file: !197, line: 170, baseType: !647, size: 64)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !5050, file: !197, line: 171, baseType: !72, size: 32)
!5056 = !DIDerivedType(tag: DW_TAG_member, scope: !5025, file: !197, line: 180, baseType: !5057, size: 256, offset: 1024)
!5057 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5025, file: !197, line: 180, size: 256, elements: !5058)
!5058 = !{!5059, !5094}
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !5057, file: !197, line: 184, baseType: !5060, size: 192)
!5060 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5057, file: !197, line: 181, size: 192, elements: !5061)
!5061 = !{!5062, !5092}
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !5060, file: !197, line: 182, baseType: !5063, size: 64)
!5063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5064, size: 64)
!5064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !5065, line: 73, size: 448, elements: !5066)
!5065 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!5066 = !{!5067, !5068, !5081, !5086, !5091}
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5064, file: !5065, line: 74, baseType: !5020, size: 64)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !5064, file: !5065, line: 75, baseType: !5069, size: 64, offset: 64)
!5069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5070, size: 64)
!5070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !5065, line: 99, size: 704, elements: !5071)
!5071 = !{!5072, !5073, !5074, !5075, !5076, !5077, !5078, !5079, !5080}
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5070, file: !5065, line: 100, baseType: !453, size: 64)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !5070, file: !5065, line: 101, baseType: !465, size: 32, offset: 64)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !5070, file: !5065, line: 102, baseType: !465, size: 32, offset: 96)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5070, file: !5065, line: 105, baseType: !806, offset: 128)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !5070, file: !5065, line: 107, baseType: !554, size: 16, offset: 128)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !5070, file: !5065, line: 109, baseType: !2062, size: 128, offset: 192)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !5070, file: !5065, line: 110, baseType: !5063, size: 64, offset: 320)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !5070, file: !5065, line: 111, baseType: !934, size: 64, offset: 384)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !5070, file: !5065, line: 113, baseType: !1884, size: 256, offset: 448)
!5081 = !DIDerivedType(tag: DW_TAG_member, scope: !5064, file: !5065, line: 83, baseType: !5082, size: 128, offset: 128)
!5082 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5064, file: !5065, line: 83, size: 128, elements: !5083)
!5083 = !{!5084, !5085}
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !5082, file: !5065, line: 84, baseType: !366, size: 128)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !5082, file: !5065, line: 85, baseType: !2348, size: 64)
!5086 = !DIDerivedType(tag: DW_TAG_member, scope: !5064, file: !5065, line: 87, baseType: !5087, size: 128, offset: 256)
!5087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5064, file: !5065, line: 87, size: 128, elements: !5088)
!5088 = !{!5089, !5090}
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !5087, file: !5065, line: 88, baseType: !358, size: 128)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !5087, file: !5065, line: 89, baseType: !381, size: 128, align: 64)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5064, file: !5065, line: 92, baseType: !7, size: 32, offset: 384)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5060, file: !197, line: 183, baseType: !5093, size: 128, offset: 64)
!5093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 128, elements: !555)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !5057, file: !197, line: 190, baseType: !5095, size: 256)
!5095 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5057, file: !197, line: 186, size: 256, elements: !5096)
!5096 = !{!5097, !5098, !5099}
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !5095, file: !197, line: 187, baseType: !7, size: 32)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5095, file: !197, line: 188, baseType: !366, size: 128, offset: 64)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !5095, file: !197, line: 189, baseType: !5100, size: 64, offset: 192)
!5100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5101, size: 64)
!5101 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !197, line: 62, baseType: !5102)
!5102 = !DISubroutineType(types: !5103)
!5103 = !{null, !5024, !5104}
!5104 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !3892, line: 58, baseType: !1474)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !5025, file: !197, line: 193, baseType: !3896, size: 64, offset: 1280)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !5025, file: !197, line: 194, baseType: !3914, size: 64, offset: 1344)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !5025, file: !197, line: 200, baseType: !413, size: 64, offset: 1408)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !5025, file: !197, line: 202, baseType: !413, size: 64, offset: 1472)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !5025, file: !197, line: 212, baseType: !554, size: 16, offset: 1536)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !5025, file: !197, line: 218, baseType: !554, size: 16, offset: 1552)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !5025, file: !197, line: 221, baseType: !554, size: 16, offset: 1568)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !5025, file: !197, line: 229, baseType: !554, size: 16, offset: 1584)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !5025, file: !197, line: 230, baseType: !554, size: 16, offset: 1600)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5025, file: !197, line: 232, baseType: !196, size: 32, offset: 1632)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5025, file: !197, line: 233, baseType: !1348, size: 32, offset: 1664)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5025, file: !197, line: 235, baseType: !7, size: 32, offset: 1696)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !5025, file: !197, line: 236, baseType: !394, size: 64, offset: 1728)
!5118 = !DIDerivedType(tag: DW_TAG_member, scope: !5025, file: !197, line: 238, baseType: !5119, size: 256, offset: 1792)
!5119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5025, file: !197, line: 238, size: 256, elements: !5120)
!5120 = !{!5121, !5150}
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !5119, file: !197, line: 239, baseType: !5122, size: 256)
!5122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !5123, line: 23, size: 256, elements: !5124)
!5123 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!5124 = !{!5125, !5147, !5149}
!5125 = !DIDerivedType(tag: DW_TAG_member, scope: !5122, file: !5123, line: 24, baseType: !5126, size: 128)
!5126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5122, file: !5123, line: 24, size: 128, elements: !5127)
!5127 = !{!5128, !5140}
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5126, file: !5123, line: 25, baseType: !5129, size: 128)
!5129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !5130, line: 58, size: 128, elements: !5131)
!5130 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!5131 = !{!5132, !5133, !5138, !5139}
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !5129, file: !5130, line: 59, baseType: !1069, size: 64)
!5133 = !DIDerivedType(tag: DW_TAG_member, scope: !5129, file: !5130, line: 60, baseType: !5134, size: 32, offset: 64)
!5134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5129, file: !5130, line: 60, size: 32, elements: !5135)
!5135 = !{!5136, !5137}
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !5134, file: !5130, line: 61, baseType: !7, size: 32)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !5134, file: !5130, line: 62, baseType: !465, size: 32)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5129, file: !5130, line: 65, baseType: !1115, size: 16, offset: 96)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5129, file: !5130, line: 65, baseType: !1115, size: 16, offset: 112)
!5140 = !DIDerivedType(tag: DW_TAG_member, scope: !5126, file: !5123, line: 26, baseType: !5141, size: 128)
!5141 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5126, file: !5123, line: 26, size: 128, elements: !5142)
!5142 = !{!5143, !5144, !5145, !5146}
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !5141, file: !5123, line: 27, baseType: !1069, size: 64)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5141, file: !5123, line: 28, baseType: !7, size: 32, offset: 64)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5141, file: !5123, line: 30, baseType: !1115, size: 16, offset: 96)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5141, file: !5123, line: 30, baseType: !1115, size: 16, offset: 112)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5122, file: !5123, line: 34, baseType: !5148, size: 64, offset: 128)
!5148 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !5123, line: 17, baseType: !3433)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5122, file: !5123, line: 35, baseType: !647, size: 64, offset: 192)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !5119, file: !197, line: 240, baseType: !413, size: 64)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !5025, file: !197, line: 246, baseType: !5100, size: 64, offset: 2048)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !5025, file: !197, line: 247, baseType: !647, size: 64, offset: 2112)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !5021, file: !197, line: 401, baseType: !5154, size: 64, offset: 64)
!5154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5155, size: 64)
!5155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !203, line: 101, size: 4992, elements: !5156)
!5156 = !{!5157, !5269, !5270, !5271, !5272, !5273}
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5155, file: !203, line: 103, baseType: !5158, size: 64)
!5158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5159, size: 64)
!5159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !203, line: 66, size: 2240, elements: !5160)
!5160 = !{!5161, !5162, !5244, !5245, !5246, !5259, !5260, !5261, !5263, !5264, !5268}
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !5159, file: !203, line: 69, baseType: !2348, size: 64)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5159, file: !203, line: 72, baseType: !5163, size: 1408, offset: 64)
!5163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !203, line: 29, size: 1408, elements: !5164)
!5164 = !{!5165, !5169, !5173, !5177, !5181, !5185, !5189, !5193, !5198, !5202, !5206, !5212, !5216, !5217, !5221, !5225, !5229, !5233, !5234, !5238, !5239, !5243}
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !5163, file: !203, line: 30, baseType: !5166, size: 64)
!5166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5167, size: 64)
!5167 = !DISubroutineType(types: !5168)
!5168 = !{!72, !5020, !5158}
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !5163, file: !203, line: 31, baseType: !5170, size: 64, offset: 64)
!5170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5171, size: 64)
!5171 = !DISubroutineType(types: !5172)
!5172 = !{null, !5154}
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !5163, file: !203, line: 32, baseType: !5174, size: 64, offset: 128)
!5174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5175, size: 64)
!5175 = !DISubroutineType(types: !5176)
!5176 = !{!72, !5032, !7}
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !5163, file: !203, line: 33, baseType: !5178, size: 64, offset: 192)
!5178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5179, size: 64)
!5179 = !DISubroutineType(types: !5180)
!5180 = !{null, !5032, !7}
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !5163, file: !203, line: 34, baseType: !5182, size: 64, offset: 256)
!5182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5183, size: 64)
!5183 = !DISubroutineType(types: !5184)
!5184 = !{null, !5032}
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !5163, file: !203, line: 36, baseType: !5186, size: 64, offset: 320)
!5186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5187, size: 64)
!5187 = !DISubroutineType(types: !5188)
!5188 = !{!617, !5020, !5024, !3890}
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !5163, file: !203, line: 37, baseType: !5190, size: 64, offset: 384)
!5190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5191, size: 64)
!5191 = !DISubroutineType(types: !5192)
!5192 = !{!617, !5032, !3890, !7}
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !5163, file: !203, line: 38, baseType: !5194, size: 64, offset: 448)
!5194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5195, size: 64)
!5195 = !DISubroutineType(types: !5196)
!5196 = !{!72, !5020, !5197, !3890}
!5197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5024, size: 64)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !5163, file: !203, line: 39, baseType: !5199, size: 64, offset: 512)
!5199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5200, size: 64)
!5200 = !DISubroutineType(types: !5201)
!5201 = !{null, !5020, !5024, !202}
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !5163, file: !203, line: 40, baseType: !5203, size: 64, offset: 576)
!5203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5204, size: 64)
!5204 = !DISubroutineType(types: !5205)
!5205 = !{null, !5020, !5024, !5024}
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !5163, file: !203, line: 41, baseType: !5207, size: 64, offset: 640)
!5207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5208, size: 64)
!5208 = !DISubroutineType(types: !5209)
!5209 = !{null, !7, !5210}
!5210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5211, size: 64)
!5211 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !203, line: 26, flags: DIFlagFwdDecl)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !5163, file: !203, line: 42, baseType: !5213, size: 64, offset: 704)
!5213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5214, size: 64)
!5214 = !DISubroutineType(types: !5215)
!5215 = !{null, !5024}
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !5163, file: !203, line: 43, baseType: !5213, size: 64, offset: 768)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !5163, file: !203, line: 44, baseType: !5218, size: 64, offset: 832)
!5218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5219, size: 64)
!5219 = !DISubroutineType(types: !5220)
!5220 = !{null, !5032, !369, !617}
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !5163, file: !203, line: 45, baseType: !5222, size: 64, offset: 896)
!5222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5223, size: 64)
!5223 = !DISubroutineType(types: !5224)
!5224 = !{!5024, !5032}
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !5163, file: !203, line: 46, baseType: !5226, size: 64, offset: 960)
!5226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5227, size: 64)
!5227 = !DISubroutineType(types: !5228)
!5228 = !{!617, !5032}
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !5163, file: !203, line: 47, baseType: !5230, size: 64, offset: 1024)
!5230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5231, size: 64)
!5231 = !DISubroutineType(types: !5232)
!5232 = !{null, !5024, !413}
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !5163, file: !203, line: 48, baseType: !5213, size: 64, offset: 1088)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !5163, file: !203, line: 49, baseType: !5235, size: 64, offset: 1152)
!5235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5236, size: 64)
!5236 = !DISubroutineType(types: !5237)
!5237 = !{!5024, !5020, !5024}
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !5163, file: !203, line: 50, baseType: !5235, size: 64, offset: 1216)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !5163, file: !203, line: 51, baseType: !5240, size: 64, offset: 1280)
!5240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5241, size: 64)
!5241 = !DISubroutineType(types: !5242)
!5242 = !{null, !5063}
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !5163, file: !203, line: 52, baseType: !5240, size: 64, offset: 1344)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !5159, file: !203, line: 74, baseType: !671, size: 64, offset: 1472)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !5159, file: !203, line: 75, baseType: !671, size: 64, offset: 1536)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !5159, file: !203, line: 76, baseType: !5247, size: 64, offset: 1600)
!5247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5248, size: 64)
!5248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !203, line: 57, size: 256, elements: !5249)
!5249 = !{!5250, !5251, !5255}
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5248, file: !203, line: 58, baseType: !4015, size: 128)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5248, file: !203, line: 59, baseType: !5252, size: 64, offset: 128)
!5252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5253, size: 64)
!5253 = !DISubroutineType(types: !5254)
!5254 = !{!1092, !5154, !654}
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5248, file: !203, line: 60, baseType: !5256, size: 64, offset: 192)
!5256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5257, size: 64)
!5257 = !DISubroutineType(types: !5258)
!5258 = !{!1092, !5154, !374, !671}
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !5159, file: !203, line: 77, baseType: !374, size: 64, offset: 1664)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !5159, file: !203, line: 78, baseType: !374, size: 64, offset: 1728)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !5159, file: !203, line: 79, baseType: !5262, size: 32, offset: 1792)
!5262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !5159, file: !203, line: 80, baseType: !929, size: 64, offset: 1856)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !5159, file: !203, line: 87, baseType: !5265, size: 176, offset: 1920)
!5265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 176, elements: !5266)
!5266 = !{!5267}
!5267 = !DISubrange(count: 22)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5159, file: !203, line: 88, baseType: !366, size: 128, offset: 2112)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !5155, file: !203, line: 104, baseType: !647, size: 64, offset: 64)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5155, file: !203, line: 105, baseType: !3949, size: 512, offset: 128)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !5155, file: !203, line: 106, baseType: !1031, size: 192, offset: 640)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !5155, file: !203, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5155, file: !203, line: 108, baseType: !5274, size: 4096, offset: 896)
!5274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 4096, elements: !3850)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !5021, file: !197, line: 403, baseType: !3925, size: 128, offset: 128)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5021, file: !197, line: 405, baseType: !5277, size: 64, offset: 256)
!5277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5278, size: 64)
!5278 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !197, line: 43, flags: DIFlagFwdDecl)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !5021, file: !197, line: 406, baseType: !5280, size: 64, offset: 320)
!5280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5281, size: 64)
!5281 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !197, line: 42, flags: DIFlagFwdDecl)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !5021, file: !197, line: 408, baseType: !5283, size: 64, offset: 384)
!5283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5284, size: 64)
!5284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5285)
!5285 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !197, line: 408, flags: DIFlagFwdDecl)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !5021, file: !197, line: 411, baseType: !5029, size: 64, offset: 448)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !5021, file: !197, line: 413, baseType: !7, size: 32, offset: 512)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !5021, file: !197, line: 416, baseType: !5289, size: 64, offset: 576)
!5289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5032, size: 64)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !5021, file: !197, line: 417, baseType: !7, size: 32, offset: 640)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !5021, file: !197, line: 419, baseType: !4890, size: 64, offset: 704)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !5021, file: !197, line: 425, baseType: !647, size: 64, offset: 768)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !5021, file: !197, line: 430, baseType: !394, size: 64, offset: 832)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !5021, file: !197, line: 436, baseType: !465, size: 32, offset: 896)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5021, file: !197, line: 442, baseType: !72, size: 32, offset: 928)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !5021, file: !197, line: 447, baseType: !2067, size: 32, offset: 960)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !5021, file: !197, line: 449, baseType: !806, offset: 992)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5021, file: !197, line: 454, baseType: !3949, size: 512, offset: 1024)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !5021, file: !197, line: 459, baseType: !3955, size: 64, offset: 1536)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !5021, file: !197, line: 462, baseType: !5301, size: 128, offset: 1600)
!5301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !3898, line: 159, size: 128, elements: !5302)
!5302 = !{!5303, !5332, !5333, !5334, !5335}
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !5301, file: !3898, line: 160, baseType: !5304, size: 64)
!5304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5305, size: 64)
!5305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5306)
!5306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !197, line: 1664, size: 320, elements: !5307)
!5307 = !{!5308, !5322, !5323, !5326, !5331}
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !5306, file: !197, line: 1665, baseType: !5309, size: 64)
!5309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5310, size: 64)
!5310 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !197, line: 1660, baseType: !5311)
!5311 = !DISubroutineType(types: !5312)
!5312 = !{!5104, !5313}
!5313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5314, size: 64)
!5314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !197, line: 1651, size: 320, elements: !5315)
!5315 = !{!5316, !5317, !5318, !5319, !5320, !5321}
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !5314, file: !197, line: 1652, baseType: !647, size: 64)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !5314, file: !197, line: 1653, baseType: !647, size: 64, offset: 64)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !5314, file: !197, line: 1654, baseType: !3918, size: 64, offset: 128)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !5314, file: !197, line: 1655, baseType: !7, size: 32, offset: 192)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !5314, file: !197, line: 1656, baseType: !554, size: 16, offset: 224)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !5314, file: !197, line: 1657, baseType: !374, size: 64, offset: 256)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !5306, file: !197, line: 1666, baseType: !5309, size: 64, offset: 64)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !5306, file: !197, line: 1667, baseType: !5324, size: 64, offset: 128)
!5324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5325, size: 64)
!5325 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !197, line: 1661, baseType: !5214)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !5306, file: !197, line: 1668, baseType: !5327, size: 64, offset: 192)
!5327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5328, size: 64)
!5328 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !197, line: 1662, baseType: !5329)
!5329 = !DISubroutineType(types: !5330)
!5330 = !{null, !5024, !7}
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5306, file: !197, line: 1669, baseType: !374, size: 64, offset: 256)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5301, file: !3898, line: 161, baseType: !571, size: 8, offset: 64)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !5301, file: !3898, line: 162, baseType: !571, size: 8, offset: 72)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !5301, file: !3898, line: 163, baseType: !571, size: 8, offset: 80)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !5301, file: !3898, line: 164, baseType: !571, size: 8, offset: 88)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5021, file: !197, line: 466, baseType: !4308, size: 64, offset: 1728)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !5021, file: !197, line: 467, baseType: !44, size: 32, offset: 1792)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !5021, file: !197, line: 468, baseType: !7, size: 32, offset: 1824)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !5021, file: !197, line: 474, baseType: !394, size: 64, offset: 1856)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !5021, file: !197, line: 476, baseType: !7, size: 32, offset: 1920)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !5021, file: !197, line: 477, baseType: !7, size: 32, offset: 1952)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !5021, file: !197, line: 484, baseType: !7, size: 32, offset: 1984)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !5021, file: !197, line: 485, baseType: !72, size: 32, offset: 2016)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !5021, file: !197, line: 487, baseType: !5345, size: 64, offset: 2048)
!5345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5346, size: 64)
!5346 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !197, line: 44, flags: DIFlagFwdDecl)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !5021, file: !197, line: 488, baseType: !5348, size: 5120, offset: 2112)
!5348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5349, size: 5120, elements: !351)
!5349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !3892, line: 540, size: 320, elements: !5350)
!5350 = !{!5351, !5352, !5353, !5354, !5355}
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !5349, file: !3892, line: 541, baseType: !413, size: 64)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !5349, file: !3892, line: 542, baseType: !413, size: 64, offset: 64)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5349, file: !3892, line: 543, baseType: !413, size: 64, offset: 128)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !5349, file: !3892, line: 544, baseType: !784, size: 32, offset: 192)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !5349, file: !3892, line: 545, baseType: !413, size: 64, offset: 256)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5021, file: !197, line: 490, baseType: !2317, size: 320, offset: 7232)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !5021, file: !197, line: 491, baseType: !1884, size: 256, offset: 7552)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !5021, file: !197, line: 493, baseType: !465, size: 32, offset: 7808)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !5021, file: !197, line: 495, baseType: !366, size: 128, offset: 7872)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !5021, file: !197, line: 502, baseType: !5361, size: 896, offset: 8000)
!5361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !197, line: 321, size: 896, elements: !5362)
!5362 = !{!5363, !5364, !5365, !5366, !5367, !5368, !5369, !5370, !5371, !5372, !5373, !5374, !5375, !5376, !5377, !5378, !5379, !5380, !5381, !5382, !5383, !5384, !5385, !5386, !5387, !5388, !5389}
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !5361, file: !197, line: 322, baseType: !394, size: 64)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !5361, file: !197, line: 323, baseType: !394, size: 64, offset: 64)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5361, file: !197, line: 324, baseType: !394, size: 64, offset: 128)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !5361, file: !197, line: 326, baseType: !7, size: 32, offset: 192)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !5361, file: !197, line: 327, baseType: !7, size: 32, offset: 224)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !5361, file: !197, line: 328, baseType: !7, size: 32, offset: 256)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5361, file: !197, line: 329, baseType: !7, size: 32, offset: 288)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5361, file: !197, line: 330, baseType: !7, size: 32, offset: 320)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !5361, file: !197, line: 331, baseType: !7, size: 32, offset: 352)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !5361, file: !197, line: 332, baseType: !7, size: 32, offset: 384)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !5361, file: !197, line: 333, baseType: !7, size: 32, offset: 416)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !5361, file: !197, line: 334, baseType: !7, size: 32, offset: 448)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !5361, file: !197, line: 335, baseType: !7, size: 32, offset: 480)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !5361, file: !197, line: 336, baseType: !7, size: 32, offset: 512)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !5361, file: !197, line: 337, baseType: !7, size: 32, offset: 544)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !5361, file: !197, line: 338, baseType: !7, size: 32, offset: 576)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !5361, file: !197, line: 339, baseType: !7, size: 32, offset: 608)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !5361, file: !197, line: 340, baseType: !7, size: 32, offset: 640)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !5361, file: !197, line: 341, baseType: !7, size: 32, offset: 672)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !5361, file: !197, line: 342, baseType: !7, size: 32, offset: 704)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !5361, file: !197, line: 344, baseType: !554, size: 16, offset: 736)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !5361, file: !197, line: 345, baseType: !554, size: 16, offset: 752)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !5361, file: !197, line: 346, baseType: !554, size: 16, offset: 768)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !5361, file: !197, line: 348, baseType: !571, size: 8, offset: 784)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !5361, file: !197, line: 349, baseType: !571, size: 8, offset: 792)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !5361, file: !197, line: 350, baseType: !571, size: 8, offset: 800)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !5361, file: !197, line: 351, baseType: !221, size: 32, offset: 832)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !5021, file: !197, line: 504, baseType: !7, size: 32, offset: 8896)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !5021, file: !197, line: 534, baseType: !7, size: 32, offset: 8928)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !5021, file: !197, line: 535, baseType: !7, size: 32, offset: 8960)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5021, file: !197, line: 536, baseType: !72, size: 32, offset: 8992)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !5021, file: !197, line: 537, baseType: !1031, size: 192, offset: 9024)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !5021, file: !197, line: 544, baseType: !5396, size: 64, offset: 9216)
!5396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5397, size: 64)
!5397 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !197, line: 40, flags: DIFlagFwdDecl)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !5021, file: !197, line: 546, baseType: !366, size: 128, offset: 9280)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !5021, file: !197, line: 547, baseType: !806, offset: 9408)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !5021, file: !197, line: 548, baseType: !2895, size: 704, offset: 9408)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !5021, file: !197, line: 550, baseType: !1031, size: 192, offset: 10112)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !5021, file: !197, line: 551, baseType: !1031, size: 192, offset: 10304)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !5021, file: !197, line: 557, baseType: !366, size: 128, offset: 10496)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !5021, file: !197, line: 558, baseType: !806, offset: 10624)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !5021, file: !197, line: 560, baseType: !72, size: 32, offset: 10624)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !5021, file: !197, line: 563, baseType: !5407, size: 256, offset: 10688)
!5407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !5408, line: 18, size: 256, elements: !5409)
!5408 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5409 = !{!5410, !5411, !5412, !5413}
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !5407, file: !5408, line: 19, baseType: !4308, size: 64)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !5407, file: !5408, line: 20, baseType: !72, size: 32, offset: 64)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !5407, file: !5408, line: 21, baseType: !5020, size: 64, offset: 128)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5407, file: !5408, line: 22, baseType: !5414, size: 64, offset: 192)
!5414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5415, size: 64)
!5415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5416)
!5416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !5408, line: 10, size: 256, elements: !5417)
!5417 = !{!5418, !5459, !5463, !5467}
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !5416, file: !5408, line: 11, baseType: !5419, size: 64)
!5419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5420, size: 64)
!5420 = !DISubroutineType(types: !5421)
!5421 = !{!72, !5422}
!5422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5423, size: 64)
!5423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !5424, line: 22, size: 1280, elements: !5425)
!5424 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5425 = !{!5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450, !5451, !5452, !5453, !5454, !5455, !5456, !5457, !5458}
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !5423, file: !5424, line: 23, baseType: !1567, size: 32)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !5423, file: !5424, line: 24, baseType: !545, size: 32, offset: 32)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !5423, file: !5424, line: 25, baseType: !545, size: 32, offset: 64)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !5423, file: !5424, line: 28, baseType: !545, size: 32, offset: 96)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5423, file: !5424, line: 29, baseType: !415, size: 64, offset: 128)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !5423, file: !5424, line: 30, baseType: !415, size: 64, offset: 192)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !5423, file: !5424, line: 31, baseType: !545, size: 32, offset: 256)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !5423, file: !5424, line: 32, baseType: !545, size: 32, offset: 288)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !5423, file: !5424, line: 33, baseType: !545, size: 32, offset: 320)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !5423, file: !5424, line: 34, baseType: !545, size: 32, offset: 352)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !5423, file: !5424, line: 35, baseType: !415, size: 64, offset: 384)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !5423, file: !5424, line: 38, baseType: !545, size: 32, offset: 448)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !5423, file: !5424, line: 40, baseType: !545, size: 32, offset: 480)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !5423, file: !5424, line: 41, baseType: !545, size: 32, offset: 512)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !5423, file: !5424, line: 42, baseType: !545, size: 32, offset: 544)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !5423, file: !5424, line: 43, baseType: !415, size: 64, offset: 576)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !5423, file: !5424, line: 44, baseType: !415, size: 64, offset: 640)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5423, file: !5424, line: 46, baseType: !545, size: 32, offset: 704)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5423, file: !5424, line: 47, baseType: !545, size: 32, offset: 736)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !5423, file: !5424, line: 48, baseType: !415, size: 64, offset: 768)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !5423, file: !5424, line: 49, baseType: !545, size: 32, offset: 832)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !5423, file: !5424, line: 51, baseType: !545, size: 32, offset: 864)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !5423, file: !5424, line: 52, baseType: !545, size: 32, offset: 896)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !5423, file: !5424, line: 53, baseType: !545, size: 32, offset: 928)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !5423, file: !5424, line: 54, baseType: !545, size: 32, offset: 960)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5423, file: !5424, line: 55, baseType: !545, size: 32, offset: 992)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !5423, file: !5424, line: 56, baseType: !545, size: 32, offset: 1024)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !5423, file: !5424, line: 57, baseType: !545, size: 32, offset: 1056)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !5423, file: !5424, line: 58, baseType: !1567, size: 32, offset: 1088)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !5423, file: !5424, line: 59, baseType: !1567, size: 32, offset: 1120)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !5423, file: !5424, line: 60, baseType: !415, size: 64, offset: 1152)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !5423, file: !5424, line: 61, baseType: !545, size: 32, offset: 1216)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5423, file: !5424, line: 63, baseType: !545, size: 32, offset: 1248)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !5416, file: !5408, line: 12, baseType: !5460, size: 64, offset: 64)
!5460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5461, size: 64)
!5461 = !DISubroutineType(types: !5462)
!5462 = !{!72, !5024, !5422, !4948}
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !5416, file: !5408, line: 14, baseType: !5464, size: 64, offset: 128)
!5464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5465, size: 64)
!5465 = !DISubroutineType(types: !5466)
!5466 = !{!72, !5024, !5422}
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !5416, file: !5408, line: 15, baseType: !5213, size: 64, offset: 192)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !5021, file: !197, line: 570, baseType: !381, size: 128, align: 64, offset: 10944)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !5021, file: !197, line: 571, baseType: !1177, size: 128, offset: 11072)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !5021, file: !197, line: 576, baseType: !1031, size: 192, offset: 11200)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !5021, file: !197, line: 578, baseType: !5472, size: 64, offset: 11392)
!5472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5473, size: 64)
!5473 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !197, line: 578, flags: DIFlagFwdDecl)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !5021, file: !197, line: 579, baseType: !366, size: 128, offset: 11456)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !5021, file: !197, line: 580, baseType: !5476, size: 2368, offset: 11584)
!5476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !3887, line: 682, size: 2368, elements: !5477)
!5477 = !{!5478, !5479, !5480, !5501, !5502, !5503, !5504, !5505, !5506, !5507}
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !5476, file: !3887, line: 683, baseType: !2348, size: 64)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !5476, file: !3887, line: 684, baseType: !7, size: 32, offset: 64)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !5476, file: !3887, line: 686, baseType: !5481, size: 448, offset: 128)
!5481 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !5482, line: 26, baseType: !5483)
!5482 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!5483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !5482, line: 16, size: 448, elements: !5484)
!5484 = !{!5485, !5486, !5487, !5488, !5489, !5490, !5495, !5500}
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5483, file: !5482, line: 17, baseType: !806)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !5483, file: !5482, line: 18, baseType: !72, size: 32)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !5483, file: !5482, line: 19, baseType: !72, size: 32, offset: 32)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !5483, file: !5482, line: 20, baseType: !3623, size: 64, offset: 64)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !5483, file: !5482, line: 22, baseType: !647, size: 64, offset: 128)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5483, file: !5482, line: 23, baseType: !5491, size: 64, offset: 192)
!5491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5492, size: 64)
!5492 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !5482, line: 13, baseType: !5493)
!5493 = !DISubroutineType(types: !5494)
!5494 = !{!647, !2067, !647}
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5483, file: !5482, line: 24, baseType: !5496, size: 64, offset: 256)
!5496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5497, size: 64)
!5497 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !5482, line: 14, baseType: !5498)
!5498 = !DISubroutineType(types: !5499)
!5499 = !{null, !647, !647}
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !5483, file: !5482, line: 25, baseType: !1177, size: 128, offset: 320)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !5476, file: !3887, line: 687, baseType: !5481, size: 448, offset: 576)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !5476, file: !3887, line: 689, baseType: !5481, size: 448, offset: 1024)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !5476, file: !3887, line: 690, baseType: !5481, size: 448, offset: 1472)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !5476, file: !3887, line: 697, baseType: !806, offset: 1920)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !5476, file: !3887, line: 698, baseType: !3886, size: 128, offset: 1920)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !5476, file: !3887, line: 699, baseType: !1884, size: 256, offset: 2048)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !5476, file: !3887, line: 700, baseType: !2900, size: 64, offset: 2304)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !5021, file: !197, line: 582, baseType: !750, size: 64, offset: 13952)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !5021, file: !197, line: 589, baseType: !617, size: 8, offset: 14016)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !5021, file: !197, line: 591, baseType: !671, size: 64, offset: 14080)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !5021, file: !197, line: 594, baseType: !5512, size: 320, offset: 14144)
!5512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !413, size: 320, elements: !1854)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !3897, file: !3898, line: 191, baseType: !647, size: 64, offset: 7168)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3897, file: !3898, line: 193, baseType: !72, size: 32, offset: 7232)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3897, file: !3898, line: 194, baseType: !394, size: 64, offset: 7296)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !3897, file: !3898, line: 196, baseType: !1239, size: 256, offset: 7360)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !3897, file: !3898, line: 197, baseType: !3955, size: 64, offset: 7616)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !3897, file: !3898, line: 199, baseType: !5519, size: 64, offset: 7680)
!5519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5520, size: 64)
!5520 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !3898, line: 199, flags: DIFlagFwdDecl)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !3897, file: !3898, line: 200, baseType: !465, size: 32, offset: 7744)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !3897, file: !3898, line: 201, baseType: !5523, size: 64, offset: 7808)
!5523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5524, size: 64)
!5524 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !3898, line: 156, flags: DIFlagFwdDecl)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !3897, file: !3898, line: 203, baseType: !3949, size: 512, offset: 7872)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !3897, file: !3898, line: 208, baseType: !72, size: 32, offset: 8384)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3897, file: !3898, line: 209, baseType: !5528, size: 64, offset: 8448)
!5528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5529, size: 64)
!5529 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !3898, line: 157, flags: DIFlagFwdDecl)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !3897, file: !3898, line: 210, baseType: !5531, offset: 8512)
!5531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !939, line: 192, elements: !820)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !3891, file: !3892, line: 206, baseType: !7, size: 32, offset: 128)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !3891, file: !3892, line: 210, baseType: !554, size: 16, offset: 160)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !3891, file: !3892, line: 211, baseType: !554, size: 16, offset: 176)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !3891, file: !3892, line: 212, baseType: !554, size: 16, offset: 192)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !3891, file: !3892, line: 213, baseType: !5104, size: 8, offset: 208)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !3891, file: !3892, line: 214, baseType: !1474, size: 8, offset: 216)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !3891, file: !3892, line: 215, baseType: !465, size: 32, offset: 224)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !3891, file: !3892, line: 217, baseType: !5540, size: 192, offset: 256)
!5540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !698, line: 37, size: 192, elements: !5541)
!5541 = !{!5542, !5543, !5544, !5545}
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !5540, file: !698, line: 38, baseType: !3918, size: 64)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !5540, file: !698, line: 40, baseType: !7, size: 32, offset: 64)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !5540, file: !698, line: 42, baseType: !7, size: 32, offset: 96)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !5540, file: !698, line: 44, baseType: !7, size: 32, offset: 128)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !3891, file: !3892, line: 219, baseType: !5547, size: 64, offset: 448)
!5547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5548, size: 64)
!5548 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !3892, line: 19, baseType: !5549)
!5549 = !DISubroutineType(types: !5550)
!5550 = !{null, !3890}
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !3891, file: !3892, line: 221, baseType: !647, size: 64, offset: 512)
!5552 = !DIDerivedType(tag: DW_TAG_member, scope: !3891, file: !3892, line: 240, baseType: !5553, size: 64, offset: 576)
!5553 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3891, file: !3892, line: 240, size: 64, elements: !5554)
!5554 = !{!5555}
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !5553, file: !3892, line: 242, baseType: !5556, size: 64)
!5556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5557, size: 64)
!5557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !3887, line: 313, size: 832, elements: !5558)
!5558 = !{!5559, !5560, !5561, !5562, !5563, !5564, !5565, !5566, !5567, !5569}
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !5557, file: !3887, line: 314, baseType: !3890, size: 64)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !5557, file: !3887, line: 316, baseType: !5540, size: 192, offset: 64)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !5557, file: !3887, line: 318, baseType: !554, size: 16, offset: 256)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !5557, file: !3887, line: 319, baseType: !554, size: 16, offset: 272)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !5557, file: !3887, line: 320, baseType: !554, size: 16, offset: 288)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !5557, file: !3887, line: 321, baseType: !554, size: 16, offset: 304)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !5557, file: !3887, line: 323, baseType: !5540, size: 192, offset: 320)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !5557, file: !3887, line: 325, baseType: !1884, size: 256, offset: 512)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !5557, file: !3887, line: 327, baseType: !5568, size: 64, offset: 768)
!5568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !5557, file: !3887, line: 328, baseType: !5570, offset: 832)
!5570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !697, elements: !391)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !3891, file: !3892, line: 246, baseType: !554, size: 16, offset: 640)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !3891, file: !3892, line: 252, baseType: !554, size: 16, offset: 656)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !3891, file: !3892, line: 254, baseType: !465, size: 32, offset: 672)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !3891, file: !3892, line: 256, baseType: !5568, size: 64, offset: 704)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !3891, file: !3892, line: 258, baseType: !5576, size: 64, offset: 768)
!5576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5476, size: 64)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !3891, file: !3892, line: 265, baseType: !5570, offset: 832)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3886, file: !3887, line: 556, baseType: !3890, size: 64, offset: 64)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1335, file: !1336, line: 1050, baseType: !5580, size: 64, offset: 10688)
!5580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5581, size: 64)
!5581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !197, line: 1236, size: 320, elements: !5582)
!5582 = !{!5583, !5584, !5585, !5586, !5587}
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !5581, file: !197, line: 1237, baseType: !366, size: 128)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !5581, file: !197, line: 1238, baseType: !366, size: 128, offset: 128)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !5581, file: !197, line: 1239, baseType: !554, size: 16, offset: 256)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !5581, file: !197, line: 1240, baseType: !617, size: 8, offset: 272)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !5581, file: !197, line: 1241, baseType: !617, size: 8, offset: 280)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1335, file: !1336, line: 1054, baseType: !5589, size: 64, offset: 10752)
!5589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5590, size: 64)
!5590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !5591, line: 131, size: 64, elements: !5592)
!5591 = !DIFile(filename: "./include/linux/swap.h", directory: "/home/lizy2001/genbc/linux")
!5592 = !{!5593}
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "reclaimed_slab", scope: !5590, file: !5591, line: 132, baseType: !394, size: 64)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1335, file: !1336, line: 1056, baseType: !4890, size: 64, offset: 10816)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1335, file: !1336, line: 1058, baseType: !5069, size: 64, offset: 10880)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1335, file: !1336, line: 1061, baseType: !5597, size: 64, offset: 10944)
!5597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5598, size: 64)
!5598 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1336, line: 43, flags: DIFlagFwdDecl)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1335, file: !1336, line: 1064, baseType: !394, size: 64, offset: 11008)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1335, file: !1336, line: 1065, baseType: !5601, size: 64, offset: 11072)
!5601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5602, size: 64)
!5602 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3738, line: 14, baseType: !5603)
!5603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3738, line: 12, size: 384, elements: !5604)
!5604 = !{!5605}
!5605 = !DIDerivedType(tag: DW_TAG_member, scope: !5603, file: !3738, line: 13, baseType: !5606, size: 384)
!5606 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5603, file: !3738, line: 13, size: 384, elements: !5607)
!5607 = !{!5608, !5609, !5610, !5611}
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !5606, file: !3738, line: 13, baseType: !72, size: 32)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !5606, file: !3738, line: 13, baseType: !72, size: 32, offset: 32)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !5606, file: !3738, line: 13, baseType: !72, size: 32, offset: 64)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !5606, file: !3738, line: 13, baseType: !5612, size: 256, offset: 128)
!5612 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !5613, line: 32, size: 256, elements: !5614)
!5613 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!5614 = !{!5615, !5620, !5633, !5639, !5648, !5668, !5673}
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !5612, file: !5613, line: 37, baseType: !5616, size: 64)
!5616 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5612, file: !5613, line: 34, size: 64, elements: !5617)
!5617 = !{!5618, !5619}
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5616, file: !5613, line: 35, baseType: !1587, size: 32)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5616, file: !5613, line: 36, baseType: !732, size: 32, offset: 32)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !5612, file: !5613, line: 45, baseType: !5621, size: 192)
!5621 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5612, file: !5613, line: 40, size: 192, elements: !5622)
!5622 = !{!5623, !5625, !5626, !5632}
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !5621, file: !5613, line: 41, baseType: !5624, size: 32)
!5624 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !673, line: 95, baseType: !72)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !5621, file: !5613, line: 42, baseType: !72, size: 32, offset: 32)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5621, file: !5613, line: 43, baseType: !5627, size: 64, offset: 64)
!5627 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !5613, line: 11, baseType: !5628)
!5628 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !5613, line: 8, size: 64, elements: !5629)
!5629 = !{!5630, !5631}
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !5628, file: !5613, line: 9, baseType: !72, size: 32)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !5628, file: !5613, line: 10, baseType: !647, size: 64)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !5621, file: !5613, line: 44, baseType: !72, size: 32, offset: 128)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !5612, file: !5613, line: 52, baseType: !5634, size: 128)
!5634 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5612, file: !5613, line: 48, size: 128, elements: !5635)
!5635 = !{!5636, !5637, !5638}
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5634, file: !5613, line: 49, baseType: !1587, size: 32)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5634, file: !5613, line: 50, baseType: !732, size: 32, offset: 32)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5634, file: !5613, line: 51, baseType: !5627, size: 64, offset: 64)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !5612, file: !5613, line: 61, baseType: !5640, size: 256)
!5640 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5612, file: !5613, line: 55, size: 256, elements: !5641)
!5641 = !{!5642, !5643, !5644, !5645, !5647}
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5640, file: !5613, line: 56, baseType: !1587, size: 32)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5640, file: !5613, line: 57, baseType: !732, size: 32, offset: 32)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !5640, file: !5613, line: 58, baseType: !72, size: 32, offset: 64)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !5640, file: !5613, line: 59, baseType: !5646, size: 64, offset: 128)
!5646 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !673, line: 94, baseType: !1094)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !5640, file: !5613, line: 60, baseType: !5646, size: 64, offset: 192)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !5612, file: !5613, line: 95, baseType: !5649, size: 256)
!5649 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5612, file: !5613, line: 64, size: 256, elements: !5650)
!5650 = !{!5651, !5652}
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !5649, file: !5613, line: 65, baseType: !647, size: 64)
!5652 = !DIDerivedType(tag: DW_TAG_member, scope: !5649, file: !5613, line: 77, baseType: !5653, size: 192, offset: 64)
!5653 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5649, file: !5613, line: 77, size: 192, elements: !5654)
!5654 = !{!5655, !5656, !5663}
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !5653, file: !5613, line: 82, baseType: !1323, size: 16)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !5653, file: !5613, line: 88, baseType: !5657, size: 192)
!5657 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5653, file: !5613, line: 84, size: 192, elements: !5658)
!5658 = !{!5659, !5661, !5662}
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !5657, file: !5613, line: 85, baseType: !5660, size: 64)
!5660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 64, elements: !1448)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !5657, file: !5613, line: 86, baseType: !647, size: 64, offset: 64)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !5657, file: !5613, line: 87, baseType: !647, size: 64, offset: 128)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !5653, file: !5613, line: 93, baseType: !5664, size: 96)
!5664 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5653, file: !5613, line: 90, size: 96, elements: !5665)
!5665 = !{!5666, !5667}
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !5664, file: !5613, line: 91, baseType: !5660, size: 64)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !5664, file: !5613, line: 92, baseType: !545, size: 32, offset: 64)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !5612, file: !5613, line: 101, baseType: !5669, size: 128)
!5669 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5612, file: !5613, line: 98, size: 128, elements: !5670)
!5670 = !{!5671, !5672}
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !5669, file: !5613, line: 99, baseType: !590, size: 64)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !5669, file: !5613, line: 100, baseType: !72, size: 32, offset: 64)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !5612, file: !5613, line: 108, baseType: !5674, size: 128)
!5674 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5612, file: !5613, line: 104, size: 128, elements: !5675)
!5675 = !{!5676, !5677, !5678}
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !5674, file: !5613, line: 105, baseType: !647, size: 64)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !5674, file: !5613, line: 106, baseType: !72, size: 32, offset: 64)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !5674, file: !5613, line: 107, baseType: !7, size: 32, offset: 96)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1335, file: !1336, line: 1067, baseType: !3805, offset: 11136)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1335, file: !1336, line: 1099, baseType: !5681, size: 64, offset: 11136)
!5681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5682, size: 64)
!5682 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1336, line: 56, flags: DIFlagFwdDecl)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1335, file: !1336, line: 1103, baseType: !366, size: 128, offset: 11200)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1335, file: !1336, line: 1104, baseType: !5685, size: 64, offset: 11328)
!5685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5686, size: 64)
!5686 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1336, line: 46, flags: DIFlagFwdDecl)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1335, file: !1336, line: 1105, baseType: !1031, size: 192, offset: 11392)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1335, file: !1336, line: 1106, baseType: !7, size: 32, offset: 11584)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1335, file: !1336, line: 1109, baseType: !5690, size: 128, offset: 11648)
!5690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5691, size: 128, elements: !555)
!5691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5692, size: 64)
!5692 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1336, line: 51, flags: DIFlagFwdDecl)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1335, file: !1336, line: 1110, baseType: !1031, size: 192, offset: 11776)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1335, file: !1336, line: 1111, baseType: !366, size: 128, offset: 11968)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1335, file: !1336, line: 1173, baseType: !5696, size: 64, offset: 12096)
!5696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5697, size: 64)
!5697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !5698, line: 62, size: 256, align: 256, elements: !5699)
!5698 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!5699 = !{!5700, !5701, !5702, !5707}
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !5697, file: !5698, line: 75, baseType: !545, size: 32)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !5697, file: !5698, line: 90, baseType: !545, size: 32, offset: 32)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !5697, file: !5698, line: 124, baseType: !5703, size: 64, offset: 64)
!5703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5697, file: !5698, line: 109, size: 64, elements: !5704)
!5704 = !{!5705, !5706}
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !5703, file: !5698, line: 110, baseType: !415, size: 64)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5703, file: !5698, line: 112, baseType: !415, size: 64)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5697, file: !5698, line: 144, baseType: !545, size: 32, offset: 128)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1335, file: !1336, line: 1174, baseType: !784, size: 32, offset: 12160)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1335, file: !1336, line: 1179, baseType: !394, size: 64, offset: 12224)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1335, file: !1336, line: 1182, baseType: !5711, size: 128, offset: 12288)
!5711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1275, line: 76, size: 128, elements: !5712)
!5712 = !{!5713, !5718, !5719}
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5711, file: !1275, line: 85, baseType: !5714, size: 64)
!5714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !5715, line: 7, size: 64, elements: !5716)
!5715 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!5716 = !{!5717}
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !5714, file: !5715, line: 12, baseType: !1489, size: 64)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !5711, file: !1275, line: 88, baseType: !617, size: 8, offset: 64)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !5711, file: !1275, line: 95, baseType: !617, size: 8, offset: 72)
!5720 = !DIDerivedType(tag: DW_TAG_member, scope: !1335, file: !1336, line: 1184, baseType: !5721, size: 128, offset: 12416)
!5721 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1335, file: !1336, line: 1184, size: 128, elements: !5722)
!5722 = !{!5723, !5724}
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !5721, file: !1336, line: 1185, baseType: !1348, size: 32)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5721, file: !1336, line: 1186, baseType: !381, size: 128, align: 64)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1335, file: !1336, line: 1190, baseType: !5726, size: 64, offset: 12544)
!5726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5727, size: 64)
!5727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !5728, line: 57, size: 1088, elements: !5729)
!5728 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!5729 = !{!5730, !5731, !5732, !5733, !5734, !5735, !5736, !5737, !5738, !5739, !5740, !5741, !5742, !5743, !5744, !5754, !5755, !5782}
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5727, file: !5728, line: 58, baseType: !1031, size: 192)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !5727, file: !5728, line: 59, baseType: !1177, size: 128, offset: 192)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !5727, file: !5728, line: 59, baseType: !1177, size: 128, offset: 320)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5727, file: !5728, line: 60, baseType: !7, size: 32, offset: 448)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5727, file: !5728, line: 61, baseType: !7, size: 32, offset: 480)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !5727, file: !5728, line: 62, baseType: !7, size: 32, offset: 512)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !5727, file: !5728, line: 63, baseType: !7, size: 32, offset: 544)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !5727, file: !5728, line: 67, baseType: !7, size: 32, offset: 576)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !5727, file: !5728, line: 68, baseType: !7, size: 32, offset: 608)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !5727, file: !5728, line: 69, baseType: !7, size: 32, offset: 640)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !5727, file: !5728, line: 70, baseType: !7, size: 32, offset: 672)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !5727, file: !5728, line: 71, baseType: !7, size: 32, offset: 704)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !5727, file: !5728, line: 72, baseType: !7, size: 32, offset: 736)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !5727, file: !5728, line: 73, baseType: !701, size: 64, offset: 768)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !5727, file: !5728, line: 74, baseType: !5745, size: 64, offset: 832)
!5745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5746, size: 64)
!5746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !716, line: 1314, size: 320, elements: !5747)
!5747 = !{!5748, !5749, !5750, !5751, !5752, !5753}
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !5746, file: !716, line: 1315, baseType: !2915)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !5746, file: !716, line: 1316, baseType: !72, size: 32)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !5746, file: !716, line: 1317, baseType: !72, size: 32, offset: 32)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !5746, file: !716, line: 1318, baseType: !5745, size: 64, offset: 64)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !5746, file: !716, line: 1319, baseType: !1087, size: 64, offset: 128)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !5746, file: !716, line: 1320, baseType: !381, size: 128, align: 64, offset: 192)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !5727, file: !5728, line: 75, baseType: !5745, size: 64, offset: 896)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !5727, file: !5728, line: 76, baseType: !5756, size: 64, offset: 960)
!5756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5757, size: 64)
!5757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !5728, line: 26, size: 320, elements: !5758)
!5758 = !{!5759, !5760, !5761, !5762, !5780, !5781}
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5757, file: !5728, line: 27, baseType: !701, size: 64)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5757, file: !5728, line: 28, baseType: !7, size: 32, offset: 64)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5757, file: !5728, line: 28, baseType: !7, size: 32, offset: 96)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5757, file: !5728, line: 29, baseType: !5763, size: 64, offset: 128)
!5763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5764, size: 64)
!5764 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5765)
!5765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !5728, line: 93, size: 256, elements: !5766)
!5766 = !{!5767, !5771, !5775, !5779}
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !5765, file: !5728, line: 101, baseType: !5768, size: 64)
!5768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5769, size: 64)
!5769 = !DISubroutineType(types: !5770)
!5770 = !{!72, !5726, !5756}
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5765, file: !5728, line: 107, baseType: !5772, size: 64, offset: 64)
!5772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5773, size: 64)
!5773 = !DISubroutineType(types: !5774)
!5774 = !{null, !5726, !5756}
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !5765, file: !5728, line: 117, baseType: !5776, size: 64, offset: 128)
!5776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5777, size: 64)
!5777 = !DISubroutineType(types: !5778)
!5778 = !{!617, !5726, !5756}
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5765, file: !5728, line: 122, baseType: !5776, size: 64, offset: 192)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5757, file: !5728, line: 30, baseType: !7, size: 32, offset: 192)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !5757, file: !5728, line: 31, baseType: !394, size: 64, offset: 256)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5727, file: !5728, line: 77, baseType: !1810, size: 64, offset: 1024)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1335, file: !1336, line: 1192, baseType: !5784, size: 128, offset: 12608)
!5784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1275, line: 64, size: 128, elements: !5785)
!5785 = !{!5786, !5787, !5788}
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5784, file: !1275, line: 65, baseType: !701, size: 64)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5784, file: !1275, line: 67, baseType: !545, size: 32, offset: 64)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5784, file: !1275, line: 68, baseType: !545, size: 32, offset: 96)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1335, file: !1336, line: 1206, baseType: !72, size: 32, offset: 12736)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1335, file: !1336, line: 1207, baseType: !72, size: 32, offset: 12768)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1335, file: !1336, line: 1209, baseType: !394, size: 64, offset: 12800)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1335, file: !1336, line: 1219, baseType: !413, size: 64, offset: 12864)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1335, file: !1336, line: 1220, baseType: !413, size: 64, offset: 12928)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1335, file: !1336, line: 1317, baseType: !72, size: 32, offset: 12992)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1335, file: !1336, line: 1319, baseType: !1334, size: 64, offset: 13056)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1335, file: !1336, line: 1322, baseType: !5797, size: 64, offset: 13120)
!5797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5798, size: 64)
!5798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !5799, line: 56, size: 512, elements: !5800)
!5799 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!5800 = !{!5801, !5802, !5803, !5804, !5805, !5807, !5808, !5810}
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5798, file: !5799, line: 57, baseType: !5797, size: 64)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5798, file: !5799, line: 58, baseType: !647, size: 64, offset: 64)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5798, file: !5799, line: 59, baseType: !394, size: 64, offset: 128)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5798, file: !5799, line: 60, baseType: !394, size: 64, offset: 192)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5798, file: !5799, line: 61, baseType: !5806, size: 64, offset: 256)
!5806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !5798, file: !5799, line: 62, baseType: !7, size: 32, offset: 320)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !5798, file: !5799, line: 63, baseType: !5809, size: 64, offset: 384)
!5809 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !359, line: 153, baseType: !413)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !5798, file: !5799, line: 64, baseType: !2340, size: 64, offset: 448)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1335, file: !1336, line: 1326, baseType: !1348, size: 32, offset: 13184)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1335, file: !1336, line: 1342, baseType: !647, size: 64, offset: 13248)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1335, file: !1336, line: 1343, baseType: !415, size: 64, offset: 13312)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1335, file: !1336, line: 1344, baseType: !413, size: 64, offset: 13376)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1335, file: !1336, line: 1345, baseType: !415, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1335, file: !1336, line: 1346, baseType: !415, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1335, file: !1336, line: 1347, baseType: !415, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1335, file: !1336, line: 1348, baseType: !381, size: 128, align: 64, offset: 13504)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1335, file: !1336, line: 1358, baseType: !5820, size: 34816, offset: 13824)
!5820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !5821, line: 485, size: 34816, elements: !5822)
!5821 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!5822 = !{!5823, !5841, !5842, !5843, !5844, !5845, !5846, !5847, !5848, !5852, !5853, !5854, !5855, !5856, !5857, !5860, !5861, !5862}
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !5820, file: !5821, line: 487, baseType: !5824, size: 192)
!5824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5825, size: 192, elements: !944)
!5825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !5826, line: 16, size: 64, elements: !5827)
!5826 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!5827 = !{!5828, !5829, !5830, !5831, !5832, !5833, !5834, !5835, !5836, !5837, !5838, !5839, !5840}
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !5825, file: !5826, line: 17, baseType: !1115, size: 16)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !5825, file: !5826, line: 18, baseType: !1115, size: 16, offset: 16)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !5825, file: !5826, line: 19, baseType: !1115, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5825, file: !5826, line: 19, baseType: !1115, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !5825, file: !5826, line: 19, baseType: !1115, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !5825, file: !5826, line: 19, baseType: !1115, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5825, file: !5826, line: 19, baseType: !1115, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !5825, file: !5826, line: 20, baseType: !1115, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !5825, file: !5826, line: 20, baseType: !1115, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !5825, file: !5826, line: 20, baseType: !1115, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !5825, file: !5826, line: 20, baseType: !1115, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5825, file: !5826, line: 20, baseType: !1115, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !5825, file: !5826, line: 20, baseType: !1115, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5820, file: !5821, line: 491, baseType: !394, size: 64, offset: 192)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !5820, file: !5821, line: 495, baseType: !554, size: 16, offset: 256)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !5820, file: !5821, line: 496, baseType: !554, size: 16, offset: 272)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !5820, file: !5821, line: 497, baseType: !554, size: 16, offset: 288)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !5820, file: !5821, line: 498, baseType: !554, size: 16, offset: 304)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !5820, file: !5821, line: 502, baseType: !394, size: 64, offset: 320)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !5820, file: !5821, line: 503, baseType: !394, size: 64, offset: 384)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !5820, file: !5821, line: 514, baseType: !5849, size: 256, offset: 448)
!5849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5850, size: 256, elements: !1279)
!5850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5851, size: 64)
!5851 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !5821, line: 483, flags: DIFlagFwdDecl)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !5820, file: !5821, line: 516, baseType: !394, size: 64, offset: 704)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !5820, file: !5821, line: 518, baseType: !394, size: 64, offset: 768)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !5820, file: !5821, line: 520, baseType: !394, size: 64, offset: 832)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !5820, file: !5821, line: 521, baseType: !394, size: 64, offset: 896)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !5820, file: !5821, line: 522, baseType: !394, size: 64, offset: 960)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !5820, file: !5821, line: 528, baseType: !5858, size: 64, offset: 1024)
!5858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5859, size: 64)
!5859 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !5821, line: 10, flags: DIFlagFwdDecl)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !5820, file: !5821, line: 535, baseType: !394, size: 64, offset: 1088)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !5820, file: !5821, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !5820, file: !5821, line: 540, baseType: !5863, size: 33280, offset: 1536)
!5863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !5864, line: 317, size: 33280, elements: !5865)
!5864 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!5865 = !{!5866, !5867, !5868}
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !5863, file: !5864, line: 330, baseType: !7, size: 32)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !5863, file: !5864, line: 337, baseType: !394, size: 64, offset: 64)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5863, file: !5864, line: 348, baseType: !5869, size: 32768, offset: 512)
!5869 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !5864, line: 304, size: 32768, elements: !5870)
!5870 = !{!5871, !5884, !5919, !5969, !5981}
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !5869, file: !5864, line: 305, baseType: !5872, size: 896)
!5872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !5864, line: 12, size: 896, elements: !5873)
!5873 = !{!5874, !5875, !5876, !5877, !5878, !5879, !5880, !5881, !5883}
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5872, file: !5864, line: 13, baseType: !784, size: 32)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5872, file: !5864, line: 14, baseType: !784, size: 32, offset: 32)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5872, file: !5864, line: 15, baseType: !784, size: 32, offset: 64)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5872, file: !5864, line: 16, baseType: !784, size: 32, offset: 96)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5872, file: !5864, line: 17, baseType: !784, size: 32, offset: 128)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5872, file: !5864, line: 18, baseType: !784, size: 32, offset: 160)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5872, file: !5864, line: 19, baseType: !784, size: 32, offset: 192)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5872, file: !5864, line: 22, baseType: !5882, size: 640, offset: 224)
!5882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !784, size: 640, elements: !2590)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5872, file: !5864, line: 25, baseType: !784, size: 32, offset: 864)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !5869, file: !5864, line: 306, baseType: !5885, size: 4096, align: 128)
!5885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !5864, line: 34, size: 4096, align: 128, elements: !5886)
!5886 = !{!5887, !5888, !5889, !5890, !5891, !5906, !5907, !5908, !5910, !5912, !5914}
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5885, file: !5864, line: 35, baseType: !1115, size: 16)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5885, file: !5864, line: 36, baseType: !1115, size: 16, offset: 16)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5885, file: !5864, line: 37, baseType: !1115, size: 16, offset: 32)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !5885, file: !5864, line: 38, baseType: !1115, size: 16, offset: 48)
!5891 = !DIDerivedType(tag: DW_TAG_member, scope: !5885, file: !5864, line: 39, baseType: !5892, size: 128, offset: 64)
!5892 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5885, file: !5864, line: 39, size: 128, elements: !5893)
!5893 = !{!5894, !5899}
!5894 = !DIDerivedType(tag: DW_TAG_member, scope: !5892, file: !5864, line: 40, baseType: !5895, size: 128)
!5895 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5892, file: !5864, line: 40, size: 128, elements: !5896)
!5896 = !{!5897, !5898}
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !5895, file: !5864, line: 41, baseType: !413, size: 64)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !5895, file: !5864, line: 42, baseType: !413, size: 64, offset: 64)
!5899 = !DIDerivedType(tag: DW_TAG_member, scope: !5892, file: !5864, line: 44, baseType: !5900, size: 128)
!5900 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5892, file: !5864, line: 44, size: 128, elements: !5901)
!5901 = !{!5902, !5903, !5904, !5905}
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5900, file: !5864, line: 45, baseType: !784, size: 32)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5900, file: !5864, line: 46, baseType: !784, size: 32, offset: 32)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5900, file: !5864, line: 47, baseType: !784, size: 32, offset: 64)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5900, file: !5864, line: 48, baseType: !784, size: 32, offset: 96)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !5885, file: !5864, line: 51, baseType: !784, size: 32, offset: 192)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !5885, file: !5864, line: 52, baseType: !784, size: 32, offset: 224)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5885, file: !5864, line: 55, baseType: !5909, size: 1024, offset: 256)
!5909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !784, size: 1024, elements: !793)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !5885, file: !5864, line: 58, baseType: !5911, size: 2048, offset: 1280)
!5911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !784, size: 2048, elements: !3850)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5885, file: !5864, line: 60, baseType: !5913, size: 384, offset: 3328)
!5913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !784, size: 384, elements: !2976)
!5914 = !DIDerivedType(tag: DW_TAG_member, scope: !5885, file: !5864, line: 62, baseType: !5915, size: 384, offset: 3712)
!5915 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5885, file: !5864, line: 62, size: 384, elements: !5916)
!5916 = !{!5917, !5918}
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !5915, file: !5864, line: 63, baseType: !5913, size: 384)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !5915, file: !5864, line: 64, baseType: !5913, size: 384)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !5869, file: !5864, line: 307, baseType: !5920, size: 1088)
!5920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !5864, line: 79, size: 1088, elements: !5921)
!5921 = !{!5922, !5923, !5924, !5925, !5926, !5927, !5928, !5929, !5930, !5931, !5932, !5933, !5934, !5935, !5936, !5968}
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5920, file: !5864, line: 80, baseType: !784, size: 32)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5920, file: !5864, line: 81, baseType: !784, size: 32, offset: 32)
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5920, file: !5864, line: 82, baseType: !784, size: 32, offset: 64)
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5920, file: !5864, line: 83, baseType: !784, size: 32, offset: 96)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5920, file: !5864, line: 84, baseType: !784, size: 32, offset: 128)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5920, file: !5864, line: 85, baseType: !784, size: 32, offset: 160)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5920, file: !5864, line: 86, baseType: !784, size: 32, offset: 192)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5920, file: !5864, line: 88, baseType: !5882, size: 640, offset: 224)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !5920, file: !5864, line: 89, baseType: !1474, size: 8, offset: 864)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !5920, file: !5864, line: 90, baseType: !1474, size: 8, offset: 872)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !5920, file: !5864, line: 91, baseType: !1474, size: 8, offset: 880)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !5920, file: !5864, line: 92, baseType: !1474, size: 8, offset: 888)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !5920, file: !5864, line: 93, baseType: !1474, size: 8, offset: 896)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !5920, file: !5864, line: 94, baseType: !1474, size: 8, offset: 904)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5920, file: !5864, line: 95, baseType: !5937, size: 64, offset: 960)
!5937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5938, size: 64)
!5938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !5939, line: 11, size: 128, elements: !5940)
!5939 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!5940 = !{!5941, !5942}
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !5938, file: !5939, line: 12, baseType: !590, size: 64)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !5938, file: !5939, line: 13, baseType: !5943, size: 64, offset: 64)
!5943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5944, size: 64)
!5944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !5945, line: 56, size: 1344, elements: !5946)
!5945 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!5946 = !{!5947, !5948, !5949, !5950, !5951, !5952, !5953, !5954, !5955, !5956, !5957, !5958, !5959, !5960, !5961, !5962, !5963, !5964, !5965, !5966, !5967}
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5944, file: !5945, line: 61, baseType: !394, size: 64)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5944, file: !5945, line: 62, baseType: !394, size: 64, offset: 64)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !5944, file: !5945, line: 63, baseType: !394, size: 64, offset: 128)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5944, file: !5945, line: 64, baseType: !394, size: 64, offset: 192)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !5944, file: !5945, line: 65, baseType: !394, size: 64, offset: 256)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !5944, file: !5945, line: 66, baseType: !394, size: 64, offset: 320)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !5944, file: !5945, line: 68, baseType: !394, size: 64, offset: 384)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !5944, file: !5945, line: 69, baseType: !394, size: 64, offset: 448)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !5944, file: !5945, line: 70, baseType: !394, size: 64, offset: 512)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !5944, file: !5945, line: 71, baseType: !394, size: 64, offset: 576)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !5944, file: !5945, line: 72, baseType: !394, size: 64, offset: 640)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !5944, file: !5945, line: 73, baseType: !394, size: 64, offset: 704)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !5944, file: !5945, line: 74, baseType: !394, size: 64, offset: 768)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !5944, file: !5945, line: 75, baseType: !394, size: 64, offset: 832)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !5944, file: !5945, line: 76, baseType: !394, size: 64, offset: 896)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !5944, file: !5945, line: 81, baseType: !394, size: 64, offset: 960)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5944, file: !5945, line: 83, baseType: !394, size: 64, offset: 1024)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !5944, file: !5945, line: 84, baseType: !394, size: 64, offset: 1088)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5944, file: !5945, line: 85, baseType: !394, size: 64, offset: 1152)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5944, file: !5945, line: 86, baseType: !394, size: 64, offset: 1216)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !5944, file: !5945, line: 87, baseType: !394, size: 64, offset: 1280)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !5920, file: !5864, line: 96, baseType: !784, size: 32, offset: 1024)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !5869, file: !5864, line: 308, baseType: !5970, size: 4608, align: 512)
!5970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !5864, line: 289, size: 4608, align: 512, elements: !5971)
!5971 = !{!5972, !5973, !5980}
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !5970, file: !5864, line: 290, baseType: !5885, size: 4096, align: 128)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !5970, file: !5864, line: 291, baseType: !5974, size: 512, offset: 4096)
!5974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !5864, line: 268, size: 512, elements: !5975)
!5975 = !{!5976, !5977, !5978}
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !5974, file: !5864, line: 269, baseType: !413, size: 64)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !5974, file: !5864, line: 270, baseType: !413, size: 64, offset: 64)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5974, file: !5864, line: 271, baseType: !5979, size: 384, offset: 128)
!5979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !413, size: 384, elements: !1748)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !5970, file: !5864, line: 292, baseType: !2999, offset: 4608)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !5869, file: !5864, line: 309, baseType: !5982, size: 32768)
!5982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1474, size: 32768, elements: !5983)
!5983 = !{!5984}
!5984 = !DISubrange(count: 4096)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1331, file: !703, line: 378, baseType: !5986, size: 64, offset: 64)
!5986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1327, file: !703, line: 384, baseType: !1624, size: 192, offset: 192)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1206, file: !703, line: 500, baseType: !806, offset: 6656)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1206, file: !703, line: 501, baseType: !5990, size: 64, offset: 6656)
!5990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5991, size: 64)
!5991 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !703, line: 387, flags: DIFlagFwdDecl)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1206, file: !703, line: 516, baseType: !1836, size: 64, offset: 6720)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1206, file: !703, line: 519, baseType: !1087, size: 64, offset: 6784)
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1206, file: !703, line: 521, baseType: !5995, size: 64, offset: 6848)
!5995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5996, size: 64)
!5996 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !703, line: 521, flags: DIFlagFwdDecl)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1206, file: !703, line: 545, baseType: !465, size: 32, offset: 6912)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1206, file: !703, line: 548, baseType: !617, size: 8, offset: 6944)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1206, file: !703, line: 550, baseType: !6000, offset: 6952)
!6000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !6001, line: 142, elements: !820)
!6001 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1206, file: !703, line: 554, baseType: !1884, size: 256, offset: 6976)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1206, file: !703, line: 557, baseType: !784, size: 32, offset: 7232)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1203, file: !703, line: 565, baseType: !6005, offset: 7296)
!6005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, elements: !391)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1193, file: !703, line: 333, baseType: !6007, size: 64, offset: 576)
!6007 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1225, line: 284, baseType: !6008)
!6008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1225, line: 284, size: 64, elements: !6009)
!6009 = !{!6010}
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !6008, file: !1225, line: 284, baseType: !6011, size: 64)
!6011 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1230, line: 19, baseType: !394)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1193, file: !703, line: 334, baseType: !394, size: 64, offset: 640)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1193, file: !703, line: 343, baseType: !6014, size: 256, offset: 704)
!6014 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1193, file: !703, line: 340, size: 256, elements: !6015)
!6015 = !{!6016, !6017}
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !6014, file: !703, line: 341, baseType: !515, size: 192, align: 64)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !6014, file: !703, line: 342, baseType: !394, size: 64, offset: 192)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1193, file: !703, line: 351, baseType: !366, size: 128, offset: 960)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1193, file: !703, line: 353, baseType: !6020, size: 64, offset: 1088)
!6020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6021, size: 64)
!6021 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !703, line: 353, flags: DIFlagFwdDecl)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1193, file: !703, line: 356, baseType: !4178, size: 64, offset: 1152)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1193, file: !703, line: 359, baseType: !394, size: 64, offset: 1216)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1193, file: !703, line: 361, baseType: !1087, size: 64, offset: 1280)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1193, file: !703, line: 362, baseType: !647, size: 64, offset: 1344)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1193, file: !703, line: 365, baseType: !453, size: 64, offset: 1408)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1193, file: !703, line: 373, baseType: !6028, offset: 1472)
!6028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !703, line: 296, elements: !820)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !1080, file: !716, line: 1836, baseType: !394, size: 64, offset: 832)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1080, file: !716, line: 1837, baseType: !6031, size: 64, offset: 896)
!6031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6032, size: 64)
!6032 = !DISubroutineType(types: !6033)
!6033 = !{!72, !719, !1087}
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1080, file: !716, line: 1838, baseType: !6035, size: 64, offset: 960)
!6035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6036, size: 64)
!6036 = !DISubroutineType(types: !6037)
!6037 = !{!72, !1087, !6038}
!6038 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !716, line: 1007, baseType: !647)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1080, file: !716, line: 1839, baseType: !6031, size: 64, offset: 1024)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !1080, file: !716, line: 1840, baseType: !6041, size: 64, offset: 1088)
!6041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6042, size: 64)
!6042 = !DISubroutineType(types: !6043)
!6043 = !{!72, !1087, !901, !901, !72}
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1080, file: !716, line: 1841, baseType: !6045, size: 64, offset: 1152)
!6045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6046, size: 64)
!6046 = !DISubroutineType(types: !6047)
!6047 = !{!72, !72, !1087, !72}
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1080, file: !716, line: 1842, baseType: !6049, size: 64, offset: 1216)
!6049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6050, size: 64)
!6050 = !DISubroutineType(types: !6051)
!6051 = !{!72, !1087, !72, !6052}
!6052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6053, size: 64)
!6053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !716, line: 1062, size: 1664, elements: !6054)
!6054 = !{!6055, !6056, !6057, !6058, !6059, !6060, !6061, !6062, !6063, !6064, !6065, !6066, !6067, !6068, !6069, !6070, !6071, !6072, !6085, !6116}
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !6053, file: !716, line: 1063, baseType: !6052, size: 64)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !6053, file: !716, line: 1064, baseType: !366, size: 128, offset: 64)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !6053, file: !716, line: 1065, baseType: !358, size: 128, offset: 192)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !6053, file: !716, line: 1066, baseType: !366, size: 128, offset: 320)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !6053, file: !716, line: 1069, baseType: !366, size: 128, offset: 448)
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !6053, file: !716, line: 1072, baseType: !6038, size: 64, offset: 576)
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !6053, file: !716, line: 1073, baseType: !7, size: 32, offset: 640)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !6053, file: !716, line: 1074, baseType: !571, size: 8, offset: 672)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !6053, file: !716, line: 1075, baseType: !7, size: 32, offset: 704)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !6053, file: !716, line: 1076, baseType: !72, size: 32, offset: 736)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !6053, file: !716, line: 1077, baseType: !1177, size: 128, offset: 768)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !6053, file: !716, line: 1078, baseType: !1087, size: 64, offset: 896)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !6053, file: !716, line: 1079, baseType: !901, size: 64, offset: 960)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !6053, file: !716, line: 1080, baseType: !901, size: 64, offset: 1024)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !6053, file: !716, line: 1082, baseType: !5745, size: 64, offset: 1088)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !6053, file: !716, line: 1084, baseType: !394, size: 64, offset: 1152)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !6053, file: !716, line: 1085, baseType: !394, size: 64, offset: 1216)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !6053, file: !716, line: 1087, baseType: !6073, size: 64, offset: 1280)
!6073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6074, size: 64)
!6074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6075)
!6075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !716, line: 1011, size: 128, elements: !6076)
!6076 = !{!6077, !6081}
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !6075, file: !716, line: 1012, baseType: !6078, size: 64)
!6078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6079, size: 64)
!6079 = !DISubroutineType(types: !6080)
!6080 = !{null, !6052, !6052}
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !6075, file: !716, line: 1013, baseType: !6082, size: 64, offset: 64)
!6082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6083, size: 64)
!6083 = !DISubroutineType(types: !6084)
!6084 = !{null, !6052}
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !6053, file: !716, line: 1088, baseType: !6086, size: 64, offset: 1344)
!6086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6087, size: 64)
!6087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6088)
!6088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !716, line: 1016, size: 512, elements: !6089)
!6089 = !{!6090, !6094, !6098, !6099, !6103, !6107, !6111, !6115}
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !6088, file: !716, line: 1017, baseType: !6091, size: 64)
!6091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6092, size: 64)
!6092 = !DISubroutineType(types: !6093)
!6093 = !{!6038, !6038}
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !6088, file: !716, line: 1018, baseType: !6095, size: 64, offset: 64)
!6095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6096, size: 64)
!6096 = !DISubroutineType(types: !6097)
!6097 = !{null, !6038}
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !6088, file: !716, line: 1019, baseType: !6082, size: 64, offset: 128)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !6088, file: !716, line: 1020, baseType: !6100, size: 64, offset: 192)
!6100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6101, size: 64)
!6101 = !DISubroutineType(types: !6102)
!6102 = !{!72, !6052, !72}
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !6088, file: !716, line: 1021, baseType: !6104, size: 64, offset: 256)
!6104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6105, size: 64)
!6105 = !DISubroutineType(types: !6106)
!6106 = !{!617, !6052}
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !6088, file: !716, line: 1022, baseType: !6108, size: 64, offset: 320)
!6108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6109, size: 64)
!6109 = !DISubroutineType(types: !6110)
!6110 = !{!72, !6052, !72, !369}
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !6088, file: !716, line: 1023, baseType: !6112, size: 64, offset: 384)
!6112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6113, size: 64)
!6113 = !DISubroutineType(types: !6114)
!6114 = !{null, !6052, !3623}
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !6088, file: !716, line: 1024, baseType: !6104, size: 64, offset: 448)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !6053, file: !716, line: 1097, baseType: !6117, size: 256, offset: 1408)
!6117 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6053, file: !716, line: 1089, size: 256, elements: !6118)
!6118 = !{!6119, !6128, !6134}
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !6117, file: !716, line: 1090, baseType: !6120, size: 256)
!6120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !6121, line: 10, size: 256, elements: !6122)
!6121 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!6122 = !{!6123, !6124, !6127}
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6120, file: !6121, line: 11, baseType: !784, size: 32)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6120, file: !6121, line: 12, baseType: !6125, size: 64, offset: 64)
!6125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6126, size: 64)
!6126 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !6121, line: 5, flags: DIFlagFwdDecl)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6120, file: !6121, line: 13, baseType: !366, size: 128, offset: 128)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !6117, file: !716, line: 1091, baseType: !6129, size: 64)
!6129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !6121, line: 17, size: 64, elements: !6130)
!6130 = !{!6131}
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6129, file: !6121, line: 18, baseType: !6132, size: 64)
!6132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6133, size: 64)
!6133 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !6121, line: 16, flags: DIFlagFwdDecl)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !6117, file: !716, line: 1096, baseType: !6135, size: 192)
!6135 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6117, file: !716, line: 1092, size: 192, elements: !6136)
!6136 = !{!6137, !6138, !6139}
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !6135, file: !716, line: 1093, baseType: !366, size: 128)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6135, file: !716, line: 1094, baseType: !72, size: 32, offset: 128)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !6135, file: !716, line: 1095, baseType: !7, size: 32, offset: 160)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !1080, file: !716, line: 1843, baseType: !6141, size: 64, offset: 1280)
!6141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6142, size: 64)
!6142 = !DISubroutineType(types: !6143)
!6143 = !{!1092, !1087, !701, !72, !671, !1046, !72}
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1080, file: !716, line: 1844, baseType: !1215, size: 64, offset: 1344)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !1080, file: !716, line: 1845, baseType: !6146, size: 64, offset: 1408)
!6146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6147, size: 64)
!6147 = !DISubroutineType(types: !6148)
!6148 = !{!72, !72}
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !1080, file: !716, line: 1846, baseType: !6049, size: 64, offset: 1472)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !1080, file: !716, line: 1847, baseType: !6151, size: 64, offset: 1536)
!6151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6152, size: 64)
!6152 = !DISubroutineType(types: !6153)
!6153 = !{!1092, !5726, !1087, !1046, !671, !7}
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !1080, file: !716, line: 1848, baseType: !6155, size: 64, offset: 1600)
!6155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6156, size: 64)
!6156 = !DISubroutineType(types: !6157)
!6157 = !{!1092, !1087, !1046, !5726, !671, !7}
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !1080, file: !716, line: 1849, baseType: !6159, size: 64, offset: 1664)
!6159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6160, size: 64)
!6160 = !DISubroutineType(types: !6161)
!6161 = !{!72, !1087, !590, !6162, !3623}
!6162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6052, size: 64)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !1080, file: !716, line: 1850, baseType: !6164, size: 64, offset: 1728)
!6164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6165, size: 64)
!6165 = !DISubroutineType(types: !6166)
!6166 = !{!590, !1087, !72, !901, !901}
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !1080, file: !716, line: 1852, baseType: !6168, size: 64, offset: 1792)
!6168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6169, size: 64)
!6169 = !DISubroutineType(types: !6170)
!6170 = !{null, !1019, !1087}
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !1080, file: !716, line: 1856, baseType: !6172, size: 64, offset: 1856)
!6172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6173, size: 64)
!6173 = !DISubroutineType(types: !6174)
!6174 = !{!1092, !1087, !901, !1087, !901, !671, !7}
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !1080, file: !716, line: 1858, baseType: !6176, size: 64, offset: 1920)
!6176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6177, size: 64)
!6177 = !DISubroutineType(types: !6178)
!6178 = !{!901, !1087, !901, !1087, !901, !901, !7}
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !1080, file: !716, line: 1861, baseType: !6041, size: 64, offset: 1984)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1063, file: !716, line: 929, baseType: !806, offset: 384)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1063, file: !716, line: 930, baseType: !6182, size: 32, offset: 384)
!6182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !716, line: 296, baseType: !7, size: 32, elements: !6183)
!6183 = !{!6184, !6185, !6186, !6187, !6188, !6189}
!6184 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!6185 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!6186 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!6187 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!6188 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!6189 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1063, file: !716, line: 931, baseType: !453, size: 64, offset: 448)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1063, file: !716, line: 932, baseType: !7, size: 32, offset: 512)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1063, file: !716, line: 933, baseType: !4948, size: 32, offset: 544)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1063, file: !716, line: 934, baseType: !1031, size: 192, offset: 576)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1063, file: !716, line: 935, baseType: !901, size: 64, offset: 768)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1063, file: !716, line: 936, baseType: !6196, size: 192, offset: 832)
!6196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !716, line: 885, size: 192, elements: !6197)
!6197 = !{!6198, !6199, !6200, !6208, !6209, !6210}
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6196, file: !716, line: 886, baseType: !2915)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !6196, file: !716, line: 887, baseType: !1598, size: 64)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !6196, file: !716, line: 888, baseType: !6201, size: 32, offset: 64)
!6201 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !1600, line: 9, baseType: !7, size: 32, elements: !6202)
!6202 = !{!6203, !6204, !6205, !6206, !6207}
!6203 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!6204 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!6205 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!6206 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!6207 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6196, file: !716, line: 889, baseType: !726, size: 32, offset: 96)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !6196, file: !716, line: 889, baseType: !726, size: 32, offset: 128)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !6196, file: !716, line: 890, baseType: !72, size: 32, offset: 160)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1063, file: !716, line: 937, baseType: !1669, size: 64, offset: 1024)
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1063, file: !716, line: 938, baseType: !6213, size: 256, offset: 1088)
!6213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !716, line: 896, size: 256, elements: !6214)
!6214 = !{!6215, !6216, !6217, !6218, !6219, !6220}
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6213, file: !716, line: 897, baseType: !394, size: 64)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6213, file: !716, line: 898, baseType: !7, size: 32, offset: 64)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !6213, file: !716, line: 899, baseType: !7, size: 32, offset: 96)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !6213, file: !716, line: 902, baseType: !7, size: 32, offset: 128)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !6213, file: !716, line: 903, baseType: !7, size: 32, offset: 160)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !6213, file: !716, line: 904, baseType: !901, size: 64, offset: 192)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1063, file: !716, line: 940, baseType: !413, size: 64, offset: 1344)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1063, file: !716, line: 945, baseType: !647, size: 64, offset: 1408)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1063, file: !716, line: 949, baseType: !366, size: 128, offset: 1472)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1063, file: !716, line: 950, baseType: !366, size: 128, offset: 1600)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1063, file: !716, line: 952, baseType: !714, size: 64, offset: 1728)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1063, file: !716, line: 953, baseType: !6227, size: 32, offset: 1792)
!6227 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !6228, line: 8, baseType: !784)
!6228 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1063, file: !716, line: 954, baseType: !6227, size: 32, offset: 1824)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1020, file: !1021, line: 28, baseType: !647, size: 64, offset: 832)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !952, file: !716, line: 1955, baseType: !1016, size: 64, offset: 1088)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !952, file: !716, line: 1956, baseType: !1016, size: 64, offset: 1152)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !952, file: !716, line: 1957, baseType: !1016, size: 64, offset: 1216)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !952, file: !716, line: 1963, baseType: !6235, size: 64, offset: 1280)
!6235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6236, size: 64)
!6236 = !DISubroutineType(types: !6237)
!6237 = !{!72, !891, !701, !2067}
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !952, file: !716, line: 1964, baseType: !6239, size: 64, offset: 1344)
!6239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6240, size: 64)
!6240 = !DISubroutineType(types: !6241)
!6241 = !{!590, !891, !6242}
!6242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6243, size: 64)
!6243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !6244, line: 12, size: 256, elements: !6245)
!6244 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!6245 = !{!6246, !6247, !6248, !6249, !6250}
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !6243, file: !6244, line: 13, baseType: !2067, size: 32)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !6243, file: !6244, line: 16, baseType: !72, size: 32, offset: 32)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !6243, file: !6244, line: 23, baseType: !394, size: 64, offset: 64)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !6243, file: !6244, line: 30, baseType: !394, size: 64, offset: 128)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !6243, file: !6244, line: 33, baseType: !6251, size: 64, offset: 192)
!6251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6252, size: 64)
!6252 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !703, line: 27, flags: DIFlagFwdDecl)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !952, file: !716, line: 1966, baseType: !6239, size: 64, offset: 1408)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !892, file: !716, line: 1424, baseType: !6255, size: 64, offset: 448)
!6255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6256, size: 64)
!6256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6257)
!6257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !6258, line: 322, size: 704, elements: !6259)
!6258 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!6259 = !{!6260, !6311, !6315, !6319, !6320, !6321, !6322, !6323, !6328, !6333, !6337}
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !6257, file: !6258, line: 323, baseType: !6261, size: 64)
!6261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6262, size: 64)
!6262 = !DISubroutineType(types: !6263)
!6263 = !{!72, !6264}
!6264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6265, size: 64)
!6265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !6258, line: 294, size: 1600, elements: !6266)
!6266 = !{!6267, !6268, !6269, !6270, !6271, !6272, !6273, !6274, !6275, !6296, !6297, !6298}
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !6265, file: !6258, line: 295, baseType: !358, size: 128)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !6265, file: !6258, line: 296, baseType: !366, size: 128, offset: 128)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !6265, file: !6258, line: 297, baseType: !366, size: 128, offset: 256)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !6265, file: !6258, line: 298, baseType: !366, size: 128, offset: 384)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !6265, file: !6258, line: 299, baseType: !1031, size: 192, offset: 512)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !6265, file: !6258, line: 300, baseType: !806, offset: 704)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !6265, file: !6258, line: 301, baseType: !465, size: 32, offset: 704)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !6265, file: !6258, line: 302, baseType: !891, size: 64, offset: 768)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !6265, file: !6258, line: 303, baseType: !6276, size: 64, offset: 832)
!6276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !6258, line: 68, size: 64, elements: !6277)
!6277 = !{!6278, !6290}
!6278 = !DIDerivedType(tag: DW_TAG_member, scope: !6276, file: !6258, line: 69, baseType: !6279, size: 32)
!6279 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6276, file: !6258, line: 69, size: 32, elements: !6280)
!6280 = !{!6281, !6282, !6283}
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6279, file: !6258, line: 70, baseType: !726, size: 32)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !6279, file: !6258, line: 71, baseType: !734, size: 32)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !6279, file: !6258, line: 72, baseType: !6284, size: 32)
!6284 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !6285, line: 24, baseType: !6286)
!6285 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!6286 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6285, line: 22, size: 32, elements: !6287)
!6287 = !{!6288}
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !6286, file: !6285, line: 23, baseType: !6289, size: 32)
!6289 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !6285, line: 20, baseType: !732)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6276, file: !6258, line: 74, baseType: !6291, size: 32, offset: 32)
!6291 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !6258, line: 54, baseType: !7, size: 32, elements: !6292)
!6292 = !{!6293, !6294, !6295}
!6293 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!6294 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!6295 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !6265, file: !6258, line: 304, baseType: !901, size: 64, offset: 896)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !6265, file: !6258, line: 305, baseType: !394, size: 64, offset: 960)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !6265, file: !6258, line: 306, baseType: !6299, size: 576, offset: 1024)
!6299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !6258, line: 205, size: 576, elements: !6300)
!6300 = !{!6301, !6303, !6304, !6305, !6306, !6307, !6308, !6309, !6310}
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !6299, file: !6258, line: 206, baseType: !6302, size: 64)
!6302 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !6258, line: 66, baseType: !461)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !6299, file: !6258, line: 207, baseType: !6302, size: 64, offset: 64)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !6299, file: !6258, line: 208, baseType: !6302, size: 64, offset: 128)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !6299, file: !6258, line: 209, baseType: !6302, size: 64, offset: 192)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !6299, file: !6258, line: 210, baseType: !6302, size: 64, offset: 256)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !6299, file: !6258, line: 211, baseType: !6302, size: 64, offset: 320)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !6299, file: !6258, line: 212, baseType: !6302, size: 64, offset: 384)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !6299, file: !6258, line: 213, baseType: !1719, size: 64, offset: 448)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !6299, file: !6258, line: 214, baseType: !1719, size: 64, offset: 512)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !6257, file: !6258, line: 324, baseType: !6312, size: 64, offset: 64)
!6312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6313, size: 64)
!6313 = !DISubroutineType(types: !6314)
!6314 = !{!6264, !891, !72}
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !6257, file: !6258, line: 325, baseType: !6316, size: 64, offset: 128)
!6316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6317, size: 64)
!6317 = !DISubroutineType(types: !6318)
!6318 = !{null, !6264}
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !6257, file: !6258, line: 326, baseType: !6261, size: 64, offset: 192)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !6257, file: !6258, line: 327, baseType: !6261, size: 64, offset: 256)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !6257, file: !6258, line: 328, baseType: !6261, size: 64, offset: 320)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !6257, file: !6258, line: 329, baseType: !994, size: 64, offset: 384)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !6257, file: !6258, line: 332, baseType: !6324, size: 64, offset: 448)
!6324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6325, size: 64)
!6325 = !DISubroutineType(types: !6326)
!6326 = !{!6327, !719}
!6327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6302, size: 64)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !6257, file: !6258, line: 333, baseType: !6329, size: 64, offset: 512)
!6329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6330, size: 64)
!6330 = !DISubroutineType(types: !6331)
!6331 = !{!72, !719, !6332}
!6332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6284, size: 64)
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !6257, file: !6258, line: 335, baseType: !6334, size: 64, offset: 576)
!6334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6335, size: 64)
!6335 = !DISubroutineType(types: !6336)
!6336 = !{!72, !719, !6327}
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6257, file: !6258, line: 337, baseType: !6338, size: 64, offset: 640)
!6338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6339, size: 64)
!6339 = !DISubroutineType(types: !6340)
!6340 = !{!72, !891, !6341}
!6341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6276, size: 64)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !892, file: !716, line: 1425, baseType: !6343, size: 64, offset: 512)
!6343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6344, size: 64)
!6344 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6345)
!6345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !6258, line: 428, size: 704, elements: !6346)
!6346 = !{!6347, !6351, !6352, !6356, !6357, !6358, !6373, !6396, !6400, !6401, !6424}
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !6345, file: !6258, line: 429, baseType: !6348, size: 64)
!6348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6349, size: 64)
!6349 = !DISubroutineType(types: !6350)
!6350 = !{!72, !891, !72, !72, !882}
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !6345, file: !6258, line: 430, baseType: !994, size: 64, offset: 64)
!6352 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !6345, file: !6258, line: 431, baseType: !6353, size: 64, offset: 128)
!6353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6354, size: 64)
!6354 = !DISubroutineType(types: !6355)
!6355 = !{!72, !891, !7}
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !6345, file: !6258, line: 432, baseType: !6353, size: 64, offset: 192)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !6345, file: !6258, line: 433, baseType: !994, size: 64, offset: 256)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !6345, file: !6258, line: 434, baseType: !6359, size: 64, offset: 320)
!6359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6360, size: 64)
!6360 = !DISubroutineType(types: !6361)
!6361 = !{!72, !891, !72, !6362}
!6362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6363, size: 64)
!6363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !6258, line: 415, size: 256, elements: !6364)
!6364 = !{!6365, !6366, !6367, !6368, !6369, !6370, !6371, !6372}
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !6363, file: !6258, line: 416, baseType: !72, size: 32)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !6363, file: !6258, line: 417, baseType: !7, size: 32, offset: 32)
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !6363, file: !6258, line: 418, baseType: !7, size: 32, offset: 64)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !6363, file: !6258, line: 420, baseType: !7, size: 32, offset: 96)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !6363, file: !6258, line: 421, baseType: !7, size: 32, offset: 128)
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !6363, file: !6258, line: 422, baseType: !7, size: 32, offset: 160)
!6371 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !6363, file: !6258, line: 423, baseType: !7, size: 32, offset: 192)
!6372 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !6363, file: !6258, line: 424, baseType: !7, size: 32, offset: 224)
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !6345, file: !6258, line: 435, baseType: !6374, size: 64, offset: 384)
!6374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6375, size: 64)
!6375 = !DISubroutineType(types: !6376)
!6376 = !{!72, !891, !6276, !6377}
!6377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6378, size: 64)
!6378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !6258, line: 343, size: 960, elements: !6379)
!6379 = !{!6380, !6381, !6382, !6383, !6384, !6385, !6386, !6387, !6388, !6389, !6390, !6391, !6392, !6393, !6394, !6395}
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !6378, file: !6258, line: 344, baseType: !72, size: 32)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !6378, file: !6258, line: 345, baseType: !413, size: 64, offset: 64)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !6378, file: !6258, line: 346, baseType: !413, size: 64, offset: 128)
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !6378, file: !6258, line: 347, baseType: !413, size: 64, offset: 192)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !6378, file: !6258, line: 348, baseType: !413, size: 64, offset: 256)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !6378, file: !6258, line: 349, baseType: !413, size: 64, offset: 320)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !6378, file: !6258, line: 350, baseType: !413, size: 64, offset: 384)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !6378, file: !6258, line: 351, baseType: !459, size: 64, offset: 448)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !6378, file: !6258, line: 353, baseType: !459, size: 64, offset: 512)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !6378, file: !6258, line: 354, baseType: !72, size: 32, offset: 576)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !6378, file: !6258, line: 355, baseType: !72, size: 32, offset: 608)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !6378, file: !6258, line: 356, baseType: !413, size: 64, offset: 640)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !6378, file: !6258, line: 357, baseType: !413, size: 64, offset: 704)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !6378, file: !6258, line: 358, baseType: !413, size: 64, offset: 768)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !6378, file: !6258, line: 359, baseType: !459, size: 64, offset: 832)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !6378, file: !6258, line: 360, baseType: !72, size: 32, offset: 896)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !6345, file: !6258, line: 436, baseType: !6397, size: 64, offset: 448)
!6397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6398, size: 64)
!6398 = !DISubroutineType(types: !6399)
!6399 = !{!72, !891, !6341, !6377}
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !6345, file: !6258, line: 438, baseType: !6374, size: 64, offset: 512)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !6345, file: !6258, line: 439, baseType: !6402, size: 64, offset: 576)
!6402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6403, size: 64)
!6403 = !DISubroutineType(types: !6404)
!6404 = !{!72, !891, !6405}
!6405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6406, size: 64)
!6406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !6258, line: 409, size: 1408, elements: !6407)
!6407 = !{!6408, !6409}
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !6406, file: !6258, line: 410, baseType: !7, size: 32)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !6406, file: !6258, line: 411, baseType: !6410, size: 1344, offset: 64)
!6410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6411, size: 1344, elements: !944)
!6411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !6258, line: 395, size: 448, elements: !6412)
!6412 = !{!6413, !6414, !6415, !6416, !6417, !6418, !6419, !6420, !6421, !6423}
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6411, file: !6258, line: 396, baseType: !7, size: 32)
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !6411, file: !6258, line: 397, baseType: !7, size: 32, offset: 32)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !6411, file: !6258, line: 399, baseType: !7, size: 32, offset: 64)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !6411, file: !6258, line: 400, baseType: !7, size: 32, offset: 96)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !6411, file: !6258, line: 401, baseType: !7, size: 32, offset: 128)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !6411, file: !6258, line: 402, baseType: !7, size: 32, offset: 160)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !6411, file: !6258, line: 403, baseType: !7, size: 32, offset: 192)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !6411, file: !6258, line: 404, baseType: !417, size: 64, offset: 256)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !6411, file: !6258, line: 405, baseType: !6422, size: 64, offset: 320)
!6422 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !359, line: 126, baseType: !413)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !6411, file: !6258, line: 406, baseType: !6422, size: 64, offset: 384)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !6345, file: !6258, line: 440, baseType: !6353, size: 64, offset: 640)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !892, file: !716, line: 1426, baseType: !6426, size: 64, offset: 576)
!6426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6427, size: 64)
!6427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6428)
!6428 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !716, line: 49, flags: DIFlagFwdDecl)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !892, file: !716, line: 1427, baseType: !394, size: 64, offset: 640)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !892, file: !716, line: 1428, baseType: !394, size: 64, offset: 704)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !892, file: !716, line: 1429, baseType: !394, size: 64, offset: 768)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !892, file: !716, line: 1430, baseType: !750, size: 64, offset: 832)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !892, file: !716, line: 1431, baseType: !1239, size: 256, offset: 896)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !892, file: !716, line: 1432, baseType: !72, size: 32, offset: 1152)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !892, file: !716, line: 1433, baseType: !465, size: 32, offset: 1184)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !892, file: !716, line: 1437, baseType: !6437, size: 64, offset: 1216)
!6437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6438, size: 64)
!6438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6439, size: 64)
!6439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6440)
!6440 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !716, line: 1437, flags: DIFlagFwdDecl)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !892, file: !716, line: 1449, baseType: !6442, size: 64, offset: 1280)
!6442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !767, line: 34, size: 64, elements: !6443)
!6443 = !{!6444}
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !6442, file: !767, line: 35, baseType: !770, size: 64)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !892, file: !716, line: 1450, baseType: !366, size: 128, offset: 1344)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !892, file: !716, line: 1451, baseType: !4870, size: 64, offset: 1472)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !892, file: !716, line: 1452, baseType: !4890, size: 64, offset: 1536)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !892, file: !716, line: 1453, baseType: !6449, size: 64, offset: 1600)
!6449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6450, size: 64)
!6450 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !716, line: 1453, flags: DIFlagFwdDecl)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !892, file: !716, line: 1454, baseType: !358, size: 128, offset: 1664)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !892, file: !716, line: 1455, baseType: !7, size: 32, offset: 1792)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !892, file: !716, line: 1456, baseType: !6454, size: 2432, offset: 1856)
!6454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !6258, line: 518, size: 2432, elements: !6455)
!6455 = !{!6456, !6457, !6458, !6460, !6492}
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6454, file: !6258, line: 519, baseType: !7, size: 32)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !6454, file: !6258, line: 520, baseType: !1239, size: 256, offset: 64)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !6454, file: !6258, line: 521, baseType: !6459, size: 192, offset: 320)
!6459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !719, size: 192, elements: !944)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !6454, file: !6258, line: 522, baseType: !6461, size: 1728, offset: 512)
!6461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6462, size: 1728, elements: !944)
!6462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !6258, line: 222, size: 576, elements: !6463)
!6463 = !{!6464, !6484, !6485, !6486, !6487, !6488, !6489, !6490, !6491}
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !6462, file: !6258, line: 223, baseType: !6465, size: 64)
!6465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6466, size: 64)
!6466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !6258, line: 443, size: 256, elements: !6467)
!6467 = !{!6468, !6469, !6482, !6483}
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !6466, file: !6258, line: 444, baseType: !72, size: 32)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !6466, file: !6258, line: 445, baseType: !6470, size: 64, offset: 64)
!6470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6471, size: 64)
!6471 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6472)
!6472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !6258, line: 310, size: 512, elements: !6473)
!6473 = !{!6474, !6475, !6476, !6477, !6478, !6479, !6480, !6481}
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !6472, file: !6258, line: 311, baseType: !994, size: 64)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !6472, file: !6258, line: 312, baseType: !994, size: 64, offset: 64)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !6472, file: !6258, line: 313, baseType: !994, size: 64, offset: 128)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !6472, file: !6258, line: 314, baseType: !994, size: 64, offset: 192)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !6472, file: !6258, line: 315, baseType: !6261, size: 64, offset: 256)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !6472, file: !6258, line: 316, baseType: !6261, size: 64, offset: 320)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !6472, file: !6258, line: 317, baseType: !6261, size: 64, offset: 384)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6472, file: !6258, line: 318, baseType: !6338, size: 64, offset: 448)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !6466, file: !6258, line: 446, baseType: !929, size: 64, offset: 128)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !6466, file: !6258, line: 447, baseType: !6465, size: 64, offset: 192)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !6462, file: !6258, line: 224, baseType: !72, size: 32, offset: 64)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !6462, file: !6258, line: 226, baseType: !366, size: 128, offset: 128)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !6462, file: !6258, line: 227, baseType: !394, size: 64, offset: 256)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !6462, file: !6258, line: 228, baseType: !7, size: 32, offset: 320)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !6462, file: !6258, line: 229, baseType: !7, size: 32, offset: 352)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !6462, file: !6258, line: 230, baseType: !6302, size: 64, offset: 384)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !6462, file: !6258, line: 231, baseType: !6302, size: 64, offset: 448)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !6462, file: !6258, line: 232, baseType: !647, size: 64, offset: 512)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6454, file: !6258, line: 523, baseType: !6493, size: 192, offset: 2240)
!6493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6470, size: 192, elements: !944)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !892, file: !716, line: 1458, baseType: !6495, size: 2112, offset: 4288)
!6495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !716, line: 1410, size: 2112, elements: !6496)
!6496 = !{!6497, !6498, !6499}
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !6495, file: !716, line: 1411, baseType: !72, size: 32)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !6495, file: !716, line: 1412, baseType: !1177, size: 128, offset: 64)
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !6495, file: !716, line: 1413, baseType: !6500, size: 1920, offset: 192)
!6500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6501, size: 1920, elements: !944)
!6501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !6502, line: 12, size: 640, elements: !6503)
!6502 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!6503 = !{!6504, !6512, !6513, !6518, !6519}
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !6501, file: !6502, line: 13, baseType: !6505, size: 320)
!6505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !6506, line: 17, size: 320, elements: !6507)
!6506 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!6507 = !{!6508, !6509, !6510, !6511}
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !6505, file: !6506, line: 18, baseType: !72, size: 32)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !6505, file: !6506, line: 19, baseType: !72, size: 32, offset: 32)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !6505, file: !6506, line: 20, baseType: !1177, size: 128, offset: 64)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !6505, file: !6506, line: 22, baseType: !381, size: 128, align: 64, offset: 192)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !6501, file: !6502, line: 14, baseType: !4724, size: 64, offset: 320)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !6501, file: !6502, line: 15, baseType: !6514, size: 64, offset: 384)
!6514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !6515, line: 16, size: 64, elements: !6516)
!6515 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!6516 = !{!6517}
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !6514, file: !6515, line: 17, baseType: !1334, size: 64)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !6501, file: !6502, line: 16, baseType: !1177, size: 128, offset: 448)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !6501, file: !6502, line: 17, baseType: !465, size: 32, offset: 576)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !892, file: !716, line: 1465, baseType: !647, size: 64, offset: 6400)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !892, file: !716, line: 1468, baseType: !784, size: 32, offset: 6464)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !892, file: !716, line: 1470, baseType: !1719, size: 64, offset: 6528)
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !892, file: !716, line: 1471, baseType: !1719, size: 64, offset: 6592)
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !892, file: !716, line: 1473, baseType: !545, size: 32, offset: 6656)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !892, file: !716, line: 1474, baseType: !6526, size: 64, offset: 6720)
!6526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6527, size: 64)
!6527 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !716, line: 603, flags: DIFlagFwdDecl)
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !892, file: !716, line: 1477, baseType: !3904, size: 256, offset: 6784)
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !892, file: !716, line: 1478, baseType: !6530, size: 128, offset: 7040)
!6530 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !6531, line: 18, baseType: !6532)
!6531 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!6532 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6531, line: 16, size: 128, elements: !6533)
!6533 = !{!6534}
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !6532, file: !6531, line: 17, baseType: !2307, size: 128)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !892, file: !716, line: 1480, baseType: !7, size: 32, offset: 7168)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !892, file: !716, line: 1481, baseType: !4948, size: 32, offset: 7200)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !892, file: !716, line: 1487, baseType: !1031, size: 192, offset: 7232)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !892, file: !716, line: 1493, baseType: !374, size: 64, offset: 7424)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !892, file: !716, line: 1495, baseType: !823, size: 64, offset: 7488)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !892, file: !716, line: 1500, baseType: !72, size: 32, offset: 7552)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !892, file: !716, line: 1502, baseType: !6542, size: 448, offset: 7616)
!6542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !6244, line: 60, size: 448, elements: !6543)
!6543 = !{!6544, !6549, !6550, !6551, !6552, !6553, !6554}
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !6542, file: !6244, line: 61, baseType: !6545, size: 64)
!6545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6546, size: 64)
!6546 = !DISubroutineType(types: !6547)
!6547 = !{!394, !6548, !6242}
!6548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6542, size: 64)
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !6542, file: !6244, line: 63, baseType: !6545, size: 64, offset: 64)
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !6542, file: !6244, line: 66, baseType: !590, size: 64, offset: 128)
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !6542, file: !6244, line: 67, baseType: !72, size: 32, offset: 192)
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6542, file: !6244, line: 68, baseType: !7, size: 32, offset: 224)
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6542, file: !6244, line: 71, baseType: !366, size: 128, offset: 256)
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !6542, file: !6244, line: 77, baseType: !6555, size: 64, offset: 384)
!6555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !892, file: !716, line: 1505, baseType: !453, size: 64, offset: 8064)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !892, file: !716, line: 1508, baseType: !453, size: 64, offset: 8128)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !892, file: !716, line: 1511, baseType: !72, size: 32, offset: 8192)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !892, file: !716, line: 1514, baseType: !6227, size: 32, offset: 8224)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !892, file: !716, line: 1517, baseType: !2900, size: 64, offset: 8256)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !892, file: !716, line: 1518, baseType: !934, size: 64, offset: 8320)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !892, file: !716, line: 1525, baseType: !1836, size: 64, offset: 8384)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !892, file: !716, line: 1532, baseType: !6564, size: 64, offset: 8448)
!6564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !6565, line: 52, size: 64, elements: !6566)
!6565 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!6566 = !{!6567}
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6564, file: !6565, line: 53, baseType: !6568, size: 64)
!6568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6569, size: 64)
!6569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !6565, line: 40, size: 256, elements: !6570)
!6570 = !{!6571, !6572, !6577}
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6569, file: !6565, line: 42, baseType: !806)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !6569, file: !6565, line: 44, baseType: !6573, size: 192)
!6573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !6565, line: 28, size: 192, elements: !6574)
!6574 = !{!6575, !6576}
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6573, file: !6565, line: 29, baseType: !366, size: 128)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6573, file: !6565, line: 31, baseType: !590, size: 64, offset: 128)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6569, file: !6565, line: 49, baseType: !590, size: 64, offset: 192)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !892, file: !716, line: 1533, baseType: !6564, size: 64, offset: 8512)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !892, file: !716, line: 1534, baseType: !381, size: 128, align: 64, offset: 8576)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !892, file: !716, line: 1535, baseType: !1884, size: 256, offset: 8704)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !892, file: !716, line: 1537, baseType: !1031, size: 192, offset: 8960)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !892, file: !716, line: 1542, baseType: !72, size: 32, offset: 9152)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !892, file: !716, line: 1545, baseType: !806, offset: 9184)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !892, file: !716, line: 1546, baseType: !366, size: 128, offset: 9216)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !892, file: !716, line: 1548, baseType: !806, offset: 9344)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !892, file: !716, line: 1549, baseType: !366, size: 128, offset: 9344)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !751, file: !752, line: 104, baseType: !394, size: 64, offset: 896)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !751, file: !752, line: 105, baseType: !647, size: 64, offset: 960)
!6589 = !DIDerivedType(tag: DW_TAG_member, scope: !751, file: !752, line: 107, baseType: !6590, size: 128, offset: 1024)
!6590 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !751, file: !752, line: 107, size: 128, elements: !6591)
!6591 = !{!6592, !6593}
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !6590, file: !752, line: 108, baseType: !366, size: 128)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !6590, file: !752, line: 109, baseType: !1176, size: 64)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !751, file: !752, line: 111, baseType: !366, size: 128, offset: 1152)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !751, file: !752, line: 112, baseType: !366, size: 128, offset: 1280)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !751, file: !752, line: 120, baseType: !6597, size: 128, offset: 1408)
!6597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !751, file: !752, line: 116, size: 128, elements: !6598)
!6598 = !{!6599, !6600, !6601}
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !6597, file: !752, line: 117, baseType: !358, size: 128)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !6597, file: !752, line: 118, baseType: !766, size: 128)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !6597, file: !752, line: 119, baseType: !381, size: 128, align: 64)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !744, file: !716, line: 1866, baseType: !6603, size: 64, offset: 64)
!6603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6604, size: 64)
!6604 = !DISubroutineType(types: !6605)
!6605 = !{!374, !750, !719, !6606}
!6606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6607, size: 64)
!6607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !6608, line: 10, size: 128, elements: !6609)
!6608 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!6609 = !{!6610, !6611}
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6607, file: !6608, line: 11, baseType: !3433, size: 64)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !6607, file: !6608, line: 12, baseType: !647, size: 64, offset: 64)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !744, file: !716, line: 1867, baseType: !6613, size: 64, offset: 128)
!6613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6614, size: 64)
!6614 = !DISubroutineType(types: !6615)
!6615 = !{!72, !719, !72}
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !744, file: !716, line: 1868, baseType: !6617, size: 64, offset: 192)
!6617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6618, size: 64)
!6618 = !DISubroutineType(types: !6619)
!6619 = !{!6620, !719, !72}
!6620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6621, size: 64)
!6621 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !716, line: 581, flags: DIFlagFwdDecl)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !744, file: !716, line: 1870, baseType: !6623, size: 64, offset: 256)
!6623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6624, size: 64)
!6624 = !DISubroutineType(types: !6625)
!6625 = !{!72, !750, !654, !72}
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !744, file: !716, line: 1872, baseType: !6627, size: 64, offset: 320)
!6627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6628, size: 64)
!6628 = !DISubroutineType(types: !6629)
!6629 = !{!72, !719, !750, !723, !617}
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !744, file: !716, line: 1873, baseType: !6631, size: 64, offset: 384)
!6631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6632, size: 64)
!6632 = !DISubroutineType(types: !6633)
!6633 = !{!72, !750, !719, !750}
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !744, file: !716, line: 1874, baseType: !6635, size: 64, offset: 448)
!6635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6636, size: 64)
!6636 = !DISubroutineType(types: !6637)
!6637 = !{!72, !719, !750}
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !744, file: !716, line: 1875, baseType: !6639, size: 64, offset: 512)
!6639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6640, size: 64)
!6640 = !DISubroutineType(types: !6641)
!6641 = !{!72, !719, !750, !374}
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !744, file: !716, line: 1876, baseType: !6643, size: 64, offset: 576)
!6643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6644, size: 64)
!6644 = !DISubroutineType(types: !6645)
!6645 = !{!72, !719, !750, !723}
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !744, file: !716, line: 1877, baseType: !6635, size: 64, offset: 640)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !744, file: !716, line: 1878, baseType: !6648, size: 64, offset: 704)
!6648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6649, size: 64)
!6649 = !DISubroutineType(types: !6650)
!6650 = !{!72, !719, !750, !723, !896}
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !744, file: !716, line: 1879, baseType: !6652, size: 64, offset: 768)
!6652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6653, size: 64)
!6653 = !DISubroutineType(types: !6654)
!6654 = !{!72, !719, !750, !719, !750, !7}
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !744, file: !716, line: 1881, baseType: !6656, size: 64, offset: 832)
!6656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6657, size: 64)
!6657 = !DISubroutineType(types: !6658)
!6658 = !{!72, !750, !6659}
!6659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6660, size: 64)
!6660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !716, line: 219, size: 640, elements: !6661)
!6661 = !{!6662, !6663, !6664, !6665, !6666, !6667, !6672, !6673, !6674}
!6662 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !6660, file: !716, line: 220, baseType: !7, size: 32)
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !6660, file: !716, line: 221, baseType: !723, size: 16, offset: 32)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !6660, file: !716, line: 222, baseType: !726, size: 32, offset: 64)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !6660, file: !716, line: 223, baseType: !734, size: 32, offset: 96)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !6660, file: !716, line: 224, baseType: !901, size: 64, offset: 128)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !6660, file: !716, line: 225, baseType: !6668, size: 128, offset: 192)
!6668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1720, line: 13, size: 128, elements: !6669)
!6669 = !{!6670, !6671}
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6668, file: !1720, line: 14, baseType: !1719, size: 64)
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !6668, file: !1720, line: 15, baseType: !590, size: 64, offset: 64)
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !6660, file: !716, line: 226, baseType: !6668, size: 128, offset: 320)
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !6660, file: !716, line: 227, baseType: !6668, size: 128, offset: 448)
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !6660, file: !716, line: 234, baseType: !1087, size: 64, offset: 576)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !744, file: !716, line: 1882, baseType: !6676, size: 64, offset: 896)
!6676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6677, size: 64)
!6677 = !DISubroutineType(types: !6678)
!6678 = !{!72, !882, !6679, !784, !7}
!6679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6680, size: 64)
!6680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !6681, line: 22, size: 1152, elements: !6682)
!6681 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!6682 = !{!6683, !6684, !6685, !6686, !6687, !6688, !6689, !6690, !6691, !6692, !6693, !6694, !6695, !6696, !6697, !6698, !6699, !6700}
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !6680, file: !6681, line: 23, baseType: !784, size: 32)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6680, file: !6681, line: 24, baseType: !723, size: 16, offset: 32)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !6680, file: !6681, line: 25, baseType: !7, size: 32, offset: 64)
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !6680, file: !6681, line: 26, baseType: !1727, size: 32, offset: 96)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !6680, file: !6681, line: 27, baseType: !413, size: 64, offset: 128)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !6680, file: !6681, line: 28, baseType: !413, size: 64, offset: 192)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !6680, file: !6681, line: 37, baseType: !413, size: 64, offset: 256)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6680, file: !6681, line: 38, baseType: !896, size: 32, offset: 320)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !6680, file: !6681, line: 39, baseType: !896, size: 32, offset: 352)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6680, file: !6681, line: 40, baseType: !726, size: 32, offset: 384)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !6680, file: !6681, line: 41, baseType: !734, size: 32, offset: 416)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6680, file: !6681, line: 42, baseType: !901, size: 64, offset: 448)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !6680, file: !6681, line: 43, baseType: !6668, size: 128, offset: 512)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !6680, file: !6681, line: 44, baseType: !6668, size: 128, offset: 640)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !6680, file: !6681, line: 45, baseType: !6668, size: 128, offset: 768)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !6680, file: !6681, line: 46, baseType: !6668, size: 128, offset: 896)
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !6680, file: !6681, line: 47, baseType: !413, size: 64, offset: 1024)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !6680, file: !6681, line: 48, baseType: !413, size: 64, offset: 1088)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !744, file: !716, line: 1883, baseType: !6702, size: 64, offset: 960)
!6702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6703, size: 64)
!6703 = !DISubroutineType(types: !6704)
!6704 = !{!1092, !750, !654, !671}
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !744, file: !716, line: 1884, baseType: !6706, size: 64, offset: 1024)
!6706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6707, size: 64)
!6707 = !DISubroutineType(types: !6708)
!6708 = !{!72, !719, !6709, !413, !413}
!6709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6710, size: 64)
!6710 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !716, line: 50, flags: DIFlagFwdDecl)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !744, file: !716, line: 1886, baseType: !6712, size: 64, offset: 1088)
!6712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6713, size: 64)
!6713 = !DISubroutineType(types: !6714)
!6714 = !{!72, !719, !6715, !72}
!6715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6668, size: 64)
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !744, file: !716, line: 1887, baseType: !6717, size: 64, offset: 1152)
!6717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6718, size: 64)
!6718 = !DISubroutineType(types: !6719)
!6719 = !{!72, !719, !750, !1087, !7, !723}
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !744, file: !716, line: 1890, baseType: !6643, size: 64, offset: 1216)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !744, file: !716, line: 1891, baseType: !6722, size: 64, offset: 1280)
!6722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6723, size: 64)
!6723 = !DISubroutineType(types: !6724)
!6724 = !{!72, !719, !6620, !72}
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !720, file: !716, line: 623, baseType: !891, size: 64, offset: 192)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !720, file: !716, line: 624, baseType: !714, size: 64, offset: 256)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !720, file: !716, line: 631, baseType: !394, size: 64, offset: 320)
!6728 = !DIDerivedType(tag: DW_TAG_member, scope: !720, file: !716, line: 639, baseType: !6729, size: 32, offset: 384)
!6729 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !720, file: !716, line: 639, size: 32, elements: !6730)
!6730 = !{!6731, !6732}
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !6729, file: !716, line: 640, baseType: !5262, size: 32)
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !6729, file: !716, line: 641, baseType: !7, size: 32)
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !720, file: !716, line: 643, baseType: !896, size: 32, offset: 416)
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !720, file: !716, line: 644, baseType: !901, size: 64, offset: 448)
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !720, file: !716, line: 645, baseType: !6668, size: 128, offset: 512)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !720, file: !716, line: 646, baseType: !6668, size: 128, offset: 640)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !720, file: !716, line: 647, baseType: !6668, size: 128, offset: 768)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !720, file: !716, line: 648, baseType: !806, offset: 896)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !720, file: !716, line: 649, baseType: !554, size: 16, offset: 896)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !720, file: !716, line: 650, baseType: !1474, size: 8, offset: 912)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !720, file: !716, line: 651, baseType: !1474, size: 8, offset: 920)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !720, file: !716, line: 652, baseType: !6422, size: 64, offset: 960)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !720, file: !716, line: 659, baseType: !394, size: 64, offset: 1024)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !720, file: !716, line: 660, baseType: !1239, size: 256, offset: 1088)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !720, file: !716, line: 662, baseType: !394, size: 64, offset: 1344)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !720, file: !716, line: 663, baseType: !394, size: 64, offset: 1408)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !720, file: !716, line: 665, baseType: !358, size: 128, offset: 1472)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !720, file: !716, line: 666, baseType: !366, size: 128, offset: 1600)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !720, file: !716, line: 675, baseType: !366, size: 128, offset: 1728)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !720, file: !716, line: 676, baseType: !366, size: 128, offset: 1856)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !720, file: !716, line: 677, baseType: !366, size: 128, offset: 1984)
!6752 = !DIDerivedType(tag: DW_TAG_member, scope: !720, file: !716, line: 678, baseType: !6753, size: 128, offset: 2112)
!6753 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !720, file: !716, line: 678, size: 128, elements: !6754)
!6754 = !{!6755, !6756}
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !6753, file: !716, line: 679, baseType: !934, size: 64)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !6753, file: !716, line: 680, baseType: !381, size: 128, align: 64)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !720, file: !716, line: 682, baseType: !455, size: 64, offset: 2240)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !720, file: !716, line: 683, baseType: !455, size: 64, offset: 2304)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !720, file: !716, line: 684, baseType: !465, size: 32, offset: 2368)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !720, file: !716, line: 685, baseType: !465, size: 32, offset: 2400)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !720, file: !716, line: 686, baseType: !465, size: 32, offset: 2432)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !720, file: !716, line: 688, baseType: !465, size: 32, offset: 2464)
!6763 = !DIDerivedType(tag: DW_TAG_member, scope: !720, file: !716, line: 690, baseType: !6764, size: 64, offset: 2496)
!6764 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !720, file: !716, line: 690, size: 64, elements: !6765)
!6765 = !{!6766, !6767}
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !6764, file: !716, line: 691, baseType: !1078, size: 64)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !6764, file: !716, line: 692, baseType: !959, size: 64)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !720, file: !716, line: 694, baseType: !6769, size: 64, offset: 2560)
!6769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6770, size: 64)
!6770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !716, line: 1100, size: 384, elements: !6771)
!6771 = !{!6772, !6773, !6774, !6775}
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !6770, file: !716, line: 1101, baseType: !806)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !6770, file: !716, line: 1102, baseType: !366, size: 128)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !6770, file: !716, line: 1103, baseType: !366, size: 128, offset: 128)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !6770, file: !716, line: 1104, baseType: !366, size: 128, offset: 256)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !720, file: !716, line: 695, baseType: !715, size: 1216, align: 64, offset: 2624)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !720, file: !716, line: 696, baseType: !366, size: 128, offset: 3840)
!6778 = !DIDerivedType(tag: DW_TAG_member, scope: !720, file: !716, line: 697, baseType: !6779, size: 64, offset: 3968)
!6779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !720, file: !716, line: 697, size: 64, elements: !6780)
!6780 = !{!6781, !6782, !6783, !6786, !6787}
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !6779, file: !716, line: 698, baseType: !5726, size: 64)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !6779, file: !716, line: 699, baseType: !4870, size: 64)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !6779, file: !716, line: 700, baseType: !6784, size: 64)
!6784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6785, size: 64)
!6785 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !716, line: 700, flags: DIFlagFwdDecl)
!6786 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !6779, file: !716, line: 701, baseType: !654, size: 64)
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !6779, file: !716, line: 702, baseType: !7, size: 32)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !720, file: !716, line: 705, baseType: !545, size: 32, offset: 4032)
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !720, file: !716, line: 708, baseType: !545, size: 32, offset: 4064)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !720, file: !716, line: 709, baseType: !6526, size: 64, offset: 4096)
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !720, file: !716, line: 720, baseType: !647, size: 64, offset: 4160)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !715, file: !716, line: 453, baseType: !2062, size: 128, offset: 64)
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !715, file: !716, line: 454, baseType: !2067, size: 32, offset: 192)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !715, file: !716, line: 455, baseType: !465, size: 32, offset: 224)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !715, file: !716, line: 460, baseType: !1464, size: 128, offset: 256)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !715, file: !716, line: 461, baseType: !1239, size: 256, offset: 384)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !715, file: !716, line: 462, baseType: !394, size: 64, offset: 640)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !715, file: !716, line: 463, baseType: !394, size: 64, offset: 704)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !715, file: !716, line: 464, baseType: !394, size: 64, offset: 768)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !715, file: !716, line: 465, baseType: !6801, size: 64, offset: 832)
!6801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6802, size: 64)
!6802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6803)
!6803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !716, line: 367, size: 1408, elements: !6804)
!6804 = !{!6805, !6809, !6813, !6817, !6821, !6825, !6837, !6841, !6845, !6849, !6853, !6857, !6861, !6862, !6866, !6872, !6873, !6874, !6878, !6883, !6887, !6944}
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !6803, file: !716, line: 368, baseType: !6806, size: 64)
!6806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6807, size: 64)
!6807 = !DISubroutineType(types: !6808)
!6808 = !{!72, !701, !971}
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !6803, file: !716, line: 369, baseType: !6810, size: 64, offset: 64)
!6810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6811, size: 64)
!6811 = !DISubroutineType(types: !6812)
!6812 = !{!72, !1087, !701}
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !6803, file: !716, line: 372, baseType: !6814, size: 64, offset: 128)
!6814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6815, size: 64)
!6815 = !DISubroutineType(types: !6816)
!6816 = !{!72, !714, !971}
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !6803, file: !716, line: 375, baseType: !6818, size: 64, offset: 192)
!6818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6819, size: 64)
!6819 = !DISubroutineType(types: !6820)
!6820 = !{!72, !701}
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !6803, file: !716, line: 381, baseType: !6822, size: 64, offset: 256)
!6822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6823, size: 64)
!6823 = !DISubroutineType(types: !6824)
!6824 = !{!72, !1087, !714, !369, !7}
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !6803, file: !716, line: 383, baseType: !6826, size: 64, offset: 320)
!6826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6827, size: 64)
!6827 = !DISubroutineType(types: !6828)
!6828 = !{null, !6829}
!6829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6830, size: 64)
!6830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1124, line: 795, size: 256, elements: !6831)
!6831 = !{!6832, !6833, !6834, !6835, !6836}
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6830, file: !1124, line: 796, baseType: !1087, size: 64)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !6830, file: !1124, line: 797, baseType: !714, size: 64, offset: 64)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !6830, file: !1124, line: 799, baseType: !394, size: 64, offset: 128)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !6830, file: !1124, line: 800, baseType: !7, size: 32, offset: 192)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !6830, file: !1124, line: 801, baseType: !7, size: 32, offset: 224)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !6803, file: !716, line: 385, baseType: !6838, size: 64, offset: 384)
!6838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6839, size: 64)
!6839 = !DISubroutineType(types: !6840)
!6840 = !{!72, !1087, !714, !901, !7, !7, !5806, !3623}
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !6803, file: !716, line: 388, baseType: !6842, size: 64, offset: 448)
!6842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6843, size: 64)
!6843 = !DISubroutineType(types: !6844)
!6844 = !{!72, !1087, !714, !901, !7, !7, !701, !647}
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !6803, file: !716, line: 393, baseType: !6846, size: 64, offset: 512)
!6846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6847, size: 64)
!6847 = !DISubroutineType(types: !6848)
!6848 = !{!3918, !714, !3918}
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !6803, file: !716, line: 394, baseType: !6850, size: 64, offset: 576)
!6850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6851, size: 64)
!6851 = !DISubroutineType(types: !6852)
!6852 = !{null, !701, !7, !7}
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !6803, file: !716, line: 395, baseType: !6854, size: 64, offset: 640)
!6854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6855, size: 64)
!6855 = !DISubroutineType(types: !6856)
!6856 = !{!72, !701, !2067}
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !6803, file: !716, line: 396, baseType: !6858, size: 64, offset: 704)
!6858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6859, size: 64)
!6859 = !DISubroutineType(types: !6860)
!6860 = !{null, !701}
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !6803, file: !716, line: 397, baseType: !1100, size: 64, offset: 768)
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !6803, file: !716, line: 402, baseType: !6863, size: 64, offset: 832)
!6863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6864, size: 64)
!6864 = !DISubroutineType(types: !6865)
!6865 = !{!72, !714, !701, !701, !11}
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !6803, file: !716, line: 404, baseType: !6867, size: 64, offset: 896)
!6867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6868, size: 64)
!6868 = !DISubroutineType(types: !6869)
!6869 = !{!617, !701, !6870}
!6870 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !6871, line: 305, baseType: !7)
!6871 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !6803, file: !716, line: 405, baseType: !6858, size: 64, offset: 960)
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !6803, file: !716, line: 406, baseType: !6818, size: 64, offset: 1024)
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !6803, file: !716, line: 407, baseType: !6875, size: 64, offset: 1088)
!6875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6876, size: 64)
!6876 = !DISubroutineType(types: !6877)
!6877 = !{!72, !701, !394, !394}
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !6803, file: !716, line: 409, baseType: !6879, size: 64, offset: 1152)
!6879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6880, size: 64)
!6880 = !DISubroutineType(types: !6881)
!6881 = !{null, !701, !6882, !6882}
!6882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !6803, file: !716, line: 410, baseType: !6884, size: 64, offset: 1216)
!6884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6885, size: 64)
!6885 = !DISubroutineType(types: !6886)
!6886 = !{!72, !714, !701}
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !6803, file: !716, line: 413, baseType: !6888, size: 64, offset: 1280)
!6888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6889, size: 64)
!6889 = !DISubroutineType(types: !6890)
!6890 = !{!72, !6891, !1087, !6943}
!6891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6892, size: 64)
!6892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !5591, line: 240, size: 1600, elements: !6893)
!6893 = !{!6894, !6895, !6896, !6903, !6905, !6906, !6908, !6915, !6920, !6921, !6922, !6923, !6924, !6925, !6926, !6927, !6933, !6934, !6935, !6936, !6937, !6938, !6939, !6940, !6941}
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6892, file: !5591, line: 241, baseType: !394, size: 64)
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6892, file: !5591, line: 242, baseType: !1323, size: 16, offset: 64)
!6896 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6892, file: !5591, line: 243, baseType: !6897, size: 320, offset: 128)
!6897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plist_node", file: !6898, line: 83, size: 320, elements: !6899)
!6898 = !DIFile(filename: "./include/linux/plist.h", directory: "/home/lizy2001/genbc/linux")
!6899 = !{!6900, !6901, !6902}
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6897, file: !6898, line: 84, baseType: !72, size: 32)
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "prio_list", scope: !6897, file: !6898, line: 85, baseType: !366, size: 128, offset: 64)
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "node_list", scope: !6897, file: !6898, line: 86, baseType: !366, size: 128, offset: 192)
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6892, file: !5591, line: 244, baseType: !6904, size: 8, offset: 448)
!6904 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !6892, file: !5591, line: 245, baseType: !7, size: 32, offset: 480)
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "swap_map", scope: !6892, file: !5591, line: 246, baseType: !6907, size: 64, offset: 512)
!6907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_info", scope: !6892, file: !5591, line: 247, baseType: !6909, size: 64, offset: 576)
!6909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6910, size: 64)
!6910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_info", file: !5591, line: 208, size: 32, elements: !6911)
!6911 = !{!6912, !6913, !6914}
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6910, file: !5591, line: 209, baseType: !806)
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6910, file: !5591, line: 215, baseType: !7, size: 24, flags: DIFlagBitField, extraData: i64 0)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6910, file: !5591, line: 216, baseType: !7, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "free_clusters", scope: !6892, file: !5591, line: 248, baseType: !6916, size: 64, offset: 640)
!6916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_list", file: !5591, line: 232, size: 64, elements: !6917)
!6917 = !{!6918, !6919}
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6916, file: !5591, line: 233, baseType: !6910, size: 32)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6916, file: !5591, line: 234, baseType: !6910, size: 32, offset: 32)
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_bit", scope: !6892, file: !5591, line: 249, baseType: !7, size: 32, offset: 704)
!6921 = !DIDerivedType(tag: DW_TAG_member, name: "highest_bit", scope: !6892, file: !5591, line: 250, baseType: !7, size: 32, offset: 736)
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !6892, file: !5591, line: 251, baseType: !7, size: 32, offset: 768)
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_pages", scope: !6892, file: !5591, line: 252, baseType: !7, size: 32, offset: 800)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next", scope: !6892, file: !5591, line: 253, baseType: !7, size: 32, offset: 832)
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_nr", scope: !6892, file: !5591, line: 254, baseType: !7, size: 32, offset: 864)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next_cpu", scope: !6892, file: !5591, line: 255, baseType: !4724, size: 64, offset: 896)
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_cluster", scope: !6892, file: !5591, line: 256, baseType: !6928, size: 64, offset: 960)
!6928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6929, size: 64)
!6929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_cluster", file: !5591, line: 227, size: 64, elements: !6930)
!6930 = !{!6931, !6932}
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !6929, file: !5591, line: 228, baseType: !6910, size: 32)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6929, file: !5591, line: 229, baseType: !7, size: 32, offset: 32)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "swap_extent_root", scope: !6892, file: !5591, line: 257, baseType: !1210, size: 64, offset: 1024)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "bdev", scope: !6892, file: !5591, line: 258, baseType: !4870, size: 64, offset: 1088)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "swap_file", scope: !6892, file: !5591, line: 259, baseType: !1087, size: 64, offset: 1152)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "old_block_size", scope: !6892, file: !5591, line: 260, baseType: !7, size: 32, offset: 1216)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6892, file: !5591, line: 265, baseType: !806, offset: 1248)
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "cont_lock", scope: !6892, file: !5591, line: 278, baseType: !806, offset: 1248)
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "discard_work", scope: !6892, file: !5591, line: 282, baseType: !1884, size: 256, offset: 1280)
!6940 = !DIDerivedType(tag: DW_TAG_member, name: "discard_clusters", scope: !6892, file: !5591, line: 283, baseType: !6916, size: 64, offset: 1536)
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "avail_lists", scope: !6892, file: !5591, line: 284, baseType: !6942, offset: 1600)
!6942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6897, elements: !391)
!6943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3918, size: 64)
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !6803, file: !716, line: 415, baseType: !6945, size: 64, offset: 1344)
!6945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6946, size: 64)
!6946 = !DISubroutineType(types: !6947)
!6947 = !{null, !1087}
!6948 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !715, file: !716, line: 466, baseType: !394, size: 64, offset: 896)
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !715, file: !716, line: 467, baseType: !6227, size: 32, offset: 960)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !715, file: !716, line: 468, baseType: !806, offset: 992)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !715, file: !716, line: 469, baseType: !366, size: 128, offset: 1024)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !715, file: !716, line: 470, baseType: !647, size: 64, offset: 1152)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !710, file: !703, line: 87, baseType: !394, size: 64, offset: 192)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !710, file: !703, line: 94, baseType: !394, size: 64, offset: 256)
!6955 = !DIDerivedType(tag: DW_TAG_member, scope: !707, file: !703, line: 96, baseType: !6956, size: 64)
!6956 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !707, file: !703, line: 96, size: 64, elements: !6957)
!6957 = !{!6958}
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !6956, file: !703, line: 101, baseType: !6959, size: 64)
!6959 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !359, line: 143, baseType: !413)
!6960 = !DIDerivedType(tag: DW_TAG_member, scope: !707, file: !703, line: 103, baseType: !6961, size: 320)
!6961 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !707, file: !703, line: 103, size: 320, elements: !6962)
!6962 = !{!6963, !6973, !6974, !6975}
!6963 = !DIDerivedType(tag: DW_TAG_member, scope: !6961, file: !703, line: 104, baseType: !6964, size: 128)
!6964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6961, file: !703, line: 104, size: 128, elements: !6965)
!6965 = !{!6966, !6967}
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !6964, file: !703, line: 105, baseType: !366, size: 128)
!6967 = !DIDerivedType(tag: DW_TAG_member, scope: !6964, file: !703, line: 106, baseType: !6968, size: 128)
!6968 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6964, file: !703, line: 106, size: 128, elements: !6969)
!6969 = !{!6970, !6971, !6972}
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6968, file: !703, line: 107, baseType: !701, size: 64)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !6968, file: !703, line: 109, baseType: !72, size: 32, offset: 64)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !6968, file: !703, line: 110, baseType: !72, size: 32, offset: 96)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !6961, file: !703, line: 117, baseType: !2348, size: 64, offset: 128)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !6961, file: !703, line: 119, baseType: !647, size: 64, offset: 192)
!6975 = !DIDerivedType(tag: DW_TAG_member, scope: !6961, file: !703, line: 120, baseType: !6976, size: 64, offset: 256)
!6976 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6961, file: !703, line: 120, size: 64, elements: !6977)
!6977 = !{!6978, !6979, !6980}
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !6976, file: !703, line: 121, baseType: !647, size: 64)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !6976, file: !703, line: 122, baseType: !394, size: 64)
!6980 = !DIDerivedType(tag: DW_TAG_member, scope: !6976, file: !703, line: 123, baseType: !6981, size: 32)
!6981 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6976, file: !703, line: 123, size: 32, elements: !6982)
!6982 = !{!6983, !6984, !6985}
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !6981, file: !703, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !6981, file: !703, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !6981, file: !703, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!6986 = !DIDerivedType(tag: DW_TAG_member, scope: !707, file: !703, line: 130, baseType: !6987, size: 192)
!6987 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !707, file: !703, line: 130, size: 192, elements: !6988)
!6988 = !{!6989, !6990, !6991, !6992, !6993}
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !6987, file: !703, line: 131, baseType: !394, size: 64)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !6987, file: !703, line: 134, baseType: !571, size: 8, offset: 64)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !6987, file: !703, line: 135, baseType: !571, size: 8, offset: 72)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !6987, file: !703, line: 136, baseType: !465, size: 32, offset: 96)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !6987, file: !703, line: 137, baseType: !7, size: 32, offset: 128)
!6994 = !DIDerivedType(tag: DW_TAG_member, scope: !707, file: !703, line: 139, baseType: !6995, size: 256)
!6995 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !707, file: !703, line: 139, size: 256, elements: !6996)
!6996 = !{!6997, !6998, !6999}
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !6995, file: !703, line: 140, baseType: !394, size: 64)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !6995, file: !703, line: 141, baseType: !465, size: 32, offset: 64)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !6995, file: !703, line: 143, baseType: !366, size: 128, offset: 128)
!7000 = !DIDerivedType(tag: DW_TAG_member, scope: !707, file: !703, line: 145, baseType: !7001, size: 256)
!7001 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !707, file: !703, line: 145, size: 256, elements: !7002)
!7002 = !{!7003, !7004, !7005, !7006, !7011}
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !7001, file: !703, line: 146, baseType: !394, size: 64)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !7001, file: !703, line: 147, baseType: !4235, size: 64, offset: 64)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !7001, file: !703, line: 148, baseType: !394, size: 64, offset: 128)
!7006 = !DIDerivedType(tag: DW_TAG_member, scope: !7001, file: !703, line: 149, baseType: !7007, size: 64, offset: 192)
!7007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7001, file: !703, line: 149, size: 64, elements: !7008)
!7008 = !{!7009, !7010}
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !7007, file: !703, line: 150, baseType: !1202, size: 64)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !7007, file: !703, line: 151, baseType: !465, size: 32)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !7001, file: !703, line: 156, baseType: !806, offset: 256)
!7012 = !DIDerivedType(tag: DW_TAG_member, scope: !707, file: !703, line: 159, baseType: !7013, size: 128)
!7013 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !707, file: !703, line: 159, size: 128, elements: !7014)
!7014 = !{!7015, !7066}
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !7013, file: !703, line: 161, baseType: !7016, size: 64)
!7016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7017, size: 64)
!7017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !7018, line: 110, size: 1152, elements: !7019)
!7018 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!7019 = !{!7020, !7030, !7031, !7032, !7033, !7040, !7041, !7053, !7054, !7055}
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !7017, file: !7018, line: 111, baseType: !7021, size: 384)
!7021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !7018, line: 19, size: 384, elements: !7022)
!7022 = !{!7023, !7025, !7026, !7027, !7028, !7029}
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !7021, file: !7018, line: 20, baseType: !7024, size: 64)
!7024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !394)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !7021, file: !7018, line: 21, baseType: !7024, size: 64, offset: 64)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !7021, file: !7018, line: 22, baseType: !7024, size: 64, offset: 128)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !7021, file: !7018, line: 23, baseType: !394, size: 64, offset: 192)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !7021, file: !7018, line: 24, baseType: !394, size: 64, offset: 256)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !7021, file: !7018, line: 25, baseType: !394, size: 64, offset: 320)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !7017, file: !7018, line: 112, baseType: !3939, size: 64, offset: 384)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !7017, file: !7018, line: 113, baseType: !3925, size: 128, offset: 448)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !7017, file: !7018, line: 114, baseType: !1624, size: 192, offset: 576)
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7017, file: !7018, line: 115, baseType: !7034, size: 32, offset: 768)
!7034 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !7018, line: 59, baseType: !7, size: 32, elements: !7035)
!7035 = !{!7036, !7037, !7038, !7039}
!7036 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!7037 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!7038 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!7039 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7017, file: !7018, line: 116, baseType: !7, size: 32, offset: 800)
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7017, file: !7018, line: 117, baseType: !7042, size: 64, offset: 832)
!7042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7043, size: 64)
!7043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7044)
!7044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !7018, line: 67, size: 256, elements: !7045)
!7045 = !{!7046, !7047, !7051, !7052}
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !7044, file: !7018, line: 73, baseType: !6858, size: 64)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !7044, file: !7018, line: 78, baseType: !7048, size: 64, offset: 64)
!7048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7049, size: 64)
!7049 = !DISubroutineType(types: !7050)
!7050 = !{null, !7016}
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !7044, file: !7018, line: 83, baseType: !7048, size: 64, offset: 128)
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !7044, file: !7018, line: 89, baseType: !4196, size: 64, offset: 192)
!7053 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7017, file: !7018, line: 118, baseType: !647, size: 64, offset: 896)
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !7017, file: !7018, line: 119, baseType: !72, size: 32, offset: 960)
!7055 = !DIDerivedType(tag: DW_TAG_member, scope: !7017, file: !7018, line: 120, baseType: !7056, size: 128, offset: 1024)
!7056 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7017, file: !7018, line: 120, size: 128, elements: !7057)
!7057 = !{!7058, !7064}
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !7056, file: !7018, line: 121, baseType: !7059, size: 128)
!7059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !7060, line: 6, size: 128, elements: !7061)
!7060 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!7061 = !{!7062, !7063}
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7059, file: !7060, line: 7, baseType: !413, size: 64)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !7059, file: !7060, line: 8, baseType: !413, size: 64, offset: 64)
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !7056, file: !7018, line: 122, baseType: !7065)
!7065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7059, elements: !1999)
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !7013, file: !703, line: 162, baseType: !647, size: 64, offset: 64)
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !707, file: !703, line: 176, baseType: !381, size: 128, align: 64)
!7068 = !DIDerivedType(tag: DW_TAG_member, scope: !702, file: !703, line: 179, baseType: !7069, size: 32, offset: 384)
!7069 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !702, file: !703, line: 179, size: 32, elements: !7070)
!7070 = !{!7071, !7072, !7073, !7074}
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !7069, file: !703, line: 184, baseType: !465, size: 32)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !7069, file: !703, line: 192, baseType: !7, size: 32)
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !7069, file: !703, line: 194, baseType: !7, size: 32)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !7069, file: !703, line: 195, baseType: !72, size: 32)
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !702, file: !703, line: 199, baseType: !465, size: 32, offset: 416)
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !697, file: !698, line: 33, baseType: !7, size: 32, offset: 64)
!7077 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !697, file: !698, line: 34, baseType: !7, size: 32, offset: 96)
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !677, file: !667, line: 42, baseType: !5726, size: 64)
!7079 = !DIDerivedType(tag: DW_TAG_member, scope: !666, file: !667, line: 44, baseType: !7080, size: 64, offset: 256)
!7080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !666, file: !667, line: 44, size: 64, elements: !7081)
!7081 = !{!7082, !7083}
!7082 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !7080, file: !667, line: 45, baseType: !394, size: 64)
!7083 = !DIDerivedType(tag: DW_TAG_member, scope: !7080, file: !667, line: 46, baseType: !7084, size: 64)
!7084 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7080, file: !667, line: 46, size: 64, elements: !7085)
!7085 = !{!7086, !7087}
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7084, file: !667, line: 47, baseType: !7, size: 32)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !7084, file: !667, line: 48, baseType: !7, size: 32, offset: 32)
!7088 = !DIDerivedType(tag: DW_TAG_member, scope: !661, file: !597, line: 60, baseType: !7089, size: 64, offset: 448)
!7089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !661, file: !597, line: 60, size: 64, elements: !7090)
!7090 = !{!7091, !7092}
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !7089, file: !597, line: 61, baseType: !647, size: 64)
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_user", scope: !7089, file: !597, line: 62, baseType: !647, size: 64)
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_is_user", scope: !661, file: !597, line: 64, baseType: !617, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !661, file: !597, line: 65, baseType: !672, size: 64, offset: 576)
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !661, file: !597, line: 66, baseType: !7, size: 32, offset: 640)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iocb", scope: !661, file: !597, line: 67, baseType: !1103, size: 64, offset: 704)
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !584, file: !529, line: 1159, baseType: !7098, size: 64, offset: 832)
!7098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7099, size: 64)
!7099 = !DISubroutineType(types: !7100)
!7100 = !{!72, !527, !660, !671, !72, !72, !616}
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !584, file: !529, line: 1162, baseType: !7102, size: 64, offset: 896)
!7102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7103, size: 64)
!7103 = !DISubroutineType(types: !7104)
!7104 = !{!72, !527, !701, !72, !671, !72}
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !584, file: !529, line: 1164, baseType: !592, size: 64, offset: 960)
!7106 = !DIDerivedType(tag: DW_TAG_member, name: "bind_add", scope: !584, file: !529, line: 1166, baseType: !592, size: 64, offset: 1024)
!7107 = !DIDerivedType(tag: DW_TAG_member, name: "backlog_rcv", scope: !584, file: !529, line: 1169, baseType: !7108, size: 64, offset: 1088)
!7108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7109, size: 64)
!7109 = !DISubroutineType(types: !7110)
!7110 = !{!72, !527, !497}
!7111 = !DIDerivedType(tag: DW_TAG_member, name: "release_cb", scope: !584, file: !529, line: 1172, baseType: !628, size: 64, offset: 1152)
!7112 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !584, file: !529, line: 1175, baseType: !624, size: 64, offset: 1216)
!7113 = !DIDerivedType(tag: DW_TAG_member, name: "unhash", scope: !584, file: !529, line: 1176, baseType: !628, size: 64, offset: 1280)
!7114 = !DIDerivedType(tag: DW_TAG_member, name: "rehash", scope: !584, file: !529, line: 1177, baseType: !628, size: 64, offset: 1344)
!7115 = !DIDerivedType(tag: DW_TAG_member, name: "get_port", scope: !584, file: !529, line: 1178, baseType: !7116, size: 64, offset: 1408)
!7116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7117, size: 64)
!7117 = !DISubroutineType(types: !7118)
!7118 = !{!72, !527, !554}
!7119 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_idx", scope: !584, file: !529, line: 1182, baseType: !7, size: 32, offset: 1472)
!7120 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_free", scope: !584, file: !529, line: 1185, baseType: !7121, size: 64, offset: 1536)
!7121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7122, size: 64)
!7122 = !DISubroutineType(types: !7123)
!7123 = !{!617, !7124, !72}
!7124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7125, size: 64)
!7125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !528)
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_read", scope: !584, file: !529, line: 1186, baseType: !7127, size: 64, offset: 1600)
!7127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7128, size: 64)
!7128 = !DISubroutineType(types: !7129)
!7129 = !{!617, !7124}
!7130 = !DIDerivedType(tag: DW_TAG_member, name: "enter_memory_pressure", scope: !584, file: !529, line: 1188, baseType: !628, size: 64, offset: 1664)
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "leave_memory_pressure", scope: !584, file: !529, line: 1189, baseType: !628, size: 64, offset: 1728)
!7132 = !DIDerivedType(tag: DW_TAG_member, name: "memory_allocated", scope: !584, file: !529, line: 1190, baseType: !6555, size: 64, offset: 1792)
!7133 = !DIDerivedType(tag: DW_TAG_member, name: "sockets_allocated", scope: !584, file: !529, line: 1191, baseType: !7134, size: 64, offset: 1856)
!7134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 64)
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "memory_pressure", scope: !584, file: !529, line: 1198, baseType: !2519, size: 64, offset: 1920)
!7136 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_mem", scope: !584, file: !529, line: 1199, baseType: !7137, size: 64, offset: 1984)
!7137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 64)
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem", scope: !584, file: !529, line: 1201, baseType: !616, size: 64, offset: 2048)
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem", scope: !584, file: !529, line: 1202, baseType: !616, size: 64, offset: 2112)
!7140 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem_offset", scope: !584, file: !529, line: 1203, baseType: !784, size: 32, offset: 2176)
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem_offset", scope: !584, file: !529, line: 1204, baseType: !784, size: 32, offset: 2208)
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "max_header", scope: !584, file: !529, line: 1206, baseType: !72, size: 32, offset: 2240)
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "no_autobind", scope: !584, file: !529, line: 1207, baseType: !617, size: 8, offset: 2272)
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !584, file: !529, line: 1209, baseType: !2348, size: 64, offset: 2304)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !584, file: !529, line: 1210, baseType: !7, size: 32, offset: 2368)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "slab_flags", scope: !584, file: !529, line: 1211, baseType: !7147, size: 32, offset: 2400)
!7147 = !DIDerivedType(tag: DW_TAG_typedef, name: "slab_flags_t", file: !359, line: 149, baseType: !7)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "useroffset", scope: !584, file: !529, line: 1212, baseType: !7, size: 32, offset: 2432)
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "usersize", scope: !584, file: !529, line: 1213, baseType: !7, size: 32, offset: 2464)
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "orphan_count", scope: !584, file: !529, line: 1215, baseType: !7134, size: 64, offset: 2496)
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_prot", scope: !584, file: !529, line: 1217, baseType: !7152, size: 64, offset: 2560)
!7152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7153, size: 64)
!7153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock_ops", file: !7154, line: 27, size: 512, elements: !7155)
!7154 = !DIFile(filename: "./include/net/request_sock.h", directory: "/home/lizy2001/genbc/linux")
!7155 = !{!7156, !7157, !7158, !7159, !7160, !7189, !7193, !7197, !7201}
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7153, file: !7154, line: 28, baseType: !72, size: 32)
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !7153, file: !7154, line: 29, baseType: !7, size: 32, offset: 32)
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !7153, file: !7154, line: 30, baseType: !2348, size: 64, offset: 64)
!7159 = !DIDerivedType(tag: DW_TAG_member, name: "slab_name", scope: !7153, file: !7154, line: 31, baseType: !654, size: 64, offset: 128)
!7160 = !DIDerivedType(tag: DW_TAG_member, name: "rtx_syn_ack", scope: !7153, file: !7154, line: 32, baseType: !7161, size: 64, offset: 192)
!7161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7162, size: 64)
!7162 = !DISubroutineType(types: !7163)
!7163 = !{!72, !7124, !7164}
!7164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7165, size: 64)
!7165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock", file: !7154, line: 53, size: 1792, elements: !7166)
!7166 = !{!7167, !7168, !7169, !7170, !7171, !7172, !7173, !7174, !7175, !7178, !7179, !7187, !7188}
!7167 = !DIDerivedType(tag: DW_TAG_member, name: "__req_common", scope: !7165, file: !7154, line: 54, baseType: !532, size: 1088)
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "dl_next", scope: !7165, file: !7154, line: 61, baseType: !7164, size: 64, offset: 1088)
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "mss", scope: !7165, file: !7154, line: 62, baseType: !1115, size: 16, offset: 1152)
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "num_retrans", scope: !7165, file: !7154, line: 63, baseType: !1474, size: 8, offset: 1168)
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "syncookie", scope: !7165, file: !7154, line: 64, baseType: !1474, size: 1, offset: 1176, flags: DIFlagBitField, extraData: i64 1176)
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "num_timeout", scope: !7165, file: !7154, line: 65, baseType: !1474, size: 7, offset: 1177, flags: DIFlagBitField, extraData: i64 1176)
!7173 = !DIDerivedType(tag: DW_TAG_member, name: "ts_recent", scope: !7165, file: !7154, line: 66, baseType: !784, size: 32, offset: 1184)
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_timer", scope: !7165, file: !7154, line: 67, baseType: !2317, size: 320, offset: 1216)
!7175 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_ops", scope: !7165, file: !7154, line: 68, baseType: !7176, size: 64, offset: 1536)
!7176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7177, size: 64)
!7177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7153)
!7178 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !7165, file: !7154, line: 69, baseType: !527, size: 64, offset: 1600)
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "saved_syn", scope: !7165, file: !7154, line: 70, baseType: !7180, size: 64, offset: 1664)
!7180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7181, size: 64)
!7181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "saved_syn", file: !7154, line: 44, size: 96, elements: !7182)
!7182 = !{!7183, !7184, !7185, !7186}
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "mac_hdrlen", scope: !7181, file: !7154, line: 45, baseType: !784, size: 32)
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "network_hdrlen", scope: !7181, file: !7154, line: 46, baseType: !784, size: 32, offset: 32)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_hdrlen", scope: !7181, file: !7154, line: 47, baseType: !784, size: 32, offset: 64)
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7181, file: !7154, line: 48, baseType: !2855, offset: 96)
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "secid", scope: !7165, file: !7154, line: 71, baseType: !784, size: 32, offset: 1728)
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "peer_secid", scope: !7165, file: !7154, line: 72, baseType: !784, size: 32, offset: 1760)
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "send_ack", scope: !7153, file: !7154, line: 34, baseType: !7190, size: 64, offset: 256)
!7190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7191, size: 64)
!7191 = !DISubroutineType(types: !7192)
!7192 = !{null, !7124, !497, !7164}
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "send_reset", scope: !7153, file: !7154, line: 36, baseType: !7194, size: 64, offset: 320)
!7194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7195, size: 64)
!7195 = !DISubroutineType(types: !7196)
!7196 = !{null, !7124, !497}
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !7153, file: !7154, line: 38, baseType: !7198, size: 64, offset: 384)
!7198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7199, size: 64)
!7199 = !DISubroutineType(types: !7200)
!7200 = !{null, !7164}
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "syn_ack_timeout", scope: !7153, file: !7154, line: 39, baseType: !7202, size: 64, offset: 448)
!7202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7203, size: 64)
!7203 = !DISubroutineType(types: !7204)
!7204 = !{null, !7205}
!7205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7206, size: 64)
!7206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7165)
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_prot", scope: !584, file: !529, line: 1218, baseType: !7208, size: 64, offset: 2624)
!7208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7209, size: 64)
!7209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timewait_sock_ops", file: !7210, line: 14, size: 320, elements: !7211)
!7210 = !DIFile(filename: "./include/net/timewait_sock.h", directory: "/home/lizy2001/genbc/linux")
!7211 = !{!7212, !7213, !7214, !7215, !7219}
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab", scope: !7209, file: !7210, line: 15, baseType: !2348, size: 64)
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab_name", scope: !7209, file: !7210, line: 16, baseType: !654, size: 64, offset: 64)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_obj_size", scope: !7209, file: !7210, line: 17, baseType: !7, size: 32, offset: 128)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_unique", scope: !7209, file: !7210, line: 18, baseType: !7216, size: 64, offset: 192)
!7216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7217, size: 64)
!7217 = !DISubroutineType(types: !7218)
!7218 = !{!72, !527, !527, !647}
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_destructor", scope: !7209, file: !7210, line: 20, baseType: !628, size: 64, offset: 256)
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !584, file: !529, line: 1225, baseType: !7221, size: 64, offset: 2688)
!7221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !584, file: !529, line: 1220, size: 64, elements: !7222)
!7222 = !{!7223, !7224, !7227, !7230}
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !7221, file: !529, line: 1221, baseType: !2488, size: 64)
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "udp_table", scope: !7221, file: !529, line: 1222, baseType: !7225, size: 64)
!7225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7226, size: 64)
!7226 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_table", file: !529, line: 1222, flags: DIFlagFwdDecl)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hash", scope: !7221, file: !529, line: 1223, baseType: !7228, size: 64)
!7228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7229, size: 64)
!7229 = !DICompositeType(tag: DW_TAG_structure_type, name: "raw_hashinfo", file: !529, line: 1108, flags: DIFlagFwdDecl)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "smc_hash", scope: !7221, file: !529, line: 1224, baseType: !7231, size: 64)
!7231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7232, size: 64)
!7232 = !DICompositeType(tag: DW_TAG_structure_type, name: "smc_hashinfo", file: !529, line: 1109, flags: DIFlagFwdDecl)
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !584, file: !529, line: 1227, baseType: !929, size: 64, offset: 2752)
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !584, file: !529, line: 1229, baseType: !3904, size: 256, offset: 2816)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !584, file: !529, line: 1231, baseType: !366, size: 128, offset: 3072)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "diag_destroy", scope: !584, file: !529, line: 1235, baseType: !609, size: 64, offset: 3200)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net", scope: !532, file: !529, line: 198, baseType: !2847, size: 64, offset: 384)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_daddr", scope: !532, file: !529, line: 201, baseType: !2300, size: 128, offset: 448)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_rcv_saddr", scope: !532, file: !529, line: 202, baseType: !2300, size: 128, offset: 576)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "skc_cookie", scope: !532, file: !529, line: 205, baseType: !455, size: 64, offset: 704)
!7241 = !DIDerivedType(tag: DW_TAG_member, scope: !532, file: !529, line: 212, baseType: !7242, size: 64, offset: 768)
!7242 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !532, file: !529, line: 212, size: 64, elements: !7243)
!7243 = !{!7244, !7245, !7246}
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "skc_flags", scope: !7242, file: !529, line: 213, baseType: !394, size: 64)
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "skc_listener", scope: !7242, file: !529, line: 214, baseType: !527, size: 64)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_dr", scope: !7242, file: !529, line: 215, baseType: !7247, size: 64)
!7247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 64)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_begin", scope: !532, file: !529, line: 222, baseType: !7249, offset: 832)
!7249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !72, elements: !1999)
!7250 = !DIDerivedType(tag: DW_TAG_member, scope: !532, file: !529, line: 224, baseType: !7251, size: 128, offset: 832)
!7251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !532, file: !529, line: 224, size: 128, elements: !7252)
!7252 = !{!7253, !7254}
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "skc_node", scope: !7251, file: !529, line: 225, baseType: !358, size: 128)
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "skc_nulls_node", scope: !7251, file: !529, line: 226, baseType: !7255, size: 128)
!7255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_nulls_node", file: !7256, line: 25, size: 128, elements: !7257)
!7256 = !DIFile(filename: "./include/linux/list_nulls.h", directory: "/home/lizy2001/genbc/linux")
!7257 = !{!7258, !7260}
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7255, file: !7256, line: 26, baseType: !7259, size: 64)
!7259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7255, size: 64)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !7255, file: !7256, line: 26, baseType: !7261, size: 64, offset: 64)
!7261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7259, size: 64)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tx_queue_mapping", scope: !532, file: !529, line: 228, baseType: !554, size: 16, offset: 960)
!7263 = !DIDerivedType(tag: DW_TAG_member, scope: !532, file: !529, line: 232, baseType: !7264, size: 32, offset: 992)
!7264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !532, file: !529, line: 232, size: 32, elements: !7265)
!7265 = !{!7266, !7267, !7268}
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "skc_incoming_cpu", scope: !7264, file: !529, line: 233, baseType: !72, size: 32)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_wnd", scope: !7264, file: !529, line: 234, baseType: !784, size: 32)
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_rcv_nxt", scope: !7264, file: !529, line: 235, baseType: !784, size: 32)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "skc_refcnt", scope: !532, file: !529, line: 238, baseType: !1348, size: 32, offset: 1024)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_end", scope: !532, file: !529, line: 240, baseType: !7249, offset: 1056)
!7271 = !DIDerivedType(tag: DW_TAG_member, scope: !532, file: !529, line: 241, baseType: !7272, size: 32, offset: 1056)
!7272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !532, file: !529, line: 241, size: 32, elements: !7273)
!7273 = !{!7274, !7275, !7276}
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rxhash", scope: !7272, file: !529, line: 242, baseType: !784, size: 32)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "skc_window_clamp", scope: !7272, file: !529, line: 243, baseType: !784, size: 32)
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_snd_nxt", scope: !7272, file: !529, line: 244, baseType: !784, size: 32)
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lock", scope: !528, file: !529, line: 387, baseType: !7278, size: 192, offset: 1088)
!7278 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_lock_t", file: !529, line: 108, baseType: !7279)
!7279 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !529, line: 95, size: 192, elements: !7280)
!7280 = !{!7281, !7282, !7283}
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "slock", scope: !7279, file: !529, line: 96, baseType: !806)
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "owned", scope: !7279, file: !529, line: 97, baseType: !72, size: 32)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7279, file: !529, line: 98, baseType: !1177, size: 128, offset: 64)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "sk_drops", scope: !528, file: !529, line: 388, baseType: !465, size: 32, offset: 1280)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvlowat", scope: !528, file: !529, line: 389, baseType: !72, size: 32, offset: 1312)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_queue", scope: !528, file: !529, line: 390, baseType: !2905, size: 192, offset: 1344)
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_skb_cache", scope: !528, file: !529, line: 391, baseType: !497, size: 64, offset: 1536)
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "sk_receive_queue", scope: !528, file: !529, line: 392, baseType: !2905, size: 192, offset: 1600)
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog", scope: !528, file: !529, line: 406, baseType: !7290, size: 192, offset: 1792)
!7290 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !528, file: !529, line: 401, size: 192, elements: !7291)
!7291 = !{!7292, !7293, !7294, !7295}
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "rmem_alloc", scope: !7290, file: !529, line: 402, baseType: !465, size: 32)
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7290, file: !529, line: 403, baseType: !72, size: 32, offset: 32)
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7290, file: !529, line: 404, baseType: !497, size: 64, offset: 64)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7290, file: !529, line: 405, baseType: !497, size: 64, offset: 128)
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "sk_forward_alloc", scope: !528, file: !529, line: 409, baseType: !72, size: 32, offset: 1984)
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ll_usec", scope: !528, file: !529, line: 411, baseType: !7, size: 32, offset: 2016)
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "sk_napi_id", scope: !528, file: !529, line: 413, baseType: !7, size: 32, offset: 2048)
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvbuf", scope: !528, file: !529, line: 415, baseType: !72, size: 32, offset: 2080)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "sk_filter", scope: !528, file: !529, line: 417, baseType: !7301, size: 64, offset: 2112)
!7301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7302, size: 64)
!7302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_filter", file: !3054, line: 552, size: 256, elements: !7303)
!7303 = !{!7304, !7305, !7306}
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !7302, file: !3054, line: 553, baseType: !1348, size: 32)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7302, file: !3054, line: 554, baseType: !381, size: 128, align: 64, offset: 64)
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7302, file: !3054, line: 555, baseType: !3052, size: 64, offset: 192)
!7307 = !DIDerivedType(tag: DW_TAG_member, scope: !528, file: !529, line: 418, baseType: !7308, size: 64, offset: 2176)
!7308 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !528, file: !529, line: 418, size: 64, elements: !7309)
!7309 = !{!7310, !7319}
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq", scope: !7308, file: !529, line: 419, baseType: !7311, size: 64)
!7311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7312, size: 64)
!7312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket_wq", file: !7313, line: 98, size: 384, elements: !7314)
!7313 = !DIFile(filename: "./include/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!7314 = !{!7315, !7316, !7317, !7318}
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !7312, file: !7313, line: 100, baseType: !1177, size: 128)
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_list", scope: !7312, file: !7313, line: 101, baseType: !5745, size: 64, offset: 128)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7312, file: !7313, line: 102, baseType: !394, size: 64, offset: 192)
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7312, file: !7313, line: 103, baseType: !381, size: 128, align: 64, offset: 256)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq_raw", scope: !7308, file: !529, line: 421, baseType: !7311, size: 64)
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_dst", scope: !528, file: !529, line: 427, baseType: !2737, size: 64, offset: 2240)
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_cache", scope: !528, file: !529, line: 428, baseType: !2737, size: 64, offset: 2304)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "sk_omem_alloc", scope: !528, file: !529, line: 429, baseType: !465, size: 32, offset: 2368)
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndbuf", scope: !528, file: !529, line: 430, baseType: !72, size: 32, offset: 2400)
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_queued", scope: !528, file: !529, line: 433, baseType: !72, size: 32, offset: 2432)
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_alloc", scope: !528, file: !529, line: 434, baseType: !1348, size: 32, offset: 2464)
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsq_flags", scope: !528, file: !529, line: 435, baseType: !394, size: 64, offset: 2496)
!7327 = !DIDerivedType(tag: DW_TAG_member, scope: !528, file: !529, line: 436, baseType: !7328, size: 64, offset: 2560)
!7328 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !528, file: !529, line: 436, size: 64, elements: !7329)
!7329 = !{!7330, !7331}
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "sk_send_head", scope: !7328, file: !529, line: 437, baseType: !497, size: 64)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_rtx_queue", scope: !7328, file: !529, line: 438, baseType: !1210, size: 64)
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tx_skb_cache", scope: !528, file: !529, line: 440, baseType: !497, size: 64, offset: 2624)
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_queue", scope: !528, file: !529, line: 441, baseType: !2905, size: 192, offset: 2688)
!7334 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peek_off", scope: !528, file: !529, line: 442, baseType: !1567, size: 32, offset: 2880)
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_pending", scope: !528, file: !529, line: 443, baseType: !72, size: 32, offset: 2912)
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_pending_confirm", scope: !528, file: !529, line: 444, baseType: !545, size: 32, offset: 2944)
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_status", scope: !528, file: !529, line: 445, baseType: !784, size: 32, offset: 2976)
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndtimeo", scope: !528, file: !529, line: 446, baseType: !590, size: 64, offset: 3008)
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "sk_timer", scope: !528, file: !529, line: 447, baseType: !2317, size: 320, offset: 3072)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "sk_priority", scope: !528, file: !529, line: 448, baseType: !545, size: 32, offset: 3392)
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "sk_mark", scope: !528, file: !529, line: 449, baseType: !545, size: 32, offset: 3424)
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_rate", scope: !528, file: !529, line: 450, baseType: !394, size: 64, offset: 3456)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_pacing_rate", scope: !528, file: !529, line: 451, baseType: !394, size: 64, offset: 3520)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "sk_frag", scope: !528, file: !529, line: 452, baseType: !5784, size: 128, offset: 3584)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_caps", scope: !528, file: !529, line: 453, baseType: !411, size: 64, offset: 3712)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_nocaps", scope: !528, file: !529, line: 454, baseType: !411, size: 64, offset: 3776)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_forced_caps", scope: !528, file: !529, line: 455, baseType: !411, size: 64, offset: 3840)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_type", scope: !528, file: !529, line: 456, baseType: !72, size: 32, offset: 3904)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_size", scope: !528, file: !529, line: 457, baseType: !7, size: 32, offset: 3936)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "sk_allocation", scope: !528, file: !529, line: 458, baseType: !2067, size: 32, offset: 3968)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txhash", scope: !528, file: !529, line: 459, baseType: !545, size: 32, offset: 4000)
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "sk_padding", scope: !528, file: !529, line: 465, baseType: !1474, size: 1, offset: 4032, flags: DIFlagBitField, extraData: i64 4032)
!7353 = !DIDerivedType(tag: DW_TAG_member, name: "sk_kern_sock", scope: !528, file: !529, line: 466, baseType: !1474, size: 1, offset: 4033, flags: DIFlagBitField, extraData: i64 4032)
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_tx", scope: !528, file: !529, line: 467, baseType: !1474, size: 1, offset: 4034, flags: DIFlagBitField, extraData: i64 4032)
!7355 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_rx", scope: !528, file: !529, line: 468, baseType: !1474, size: 1, offset: 4035, flags: DIFlagBitField, extraData: i64 4032)
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "sk_userlocks", scope: !528, file: !529, line: 469, baseType: !1474, size: 4, offset: 4036, flags: DIFlagBitField, extraData: i64 4032)
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_shift", scope: !528, file: !529, line: 470, baseType: !1474, size: 8, offset: 4040)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "sk_type", scope: !528, file: !529, line: 471, baseType: !1115, size: 16, offset: 4048)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "sk_protocol", scope: !528, file: !529, line: 472, baseType: !1115, size: 16, offset: 4064)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_segs", scope: !528, file: !529, line: 473, baseType: !1115, size: 16, offset: 4080)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lingertime", scope: !528, file: !529, line: 474, baseType: !394, size: 64, offset: 4096)
!7362 = !DIDerivedType(tag: DW_TAG_member, name: "sk_prot_creator", scope: !528, file: !529, line: 475, baseType: !583, size: 64, offset: 4160)
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "sk_callback_lock", scope: !528, file: !529, line: 476, baseType: !2915, offset: 4224)
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err", scope: !528, file: !529, line: 477, baseType: !72, size: 32, offset: 4224)
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err_soft", scope: !528, file: !529, line: 478, baseType: !72, size: 32, offset: 4256)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ack_backlog", scope: !528, file: !529, line: 479, baseType: !784, size: 32, offset: 4288)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_ack_backlog", scope: !528, file: !529, line: 480, baseType: !784, size: 32, offset: 4320)
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "sk_uid", scope: !528, file: !529, line: 481, baseType: !726, size: 32, offset: 4352)
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_pid", scope: !528, file: !529, line: 482, baseType: !1598, size: 64, offset: 4416)
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_cred", scope: !528, file: !529, line: 483, baseType: !1669, size: 64, offset: 4480)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvtimeo", scope: !528, file: !529, line: 484, baseType: !590, size: 64, offset: 4544)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "sk_stamp", scope: !528, file: !529, line: 485, baseType: !1418, size: 64, offset: 4608)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsflags", scope: !528, file: !529, line: 489, baseType: !1115, size: 16, offset: 4672)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "sk_shutdown", scope: !528, file: !529, line: 490, baseType: !1474, size: 8, offset: 4688)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tskey", scope: !528, file: !529, line: 491, baseType: !784, size: 32, offset: 4704)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "sk_zckey", scope: !528, file: !529, line: 492, baseType: !465, size: 32, offset: 4736)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "sk_clockid", scope: !528, file: !529, line: 494, baseType: !1474, size: 8, offset: 4768)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_deadline_mode", scope: !528, file: !529, line: 495, baseType: !1474, size: 1, offset: 4776, flags: DIFlagBitField, extraData: i64 4776)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_report_errors", scope: !528, file: !529, line: 496, baseType: !1474, size: 1, offset: 4777, flags: DIFlagBitField, extraData: i64 4776)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_unused", scope: !528, file: !529, line: 497, baseType: !1474, size: 6, offset: 4778, flags: DIFlagBitField, extraData: i64 4776)
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "sk_socket", scope: !528, file: !529, line: 499, baseType: !7382, size: 64, offset: 4800)
!7382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7383, size: 64)
!7383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket", file: !7313, line: 116, size: 704, elements: !7384)
!7384 = !{!7385, !7395, !7396, !7397, !7398, !7399, !7502}
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7383, file: !7313, line: 117, baseType: !7386, size: 32)
!7386 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_state", file: !7387, line: 54, baseType: !7388)
!7387 = !DIFile(filename: "./include/uapi/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!7388 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7387, line: 48, baseType: !7, size: 32, elements: !7389)
!7389 = !{!7390, !7391, !7392, !7393, !7394}
!7390 = !DIEnumerator(name: "SS_FREE", value: 0, isUnsigned: true)
!7391 = !DIEnumerator(name: "SS_UNCONNECTED", value: 1, isUnsigned: true)
!7392 = !DIEnumerator(name: "SS_CONNECTING", value: 2, isUnsigned: true)
!7393 = !DIEnumerator(name: "SS_CONNECTED", value: 3, isUnsigned: true)
!7394 = !DIEnumerator(name: "SS_DISCONNECTING", value: 4, isUnsigned: true)
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7383, file: !7313, line: 119, baseType: !1323, size: 16, offset: 32)
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7383, file: !7313, line: 121, baseType: !394, size: 64, offset: 64)
!7397 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !7383, file: !7313, line: 123, baseType: !1087, size: 64, offset: 128)
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !7383, file: !7313, line: 124, baseType: !527, size: 64, offset: 192)
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7383, file: !7313, line: 125, baseType: !7400, size: 64, offset: 256)
!7400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7401, size: 64)
!7401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7402)
!7402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto_ops", file: !7313, line: 139, size: 1728, elements: !7403)
!7403 = !{!7404, !7405, !7406, !7407, !7411, !7415, !7419, !7423, !7427, !7428, !7432, !7436, !7440, !7444, !7445, !7449, !7453, !7457, !7461, !7465, !7469, !7473, !7477, !7478, !7479, !7499, !7500, !7501}
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7402, file: !7313, line: 140, baseType: !72, size: 32)
!7405 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7402, file: !7313, line: 141, baseType: !7, size: 32, offset: 32)
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7402, file: !7313, line: 142, baseType: !929, size: 64, offset: 64)
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !7402, file: !7313, line: 143, baseType: !7408, size: 64, offset: 128)
!7408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7409, size: 64)
!7409 = !DISubroutineType(types: !7410)
!7410 = !{!72, !7382}
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !7402, file: !7313, line: 144, baseType: !7412, size: 64, offset: 192)
!7412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7413, size: 64)
!7413 = !DISubroutineType(types: !7414)
!7414 = !{!72, !7382, !595, !72}
!7415 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !7402, file: !7313, line: 147, baseType: !7416, size: 64, offset: 256)
!7416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7417, size: 64)
!7417 = !DISubroutineType(types: !7418)
!7418 = !{!72, !7382, !595, !72, !72}
!7419 = !DIDerivedType(tag: DW_TAG_member, name: "socketpair", scope: !7402, file: !7313, line: 150, baseType: !7420, size: 64, offset: 320)
!7420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7421, size: 64)
!7421 = !DISubroutineType(types: !7422)
!7422 = !{!72, !7382, !7382}
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !7402, file: !7313, line: 152, baseType: !7424, size: 64, offset: 384)
!7424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7425, size: 64)
!7425 = !DISubroutineType(types: !7426)
!7426 = !{!72, !7382, !7382, !72, !617}
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "getname", scope: !7402, file: !7313, line: 154, baseType: !7412, size: 64, offset: 448)
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !7402, file: !7313, line: 157, baseType: !7429, size: 64, offset: 512)
!7429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7430, size: 64)
!7430 = !DISubroutineType(types: !7431)
!7431 = !{!1166, !1087, !7382, !1167}
!7432 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !7402, file: !7313, line: 159, baseType: !7433, size: 64, offset: 576)
!7433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7434, size: 64)
!7434 = !DISubroutineType(types: !7435)
!7435 = !{!72, !7382, !7, !394}
!7436 = !DIDerivedType(tag: DW_TAG_member, name: "gettstamp", scope: !7402, file: !7313, line: 165, baseType: !7437, size: 64, offset: 640)
!7437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7438, size: 64)
!7438 = !DISubroutineType(types: !7439)
!7439 = !{!72, !7382, !647, !617, !617}
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "listen", scope: !7402, file: !7313, line: 167, baseType: !7441, size: 64, offset: 704)
!7441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7442, size: 64)
!7442 = !DISubroutineType(types: !7443)
!7443 = !{!72, !7382, !72}
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7402, file: !7313, line: 168, baseType: !7441, size: 64, offset: 768)
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !7402, file: !7313, line: 169, baseType: !7446, size: 64, offset: 832)
!7446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7447, size: 64)
!7447 = !DISubroutineType(types: !7448)
!7448 = !{!72, !7382, !72, !72, !639, !7}
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !7402, file: !7313, line: 172, baseType: !7450, size: 64, offset: 896)
!7450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7451, size: 64)
!7451 = !DISubroutineType(types: !7452)
!7452 = !{!72, !7382, !72, !72, !654, !616}
!7453 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !7402, file: !7313, line: 174, baseType: !7454, size: 64, offset: 960)
!7454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7455, size: 64)
!7455 = !DISubroutineType(types: !7456)
!7456 = !{null, !1019, !7382}
!7457 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !7402, file: !7313, line: 175, baseType: !7458, size: 64, offset: 1024)
!7458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7459, size: 64)
!7459 = !DISubroutineType(types: !7460)
!7460 = !{!72, !7382, !660, !671}
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !7402, file: !7313, line: 185, baseType: !7462, size: 64, offset: 1088)
!7462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7463, size: 64)
!7463 = !DISubroutineType(types: !7464)
!7464 = !{!72, !7382, !660, !671, !72}
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !7402, file: !7313, line: 187, baseType: !7466, size: 64, offset: 1152)
!7466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7467, size: 64)
!7467 = !DISubroutineType(types: !7468)
!7468 = !{!72, !1087, !7382, !1192}
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !7402, file: !7313, line: 189, baseType: !7470, size: 64, offset: 1216)
!7470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7471, size: 64)
!7471 = !DISubroutineType(types: !7472)
!7472 = !{!1092, !7382, !701, !72, !671, !72}
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !7402, file: !7313, line: 191, baseType: !7474, size: 64, offset: 1280)
!7474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7475, size: 64)
!7475 = !DISubroutineType(types: !7476)
!7476 = !{!1092, !7382, !1046, !5726, !671, !7}
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "set_peek_off", scope: !7402, file: !7313, line: 193, baseType: !609, size: 64, offset: 1344)
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "peek_len", scope: !7402, file: !7313, line: 194, baseType: !7408, size: 64, offset: 1408)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "read_sock", scope: !7402, file: !7313, line: 199, baseType: !7480, size: 64, offset: 1472)
!7480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7481, size: 64)
!7481 = !DISubroutineType(types: !7482)
!7482 = !{!72, !527, !7483, !7495}
!7483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7484, size: 64)
!7484 = !DIDerivedType(tag: DW_TAG_typedef, name: "read_descriptor_t", file: !716, line: 362, baseType: !7485)
!7485 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !716, line: 354, size: 256, elements: !7486)
!7486 = !{!7487, !7488, !7489, !7494}
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !7485, file: !716, line: 355, baseType: !671, size: 64)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7485, file: !716, line: 356, baseType: !671, size: 64, offset: 64)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !7485, file: !716, line: 360, baseType: !7490, size: 64, offset: 128)
!7490 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7485, file: !716, line: 357, size: 64, elements: !7491)
!7491 = !{!7492, !7493}
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !7490, file: !716, line: 358, baseType: !654, size: 64)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7490, file: !716, line: 359, baseType: !647, size: 64)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !7485, file: !716, line: 361, baseType: !72, size: 32, offset: 192)
!7495 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_read_actor_t", file: !7313, line: 136, baseType: !7496)
!7496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7497, size: 64)
!7497 = !DISubroutineType(types: !7498)
!7498 = !{!72, !7483, !497, !7, !671}
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage_locked", scope: !7402, file: !7313, line: 201, baseType: !7102, size: 64, offset: 1536)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg_locked", scope: !7402, file: !7313, line: 203, baseType: !657, size: 64, offset: 1600)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "set_rcvlowat", scope: !7402, file: !7313, line: 205, baseType: !609, size: 64, offset: 1664)
!7502 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7383, file: !7313, line: 127, baseType: !7312, size: 384, offset: 320)
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "sk_user_data", scope: !528, file: !529, line: 500, baseType: !647, size: 64, offset: 4864)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "sk_cgrp_data", scope: !528, file: !529, line: 504, baseType: !7505, offset: 4928)
!7505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_cgroup_data", file: !7506, line: 871, elements: !820)
!7506 = !DIFile(filename: "./include/linux/cgroup-defs.h", directory: "/home/lizy2001/genbc/linux")
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "sk_memcg", scope: !528, file: !529, line: 505, baseType: !6251, size: 64, offset: 4928)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "sk_state_change", scope: !528, file: !529, line: 506, baseType: !628, size: 64, offset: 4992)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "sk_data_ready", scope: !528, file: !529, line: 507, baseType: !628, size: 64, offset: 5056)
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_space", scope: !528, file: !529, line: 508, baseType: !628, size: 64, offset: 5120)
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_report", scope: !528, file: !529, line: 509, baseType: !628, size: 64, offset: 5184)
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog_rcv", scope: !528, file: !529, line: 510, baseType: !7108, size: 64, offset: 5248)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "sk_destruct", scope: !528, file: !529, line: 517, baseType: !628, size: 64, offset: 5312)
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "sk_reuseport_cb", scope: !528, file: !529, line: 518, baseType: !7515, size: 64, offset: 5376)
!7515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7516, size: 64)
!7516 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock_reuseport", file: !3054, line: 38, flags: DIFlagFwdDecl)
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcu", scope: !528, file: !529, line: 522, baseType: !381, size: 128, align: 64, offset: 5440)
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !524, file: !499, line: 735, baseType: !72, size: 32)
!7519 = !DIDerivedType(tag: DW_TAG_member, scope: !498, file: !499, line: 738, baseType: !7520, size: 64, offset: 256)
!7520 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !498, file: !499, line: 738, size: 64, elements: !7521)
!7521 = !{!7522, !7523}
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !7520, file: !499, line: 739, baseType: !1418, size: 64)
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !7520, file: !499, line: 740, baseType: !413, size: 64)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !498, file: !499, line: 748, baseType: !7525, size: 384, align: 64, offset: 320)
!7525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 384, elements: !7526)
!7526 = !{!7527}
!7527 = !DISubrange(count: 48)
!7528 = !DIDerivedType(tag: DW_TAG_member, scope: !498, file: !499, line: 750, baseType: !7529, size: 128, offset: 704)
!7529 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !498, file: !499, line: 750, size: 128, elements: !7530)
!7530 = !{!7531, !7536}
!7531 = !DIDerivedType(tag: DW_TAG_member, scope: !7529, file: !499, line: 751, baseType: !7532, size: 128)
!7532 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7529, file: !499, line: 751, size: 128, elements: !7533)
!7533 = !{!7534, !7535}
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !7532, file: !499, line: 752, baseType: !394, size: 64)
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !7532, file: !499, line: 753, baseType: !2792, size: 64, offset: 64)
!7536 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !7529, file: !499, line: 755, baseType: !366, size: 128)
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !498, file: !499, line: 761, baseType: !7, size: 32, offset: 832)
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !498, file: !499, line: 762, baseType: !7, size: 32, offset: 864)
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !498, file: !499, line: 763, baseType: !553, size: 16, offset: 896)
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !498, file: !499, line: 764, baseType: !553, size: 16, offset: 912)
!7541 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !498, file: !499, line: 769, baseType: !553, size: 16, offset: 928)
!7542 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !498, file: !499, line: 780, baseType: !7543, offset: 944)
!7543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1475, elements: !1999)
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !498, file: !499, line: 782, baseType: !1475, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!7545 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !498, file: !499, line: 783, baseType: !1475, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !498, file: !499, line: 784, baseType: !1475, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !498, file: !499, line: 785, baseType: !1475, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !498, file: !499, line: 786, baseType: !1475, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !498, file: !499, line: 787, baseType: !1475, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !498, file: !499, line: 795, baseType: !7551, offset: 960)
!7551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !545, elements: !1999)
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !498, file: !499, line: 807, baseType: !7543, offset: 960)
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !498, file: !499, line: 809, baseType: !1475, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!7554 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !498, file: !499, line: 810, baseType: !1475, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !498, file: !499, line: 811, baseType: !1475, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !498, file: !499, line: 812, baseType: !1475, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !498, file: !499, line: 813, baseType: !1475, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !498, file: !499, line: 815, baseType: !1475, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !498, file: !499, line: 816, baseType: !1475, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!7560 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !498, file: !499, line: 817, baseType: !1475, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !498, file: !499, line: 818, baseType: !1475, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !498, file: !499, line: 819, baseType: !1475, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!7563 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !498, file: !499, line: 821, baseType: !1475, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!7564 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !498, file: !499, line: 822, baseType: !1475, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !498, file: !499, line: 823, baseType: !1475, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !498, file: !499, line: 832, baseType: !7543, offset: 976)
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !498, file: !499, line: 834, baseType: !1475, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!7568 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !498, file: !499, line: 835, baseType: !1475, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !498, file: !499, line: 836, baseType: !1475, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !498, file: !499, line: 837, baseType: !1475, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !498, file: !499, line: 838, baseType: !1475, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !498, file: !499, line: 840, baseType: !1475, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !498, file: !499, line: 843, baseType: !1475, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !498, file: !499, line: 844, baseType: !1475, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !498, file: !499, line: 845, baseType: !1475, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !498, file: !499, line: 847, baseType: !1475, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !498, file: !499, line: 848, baseType: !1475, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!7578 = !DIDerivedType(tag: DW_TAG_member, scope: !498, file: !499, line: 866, baseType: !7579, size: 32, offset: 992)
!7579 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !498, file: !499, line: 866, size: 32, elements: !7580)
!7580 = !{!7581, !7583}
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !7579, file: !499, line: 867, baseType: !7582, size: 32)
!7582 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !544, line: 37, baseType: !545)
!7583 = !DIDerivedType(tag: DW_TAG_member, scope: !7579, file: !499, line: 868, baseType: !7584, size: 32)
!7584 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7579, file: !499, line: 868, size: 32, elements: !7585)
!7585 = !{!7586, !7587}
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !7584, file: !499, line: 869, baseType: !553, size: 16)
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !7584, file: !499, line: 870, baseType: !553, size: 16, offset: 16)
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !498, file: !499, line: 873, baseType: !545, size: 32, offset: 1024)
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !498, file: !499, line: 874, baseType: !72, size: 32, offset: 1056)
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !498, file: !499, line: 875, baseType: !545, size: 32, offset: 1088)
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !498, file: !499, line: 876, baseType: !566, size: 16, offset: 1120)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !498, file: !499, line: 877, baseType: !553, size: 16, offset: 1136)
!7593 = !DIDerivedType(tag: DW_TAG_member, scope: !498, file: !499, line: 879, baseType: !7594, size: 32, offset: 1152)
!7594 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !498, file: !499, line: 879, size: 32, elements: !7595)
!7595 = !{!7596, !7597}
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !7594, file: !499, line: 880, baseType: !7, size: 32)
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !7594, file: !499, line: 881, baseType: !7, size: 32)
!7598 = !DIDerivedType(tag: DW_TAG_member, scope: !498, file: !499, line: 888, baseType: !7599, size: 32, offset: 1184)
!7599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !498, file: !499, line: 888, size: 32, elements: !7600)
!7600 = !{!7601, !7602}
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !7599, file: !499, line: 889, baseType: !545, size: 32)
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !7599, file: !499, line: 890, baseType: !545, size: 32)
!7603 = !DIDerivedType(tag: DW_TAG_member, scope: !498, file: !499, line: 893, baseType: !7604, size: 16, offset: 1216)
!7604 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !498, file: !499, line: 893, size: 16, elements: !7605)
!7605 = !{!7606, !7607}
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !7604, file: !499, line: 894, baseType: !566, size: 16)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !7604, file: !499, line: 895, baseType: !1475, size: 8)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !498, file: !499, line: 898, baseType: !553, size: 16, offset: 1232)
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !498, file: !499, line: 899, baseType: !553, size: 16, offset: 1248)
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !498, file: !499, line: 900, baseType: !553, size: 16, offset: 1264)
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !498, file: !499, line: 902, baseType: !566, size: 16, offset: 1280)
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !498, file: !499, line: 903, baseType: !553, size: 16, offset: 1296)
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !498, file: !499, line: 904, baseType: !553, size: 16, offset: 1312)
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !498, file: !499, line: 905, baseType: !553, size: 16, offset: 1328)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !498, file: !499, line: 908, baseType: !7551, offset: 1344)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !498, file: !499, line: 912, baseType: !7617, size: 32, offset: 1344)
!7617 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !499, line: 606, baseType: !7)
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !498, file: !499, line: 913, baseType: !7617, size: 32, offset: 1376)
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !498, file: !499, line: 914, baseType: !6907, size: 64, offset: 1408)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !498, file: !499, line: 915, baseType: !6907, size: 64, offset: 1472)
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !498, file: !499, line: 916, baseType: !7, size: 32, offset: 1536)
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !498, file: !499, line: 917, baseType: !1348, size: 32, offset: 1568)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !480, file: !71, line: 1290, baseType: !7624, size: 64, offset: 320)
!7624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7625, size: 64)
!7625 = !DISubroutineType(types: !7626)
!7626 = !{!411, !497, !372, !411}
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !480, file: !71, line: 1293, baseType: !7628, size: 64, offset: 384)
!7628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7629, size: 64)
!7629 = !DISubroutineType(types: !7630)
!7630 = !{!1115, !372, !497, !372}
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !480, file: !71, line: 1296, baseType: !7632, size: 64, offset: 448)
!7632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7633, size: 64)
!7633 = !DISubroutineType(types: !7634)
!7634 = !{null, !372, !72}
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !480, file: !71, line: 1298, baseType: !487, size: 64, offset: 512)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !480, file: !71, line: 1299, baseType: !7637, size: 64, offset: 576)
!7637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7638, size: 64)
!7638 = !DISubroutineType(types: !7639)
!7639 = !{!72, !372, !647}
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !480, file: !71, line: 1301, baseType: !483, size: 64, offset: 640)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !480, file: !71, line: 1302, baseType: !7642, size: 64, offset: 704)
!7642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7643, size: 64)
!7643 = !DISubroutineType(types: !7644)
!7644 = !{!72, !372, !7645, !72}
!7645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7646, size: 64)
!7646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !7647, line: 234, size: 320, elements: !7648)
!7647 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!7648 = !{!7649, !7653}
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !7646, file: !7647, line: 239, baseType: !7650, size: 128)
!7650 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7646, file: !7647, line: 236, size: 128, elements: !7651)
!7651 = !{!7652}
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !7650, file: !7647, line: 238, baseType: !349, size: 128)
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !7646, file: !7647, line: 255, baseType: !7654, size: 192, offset: 128)
!7654 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7646, file: !7647, line: 241, size: 192, elements: !7655)
!7655 = !{!7656, !7657, !7658, !7659, !7660, !7661, !7662, !7663, !7664, !7673, !7674, !7675, !7676}
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !7654, file: !7647, line: 242, baseType: !596, size: 128)
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !7654, file: !7647, line: 243, baseType: !596, size: 128)
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !7654, file: !7647, line: 244, baseType: !596, size: 128)
!7659 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !7654, file: !7647, line: 245, baseType: !596, size: 128)
!7660 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !7654, file: !7647, line: 246, baseType: !596, size: 128)
!7661 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !7654, file: !7647, line: 247, baseType: !1323, size: 16)
!7662 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !7654, file: !7647, line: 248, baseType: !72, size: 32)
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !7654, file: !7647, line: 249, baseType: !72, size: 32)
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !7654, file: !7647, line: 250, baseType: !7665, size: 192)
!7665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !7647, line: 196, size: 192, elements: !7666)
!7666 = !{!7667, !7668, !7669, !7670, !7671, !7672}
!7667 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !7665, file: !7647, line: 197, baseType: !394, size: 64)
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !7665, file: !7647, line: 198, baseType: !394, size: 64, offset: 64)
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !7665, file: !7647, line: 199, baseType: !554, size: 16, offset: 128)
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7665, file: !7647, line: 200, baseType: !571, size: 8, offset: 144)
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !7665, file: !7647, line: 201, baseType: !571, size: 8, offset: 152)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7665, file: !7647, line: 202, baseType: !571, size: 8, offset: 160)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !7654, file: !7647, line: 251, baseType: !349, size: 128)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !7654, file: !7647, line: 252, baseType: !349, size: 128)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !7654, file: !7647, line: 253, baseType: !647, size: 64)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !7654, file: !7647, line: 254, baseType: !7677, size: 128)
!7677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !7647, line: 207, size: 128, elements: !7678)
!7678 = !{!7679, !7680, !7681}
!7679 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7677, file: !7647, line: 208, baseType: !7, size: 32)
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7677, file: !7647, line: 209, baseType: !7, size: 32, offset: 32)
!7681 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !7677, file: !7647, line: 222, baseType: !7682, size: 64, offset: 64)
!7682 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7677, file: !7647, line: 210, size: 64, elements: !7683)
!7683 = !{!7684, !7692, !7699, !7711, !7717, !7724, !7735, !7743}
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !7682, file: !7647, line: 212, baseType: !7685, size: 64)
!7685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7686, size: 64)
!7686 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !7687, line: 56, baseType: !7688)
!7687 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!7688 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7687, line: 53, size: 32, elements: !7689)
!7689 = !{!7690, !7691}
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !7688, file: !7687, line: 54, baseType: !554, size: 16)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !7688, file: !7687, line: 55, baseType: !554, size: 16, offset: 16)
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !7682, file: !7647, line: 213, baseType: !7693, size: 64)
!7693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7694, size: 64)
!7694 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !7687, line: 80, baseType: !7695)
!7695 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7687, line: 77, size: 64, elements: !7696)
!7696 = !{!7697, !7698}
!7697 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !7695, file: !7687, line: 78, baseType: !7, size: 32)
!7698 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7695, file: !7687, line: 79, baseType: !7, size: 32, offset: 32)
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !7682, file: !7647, line: 214, baseType: !7700, size: 64)
!7700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7701, size: 64)
!7701 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !7687, line: 66, baseType: !7702)
!7702 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7687, line: 58, size: 192, elements: !7703)
!7703 = !{!7704, !7705, !7706, !7707, !7708, !7709, !7710}
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !7702, file: !7687, line: 59, baseType: !7, size: 32)
!7705 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !7702, file: !7687, line: 60, baseType: !7, size: 32, offset: 32)
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !7702, file: !7687, line: 61, baseType: !7, size: 32, offset: 64)
!7707 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !7702, file: !7687, line: 62, baseType: !7, size: 32, offset: 96)
!7708 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !7702, file: !7687, line: 63, baseType: !7, size: 32, offset: 128)
!7709 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !7702, file: !7687, line: 64, baseType: !554, size: 16, offset: 160)
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !7702, file: !7687, line: 65, baseType: !554, size: 16, offset: 176)
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !7682, file: !7647, line: 215, baseType: !7712, size: 64)
!7712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7713, size: 64)
!7713 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !7687, line: 70, baseType: !7714)
!7714 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7687, line: 68, size: 32, elements: !7715)
!7715 = !{!7716}
!7716 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !7714, file: !7687, line: 69, baseType: !7, size: 32)
!7717 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !7682, file: !7647, line: 216, baseType: !7718, size: 64)
!7718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7719, size: 64)
!7719 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !7687, line: 75, baseType: !7720)
!7720 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7687, line: 72, size: 160, elements: !7721)
!7721 = !{!7722, !7723}
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !7720, file: !7687, line: 73, baseType: !7, size: 32)
!7723 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !7720, file: !7687, line: 74, baseType: !349, size: 128, offset: 32)
!7724 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !7682, file: !7647, line: 217, baseType: !7725, size: 64)
!7725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7726, size: 64)
!7726 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !7687, line: 89, baseType: !7727)
!7727 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7687, line: 82, size: 192, elements: !7728)
!7728 = !{!7729, !7730, !7731, !7732, !7733, !7734}
!7729 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !7727, file: !7687, line: 83, baseType: !554, size: 16)
!7730 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !7727, file: !7687, line: 84, baseType: !7, size: 32, offset: 32)
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !7727, file: !7687, line: 85, baseType: !7, size: 32, offset: 64)
!7732 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !7727, file: !7687, line: 86, baseType: !7, size: 32, offset: 96)
!7733 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !7727, file: !7687, line: 87, baseType: !7, size: 32, offset: 128)
!7734 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !7727, file: !7687, line: 88, baseType: !7, size: 32, offset: 160)
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !7682, file: !7647, line: 220, baseType: !7736, size: 64)
!7736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7737, size: 64)
!7737 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !7687, line: 44, baseType: !7738)
!7738 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7687, line: 40, size: 96, elements: !7739)
!7739 = !{!7740, !7741, !7742}
!7740 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !7738, file: !7687, line: 41, baseType: !7, size: 32)
!7741 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !7738, file: !7687, line: 42, baseType: !7, size: 32, offset: 32)
!7742 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !7738, file: !7687, line: 43, baseType: !554, size: 16, offset: 64)
!7743 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !7682, file: !7647, line: 221, baseType: !7744, size: 64)
!7744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7745, size: 64)
!7745 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !7687, line: 51, baseType: !7746)
!7746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7687, line: 46, size: 128, elements: !7747)
!7747 = !{!7748, !7749, !7750, !7751}
!7748 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !7746, file: !7687, line: 47, baseType: !7, size: 32)
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !7746, file: !7687, line: 48, baseType: !7, size: 32, offset: 32)
!7750 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !7746, file: !7687, line: 49, baseType: !554, size: 16, offset: 64)
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !7746, file: !7687, line: 50, baseType: !7, size: 32, offset: 96)
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !480, file: !71, line: 1304, baseType: !7753, size: 64, offset: 768)
!7753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7754, size: 64)
!7754 = !DISubroutineType(types: !7755)
!7755 = !{!72, !372, !7756}
!7756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7665, size: 64)
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !480, file: !71, line: 1306, baseType: !7758, size: 64, offset: 832)
!7758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7759, size: 64)
!7759 = !DISubroutineType(types: !7760)
!7760 = !{!72, !372, !72}
!7761 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !480, file: !71, line: 1308, baseType: !7762, size: 64, offset: 896)
!7762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7763, size: 64)
!7763 = !DISubroutineType(types: !7764)
!7764 = !{!72, !372, !2952}
!7765 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !480, file: !71, line: 1310, baseType: !7766, size: 64, offset: 960)
!7766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7767, size: 64)
!7767 = !DISubroutineType(types: !7768)
!7768 = !{null, !372, !7}
!7769 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !480, file: !71, line: 1313, baseType: !7770, size: 64, offset: 1024)
!7770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7771, size: 64)
!7771 = !DISubroutineType(types: !7772)
!7772 = !{null, !372, !7773}
!7773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7774, size: 64)
!7774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !7775, line: 214, size: 1536, elements: !7776)
!7775 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!7776 = !{!7777, !7778, !7779, !7780, !7781, !7782, !7783, !7784, !7785, !7786, !7787, !7788, !7789, !7790, !7791, !7792, !7793, !7794, !7795, !7796, !7797, !7798, !7799, !7800}
!7777 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7774, file: !7775, line: 215, baseType: !415, size: 64)
!7778 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7774, file: !7775, line: 216, baseType: !415, size: 64, offset: 64)
!7779 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7774, file: !7775, line: 217, baseType: !415, size: 64, offset: 128)
!7780 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7774, file: !7775, line: 218, baseType: !415, size: 64, offset: 192)
!7781 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !7774, file: !7775, line: 219, baseType: !415, size: 64, offset: 256)
!7782 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !7774, file: !7775, line: 220, baseType: !415, size: 64, offset: 320)
!7783 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !7774, file: !7775, line: 221, baseType: !415, size: 64, offset: 384)
!7784 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !7774, file: !7775, line: 222, baseType: !415, size: 64, offset: 448)
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !7774, file: !7775, line: 223, baseType: !415, size: 64, offset: 512)
!7786 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !7774, file: !7775, line: 224, baseType: !415, size: 64, offset: 576)
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !7774, file: !7775, line: 227, baseType: !415, size: 64, offset: 640)
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !7774, file: !7775, line: 228, baseType: !415, size: 64, offset: 704)
!7789 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !7774, file: !7775, line: 229, baseType: !415, size: 64, offset: 768)
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !7774, file: !7775, line: 230, baseType: !415, size: 64, offset: 832)
!7791 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !7774, file: !7775, line: 231, baseType: !415, size: 64, offset: 896)
!7792 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !7774, file: !7775, line: 232, baseType: !415, size: 64, offset: 960)
!7793 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !7774, file: !7775, line: 235, baseType: !415, size: 64, offset: 1024)
!7794 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !7774, file: !7775, line: 236, baseType: !415, size: 64, offset: 1088)
!7795 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !7774, file: !7775, line: 237, baseType: !415, size: 64, offset: 1152)
!7796 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !7774, file: !7775, line: 238, baseType: !415, size: 64, offset: 1216)
!7797 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !7774, file: !7775, line: 239, baseType: !415, size: 64, offset: 1280)
!7798 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !7774, file: !7775, line: 242, baseType: !415, size: 64, offset: 1344)
!7799 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !7774, file: !7775, line: 243, baseType: !415, size: 64, offset: 1408)
!7800 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !7774, file: !7775, line: 244, baseType: !415, size: 64, offset: 1472)
!7801 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !480, file: !71, line: 1315, baseType: !7802, size: 64, offset: 1088)
!7802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7803, size: 64)
!7803 = !DISubroutineType(types: !7804)
!7804 = !{!617, !2825, !72}
!7805 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !480, file: !71, line: 1316, baseType: !7806, size: 64, offset: 1152)
!7806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7807, size: 64)
!7807 = !DISubroutineType(types: !7808)
!7808 = !{!72, !72, !2825, !647}
!7809 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !480, file: !71, line: 1319, baseType: !7810, size: 64, offset: 1216)
!7810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7811, size: 64)
!7811 = !DISubroutineType(types: !7812)
!7812 = !{!7813, !372}
!7813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!7814 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !480, file: !71, line: 1321, baseType: !7815, size: 64, offset: 1280)
!7815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7816, size: 64)
!7816 = !DISubroutineType(types: !7817)
!7817 = !{!72, !372, !566, !1115}
!7818 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !480, file: !71, line: 1323, baseType: !7815, size: 64, offset: 1344)
!7819 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !480, file: !71, line: 1331, baseType: !7820, size: 64, offset: 1408)
!7820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7821, size: 64)
!7821 = !DISubroutineType(types: !7822)
!7822 = !{!72, !372, !72, !7823}
!7823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64)
!7824 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !480, file: !71, line: 1333, baseType: !7825, size: 64, offset: 1472)
!7825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7826, size: 64)
!7826 = !DISubroutineType(types: !7827)
!7827 = !{!72, !372, !72, !1115, !1474, !566}
!7828 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !480, file: !71, line: 1336, baseType: !7829, size: 64, offset: 1536)
!7829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7830, size: 64)
!7830 = !DISubroutineType(types: !7831)
!7831 = !{!72, !372, !72, !72, !72}
!7832 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !480, file: !71, line: 1339, baseType: !7833, size: 64, offset: 1600)
!7833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7834, size: 64)
!7834 = !DISubroutineType(types: !7835)
!7835 = !{!72, !372, !72, !617}
!7836 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !480, file: !71, line: 1341, baseType: !7833, size: 64, offset: 1664)
!7837 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !480, file: !71, line: 1343, baseType: !7838, size: 64, offset: 1728)
!7838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7839, size: 64)
!7839 = !DISubroutineType(types: !7840)
!7840 = !{!72, !372, !72, !7841}
!7841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7842, size: 64)
!7842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !7843, line: 20, size: 576, elements: !7844)
!7843 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!7844 = !{!7845, !7846, !7848, !7849, !7850, !7851, !7852, !7853, !7854, !7855, !7856}
!7845 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !7842, file: !7843, line: 21, baseType: !545, size: 32)
!7846 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !7842, file: !7843, line: 22, baseType: !7847, size: 256, offset: 32)
!7847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1475, size: 256, elements: !793)
!7848 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !7842, file: !7843, line: 23, baseType: !545, size: 32, offset: 288)
!7849 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !7842, file: !7843, line: 24, baseType: !545, size: 32, offset: 320)
!7850 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !7842, file: !7843, line: 25, baseType: !545, size: 32, offset: 352)
!7851 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !7842, file: !7843, line: 26, baseType: !545, size: 32, offset: 384)
!7852 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !7842, file: !7843, line: 27, baseType: !545, size: 32, offset: 416)
!7853 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !7842, file: !7843, line: 28, baseType: !545, size: 32, offset: 448)
!7854 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !7842, file: !7843, line: 29, baseType: !545, size: 32, offset: 480)
!7855 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !7842, file: !7843, line: 30, baseType: !545, size: 32, offset: 512)
!7856 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !7842, file: !7843, line: 31, baseType: !566, size: 16, offset: 544)
!7857 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !480, file: !71, line: 1346, baseType: !7858, size: 64, offset: 1792)
!7858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7859, size: 64)
!7859 = !DISubroutineType(types: !7860)
!7860 = !{!72, !372, !72, !72}
!7861 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !480, file: !71, line: 1348, baseType: !7862, size: 64, offset: 1856)
!7862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7863, size: 64)
!7863 = !DISubroutineType(types: !7864)
!7864 = !{!72, !372, !72, !7865}
!7865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7866, size: 64)
!7866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !7843, line: 9, size: 512, elements: !7867)
!7867 = !{!7868, !7869, !7870, !7871, !7872, !7873, !7874, !7875}
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7866, file: !7843, line: 10, baseType: !415, size: 64)
!7869 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7866, file: !7843, line: 11, baseType: !415, size: 64, offset: 64)
!7870 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7866, file: !7843, line: 12, baseType: !415, size: 64, offset: 128)
!7871 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7866, file: !7843, line: 13, baseType: !415, size: 64, offset: 192)
!7872 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !7866, file: !7843, line: 14, baseType: !415, size: 64, offset: 256)
!7873 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !7866, file: !7843, line: 15, baseType: !415, size: 64, offset: 320)
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !7866, file: !7843, line: 16, baseType: !415, size: 64, offset: 384)
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !7866, file: !7843, line: 17, baseType: !415, size: 64, offset: 448)
!7876 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !480, file: !71, line: 1352, baseType: !7877, size: 64, offset: 1920)
!7877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7878, size: 64)
!7878 = !DISubroutineType(types: !7879)
!7879 = !{!72, !372, !72, !7880}
!7880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7881, size: 64)
!7881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 64)
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !480, file: !71, line: 1355, baseType: !7883, size: 64, offset: 1984)
!7883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7884, size: 64)
!7884 = !DISubroutineType(types: !7885)
!7885 = !{!72, !372, !72, !497}
!7886 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !480, file: !71, line: 1357, baseType: !7887, size: 64, offset: 2048)
!7887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7888, size: 64)
!7888 = !DISubroutineType(types: !7889)
!7889 = !{!72, !372, !72, !7890, !7890}
!7890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7891, size: 64)
!7891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !7775, line: 956, size: 128, elements: !7892)
!7892 = !{!7893, !7894}
!7893 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !7891, file: !7775, line: 957, baseType: !545, size: 32)
!7894 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !7891, file: !7775, line: 958, baseType: !415, size: 64, offset: 64)
!7895 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !480, file: !71, line: 1361, baseType: !7896, size: 64, offset: 2112)
!7896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7897, size: 64)
!7897 = !DISubroutineType(types: !7898)
!7898 = !{!72, !372, !72, !413, !72}
!7899 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !480, file: !71, line: 1364, baseType: !7833, size: 64, offset: 2176)
!7900 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !480, file: !71, line: 1367, baseType: !7901, size: 64, offset: 2240)
!7901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7902, size: 64)
!7902 = !DISubroutineType(types: !7903)
!7903 = !{!72, !372, !263, !647}
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !480, file: !71, line: 1400, baseType: !7905, size: 64, offset: 2304)
!7905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7906, size: 64)
!7906 = !DISubroutineType(types: !7907)
!7907 = !{!72, !372, !372, !2536}
!7908 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !480, file: !71, line: 1403, baseType: !7909, size: 64, offset: 2368)
!7909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7910, size: 64)
!7910 = !DISubroutineType(types: !7911)
!7911 = !{!72, !372, !372}
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !480, file: !71, line: 1405, baseType: !7913, size: 64, offset: 2432)
!7913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7914, size: 64)
!7914 = !DISubroutineType(types: !7915)
!7915 = !{!372, !372, !497, !617}
!7916 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !480, file: !71, line: 1408, baseType: !7917, size: 64, offset: 2496)
!7917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7918, size: 64)
!7918 = !DISubroutineType(types: !7919)
!7919 = !{!411, !372, !411}
!7920 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !480, file: !71, line: 1410, baseType: !7921, size: 64, offset: 2560)
!7921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7922, size: 64)
!7922 = !DISubroutineType(types: !7923)
!7923 = !{!72, !372, !411}
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !480, file: !71, line: 1412, baseType: !7925, size: 64, offset: 2624)
!7925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7926, size: 64)
!7926 = !DISubroutineType(types: !7927)
!7927 = !{!72, !372, !2808}
!7928 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !480, file: !71, line: 1414, baseType: !7929, size: 64, offset: 2688)
!7929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7930, size: 64)
!7930 = !DISubroutineType(types: !7931)
!7931 = !{null, !372, !2808}
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !480, file: !71, line: 1417, baseType: !7933, size: 64, offset: 2752)
!7933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7934, size: 64)
!7934 = !DISubroutineType(types: !7935)
!7935 = !{!72, !7936, !7880, !372, !788, !1115, !1115, !2536}
!7936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7937, size: 64)
!7937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !7938, line: 8, size: 96, elements: !7939)
!7938 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!7939 = !{!7940, !7941, !7942, !7943, !7944, !7945, !7946}
!7940 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !7937, file: !7938, line: 9, baseType: !1475, size: 8)
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !7937, file: !7938, line: 10, baseType: !1475, size: 8, offset: 8)
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !7937, file: !7938, line: 11, baseType: !553, size: 16, offset: 16)
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !7937, file: !7938, line: 12, baseType: !1567, size: 32, offset: 32)
!7944 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !7937, file: !7938, line: 13, baseType: !553, size: 16, offset: 64)
!7945 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !7937, file: !7938, line: 14, baseType: !1475, size: 8, offset: 80)
!7946 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !7937, file: !7938, line: 15, baseType: !1475, size: 8, offset: 88)
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !480, file: !71, line: 1424, baseType: !7948, size: 64, offset: 2816)
!7948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7949, size: 64)
!7949 = !DISubroutineType(types: !7950)
!7950 = !{!72, !7936, !7880, !372, !788, !1115}
!7951 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !480, file: !71, line: 1429, baseType: !7952, size: 64, offset: 2880)
!7952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7953, size: 64)
!7953 = !DISubroutineType(types: !7954)
!7954 = !{!72, !497, !7955, !372, !372, !616}
!7955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7956, size: 64)
!7956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !2538, line: 203, size: 1024, elements: !7957)
!7957 = !{!7958, !7959, !7969, !7973, !7977, !7978, !7979, !7980, !7981, !7982, !7983, !7984, !7985, !7986}
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !7956, file: !2538, line: 204, baseType: !497, size: 64)
!7959 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !7956, file: !2538, line: 205, baseType: !7960, size: 64, offset: 64)
!7960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7961, size: 64)
!7961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7962)
!7962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !2545, line: 44, size: 128, elements: !7963)
!7963 = !{!7964, !7965, !7966, !7967, !7968}
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !7962, file: !2545, line: 45, baseType: !545, size: 32)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !7962, file: !2545, line: 46, baseType: !553, size: 16, offset: 32)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !7962, file: !2545, line: 47, baseType: !553, size: 16, offset: 48)
!7967 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !7962, file: !2545, line: 48, baseType: !545, size: 32, offset: 64)
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !7962, file: !2545, line: 49, baseType: !545, size: 32, offset: 96)
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !7956, file: !2538, line: 206, baseType: !7970, size: 64, offset: 128)
!7970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7971, size: 64)
!7971 = !DISubroutineType(types: !7972)
!7972 = !{!72, !497, !7955}
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !7956, file: !2538, line: 208, baseType: !7974, size: 64, offset: 192)
!7974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7975, size: 64)
!7975 = !DISubroutineType(types: !7976)
!7976 = !{!72, !7955}
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7956, file: !2538, line: 209, baseType: !647, size: 64, offset: 256)
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !7956, file: !2538, line: 211, baseType: !929, size: 64, offset: 320)
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !7956, file: !2538, line: 212, baseType: !2536, size: 64, offset: 384)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7956, file: !2538, line: 213, baseType: !1115, size: 16, offset: 448)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !7956, file: !2538, line: 214, baseType: !1115, size: 16, offset: 464)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !7956, file: !2538, line: 215, baseType: !784, size: 32, offset: 480)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !7956, file: !2538, line: 216, baseType: !7, size: 32, offset: 512)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !7956, file: !2538, line: 216, baseType: !7, size: 32, offset: 544)
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !7956, file: !2538, line: 217, baseType: !617, size: 8, offset: 576)
!7986 = !DIDerivedType(tag: DW_TAG_member, scope: !7956, file: !2538, line: 218, baseType: !7987, size: 384, offset: 640)
!7987 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7956, file: !2538, line: 218, size: 384, elements: !7988)
!7988 = !{!7989, !7991}
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !7987, file: !2538, line: 219, baseType: !7990, size: 384)
!7990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1474, size: 384, elements: !7526)
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !7987, file: !2538, line: 224, baseType: !7992, size: 384)
!7992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !590, size: 384, elements: !1748)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !480, file: !71, line: 1434, baseType: !7994, size: 64, offset: 2944)
!7994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7995, size: 64)
!7995 = !DISubroutineType(types: !7996)
!7996 = !{!72, !497, !7880, !372, !788, !1115, !784, !784, !2536}
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !480, file: !71, line: 1440, baseType: !7998, size: 64, offset: 3008)
!7998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7999, size: 64)
!7999 = !DISubroutineType(types: !8000)
!8000 = !{!72, !372, !8001, !1115, !2536}
!8001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7962, size: 64)
!8002 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !480, file: !71, line: 1444, baseType: !8003, size: 64, offset: 3072)
!8003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8004, size: 64)
!8004 = !DISubroutineType(types: !8005)
!8005 = !{!72, !497, !784, !784, !372, !784, !72}
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !480, file: !71, line: 1449, baseType: !8007, size: 64, offset: 3136)
!8007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8008, size: 64)
!8008 = !DISubroutineType(types: !8009)
!8009 = !{!72, !372, !8001, !1115}
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !480, file: !71, line: 1452, baseType: !8011, size: 64, offset: 3200)
!8011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8012, size: 64)
!8012 = !DISubroutineType(types: !8013)
!8013 = !{!72, !372, !617}
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !480, file: !71, line: 1454, baseType: !8015, size: 64, offset: 3264)
!8015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8016, size: 64)
!8016 = !DISubroutineType(types: !8017)
!8017 = !{!72, !372, !8018}
!8018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8019, size: 64)
!8019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !71, line: 820, size: 264, elements: !8020)
!8020 = !{!8021, !8022}
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8019, file: !71, line: 821, baseType: !792, size: 256)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !8019, file: !71, line: 822, baseType: !571, size: 8, offset: 256)
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !480, file: !71, line: 1456, baseType: !8015, size: 64, offset: 3328)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !480, file: !71, line: 1458, baseType: !8025, size: 64, offset: 3392)
!8025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8026, size: 64)
!8026 = !DISubroutineType(types: !8027)
!8027 = !{!72, !372, !654, !671}
!8028 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !480, file: !71, line: 1460, baseType: !8029, size: 64, offset: 3456)
!8029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8030, size: 64)
!8030 = !DISubroutineType(types: !8031)
!8031 = !{null, !372, !8032}
!8032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8033, size: 64)
!8033 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !71, line: 67, flags: DIFlagFwdDecl)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !480, file: !71, line: 1462, baseType: !8029, size: 64, offset: 3520)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !480, file: !71, line: 1464, baseType: !8036, size: 64, offset: 3584)
!8036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8037, size: 64)
!8037 = !DISubroutineType(types: !8038)
!8038 = !{!647, !372, !372}
!8039 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !480, file: !71, line: 1466, baseType: !8040, size: 64, offset: 3648)
!8040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8041, size: 64)
!8041 = !DISubroutineType(types: !8042)
!8042 = !{null, !372, !647}
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !480, file: !71, line: 1469, baseType: !8044, size: 64, offset: 3712)
!8044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8045, size: 64)
!8045 = !DISubroutineType(types: !8046)
!8046 = !{!72, !372, !72, !784}
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !480, file: !71, line: 1472, baseType: !8048, size: 64, offset: 3776)
!8048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8049, size: 64)
!8049 = !DISubroutineType(types: !8050)
!8050 = !{!72, !2825}
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !480, file: !71, line: 1473, baseType: !8011, size: 64, offset: 3840)
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !480, file: !71, line: 1475, baseType: !8053, size: 64, offset: 3904)
!8053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8054, size: 64)
!8054 = !DISubroutineType(types: !8055)
!8055 = !{!72, !372, !497}
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !480, file: !71, line: 1477, baseType: !7632, size: 64, offset: 3968)
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !480, file: !71, line: 1479, baseType: !8058, size: 64, offset: 4032)
!8058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8059, size: 64)
!8059 = !DISubroutineType(types: !8060)
!8060 = !{!72, !372, !8061}
!8061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8062, size: 64)
!8062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !71, line: 894, size: 256, elements: !8063)
!8063 = !{!8064, !8065}
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !8062, file: !71, line: 895, baseType: !283, size: 32)
!8065 = !DIDerivedType(tag: DW_TAG_member, scope: !8062, file: !71, line: 896, baseType: !8066, size: 192, offset: 64)
!8066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8062, file: !71, line: 896, size: 192, elements: !8067)
!8067 = !{!8068, !8074, !8103}
!8068 = !DIDerivedType(tag: DW_TAG_member, scope: !8066, file: !71, line: 898, baseType: !8069, size: 192)
!8069 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8066, file: !71, line: 898, size: 192, elements: !8070)
!8070 = !{!8071, !8072, !8073}
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8069, file: !71, line: 899, baseType: !784, size: 32)
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !8069, file: !71, line: 900, baseType: !3052, size: 64, offset: 64)
!8073 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !8069, file: !71, line: 901, baseType: !2536, size: 64, offset: 128)
!8074 = !DIDerivedType(tag: DW_TAG_member, scope: !8066, file: !71, line: 904, baseType: !8075, size: 64)
!8075 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8066, file: !71, line: 904, size: 64, elements: !8076)
!8076 = !{!8077}
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !8075, file: !71, line: 905, baseType: !8078, size: 64)
!8078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8079, size: 64)
!8079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !153, line: 222, size: 2560, elements: !8080)
!8080 = !{!8081, !8082, !8083, !8101, !8102}
!8081 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !8079, file: !153, line: 223, baseType: !3177, size: 2048)
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !8079, file: !153, line: 224, baseType: !372, size: 64, offset: 2048)
!8083 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !8079, file: !153, line: 225, baseType: !8084, size: 64, offset: 2112)
!8084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8085, size: 64)
!8085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8086)
!8086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !153, line: 212, size: 256, elements: !8087)
!8087 = !{!8088, !8092, !8093, !8097}
!8088 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !8086, file: !153, line: 213, baseType: !8089, size: 64)
!8089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8090, size: 64)
!8090 = !DISubroutineType(types: !8091)
!8091 = !{!72, !8078, !647, !647}
!8092 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !8086, file: !153, line: 215, baseType: !8089, size: 64, offset: 64)
!8093 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !8086, file: !153, line: 217, baseType: !8094, size: 64, offset: 128)
!8094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8095, size: 64)
!8095 = !DISubroutineType(types: !8096)
!8096 = !{!72, !8078, !647, !647, !413}
!8097 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !8086, file: !153, line: 219, baseType: !8098, size: 64, offset: 192)
!8098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8099, size: 64)
!8099 = !DISubroutineType(types: !8100)
!8100 = !{!72, !8078, !647}
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !8079, file: !153, line: 226, baseType: !647, size: 64, offset: 2176)
!8102 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !8079, file: !153, line: 227, baseType: !366, size: 128, offset: 2240)
!8103 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !8066, file: !71, line: 911, baseType: !8104, size: 128)
!8104 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8066, file: !71, line: 908, size: 128, elements: !8105)
!8105 = !{!8106, !8109}
!8106 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !8104, file: !71, line: 909, baseType: !8107, size: 64)
!8107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8108, size: 64)
!8108 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !71, line: 909, flags: DIFlagFwdDecl)
!8109 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !8104, file: !71, line: 910, baseType: !1115, size: 16, offset: 64)
!8110 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !480, file: !71, line: 1481, baseType: !8111, size: 64, offset: 4096)
!8111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8112, size: 64)
!8112 = !DISubroutineType(types: !8113)
!8113 = !{!72, !372, !72, !8114, !784}
!8114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8115, size: 64)
!8115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8116, size: 64)
!8116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !8117, line: 94, size: 256, elements: !8118)
!8117 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!8118 = !{!8119, !8120, !8121, !8122, !8123, !8124, !8129}
!8119 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8116, file: !8117, line: 95, baseType: !647, size: 64)
!8120 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8116, file: !8117, line: 96, baseType: !1115, size: 16, offset: 64)
!8121 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !8116, file: !8117, line: 97, baseType: !1115, size: 16, offset: 80)
!8122 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !8116, file: !8117, line: 98, baseType: !784, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!8123 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !8116, file: !8117, line: 99, baseType: !784, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!8124 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !8116, file: !8117, line: 103, baseType: !8125, size: 64, offset: 128)
!8125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !8117, line: 50, size: 64, elements: !8126)
!8126 = !{!8127, !8128}
!8127 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8125, file: !8117, line: 51, baseType: !784, size: 32)
!8128 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8125, file: !8117, line: 52, baseType: !784, size: 32, offset: 32)
!8129 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !8116, file: !8117, line: 104, baseType: !372, size: 64, offset: 192)
!8130 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !480, file: !71, line: 1484, baseType: !8131, size: 64, offset: 4160)
!8131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8132, size: 64)
!8132 = !DISubroutineType(types: !8133)
!8133 = !{!72, !372, !784, !784}
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !480, file: !71, line: 1486, baseType: !8135, size: 64, offset: 4224)
!8135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8136, size: 64)
!8136 = !DISubroutineType(types: !8137)
!8137 = !{!8138, !372}
!8138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8139, size: 64)
!8139 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !71, line: 1486, flags: DIFlagFwdDecl)
!8140 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !480, file: !71, line: 1487, baseType: !8141, size: 64, offset: 4288)
!8141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8142, size: 64)
!8142 = !DISubroutineType(types: !8143)
!8143 = !{!72, !372, !8144, !72}
!8144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8145, size: 64)
!8145 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !71, line: 56, flags: DIFlagFwdDecl)
!8146 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !480, file: !71, line: 1489, baseType: !8147, size: 64, offset: 4352)
!8147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8148, size: 64)
!8148 = !DISubroutineType(types: !8149)
!8149 = !{!372, !372}
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !346, file: !71, line: 1917, baseType: !8151, size: 64, offset: 4032)
!8151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8152, size: 64)
!8152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8153)
!8153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !333, line: 421, size: 3904, elements: !8154)
!8154 = !{!8155, !8156, !8176, !8177, !8188, !8200, !8204, !8208, !8212, !8213, !8214, !8231, !8232, !8244, !8245, !8275, !8276, !8292, !8296, !8305, !8316, !8320, !8333, !8337, !8341, !8351, !8352, !8353, !8354, !8358, !8359, !8461, !8465, !8475, !8479, !8480, !8481, !8485, !8491, !8495, !8499, !8515, !8519, !8531, !8535, !8536, !8551, !8563, !8564, !8580, !8581, !8595, !8599, !8603, !8604, !8642, !8648, !8659, !8660, !8661, !8662}
!8155 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !8153, file: !333, line: 422, baseType: !784, size: 32)
!8156 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !8153, file: !333, line: 423, baseType: !8157, size: 64, offset: 64)
!8157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8158, size: 64)
!8158 = !DISubroutineType(types: !8159)
!8159 = !{null, !372, !8160}
!8160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8161, size: 64)
!8161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !291, line: 177, size: 1568, elements: !8162)
!8162 = !{!8163, !8164, !8165, !8166, !8167, !8168, !8169, !8171, !8172, !8173, !8174, !8175}
!8163 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8161, file: !291, line: 178, baseType: !545, size: 32)
!8164 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !8161, file: !291, line: 179, baseType: !3904, size: 256, offset: 32)
!8165 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8161, file: !291, line: 180, baseType: !3904, size: 256, offset: 288)
!8166 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !8161, file: !291, line: 181, baseType: !3904, size: 256, offset: 544)
!8167 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !8161, file: !291, line: 182, baseType: !3904, size: 256, offset: 800)
!8168 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !8161, file: !291, line: 183, baseType: !3904, size: 256, offset: 1056)
!8169 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !8161, file: !291, line: 184, baseType: !8170, size: 96, offset: 1312)
!8170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 96, elements: !2976)
!8171 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !8161, file: !291, line: 185, baseType: !545, size: 32, offset: 1408)
!8172 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !8161, file: !291, line: 186, baseType: !545, size: 32, offset: 1440)
!8173 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !8161, file: !291, line: 187, baseType: !545, size: 32, offset: 1472)
!8174 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !8161, file: !291, line: 188, baseType: !545, size: 32, offset: 1504)
!8175 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !8161, file: !291, line: 189, baseType: !545, size: 32, offset: 1536)
!8176 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !8153, file: !333, line: 424, baseType: !483, size: 64, offset: 128)
!8177 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !8153, file: !333, line: 425, baseType: !8178, size: 64, offset: 192)
!8178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8179, size: 64)
!8179 = !DISubroutineType(types: !8180)
!8180 = !{null, !372, !8181, !647}
!8181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8182, size: 64)
!8182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !291, line: 310, size: 96, elements: !8183)
!8183 = !{!8184, !8185, !8186, !8187}
!8184 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8182, file: !291, line: 311, baseType: !545, size: 32)
!8185 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8182, file: !291, line: 312, baseType: !545, size: 32, offset: 32)
!8186 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8182, file: !291, line: 313, baseType: !545, size: 32, offset: 64)
!8187 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8182, file: !291, line: 314, baseType: !7543, offset: 96)
!8188 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !8153, file: !333, line: 426, baseType: !8189, size: 64, offset: 256)
!8189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8190, size: 64)
!8190 = !DISubroutineType(types: !8191)
!8191 = !{null, !372, !8192}
!8192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8193, size: 64)
!8193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !291, line: 203, size: 160, elements: !8194)
!8194 = !{!8195, !8196, !8197, !8198}
!8195 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8193, file: !291, line: 204, baseType: !545, size: 32)
!8196 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8193, file: !291, line: 205, baseType: !545, size: 32, offset: 32)
!8197 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !8193, file: !291, line: 206, baseType: !545, size: 32, offset: 64)
!8198 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !8193, file: !291, line: 207, baseType: !8199, size: 48, offset: 96)
!8199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1475, size: 48, elements: !1748)
!8200 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !8153, file: !333, line: 427, baseType: !8201, size: 64, offset: 320)
!8201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8202, size: 64)
!8202 = !DISubroutineType(types: !8203)
!8203 = !{!72, !372, !8192}
!8204 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !8153, file: !333, line: 428, baseType: !8205, size: 64, offset: 384)
!8205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8206, size: 64)
!8206 = !DISubroutineType(types: !8207)
!8207 = !{!784, !372}
!8208 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !8153, file: !333, line: 429, baseType: !8209, size: 64, offset: 448)
!8209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8210, size: 64)
!8210 = !DISubroutineType(types: !8211)
!8211 = !{null, !372, !784}
!8212 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !8153, file: !333, line: 430, baseType: !483, size: 64, offset: 512)
!8213 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !8153, file: !333, line: 431, baseType: !8205, size: 64, offset: 576)
!8214 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !8153, file: !333, line: 432, baseType: !8215, size: 64, offset: 640)
!8215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8216, size: 64)
!8216 = !DISubroutineType(types: !8217)
!8217 = !{!72, !372, !8218}
!8218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8219, size: 64)
!8219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !333, line: 93, size: 64, elements: !8220)
!8220 = !{!8221, !8222}
!8221 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !8219, file: !333, line: 94, baseType: !290, size: 32)
!8222 = !DIDerivedType(tag: DW_TAG_member, scope: !8219, file: !333, line: 95, baseType: !8223, size: 32, offset: 32)
!8223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8219, file: !333, line: 95, size: 32, elements: !8224)
!8224 = !{!8225, !8226, !8227, !8228, !8229, !8230}
!8225 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8223, file: !333, line: 96, baseType: !303, size: 32)
!8226 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !8223, file: !333, line: 97, baseType: !311, size: 32)
!8227 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !8223, file: !333, line: 98, baseType: !317, size: 32)
!8228 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !8223, file: !333, line: 99, baseType: !324, size: 32)
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !8223, file: !333, line: 100, baseType: !328, size: 32)
!8230 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !8223, file: !333, line: 101, baseType: !1474, size: 8)
!8231 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !8153, file: !333, line: 434, baseType: !483, size: 64, offset: 704)
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !8153, file: !333, line: 435, baseType: !8233, size: 64, offset: 768)
!8233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8234, size: 64)
!8234 = !DISubroutineType(types: !8235)
!8235 = !{!72, !372, !8236, !7823}
!8236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8237, size: 64)
!8237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !291, line: 335, size: 128, elements: !8238)
!8238 = !{!8239, !8240, !8241, !8242, !8243}
!8239 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8237, file: !291, line: 336, baseType: !545, size: 32)
!8240 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !8237, file: !291, line: 337, baseType: !545, size: 32, offset: 32)
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !8237, file: !291, line: 338, baseType: !545, size: 32, offset: 64)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8237, file: !291, line: 339, baseType: !545, size: 32, offset: 96)
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8237, file: !291, line: 340, baseType: !7543, offset: 128)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !8153, file: !333, line: 437, baseType: !8233, size: 64, offset: 832)
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !8153, file: !333, line: 439, baseType: !8246, size: 64, offset: 896)
!8246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8247, size: 64)
!8247 = !DISubroutineType(types: !8248)
!8248 = !{!72, !372, !8249}
!8249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8250, size: 64)
!8250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !291, line: 462, size: 736, elements: !8251)
!8251 = !{!8252, !8253, !8254, !8255, !8256, !8257, !8258, !8259, !8260, !8261, !8262, !8263, !8264, !8265, !8266, !8267, !8268, !8269, !8270, !8271, !8272, !8273, !8274}
!8252 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8250, file: !291, line: 463, baseType: !545, size: 32)
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !8250, file: !291, line: 464, baseType: !545, size: 32, offset: 32)
!8254 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !8250, file: !291, line: 465, baseType: !545, size: 32, offset: 64)
!8255 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !8250, file: !291, line: 466, baseType: !545, size: 32, offset: 96)
!8256 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !8250, file: !291, line: 467, baseType: !545, size: 32, offset: 128)
!8257 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !8250, file: !291, line: 468, baseType: !545, size: 32, offset: 160)
!8258 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !8250, file: !291, line: 469, baseType: !545, size: 32, offset: 192)
!8259 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !8250, file: !291, line: 470, baseType: !545, size: 32, offset: 224)
!8260 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !8250, file: !291, line: 471, baseType: !545, size: 32, offset: 256)
!8261 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !8250, file: !291, line: 472, baseType: !545, size: 32, offset: 288)
!8262 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !8250, file: !291, line: 473, baseType: !545, size: 32, offset: 320)
!8263 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !8250, file: !291, line: 474, baseType: !545, size: 32, offset: 352)
!8264 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !8250, file: !291, line: 475, baseType: !545, size: 32, offset: 384)
!8265 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !8250, file: !291, line: 476, baseType: !545, size: 32, offset: 416)
!8266 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !8250, file: !291, line: 477, baseType: !545, size: 32, offset: 448)
!8267 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !8250, file: !291, line: 478, baseType: !545, size: 32, offset: 480)
!8268 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !8250, file: !291, line: 479, baseType: !545, size: 32, offset: 512)
!8269 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !8250, file: !291, line: 480, baseType: !545, size: 32, offset: 544)
!8270 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !8250, file: !291, line: 481, baseType: !545, size: 32, offset: 576)
!8271 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !8250, file: !291, line: 482, baseType: !545, size: 32, offset: 608)
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !8250, file: !291, line: 483, baseType: !545, size: 32, offset: 640)
!8273 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !8250, file: !291, line: 484, baseType: !545, size: 32, offset: 672)
!8274 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !8250, file: !291, line: 485, baseType: !545, size: 32, offset: 704)
!8275 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !8153, file: !333, line: 440, baseType: !8246, size: 64, offset: 960)
!8276 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !8153, file: !333, line: 441, baseType: !8277, size: 64, offset: 1024)
!8277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8278, size: 64)
!8278 = !DISubroutineType(types: !8279)
!8279 = !{null, !372, !8280}
!8280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8281, size: 64)
!8281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !291, line: 513, size: 288, elements: !8282)
!8282 = !{!8283, !8284, !8285, !8286, !8287, !8288, !8289, !8290, !8291}
!8283 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8281, file: !291, line: 514, baseType: !545, size: 32)
!8284 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !8281, file: !291, line: 515, baseType: !545, size: 32, offset: 32)
!8285 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !8281, file: !291, line: 516, baseType: !545, size: 32, offset: 64)
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !8281, file: !291, line: 517, baseType: !545, size: 32, offset: 96)
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !8281, file: !291, line: 518, baseType: !545, size: 32, offset: 128)
!8288 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !8281, file: !291, line: 519, baseType: !545, size: 32, offset: 160)
!8289 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !8281, file: !291, line: 520, baseType: !545, size: 32, offset: 192)
!8290 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !8281, file: !291, line: 521, baseType: !545, size: 32, offset: 224)
!8291 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !8281, file: !291, line: 522, baseType: !545, size: 32, offset: 256)
!8292 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !8153, file: !333, line: 443, baseType: !8293, size: 64, offset: 1088)
!8293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8294, size: 64)
!8294 = !DISubroutineType(types: !8295)
!8295 = !{!72, !372, !8280}
!8296 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !8153, file: !333, line: 445, baseType: !8297, size: 64, offset: 1152)
!8297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8298, size: 64)
!8298 = !DISubroutineType(types: !8299)
!8299 = !{null, !372, !8300}
!8300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8301, size: 64)
!8301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !333, line: 260, size: 128, elements: !8302)
!8302 = !{!8303, !8304}
!8303 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !8301, file: !333, line: 261, baseType: !413, size: 64)
!8304 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !8301, file: !333, line: 262, baseType: !413, size: 64, offset: 64)
!8305 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !8153, file: !333, line: 447, baseType: !8306, size: 64, offset: 1216)
!8306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8307, size: 64)
!8307 = !DISubroutineType(types: !8308)
!8308 = !{null, !372, !8309}
!8309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8310, size: 64)
!8310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !291, line: 575, size: 128, elements: !8311)
!8311 = !{!8312, !8313, !8314, !8315}
!8312 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8310, file: !291, line: 576, baseType: !545, size: 32)
!8313 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8310, file: !291, line: 577, baseType: !545, size: 32, offset: 32)
!8314 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !8310, file: !291, line: 578, baseType: !545, size: 32, offset: 64)
!8315 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !8310, file: !291, line: 579, baseType: !545, size: 32, offset: 96)
!8316 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !8153, file: !333, line: 449, baseType: !8317, size: 64, offset: 1280)
!8317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8318, size: 64)
!8318 = !DISubroutineType(types: !8319)
!8319 = !{!72, !372, !8309}
!8320 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !8153, file: !333, line: 451, baseType: !8321, size: 64, offset: 1344)
!8321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8322, size: 64)
!8322 = !DISubroutineType(types: !8323)
!8323 = !{null, !372, !8324, !3481}
!8324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8325, size: 64)
!8325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !291, line: 770, size: 128, elements: !8326)
!8326 = !{!8327, !8328, !8329, !8330, !8331}
!8327 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8325, file: !291, line: 771, baseType: !545, size: 32)
!8328 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8325, file: !291, line: 772, baseType: !545, size: 32, offset: 32)
!8329 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8325, file: !291, line: 773, baseType: !545, size: 32, offset: 64)
!8330 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8325, file: !291, line: 774, baseType: !545, size: 32, offset: 96)
!8331 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8325, file: !291, line: 775, baseType: !8332, offset: 128)
!8332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !415, elements: !1999)
!8333 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !8153, file: !333, line: 452, baseType: !8334, size: 64, offset: 1408)
!8334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8335, size: 64)
!8335 = !DISubroutineType(types: !8336)
!8336 = !{null, !372, !784, !7823}
!8337 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !8153, file: !333, line: 453, baseType: !8338, size: 64, offset: 1472)
!8338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8339, size: 64)
!8339 = !DISubroutineType(types: !8340)
!8340 = !{!72, !372, !332}
!8341 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !8153, file: !333, line: 454, baseType: !8342, size: 64, offset: 1536)
!8342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8343, size: 64)
!8343 = !DISubroutineType(types: !8344)
!8344 = !{null, !372, !8345, !3481}
!8345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8346, size: 64)
!8346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !291, line: 789, size: 64, elements: !8347)
!8347 = !{!8348, !8349, !8350}
!8348 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8346, file: !291, line: 790, baseType: !545, size: 32)
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !8346, file: !291, line: 791, baseType: !545, size: 32, offset: 32)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8346, file: !291, line: 792, baseType: !8332, offset: 64)
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !8153, file: !333, line: 456, baseType: !483, size: 64, offset: 1600)
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !8153, file: !333, line: 457, baseType: !487, size: 64, offset: 1664)
!8353 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !8153, file: !333, line: 458, baseType: !8205, size: 64, offset: 1728)
!8354 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !8153, file: !333, line: 459, baseType: !8355, size: 64, offset: 1792)
!8355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8356, size: 64)
!8356 = !DISubroutineType(types: !8357)
!8357 = !{!72, !372, !784}
!8358 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !8153, file: !333, line: 460, baseType: !7758, size: 64, offset: 1856)
!8359 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !8153, file: !333, line: 461, baseType: !8360, size: 64, offset: 1920)
!8360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8361, size: 64)
!8361 = !DISubroutineType(types: !8362)
!8362 = !{!72, !372, !8363, !1537}
!8363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8364, size: 64)
!8364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !291, line: 1088, size: 1536, elements: !8365)
!8365 = !{!8366, !8367, !8368, !8369, !8455, !8460}
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8364, file: !291, line: 1089, baseType: !545, size: 32)
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8364, file: !291, line: 1090, baseType: !545, size: 32, offset: 32)
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8364, file: !291, line: 1091, baseType: !415, size: 64, offset: 64)
!8369 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !8364, file: !291, line: 1092, baseType: !8370, size: 1344, offset: 128)
!8370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !291, line: 992, size: 1344, elements: !8371)
!8371 = !{!8372, !8373, !8441, !8451, !8452, !8453, !8454}
!8372 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8370, file: !291, line: 993, baseType: !545, size: 32)
!8373 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !8370, file: !291, line: 994, baseType: !8374, size: 416, offset: 32)
!8374 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !291, line: 939, size: 416, elements: !8375)
!8375 = !{!8376, !8384, !8385, !8386, !8393, !8394, !8403, !8411, !8412, !8413, !8420, !8421, !8429, !8437}
!8376 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !8374, file: !291, line: 940, baseType: !8377, size: 128)
!8377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !291, line: 845, size: 128, elements: !8378)
!8378 = !{!8379, !8380, !8381, !8382, !8383}
!8379 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8377, file: !291, line: 846, baseType: !543, size: 32)
!8380 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8377, file: !291, line: 847, baseType: !543, size: 32, offset: 32)
!8381 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !8377, file: !291, line: 848, baseType: !566, size: 16, offset: 64)
!8382 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !8377, file: !291, line: 849, baseType: !566, size: 16, offset: 80)
!8383 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8377, file: !291, line: 850, baseType: !1475, size: 8, offset: 96)
!8384 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !8374, file: !291, line: 941, baseType: !8377, size: 128)
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !8374, file: !291, line: 942, baseType: !8377, size: 128)
!8386 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !8374, file: !291, line: 943, baseType: !8387, size: 128)
!8387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !291, line: 862, size: 128, elements: !8388)
!8388 = !{!8389, !8390, !8391, !8392}
!8389 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8387, file: !291, line: 863, baseType: !543, size: 32)
!8390 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8387, file: !291, line: 864, baseType: !543, size: 32, offset: 32)
!8391 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !8387, file: !291, line: 865, baseType: !543, size: 32, offset: 64)
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8387, file: !291, line: 866, baseType: !1475, size: 8, offset: 96)
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !8374, file: !291, line: 944, baseType: !8387, size: 128)
!8394 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !8374, file: !291, line: 945, baseType: !8395, size: 128)
!8395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !291, line: 880, size: 128, elements: !8396)
!8396 = !{!8397, !8398, !8399, !8400, !8401, !8402}
!8397 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8395, file: !291, line: 881, baseType: !543, size: 32)
!8398 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8395, file: !291, line: 882, baseType: !543, size: 32, offset: 32)
!8399 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !8395, file: !291, line: 883, baseType: !543, size: 32, offset: 64)
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8395, file: !291, line: 884, baseType: !1475, size: 8, offset: 96)
!8401 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !8395, file: !291, line: 885, baseType: !1475, size: 8, offset: 104)
!8402 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !8395, file: !291, line: 886, baseType: !1475, size: 8, offset: 112)
!8403 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !8374, file: !291, line: 946, baseType: !8404, size: 320)
!8404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !291, line: 899, size: 320, elements: !8405)
!8405 = !{!8406, !8407, !8408, !8409, !8410}
!8406 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8404, file: !291, line: 900, baseType: !2311, size: 128)
!8407 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8404, file: !291, line: 901, baseType: !2311, size: 128, offset: 128)
!8408 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !8404, file: !291, line: 902, baseType: !566, size: 16, offset: 256)
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !8404, file: !291, line: 903, baseType: !566, size: 16, offset: 272)
!8410 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8404, file: !291, line: 904, baseType: !1475, size: 8, offset: 288)
!8411 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !8374, file: !291, line: 947, baseType: !8404, size: 320)
!8412 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !8374, file: !291, line: 948, baseType: !8404, size: 320)
!8413 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !8374, file: !291, line: 949, baseType: !8414, size: 320)
!8414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !291, line: 916, size: 320, elements: !8415)
!8415 = !{!8416, !8417, !8418, !8419}
!8416 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8414, file: !291, line: 917, baseType: !2311, size: 128)
!8417 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8414, file: !291, line: 918, baseType: !2311, size: 128, offset: 128)
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !8414, file: !291, line: 919, baseType: !543, size: 32, offset: 256)
!8419 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8414, file: !291, line: 920, baseType: !1475, size: 8, offset: 288)
!8420 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !8374, file: !291, line: 950, baseType: !8414, size: 320)
!8421 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !8374, file: !291, line: 951, baseType: !8422, size: 320)
!8422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !291, line: 931, size: 320, elements: !8423)
!8423 = !{!8424, !8425, !8426, !8427, !8428}
!8424 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8422, file: !291, line: 932, baseType: !2311, size: 128)
!8425 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8422, file: !291, line: 933, baseType: !2311, size: 128, offset: 128)
!8426 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !8422, file: !291, line: 934, baseType: !543, size: 32, offset: 256)
!8427 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8422, file: !291, line: 935, baseType: !1475, size: 8, offset: 288)
!8428 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !8422, file: !291, line: 936, baseType: !1475, size: 8, offset: 296)
!8429 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !8374, file: !291, line: 952, baseType: !8430, size: 112)
!8430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !8431, line: 164, size: 112, elements: !8432)
!8431 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!8432 = !{!8433, !8435, !8436}
!8433 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !8430, file: !8431, line: 165, baseType: !8434, size: 48)
!8434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 48, elements: !1748)
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !8430, file: !8431, line: 166, baseType: !8434, size: 48, offset: 48)
!8436 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !8430, file: !8431, line: 167, baseType: !566, size: 16, offset: 96)
!8437 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !8374, file: !291, line: 953, baseType: !8438, size: 416)
!8438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1475, size: 416, elements: !8439)
!8439 = !{!8440}
!8440 = !DISubrange(count: 52)
!8441 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !8370, file: !291, line: 995, baseType: !8442, size: 160, offset: 448)
!8442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !291, line: 967, size: 160, elements: !8443)
!8443 = !{!8444, !8446, !8447, !8448, !8449}
!8444 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !8442, file: !291, line: 968, baseType: !8445, size: 16)
!8445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1475, size: 16, elements: !555)
!8446 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !8442, file: !291, line: 969, baseType: !8434, size: 48, offset: 16)
!8447 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !8442, file: !291, line: 970, baseType: !566, size: 16, offset: 64)
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !8442, file: !291, line: 971, baseType: !566, size: 16, offset: 80)
!8449 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8442, file: !291, line: 972, baseType: !8450, size: 64, offset: 96)
!8450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !543, size: 64, elements: !555)
!8451 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !8370, file: !291, line: 996, baseType: !8374, size: 416, offset: 608)
!8452 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !8370, file: !291, line: 997, baseType: !8442, size: 160, offset: 1024)
!8453 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !8370, file: !291, line: 998, baseType: !415, size: 64, offset: 1216)
!8454 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !8370, file: !291, line: 999, baseType: !545, size: 32, offset: 1280)
!8455 = !DIDerivedType(tag: DW_TAG_member, scope: !8364, file: !291, line: 1093, baseType: !8456, size: 32, offset: 1472)
!8456 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8364, file: !291, line: 1093, size: 32, elements: !8457)
!8457 = !{!8458, !8459}
!8458 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !8456, file: !291, line: 1094, baseType: !545, size: 32)
!8459 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !8456, file: !291, line: 1095, baseType: !545, size: 32)
!8460 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !8364, file: !291, line: 1097, baseType: !7551, offset: 1504)
!8461 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !8153, file: !333, line: 463, baseType: !8462, size: 64, offset: 1984)
!8462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8463, size: 64)
!8463 = !DISubroutineType(types: !8464)
!8464 = !{!72, !372, !8363}
!8465 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !8153, file: !333, line: 464, baseType: !8466, size: 64, offset: 2048)
!8466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8467, size: 64)
!8467 = !DISubroutineType(types: !8468)
!8468 = !{!72, !372, !8469}
!8469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8470, size: 64)
!8470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !291, line: 1217, size: 1088, elements: !8471)
!8471 = !{!8472, !8473, !8474}
!8472 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8470, file: !291, line: 1218, baseType: !545, size: 32)
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !8470, file: !291, line: 1219, baseType: !545, size: 32, offset: 32)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8470, file: !291, line: 1220, baseType: !3133, size: 1024, offset: 64)
!8475 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !8153, file: !333, line: 465, baseType: !8476, size: 64, offset: 2112)
!8476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8477, size: 64)
!8477 = !DISubroutineType(types: !8478)
!8478 = !{!72, !372, !1537}
!8479 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !8153, file: !333, line: 466, baseType: !8205, size: 64, offset: 2176)
!8480 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !8153, file: !333, line: 467, baseType: !8205, size: 64, offset: 2240)
!8481 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !8153, file: !333, line: 468, baseType: !8482, size: 64, offset: 2304)
!8482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8483, size: 64)
!8483 = !DISubroutineType(types: !8484)
!8484 = !{!72, !372, !1537, !7823, !7823}
!8485 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !8153, file: !333, line: 470, baseType: !8486, size: 64, offset: 2368)
!8486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8487, size: 64)
!8487 = !DISubroutineType(types: !8488)
!8488 = !{!72, !372, !4723, !8489, !8490}
!8489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8490, size: 64)
!8490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1474)
!8491 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !8153, file: !333, line: 472, baseType: !8492, size: 64, offset: 2432)
!8492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8493, size: 64)
!8493 = !DISubroutineType(types: !8494)
!8494 = !{!72, !372, !1537, !7823, !7823, !784}
!8495 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !8153, file: !333, line: 474, baseType: !8496, size: 64, offset: 2496)
!8496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8497, size: 64)
!8497 = !DISubroutineType(types: !8498)
!8498 = !{!72, !372, !4723, !8489, !8490, !1537, !617}
!8499 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !8153, file: !333, line: 477, baseType: !8500, size: 64, offset: 2560)
!8500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8501, size: 64)
!8501 = !DISubroutineType(types: !8502)
!8502 = !{null, !372, !8503}
!8503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8504, size: 64)
!8504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !291, line: 541, size: 288, elements: !8505)
!8505 = !{!8506, !8507, !8508, !8509, !8510, !8511, !8512, !8513, !8514}
!8506 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8504, file: !291, line: 542, baseType: !545, size: 32)
!8507 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !8504, file: !291, line: 543, baseType: !545, size: 32, offset: 32)
!8508 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !8504, file: !291, line: 544, baseType: !545, size: 32, offset: 64)
!8509 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !8504, file: !291, line: 545, baseType: !545, size: 32, offset: 96)
!8510 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !8504, file: !291, line: 546, baseType: !545, size: 32, offset: 128)
!8511 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !8504, file: !291, line: 547, baseType: !545, size: 32, offset: 160)
!8512 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !8504, file: !291, line: 548, baseType: !545, size: 32, offset: 192)
!8513 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !8504, file: !291, line: 549, baseType: !545, size: 32, offset: 224)
!8514 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !8504, file: !291, line: 550, baseType: !545, size: 32, offset: 256)
!8515 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !8153, file: !333, line: 478, baseType: !8516, size: 64, offset: 2624)
!8516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8517, size: 64)
!8517 = !DISubroutineType(types: !8518)
!8518 = !{!72, !372, !8503}
!8519 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !8153, file: !333, line: 479, baseType: !8520, size: 64, offset: 2688)
!8520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8521, size: 64)
!8521 = !DISubroutineType(types: !8522)
!8522 = !{!72, !372, !8523}
!8523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8524, size: 64)
!8524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !291, line: 1237, size: 128, elements: !8525)
!8525 = !{!8526, !8527, !8528, !8529, !8530}
!8526 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8524, file: !291, line: 1238, baseType: !545, size: 32)
!8527 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8524, file: !291, line: 1239, baseType: !545, size: 32, offset: 32)
!8528 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8524, file: !291, line: 1240, baseType: !545, size: 32, offset: 64)
!8529 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8524, file: !291, line: 1241, baseType: !545, size: 32, offset: 96)
!8530 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8524, file: !291, line: 1242, baseType: !7543, offset: 128)
!8531 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !8153, file: !333, line: 480, baseType: !8532, size: 64, offset: 2752)
!8532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8533, size: 64)
!8533 = !DISubroutineType(types: !8534)
!8534 = !{!72, !372, !8523, !647}
!8535 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !8153, file: !333, line: 482, baseType: !8520, size: 64, offset: 2816)
!8536 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !8153, file: !333, line: 483, baseType: !8537, size: 64, offset: 2880)
!8537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8538, size: 64)
!8538 = !DISubroutineType(types: !8539)
!8539 = !{!72, !372, !8540}
!8540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8541, size: 64)
!8541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !291, line: 1317, size: 352, elements: !8542)
!8542 = !{!8543, !8544, !8545, !8546, !8547, !8549, !8550}
!8543 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8541, file: !291, line: 1318, baseType: !545, size: 32)
!8544 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !8541, file: !291, line: 1319, baseType: !545, size: 32, offset: 32)
!8545 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !8541, file: !291, line: 1320, baseType: !1567, size: 32, offset: 64)
!8546 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !8541, file: !291, line: 1321, baseType: !545, size: 32, offset: 96)
!8547 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !8541, file: !291, line: 1322, baseType: !8548, size: 96, offset: 128)
!8548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !545, size: 96, elements: !944)
!8549 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !8541, file: !291, line: 1323, baseType: !545, size: 32, offset: 224)
!8550 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !8541, file: !291, line: 1324, baseType: !8548, size: 96, offset: 256)
!8551 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !8153, file: !333, line: 484, baseType: !8552, size: 64, offset: 2944)
!8552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8553, size: 64)
!8553 = !DISubroutineType(types: !8554)
!8554 = !{!72, !372, !8555}
!8555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8556, size: 64)
!8556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !291, line: 382, size: 352, elements: !8557)
!8557 = !{!8558, !8559, !8560, !8561}
!8558 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8556, file: !291, line: 383, baseType: !545, size: 32)
!8559 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8556, file: !291, line: 384, baseType: !545, size: 32, offset: 32)
!8560 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !8556, file: !291, line: 385, baseType: !545, size: 32, offset: 64)
!8561 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8556, file: !291, line: 386, baseType: !8562, size: 256, offset: 96)
!8562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !545, size: 256, elements: !1448)
!8563 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !8153, file: !333, line: 486, baseType: !8233, size: 64, offset: 3008)
!8564 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !8153, file: !333, line: 488, baseType: !8565, size: 64, offset: 3072)
!8565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8566, size: 64)
!8566 = !DISubroutineType(types: !8567)
!8567 = !{!72, !372, !8568}
!8568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8569, size: 64)
!8569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !291, line: 360, size: 320, elements: !8570)
!8570 = !{!8571, !8572, !8573, !8574, !8575, !8576, !8577, !8578, !8579}
!8571 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8569, file: !291, line: 361, baseType: !545, size: 32)
!8572 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8569, file: !291, line: 362, baseType: !545, size: 32, offset: 32)
!8573 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !8569, file: !291, line: 363, baseType: !545, size: 32, offset: 64)
!8574 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !8569, file: !291, line: 364, baseType: !545, size: 32, offset: 96)
!8575 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !8569, file: !291, line: 365, baseType: !545, size: 32, offset: 128)
!8576 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !8569, file: !291, line: 366, baseType: !545, size: 32, offset: 160)
!8577 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !8569, file: !291, line: 367, baseType: !545, size: 32, offset: 192)
!8578 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !8569, file: !291, line: 368, baseType: !545, size: 32, offset: 224)
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8569, file: !291, line: 369, baseType: !1690, size: 64, offset: 256)
!8580 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !8153, file: !333, line: 489, baseType: !8565, size: 64, offset: 3136)
!8581 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !8153, file: !333, line: 490, baseType: !8582, size: 64, offset: 3200)
!8582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8583, size: 64)
!8583 = !DISubroutineType(types: !8584)
!8584 = !{!72, !372, !8585, !647}
!8585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8586, size: 64)
!8586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8587)
!8587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !291, line: 244, size: 128, elements: !8588)
!8588 = !{!8589, !8590, !8591, !8592, !8593}
!8589 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8587, file: !291, line: 245, baseType: !545, size: 32)
!8590 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8587, file: !291, line: 246, baseType: !545, size: 32, offset: 32)
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !8587, file: !291, line: 247, baseType: !545, size: 32, offset: 64)
!8592 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8587, file: !291, line: 248, baseType: !545, size: 32, offset: 96)
!8593 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8587, file: !291, line: 249, baseType: !8594, offset: 128)
!8594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, elements: !1999)
!8595 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !8153, file: !333, line: 492, baseType: !8596, size: 64, offset: 3264)
!8596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8597, size: 64)
!8597 = !DISubroutineType(types: !8598)
!8598 = !{!72, !372, !8585, !2340}
!8599 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !8153, file: !333, line: 494, baseType: !8600, size: 64, offset: 3328)
!8600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8601, size: 64)
!8601 = !DISubroutineType(types: !8602)
!8602 = !{!72, !372, !784, !8249}
!8603 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !8153, file: !333, line: 496, baseType: !8600, size: 64, offset: 3392)
!8604 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !8153, file: !333, line: 498, baseType: !8605, size: 64, offset: 3456)
!8605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8606, size: 64)
!8606 = !DISubroutineType(types: !8607)
!8607 = !{!72, !372, !8608}
!8608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8609, size: 64)
!8609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !333, line: 124, size: 768, elements: !8610)
!8610 = !{!8611, !8635}
!8611 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8609, file: !333, line: 125, baseType: !8612, size: 384)
!8612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !291, line: 1996, size: 384, elements: !8613)
!8613 = !{!8614, !8615, !8616, !8617, !8618, !8619, !8620, !8621, !8622, !8623, !8625, !8626, !8627, !8628, !8630, !8634}
!8614 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8612, file: !291, line: 1997, baseType: !545, size: 32)
!8615 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !8612, file: !291, line: 1998, baseType: !545, size: 32, offset: 32)
!8616 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !8612, file: !291, line: 1999, baseType: !1475, size: 8, offset: 64)
!8617 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8612, file: !291, line: 2000, baseType: !1475, size: 8, offset: 72)
!8618 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !8612, file: !291, line: 2001, baseType: !1475, size: 8, offset: 80)
!8619 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8612, file: !291, line: 2002, baseType: !1475, size: 8, offset: 88)
!8620 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !8612, file: !291, line: 2003, baseType: !1475, size: 8, offset: 96)
!8621 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !8612, file: !291, line: 2004, baseType: !1475, size: 8, offset: 104)
!8622 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !8612, file: !291, line: 2005, baseType: !1475, size: 8, offset: 112)
!8623 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !8612, file: !291, line: 2006, baseType: !8624, size: 8, offset: 120)
!8624 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !416, line: 20, baseType: !6904)
!8625 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !8612, file: !291, line: 2007, baseType: !1475, size: 8, offset: 128)
!8626 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !8612, file: !291, line: 2008, baseType: !1475, size: 8, offset: 136)
!8627 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !8612, file: !291, line: 2009, baseType: !1475, size: 8, offset: 144)
!8628 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !8612, file: !291, line: 2010, baseType: !8629, size: 8, offset: 152)
!8629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1475, size: 8, elements: !1493)
!8630 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8612, file: !291, line: 2011, baseType: !8631, size: 224, offset: 160)
!8631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !545, size: 224, elements: !8632)
!8632 = !{!8633}
!8633 = !DISubrange(count: 7)
!8634 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !8612, file: !291, line: 2012, baseType: !7551, offset: 384)
!8635 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !8609, file: !333, line: 130, baseType: !8636, size: 384, offset: 384)
!8636 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8609, file: !333, line: 126, size: 384, elements: !8637)
!8637 = !{!8638, !8640, !8641}
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8636, file: !333, line: 127, baseType: !8639, size: 128)
!8639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 128, elements: !555)
!8640 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !8636, file: !333, line: 128, baseType: !8639, size: 128, offset: 128)
!8641 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !8636, file: !333, line: 129, baseType: !8639, size: 128, offset: 256)
!8642 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !8153, file: !333, line: 500, baseType: !8643, size: 64, offset: 3520)
!8643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8644, size: 64)
!8644 = !DISubroutineType(types: !8645)
!8645 = !{!72, !372, !8646}
!8646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8647, size: 64)
!8647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8609)
!8648 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !8153, file: !333, line: 502, baseType: !8649, size: 64, offset: 3584)
!8649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8650, size: 64)
!8650 = !DISubroutineType(types: !8651)
!8651 = !{!72, !372, !8652}
!8652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8653, size: 64)
!8653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !291, line: 1389, size: 128, elements: !8654)
!8654 = !{!8655, !8656, !8657, !8658}
!8655 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8653, file: !291, line: 1390, baseType: !545, size: 32)
!8656 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !8653, file: !291, line: 1392, baseType: !545, size: 32, offset: 32)
!8657 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !8653, file: !291, line: 1393, baseType: !545, size: 32, offset: 64)
!8658 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8653, file: !291, line: 1394, baseType: !545, size: 32, offset: 96)
!8659 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !8153, file: !333, line: 504, baseType: !8649, size: 64, offset: 3648)
!8660 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !8153, file: !333, line: 506, baseType: !8342, size: 64, offset: 3712)
!8661 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !8153, file: !333, line: 508, baseType: !8582, size: 64, offset: 3776)
!8662 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !8153, file: !333, line: 510, baseType: !8596, size: 64, offset: 3840)
!8663 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !346, file: !71, line: 1922, baseType: !8664, size: 64, offset: 4096)
!8664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8665, size: 64)
!8665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8666)
!8666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !8667, line: 202, size: 384, elements: !8668)
!8667 = !DIFile(filename: "./include/net/ndisc.h", directory: "/home/lizy2001/genbc/linux")
!8668 = !{!8669, !8673, !8691, !8697, !8702, !8706}
!8669 = !DIDerivedType(tag: DW_TAG_member, name: "is_useropt", scope: !8666, file: !8667, line: 203, baseType: !8670, size: 64)
!8670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8671, size: 64)
!8671 = !DISubroutineType(types: !8672)
!8672 = !{!72, !1474}
!8673 = !DIDerivedType(tag: DW_TAG_member, name: "parse_options", scope: !8666, file: !8667, line: 204, baseType: !8674, size: 64, offset: 64)
!8674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8675, size: 64)
!8675 = !DISubroutineType(types: !8676)
!8676 = !{!72, !2825, !8677, !8682}
!8677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8678, size: 64)
!8678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nd_opt_hdr", file: !8667, line: 105, size: 16, elements: !8679)
!8679 = !{!8680, !8681}
!8680 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_type", scope: !8678, file: !8667, line: 106, baseType: !1475, size: 8)
!8681 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_len", scope: !8678, file: !8667, line: 107, baseType: !1475, size: 8, offset: 8)
!8682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8683, size: 64)
!8683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_options", file: !8667, line: 111, size: 1088, elements: !8684)
!8684 = !{!8685, !8689, !8690}
!8685 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_array", scope: !8683, file: !8667, line: 112, baseType: !8686, size: 960)
!8686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8677, size: 960, elements: !8687)
!8687 = !{!8688}
!8688 = !DISubrange(count: 15)
!8689 = !DIDerivedType(tag: DW_TAG_member, name: "nd_useropts", scope: !8683, file: !8667, line: 117, baseType: !8677, size: 64, offset: 960)
!8690 = !DIDerivedType(tag: DW_TAG_member, name: "nd_useropts_end", scope: !8683, file: !8667, line: 118, baseType: !8677, size: 64, offset: 1024)
!8691 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !8666, file: !8667, line: 207, baseType: !8692, size: 64, offset: 128)
!8692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8693, size: 64)
!8693 = !DISubroutineType(types: !8694)
!8694 = !{null, !2825, !2808, !784, !1474, !8695}
!8695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8696, size: 64)
!8696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8683)
!8697 = !DIDerivedType(tag: DW_TAG_member, name: "opt_addr_space", scope: !8666, file: !8667, line: 210, baseType: !8698, size: 64, offset: 192)
!8698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8699, size: 64)
!8699 = !DISubroutineType(types: !8700)
!8700 = !{!72, !2825, !1474, !2808, !7823, !8701}
!8701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7823, size: 64)
!8702 = !DIDerivedType(tag: DW_TAG_member, name: "fill_addr_option", scope: !8666, file: !8667, line: 213, baseType: !8703, size: 64, offset: 256)
!8703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8704, size: 64)
!8704 = !DISubroutineType(types: !8705)
!8705 = !{null, !2825, !497, !1474, !8489}
!8706 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_rcv_add_addr", scope: !8666, file: !8667, line: 216, baseType: !8707, size: 64, offset: 320)
!8707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8708, size: 64)
!8708 = !DISubroutineType(types: !8709)
!8709 = !{null, !2039, !372, !8710, !8713, !8803, !72, !784, !617, !617, !545, !784, !617}
!8710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8711, size: 64)
!8711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8712)
!8712 = !DICompositeType(tag: DW_TAG_structure_type, name: "prefix_info", file: !8667, line: 77, flags: DIFlagFwdDecl)
!8713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8714, size: 64)
!8714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !8715, line: 163, size: 4544, elements: !8716)
!8715 = !DIFile(filename: "./include/net/if_inet6.h", directory: "/home/lizy2001/genbc/linux")
!8716 = !{!8717, !8718, !8719, !8747, !8748, !8749, !8750, !8751, !8752, !8753, !8754, !8755, !8756, !8757, !8758, !8759, !8760, !8773, !8774, !8775, !8776, !8777, !8778, !8779, !8780, !8781, !8782, !8798, !8799, !8800, !8801, !8802}
!8717 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8714, file: !8715, line: 164, baseType: !372, size: 64)
!8718 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list", scope: !8714, file: !8715, line: 166, baseType: !366, size: 128, offset: 64)
!8719 = !DIDerivedType(tag: DW_TAG_member, name: "mc_list", scope: !8714, file: !8715, line: 168, baseType: !8720, size: 64, offset: 192)
!8720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8721, size: 64)
!8721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmcaddr6", file: !8715, line: 114, size: 1152, elements: !8722)
!8722 = !{!8723, !8724, !8725, !8726, !8736, !8737, !8738, !8739, !8740, !8741, !8742, !8743, !8744, !8745, !8746}
!8723 = !DIDerivedType(tag: DW_TAG_member, name: "mca_addr", scope: !8721, file: !8715, line: 115, baseType: !2300, size: 128)
!8724 = !DIDerivedType(tag: DW_TAG_member, name: "idev", scope: !8721, file: !8715, line: 116, baseType: !8713, size: 64, offset: 128)
!8725 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8721, file: !8715, line: 117, baseType: !8720, size: 64, offset: 192)
!8726 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sources", scope: !8721, file: !8715, line: 118, baseType: !8727, size: 64, offset: 256)
!8727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8728, size: 64)
!8728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip6_sf_list", file: !8715, line: 99, size: 384, elements: !8729)
!8729 = !{!8730, !8731, !8732, !8733, !8734, !8735}
!8730 = !DIDerivedType(tag: DW_TAG_member, name: "sf_next", scope: !8728, file: !8715, line: 100, baseType: !8727, size: 64)
!8731 = !DIDerivedType(tag: DW_TAG_member, name: "sf_addr", scope: !8728, file: !8715, line: 101, baseType: !2300, size: 128, offset: 64)
!8732 = !DIDerivedType(tag: DW_TAG_member, name: "sf_count", scope: !8728, file: !8715, line: 102, baseType: !8639, size: 128, offset: 192)
!8733 = !DIDerivedType(tag: DW_TAG_member, name: "sf_gsresp", scope: !8728, file: !8715, line: 103, baseType: !571, size: 8, offset: 320)
!8734 = !DIDerivedType(tag: DW_TAG_member, name: "sf_oldin", scope: !8728, file: !8715, line: 104, baseType: !571, size: 8, offset: 328)
!8735 = !DIDerivedType(tag: DW_TAG_member, name: "sf_crcount", scope: !8728, file: !8715, line: 105, baseType: !571, size: 8, offset: 336)
!8736 = !DIDerivedType(tag: DW_TAG_member, name: "mca_tomb", scope: !8721, file: !8715, line: 119, baseType: !8727, size: 64, offset: 320)
!8737 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sfmode", scope: !8721, file: !8715, line: 120, baseType: !7, size: 32, offset: 384)
!8738 = !DIDerivedType(tag: DW_TAG_member, name: "mca_crcount", scope: !8721, file: !8715, line: 121, baseType: !571, size: 8, offset: 416)
!8739 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sfcount", scope: !8721, file: !8715, line: 122, baseType: !8639, size: 128, offset: 448)
!8740 = !DIDerivedType(tag: DW_TAG_member, name: "mca_timer", scope: !8721, file: !8715, line: 123, baseType: !2317, size: 320, offset: 576)
!8741 = !DIDerivedType(tag: DW_TAG_member, name: "mca_flags", scope: !8721, file: !8715, line: 124, baseType: !7, size: 32, offset: 896)
!8742 = !DIDerivedType(tag: DW_TAG_member, name: "mca_users", scope: !8721, file: !8715, line: 125, baseType: !72, size: 32, offset: 928)
!8743 = !DIDerivedType(tag: DW_TAG_member, name: "mca_refcnt", scope: !8721, file: !8715, line: 126, baseType: !1348, size: 32, offset: 960)
!8744 = !DIDerivedType(tag: DW_TAG_member, name: "mca_lock", scope: !8721, file: !8715, line: 127, baseType: !806, offset: 992)
!8745 = !DIDerivedType(tag: DW_TAG_member, name: "mca_cstamp", scope: !8721, file: !8715, line: 128, baseType: !394, size: 64, offset: 1024)
!8746 = !DIDerivedType(tag: DW_TAG_member, name: "mca_tstamp", scope: !8721, file: !8715, line: 129, baseType: !394, size: 64, offset: 1088)
!8747 = !DIDerivedType(tag: DW_TAG_member, name: "mc_tomb", scope: !8714, file: !8715, line: 169, baseType: !8720, size: 64, offset: 256)
!8748 = !DIDerivedType(tag: DW_TAG_member, name: "mc_lock", scope: !8714, file: !8715, line: 170, baseType: !806, offset: 320)
!8749 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qrv", scope: !8714, file: !8715, line: 172, baseType: !571, size: 8, offset: 320)
!8750 = !DIDerivedType(tag: DW_TAG_member, name: "mc_gq_running", scope: !8714, file: !8715, line: 173, baseType: !571, size: 8, offset: 328)
!8751 = !DIDerivedType(tag: DW_TAG_member, name: "mc_ifc_count", scope: !8714, file: !8715, line: 174, baseType: !571, size: 8, offset: 336)
!8752 = !DIDerivedType(tag: DW_TAG_member, name: "mc_dad_count", scope: !8714, file: !8715, line: 175, baseType: !571, size: 8, offset: 344)
!8753 = !DIDerivedType(tag: DW_TAG_member, name: "mc_v1_seen", scope: !8714, file: !8715, line: 177, baseType: !394, size: 64, offset: 384)
!8754 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qi", scope: !8714, file: !8715, line: 178, baseType: !394, size: 64, offset: 448)
!8755 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qri", scope: !8714, file: !8715, line: 179, baseType: !394, size: 64, offset: 512)
!8756 = !DIDerivedType(tag: DW_TAG_member, name: "mc_maxdelay", scope: !8714, file: !8715, line: 180, baseType: !394, size: 64, offset: 576)
!8757 = !DIDerivedType(tag: DW_TAG_member, name: "mc_gq_timer", scope: !8714, file: !8715, line: 182, baseType: !2317, size: 320, offset: 640)
!8758 = !DIDerivedType(tag: DW_TAG_member, name: "mc_ifc_timer", scope: !8714, file: !8715, line: 183, baseType: !2317, size: 320, offset: 960)
!8759 = !DIDerivedType(tag: DW_TAG_member, name: "mc_dad_timer", scope: !8714, file: !8715, line: 184, baseType: !2317, size: 320, offset: 1280)
!8760 = !DIDerivedType(tag: DW_TAG_member, name: "ac_list", scope: !8714, file: !8715, line: 186, baseType: !8761, size: 64, offset: 1600)
!8761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8762, size: 64)
!8762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifacaddr6", file: !8715, line: 140, size: 704, elements: !8763)
!8763 = !{!8764, !8765, !8766, !8767, !8768, !8769, !8770, !8771, !8772}
!8764 = !DIDerivedType(tag: DW_TAG_member, name: "aca_addr", scope: !8762, file: !8715, line: 141, baseType: !2300, size: 128)
!8765 = !DIDerivedType(tag: DW_TAG_member, name: "aca_rt", scope: !8762, file: !8715, line: 142, baseType: !2708, size: 64, offset: 128)
!8766 = !DIDerivedType(tag: DW_TAG_member, name: "aca_next", scope: !8762, file: !8715, line: 143, baseType: !8761, size: 64, offset: 192)
!8767 = !DIDerivedType(tag: DW_TAG_member, name: "aca_addr_lst", scope: !8762, file: !8715, line: 144, baseType: !358, size: 128, offset: 256)
!8768 = !DIDerivedType(tag: DW_TAG_member, name: "aca_users", scope: !8762, file: !8715, line: 145, baseType: !72, size: 32, offset: 384)
!8769 = !DIDerivedType(tag: DW_TAG_member, name: "aca_refcnt", scope: !8762, file: !8715, line: 146, baseType: !1348, size: 32, offset: 416)
!8770 = !DIDerivedType(tag: DW_TAG_member, name: "aca_cstamp", scope: !8762, file: !8715, line: 147, baseType: !394, size: 64, offset: 448)
!8771 = !DIDerivedType(tag: DW_TAG_member, name: "aca_tstamp", scope: !8762, file: !8715, line: 148, baseType: !394, size: 64, offset: 512)
!8772 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8762, file: !8715, line: 149, baseType: !381, size: 128, align: 64, offset: 576)
!8773 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8714, file: !8715, line: 187, baseType: !2915, offset: 1664)
!8774 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8714, file: !8715, line: 188, baseType: !1348, size: 32, offset: 1664)
!8775 = !DIDerivedType(tag: DW_TAG_member, name: "if_flags", scope: !8714, file: !8715, line: 189, baseType: !545, size: 32, offset: 1696)
!8776 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !8714, file: !8715, line: 190, baseType: !72, size: 32, offset: 1728)
!8777 = !DIDerivedType(tag: DW_TAG_member, name: "desync_factor", scope: !8714, file: !8715, line: 192, baseType: !784, size: 32, offset: 1760)
!8778 = !DIDerivedType(tag: DW_TAG_member, name: "tempaddr_list", scope: !8714, file: !8715, line: 193, baseType: !366, size: 128, offset: 1792)
!8779 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !8714, file: !8715, line: 195, baseType: !2300, size: 128, offset: 1920)
!8780 = !DIDerivedType(tag: DW_TAG_member, name: "nd_parms", scope: !8714, file: !8715, line: 197, baseType: !2952, size: 64, offset: 2048)
!8781 = !DIDerivedType(tag: DW_TAG_member, name: "cnf", scope: !8714, file: !8715, line: 198, baseType: !2652, size: 1600, offset: 2112)
!8782 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8714, file: !8715, line: 199, baseType: !8783, size: 256, offset: 3712)
!8783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devstat", file: !8715, line: 156, size: 256, elements: !8784)
!8784 = !{!8785, !8786, !8787, !8793}
!8785 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir_entry", scope: !8783, file: !8715, line: 157, baseType: !2074, size: 64)
!8786 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !8783, file: !8715, line: 158, baseType: !2126, size: 64, offset: 64)
!8787 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6dev", scope: !8783, file: !8715, line: 159, baseType: !8788, size: 64, offset: 128)
!8788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8789, size: 64)
!8789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib_device", file: !2121, line: 75, size: 384, elements: !8790)
!8790 = !{!8791}
!8791 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !8789, file: !2121, line: 76, baseType: !8792, size: 384)
!8792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 384, elements: !1748)
!8793 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msgdev", scope: !8783, file: !8715, line: 160, baseType: !8794, size: 64, offset: 192)
!8794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8795, size: 64)
!8795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib_device", file: !2121, line: 85, size: 32768, elements: !8796)
!8796 = !{!8797}
!8797 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !8795, file: !2121, line: 86, baseType: !2166, size: 32768)
!8798 = !DIDerivedType(tag: DW_TAG_member, name: "rs_timer", scope: !8714, file: !8715, line: 201, baseType: !2317, size: 320, offset: 3968)
!8799 = !DIDerivedType(tag: DW_TAG_member, name: "rs_interval", scope: !8714, file: !8715, line: 202, baseType: !1567, size: 32, offset: 4288)
!8800 = !DIDerivedType(tag: DW_TAG_member, name: "rs_probes", scope: !8714, file: !8715, line: 203, baseType: !1475, size: 8, offset: 4320)
!8801 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !8714, file: !8715, line: 205, baseType: !394, size: 64, offset: 4352)
!8802 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8714, file: !8715, line: 206, baseType: !381, size: 128, align: 64, offset: 4416)
!8803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!8804 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !346, file: !71, line: 1933, baseType: !8805, size: 64, offset: 4160)
!8805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8806, size: 64)
!8806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8807)
!8807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !71, line: 270, size: 384, elements: !8808)
!8808 = !{!8809, !8813, !8819, !8824, !8828, !8832}
!8809 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !8807, file: !71, line: 271, baseType: !8810, size: 64)
!8810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8811, size: 64)
!8811 = !DISubroutineType(types: !8812)
!8812 = !{!72, !497, !372, !554, !2340, !2340, !7}
!8813 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !8807, file: !71, line: 274, baseType: !8814, size: 64, offset: 64)
!8814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8815, size: 64)
!8815 = !DISubroutineType(types: !8816)
!8816 = !{!72, !8817, !6907}
!8817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8818, size: 64)
!8818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !498)
!8819 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !8807, file: !71, line: 275, baseType: !8820, size: 64, offset: 128)
!8820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8821, size: 64)
!8821 = !DISubroutineType(types: !8822)
!8822 = !{!72, !2832, !8823, !566}
!8823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 64)
!8824 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !8807, file: !71, line: 276, baseType: !8825, size: 64, offset: 192)
!8825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8826, size: 64)
!8826 = !DISubroutineType(types: !8827)
!8827 = !{null, !8823, !2825, !788}
!8828 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !8807, file: !71, line: 279, baseType: !8829, size: 64, offset: 256)
!8829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8830, size: 64)
!8830 = !DISubroutineType(types: !8831)
!8831 = !{!617, !374, !7}
!8832 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !8807, file: !71, line: 280, baseType: !8833, size: 64, offset: 320)
!8833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8834, size: 64)
!8834 = !DISubroutineType(types: !8835)
!8835 = !{!566, !8817}
!8836 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !346, file: !71, line: 1935, baseType: !7, size: 32, offset: 4224)
!8837 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !346, file: !71, line: 1936, baseType: !7, size: 32, offset: 4256)
!8838 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !346, file: !71, line: 1938, baseType: !554, size: 16, offset: 4288)
!8839 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !346, file: !71, line: 1939, baseType: !554, size: 16, offset: 4304)
!8840 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !346, file: !71, line: 1941, baseType: !571, size: 8, offset: 4320)
!8841 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !346, file: !71, line: 1942, baseType: !571, size: 8, offset: 4328)
!8842 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !346, file: !71, line: 1944, baseType: !571, size: 8, offset: 4336)
!8843 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !346, file: !71, line: 1945, baseType: !571, size: 8, offset: 4344)
!8844 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !346, file: !71, line: 1952, baseType: !7, size: 32, offset: 4352)
!8845 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !346, file: !71, line: 1953, baseType: !7, size: 32, offset: 4384)
!8846 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !346, file: !71, line: 1954, baseType: !7, size: 32, offset: 4416)
!8847 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !346, file: !71, line: 1955, baseType: !554, size: 16, offset: 4448)
!8848 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !346, file: !71, line: 1956, baseType: !554, size: 16, offset: 4464)
!8849 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !346, file: !71, line: 1957, baseType: !571, size: 8, offset: 4480)
!8850 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !346, file: !71, line: 1958, baseType: !571, size: 8, offset: 4488)
!8851 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !346, file: !71, line: 1960, baseType: !554, size: 16, offset: 4496)
!8852 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !346, file: !71, line: 1961, baseType: !554, size: 16, offset: 4512)
!8853 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !346, file: !71, line: 1964, baseType: !792, size: 256, offset: 4528)
!8854 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !346, file: !71, line: 1965, baseType: !571, size: 8, offset: 4784)
!8855 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !346, file: !71, line: 1966, baseType: !571, size: 8, offset: 4792)
!8856 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !346, file: !71, line: 1967, baseType: !571, size: 8, offset: 4800)
!8857 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !346, file: !71, line: 1968, baseType: !571, size: 8, offset: 4808)
!8858 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !346, file: !71, line: 1970, baseType: !554, size: 16, offset: 4816)
!8859 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !346, file: !71, line: 1971, baseType: !554, size: 16, offset: 4832)
!8860 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !346, file: !71, line: 1972, baseType: !554, size: 16, offset: 4848)
!8861 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !346, file: !71, line: 1973, baseType: !806, offset: 4864)
!8862 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !346, file: !71, line: 1975, baseType: !8863, size: 192, offset: 4864)
!8863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !71, line: 224, size: 192, elements: !8864)
!8864 = !{!8865, !8866}
!8865 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8863, file: !71, line: 225, baseType: !366, size: 128)
!8866 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !8863, file: !71, line: 226, baseType: !72, size: 32, offset: 128)
!8867 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !346, file: !71, line: 1976, baseType: !8863, size: 192, offset: 5056)
!8868 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !346, file: !71, line: 1977, baseType: !8863, size: 192, offset: 5248)
!8869 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !346, file: !71, line: 1980, baseType: !3957, size: 64, offset: 5440)
!8870 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !346, file: !71, line: 1985, baseType: !7, size: 32, offset: 5504)
!8871 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !346, file: !71, line: 1986, baseType: !7, size: 32, offset: 5536)
!8872 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !346, file: !71, line: 1987, baseType: !617, size: 8, offset: 5568)
!8873 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !346, file: !71, line: 1996, baseType: !8874, size: 64, offset: 5632)
!8874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8875, size: 64)
!8875 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !71, line: 1996, flags: DIFlagFwdDecl)
!8876 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !346, file: !71, line: 2007, baseType: !8877, size: 64, offset: 5696)
!8877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8878, size: 64)
!8878 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !71, line: 2007, flags: DIFlagFwdDecl)
!8879 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !346, file: !71, line: 2011, baseType: !8713, size: 64, offset: 5760)
!8880 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !346, file: !71, line: 2015, baseType: !8881, size: 64, offset: 5824)
!8881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8882, size: 64)
!8882 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !71, line: 62, flags: DIFlagFwdDecl)
!8883 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !346, file: !71, line: 2016, baseType: !8884, size: 64, offset: 5888)
!8884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8885, size: 64)
!8885 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !71, line: 64, flags: DIFlagFwdDecl)
!8886 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !346, file: !71, line: 2025, baseType: !6907, size: 64, offset: 5952)
!8887 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !346, file: !71, line: 2027, baseType: !8888, size: 64, offset: 6016)
!8888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8889, size: 64)
!8889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !71, line: 736, size: 1536, elements: !8890)
!8890 = !{!8891, !8892, !8893}
!8891 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !8889, file: !71, line: 741, baseType: !3949, size: 512)
!8892 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8889, file: !71, line: 742, baseType: !372, size: 64, offset: 512)
!8893 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !8889, file: !71, line: 743, baseType: !8894, size: 512, align: 512, offset: 1024)
!8894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !8117, line: 57, size: 512, align: 512, elements: !8895)
!8895 = !{!8896, !8897, !8898, !8899}
!8896 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8894, file: !8117, line: 58, baseType: !372, size: 64)
!8897 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !8894, file: !8117, line: 59, baseType: !784, size: 32, offset: 64)
!8898 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !8894, file: !8117, line: 60, baseType: !784, size: 32, offset: 96)
!8899 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !8894, file: !8117, line: 61, baseType: !8125, size: 64, offset: 128)
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !346, file: !71, line: 2028, baseType: !7, size: 32, offset: 6080)
!8901 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !346, file: !71, line: 2029, baseType: !7, size: 32, offset: 6112)
!8902 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !346, file: !71, line: 2031, baseType: !3052, size: 64, offset: 6144)
!8903 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !346, file: !71, line: 2032, baseType: !394, size: 64, offset: 6208)
!8904 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !346, file: !71, line: 2033, baseType: !72, size: 32, offset: 6272)
!8905 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !346, file: !71, line: 2034, baseType: !8906, size: 64, offset: 6336)
!8906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8907, size: 64)
!8907 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !71, line: 430, baseType: !8908)
!8908 = !DISubroutineType(types: !8909)
!8909 = !{!8910, !8911}
!8910 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !71, line: 429, baseType: !339)
!8911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!8912 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !346, file: !71, line: 2035, baseType: !647, size: 64, offset: 6400)
!8913 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !346, file: !71, line: 2040, baseType: !8914, size: 64, offset: 6464)
!8914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8915, size: 64)
!8915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !71, line: 584, size: 1600, elements: !8916)
!8916 = !{!8917, !8918, !9296, !9297, !9298, !9299, !9300, !9301, !9302, !9303, !9304, !9305}
!8917 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8915, file: !71, line: 588, baseType: !372, size: 64)
!8918 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !8915, file: !71, line: 589, baseType: !8919, size: 64, offset: 64)
!8919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8920, size: 64)
!8920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !8921, line: 57, size: 2048, elements: !8922)
!8921 = !DIFile(filename: "./include/net/sch_generic.h", directory: "/home/lizy2001/genbc/linux")
!8922 = !{!8923, !8927, !8931, !8932, !8933, !9236, !9256, !9257, !9258, !9259, !9260, !9263, !9273, !9274, !9275, !9276, !9277, !9284, !9285, !9286, !9287, !9288, !9289, !9290, !9291, !9292, !9293, !9294}
!8923 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !8920, file: !8921, line: 58, baseType: !8924, size: 64)
!8924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8925, size: 64)
!8925 = !DISubroutineType(types: !8926)
!8926 = !{!72, !497, !8919, !8911}
!8927 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !8920, file: !8921, line: 61, baseType: !8928, size: 64, offset: 64)
!8928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8929, size: 64)
!8929 = !DISubroutineType(types: !8930)
!8930 = !{!497, !8919}
!8931 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8920, file: !8921, line: 62, baseType: !7, size: 32, offset: 128)
!8932 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !8920, file: !8921, line: 82, baseType: !784, size: 32, offset: 160)
!8933 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8920, file: !8921, line: 83, baseType: !8934, size: 64, offset: 192)
!8934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8935, size: 64)
!8935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8936)
!8936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_ops", file: !8921, line: 238, size: 1344, elements: !8937)
!8937 = !{!8938, !8940, !9196, !9197, !9198, !9199, !9200, !9201, !9202, !9206, !9210, !9211, !9212, !9213, !9217, !9221, !9225, !9229, !9230, !9234, !9235}
!8938 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8936, file: !8921, line: 239, baseType: !8939, size: 64)
!8939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8936, size: 64)
!8940 = !DIDerivedType(tag: DW_TAG_member, name: "cl_ops", scope: !8936, file: !8921, line: 240, baseType: !8941, size: 64, offset: 64)
!8941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8942, size: 64)
!8942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8943)
!8943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_class_ops", file: !8921, line: 198, size: 896, elements: !8944)
!8944 = !{!8945, !8946, !8961, !8966, !8970, !8974, !8978, !8982, !8986, !8992, !9159, !9163, !9164, !9168}
!8945 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8943, file: !8921, line: 199, baseType: !7, size: 32)
!8946 = !DIDerivedType(tag: DW_TAG_member, name: "select_queue", scope: !8943, file: !8921, line: 201, baseType: !8947, size: 64, offset: 64)
!8947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8948, size: 64)
!8948 = !DISubroutineType(types: !8949)
!8949 = !{!8914, !8919, !8950}
!8950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8951, size: 64)
!8951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcmsg", file: !8952, line: 577, size: 160, elements: !8953)
!8952 = !DIFile(filename: "./include/uapi/linux/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!8953 = !{!8954, !8955, !8956, !8957, !8958, !8959, !8960}
!8954 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_family", scope: !8951, file: !8952, line: 578, baseType: !571, size: 8)
!8955 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad1", scope: !8951, file: !8952, line: 579, baseType: !571, size: 8, offset: 8)
!8956 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad2", scope: !8951, file: !8952, line: 580, baseType: !554, size: 16, offset: 16)
!8957 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_ifindex", scope: !8951, file: !8952, line: 581, baseType: !72, size: 32, offset: 32)
!8958 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_handle", scope: !8951, file: !8952, line: 582, baseType: !545, size: 32, offset: 64)
!8959 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_parent", scope: !8951, file: !8952, line: 583, baseType: !545, size: 32, offset: 96)
!8960 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_info", scope: !8951, file: !8952, line: 588, baseType: !545, size: 32, offset: 128)
!8961 = !DIDerivedType(tag: DW_TAG_member, name: "graft", scope: !8943, file: !8921, line: 202, baseType: !8962, size: 64, offset: 128)
!8962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8963, size: 64)
!8963 = !DISubroutineType(types: !8964)
!8964 = !{!72, !8919, !394, !8919, !8965, !2536}
!8965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8919, size: 64)
!8966 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !8943, file: !8921, line: 205, baseType: !8967, size: 64, offset: 192)
!8967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8968, size: 64)
!8968 = !DISubroutineType(types: !8969)
!8969 = !{!8919, !8919, !394}
!8970 = !DIDerivedType(tag: DW_TAG_member, name: "qlen_notify", scope: !8943, file: !8921, line: 206, baseType: !8971, size: 64, offset: 256)
!8971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8972, size: 64)
!8972 = !DISubroutineType(types: !8973)
!8973 = !{null, !8919, !394}
!8974 = !DIDerivedType(tag: DW_TAG_member, name: "find", scope: !8943, file: !8921, line: 209, baseType: !8975, size: 64, offset: 320)
!8975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8976, size: 64)
!8976 = !DISubroutineType(types: !8977)
!8977 = !{!394, !8919, !784}
!8978 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !8943, file: !8921, line: 210, baseType: !8979, size: 64, offset: 384)
!8979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8980, size: 64)
!8980 = !DISubroutineType(types: !8981)
!8981 = !{!72, !8919, !784, !784, !7880, !2519, !2536}
!8982 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !8943, file: !8921, line: 213, baseType: !8983, size: 64, offset: 448)
!8983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8984, size: 64)
!8984 = !DISubroutineType(types: !8985)
!8985 = !{!72, !8919, !394}
!8986 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !8943, file: !8921, line: 214, baseType: !8987, size: 64, offset: 512)
!8987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8988, size: 64)
!8988 = !DISubroutineType(types: !8989)
!8989 = !{null, !8919, !8990}
!8990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8991, size: 64)
!8991 = !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_walker", file: !8921, line: 24, flags: DIFlagFwdDecl)
!8992 = !DIDerivedType(tag: DW_TAG_member, name: "tcf_block", scope: !8943, file: !8921, line: 217, baseType: !8993, size: 64, offset: 576)
!8993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8994, size: 64)
!8994 = !DISubroutineType(types: !8995)
!8995 = !{!8996, !8919, !394, !2536}
!8996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8997, size: 64)
!8997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_block", file: !8921, line: 411, size: 9920, elements: !8998)
!8998 = !{!8999, !9000, !9001, !9002, !9003, !9004, !9005, !9006, !9007, !9012, !9013, !9014, !9015, !9016, !9017, !9155, !9156, !9158}
!8999 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8997, file: !8921, line: 415, baseType: !1031, size: 192)
!9000 = !DIDerivedType(tag: DW_TAG_member, name: "chain_list", scope: !8997, file: !8921, line: 416, baseType: !366, size: 128, offset: 192)
!9001 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !8997, file: !8921, line: 417, baseType: !784, size: 32, offset: 320)
!9002 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !8997, file: !8921, line: 418, baseType: !784, size: 32, offset: 352)
!9003 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8997, file: !8921, line: 419, baseType: !1348, size: 32, offset: 384)
!9004 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !8997, file: !8921, line: 420, baseType: !2039, size: 64, offset: 448)
!9005 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !8997, file: !8921, line: 421, baseType: !8919, size: 64, offset: 512)
!9006 = !DIDerivedType(tag: DW_TAG_member, name: "cb_lock", scope: !8997, file: !8921, line: 422, baseType: !1239, size: 256, offset: 576)
!9007 = !DIDerivedType(tag: DW_TAG_member, name: "flow_block", scope: !8997, file: !8921, line: 423, baseType: !9008, size: 128, offset: 832)
!9008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flow_block", file: !9009, line: 430, size: 128, elements: !9010)
!9009 = !DIFile(filename: "./include/net/flow_offload.h", directory: "/home/lizy2001/genbc/linux")
!9010 = !{!9011}
!9011 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !9008, file: !9009, line: 431, baseType: !366, size: 128)
!9012 = !DIDerivedType(tag: DW_TAG_member, name: "owner_list", scope: !8997, file: !8921, line: 424, baseType: !366, size: 128, offset: 960)
!9013 = !DIDerivedType(tag: DW_TAG_member, name: "keep_dst", scope: !8997, file: !8921, line: 425, baseType: !617, size: 8, offset: 1088)
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "offloadcnt", scope: !8997, file: !8921, line: 426, baseType: !465, size: 32, offset: 1120)
!9015 = !DIDerivedType(tag: DW_TAG_member, name: "nooffloaddevcnt", scope: !8997, file: !8921, line: 427, baseType: !7, size: 32, offset: 1152)
!9016 = !DIDerivedType(tag: DW_TAG_member, name: "lockeddevcnt", scope: !8997, file: !8921, line: 428, baseType: !7, size: 32, offset: 1184)
!9017 = !DIDerivedType(tag: DW_TAG_member, name: "chain0", scope: !8997, file: !8921, line: 432, baseType: !9018, size: 192, offset: 1216)
!9018 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8997, file: !8921, line: 429, size: 192, elements: !9019)
!9019 = !{!9020, !9154}
!9020 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !9018, file: !8921, line: 430, baseType: !9021, size: 64)
!9021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9022, size: 64)
!9022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_chain", file: !8921, line: 395, size: 832, elements: !9023)
!9023 = !{!9024, !9025, !9144, !9145, !9146, !9147, !9148, !9149, !9150, !9151, !9152, !9153}
!9024 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_lock", scope: !9022, file: !8921, line: 397, baseType: !1031, size: 192)
!9025 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain", scope: !9022, file: !8921, line: 398, baseType: !9026, size: 64, offset: 192)
!9026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9027, size: 64)
!9027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto", file: !8921, line: 356, size: 768, elements: !9028)
!9028 = !{!9029, !9030, !9031, !9063, !9064, !9065, !9066, !9138, !9139, !9140, !9141, !9142, !9143}
!9029 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9027, file: !8921, line: 358, baseType: !9026, size: 64)
!9030 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !9027, file: !8921, line: 359, baseType: !647, size: 64, offset: 64)
!9031 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !9027, file: !8921, line: 362, baseType: !9032, size: 64, offset: 128)
!9032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9033, size: 64)
!9033 = !DISubroutineType(types: !9034)
!9034 = !{!72, !497, !9035, !9037}
!9035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9036, size: 64)
!9036 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9027)
!9037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9038, size: 64)
!9038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_result", file: !8921, line: 275, size: 128, elements: !9039)
!9039 = !{!9040}
!9040 = !DIDerivedType(tag: DW_TAG_member, scope: !9038, file: !8921, line: 276, baseType: !9041, size: 128)
!9041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9038, file: !8921, line: 276, size: 128, elements: !9042)
!9042 = !{!9043, !9048, !9049}
!9043 = !DIDerivedType(tag: DW_TAG_member, scope: !9041, file: !8921, line: 277, baseType: !9044, size: 128)
!9044 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9041, file: !8921, line: 277, size: 128, elements: !9045)
!9045 = !{!9046, !9047}
!9046 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !9044, file: !8921, line: 278, baseType: !394, size: 64)
!9047 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !9044, file: !8921, line: 279, baseType: !784, size: 32, offset: 64)
!9048 = !DIDerivedType(tag: DW_TAG_member, name: "goto_tp", scope: !9041, file: !8921, line: 281, baseType: !9035, size: 64)
!9049 = !DIDerivedType(tag: DW_TAG_member, scope: !9041, file: !8921, line: 284, baseType: !9050, size: 128)
!9050 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9041, file: !8921, line: 284, size: 128, elements: !9051)
!9051 = !{!9052, !9053}
!9052 = !DIDerivedType(tag: DW_TAG_member, name: "ingress", scope: !9050, file: !8921, line: 285, baseType: !617, size: 8)
!9053 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !9050, file: !8921, line: 286, baseType: !9054, size: 64, offset: 64)
!9054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9055, size: 64)
!9055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_queue", file: !9056, line: 59, size: 160, elements: !9057)
!9056 = !DIFile(filename: "./include/uapi/linux/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!9057 = !{!9058, !9059, !9060, !9061, !9062}
!9058 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9055, file: !9056, line: 60, baseType: !545, size: 32)
!9059 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !9055, file: !9056, line: 61, baseType: !545, size: 32, offset: 32)
!9060 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !9055, file: !9056, line: 62, baseType: !545, size: 32, offset: 64)
!9061 = !DIDerivedType(tag: DW_TAG_member, name: "requeues", scope: !9055, file: !9056, line: 63, baseType: !545, size: 32, offset: 96)
!9062 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !9055, file: !9056, line: 64, baseType: !545, size: 32, offset: 128)
!9063 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !9027, file: !8921, line: 365, baseType: !566, size: 16, offset: 192)
!9064 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9027, file: !8921, line: 368, baseType: !784, size: 32, offset: 224)
!9065 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9027, file: !8921, line: 369, baseType: !647, size: 64, offset: 256)
!9066 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9027, file: !8921, line: 370, baseType: !9067, size: 64, offset: 320)
!9067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9068, size: 64)
!9068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9069)
!9069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto_ops", file: !8921, line: 293, size: 1536, elements: !9070)
!9070 = !{!9071, !9072, !9073, !9074, !9078, !9082, !9086, !9090, !9094, !9098, !9102, !9108, !9116, !9117, !9118, !9122, !9126, !9127, !9131, !9132, !9136, !9137}
!9071 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9069, file: !8921, line: 294, baseType: !366, size: 128)
!9072 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !9069, file: !8921, line: 295, baseType: !349, size: 128, offset: 128)
!9073 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !9069, file: !8921, line: 297, baseType: !9032, size: 64, offset: 256)
!9074 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !9069, file: !8921, line: 300, baseType: !9075, size: 64, offset: 320)
!9075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9076, size: 64)
!9076 = !DISubroutineType(types: !9077)
!9077 = !{!72, !9026}
!9078 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !9069, file: !8921, line: 301, baseType: !9079, size: 64, offset: 384)
!9079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9080, size: 64)
!9080 = !DISubroutineType(types: !9081)
!9081 = !{null, !9026, !617, !2536}
!9082 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !9069, file: !8921, line: 304, baseType: !9083, size: 64, offset: 448)
!9083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9084, size: 64)
!9084 = !DISubroutineType(types: !9085)
!9085 = !{!647, !9026, !784}
!9086 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !9069, file: !8921, line: 305, baseType: !9087, size: 64, offset: 512)
!9087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9088, size: 64)
!9088 = !DISubroutineType(types: !9089)
!9089 = !{null, !9026, !647}
!9090 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !9069, file: !8921, line: 306, baseType: !9091, size: 64, offset: 576)
!9091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9092, size: 64)
!9092 = !DISubroutineType(types: !9093)
!9093 = !{!72, !2039, !497, !9026, !394, !784, !7880, !3623, !617, !617, !2536}
!9094 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !9069, file: !8921, line: 311, baseType: !9095, size: 64, offset: 640)
!9095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9096, size: 64)
!9096 = !DISubroutineType(types: !9097)
!9097 = !{!72, !9026, !647, !6882, !617, !2536}
!9098 = !DIDerivedType(tag: DW_TAG_member, name: "delete_empty", scope: !9069, file: !8921, line: 314, baseType: !9099, size: 64, offset: 704)
!9099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9100, size: 64)
!9100 = !DISubroutineType(types: !9101)
!9101 = !{!617, !9026}
!9102 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !9069, file: !8921, line: 315, baseType: !9103, size: 64, offset: 768)
!9103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9104, size: 64)
!9104 = !DISubroutineType(types: !9105)
!9105 = !{null, !9026, !9106, !617}
!9106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9107, size: 64)
!9107 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_walker", file: !8921, line: 25, flags: DIFlagFwdDecl)
!9108 = !DIDerivedType(tag: DW_TAG_member, name: "reoffload", scope: !9069, file: !8921, line: 317, baseType: !9109, size: 64, offset: 832)
!9109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9110, size: 64)
!9110 = !DISubroutineType(types: !9111)
!9111 = !{!72, !9026, !617, !9112, !647, !2536}
!9112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9113, size: 64)
!9113 = !DIDerivedType(tag: DW_TAG_typedef, name: "flow_setup_cb_t", file: !9009, line: 450, baseType: !9114)
!9114 = !DISubroutineType(types: !9115)
!9115 = !{!72, !263, !647, !647}
!9116 = !DIDerivedType(tag: DW_TAG_member, name: "hw_add", scope: !9069, file: !8921, line: 320, baseType: !9087, size: 64, offset: 896)
!9117 = !DIDerivedType(tag: DW_TAG_member, name: "hw_del", scope: !9069, file: !8921, line: 322, baseType: !9087, size: 64, offset: 960)
!9118 = !DIDerivedType(tag: DW_TAG_member, name: "bind_class", scope: !9069, file: !8921, line: 324, baseType: !9119, size: 64, offset: 1024)
!9119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9120, size: 64)
!9120 = !DISubroutineType(types: !9121)
!9121 = !{null, !647, !784, !394, !647, !394}
!9122 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_create", scope: !9069, file: !8921, line: 326, baseType: !9123, size: 64, offset: 1088)
!9123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9124, size: 64)
!9124 = !DISubroutineType(types: !9125)
!9125 = !{!647, !2039, !9021, !7880, !2536}
!9126 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_destroy", scope: !9069, file: !8921, line: 330, baseType: !3433, size: 64, offset: 1152)
!9127 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !9069, file: !8921, line: 333, baseType: !9128, size: 64, offset: 1216)
!9128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9129, size: 64)
!9129 = !DISubroutineType(types: !9130)
!9130 = !{!72, !2039, !9026, !647, !497, !8950, !617}
!9131 = !DIDerivedType(tag: DW_TAG_member, name: "terse_dump", scope: !9069, file: !8921, line: 336, baseType: !9128, size: 64, offset: 1280)
!9132 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_dump", scope: !9069, file: !8921, line: 340, baseType: !9133, size: 64, offset: 1344)
!9133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9134, size: 64)
!9134 = !DISubroutineType(types: !9135)
!9135 = !{!72, !497, !2039, !647}
!9136 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9069, file: !8921, line: 344, baseType: !929, size: 64, offset: 1408)
!9137 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9069, file: !8921, line: 345, baseType: !72, size: 32, offset: 1472)
!9138 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !9027, file: !8921, line: 371, baseType: !9021, size: 64, offset: 384)
!9139 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9027, file: !8921, line: 375, baseType: !806, offset: 448)
!9140 = !DIDerivedType(tag: DW_TAG_member, name: "deleting", scope: !9027, file: !8921, line: 376, baseType: !617, size: 8, offset: 448)
!9141 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9027, file: !8921, line: 377, baseType: !1348, size: 32, offset: 480)
!9142 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9027, file: !8921, line: 378, baseType: !381, size: 128, align: 64, offset: 512)
!9143 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_ht_node", scope: !9027, file: !8921, line: 379, baseType: !358, size: 128, offset: 640)
!9144 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9022, file: !8921, line: 399, baseType: !366, size: 128, offset: 256)
!9145 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !9022, file: !8921, line: 400, baseType: !8996, size: 64, offset: 384)
!9146 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9022, file: !8921, line: 401, baseType: !784, size: 32, offset: 448)
!9147 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9022, file: !8921, line: 402, baseType: !7, size: 32, offset: 480)
!9148 = !DIDerivedType(tag: DW_TAG_member, name: "action_refcnt", scope: !9022, file: !8921, line: 403, baseType: !7, size: 32, offset: 512)
!9149 = !DIDerivedType(tag: DW_TAG_member, name: "explicitly_created", scope: !9022, file: !8921, line: 404, baseType: !617, size: 8, offset: 544)
!9150 = !DIDerivedType(tag: DW_TAG_member, name: "flushing", scope: !9022, file: !8921, line: 405, baseType: !617, size: 8, offset: 552)
!9151 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_ops", scope: !9022, file: !8921, line: 406, baseType: !9067, size: 64, offset: 576)
!9152 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_priv", scope: !9022, file: !8921, line: 407, baseType: !647, size: 64, offset: 640)
!9153 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9022, file: !8921, line: 408, baseType: !381, size: 128, align: 64, offset: 704)
!9154 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_list", scope: !9018, file: !8921, line: 431, baseType: !366, size: 128, offset: 64)
!9155 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8997, file: !8921, line: 433, baseType: !381, size: 128, align: 64, offset: 1408)
!9156 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_ht", scope: !8997, file: !8921, line: 434, baseType: !9157, size: 8192, offset: 1536)
!9157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 8192, elements: !3134)
!9158 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_lock", scope: !8997, file: !8921, line: 435, baseType: !1031, size: 192, offset: 9728)
!9159 = !DIDerivedType(tag: DW_TAG_member, name: "bind_tcf", scope: !8943, file: !8921, line: 220, baseType: !9160, size: 64, offset: 640)
!9160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9161, size: 64)
!9161 = !DISubroutineType(types: !9162)
!9162 = !{!394, !8919, !394, !784}
!9163 = !DIDerivedType(tag: DW_TAG_member, name: "unbind_tcf", scope: !8943, file: !8921, line: 222, baseType: !8971, size: 64, offset: 704)
!9164 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8943, file: !8921, line: 225, baseType: !9165, size: 64, offset: 768)
!9165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9166, size: 64)
!9166 = !DISubroutineType(types: !9167)
!9167 = !{!72, !8919, !394, !497, !8950}
!9168 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !8943, file: !8921, line: 227, baseType: !9169, size: 64, offset: 832)
!9169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9170, size: 64)
!9170 = !DISubroutineType(types: !9171)
!9171 = !{!72, !8919, !394, !9172}
!9172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9173, size: 64)
!9173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_dump", file: !9174, line: 23, size: 768, elements: !9175)
!9174 = !DIFile(filename: "./include/net/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!9175 = !{!9176, !9177, !9178, !9179, !9180, !9181, !9182, !9183, !9184}
!9176 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9173, file: !9174, line: 24, baseType: !4233, size: 64)
!9177 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !9173, file: !9174, line: 25, baseType: !497, size: 64, offset: 64)
!9178 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9173, file: !9174, line: 26, baseType: !7881, size: 64, offset: 128)
!9179 = !DIDerivedType(tag: DW_TAG_member, name: "compat_tc_stats", scope: !9173, file: !9174, line: 29, baseType: !72, size: 32, offset: 192)
!9180 = !DIDerivedType(tag: DW_TAG_member, name: "compat_xstats", scope: !9173, file: !9174, line: 30, baseType: !72, size: 32, offset: 224)
!9181 = !DIDerivedType(tag: DW_TAG_member, name: "padattr", scope: !9173, file: !9174, line: 31, baseType: !72, size: 32, offset: 256)
!9182 = !DIDerivedType(tag: DW_TAG_member, name: "xstats", scope: !9173, file: !9174, line: 32, baseType: !647, size: 64, offset: 320)
!9183 = !DIDerivedType(tag: DW_TAG_member, name: "xstats_len", scope: !9173, file: !9174, line: 33, baseType: !72, size: 32, offset: 384)
!9184 = !DIDerivedType(tag: DW_TAG_member, name: "tc_stats", scope: !9173, file: !9174, line: 34, baseType: !9185, size: 320, offset: 448)
!9185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_stats", file: !9186, line: 34, size: 320, elements: !9187)
!9186 = !DIFile(filename: "./include/uapi/linux/pkt_sched.h", directory: "/home/lizy2001/genbc/linux")
!9187 = !{!9188, !9189, !9190, !9191, !9192, !9193, !9194, !9195}
!9188 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9185, file: !9186, line: 35, baseType: !415, size: 64)
!9189 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9185, file: !9186, line: 36, baseType: !545, size: 32, offset: 64)
!9190 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !9185, file: !9186, line: 37, baseType: !545, size: 32, offset: 96)
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !9185, file: !9186, line: 38, baseType: !545, size: 32, offset: 128)
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "bps", scope: !9185, file: !9186, line: 40, baseType: !545, size: 32, offset: 160)
!9193 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !9185, file: !9186, line: 41, baseType: !545, size: 32, offset: 192)
!9194 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9185, file: !9186, line: 42, baseType: !545, size: 32, offset: 224)
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !9185, file: !9186, line: 43, baseType: !545, size: 32, offset: 256)
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8936, file: !8921, line: 241, baseType: !349, size: 128, offset: 128)
!9197 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !8936, file: !8921, line: 242, baseType: !72, size: 32, offset: 256)
!9198 = !DIDerivedType(tag: DW_TAG_member, name: "static_flags", scope: !8936, file: !8921, line: 243, baseType: !7, size: 32, offset: 288)
!9199 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !8936, file: !8921, line: 245, baseType: !8924, size: 64, offset: 320)
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !8936, file: !8921, line: 248, baseType: !8928, size: 64, offset: 384)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "peek", scope: !8936, file: !8921, line: 249, baseType: !8928, size: 64, offset: 448)
!9202 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !8936, file: !8921, line: 251, baseType: !9203, size: 64, offset: 512)
!9203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9204, size: 64)
!9204 = !DISubroutineType(types: !9205)
!9205 = !{!72, !8919, !7881, !2536}
!9206 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !8936, file: !8921, line: 253, baseType: !9207, size: 64, offset: 576)
!9207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9208, size: 64)
!9208 = !DISubroutineType(types: !9209)
!9209 = !{null, !8919}
!9210 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !8936, file: !8921, line: 254, baseType: !9207, size: 64, offset: 640)
!9211 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !8936, file: !8921, line: 255, baseType: !9203, size: 64, offset: 704)
!9212 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !8936, file: !8921, line: 258, baseType: !9207, size: 64, offset: 768)
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "change_tx_queue_len", scope: !8936, file: !8921, line: 259, baseType: !9214, size: 64, offset: 832)
!9214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9215, size: 64)
!9215 = !DISubroutineType(types: !9216)
!9216 = !{!72, !8919, !7}
!9217 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8936, file: !8921, line: 261, baseType: !9218, size: 64, offset: 896)
!9218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9219, size: 64)
!9219 = !DISubroutineType(types: !9220)
!9220 = !{!72, !8919, !497}
!9221 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !8936, file: !8921, line: 262, baseType: !9222, size: 64, offset: 960)
!9222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9223, size: 64)
!9223 = !DISubroutineType(types: !9224)
!9224 = !{!72, !8919, !9172}
!9225 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_set", scope: !8936, file: !8921, line: 264, baseType: !9226, size: 64, offset: 1024)
!9226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9227, size: 64)
!9227 = !DISubroutineType(types: !9228)
!9228 = !{null, !8919, !784}
!9229 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_set", scope: !8936, file: !8921, line: 266, baseType: !9226, size: 64, offset: 1088)
!9230 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_get", scope: !8936, file: !8921, line: 268, baseType: !9231, size: 64, offset: 1152)
!9231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9232, size: 64)
!9232 = !DISubroutineType(types: !9233)
!9233 = !{!784, !8919}
!9234 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_get", scope: !8936, file: !8921, line: 269, baseType: !9231, size: 64, offset: 1216)
!9235 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !8936, file: !8921, line: 271, baseType: !929, size: 64, offset: 1280)
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "stab", scope: !8920, file: !8921, line: 84, baseType: !9237, size: 64, offset: 256)
!9237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9238, size: 64)
!9238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_size_table", file: !8921, line: 41, size: 512, elements: !9239)
!9239 = !{!9240, !9241, !9242, !9253, !9254}
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9238, file: !8921, line: 42, baseType: !381, size: 128, align: 64)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9238, file: !8921, line: 43, baseType: !366, size: 128, offset: 128)
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "szopts", scope: !9238, file: !8921, line: 44, baseType: !9243, size: 192, offset: 256)
!9243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_sizespec", file: !9186, line: 102, size: 192, elements: !9244)
!9244 = !{!9245, !9246, !9247, !9248, !9249, !9250, !9251, !9252}
!9245 = !DIDerivedType(tag: DW_TAG_member, name: "cell_log", scope: !9243, file: !9186, line: 103, baseType: !571, size: 8)
!9246 = !DIDerivedType(tag: DW_TAG_member, name: "size_log", scope: !9243, file: !9186, line: 104, baseType: !571, size: 8, offset: 8)
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "cell_align", scope: !9243, file: !9186, line: 105, baseType: !1323, size: 16, offset: 16)
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "overhead", scope: !9243, file: !9186, line: 106, baseType: !72, size: 32, offset: 32)
!9249 = !DIDerivedType(tag: DW_TAG_member, name: "linklayer", scope: !9243, file: !9186, line: 107, baseType: !7, size: 32, offset: 64)
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "mpu", scope: !9243, file: !9186, line: 108, baseType: !7, size: 32, offset: 96)
!9251 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !9243, file: !9186, line: 109, baseType: !7, size: 32, offset: 128)
!9252 = !DIDerivedType(tag: DW_TAG_member, name: "tsize", scope: !9243, file: !9186, line: 110, baseType: !7, size: 32, offset: 160)
!9253 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9238, file: !8921, line: 45, baseType: !72, size: 32, offset: 448)
!9254 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9238, file: !8921, line: 46, baseType: !9255, offset: 480)
!9255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1115, elements: !391)
!9256 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !8920, file: !8921, line: 85, baseType: !358, size: 128, offset: 320)
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !8920, file: !8921, line: 86, baseType: !784, size: 32, offset: 448)
!9258 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !8920, file: !8921, line: 87, baseType: !784, size: 32, offset: 480)
!9259 = !DIDerivedType(tag: DW_TAG_member, name: "dev_queue", scope: !8920, file: !8921, line: 89, baseType: !8914, size: 64, offset: 512)
!9260 = !DIDerivedType(tag: DW_TAG_member, name: "rate_est", scope: !8920, file: !8921, line: 91, baseType: !9261, size: 64, offset: 576)
!9261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9262, size: 64)
!9262 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_rate_estimator", file: !9174, line: 21, flags: DIFlagFwdDecl)
!9263 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bstats", scope: !8920, file: !8921, line: 92, baseType: !9264, size: 64, offset: 640)
!9264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9265, size: 64)
!9265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_cpu", file: !9174, line: 16, size: 128, align: 128, elements: !9266)
!9266 = !{!9267, !9272}
!9267 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !9265, file: !9174, line: 17, baseType: !9268, size: 128)
!9268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_packed", file: !9174, line: 11, size: 128, elements: !9269)
!9269 = !{!9270, !9271}
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9268, file: !9174, line: 12, baseType: !415, size: 64)
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9268, file: !9174, line: 13, baseType: !415, size: 64, offset: 64)
!9272 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9265, file: !9174, line: 18, baseType: !2134, offset: 128)
!9273 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_qstats", scope: !8920, file: !8921, line: 93, baseType: !9054, size: 64, offset: 704)
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8920, file: !8921, line: 94, baseType: !72, size: 32, offset: 768)
!9275 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8920, file: !8921, line: 95, baseType: !1348, size: 32, offset: 800)
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "gso_skb", scope: !8920, file: !8921, line: 100, baseType: !2905, size: 192, offset: 832)
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !8920, file: !8921, line: 101, baseType: !9278, size: 192, offset: 1024)
!9278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_skb_head", file: !8921, line: 50, size: 192, elements: !9279)
!9279 = !{!9280, !9281, !9282, !9283}
!9280 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9278, file: !8921, line: 51, baseType: !497, size: 64)
!9281 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9278, file: !8921, line: 52, baseType: !497, size: 64, offset: 64)
!9282 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9278, file: !8921, line: 53, baseType: !545, size: 32, offset: 128)
!9283 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9278, file: !8921, line: 54, baseType: !806, offset: 160)
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !8920, file: !8921, line: 102, baseType: !9268, size: 128, offset: 1216)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !8920, file: !8921, line: 103, baseType: !761, size: 32, offset: 1344)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !8920, file: !8921, line: 104, baseType: !9055, size: 160, offset: 1376)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8920, file: !8921, line: 105, baseType: !394, size: 64, offset: 1536)
!9288 = !DIDerivedType(tag: DW_TAG_member, name: "next_sched", scope: !8920, file: !8921, line: 106, baseType: !8919, size: 64, offset: 1600)
!9289 = !DIDerivedType(tag: DW_TAG_member, name: "skb_bad_txq", scope: !8920, file: !8921, line: 107, baseType: !2905, size: 192, offset: 1664)
!9290 = !DIDerivedType(tag: DW_TAG_member, name: "busylock", scope: !8920, file: !8921, line: 109, baseType: !806, offset: 1856)
!9291 = !DIDerivedType(tag: DW_TAG_member, name: "seqlock", scope: !8920, file: !8921, line: 110, baseType: !806, offset: 1856)
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "empty", scope: !8920, file: !8921, line: 113, baseType: !617, size: 8, offset: 1856)
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8920, file: !8921, line: 114, baseType: !381, size: 128, align: 64, offset: 1920)
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !8920, file: !8921, line: 117, baseType: !9295, align: 512, offset: 2048)
!9295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !590, elements: !391)
!9296 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !8915, file: !71, line: 590, baseType: !8919, size: 64, offset: 128)
!9297 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !8915, file: !71, line: 592, baseType: !3949, size: 512, offset: 192)
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !8915, file: !71, line: 597, baseType: !394, size: 64, offset: 704)
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !8915, file: !71, line: 602, baseType: !394, size: 64, offset: 768)
!9300 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !8915, file: !71, line: 605, baseType: !372, size: 64, offset: 832)
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !8915, file: !71, line: 612, baseType: !806, offset: 896)
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !8915, file: !71, line: 613, baseType: !72, size: 32, offset: 896)
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !8915, file: !71, line: 617, baseType: !394, size: 64, offset: 960)
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8915, file: !71, line: 619, baseType: !394, size: 64, offset: 1024)
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !8915, file: !71, line: 622, baseType: !9306, size: 512, offset: 1088)
!9306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !9307, line: 43, size: 512, elements: !9308)
!9307 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!9308 = !{!9309, !9310, !9311, !9312, !9313, !9314, !9315, !9316, !9317, !9318, !9319, !9320, !9321}
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !9306, file: !9307, line: 45, baseType: !7, size: 32)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !9306, file: !9307, line: 46, baseType: !7, size: 32, offset: 32)
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !9306, file: !9307, line: 47, baseType: !7, size: 32, offset: 64)
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !9306, file: !9307, line: 51, baseType: !7, size: 32, offset: 96)
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !9306, file: !9307, line: 52, baseType: !7, size: 32, offset: 128)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !9306, file: !9307, line: 54, baseType: !7, size: 32, offset: 160)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !9306, file: !9307, line: 55, baseType: !7, size: 32, offset: 192)
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !9306, file: !9307, line: 56, baseType: !7, size: 32, offset: 224)
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !9306, file: !9307, line: 58, baseType: !7, size: 32, offset: 256)
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !9306, file: !9307, line: 59, baseType: !394, size: 64, offset: 320)
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !9306, file: !9307, line: 62, baseType: !7, size: 32, offset: 384)
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !9306, file: !9307, line: 63, baseType: !7, size: 32, offset: 416)
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !9306, file: !9307, line: 64, baseType: !7, size: 32, offset: 448)
!9322 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !346, file: !71, line: 2045, baseType: !792, size: 256, offset: 6528)
!9323 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !346, file: !71, line: 2049, baseType: !358, size: 128, offset: 6784)
!9324 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !346, file: !71, line: 2054, baseType: !8914, size: 64, offset: 6912)
!9325 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !346, file: !71, line: 2055, baseType: !7, size: 32, offset: 6976)
!9326 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !346, file: !71, line: 2056, baseType: !7, size: 32, offset: 7008)
!9327 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !346, file: !71, line: 2057, baseType: !8919, size: 64, offset: 7040)
!9328 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !346, file: !71, line: 2058, baseType: !7, size: 32, offset: 7104)
!9329 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !346, file: !71, line: 2059, baseType: !806, offset: 7136)
!9330 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !346, file: !71, line: 2061, baseType: !9331, size: 64, offset: 7168)
!9331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9332, size: 64)
!9332 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !71, line: 879, flags: DIFlagFwdDecl)
!9333 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !346, file: !71, line: 2075, baseType: !2317, size: 320, offset: 7232)
!9334 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !346, file: !71, line: 2076, baseType: !72, size: 32, offset: 7552)
!9335 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !346, file: !71, line: 2078, baseType: !784, size: 32, offset: 7584)
!9336 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !346, file: !71, line: 2080, baseType: !366, size: 128, offset: 7616)
!9337 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !346, file: !71, line: 2081, baseType: !616, size: 64, offset: 7744)
!9338 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !346, file: !71, line: 2083, baseType: !366, size: 128, offset: 7808)
!9339 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !346, file: !71, line: 2091, baseType: !345, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!9340 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !346, file: !71, line: 2093, baseType: !617, size: 8, offset: 7944)
!9341 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !346, file: !71, line: 2098, baseType: !9342, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!9342 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !346, file: !71, line: 2095, baseType: !7, size: 32, elements: !9343)
!9343 = !{!9344, !9345}
!9344 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!9345 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!9346 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !346, file: !71, line: 2100, baseType: !617, size: 8, offset: 7968)
!9347 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !346, file: !71, line: 2101, baseType: !487, size: 64, offset: 8000)
!9348 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !346, file: !71, line: 2107, baseType: !2847, size: 64, offset: 8064)
!9349 = !DIDerivedType(tag: DW_TAG_member, scope: !346, file: !71, line: 2110, baseType: !9350, size: 64, offset: 8128)
!9350 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !346, file: !71, line: 2110, size: 64, elements: !9351)
!9351 = !{!9352, !9353, !9374, !9383}
!9352 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !9350, file: !71, line: 2111, baseType: !647, size: 64)
!9353 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !9350, file: !71, line: 2112, baseType: !9354, size: 64)
!9354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9355, size: 64)
!9355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !71, line: 2542, size: 128, align: 128, elements: !9356)
!9356 = !{!9357, !9372, !9373}
!9357 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9355, file: !71, line: 2543, baseType: !9358, size: 64)
!9358 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !2135, line: 79, baseType: !9359)
!9359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2135, line: 77, size: 64, elements: !9360)
!9360 = !{!9361}
!9361 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !9359, file: !2135, line: 78, baseType: !9362, size: 64)
!9362 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !9363, line: 26, baseType: !9364)
!9363 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!9364 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9363, line: 24, size: 64, elements: !9365)
!9365 = !{!9366}
!9366 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9364, file: !9363, line: 25, baseType: !9367, size: 64)
!9367 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !9368, line: 12, baseType: !9369)
!9368 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!9369 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9368, line: 10, size: 64, elements: !9370)
!9370 = !{!9371}
!9371 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9369, file: !9368, line: 11, baseType: !453, size: 64)
!9372 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9355, file: !71, line: 2544, baseType: !9358, size: 64, offset: 64)
!9373 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9355, file: !71, line: 2545, baseType: !2134, offset: 128)
!9374 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !9350, file: !71, line: 2113, baseType: !9375, size: 64)
!9375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9376, size: 64)
!9376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !71, line: 2534, size: 256, align: 256, elements: !9377)
!9377 = !{!9378, !9379, !9380, !9381, !9382}
!9378 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !9376, file: !71, line: 2535, baseType: !413, size: 64)
!9379 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !9376, file: !71, line: 2536, baseType: !413, size: 64, offset: 64)
!9380 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !9376, file: !71, line: 2537, baseType: !413, size: 64, offset: 128)
!9381 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !9376, file: !71, line: 2538, baseType: !413, size: 64, offset: 192)
!9382 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9376, file: !71, line: 2539, baseType: !2134, offset: 256)
!9383 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !9350, file: !71, line: 2114, baseType: !9384, size: 64)
!9384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9385, size: 64)
!9385 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !71, line: 2114, flags: DIFlagFwdDecl)
!9386 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !346, file: !71, line: 2124, baseType: !3946, size: 5568, offset: 8192)
!9387 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !346, file: !71, line: 2125, baseType: !9388, size: 256, offset: 13760)
!9388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4027, size: 256, elements: !1279)
!9389 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !346, file: !71, line: 2126, baseType: !4027, size: 64, offset: 14016)
!9390 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !346, file: !71, line: 2128, baseType: !9391, size: 64, offset: 14080)
!9391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9392, size: 64)
!9392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9393)
!9393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !9394, line: 59, size: 1600, elements: !9395)
!9394 = !DIFile(filename: "./include/net/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!9395 = !{!9396, !9397, !9398, !9399, !9400, !9401, !9402, !9406, !9410, !9414, !9418, !9422, !9426, !9427, !9428, !9432, !9433, !9434, !9435, !9439, !9443, !9447, !9451, !9455}
!9396 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9393, file: !9394, line: 60, baseType: !366, size: 128)
!9397 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !9393, file: !9394, line: 62, baseType: !374, size: 64, offset: 128)
!9398 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !9393, file: !9394, line: 64, baseType: !671, size: 64, offset: 192)
!9399 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !9393, file: !9394, line: 65, baseType: !487, size: 64, offset: 256)
!9400 = !DIDerivedType(tag: DW_TAG_member, name: "maxtype", scope: !9393, file: !9394, line: 67, baseType: !7, size: 32, offset: 320)
!9401 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !9393, file: !9394, line: 68, baseType: !2550, size: 64, offset: 384)
!9402 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !9393, file: !9394, line: 69, baseType: !9403, size: 64, offset: 448)
!9403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9404, size: 64)
!9404 = !DISubroutineType(types: !9405)
!9405 = !{!72, !7880, !7880, !2536}
!9406 = !DIDerivedType(tag: DW_TAG_member, name: "newlink", scope: !9393, file: !9394, line: 73, baseType: !9407, size: 64, offset: 512)
!9407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9408, size: 64)
!9408 = !DISubroutineType(types: !9409)
!9409 = !{!72, !2039, !372, !7880, !7880, !2536}
!9410 = !DIDerivedType(tag: DW_TAG_member, name: "changelink", scope: !9393, file: !9394, line: 78, baseType: !9411, size: 64, offset: 576)
!9411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9412, size: 64)
!9412 = !DISubroutineType(types: !9413)
!9413 = !{!72, !372, !7880, !7880, !2536}
!9414 = !DIDerivedType(tag: DW_TAG_member, name: "dellink", scope: !9393, file: !9394, line: 82, baseType: !9415, size: 64, offset: 640)
!9415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9416, size: 64)
!9416 = !DISubroutineType(types: !9417)
!9417 = !{null, !372, !369}
!9418 = !DIDerivedType(tag: DW_TAG_member, name: "get_size", scope: !9393, file: !9394, line: 85, baseType: !9419, size: 64, offset: 704)
!9419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9420, size: 64)
!9420 = !DISubroutineType(types: !9421)
!9421 = !{!671, !2825}
!9422 = !DIDerivedType(tag: DW_TAG_member, name: "fill_info", scope: !9393, file: !9394, line: 86, baseType: !9423, size: 64, offset: 768)
!9423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9424, size: 64)
!9424 = !DISubroutineType(types: !9425)
!9425 = !{!72, !497, !2825}
!9426 = !DIDerivedType(tag: DW_TAG_member, name: "get_xstats_size", scope: !9393, file: !9394, line: 89, baseType: !9419, size: 64, offset: 832)
!9427 = !DIDerivedType(tag: DW_TAG_member, name: "fill_xstats", scope: !9393, file: !9394, line: 90, baseType: !9423, size: 64, offset: 896)
!9428 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_tx_queues", scope: !9393, file: !9394, line: 92, baseType: !9429, size: 64, offset: 960)
!9429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9430, size: 64)
!9430 = !DISubroutineType(types: !9431)
!9431 = !{!7}
!9432 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_rx_queues", scope: !9393, file: !9394, line: 93, baseType: !9429, size: 64, offset: 1024)
!9433 = !DIDerivedType(tag: DW_TAG_member, name: "slave_maxtype", scope: !9393, file: !9394, line: 95, baseType: !7, size: 32, offset: 1088)
!9434 = !DIDerivedType(tag: DW_TAG_member, name: "slave_policy", scope: !9393, file: !9394, line: 96, baseType: !2550, size: 64, offset: 1152)
!9435 = !DIDerivedType(tag: DW_TAG_member, name: "slave_changelink", scope: !9393, file: !9394, line: 97, baseType: !9436, size: 64, offset: 1216)
!9436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9437, size: 64)
!9437 = !DISubroutineType(types: !9438)
!9438 = !{!72, !372, !372, !7880, !7880, !2536}
!9439 = !DIDerivedType(tag: DW_TAG_member, name: "get_slave_size", scope: !9393, file: !9394, line: 102, baseType: !9440, size: 64, offset: 1280)
!9440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9441, size: 64)
!9441 = !DISubroutineType(types: !9442)
!9442 = !{!671, !2825, !2825}
!9443 = !DIDerivedType(tag: DW_TAG_member, name: "fill_slave_info", scope: !9393, file: !9394, line: 104, baseType: !9444, size: 64, offset: 1344)
!9444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9445, size: 64)
!9445 = !DISubroutineType(types: !9446)
!9446 = !{!72, !497, !2825, !2825}
!9447 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_net", scope: !9393, file: !9394, line: 107, baseType: !9448, size: 64, offset: 1408)
!9448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9449, size: 64)
!9449 = !DISubroutineType(types: !9450)
!9450 = !{!2039, !2825}
!9451 = !DIDerivedType(tag: DW_TAG_member, name: "get_linkxstats_size", scope: !9393, file: !9394, line: 108, baseType: !9452, size: 64, offset: 1472)
!9452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9453, size: 64)
!9453 = !DISubroutineType(types: !9454)
!9454 = !{!671, !2825, !72}
!9455 = !DIDerivedType(tag: DW_TAG_member, name: "fill_linkxstats", scope: !9393, file: !9394, line: 110, baseType: !9456, size: 64, offset: 1536)
!9456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9457, size: 64)
!9457 = !DISubroutineType(types: !9458)
!9458 = !{!72, !497, !2825, !616, !72}
!9459 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !346, file: !71, line: 2132, baseType: !7, size: 32, offset: 14144)
!9460 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !346, file: !71, line: 2134, baseType: !1115, size: 16, offset: 14176)
!9461 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !346, file: !71, line: 2139, baseType: !1321, size: 16, offset: 14192)
!9462 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !346, file: !71, line: 2140, baseType: !9463, size: 512, offset: 14208)
!9463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9464, size: 512, elements: !351)
!9464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !71, line: 793, size: 32, elements: !9465)
!9465 = !{!9466, !9467}
!9466 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9464, file: !71, line: 794, baseType: !1115, size: 16)
!9467 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !9464, file: !71, line: 795, baseType: !1115, size: 16, offset: 16)
!9468 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !346, file: !71, line: 2141, baseType: !9469, size: 128, offset: 14720)
!9469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1474, size: 128, elements: !351)
!9470 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !346, file: !71, line: 2149, baseType: !9471, size: 64, offset: 14848)
!9471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9472, size: 64)
!9472 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !333, line: 536, flags: DIFlagFwdDecl)
!9473 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !346, file: !71, line: 2150, baseType: !9474, size: 64, offset: 14912)
!9474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9475, size: 64)
!9475 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !71, line: 60, flags: DIFlagFwdDecl)
!9476 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !346, file: !71, line: 2151, baseType: !9477, size: 64, offset: 14976)
!9477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!9478 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !346, file: !71, line: 2152, baseType: !9477, size: 64, offset: 15040)
!9479 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !346, file: !71, line: 2153, baseType: !617, size: 8, offset: 15104)
!9480 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !346, file: !71, line: 2154, baseType: !7, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!9481 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !346, file: !71, line: 2156, baseType: !366, size: 128, offset: 15168)
!9482 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !346, file: !71, line: 2162, baseType: !9483, size: 64, offset: 15296)
!9483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9484, size: 64)
!9484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9485)
!9485 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !71, line: 68, flags: DIFlagFwdDecl)
!9486 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !346, file: !71, line: 2163, baseType: !9487, size: 64, offset: 15360)
!9487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9488, size: 64)
!9488 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !71, line: 69, flags: DIFlagFwdDecl)
!9489 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !346, file: !71, line: 2166, baseType: !9490, size: 384, offset: 15424)
!9490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9491, size: 384, elements: !944)
!9491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !71, line: 889, size: 128, elements: !9492)
!9492 = !{!9493, !9494}
!9493 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !9491, file: !71, line: 890, baseType: !3052, size: 64)
!9494 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !9491, file: !71, line: 891, baseType: !9495, size: 64, offset: 64)
!9495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9496, size: 64)
!9496 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !71, line: 880, flags: DIFlagFwdDecl)
!9497 = !{!9498, !9499, !9500, !9501, !9502, !9503}
!9498 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!9499 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!9500 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!9501 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!9502 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!9503 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!9504 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_interface_condition", file: !9505, line: 96, baseType: !7, size: 32, elements: !9506)
!9505 = !DIFile(filename: "./include/linux/usb.h", directory: "/home/lizy2001/genbc/linux")
!9506 = !{!9507, !9508, !9509, !9510}
!9507 = !DIEnumerator(name: "USB_INTERFACE_UNBOUND", value: 0, isUnsigned: true)
!9508 = !DIEnumerator(name: "USB_INTERFACE_BINDING", value: 1, isUnsigned: true)
!9509 = !DIEnumerator(name: "USB_INTERFACE_BOUND", value: 2, isUnsigned: true)
!9510 = !DIEnumerator(name: "USB_INTERFACE_UNBINDING", value: 3, isUnsigned: true)
!9511 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_state", file: !9512, line: 1156, baseType: !7, size: 32, elements: !9513)
!9512 = !DIFile(filename: "./include/uapi/linux/usb/ch9.h", directory: "/home/lizy2001/genbc/linux")
!9513 = !{!9514, !9515, !9516, !9517, !9518, !9519, !9520, !9521, !9522}
!9514 = !DIEnumerator(name: "USB_STATE_NOTATTACHED", value: 0, isUnsigned: true)
!9515 = !DIEnumerator(name: "USB_STATE_ATTACHED", value: 1, isUnsigned: true)
!9516 = !DIEnumerator(name: "USB_STATE_POWERED", value: 2, isUnsigned: true)
!9517 = !DIEnumerator(name: "USB_STATE_RECONNECTING", value: 3, isUnsigned: true)
!9518 = !DIEnumerator(name: "USB_STATE_UNAUTHENTICATED", value: 4, isUnsigned: true)
!9519 = !DIEnumerator(name: "USB_STATE_DEFAULT", value: 5, isUnsigned: true)
!9520 = !DIEnumerator(name: "USB_STATE_ADDRESS", value: 6, isUnsigned: true)
!9521 = !DIEnumerator(name: "USB_STATE_CONFIGURED", value: 7, isUnsigned: true)
!9522 = !DIEnumerator(name: "USB_STATE_SUSPENDED", value: 8, isUnsigned: true)
!9523 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_speed", file: !9512, line: 1146, baseType: !7, size: 32, elements: !9524)
!9524 = !{!9525, !9526, !9527, !9528, !9529, !9530, !9531}
!9525 = !DIEnumerator(name: "USB_SPEED_UNKNOWN", value: 0, isUnsigned: true)
!9526 = !DIEnumerator(name: "USB_SPEED_LOW", value: 1, isUnsigned: true)
!9527 = !DIEnumerator(name: "USB_SPEED_FULL", value: 2, isUnsigned: true)
!9528 = !DIEnumerator(name: "USB_SPEED_HIGH", value: 3, isUnsigned: true)
!9529 = !DIEnumerator(name: "USB_SPEED_WIRELESS", value: 4, isUnsigned: true)
!9530 = !DIEnumerator(name: "USB_SPEED_SUPER", value: 5, isUnsigned: true)
!9531 = !DIEnumerator(name: "USB_SPEED_SUPER_PLUS", value: 6, isUnsigned: true)
!9532 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_removable", file: !9505, line: 476, baseType: !7, size: 32, elements: !9533)
!9533 = !{!9534, !9535, !9536}
!9534 = !DIEnumerator(name: "USB_DEVICE_REMOVABLE_UNKNOWN", value: 0, isUnsigned: true)
!9535 = !DIEnumerator(name: "USB_DEVICE_REMOVABLE", value: 1, isUnsigned: true)
!9536 = !DIEnumerator(name: "USB_DEVICE_FIXED", value: 2, isUnsigned: true)
!9537 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtl_version", file: !3, line: 997, baseType: !7, size: 32, elements: !9538)
!9538 = !{!9539, !9540, !9541, !9542, !9543, !9544, !9545, !9546, !9547, !9548, !9549}
!9539 = !DIEnumerator(name: "RTL_VER_UNKNOWN", value: 0, isUnsigned: true)
!9540 = !DIEnumerator(name: "RTL_VER_01", value: 1, isUnsigned: true)
!9541 = !DIEnumerator(name: "RTL_VER_02", value: 2, isUnsigned: true)
!9542 = !DIEnumerator(name: "RTL_VER_03", value: 3, isUnsigned: true)
!9543 = !DIEnumerator(name: "RTL_VER_04", value: 4, isUnsigned: true)
!9544 = !DIEnumerator(name: "RTL_VER_05", value: 5, isUnsigned: true)
!9545 = !DIEnumerator(name: "RTL_VER_06", value: 6, isUnsigned: true)
!9546 = !DIEnumerator(name: "RTL_VER_07", value: 7, isUnsigned: true)
!9547 = !DIEnumerator(name: "RTL_VER_08", value: 8, isUnsigned: true)
!9548 = !DIEnumerator(name: "RTL_VER_09", value: 9, isUnsigned: true)
!9549 = !DIEnumerator(name: "RTL_VER_MAX", value: 10, isUnsigned: true)
!9550 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1885, line: 30, baseType: !590, size: 64, elements: !9551)
!9551 = !{!9552, !9553, !9554, !9555, !9556, !9557, !9558, !9559, !9560, !9561, !9562, !9563, !9564, !9565, !9566, !9567, !9568, !9569, !9570, !9571, !9572, !9573, !9574, !9575, !9576, !9577, !9578, !9579, !9580}
!9552 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!9553 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!9554 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!9555 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!9556 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!9557 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!9558 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!9559 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!9560 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!9561 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!9562 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!9563 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!9564 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!9565 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!9566 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!9567 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!9568 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!9569 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!9570 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!9571 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!9572 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!9573 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!9574 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!9575 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!9576 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!9577 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!9578 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!9579 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!9580 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!9581 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !412, line: 14, baseType: !7, size: 32, elements: !9582)
!9582 = !{!9583, !9584, !9585, !9586, !9587, !9588, !9589, !9590, !9591, !9592, !9593, !9594, !9595, !9596, !9597, !9598, !9599, !9600, !9601, !9602, !9603, !9604, !9605, !9606, !9607, !9608, !9609, !9610, !9611, !9612, !9613, !9614, !9615, !9616, !9617, !9618, !9619, !9620, !9621, !9622, !9623, !9624, !9625, !9626, !9627, !9628, !9629, !9630, !9631, !9632, !9633, !9634, !9635, !9636, !9637, !9638, !9639, !9640, !9641, !9642, !9643, !9644}
!9583 = !DIEnumerator(name: "NETIF_F_SG_BIT", value: 0, isUnsigned: true)
!9584 = !DIEnumerator(name: "NETIF_F_IP_CSUM_BIT", value: 1, isUnsigned: true)
!9585 = !DIEnumerator(name: "__UNUSED_NETIF_F_1", value: 2, isUnsigned: true)
!9586 = !DIEnumerator(name: "NETIF_F_HW_CSUM_BIT", value: 3, isUnsigned: true)
!9587 = !DIEnumerator(name: "NETIF_F_IPV6_CSUM_BIT", value: 4, isUnsigned: true)
!9588 = !DIEnumerator(name: "NETIF_F_HIGHDMA_BIT", value: 5, isUnsigned: true)
!9589 = !DIEnumerator(name: "NETIF_F_FRAGLIST_BIT", value: 6, isUnsigned: true)
!9590 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_TX_BIT", value: 7, isUnsigned: true)
!9591 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_RX_BIT", value: 8, isUnsigned: true)
!9592 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_FILTER_BIT", value: 9, isUnsigned: true)
!9593 = !DIEnumerator(name: "NETIF_F_VLAN_CHALLENGED_BIT", value: 10, isUnsigned: true)
!9594 = !DIEnumerator(name: "NETIF_F_GSO_BIT", value: 11, isUnsigned: true)
!9595 = !DIEnumerator(name: "NETIF_F_LLTX_BIT", value: 12, isUnsigned: true)
!9596 = !DIEnumerator(name: "NETIF_F_NETNS_LOCAL_BIT", value: 13, isUnsigned: true)
!9597 = !DIEnumerator(name: "NETIF_F_GRO_BIT", value: 14, isUnsigned: true)
!9598 = !DIEnumerator(name: "NETIF_F_LRO_BIT", value: 15, isUnsigned: true)
!9599 = !DIEnumerator(name: "NETIF_F_GSO_SHIFT", value: 16, isUnsigned: true)
!9600 = !DIEnumerator(name: "NETIF_F_TSO_BIT", value: 16, isUnsigned: true)
!9601 = !DIEnumerator(name: "NETIF_F_GSO_ROBUST_BIT", value: 17, isUnsigned: true)
!9602 = !DIEnumerator(name: "NETIF_F_TSO_ECN_BIT", value: 18, isUnsigned: true)
!9603 = !DIEnumerator(name: "NETIF_F_TSO_MANGLEID_BIT", value: 19, isUnsigned: true)
!9604 = !DIEnumerator(name: "NETIF_F_TSO6_BIT", value: 20, isUnsigned: true)
!9605 = !DIEnumerator(name: "NETIF_F_FSO_BIT", value: 21, isUnsigned: true)
!9606 = !DIEnumerator(name: "NETIF_F_GSO_GRE_BIT", value: 22, isUnsigned: true)
!9607 = !DIEnumerator(name: "NETIF_F_GSO_GRE_CSUM_BIT", value: 23, isUnsigned: true)
!9608 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP4_BIT", value: 24, isUnsigned: true)
!9609 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP6_BIT", value: 25, isUnsigned: true)
!9610 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_BIT", value: 26, isUnsigned: true)
!9611 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_CSUM_BIT", value: 27, isUnsigned: true)
!9612 = !DIEnumerator(name: "NETIF_F_GSO_PARTIAL_BIT", value: 28, isUnsigned: true)
!9613 = !DIEnumerator(name: "NETIF_F_GSO_TUNNEL_REMCSUM_BIT", value: 29, isUnsigned: true)
!9614 = !DIEnumerator(name: "NETIF_F_GSO_SCTP_BIT", value: 30, isUnsigned: true)
!9615 = !DIEnumerator(name: "NETIF_F_GSO_ESP_BIT", value: 31, isUnsigned: true)
!9616 = !DIEnumerator(name: "NETIF_F_GSO_UDP_BIT", value: 32, isUnsigned: true)
!9617 = !DIEnumerator(name: "NETIF_F_GSO_UDP_L4_BIT", value: 33, isUnsigned: true)
!9618 = !DIEnumerator(name: "NETIF_F_GSO_FRAGLIST_BIT", value: 34, isUnsigned: true)
!9619 = !DIEnumerator(name: "NETIF_F_GSO_LAST", value: 34, isUnsigned: true)
!9620 = !DIEnumerator(name: "NETIF_F_FCOE_CRC_BIT", value: 35, isUnsigned: true)
!9621 = !DIEnumerator(name: "NETIF_F_SCTP_CRC_BIT", value: 36, isUnsigned: true)
!9622 = !DIEnumerator(name: "NETIF_F_FCOE_MTU_BIT", value: 37, isUnsigned: true)
!9623 = !DIEnumerator(name: "NETIF_F_NTUPLE_BIT", value: 38, isUnsigned: true)
!9624 = !DIEnumerator(name: "NETIF_F_RXHASH_BIT", value: 39, isUnsigned: true)
!9625 = !DIEnumerator(name: "NETIF_F_RXCSUM_BIT", value: 40, isUnsigned: true)
!9626 = !DIEnumerator(name: "NETIF_F_NOCACHE_COPY_BIT", value: 41, isUnsigned: true)
!9627 = !DIEnumerator(name: "NETIF_F_LOOPBACK_BIT", value: 42, isUnsigned: true)
!9628 = !DIEnumerator(name: "NETIF_F_RXFCS_BIT", value: 43, isUnsigned: true)
!9629 = !DIEnumerator(name: "NETIF_F_RXALL_BIT", value: 44, isUnsigned: true)
!9630 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_TX_BIT", value: 45, isUnsigned: true)
!9631 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_RX_BIT", value: 46, isUnsigned: true)
!9632 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_FILTER_BIT", value: 47, isUnsigned: true)
!9633 = !DIEnumerator(name: "NETIF_F_HW_L2FW_DOFFLOAD_BIT", value: 48, isUnsigned: true)
!9634 = !DIEnumerator(name: "NETIF_F_HW_TC_BIT", value: 49, isUnsigned: true)
!9635 = !DIEnumerator(name: "NETIF_F_HW_ESP_BIT", value: 50, isUnsigned: true)
!9636 = !DIEnumerator(name: "NETIF_F_HW_ESP_TX_CSUM_BIT", value: 51, isUnsigned: true)
!9637 = !DIEnumerator(name: "NETIF_F_RX_UDP_TUNNEL_PORT_BIT", value: 52, isUnsigned: true)
!9638 = !DIEnumerator(name: "NETIF_F_HW_TLS_TX_BIT", value: 53, isUnsigned: true)
!9639 = !DIEnumerator(name: "NETIF_F_HW_TLS_RX_BIT", value: 54, isUnsigned: true)
!9640 = !DIEnumerator(name: "NETIF_F_GRO_HW_BIT", value: 55, isUnsigned: true)
!9641 = !DIEnumerator(name: "NETIF_F_HW_TLS_RECORD_BIT", value: 56, isUnsigned: true)
!9642 = !DIEnumerator(name: "NETIF_F_GRO_FRAGLIST_BIT", value: 57, isUnsigned: true)
!9643 = !DIEnumerator(name: "NETIF_F_HW_MACSEC_BIT", value: 58, isUnsigned: true)
!9644 = !DIEnumerator(name: "NETDEV_FEATURE_COUNT", value: 59, isUnsigned: true)
!9645 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtl8152_flags", file: !3, line: 679, baseType: !7, size: 32, elements: !9646)
!9646 = !{!9647, !9648, !9649, !9650, !9651, !9652, !9653, !9654, !9655, !9656}
!9647 = !DIEnumerator(name: "RTL8152_UNPLUG", value: 0, isUnsigned: true)
!9648 = !DIEnumerator(name: "RTL8152_SET_RX_MODE", value: 1, isUnsigned: true)
!9649 = !DIEnumerator(name: "WORK_ENABLE", value: 2, isUnsigned: true)
!9650 = !DIEnumerator(name: "RTL8152_LINK_CHG", value: 3, isUnsigned: true)
!9651 = !DIEnumerator(name: "SELECTIVE_SUSPEND", value: 4, isUnsigned: true)
!9652 = !DIEnumerator(name: "PHY_RESET", value: 5, isUnsigned: true)
!9653 = !DIEnumerator(name: "SCHEDULE_TASKLET", value: 6, isUnsigned: true)
!9654 = !DIEnumerator(name: "GREEN_ETHERNET", value: 7, isUnsigned: true)
!9655 = !DIEnumerator(name: "DELL_TB_RX_AGG_BUG", value: 8, isUnsigned: true)
!9656 = !DIEnumerator(name: "LENOVO_MACPASSTHRU", value: 9, isUnsigned: true)
!9657 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9658, line: 10, baseType: !7, size: 32, elements: !9659)
!9658 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!9659 = !{!9660, !9661}
!9660 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!9661 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!9662 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !71, line: 4102, baseType: !7, size: 32, elements: !9663)
!9663 = !{!9664, !9665, !9666, !9667, !9668, !9669, !9670, !9671, !9672, !9673, !9674, !9675, !9676, !9677, !9678, !9679}
!9664 = !DIEnumerator(name: "NETIF_MSG_DRV_BIT", value: 0, isUnsigned: true)
!9665 = !DIEnumerator(name: "NETIF_MSG_PROBE_BIT", value: 1, isUnsigned: true)
!9666 = !DIEnumerator(name: "NETIF_MSG_LINK_BIT", value: 2, isUnsigned: true)
!9667 = !DIEnumerator(name: "NETIF_MSG_TIMER_BIT", value: 3, isUnsigned: true)
!9668 = !DIEnumerator(name: "NETIF_MSG_IFDOWN_BIT", value: 4, isUnsigned: true)
!9669 = !DIEnumerator(name: "NETIF_MSG_IFUP_BIT", value: 5, isUnsigned: true)
!9670 = !DIEnumerator(name: "NETIF_MSG_RX_ERR_BIT", value: 6, isUnsigned: true)
!9671 = !DIEnumerator(name: "NETIF_MSG_TX_ERR_BIT", value: 7, isUnsigned: true)
!9672 = !DIEnumerator(name: "NETIF_MSG_TX_QUEUED_BIT", value: 8, isUnsigned: true)
!9673 = !DIEnumerator(name: "NETIF_MSG_INTR_BIT", value: 9, isUnsigned: true)
!9674 = !DIEnumerator(name: "NETIF_MSG_TX_DONE_BIT", value: 10, isUnsigned: true)
!9675 = !DIEnumerator(name: "NETIF_MSG_RX_STATUS_BIT", value: 11, isUnsigned: true)
!9676 = !DIEnumerator(name: "NETIF_MSG_PKTDATA_BIT", value: 12, isUnsigned: true)
!9677 = !DIEnumerator(name: "NETIF_MSG_HW_BIT", value: 13, isUnsigned: true)
!9678 = !DIEnumerator(name: "NETIF_MSG_WOL_BIT", value: 14, isUnsigned: true)
!9679 = !DIEnumerator(name: "NETIF_MSG_CLASS_COUNT", value: 15, isUnsigned: true)
!9680 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !9681, line: 305, baseType: !7, size: 32, elements: !9682)
!9681 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!9682 = !{!9683, !9684, !9685, !9686}
!9683 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!9684 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!9685 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!9686 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!9687 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtl_register_content", file: !3, line: 637, baseType: !7, size: 32, elements: !9688)
!9688 = !{!9689, !9690, !9691, !9692, !9693}
!9689 = !DIEnumerator(name: "_1000bps", value: 16, isUnsigned: true)
!9690 = !DIEnumerator(name: "_100bps", value: 8, isUnsigned: true)
!9691 = !DIEnumerator(name: "_10bps", value: 4, isUnsigned: true)
!9692 = !DIEnumerator(name: "LINK_STATUS", value: 2, isUnsigned: true)
!9693 = !DIEnumerator(name: "FULL_DUP", value: 1, isUnsigned: true)
!9694 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_mode_bit_indices", file: !291, line: 1521, baseType: !7, size: 32, elements: !9695)
!9695 = !{!9696, !9697, !9698, !9699, !9700, !9701, !9702, !9703, !9704, !9705, !9706, !9707, !9708, !9709, !9710, !9711, !9712, !9713, !9714, !9715, !9716, !9717, !9718, !9719, !9720, !9721, !9722, !9723, !9724, !9725, !9726, !9727, !9728, !9729, !9730, !9731, !9732, !9733, !9734, !9735, !9736, !9737, !9738, !9739, !9740, !9741, !9742, !9743, !9744, !9745, !9746, !9747, !9748, !9749, !9750, !9751, !9752, !9753, !9754, !9755, !9756, !9757, !9758, !9759, !9760, !9761, !9762, !9763, !9764, !9765, !9766, !9767, !9768, !9769, !9770, !9771, !9772, !9773, !9774, !9775, !9776, !9777, !9778, !9779, !9780, !9781, !9782, !9783, !9784, !9785, !9786, !9787, !9788}
!9696 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Half_BIT", value: 0, isUnsigned: true)
!9697 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Full_BIT", value: 1, isUnsigned: true)
!9698 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Half_BIT", value: 2, isUnsigned: true)
!9699 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Full_BIT", value: 3, isUnsigned: true)
!9700 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Half_BIT", value: 4, isUnsigned: true)
!9701 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Full_BIT", value: 5, isUnsigned: true)
!9702 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Autoneg_BIT", value: 6, isUnsigned: true)
!9703 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_TP_BIT", value: 7, isUnsigned: true)
!9704 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_AUI_BIT", value: 8, isUnsigned: true)
!9705 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_MII_BIT", value: 9, isUnsigned: true)
!9706 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FIBRE_BIT", value: 10, isUnsigned: true)
!9707 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_BNC_BIT", value: 11, isUnsigned: true)
!9708 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseT_Full_BIT", value: 12, isUnsigned: true)
!9709 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Pause_BIT", value: 13, isUnsigned: true)
!9710 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Asym_Pause_BIT", value: 14, isUnsigned: true)
!9711 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseX_Full_BIT", value: 15, isUnsigned: true)
!9712 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Backplane_BIT", value: 16, isUnsigned: true)
!9713 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseKX_Full_BIT", value: 17, isUnsigned: true)
!9714 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKX4_Full_BIT", value: 18, isUnsigned: true)
!9715 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKR_Full_BIT", value: 19, isUnsigned: true)
!9716 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseR_FEC_BIT", value: 20, isUnsigned: true)
!9717 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseMLD2_Full_BIT", value: 21, isUnsigned: true)
!9718 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseKR2_Full_BIT", value: 22, isUnsigned: true)
!9719 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseKR4_Full_BIT", value: 23, isUnsigned: true)
!9720 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseCR4_Full_BIT", value: 24, isUnsigned: true)
!9721 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseSR4_Full_BIT", value: 25, isUnsigned: true)
!9722 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseLR4_Full_BIT", value: 26, isUnsigned: true)
!9723 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseKR4_Full_BIT", value: 27, isUnsigned: true)
!9724 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseCR4_Full_BIT", value: 28, isUnsigned: true)
!9725 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseSR4_Full_BIT", value: 29, isUnsigned: true)
!9726 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseLR4_Full_BIT", value: 30, isUnsigned: true)
!9727 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseCR_Full_BIT", value: 31, isUnsigned: true)
!9728 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseKR_Full_BIT", value: 32, isUnsigned: true)
!9729 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseSR_Full_BIT", value: 33, isUnsigned: true)
!9730 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR2_Full_BIT", value: 34, isUnsigned: true)
!9731 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR2_Full_BIT", value: 35, isUnsigned: true)
!9732 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR4_Full_BIT", value: 36, isUnsigned: true)
!9733 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR4_Full_BIT", value: 37, isUnsigned: true)
!9734 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR4_Full_BIT", value: 38, isUnsigned: true)
!9735 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR4_ER4_Full_BIT", value: 39, isUnsigned: true)
!9736 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR2_Full_BIT", value: 40, isUnsigned: true)
!9737 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseX_Full_BIT", value: 41, isUnsigned: true)
!9738 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseCR_Full_BIT", value: 42, isUnsigned: true)
!9739 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseSR_Full_BIT", value: 43, isUnsigned: true)
!9740 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLR_Full_BIT", value: 44, isUnsigned: true)
!9741 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLRM_Full_BIT", value: 45, isUnsigned: true)
!9742 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseER_Full_BIT", value: 46, isUnsigned: true)
!9743 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseT_Full_BIT", value: 47, isUnsigned: true)
!9744 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_5000baseT_Full_BIT", value: 48, isUnsigned: true)
!9745 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_NONE_BIT", value: 49, isUnsigned: true)
!9746 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_RS_BIT", value: 50, isUnsigned: true)
!9747 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_BASER_BIT", value: 51, isUnsigned: true)
!9748 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR_Full_BIT", value: 52, isUnsigned: true)
!9749 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR_Full_BIT", value: 53, isUnsigned: true)
!9750 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR_Full_BIT", value: 54, isUnsigned: true)
!9751 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseLR_ER_FR_Full_BIT", value: 55, isUnsigned: true)
!9752 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseDR_Full_BIT", value: 56, isUnsigned: true)
!9753 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR2_Full_BIT", value: 57, isUnsigned: true)
!9754 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR2_Full_BIT", value: 58, isUnsigned: true)
!9755 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR2_Full_BIT", value: 59, isUnsigned: true)
!9756 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR2_ER2_FR2_Full_BIT", value: 60, isUnsigned: true)
!9757 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR2_Full_BIT", value: 61, isUnsigned: true)
!9758 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR4_Full_BIT", value: 62, isUnsigned: true)
!9759 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR4_Full_BIT", value: 63, isUnsigned: true)
!9760 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR4_ER4_FR4_Full_BIT", value: 64, isUnsigned: true)
!9761 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR4_Full_BIT", value: 65, isUnsigned: true)
!9762 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR4_Full_BIT", value: 66, isUnsigned: true)
!9763 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT1_Full_BIT", value: 67, isUnsigned: true)
!9764 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT1_Full_BIT", value: 68, isUnsigned: true)
!9765 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR8_Full_BIT", value: 69, isUnsigned: true)
!9766 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR8_Full_BIT", value: 70, isUnsigned: true)
!9767 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR8_ER8_FR8_Full_BIT", value: 71, isUnsigned: true)
!9768 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR8_Full_BIT", value: 72, isUnsigned: true)
!9769 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR8_Full_BIT", value: 73, isUnsigned: true)
!9770 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_LLRS_BIT", value: 74, isUnsigned: true)
!9771 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR_Full_BIT", value: 75, isUnsigned: true)
!9772 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR_Full_BIT", value: 76, isUnsigned: true)
!9773 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR_ER_FR_Full_BIT", value: 77, isUnsigned: true)
!9774 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR_Full_BIT", value: 78, isUnsigned: true)
!9775 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR_Full_BIT", value: 79, isUnsigned: true)
!9776 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR2_Full_BIT", value: 80, isUnsigned: true)
!9777 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR2_Full_BIT", value: 81, isUnsigned: true)
!9778 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR2_ER2_FR2_Full_BIT", value: 82, isUnsigned: true)
!9779 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR2_Full_BIT", value: 83, isUnsigned: true)
!9780 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR2_Full_BIT", value: 84, isUnsigned: true)
!9781 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR4_Full_BIT", value: 85, isUnsigned: true)
!9782 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR4_Full_BIT", value: 86, isUnsigned: true)
!9783 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR4_ER4_FR4_Full_BIT", value: 87, isUnsigned: true)
!9784 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR4_Full_BIT", value: 88, isUnsigned: true)
!9785 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR4_Full_BIT", value: 89, isUnsigned: true)
!9786 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Half_BIT", value: 90, isUnsigned: true)
!9787 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Full_BIT", value: 91, isUnsigned: true)
!9788 = !DIEnumerator(name: "__ETHTOOL_LINK_MODE_MASK_NBITS", value: 92, isUnsigned: true)
!9789 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_state_t", file: !71, line: 288, baseType: !7, size: 32, elements: !9790)
!9790 = !{!9791, !9792, !9793, !9794, !9795, !9796}
!9791 = !DIEnumerator(name: "__LINK_STATE_START", value: 0, isUnsigned: true)
!9792 = !DIEnumerator(name: "__LINK_STATE_PRESENT", value: 1, isUnsigned: true)
!9793 = !DIEnumerator(name: "__LINK_STATE_NOCARRIER", value: 2, isUnsigned: true)
!9794 = !DIEnumerator(name: "__LINK_STATE_LINKWATCH_PENDING", value: 3, isUnsigned: true)
!9795 = !DIEnumerator(name: "__LINK_STATE_DORMANT", value: 4, isUnsigned: true)
!9796 = !DIEnumerator(name: "__LINK_STATE_TESTING", value: 5, isUnsigned: true)
!9797 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_queue_state_t", file: !71, line: 558, baseType: !7, size: 32, elements: !9798)
!9798 = !{!9799, !9800, !9801}
!9799 = !DIEnumerator(name: "__QUEUE_STATE_DRV_XOFF", value: 0, isUnsigned: true)
!9800 = !DIEnumerator(name: "__QUEUE_STATE_STACK_XOFF", value: 1, isUnsigned: true)
!9801 = !DIEnumerator(name: "__QUEUE_STATE_FROZEN", value: 2, isUnsigned: true)
!9802 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !71, line: 352, baseType: !7, size: 32, elements: !9803)
!9803 = !{!9804, !9805, !9806, !9807, !9808, !9809, !9810}
!9804 = !DIEnumerator(name: "NAPI_STATE_SCHED", value: 0, isUnsigned: true)
!9805 = !DIEnumerator(name: "NAPI_STATE_MISSED", value: 1, isUnsigned: true)
!9806 = !DIEnumerator(name: "NAPI_STATE_DISABLE", value: 2, isUnsigned: true)
!9807 = !DIEnumerator(name: "NAPI_STATE_NPSVC", value: 3, isUnsigned: true)
!9808 = !DIEnumerator(name: "NAPI_STATE_LISTED", value: 4, isUnsigned: true)
!9809 = !DIEnumerator(name: "NAPI_STATE_NO_BUSY_POLL", value: 5, isUnsigned: true)
!9810 = !DIEnumerator(name: "NAPI_STATE_IN_BUSY_POLL", value: 6, isUnsigned: true)
!9811 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "net_device_flags", file: !7647, line: 82, baseType: !7, size: 32, elements: !9812)
!9812 = !{!9813, !9814, !9815, !9816, !9817, !9818, !9819, !9820, !9821, !9822, !9823, !9824, !9825, !9826, !9827, !9828, !9829, !9830, !9831}
!9813 = !DIEnumerator(name: "IFF_UP", value: 1, isUnsigned: true)
!9814 = !DIEnumerator(name: "IFF_BROADCAST", value: 2, isUnsigned: true)
!9815 = !DIEnumerator(name: "IFF_DEBUG", value: 4, isUnsigned: true)
!9816 = !DIEnumerator(name: "IFF_LOOPBACK", value: 8, isUnsigned: true)
!9817 = !DIEnumerator(name: "IFF_POINTOPOINT", value: 16, isUnsigned: true)
!9818 = !DIEnumerator(name: "IFF_NOTRAILERS", value: 32, isUnsigned: true)
!9819 = !DIEnumerator(name: "IFF_RUNNING", value: 64, isUnsigned: true)
!9820 = !DIEnumerator(name: "IFF_NOARP", value: 128, isUnsigned: true)
!9821 = !DIEnumerator(name: "IFF_PROMISC", value: 256, isUnsigned: true)
!9822 = !DIEnumerator(name: "IFF_ALLMULTI", value: 512, isUnsigned: true)
!9823 = !DIEnumerator(name: "IFF_MASTER", value: 1024, isUnsigned: true)
!9824 = !DIEnumerator(name: "IFF_SLAVE", value: 2048, isUnsigned: true)
!9825 = !DIEnumerator(name: "IFF_MULTICAST", value: 4096, isUnsigned: true)
!9826 = !DIEnumerator(name: "IFF_PORTSEL", value: 8192, isUnsigned: true)
!9827 = !DIEnumerator(name: "IFF_AUTOMEDIA", value: 16384, isUnsigned: true)
!9828 = !DIEnumerator(name: "IFF_DYNAMIC", value: 32768, isUnsigned: true)
!9829 = !DIEnumerator(name: "IFF_LOWER_UP", value: 65536, isUnsigned: true)
!9830 = !DIEnumerator(name: "IFF_DORMANT", value: 131072, isUnsigned: true)
!9831 = !DIEnumerator(name: "IFF_ECHO", value: 262144, isUnsigned: true)
!9832 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9833, line: 651, baseType: !7, size: 32, elements: !9834)
!9833 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!9834 = !{!9835, !9836}
!9835 = !DIEnumerator(name: "TASKLET_STATE_SCHED", value: 0, isUnsigned: true)
!9836 = !DIEnumerator(name: "TASKLET_STATE_RUN", value: 1, isUnsigned: true)
!9837 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtl_fw_type", file: !3, line: 988, baseType: !7, size: 32, elements: !9838)
!9838 = !{!9839, !9840, !9841, !9842, !9843, !9844}
!9839 = !DIEnumerator(name: "RTL_FW_END", value: 0, isUnsigned: true)
!9840 = !DIEnumerator(name: "RTL_FW_PLA", value: 1, isUnsigned: true)
!9841 = !DIEnumerator(name: "RTL_FW_USB", value: 2, isUnsigned: true)
!9842 = !DIEnumerator(name: "RTL_FW_PHY_START", value: 3, isUnsigned: true)
!9843 = !DIEnumerator(name: "RTL_FW_PHY_STOP", value: 4, isUnsigned: true)
!9844 = !DIEnumerator(name: "RTL_FW_PHY_NC", value: 5, isUnsigned: true)
!9845 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "spd_duplex", file: !3, line: 514, baseType: !7, size: 32, elements: !9846)
!9846 = !{!9847, !9848, !9849, !9850, !9851, !9852, !9853, !9854, !9855}
!9847 = !DIEnumerator(name: "NWAY_10M_HALF", value: 0, isUnsigned: true)
!9848 = !DIEnumerator(name: "NWAY_10M_FULL", value: 1, isUnsigned: true)
!9849 = !DIEnumerator(name: "NWAY_100M_HALF", value: 2, isUnsigned: true)
!9850 = !DIEnumerator(name: "NWAY_100M_FULL", value: 3, isUnsigned: true)
!9851 = !DIEnumerator(name: "NWAY_1000M_FULL", value: 4, isUnsigned: true)
!9852 = !DIEnumerator(name: "FORCE_10M_HALF", value: 5, isUnsigned: true)
!9853 = !DIEnumerator(name: "FORCE_10M_FULL", value: 6, isUnsigned: true)
!9854 = !DIEnumerator(name: "FORCE_100M_HALF", value: 7, isUnsigned: true)
!9855 = !DIEnumerator(name: "FORCE_100M_FULL", value: 8, isUnsigned: true)
!9856 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tx_csum_stat", file: !3, line: 1011, baseType: !7, size: 32, elements: !9857)
!9857 = !{!9858, !9859, !9860}
!9858 = !DIEnumerator(name: "TX_CSUM_SUCCESS", value: 0, isUnsigned: true)
!9859 = !DIEnumerator(name: "TX_CSUM_TSO", value: 1, isUnsigned: true)
!9860 = !DIEnumerator(name: "TX_CSUM_NONE", value: 2, isUnsigned: true)
!9861 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9862, line: 28, baseType: !7, size: 32, elements: !9863)
!9862 = !DIFile(filename: "./include/uapi/linux/in.h", directory: "/home/lizy2001/genbc/linux")
!9863 = !{!9864, !9865, !9866, !9867, !9868, !9869, !9870, !9871, !9872, !9873, !9874, !9875, !9876, !9877, !9878, !9879, !9880, !9881, !9882, !9883, !9884, !9885, !9886, !9887, !9888, !9889, !9890, !9891}
!9864 = !DIEnumerator(name: "IPPROTO_IP", value: 0, isUnsigned: true)
!9865 = !DIEnumerator(name: "IPPROTO_ICMP", value: 1, isUnsigned: true)
!9866 = !DIEnumerator(name: "IPPROTO_IGMP", value: 2, isUnsigned: true)
!9867 = !DIEnumerator(name: "IPPROTO_IPIP", value: 4, isUnsigned: true)
!9868 = !DIEnumerator(name: "IPPROTO_TCP", value: 6, isUnsigned: true)
!9869 = !DIEnumerator(name: "IPPROTO_EGP", value: 8, isUnsigned: true)
!9870 = !DIEnumerator(name: "IPPROTO_PUP", value: 12, isUnsigned: true)
!9871 = !DIEnumerator(name: "IPPROTO_UDP", value: 17, isUnsigned: true)
!9872 = !DIEnumerator(name: "IPPROTO_IDP", value: 22, isUnsigned: true)
!9873 = !DIEnumerator(name: "IPPROTO_TP", value: 29, isUnsigned: true)
!9874 = !DIEnumerator(name: "IPPROTO_DCCP", value: 33, isUnsigned: true)
!9875 = !DIEnumerator(name: "IPPROTO_IPV6", value: 41, isUnsigned: true)
!9876 = !DIEnumerator(name: "IPPROTO_RSVP", value: 46, isUnsigned: true)
!9877 = !DIEnumerator(name: "IPPROTO_GRE", value: 47, isUnsigned: true)
!9878 = !DIEnumerator(name: "IPPROTO_ESP", value: 50, isUnsigned: true)
!9879 = !DIEnumerator(name: "IPPROTO_AH", value: 51, isUnsigned: true)
!9880 = !DIEnumerator(name: "IPPROTO_MTP", value: 92, isUnsigned: true)
!9881 = !DIEnumerator(name: "IPPROTO_BEETPH", value: 94, isUnsigned: true)
!9882 = !DIEnumerator(name: "IPPROTO_ENCAP", value: 98, isUnsigned: true)
!9883 = !DIEnumerator(name: "IPPROTO_PIM", value: 103, isUnsigned: true)
!9884 = !DIEnumerator(name: "IPPROTO_COMP", value: 108, isUnsigned: true)
!9885 = !DIEnumerator(name: "IPPROTO_SCTP", value: 132, isUnsigned: true)
!9886 = !DIEnumerator(name: "IPPROTO_UDPLITE", value: 136, isUnsigned: true)
!9887 = !DIEnumerator(name: "IPPROTO_MPLS", value: 137, isUnsigned: true)
!9888 = !DIEnumerator(name: "IPPROTO_ETHERNET", value: 143, isUnsigned: true)
!9889 = !DIEnumerator(name: "IPPROTO_RAW", value: 255, isUnsigned: true)
!9890 = !DIEnumerator(name: "IPPROTO_MPTCP", value: 262, isUnsigned: true)
!9891 = !DIEnumerator(name: "IPPROTO_MAX", value: 263, isUnsigned: true)
!9892 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "skb_free_reason", file: !71, line: 3780, baseType: !7, size: 32, elements: !9893)
!9893 = !{!9894, !9895}
!9894 = !DIEnumerator(name: "SKB_REASON_CONSUMED", value: 0, isUnsigned: true)
!9895 = !DIEnumerator(name: "SKB_REASON_DROPPED", value: 1, isUnsigned: true)
!9896 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !499, line: 423, baseType: !7, size: 32, elements: !9897)
!9897 = !{!9898, !9899, !9900, !9901, !9902, !9903, !9904}
!9898 = !DIEnumerator(name: "SKBTX_HW_TSTAMP", value: 1, isUnsigned: true)
!9899 = !DIEnumerator(name: "SKBTX_SW_TSTAMP", value: 2, isUnsigned: true)
!9900 = !DIEnumerator(name: "SKBTX_IN_PROGRESS", value: 4, isUnsigned: true)
!9901 = !DIEnumerator(name: "SKBTX_DEV_ZEROCOPY", value: 8, isUnsigned: true)
!9902 = !DIEnumerator(name: "SKBTX_WIFI_STATUS", value: 16, isUnsigned: true)
!9903 = !DIEnumerator(name: "SKBTX_SHARED_FRAG", value: 32, isUnsigned: true)
!9904 = !DIEnumerator(name: "SKBTX_SCHED_TSTAMP", value: 64, isUnsigned: true)
!9905 = !{!929, !394, !411, !553, !9906, !784, !647, !9907, !2067, !545, !9980, !654, !2519, !1115, !1474, !8817, !497, !72, !10208, !10210, !10212, !10458, !10461, !701, !10464, !10466, !10468, !10480, !10481, !10499, !10506, !7823, !10525, !10280, !10267, !10526, !10528, !10530, !10531, !590, !10542, !10662, !10663, !10668, !10691, !10692, !10714, !10729, !10742, !5809, !4723, !10743, !10745, !415, !10753, !1537, !10754, !10804, !7, !10805, !566}
!9906 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !544, line: 29, baseType: !553)
!9907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9908, size: 64)
!9908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_device", file: !9505, line: 631, size: 10624, elements: !9909)
!9909 = !{!9910, !9911, !9912, !9913, !9914, !9915, !9916, !9917, !9920, !9921, !9923, !9924, !9951, !9990, !9991, !10008, !10069, !10151, !10152, !10154, !10155, !10157, !10158, !10159, !10160, !10161, !10162, !10163, !10164, !10165, !10166, !10167, !10168, !10169, !10170, !10171, !10172, !10173, !10174, !10175, !10176, !10177, !10178, !10179, !10180, !10181, !10182, !10183, !10184, !10185, !10186, !10187, !10190, !10191, !10192, !10197, !10204, !10205, !10206, !10207}
!9910 = !DIDerivedType(tag: DW_TAG_member, name: "devnum", scope: !9908, file: !9505, line: 632, baseType: !72, size: 32)
!9911 = !DIDerivedType(tag: DW_TAG_member, name: "devpath", scope: !9908, file: !9505, line: 633, baseType: !349, size: 128, offset: 32)
!9912 = !DIDerivedType(tag: DW_TAG_member, name: "route", scope: !9908, file: !9505, line: 634, baseType: !784, size: 32, offset: 160)
!9913 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9908, file: !9505, line: 635, baseType: !9511, size: 32, offset: 192)
!9914 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !9908, file: !9505, line: 636, baseType: !9523, size: 32, offset: 224)
!9915 = !DIDerivedType(tag: DW_TAG_member, name: "rx_lanes", scope: !9908, file: !9505, line: 637, baseType: !7, size: 32, offset: 256)
!9916 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lanes", scope: !9908, file: !9505, line: 638, baseType: !7, size: 32, offset: 288)
!9917 = !DIDerivedType(tag: DW_TAG_member, name: "tt", scope: !9908, file: !9505, line: 640, baseType: !9918, size: 64, offset: 320)
!9918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9919, size: 64)
!9919 = !DICompositeType(tag: DW_TAG_structure_type, name: "usb_tt", file: !9505, line: 474, flags: DIFlagFwdDecl)
!9920 = !DIDerivedType(tag: DW_TAG_member, name: "ttport", scope: !9908, file: !9505, line: 641, baseType: !72, size: 32, offset: 384)
!9921 = !DIDerivedType(tag: DW_TAG_member, name: "toggle", scope: !9908, file: !9505, line: 643, baseType: !9922, size: 64, offset: 416)
!9922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !555)
!9923 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !9908, file: !9505, line: 645, baseType: !9907, size: 64, offset: 512)
!9924 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !9908, file: !9505, line: 646, baseType: !9925, size: 64, offset: 576)
!9925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9926, size: 64)
!9926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_bus", file: !9505, line: 424, size: 960, elements: !9927)
!9927 = !{!9928, !9929, !9930, !9931, !9932, !9933, !9934, !9935, !9936, !9937, !9938, !9939, !9940, !9941, !9945, !9946, !9947, !9948, !9949, !9950}
!9928 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !9926, file: !9505, line: 425, baseType: !4308, size: 64)
!9929 = !DIDerivedType(tag: DW_TAG_member, name: "sysdev", scope: !9926, file: !9505, line: 426, baseType: !4308, size: 64, offset: 64)
!9930 = !DIDerivedType(tag: DW_TAG_member, name: "busnum", scope: !9926, file: !9505, line: 427, baseType: !72, size: 32, offset: 128)
!9931 = !DIDerivedType(tag: DW_TAG_member, name: "bus_name", scope: !9926, file: !9505, line: 428, baseType: !374, size: 64, offset: 192)
!9932 = !DIDerivedType(tag: DW_TAG_member, name: "uses_pio_for_control", scope: !9926, file: !9505, line: 429, baseType: !1474, size: 8, offset: 256)
!9933 = !DIDerivedType(tag: DW_TAG_member, name: "otg_port", scope: !9926, file: !9505, line: 433, baseType: !1474, size: 8, offset: 264)
!9934 = !DIDerivedType(tag: DW_TAG_member, name: "is_b_host", scope: !9926, file: !9505, line: 434, baseType: !7, size: 1, offset: 272, flags: DIFlagBitField, extraData: i64 272)
!9935 = !DIDerivedType(tag: DW_TAG_member, name: "b_hnp_enable", scope: !9926, file: !9505, line: 435, baseType: !7, size: 1, offset: 273, flags: DIFlagBitField, extraData: i64 272)
!9936 = !DIDerivedType(tag: DW_TAG_member, name: "no_stop_on_short", scope: !9926, file: !9505, line: 436, baseType: !7, size: 1, offset: 274, flags: DIFlagBitField, extraData: i64 272)
!9937 = !DIDerivedType(tag: DW_TAG_member, name: "no_sg_constraint", scope: !9926, file: !9505, line: 441, baseType: !7, size: 1, offset: 275, flags: DIFlagBitField, extraData: i64 272)
!9938 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !9926, file: !9505, line: 442, baseType: !7, size: 32, offset: 288)
!9939 = !DIDerivedType(tag: DW_TAG_member, name: "devnum_next", scope: !9926, file: !9505, line: 444, baseType: !72, size: 32, offset: 320)
!9940 = !DIDerivedType(tag: DW_TAG_member, name: "devnum_next_mutex", scope: !9926, file: !9505, line: 446, baseType: !1031, size: 192, offset: 384)
!9941 = !DIDerivedType(tag: DW_TAG_member, name: "devmap", scope: !9926, file: !9505, line: 448, baseType: !9942, size: 128, offset: 576)
!9942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_devmap", file: !9505, line: 417, size: 128, elements: !9943)
!9943 = !{!9944}
!9944 = !DIDerivedType(tag: DW_TAG_member, name: "devicemap", scope: !9942, file: !9505, line: 418, baseType: !8639, size: 128)
!9945 = !DIDerivedType(tag: DW_TAG_member, name: "root_hub", scope: !9926, file: !9505, line: 449, baseType: !9907, size: 64, offset: 704)
!9946 = !DIDerivedType(tag: DW_TAG_member, name: "hs_companion", scope: !9926, file: !9505, line: 450, baseType: !9925, size: 64, offset: 768)
!9947 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_allocated", scope: !9926, file: !9505, line: 452, baseType: !72, size: 32, offset: 832)
!9948 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_int_reqs", scope: !9926, file: !9505, line: 459, baseType: !72, size: 32, offset: 864)
!9949 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_isoc_reqs", scope: !9926, file: !9505, line: 460, baseType: !72, size: 32, offset: 896)
!9950 = !DIDerivedType(tag: DW_TAG_member, name: "resuming_ports", scope: !9926, file: !9505, line: 462, baseType: !7, size: 32, offset: 928)
!9951 = !DIDerivedType(tag: DW_TAG_member, name: "ep0", scope: !9908, file: !9505, line: 647, baseType: !9952, size: 640, offset: 640)
!9952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_endpoint", file: !9505, line: 67, size: 640, elements: !9953)
!9953 = !{!9954, !9965, !9973, !9981, !9982, !9983, !9986, !9987, !9988, !9989}
!9954 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !9952, file: !9505, line: 68, baseType: !9955, size: 72)
!9955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_endpoint_descriptor", file: !9512, line: 407, size: 72, elements: !9956)
!9956 = !{!9957, !9958, !9959, !9960, !9961, !9962, !9963, !9964}
!9957 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !9955, file: !9512, line: 408, baseType: !1475, size: 8)
!9958 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !9955, file: !9512, line: 409, baseType: !1475, size: 8, offset: 8)
!9959 = !DIDerivedType(tag: DW_TAG_member, name: "bEndpointAddress", scope: !9955, file: !9512, line: 411, baseType: !1475, size: 8, offset: 16)
!9960 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !9955, file: !9512, line: 412, baseType: !1475, size: 8, offset: 24)
!9961 = !DIDerivedType(tag: DW_TAG_member, name: "wMaxPacketSize", scope: !9955, file: !9512, line: 413, baseType: !9906, size: 16, offset: 32)
!9962 = !DIDerivedType(tag: DW_TAG_member, name: "bInterval", scope: !9955, file: !9512, line: 414, baseType: !1475, size: 8, offset: 48)
!9963 = !DIDerivedType(tag: DW_TAG_member, name: "bRefresh", scope: !9955, file: !9512, line: 418, baseType: !1475, size: 8, offset: 56)
!9964 = !DIDerivedType(tag: DW_TAG_member, name: "bSynchAddress", scope: !9955, file: !9512, line: 419, baseType: !1475, size: 8, offset: 64)
!9965 = !DIDerivedType(tag: DW_TAG_member, name: "ss_ep_comp", scope: !9952, file: !9505, line: 69, baseType: !9966, size: 48, offset: 72)
!9966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_ep_comp_descriptor", file: !9512, line: 689, size: 48, elements: !9967)
!9967 = !{!9968, !9969, !9970, !9971, !9972}
!9968 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !9966, file: !9512, line: 690, baseType: !1475, size: 8)
!9969 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !9966, file: !9512, line: 691, baseType: !1475, size: 8, offset: 8)
!9970 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxBurst", scope: !9966, file: !9512, line: 693, baseType: !1475, size: 8, offset: 16)
!9971 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !9966, file: !9512, line: 694, baseType: !1475, size: 8, offset: 24)
!9972 = !DIDerivedType(tag: DW_TAG_member, name: "wBytesPerInterval", scope: !9966, file: !9512, line: 695, baseType: !9906, size: 16, offset: 32)
!9973 = !DIDerivedType(tag: DW_TAG_member, name: "ssp_isoc_ep_comp", scope: !9952, file: !9505, line: 70, baseType: !9974, size: 64, offset: 120)
!9974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ssp_isoc_ep_comp_descriptor", file: !9512, line: 677, size: 64, elements: !9975)
!9975 = !{!9976, !9977, !9978, !9979}
!9976 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !9974, file: !9512, line: 678, baseType: !1475, size: 8)
!9977 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !9974, file: !9512, line: 679, baseType: !1475, size: 8, offset: 8)
!9978 = !DIDerivedType(tag: DW_TAG_member, name: "wReseved", scope: !9974, file: !9512, line: 680, baseType: !9906, size: 16, offset: 16)
!9979 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerInterval", scope: !9974, file: !9512, line: 681, baseType: !9980, size: 32, offset: 32)
!9980 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !544, line: 31, baseType: !545)
!9981 = !DIDerivedType(tag: DW_TAG_member, name: "urb_list", scope: !9952, file: !9505, line: 71, baseType: !366, size: 128, offset: 192)
!9982 = !DIDerivedType(tag: DW_TAG_member, name: "hcpriv", scope: !9952, file: !9505, line: 72, baseType: !647, size: 64, offset: 320)
!9983 = !DIDerivedType(tag: DW_TAG_member, name: "ep_dev", scope: !9952, file: !9505, line: 73, baseType: !9984, size: 64, offset: 384)
!9984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9985, size: 64)
!9985 = !DICompositeType(tag: DW_TAG_structure_type, name: "ep_device", file: !9505, line: 48, flags: DIFlagFwdDecl)
!9986 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !9952, file: !9505, line: 75, baseType: !6907, size: 64, offset: 448)
!9987 = !DIDerivedType(tag: DW_TAG_member, name: "extralen", scope: !9952, file: !9505, line: 76, baseType: !72, size: 32, offset: 512)
!9988 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9952, file: !9505, line: 77, baseType: !72, size: 32, offset: 544)
!9989 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !9952, file: !9505, line: 78, baseType: !72, size: 32, offset: 576)
!9990 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9908, file: !9505, line: 649, baseType: !3946, size: 5568, offset: 1280)
!9991 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor", scope: !9908, file: !9505, line: 651, baseType: !9992, size: 144, offset: 6848)
!9992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_device_descriptor", file: !9512, line: 289, size: 144, elements: !9993)
!9993 = !{!9994, !9995, !9996, !9997, !9998, !9999, !10000, !10001, !10002, !10003, !10004, !10005, !10006, !10007}
!9994 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !9992, file: !9512, line: 290, baseType: !1475, size: 8)
!9995 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !9992, file: !9512, line: 291, baseType: !1475, size: 8, offset: 8)
!9996 = !DIDerivedType(tag: DW_TAG_member, name: "bcdUSB", scope: !9992, file: !9512, line: 293, baseType: !9906, size: 16, offset: 16)
!9997 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceClass", scope: !9992, file: !9512, line: 294, baseType: !1475, size: 8, offset: 32)
!9998 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceSubClass", scope: !9992, file: !9512, line: 295, baseType: !1475, size: 8, offset: 40)
!9999 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceProtocol", scope: !9992, file: !9512, line: 296, baseType: !1475, size: 8, offset: 48)
!10000 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxPacketSize0", scope: !9992, file: !9512, line: 297, baseType: !1475, size: 8, offset: 56)
!10001 = !DIDerivedType(tag: DW_TAG_member, name: "idVendor", scope: !9992, file: !9512, line: 298, baseType: !9906, size: 16, offset: 64)
!10002 = !DIDerivedType(tag: DW_TAG_member, name: "idProduct", scope: !9992, file: !9512, line: 299, baseType: !9906, size: 16, offset: 80)
!10003 = !DIDerivedType(tag: DW_TAG_member, name: "bcdDevice", scope: !9992, file: !9512, line: 300, baseType: !9906, size: 16, offset: 96)
!10004 = !DIDerivedType(tag: DW_TAG_member, name: "iManufacturer", scope: !9992, file: !9512, line: 301, baseType: !1475, size: 8, offset: 112)
!10005 = !DIDerivedType(tag: DW_TAG_member, name: "iProduct", scope: !9992, file: !9512, line: 302, baseType: !1475, size: 8, offset: 120)
!10006 = !DIDerivedType(tag: DW_TAG_member, name: "iSerialNumber", scope: !9992, file: !9512, line: 303, baseType: !1475, size: 8, offset: 128)
!10007 = !DIDerivedType(tag: DW_TAG_member, name: "bNumConfigurations", scope: !9992, file: !9512, line: 304, baseType: !1475, size: 8, offset: 136)
!10008 = !DIDerivedType(tag: DW_TAG_member, name: "bos", scope: !9908, file: !9505, line: 652, baseType: !10009, size: 64, offset: 7040)
!10009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10010, size: 64)
!10010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_bos", file: !9505, line: 396, size: 384, elements: !10011)
!10011 = !{!10012, !10020, !10028, !10040, !10053, !10062}
!10012 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !10010, file: !9505, line: 397, baseType: !10013, size: 64)
!10013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10014, size: 64)
!10014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_bos_descriptor", file: !9512, line: 844, size: 40, elements: !10015)
!10015 = !{!10016, !10017, !10018, !10019}
!10016 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !10014, file: !9512, line: 845, baseType: !1475, size: 8)
!10017 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !10014, file: !9512, line: 846, baseType: !1475, size: 8, offset: 8)
!10018 = !DIDerivedType(tag: DW_TAG_member, name: "wTotalLength", scope: !10014, file: !9512, line: 848, baseType: !9906, size: 16, offset: 16)
!10019 = !DIDerivedType(tag: DW_TAG_member, name: "bNumDeviceCaps", scope: !10014, file: !9512, line: 849, baseType: !1475, size: 8, offset: 32)
!10020 = !DIDerivedType(tag: DW_TAG_member, name: "ext_cap", scope: !10010, file: !9505, line: 400, baseType: !10021, size: 64, offset: 64)
!10021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10022, size: 64)
!10022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ext_cap_descriptor", file: !9512, line: 895, size: 56, elements: !10023)
!10023 = !{!10024, !10025, !10026, !10027}
!10024 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !10022, file: !9512, line: 896, baseType: !1475, size: 8)
!10025 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !10022, file: !9512, line: 897, baseType: !1475, size: 8, offset: 8)
!10026 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !10022, file: !9512, line: 898, baseType: !1475, size: 8, offset: 16)
!10027 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !10022, file: !9512, line: 899, baseType: !9980, size: 32, offset: 24)
!10028 = !DIDerivedType(tag: DW_TAG_member, name: "ss_cap", scope: !10010, file: !9505, line: 401, baseType: !10029, size: 64, offset: 128)
!10029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10030, size: 64)
!10030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_cap_descriptor", file: !9512, line: 917, size: 80, elements: !10031)
!10031 = !{!10032, !10033, !10034, !10035, !10036, !10037, !10038, !10039}
!10032 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !10030, file: !9512, line: 918, baseType: !1475, size: 8)
!10033 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !10030, file: !9512, line: 919, baseType: !1475, size: 8, offset: 8)
!10034 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !10030, file: !9512, line: 920, baseType: !1475, size: 8, offset: 16)
!10035 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !10030, file: !9512, line: 921, baseType: !1475, size: 8, offset: 24)
!10036 = !DIDerivedType(tag: DW_TAG_member, name: "wSpeedSupported", scope: !10030, file: !9512, line: 923, baseType: !9906, size: 16, offset: 32)
!10037 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionalitySupport", scope: !10030, file: !9512, line: 928, baseType: !1475, size: 8, offset: 48)
!10038 = !DIDerivedType(tag: DW_TAG_member, name: "bU1devExitLat", scope: !10030, file: !9512, line: 929, baseType: !1475, size: 8, offset: 56)
!10039 = !DIDerivedType(tag: DW_TAG_member, name: "bU2DevExitLat", scope: !10030, file: !9512, line: 930, baseType: !9906, size: 16, offset: 64)
!10040 = !DIDerivedType(tag: DW_TAG_member, name: "ssp_cap", scope: !10010, file: !9505, line: 402, baseType: !10041, size: 64, offset: 192)
!10041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10042, size: 64)
!10042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ssp_cap_descriptor", file: !9512, line: 955, size: 128, elements: !10043)
!10043 = !{!10044, !10045, !10046, !10047, !10048, !10049, !10050, !10051}
!10044 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !10042, file: !9512, line: 956, baseType: !1475, size: 8)
!10045 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !10042, file: !9512, line: 957, baseType: !1475, size: 8, offset: 8)
!10046 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !10042, file: !9512, line: 958, baseType: !1475, size: 8, offset: 16)
!10047 = !DIDerivedType(tag: DW_TAG_member, name: "bReserved", scope: !10042, file: !9512, line: 959, baseType: !1475, size: 8, offset: 24)
!10048 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !10042, file: !9512, line: 960, baseType: !9980, size: 32, offset: 32)
!10049 = !DIDerivedType(tag: DW_TAG_member, name: "wFunctionalitySupport", scope: !10042, file: !9512, line: 963, baseType: !9906, size: 16, offset: 64)
!10050 = !DIDerivedType(tag: DW_TAG_member, name: "wReserved", scope: !10042, file: !9512, line: 967, baseType: !9906, size: 16, offset: 80)
!10051 = !DIDerivedType(tag: DW_TAG_member, name: "bmSublinkSpeedAttr", scope: !10042, file: !9512, line: 968, baseType: !10052, size: 32, offset: 96)
!10052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9980, size: 32, elements: !1493)
!10053 = !DIDerivedType(tag: DW_TAG_member, name: "ss_id", scope: !10010, file: !9505, line: 403, baseType: !10054, size: 64, offset: 256)
!10054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10055, size: 64)
!10055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_container_id_descriptor", file: !9512, line: 940, size: 160, elements: !10056)
!10056 = !{!10057, !10058, !10059, !10060, !10061}
!10057 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !10055, file: !9512, line: 941, baseType: !1475, size: 8)
!10058 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !10055, file: !9512, line: 942, baseType: !1475, size: 8, offset: 8)
!10059 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !10055, file: !9512, line: 943, baseType: !1475, size: 8, offset: 16)
!10060 = !DIDerivedType(tag: DW_TAG_member, name: "bReserved", scope: !10055, file: !9512, line: 944, baseType: !1475, size: 8, offset: 24)
!10061 = !DIDerivedType(tag: DW_TAG_member, name: "ContainerID", scope: !10055, file: !9512, line: 945, baseType: !2307, size: 128, offset: 32)
!10062 = !DIDerivedType(tag: DW_TAG_member, name: "ptm_cap", scope: !10010, file: !9505, line: 404, baseType: !10063, size: 64, offset: 320)
!10063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10064, size: 64)
!10064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ptm_cap_descriptor", file: !9512, line: 1080, size: 24, elements: !10065)
!10065 = !{!10066, !10067, !10068}
!10066 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !10064, file: !9512, line: 1081, baseType: !1475, size: 8)
!10067 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !10064, file: !9512, line: 1082, baseType: !1475, size: 8, offset: 8)
!10068 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !10064, file: !9512, line: 1083, baseType: !1475, size: 8, offset: 16)
!10069 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !9908, file: !9505, line: 653, baseType: !10070, size: 64, offset: 7104)
!10070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10071, size: 64)
!10071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_config", file: !9505, line: 374, size: 5440, elements: !10072)
!10072 = !{!10073, !10084, !10085, !10098, !10140, !10149, !10150}
!10073 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !10071, file: !9505, line: 375, baseType: !10074, size: 72)
!10074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_config_descriptor", file: !9512, line: 349, size: 72, elements: !10075)
!10075 = !{!10076, !10077, !10078, !10079, !10080, !10081, !10082, !10083}
!10076 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !10074, file: !9512, line: 350, baseType: !1475, size: 8)
!10077 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !10074, file: !9512, line: 351, baseType: !1475, size: 8, offset: 8)
!10078 = !DIDerivedType(tag: DW_TAG_member, name: "wTotalLength", scope: !10074, file: !9512, line: 353, baseType: !9906, size: 16, offset: 16)
!10079 = !DIDerivedType(tag: DW_TAG_member, name: "bNumInterfaces", scope: !10074, file: !9512, line: 354, baseType: !1475, size: 8, offset: 32)
!10080 = !DIDerivedType(tag: DW_TAG_member, name: "bConfigurationValue", scope: !10074, file: !9512, line: 355, baseType: !1475, size: 8, offset: 40)
!10081 = !DIDerivedType(tag: DW_TAG_member, name: "iConfiguration", scope: !10074, file: !9512, line: 356, baseType: !1475, size: 8, offset: 48)
!10082 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !10074, file: !9512, line: 357, baseType: !1475, size: 8, offset: 56)
!10083 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxPower", scope: !10074, file: !9512, line: 358, baseType: !1475, size: 8, offset: 64)
!10084 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !10071, file: !9505, line: 377, baseType: !654, size: 64, offset: 128)
!10085 = !DIDerivedType(tag: DW_TAG_member, name: "intf_assoc", scope: !10071, file: !9505, line: 381, baseType: !10086, size: 1024, offset: 192)
!10086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10087, size: 1024, elements: !351)
!10087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10088, size: 64)
!10088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface_assoc_descriptor", file: !9512, line: 783, size: 64, elements: !10089)
!10089 = !{!10090, !10091, !10092, !10093, !10094, !10095, !10096, !10097}
!10090 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !10088, file: !9512, line: 784, baseType: !1475, size: 8)
!10091 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !10088, file: !9512, line: 785, baseType: !1475, size: 8, offset: 8)
!10092 = !DIDerivedType(tag: DW_TAG_member, name: "bFirstInterface", scope: !10088, file: !9512, line: 787, baseType: !1475, size: 8, offset: 16)
!10093 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceCount", scope: !10088, file: !9512, line: 788, baseType: !1475, size: 8, offset: 24)
!10094 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionClass", scope: !10088, file: !9512, line: 789, baseType: !1475, size: 8, offset: 32)
!10095 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionSubClass", scope: !10088, file: !9512, line: 790, baseType: !1475, size: 8, offset: 40)
!10096 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionProtocol", scope: !10088, file: !9512, line: 791, baseType: !1475, size: 8, offset: 48)
!10097 = !DIDerivedType(tag: DW_TAG_member, name: "iFunction", scope: !10088, file: !9512, line: 792, baseType: !1475, size: 8, offset: 56)
!10098 = !DIDerivedType(tag: DW_TAG_member, name: "interface", scope: !10071, file: !9505, line: 385, baseType: !10099, size: 2048, offset: 1216)
!10099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10100, size: 2048, elements: !793)
!10100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10101, size: 64)
!10101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface", file: !9505, line: 232, size: 6272, elements: !10102)
!10102 = !{!10103, !10124, !10125, !10126, !10127, !10128, !10129, !10130, !10131, !10132, !10133, !10134, !10135, !10136, !10137, !10138, !10139}
!10103 = !DIDerivedType(tag: DW_TAG_member, name: "altsetting", scope: !10101, file: !9505, line: 235, baseType: !10104, size: 64)
!10104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10105, size: 64)
!10105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_interface", file: !9505, line: 82, size: 320, elements: !10106)
!10106 = !{!10107, !10119, !10120, !10121, !10123}
!10107 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !10105, file: !9505, line: 83, baseType: !10108, size: 72)
!10108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface_descriptor", file: !9512, line: 389, size: 72, elements: !10109)
!10109 = !{!10110, !10111, !10112, !10113, !10114, !10115, !10116, !10117, !10118}
!10110 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !10108, file: !9512, line: 390, baseType: !1475, size: 8)
!10111 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !10108, file: !9512, line: 391, baseType: !1475, size: 8, offset: 8)
!10112 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceNumber", scope: !10108, file: !9512, line: 393, baseType: !1475, size: 8, offset: 16)
!10113 = !DIDerivedType(tag: DW_TAG_member, name: "bAlternateSetting", scope: !10108, file: !9512, line: 394, baseType: !1475, size: 8, offset: 24)
!10114 = !DIDerivedType(tag: DW_TAG_member, name: "bNumEndpoints", scope: !10108, file: !9512, line: 395, baseType: !1475, size: 8, offset: 32)
!10115 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceClass", scope: !10108, file: !9512, line: 396, baseType: !1475, size: 8, offset: 40)
!10116 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceSubClass", scope: !10108, file: !9512, line: 397, baseType: !1475, size: 8, offset: 48)
!10117 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceProtocol", scope: !10108, file: !9512, line: 398, baseType: !1475, size: 8, offset: 56)
!10118 = !DIDerivedType(tag: DW_TAG_member, name: "iInterface", scope: !10108, file: !9512, line: 399, baseType: !1475, size: 8, offset: 64)
!10119 = !DIDerivedType(tag: DW_TAG_member, name: "extralen", scope: !10105, file: !9505, line: 85, baseType: !72, size: 32, offset: 96)
!10120 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !10105, file: !9505, line: 86, baseType: !6907, size: 64, offset: 128)
!10121 = !DIDerivedType(tag: DW_TAG_member, name: "endpoint", scope: !10105, file: !9505, line: 91, baseType: !10122, size: 64, offset: 192)
!10122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9952, size: 64)
!10123 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !10105, file: !9505, line: 93, baseType: !654, size: 64, offset: 256)
!10124 = !DIDerivedType(tag: DW_TAG_member, name: "cur_altsetting", scope: !10101, file: !9505, line: 237, baseType: !10104, size: 64, offset: 64)
!10125 = !DIDerivedType(tag: DW_TAG_member, name: "num_altsetting", scope: !10101, file: !9505, line: 239, baseType: !7, size: 32, offset: 128)
!10126 = !DIDerivedType(tag: DW_TAG_member, name: "intf_assoc", scope: !10101, file: !9505, line: 243, baseType: !10087, size: 64, offset: 192)
!10127 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !10101, file: !9505, line: 245, baseType: !72, size: 32, offset: 256)
!10128 = !DIDerivedType(tag: DW_TAG_member, name: "condition", scope: !10101, file: !9505, line: 247, baseType: !9504, size: 32, offset: 288)
!10129 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_files_created", scope: !10101, file: !9505, line: 248, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!10130 = !DIDerivedType(tag: DW_TAG_member, name: "ep_devs_created", scope: !10101, file: !9505, line: 249, baseType: !7, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!10131 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !10101, file: !9505, line: 250, baseType: !7, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!10132 = !DIDerivedType(tag: DW_TAG_member, name: "needs_remote_wakeup", scope: !10101, file: !9505, line: 251, baseType: !7, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!10133 = !DIDerivedType(tag: DW_TAG_member, name: "needs_altsetting0", scope: !10101, file: !9505, line: 252, baseType: !7, size: 1, offset: 324, flags: DIFlagBitField, extraData: i64 320)
!10134 = !DIDerivedType(tag: DW_TAG_member, name: "needs_binding", scope: !10101, file: !9505, line: 253, baseType: !7, size: 1, offset: 325, flags: DIFlagBitField, extraData: i64 320)
!10135 = !DIDerivedType(tag: DW_TAG_member, name: "resetting_device", scope: !10101, file: !9505, line: 254, baseType: !7, size: 1, offset: 326, flags: DIFlagBitField, extraData: i64 320)
!10136 = !DIDerivedType(tag: DW_TAG_member, name: "authorized", scope: !10101, file: !9505, line: 255, baseType: !7, size: 1, offset: 327, flags: DIFlagBitField, extraData: i64 320)
!10137 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10101, file: !9505, line: 257, baseType: !3946, size: 5568, offset: 384)
!10138 = !DIDerivedType(tag: DW_TAG_member, name: "usb_dev", scope: !10101, file: !9505, line: 258, baseType: !4308, size: 64, offset: 5952)
!10139 = !DIDerivedType(tag: DW_TAG_member, name: "reset_ws", scope: !10101, file: !9505, line: 259, baseType: !1884, size: 256, offset: 6016)
!10140 = !DIDerivedType(tag: DW_TAG_member, name: "intf_cache", scope: !10071, file: !9505, line: 389, baseType: !10141, size: 2048, offset: 3264)
!10141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10142, size: 2048, elements: !793)
!10142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10143, size: 64)
!10143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface_cache", file: !9505, line: 322, size: 64, elements: !10144)
!10144 = !{!10145, !10146, !10147}
!10145 = !DIDerivedType(tag: DW_TAG_member, name: "num_altsetting", scope: !10143, file: !9505, line: 323, baseType: !7, size: 32)
!10146 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !10143, file: !9505, line: 324, baseType: !4298, size: 32, offset: 32)
!10147 = !DIDerivedType(tag: DW_TAG_member, name: "altsetting", scope: !10143, file: !9505, line: 328, baseType: !10148, offset: 64)
!10148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10105, elements: !391)
!10149 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !10071, file: !9505, line: 391, baseType: !6907, size: 64, offset: 5312)
!10150 = !DIDerivedType(tag: DW_TAG_member, name: "extralen", scope: !10071, file: !9505, line: 392, baseType: !72, size: 32, offset: 5376)
!10151 = !DIDerivedType(tag: DW_TAG_member, name: "actconfig", scope: !9908, file: !9505, line: 655, baseType: !10070, size: 64, offset: 7168)
!10152 = !DIDerivedType(tag: DW_TAG_member, name: "ep_in", scope: !9908, file: !9505, line: 656, baseType: !10153, size: 1024, offset: 7232)
!10153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10122, size: 1024, elements: !351)
!10154 = !DIDerivedType(tag: DW_TAG_member, name: "ep_out", scope: !9908, file: !9505, line: 657, baseType: !10153, size: 1024, offset: 8256)
!10155 = !DIDerivedType(tag: DW_TAG_member, name: "rawdescriptors", scope: !9908, file: !9505, line: 659, baseType: !10156, size: 64, offset: 9280)
!10156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!10157 = !DIDerivedType(tag: DW_TAG_member, name: "bus_mA", scope: !9908, file: !9505, line: 661, baseType: !554, size: 16, offset: 9344)
!10158 = !DIDerivedType(tag: DW_TAG_member, name: "portnum", scope: !9908, file: !9505, line: 662, baseType: !1474, size: 8, offset: 9360)
!10159 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !9908, file: !9505, line: 663, baseType: !1474, size: 8, offset: 9368)
!10160 = !DIDerivedType(tag: DW_TAG_member, name: "devaddr", scope: !9908, file: !9505, line: 664, baseType: !1474, size: 8, offset: 9376)
!10161 = !DIDerivedType(tag: DW_TAG_member, name: "can_submit", scope: !9908, file: !9505, line: 666, baseType: !7, size: 1, offset: 9384, flags: DIFlagBitField, extraData: i64 9384)
!10162 = !DIDerivedType(tag: DW_TAG_member, name: "persist_enabled", scope: !9908, file: !9505, line: 667, baseType: !7, size: 1, offset: 9385, flags: DIFlagBitField, extraData: i64 9384)
!10163 = !DIDerivedType(tag: DW_TAG_member, name: "have_langid", scope: !9908, file: !9505, line: 668, baseType: !7, size: 1, offset: 9386, flags: DIFlagBitField, extraData: i64 9384)
!10164 = !DIDerivedType(tag: DW_TAG_member, name: "authorized", scope: !9908, file: !9505, line: 669, baseType: !7, size: 1, offset: 9387, flags: DIFlagBitField, extraData: i64 9384)
!10165 = !DIDerivedType(tag: DW_TAG_member, name: "authenticated", scope: !9908, file: !9505, line: 670, baseType: !7, size: 1, offset: 9388, flags: DIFlagBitField, extraData: i64 9384)
!10166 = !DIDerivedType(tag: DW_TAG_member, name: "wusb", scope: !9908, file: !9505, line: 671, baseType: !7, size: 1, offset: 9389, flags: DIFlagBitField, extraData: i64 9384)
!10167 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_capable", scope: !9908, file: !9505, line: 672, baseType: !7, size: 1, offset: 9390, flags: DIFlagBitField, extraData: i64 9384)
!10168 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_capable", scope: !9908, file: !9505, line: 673, baseType: !7, size: 1, offset: 9391, flags: DIFlagBitField, extraData: i64 9384)
!10169 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_besl_capable", scope: !9908, file: !9505, line: 674, baseType: !7, size: 1, offset: 9392, flags: DIFlagBitField, extraData: i64 9384)
!10170 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_enabled", scope: !9908, file: !9505, line: 675, baseType: !7, size: 1, offset: 9393, flags: DIFlagBitField, extraData: i64 9384)
!10171 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_allowed", scope: !9908, file: !9505, line: 676, baseType: !7, size: 1, offset: 9394, flags: DIFlagBitField, extraData: i64 9384)
!10172 = !DIDerivedType(tag: DW_TAG_member, name: "usb3_lpm_u1_enabled", scope: !9908, file: !9505, line: 677, baseType: !7, size: 1, offset: 9395, flags: DIFlagBitField, extraData: i64 9384)
!10173 = !DIDerivedType(tag: DW_TAG_member, name: "usb3_lpm_u2_enabled", scope: !9908, file: !9505, line: 678, baseType: !7, size: 1, offset: 9396, flags: DIFlagBitField, extraData: i64 9384)
!10174 = !DIDerivedType(tag: DW_TAG_member, name: "string_langid", scope: !9908, file: !9505, line: 679, baseType: !72, size: 32, offset: 9408)
!10175 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !9908, file: !9505, line: 682, baseType: !654, size: 64, offset: 9472)
!10176 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !9908, file: !9505, line: 683, baseType: !654, size: 64, offset: 9536)
!10177 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !9908, file: !9505, line: 684, baseType: !654, size: 64, offset: 9600)
!10178 = !DIDerivedType(tag: DW_TAG_member, name: "filelist", scope: !9908, file: !9505, line: 686, baseType: !366, size: 128, offset: 9664)
!10179 = !DIDerivedType(tag: DW_TAG_member, name: "maxchild", scope: !9908, file: !9505, line: 688, baseType: !72, size: 32, offset: 9792)
!10180 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !9908, file: !9505, line: 690, baseType: !784, size: 32, offset: 9824)
!10181 = !DIDerivedType(tag: DW_TAG_member, name: "urbnum", scope: !9908, file: !9505, line: 691, baseType: !465, size: 32, offset: 9856)
!10182 = !DIDerivedType(tag: DW_TAG_member, name: "active_duration", scope: !9908, file: !9505, line: 693, baseType: !394, size: 64, offset: 9920)
!10183 = !DIDerivedType(tag: DW_TAG_member, name: "connect_time", scope: !9908, file: !9505, line: 696, baseType: !394, size: 64, offset: 9984)
!10184 = !DIDerivedType(tag: DW_TAG_member, name: "do_remote_wakeup", scope: !9908, file: !9505, line: 698, baseType: !7, size: 1, offset: 10048, flags: DIFlagBitField, extraData: i64 10048)
!10185 = !DIDerivedType(tag: DW_TAG_member, name: "reset_resume", scope: !9908, file: !9505, line: 699, baseType: !7, size: 1, offset: 10049, flags: DIFlagBitField, extraData: i64 10048)
!10186 = !DIDerivedType(tag: DW_TAG_member, name: "port_is_suspended", scope: !9908, file: !9505, line: 700, baseType: !7, size: 1, offset: 10050, flags: DIFlagBitField, extraData: i64 10048)
!10187 = !DIDerivedType(tag: DW_TAG_member, name: "wusb_dev", scope: !9908, file: !9505, line: 702, baseType: !10188, size: 64, offset: 10112)
!10188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10189, size: 64)
!10189 = !DICompositeType(tag: DW_TAG_structure_type, name: "wusb_dev", file: !9505, line: 28, flags: DIFlagFwdDecl)
!10190 = !DIDerivedType(tag: DW_TAG_member, name: "slot_id", scope: !9908, file: !9505, line: 703, baseType: !72, size: 32, offset: 10176)
!10191 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !9908, file: !9505, line: 704, baseType: !9532, size: 32, offset: 10208)
!10192 = !DIDerivedType(tag: DW_TAG_member, name: "l1_params", scope: !9908, file: !9505, line: 705, baseType: !10193, size: 64, offset: 10240)
!10193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb2_lpm_parameters", file: !9505, line: 502, size: 64, elements: !10194)
!10194 = !{!10195, !10196}
!10195 = !DIDerivedType(tag: DW_TAG_member, name: "besl", scope: !10193, file: !9505, line: 506, baseType: !7, size: 32)
!10196 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !10193, file: !9505, line: 512, baseType: !72, size: 32, offset: 32)
!10197 = !DIDerivedType(tag: DW_TAG_member, name: "u1_params", scope: !9908, file: !9505, line: 706, baseType: !10198, size: 128, offset: 10304)
!10198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb3_lpm_parameters", file: !9505, line: 522, size: 128, elements: !10199)
!10199 = !{!10200, !10201, !10202, !10203}
!10200 = !DIDerivedType(tag: DW_TAG_member, name: "mel", scope: !10198, file: !9505, line: 529, baseType: !7, size: 32)
!10201 = !DIDerivedType(tag: DW_TAG_member, name: "pel", scope: !10198, file: !9505, line: 535, baseType: !7, size: 32, offset: 32)
!10202 = !DIDerivedType(tag: DW_TAG_member, name: "sel", scope: !10198, file: !9505, line: 545, baseType: !7, size: 32, offset: 64)
!10203 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !10198, file: !9505, line: 551, baseType: !72, size: 32, offset: 96)
!10204 = !DIDerivedType(tag: DW_TAG_member, name: "u2_params", scope: !9908, file: !9505, line: 707, baseType: !10198, size: 128, offset: 10432)
!10205 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_disable_count", scope: !9908, file: !9505, line: 708, baseType: !7, size: 32, offset: 10560)
!10206 = !DIDerivedType(tag: DW_TAG_member, name: "hub_delay", scope: !9908, file: !9505, line: 710, baseType: !1115, size: 16, offset: 10592)
!10207 = !DIDerivedType(tag: DW_TAG_member, name: "use_generic_driver", scope: !9908, file: !9505, line: 711, baseType: !7, size: 1, offset: 10608, flags: DIFlagBitField, extraData: i64 10608)
!10208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10209, size: 64)
!10209 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !497)
!10210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10211, size: 64)
!10211 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !545)
!10212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10213, size: 64)
!10213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rx_agg", file: !3, line: 768, size: 512, elements: !10214)
!10214 = !{!10215, !10216, !10217, !10279, !10456, !10457}
!10215 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10213, file: !3, line: 769, baseType: !366, size: 128)
!10216 = !DIDerivedType(tag: DW_TAG_member, name: "info_list", scope: !10213, file: !3, line: 769, baseType: !366, size: 128, offset: 128)
!10217 = !DIDerivedType(tag: DW_TAG_member, name: "urb", scope: !10213, file: !3, line: 770, baseType: !10218, size: 64, offset: 256)
!10218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10219, size: 64)
!10219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "urb", file: !9505, line: 1561, size: 1472, elements: !10220)
!10220 = !{!10221, !10222, !10223, !10224, !10225, !10226, !10227, !10228, !10237, !10238, !10239, !10240, !10241, !10242, !10243, !10244, !10245, !10255, !10256, !10257, !10258, !10259, !10260, !10261, !10262, !10263, !10264, !10265, !10266, !10271}
!10221 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !10219, file: !9505, line: 1563, baseType: !4298, size: 32)
!10222 = !DIDerivedType(tag: DW_TAG_member, name: "unlinked", scope: !10219, file: !9505, line: 1564, baseType: !72, size: 32, offset: 32)
!10223 = !DIDerivedType(tag: DW_TAG_member, name: "hcpriv", scope: !10219, file: !9505, line: 1565, baseType: !647, size: 64, offset: 64)
!10224 = !DIDerivedType(tag: DW_TAG_member, name: "use_count", scope: !10219, file: !9505, line: 1566, baseType: !465, size: 32, offset: 128)
!10225 = !DIDerivedType(tag: DW_TAG_member, name: "reject", scope: !10219, file: !9505, line: 1567, baseType: !465, size: 32, offset: 160)
!10226 = !DIDerivedType(tag: DW_TAG_member, name: "urb_list", scope: !10219, file: !9505, line: 1570, baseType: !366, size: 128, offset: 192)
!10227 = !DIDerivedType(tag: DW_TAG_member, name: "anchor_list", scope: !10219, file: !9505, line: 1572, baseType: !366, size: 128, offset: 320)
!10228 = !DIDerivedType(tag: DW_TAG_member, name: "anchor", scope: !10219, file: !9505, line: 1573, baseType: !10229, size: 64, offset: 448)
!10229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10230, size: 64)
!10230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_anchor", file: !9505, line: 1360, size: 320, elements: !10231)
!10231 = !{!10232, !10233, !10234, !10235, !10236}
!10232 = !DIDerivedType(tag: DW_TAG_member, name: "urb_list", scope: !10230, file: !9505, line: 1361, baseType: !366, size: 128)
!10233 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !10230, file: !9505, line: 1362, baseType: !1177, size: 128, offset: 128)
!10234 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10230, file: !9505, line: 1363, baseType: !806, offset: 256)
!10235 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_wakeups", scope: !10230, file: !9505, line: 1364, baseType: !465, size: 32, offset: 256)
!10236 = !DIDerivedType(tag: DW_TAG_member, name: "poisoned", scope: !10230, file: !9505, line: 1365, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!10237 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10219, file: !9505, line: 1574, baseType: !9907, size: 64, offset: 512)
!10238 = !DIDerivedType(tag: DW_TAG_member, name: "ep", scope: !10219, file: !9505, line: 1575, baseType: !10122, size: 64, offset: 576)
!10239 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !10219, file: !9505, line: 1576, baseType: !7, size: 32, offset: 640)
!10240 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !10219, file: !9505, line: 1577, baseType: !7, size: 32, offset: 672)
!10241 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !10219, file: !9505, line: 1578, baseType: !72, size: 32, offset: 704)
!10242 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_flags", scope: !10219, file: !9505, line: 1579, baseType: !7, size: 32, offset: 736)
!10243 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_buffer", scope: !10219, file: !9505, line: 1580, baseType: !647, size: 64, offset: 768)
!10244 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_dma", scope: !10219, file: !9505, line: 1581, baseType: !6959, size: 64, offset: 832)
!10245 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !10219, file: !9505, line: 1582, baseType: !10246, size: 64, offset: 896)
!10246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10247, size: 64)
!10247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !10248, line: 11, size: 256, elements: !10249)
!10248 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!10249 = !{!10250, !10251, !10252, !10253, !10254}
!10250 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !10247, file: !10248, line: 12, baseType: !394, size: 64)
!10251 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !10247, file: !10248, line: 13, baseType: !7, size: 32, offset: 64)
!10252 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !10247, file: !10248, line: 14, baseType: !7, size: 32, offset: 96)
!10253 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !10247, file: !10248, line: 15, baseType: !6959, size: 64, offset: 128)
!10254 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !10247, file: !10248, line: 17, baseType: !7, size: 32, offset: 192)
!10255 = !DIDerivedType(tag: DW_TAG_member, name: "num_mapped_sgs", scope: !10219, file: !9505, line: 1583, baseType: !72, size: 32, offset: 960)
!10256 = !DIDerivedType(tag: DW_TAG_member, name: "num_sgs", scope: !10219, file: !9505, line: 1584, baseType: !72, size: 32, offset: 992)
!10257 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_buffer_length", scope: !10219, file: !9505, line: 1585, baseType: !784, size: 32, offset: 1024)
!10258 = !DIDerivedType(tag: DW_TAG_member, name: "actual_length", scope: !10219, file: !9505, line: 1586, baseType: !784, size: 32, offset: 1056)
!10259 = !DIDerivedType(tag: DW_TAG_member, name: "setup_packet", scope: !10219, file: !9505, line: 1587, baseType: !6907, size: 64, offset: 1088)
!10260 = !DIDerivedType(tag: DW_TAG_member, name: "setup_dma", scope: !10219, file: !9505, line: 1588, baseType: !6959, size: 64, offset: 1152)
!10261 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !10219, file: !9505, line: 1589, baseType: !72, size: 32, offset: 1216)
!10262 = !DIDerivedType(tag: DW_TAG_member, name: "number_of_packets", scope: !10219, file: !9505, line: 1590, baseType: !72, size: 32, offset: 1248)
!10263 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !10219, file: !9505, line: 1591, baseType: !72, size: 32, offset: 1280)
!10264 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !10219, file: !9505, line: 1593, baseType: !72, size: 32, offset: 1312)
!10265 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !10219, file: !9505, line: 1594, baseType: !647, size: 64, offset: 1344)
!10266 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !10219, file: !9505, line: 1595, baseType: !10267, size: 64, offset: 1408)
!10267 = !DIDerivedType(tag: DW_TAG_typedef, name: "usb_complete_t", file: !9505, line: 1376, baseType: !10268)
!10268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10269, size: 64)
!10269 = !DISubroutineType(types: !10270)
!10270 = !{null, !10218}
!10271 = !DIDerivedType(tag: DW_TAG_member, name: "iso_frame_desc", scope: !10219, file: !9505, line: 1596, baseType: !10272, offset: 1472)
!10272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10273, elements: !391)
!10273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_iso_packet_descriptor", file: !9505, line: 1351, size: 128, elements: !10274)
!10274 = !{!10275, !10276, !10277, !10278}
!10275 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !10273, file: !9505, line: 1352, baseType: !7, size: 32)
!10276 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !10273, file: !9505, line: 1353, baseType: !7, size: 32, offset: 32)
!10277 = !DIDerivedType(tag: DW_TAG_member, name: "actual_length", scope: !10273, file: !9505, line: 1354, baseType: !7, size: 32, offset: 64)
!10278 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !10273, file: !9505, line: 1355, baseType: !72, size: 32, offset: 96)
!10279 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !10213, file: !3, line: 771, baseType: !10280, size: 64, offset: 320)
!10280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10281, size: 64)
!10281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "r8152", file: !3, line: 786, size: 10496, elements: !10282)
!10282 = !{!10283, !10284, !10285, !10312, !10313, !10314, !10315, !10326, !10327, !10328, !10329, !10330, !10331, !10332, !10333, !10334, !10335, !10336, !10353, !10354, !10355, !10375, !10404, !10421, !10438, !10439, !10440, !10441, !10442, !10443, !10444, !10445, !10446, !10447, !10448, !10449, !10450, !10451, !10452, !10453, !10454, !10455}
!10283 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10281, file: !3, line: 787, baseType: !394, size: 64)
!10284 = !DIDerivedType(tag: DW_TAG_member, name: "udev", scope: !10281, file: !3, line: 788, baseType: !9907, size: 64, offset: 64)
!10285 = !DIDerivedType(tag: DW_TAG_member, name: "napi", scope: !10281, file: !3, line: 789, baseType: !10286, size: 3072, offset: 128)
!10286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "napi_struct", file: !71, line: 324, size: 3072, elements: !10287)
!10287 = !{!10288, !10289, !10290, !10291, !10292, !10293, !10298, !10299, !10305, !10306, !10307, !10308, !10309, !10310, !10311}
!10288 = !DIDerivedType(tag: DW_TAG_member, name: "poll_list", scope: !10286, file: !71, line: 331, baseType: !366, size: 128)
!10289 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10286, file: !71, line: 333, baseType: !394, size: 64, offset: 128)
!10290 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !10286, file: !71, line: 334, baseType: !72, size: 32, offset: 192)
!10291 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hard_irqs_count", scope: !10286, file: !71, line: 335, baseType: !72, size: 32, offset: 224)
!10292 = !DIDerivedType(tag: DW_TAG_member, name: "gro_bitmask", scope: !10286, file: !71, line: 336, baseType: !394, size: 64, offset: 256)
!10293 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !10286, file: !71, line: 337, baseType: !10294, size: 64, offset: 320)
!10294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10295, size: 64)
!10295 = !DISubroutineType(types: !10296)
!10296 = !{!72, !10297, !72}
!10297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10286, size: 64)
!10298 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10286, file: !71, line: 341, baseType: !372, size: 64, offset: 384)
!10299 = !DIDerivedType(tag: DW_TAG_member, name: "gro_hash", scope: !10286, file: !71, line: 342, baseType: !10300, size: 1536, offset: 448)
!10300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10301, size: 1536, elements: !1448)
!10301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gro_list", file: !71, line: 310, size: 192, elements: !10302)
!10302 = !{!10303, !10304}
!10303 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10301, file: !71, line: 311, baseType: !366, size: 128)
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10301, file: !71, line: 312, baseType: !72, size: 32, offset: 128)
!10305 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !10286, file: !71, line: 343, baseType: !497, size: 64, offset: 1984)
!10306 = !DIDerivedType(tag: DW_TAG_member, name: "rx_list", scope: !10286, file: !71, line: 344, baseType: !366, size: 128, offset: 2048)
!10307 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !10286, file: !71, line: 345, baseType: !72, size: 32, offset: 2176)
!10308 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !10286, file: !71, line: 346, baseType: !1410, size: 512, offset: 2240)
!10309 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !10286, file: !71, line: 347, baseType: !366, size: 128, offset: 2752)
!10310 = !DIDerivedType(tag: DW_TAG_member, name: "napi_hash_node", scope: !10286, file: !71, line: 348, baseType: !358, size: 128, offset: 2880)
!10311 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !10286, file: !71, line: 349, baseType: !7, size: 32, offset: 3008)
!10312 = !DIDerivedType(tag: DW_TAG_member, name: "intf", scope: !10281, file: !3, line: 790, baseType: !10100, size: 64, offset: 3200)
!10313 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !10281, file: !3, line: 791, baseType: !372, size: 64, offset: 3264)
!10314 = !DIDerivedType(tag: DW_TAG_member, name: "intr_urb", scope: !10281, file: !3, line: 792, baseType: !10218, size: 64, offset: 3328)
!10315 = !DIDerivedType(tag: DW_TAG_member, name: "tx_info", scope: !10281, file: !3, line: 793, baseType: !10316, size: 1792, offset: 3392)
!10316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10317, size: 1792, elements: !1279)
!10317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tx_agg", file: !3, line: 776, size: 448, elements: !10318)
!10318 = !{!10319, !10320, !10321, !10322, !10323, !10324, !10325}
!10319 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10317, file: !3, line: 777, baseType: !366, size: 128)
!10320 = !DIDerivedType(tag: DW_TAG_member, name: "urb", scope: !10317, file: !3, line: 778, baseType: !10218, size: 64, offset: 128)
!10321 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !10317, file: !3, line: 779, baseType: !10280, size: 64, offset: 192)
!10322 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !10317, file: !3, line: 780, baseType: !647, size: 64, offset: 256)
!10323 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10317, file: !3, line: 781, baseType: !647, size: 64, offset: 320)
!10324 = !DIDerivedType(tag: DW_TAG_member, name: "skb_num", scope: !10317, file: !3, line: 782, baseType: !784, size: 32, offset: 384)
!10325 = !DIDerivedType(tag: DW_TAG_member, name: "skb_len", scope: !10317, file: !3, line: 783, baseType: !784, size: 32, offset: 416)
!10326 = !DIDerivedType(tag: DW_TAG_member, name: "rx_info", scope: !10281, file: !3, line: 794, baseType: !366, size: 128, offset: 5184)
!10327 = !DIDerivedType(tag: DW_TAG_member, name: "rx_used", scope: !10281, file: !3, line: 794, baseType: !366, size: 128, offset: 5312)
!10328 = !DIDerivedType(tag: DW_TAG_member, name: "rx_done", scope: !10281, file: !3, line: 795, baseType: !366, size: 128, offset: 5440)
!10329 = !DIDerivedType(tag: DW_TAG_member, name: "tx_free", scope: !10281, file: !3, line: 795, baseType: !366, size: 128, offset: 5568)
!10330 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue", scope: !10281, file: !3, line: 796, baseType: !2905, size: 192, offset: 5696)
!10331 = !DIDerivedType(tag: DW_TAG_member, name: "rx_queue", scope: !10281, file: !3, line: 796, baseType: !2905, size: 192, offset: 5888)
!10332 = !DIDerivedType(tag: DW_TAG_member, name: "rx_lock", scope: !10281, file: !3, line: 797, baseType: !806, offset: 6080)
!10333 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lock", scope: !10281, file: !3, line: 797, baseType: !806, offset: 6080)
!10334 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !10281, file: !3, line: 798, baseType: !2895, size: 704, offset: 6080)
!10335 = !DIDerivedType(tag: DW_TAG_member, name: "hw_phy_work", scope: !10281, file: !3, line: 798, baseType: !2895, size: 704, offset: 6784)
!10336 = !DIDerivedType(tag: DW_TAG_member, name: "mii", scope: !10281, file: !3, line: 799, baseType: !10337, size: 384, offset: 7488)
!10337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mii_if_info", file: !10338, line: 18, size: 384, elements: !10339)
!10338 = !DIFile(filename: "./include/linux/mii.h", directory: "/home/lizy2001/genbc/linux")
!10339 = !{!10340, !10341, !10342, !10343, !10344, !10345, !10346, !10347, !10348, !10349}
!10340 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id", scope: !10337, file: !10338, line: 19, baseType: !72, size: 32)
!10341 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !10337, file: !10338, line: 20, baseType: !72, size: 32, offset: 32)
!10342 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id_mask", scope: !10337, file: !10338, line: 21, baseType: !72, size: 32, offset: 64)
!10343 = !DIDerivedType(tag: DW_TAG_member, name: "reg_num_mask", scope: !10337, file: !10338, line: 22, baseType: !72, size: 32, offset: 96)
!10344 = !DIDerivedType(tag: DW_TAG_member, name: "full_duplex", scope: !10337, file: !10338, line: 24, baseType: !7, size: 1, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!10345 = !DIDerivedType(tag: DW_TAG_member, name: "force_media", scope: !10337, file: !10338, line: 25, baseType: !7, size: 1, offset: 129, flags: DIFlagBitField, extraData: i64 128)
!10346 = !DIDerivedType(tag: DW_TAG_member, name: "supports_gmii", scope: !10337, file: !10338, line: 26, baseType: !7, size: 1, offset: 130, flags: DIFlagBitField, extraData: i64 128)
!10347 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10337, file: !10338, line: 28, baseType: !372, size: 64, offset: 192)
!10348 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_read", scope: !10337, file: !10338, line: 29, baseType: !7858, size: 64, offset: 256)
!10349 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_write", scope: !10337, file: !10338, line: 30, baseType: !10350, size: 64, offset: 320)
!10350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10351, size: 64)
!10351 = !DISubroutineType(types: !10352)
!10352 = !{null, !372, !72, !72, !72}
!10353 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !10281, file: !3, line: 800, baseType: !1031, size: 192, offset: 7872)
!10354 = !DIDerivedType(tag: DW_TAG_member, name: "pm_notifier", scope: !10281, file: !3, line: 802, baseType: !2093, size: 192, offset: 8064)
!10355 = !DIDerivedType(tag: DW_TAG_member, name: "tx_tl", scope: !10281, file: !3, line: 804, baseType: !10356, size: 320, offset: 8256)
!10356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tasklet_struct", file: !9833, line: 609, size: 320, elements: !10357)
!10357 = !{!10358, !10360, !10361, !10362, !10363, !10374}
!10358 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10356, file: !9833, line: 611, baseType: !10359, size: 64)
!10359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10356, size: 64)
!10360 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10356, file: !9833, line: 612, baseType: !394, size: 64, offset: 64)
!10361 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10356, file: !9833, line: 613, baseType: !465, size: 32, offset: 128)
!10362 = !DIDerivedType(tag: DW_TAG_member, name: "use_callback", scope: !10356, file: !9833, line: 614, baseType: !617, size: 8, offset: 160)
!10363 = !DIDerivedType(tag: DW_TAG_member, scope: !10356, file: !9833, line: 615, baseType: !10364, size: 64, offset: 192)
!10364 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10356, file: !9833, line: 615, size: 64, elements: !10365)
!10365 = !{!10366, !10370}
!10366 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !10364, file: !9833, line: 616, baseType: !10367, size: 64)
!10367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10368, size: 64)
!10368 = !DISubroutineType(types: !10369)
!10369 = !{null, !394}
!10370 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !10364, file: !9833, line: 617, baseType: !10371, size: 64)
!10371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10372, size: 64)
!10372 = !DISubroutineType(types: !10373)
!10373 = !{null, !10359}
!10374 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10356, file: !9833, line: 619, baseType: !394, size: 64, offset: 256)
!10375 = !DIDerivedType(tag: DW_TAG_member, name: "rtl_ops", scope: !10281, file: !3, line: 818, baseType: !10376, size: 704, offset: 8576)
!10376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_ops", file: !3, line: 806, size: 704, elements: !10377)
!10377 = !{!10378, !10382, !10386, !10387, !10388, !10389, !10390, !10394, !10395, !10399, !10400}
!10378 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !10376, file: !3, line: 807, baseType: !10379, size: 64)
!10379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10380, size: 64)
!10380 = !DISubroutineType(types: !10381)
!10381 = !{null, !10280}
!10382 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !10376, file: !3, line: 808, baseType: !10383, size: 64, offset: 64)
!10383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10384, size: 64)
!10384 = !DISubroutineType(types: !10385)
!10385 = !{!72, !10280}
!10386 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !10376, file: !3, line: 809, baseType: !10379, size: 64, offset: 128)
!10387 = !DIDerivedType(tag: DW_TAG_member, name: "up", scope: !10376, file: !3, line: 810, baseType: !10379, size: 64, offset: 192)
!10388 = !DIDerivedType(tag: DW_TAG_member, name: "down", scope: !10376, file: !3, line: 811, baseType: !10379, size: 64, offset: 256)
!10389 = !DIDerivedType(tag: DW_TAG_member, name: "unload", scope: !10376, file: !3, line: 812, baseType: !10379, size: 64, offset: 320)
!10390 = !DIDerivedType(tag: DW_TAG_member, name: "eee_get", scope: !10376, file: !3, line: 813, baseType: !10391, size: 64, offset: 384)
!10391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10392, size: 64)
!10392 = !DISubroutineType(types: !10393)
!10393 = !{!72, !10280, !8568}
!10394 = !DIDerivedType(tag: DW_TAG_member, name: "eee_set", scope: !10376, file: !3, line: 814, baseType: !10391, size: 64, offset: 448)
!10395 = !DIDerivedType(tag: DW_TAG_member, name: "in_nway", scope: !10376, file: !3, line: 815, baseType: !10396, size: 64, offset: 512)
!10396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10397, size: 64)
!10397 = !DISubroutineType(types: !10398)
!10398 = !{!617, !10280}
!10399 = !DIDerivedType(tag: DW_TAG_member, name: "hw_phy_cfg", scope: !10376, file: !3, line: 816, baseType: !10379, size: 64, offset: 576)
!10400 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_en", scope: !10376, file: !3, line: 817, baseType: !10401, size: 64, offset: 640)
!10401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10402, size: 64)
!10402 = !DISubroutineType(types: !10403)
!10403 = !{null, !10280, !617}
!10404 = !DIDerivedType(tag: DW_TAG_member, name: "ups_info", scope: !10281, file: !3, line: 835, baseType: !10405, size: 32, offset: 9280)
!10405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ups_info", file: !3, line: 820, size: 32, elements: !10406)
!10406 = !{!10407, !10408, !10409, !10410, !10411, !10412, !10413, !10414, !10415, !10416, !10417, !10418, !10419, !10420}
!10407 = !DIDerivedType(tag: DW_TAG_member, name: "_10m_ckdiv", scope: !10405, file: !3, line: 821, baseType: !784, size: 1, flags: DIFlagBitField, extraData: i64 0)
!10408 = !DIDerivedType(tag: DW_TAG_member, name: "_250m_ckdiv", scope: !10405, file: !3, line: 822, baseType: !784, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!10409 = !DIDerivedType(tag: DW_TAG_member, name: "aldps", scope: !10405, file: !3, line: 823, baseType: !784, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!10410 = !DIDerivedType(tag: DW_TAG_member, name: "lite_mode", scope: !10405, file: !3, line: 824, baseType: !784, size: 2, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!10411 = !DIDerivedType(tag: DW_TAG_member, name: "speed_duplex", scope: !10405, file: !3, line: 825, baseType: !784, size: 4, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!10412 = !DIDerivedType(tag: DW_TAG_member, name: "eee", scope: !10405, file: !3, line: 826, baseType: !784, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!10413 = !DIDerivedType(tag: DW_TAG_member, name: "eee_lite", scope: !10405, file: !3, line: 827, baseType: !784, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!10414 = !DIDerivedType(tag: DW_TAG_member, name: "eee_ckdiv", scope: !10405, file: !3, line: 828, baseType: !784, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!10415 = !DIDerivedType(tag: DW_TAG_member, name: "eee_plloff_100", scope: !10405, file: !3, line: 829, baseType: !784, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!10416 = !DIDerivedType(tag: DW_TAG_member, name: "eee_plloff_giga", scope: !10405, file: !3, line: 830, baseType: !784, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!10417 = !DIDerivedType(tag: DW_TAG_member, name: "eee_cmod_lv", scope: !10405, file: !3, line: 831, baseType: !784, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!10418 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !10405, file: !3, line: 832, baseType: !784, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!10419 = !DIDerivedType(tag: DW_TAG_member, name: "flow_control", scope: !10405, file: !3, line: 833, baseType: !784, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!10420 = !DIDerivedType(tag: DW_TAG_member, name: "ctap_short_off", scope: !10405, file: !3, line: 834, baseType: !784, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!10421 = !DIDerivedType(tag: DW_TAG_member, name: "rtl_fw", scope: !10281, file: !3, line: 848, baseType: !10422, size: 576, offset: 9344)
!10422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_fw", file: !3, line: 839, size: 576, elements: !10423)
!10423 = !{!10424, !10425, !10434, !10435, !10436, !10437}
!10424 = !DIDerivedType(tag: DW_TAG_member, name: "fw_name", scope: !10422, file: !3, line: 840, baseType: !374, size: 64)
!10425 = !DIDerivedType(tag: DW_TAG_member, name: "fw", scope: !10422, file: !3, line: 841, baseType: !10426, size: 64, offset: 64)
!10426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10427, size: 64)
!10427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10428)
!10428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "firmware", file: !10429, line: 12, size: 192, elements: !10430)
!10429 = !DIFile(filename: "./include/linux/firmware.h", directory: "/home/lizy2001/genbc/linux")
!10430 = !{!10431, !10432, !10433}
!10431 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10428, file: !10429, line: 13, baseType: !671, size: 64)
!10432 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10428, file: !10429, line: 14, baseType: !8489, size: 64, offset: 64)
!10433 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !10428, file: !10429, line: 17, baseType: !647, size: 64, offset: 128)
!10434 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !10422, file: !3, line: 843, baseType: !3904, size: 256, offset: 128)
!10435 = !DIDerivedType(tag: DW_TAG_member, name: "pre_fw", scope: !10422, file: !3, line: 844, baseType: !10383, size: 64, offset: 384)
!10436 = !DIDerivedType(tag: DW_TAG_member, name: "post_fw", scope: !10422, file: !3, line: 845, baseType: !10383, size: 64, offset: 448)
!10437 = !DIDerivedType(tag: DW_TAG_member, name: "retry", scope: !10422, file: !3, line: 847, baseType: !617, size: 8, offset: 512)
!10438 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !10281, file: !3, line: 850, baseType: !465, size: 32, offset: 9920)
!10439 = !DIDerivedType(tag: DW_TAG_member, name: "eee_en", scope: !10281, file: !3, line: 852, baseType: !617, size: 8, offset: 9952)
!10440 = !DIDerivedType(tag: DW_TAG_member, name: "intr_interval", scope: !10281, file: !3, line: 853, baseType: !72, size: 32, offset: 9984)
!10441 = !DIDerivedType(tag: DW_TAG_member, name: "saved_wolopts", scope: !10281, file: !3, line: 854, baseType: !784, size: 32, offset: 10016)
!10442 = !DIDerivedType(tag: DW_TAG_member, name: "msg_enable", scope: !10281, file: !3, line: 855, baseType: !784, size: 32, offset: 10048)
!10443 = !DIDerivedType(tag: DW_TAG_member, name: "tx_qlen", scope: !10281, file: !3, line: 856, baseType: !784, size: 32, offset: 10080)
!10444 = !DIDerivedType(tag: DW_TAG_member, name: "coalesce", scope: !10281, file: !3, line: 857, baseType: !784, size: 32, offset: 10112)
!10445 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !10281, file: !3, line: 858, baseType: !784, size: 32, offset: 10144)
!10446 = !DIDerivedType(tag: DW_TAG_member, name: "rx_buf_sz", scope: !10281, file: !3, line: 859, baseType: !784, size: 32, offset: 10176)
!10447 = !DIDerivedType(tag: DW_TAG_member, name: "rx_copybreak", scope: !10281, file: !3, line: 860, baseType: !784, size: 32, offset: 10208)
!10448 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !10281, file: !3, line: 861, baseType: !784, size: 32, offset: 10240)
!10449 = !DIDerivedType(tag: DW_TAG_member, name: "ocp_base", scope: !10281, file: !3, line: 863, baseType: !1115, size: 16, offset: 10272)
!10450 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !10281, file: !3, line: 864, baseType: !1115, size: 16, offset: 10288)
!10451 = !DIDerivedType(tag: DW_TAG_member, name: "eee_adv", scope: !10281, file: !3, line: 865, baseType: !1115, size: 16, offset: 10304)
!10452 = !DIDerivedType(tag: DW_TAG_member, name: "intr_buff", scope: !10281, file: !3, line: 866, baseType: !7823, size: 64, offset: 10368)
!10453 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !10281, file: !3, line: 867, baseType: !1474, size: 8, offset: 10432)
!10454 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !10281, file: !3, line: 868, baseType: !1474, size: 8, offset: 10440)
!10455 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !10281, file: !3, line: 869, baseType: !1474, size: 8, offset: 10448)
!10456 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !10213, file: !3, line: 772, baseType: !701, size: 64, offset: 384)
!10457 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !10213, file: !3, line: 773, baseType: !647, size: 64, offset: 448)
!10458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10459, size: 64)
!10459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10460)
!10460 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !72)
!10461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10462, size: 64)
!10462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10463)
!10463 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !394)
!10464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10465, size: 64)
!10465 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !369)
!10466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10467, size: 64)
!10467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10465)
!10468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10469, size: 64)
!10469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fw_header", file: !3, line: 891, size: 512, elements: !10470)
!10470 = !{!10471, !10473, !10474}
!10471 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !10469, file: !3, line: 892, baseType: !10472, size: 256)
!10472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1474, size: 256, elements: !793)
!10473 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !10469, file: !3, line: 893, baseType: !3904, size: 256, offset: 256)
!10474 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !10469, file: !3, line: 894, baseType: !10475, offset: 512)
!10475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10476, elements: !391)
!10476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fw_block", file: !3, line: 878, size: 64, elements: !10477)
!10477 = !{!10478, !10479}
!10478 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10476, file: !3, line: 879, baseType: !9980, size: 32)
!10479 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !10476, file: !3, line: 880, baseType: !9980, size: 32, offset: 32)
!10480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10476, size: 64)
!10481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10482, size: 64)
!10482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fw_mac", file: !3, line: 919, size: 504, elements: !10483)
!10483 = !{!10484, !10485, !10486, !10487, !10488, !10489, !10490, !10491, !10492, !10493, !10495, !10496, !10497, !10498}
!10484 = !DIDerivedType(tag: DW_TAG_member, name: "blk_hdr", scope: !10482, file: !3, line: 920, baseType: !10476, size: 64)
!10485 = !DIDerivedType(tag: DW_TAG_member, name: "fw_offset", scope: !10482, file: !3, line: 921, baseType: !9906, size: 16, offset: 64)
!10486 = !DIDerivedType(tag: DW_TAG_member, name: "fw_reg", scope: !10482, file: !3, line: 922, baseType: !9906, size: 16, offset: 80)
!10487 = !DIDerivedType(tag: DW_TAG_member, name: "bp_ba_addr", scope: !10482, file: !3, line: 923, baseType: !9906, size: 16, offset: 96)
!10488 = !DIDerivedType(tag: DW_TAG_member, name: "bp_ba_value", scope: !10482, file: !3, line: 924, baseType: !9906, size: 16, offset: 112)
!10489 = !DIDerivedType(tag: DW_TAG_member, name: "bp_en_addr", scope: !10482, file: !3, line: 925, baseType: !9906, size: 16, offset: 128)
!10490 = !DIDerivedType(tag: DW_TAG_member, name: "bp_en_value", scope: !10482, file: !3, line: 926, baseType: !9906, size: 16, offset: 144)
!10491 = !DIDerivedType(tag: DW_TAG_member, name: "bp_start", scope: !10482, file: !3, line: 927, baseType: !9906, size: 16, offset: 160)
!10492 = !DIDerivedType(tag: DW_TAG_member, name: "bp_num", scope: !10482, file: !3, line: 928, baseType: !9906, size: 16, offset: 176)
!10493 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !10482, file: !3, line: 929, baseType: !10494, size: 256, offset: 192)
!10494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9906, size: 256, elements: !351)
!10495 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !10482, file: !3, line: 930, baseType: !9980, size: 32, offset: 448)
!10496 = !DIDerivedType(tag: DW_TAG_member, name: "fw_ver_reg", scope: !10482, file: !3, line: 931, baseType: !9906, size: 16, offset: 480)
!10497 = !DIDerivedType(tag: DW_TAG_member, name: "fw_ver_data", scope: !10482, file: !3, line: 932, baseType: !1474, size: 8, offset: 496)
!10498 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !10482, file: !3, line: 933, baseType: !390, offset: 504)
!10499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10500, size: 64)
!10500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fw_phy_patch_key", file: !3, line: 942, size: 128, elements: !10501)
!10501 = !{!10502, !10503, !10504, !10505}
!10502 = !DIDerivedType(tag: DW_TAG_member, name: "blk_hdr", scope: !10500, file: !3, line: 943, baseType: !10476, size: 64)
!10503 = !DIDerivedType(tag: DW_TAG_member, name: "key_reg", scope: !10500, file: !3, line: 944, baseType: !9906, size: 16, offset: 64)
!10504 = !DIDerivedType(tag: DW_TAG_member, name: "key_data", scope: !10500, file: !3, line: 945, baseType: !9906, size: 16, offset: 80)
!10505 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !10500, file: !3, line: 946, baseType: !9980, size: 32, offset: 96)
!10506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10507, size: 64)
!10507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fw_phy_nc", file: !3, line: 970, size: 320, elements: !10508)
!10508 = !{!10509, !10510, !10511, !10512, !10513, !10514, !10515, !10516, !10517, !10518, !10519, !10520, !10521, !10522, !10524}
!10509 = !DIDerivedType(tag: DW_TAG_member, name: "blk_hdr", scope: !10507, file: !3, line: 971, baseType: !10476, size: 64)
!10510 = !DIDerivedType(tag: DW_TAG_member, name: "fw_offset", scope: !10507, file: !3, line: 972, baseType: !9906, size: 16, offset: 64)
!10511 = !DIDerivedType(tag: DW_TAG_member, name: "fw_reg", scope: !10507, file: !3, line: 973, baseType: !9906, size: 16, offset: 80)
!10512 = !DIDerivedType(tag: DW_TAG_member, name: "ba_reg", scope: !10507, file: !3, line: 974, baseType: !9906, size: 16, offset: 96)
!10513 = !DIDerivedType(tag: DW_TAG_member, name: "ba_data", scope: !10507, file: !3, line: 975, baseType: !9906, size: 16, offset: 112)
!10514 = !DIDerivedType(tag: DW_TAG_member, name: "patch_en_addr", scope: !10507, file: !3, line: 976, baseType: !9906, size: 16, offset: 128)
!10515 = !DIDerivedType(tag: DW_TAG_member, name: "patch_en_value", scope: !10507, file: !3, line: 977, baseType: !9906, size: 16, offset: 144)
!10516 = !DIDerivedType(tag: DW_TAG_member, name: "mode_reg", scope: !10507, file: !3, line: 978, baseType: !9906, size: 16, offset: 160)
!10517 = !DIDerivedType(tag: DW_TAG_member, name: "mode_pre", scope: !10507, file: !3, line: 979, baseType: !9906, size: 16, offset: 176)
!10518 = !DIDerivedType(tag: DW_TAG_member, name: "mode_post", scope: !10507, file: !3, line: 980, baseType: !9906, size: 16, offset: 192)
!10519 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !10507, file: !3, line: 981, baseType: !9906, size: 16, offset: 208)
!10520 = !DIDerivedType(tag: DW_TAG_member, name: "bp_start", scope: !10507, file: !3, line: 982, baseType: !9906, size: 16, offset: 224)
!10521 = !DIDerivedType(tag: DW_TAG_member, name: "bp_num", scope: !10507, file: !3, line: 983, baseType: !9906, size: 16, offset: 240)
!10522 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !10507, file: !3, line: 984, baseType: !10523, size: 64, offset: 256)
!10523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9906, size: 64, elements: !1279)
!10524 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !10507, file: !3, line: 985, baseType: !390, offset: 320)
!10525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9906, size: 64)
!10526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10527, size: 64)
!10527 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !413)
!10528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10529, size: 64)
!10529 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !350)
!10530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!10531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10532, size: 64)
!10532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr", file: !71, line: 209, size: 640, elements: !10533)
!10533 = !{!10534, !10535, !10536, !10537, !10538, !10539, !10540, !10541}
!10534 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10532, file: !71, line: 210, baseType: !366, size: 128)
!10535 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !10532, file: !71, line: 211, baseType: !792, size: 256, offset: 128)
!10536 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10532, file: !71, line: 212, baseType: !571, size: 8, offset: 384)
!10537 = !DIDerivedType(tag: DW_TAG_member, name: "global_use", scope: !10532, file: !71, line: 217, baseType: !617, size: 8, offset: 392)
!10538 = !DIDerivedType(tag: DW_TAG_member, name: "sync_cnt", scope: !10532, file: !71, line: 218, baseType: !72, size: 32, offset: 416)
!10539 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !10532, file: !71, line: 219, baseType: !72, size: 32, offset: 448)
!10540 = !DIDerivedType(tag: DW_TAG_member, name: "synced", scope: !10532, file: !71, line: 220, baseType: !72, size: 32, offset: 480)
!10541 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !10532, file: !71, line: 221, baseType: !381, size: 128, align: 64, offset: 512)
!10542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10543, size: 64)
!10543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shash_alg", file: !10544, line: 198, size: 3840, elements: !10545)
!10544 = !DIFile(filename: "./include/crypto/hash.h", directory: "/home/lizy2001/genbc/linux")
!10545 = !{!10546, !10625, !10629, !10633, !10637, !10638, !10642, !10646, !10650, !10654, !10658, !10659, !10660, !10661}
!10546 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !10543, file: !10544, line: 199, baseType: !10547, size: 64)
!10547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10548, size: 64)
!10548 = !DISubroutineType(types: !10549)
!10549 = !{!72, !10550}
!10550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10551, size: 64)
!10551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shash_desc", file: !10544, line: 150, size: 64, elements: !10552)
!10552 = !{!10553, !10624}
!10553 = !DIDerivedType(tag: DW_TAG_member, name: "tfm", scope: !10551, file: !10544, line: 151, baseType: !10554, size: 64)
!10554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10555, size: 64)
!10555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_shash", file: !10544, line: 239, size: 256, elements: !10556)
!10556 = !{!10557, !10558}
!10557 = !DIDerivedType(tag: DW_TAG_member, name: "descsize", scope: !10555, file: !10544, line: 240, baseType: !7, size: 32)
!10558 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !10555, file: !10544, line: 241, baseType: !10559, size: 192, offset: 64)
!10559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_tfm", file: !10560, line: 626, size: 192, elements: !10561)
!10560 = !DIFile(filename: "./include/linux/crypto.h", directory: "/home/lizy2001/genbc/linux")
!10561 = !{!10562, !10563, !10564, !10569, !10622}
!10562 = !DIDerivedType(tag: DW_TAG_member, name: "crt_flags", scope: !10559, file: !10560, line: 628, baseType: !784, size: 32)
!10563 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10559, file: !10560, line: 630, baseType: !72, size: 32, offset: 32)
!10564 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !10559, file: !10560, line: 632, baseType: !10565, size: 64, offset: 64)
!10565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10566, size: 64)
!10566 = !DISubroutineType(types: !10567)
!10567 = !{null, !10568}
!10568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10559, size: 64)
!10569 = !DIDerivedType(tag: DW_TAG_member, name: "__crt_alg", scope: !10559, file: !10560, line: 634, baseType: !10570, size: 64, offset: 128)
!10570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10571, size: 64)
!10571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_alg", file: !10560, line: 466, size: 3072, align: 64, elements: !10572)
!10572 = !{!10573, !10574, !10575, !10576, !10577, !10578, !10579, !10580, !10581, !10582, !10583, !10587, !10612, !10616, !10617, !10621}
!10573 = !DIDerivedType(tag: DW_TAG_member, name: "cra_list", scope: !10571, file: !10560, line: 467, baseType: !366, size: 128)
!10574 = !DIDerivedType(tag: DW_TAG_member, name: "cra_users", scope: !10571, file: !10560, line: 468, baseType: !366, size: 128, offset: 128)
!10575 = !DIDerivedType(tag: DW_TAG_member, name: "cra_flags", scope: !10571, file: !10560, line: 470, baseType: !784, size: 32, offset: 256)
!10576 = !DIDerivedType(tag: DW_TAG_member, name: "cra_blocksize", scope: !10571, file: !10560, line: 471, baseType: !7, size: 32, offset: 288)
!10577 = !DIDerivedType(tag: DW_TAG_member, name: "cra_ctxsize", scope: !10571, file: !10560, line: 472, baseType: !7, size: 32, offset: 320)
!10578 = !DIDerivedType(tag: DW_TAG_member, name: "cra_alignmask", scope: !10571, file: !10560, line: 473, baseType: !7, size: 32, offset: 352)
!10579 = !DIDerivedType(tag: DW_TAG_member, name: "cra_priority", scope: !10571, file: !10560, line: 475, baseType: !72, size: 32, offset: 384)
!10580 = !DIDerivedType(tag: DW_TAG_member, name: "cra_refcnt", scope: !10571, file: !10560, line: 476, baseType: !1348, size: 32, offset: 416)
!10581 = !DIDerivedType(tag: DW_TAG_member, name: "cra_name", scope: !10571, file: !10560, line: 478, baseType: !3133, size: 1024, offset: 448)
!10582 = !DIDerivedType(tag: DW_TAG_member, name: "cra_driver_name", scope: !10571, file: !10560, line: 479, baseType: !3133, size: 1024, offset: 1472)
!10583 = !DIDerivedType(tag: DW_TAG_member, name: "cra_type", scope: !10571, file: !10560, line: 481, baseType: !10584, size: 64, offset: 2496)
!10584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10585, size: 64)
!10585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10586)
!10586 = !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_type", file: !10560, line: 165, flags: DIFlagFwdDecl)
!10587 = !DIDerivedType(tag: DW_TAG_member, name: "cra_u", scope: !10571, file: !10560, line: 486, baseType: !10588, size: 256, offset: 2560)
!10588 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10571, file: !10560, line: 483, size: 256, elements: !10589)
!10589 = !{!10590, !10604}
!10590 = !DIDerivedType(tag: DW_TAG_member, name: "cipher", scope: !10588, file: !10560, line: 484, baseType: !10591, size: 256)
!10591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_alg", file: !10560, line: 239, size: 256, elements: !10592)
!10592 = !{!10593, !10594, !10595, !10599, !10603}
!10593 = !DIDerivedType(tag: DW_TAG_member, name: "cia_min_keysize", scope: !10591, file: !10560, line: 240, baseType: !7, size: 32)
!10594 = !DIDerivedType(tag: DW_TAG_member, name: "cia_max_keysize", scope: !10591, file: !10560, line: 241, baseType: !7, size: 32, offset: 32)
!10595 = !DIDerivedType(tag: DW_TAG_member, name: "cia_setkey", scope: !10591, file: !10560, line: 242, baseType: !10596, size: 64, offset: 64)
!10596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10597, size: 64)
!10597 = !DISubroutineType(types: !10598)
!10598 = !{!72, !10568, !8489, !7}
!10599 = !DIDerivedType(tag: DW_TAG_member, name: "cia_encrypt", scope: !10591, file: !10560, line: 244, baseType: !10600, size: 64, offset: 128)
!10600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10601, size: 64)
!10601 = !DISubroutineType(types: !10602)
!10602 = !{null, !10568, !7823, !8489}
!10603 = !DIDerivedType(tag: DW_TAG_member, name: "cia_decrypt", scope: !10591, file: !10560, line: 245, baseType: !10600, size: 64, offset: 192)
!10604 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !10588, file: !10560, line: 485, baseType: !10605, size: 128)
!10605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "compress_alg", file: !10560, line: 259, size: 128, elements: !10606)
!10606 = !{!10607, !10611}
!10607 = !DIDerivedType(tag: DW_TAG_member, name: "coa_compress", scope: !10605, file: !10560, line: 260, baseType: !10608, size: 64)
!10608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10609, size: 64)
!10609 = !DISubroutineType(types: !10610)
!10610 = !{!72, !10568, !8489, !7, !7823, !4724}
!10611 = !DIDerivedType(tag: DW_TAG_member, name: "coa_decompress", scope: !10605, file: !10560, line: 262, baseType: !10608, size: 64, offset: 64)
!10612 = !DIDerivedType(tag: DW_TAG_member, name: "cra_init", scope: !10571, file: !10560, line: 488, baseType: !10613, size: 64, offset: 2816)
!10613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10614, size: 64)
!10614 = !DISubroutineType(types: !10615)
!10615 = !{!72, !10568}
!10616 = !DIDerivedType(tag: DW_TAG_member, name: "cra_exit", scope: !10571, file: !10560, line: 489, baseType: !10565, size: 64, offset: 2880)
!10617 = !DIDerivedType(tag: DW_TAG_member, name: "cra_destroy", scope: !10571, file: !10560, line: 490, baseType: !10618, size: 64, offset: 2944)
!10618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10619, size: 64)
!10619 = !DISubroutineType(types: !10620)
!10620 = !{null, !10570}
!10621 = !DIDerivedType(tag: DW_TAG_member, name: "cra_module", scope: !10571, file: !10560, line: 492, baseType: !929, size: 64, offset: 3008)
!10622 = !DIDerivedType(tag: DW_TAG_member, name: "__crt_ctx", scope: !10559, file: !10560, line: 636, baseType: !10623, align: 64, offset: 192)
!10623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, elements: !391)
!10624 = !DIDerivedType(tag: DW_TAG_member, name: "__ctx", scope: !10551, file: !10544, line: 152, baseType: !10623, align: 64, offset: 64)
!10625 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !10543, file: !10544, line: 200, baseType: !10626, size: 64, offset: 64)
!10626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10627, size: 64)
!10627 = !DISubroutineType(types: !10628)
!10628 = !{!72, !10550, !8489, !7}
!10629 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !10543, file: !10544, line: 202, baseType: !10630, size: 64, offset: 128)
!10630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10631, size: 64)
!10631 = !DISubroutineType(types: !10632)
!10632 = !{!72, !10550, !7823}
!10633 = !DIDerivedType(tag: DW_TAG_member, name: "finup", scope: !10543, file: !10544, line: 203, baseType: !10634, size: 64, offset: 192)
!10634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10635, size: 64)
!10635 = !DISubroutineType(types: !10636)
!10636 = !{!72, !10550, !8489, !7, !7823}
!10637 = !DIDerivedType(tag: DW_TAG_member, name: "digest", scope: !10543, file: !10544, line: 205, baseType: !10634, size: 64, offset: 256)
!10638 = !DIDerivedType(tag: DW_TAG_member, name: "export", scope: !10543, file: !10544, line: 207, baseType: !10639, size: 64, offset: 320)
!10639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10640, size: 64)
!10640 = !DISubroutineType(types: !10641)
!10641 = !{!72, !10550, !647}
!10642 = !DIDerivedType(tag: DW_TAG_member, name: "import", scope: !10543, file: !10544, line: 208, baseType: !10643, size: 64, offset: 384)
!10643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10644, size: 64)
!10644 = !DISubroutineType(types: !10645)
!10645 = !{!72, !10550, !2340}
!10646 = !DIDerivedType(tag: DW_TAG_member, name: "setkey", scope: !10543, file: !10544, line: 209, baseType: !10647, size: 64, offset: 448)
!10647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10648, size: 64)
!10648 = !DISubroutineType(types: !10649)
!10649 = !{!72, !10554, !8489, !7}
!10650 = !DIDerivedType(tag: DW_TAG_member, name: "init_tfm", scope: !10543, file: !10544, line: 211, baseType: !10651, size: 64, offset: 512)
!10651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10652, size: 64)
!10652 = !DISubroutineType(types: !10653)
!10653 = !{!72, !10554}
!10654 = !DIDerivedType(tag: DW_TAG_member, name: "exit_tfm", scope: !10543, file: !10544, line: 212, baseType: !10655, size: 64, offset: 576)
!10655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10656, size: 64)
!10656 = !DISubroutineType(types: !10657)
!10657 = !{null, !10554}
!10658 = !DIDerivedType(tag: DW_TAG_member, name: "descsize", scope: !10543, file: !10544, line: 214, baseType: !7, size: 32, offset: 640)
!10659 = !DIDerivedType(tag: DW_TAG_member, name: "digestsize", scope: !10543, file: !10544, line: 217, baseType: !7, size: 32, align: 64, offset: 704)
!10660 = !DIDerivedType(tag: DW_TAG_member, name: "statesize", scope: !10543, file: !10544, line: 219, baseType: !7, size: 32, offset: 736)
!10661 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !10543, file: !10544, line: 221, baseType: !10571, size: 3072, align: 64, offset: 768)
!10662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10317, size: 64)
!10663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10664, size: 64)
!10664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tx_desc", file: !3, line: 744, size: 64, elements: !10665)
!10665 = !{!10666, !10667}
!10666 = !DIDerivedType(tag: DW_TAG_member, name: "opts1", scope: !10664, file: !3, line: 745, baseType: !9980, size: 32)
!10667 = !DIDerivedType(tag: DW_TAG_member, name: "opts2", scope: !10664, file: !3, line: 754, baseType: !9980, size: 32, offset: 32)
!10668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10669, size: 64)
!10669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_info", file: !499, line: 512, size: 2560, elements: !10670)
!10670 = !{!10671, !10672, !10673, !10674, !10675, !10676, !10677, !10678, !10682, !10683, !10684, !10685, !10686}
!10671 = !DIDerivedType(tag: DW_TAG_member, name: "__unused", scope: !10669, file: !499, line: 513, baseType: !1475, size: 8)
!10672 = !DIDerivedType(tag: DW_TAG_member, name: "meta_len", scope: !10669, file: !499, line: 514, baseType: !1475, size: 8, offset: 8)
!10673 = !DIDerivedType(tag: DW_TAG_member, name: "nr_frags", scope: !10669, file: !499, line: 515, baseType: !1475, size: 8, offset: 16)
!10674 = !DIDerivedType(tag: DW_TAG_member, name: "tx_flags", scope: !10669, file: !499, line: 516, baseType: !1475, size: 8, offset: 24)
!10675 = !DIDerivedType(tag: DW_TAG_member, name: "gso_size", scope: !10669, file: !499, line: 517, baseType: !554, size: 16, offset: 32)
!10676 = !DIDerivedType(tag: DW_TAG_member, name: "gso_segs", scope: !10669, file: !499, line: 519, baseType: !554, size: 16, offset: 48)
!10677 = !DIDerivedType(tag: DW_TAG_member, name: "frag_list", scope: !10669, file: !499, line: 520, baseType: !497, size: 64, offset: 64)
!10678 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamps", scope: !10669, file: !499, line: 521, baseType: !10679, size: 64, offset: 128)
!10679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_hwtstamps", file: !499, line: 418, size: 64, elements: !10680)
!10680 = !{!10681}
!10681 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp", scope: !10679, file: !499, line: 419, baseType: !1418, size: 64)
!10682 = !DIDerivedType(tag: DW_TAG_member, name: "gso_type", scope: !10669, file: !499, line: 522, baseType: !7, size: 32, offset: 192)
!10683 = !DIDerivedType(tag: DW_TAG_member, name: "tskey", scope: !10669, file: !499, line: 523, baseType: !784, size: 32, offset: 224)
!10684 = !DIDerivedType(tag: DW_TAG_member, name: "dataref", scope: !10669, file: !499, line: 528, baseType: !465, size: 32, offset: 256)
!10685 = !DIDerivedType(tag: DW_TAG_member, name: "destructor_arg", scope: !10669, file: !499, line: 532, baseType: !647, size: 64, offset: 320)
!10686 = !DIDerivedType(tag: DW_TAG_member, name: "frags", scope: !10669, file: !499, line: 535, baseType: !10687, size: 2176, offset: 384)
!10687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10688, size: 2176, elements: !10689)
!10688 = !DIDerivedType(tag: DW_TAG_typedef, name: "skb_frag_t", file: !499, line: 321, baseType: !697)
!10689 = !{!10690}
!10690 = !DISubrange(count: 17)
!10691 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !359, line: 37, baseType: !394)
!10692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10693, size: 64)
!10693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcphdr", file: !10694, line: 25, size: 160, elements: !10695)
!10694 = !DIFile(filename: "./include/uapi/linux/tcp.h", directory: "/home/lizy2001/genbc/linux")
!10695 = !{!10696, !10697, !10698, !10699, !10700, !10701, !10702, !10703, !10704, !10705, !10706, !10707, !10708, !10709, !10710, !10711, !10713}
!10696 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !10693, file: !10694, line: 26, baseType: !566, size: 16)
!10697 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !10693, file: !10694, line: 27, baseType: !566, size: 16, offset: 16)
!10698 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !10693, file: !10694, line: 28, baseType: !543, size: 32, offset: 32)
!10699 = !DIDerivedType(tag: DW_TAG_member, name: "ack_seq", scope: !10693, file: !10694, line: 29, baseType: !543, size: 32, offset: 64)
!10700 = !DIDerivedType(tag: DW_TAG_member, name: "res1", scope: !10693, file: !10694, line: 31, baseType: !553, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!10701 = !DIDerivedType(tag: DW_TAG_member, name: "doff", scope: !10693, file: !10694, line: 32, baseType: !553, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!10702 = !DIDerivedType(tag: DW_TAG_member, name: "fin", scope: !10693, file: !10694, line: 33, baseType: !553, size: 1, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!10703 = !DIDerivedType(tag: DW_TAG_member, name: "syn", scope: !10693, file: !10694, line: 34, baseType: !553, size: 1, offset: 105, flags: DIFlagBitField, extraData: i64 96)
!10704 = !DIDerivedType(tag: DW_TAG_member, name: "rst", scope: !10693, file: !10694, line: 35, baseType: !553, size: 1, offset: 106, flags: DIFlagBitField, extraData: i64 96)
!10705 = !DIDerivedType(tag: DW_TAG_member, name: "psh", scope: !10693, file: !10694, line: 36, baseType: !553, size: 1, offset: 107, flags: DIFlagBitField, extraData: i64 96)
!10706 = !DIDerivedType(tag: DW_TAG_member, name: "ack", scope: !10693, file: !10694, line: 37, baseType: !553, size: 1, offset: 108, flags: DIFlagBitField, extraData: i64 96)
!10707 = !DIDerivedType(tag: DW_TAG_member, name: "urg", scope: !10693, file: !10694, line: 38, baseType: !553, size: 1, offset: 109, flags: DIFlagBitField, extraData: i64 96)
!10708 = !DIDerivedType(tag: DW_TAG_member, name: "ece", scope: !10693, file: !10694, line: 39, baseType: !553, size: 1, offset: 110, flags: DIFlagBitField, extraData: i64 96)
!10709 = !DIDerivedType(tag: DW_TAG_member, name: "cwr", scope: !10693, file: !10694, line: 40, baseType: !553, size: 1, offset: 111, flags: DIFlagBitField, extraData: i64 96)
!10710 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !10693, file: !10694, line: 55, baseType: !566, size: 16, offset: 112)
!10711 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !10693, file: !10694, line: 56, baseType: !10712, size: 16, offset: 128)
!10712 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sum16", file: !544, line: 36, baseType: !553)
!10713 = !DIDerivedType(tag: DW_TAG_member, name: "urg_ptr", scope: !10693, file: !10694, line: 57, baseType: !566, size: 16, offset: 144)
!10714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10715, size: 64)
!10715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iphdr", file: !10716, line: 86, size: 160, elements: !10717)
!10716 = !DIFile(filename: "./include/uapi/linux/ip.h", directory: "/home/lizy2001/genbc/linux")
!10717 = !{!10718, !10719, !10720, !10721, !10722, !10723, !10724, !10725, !10726, !10727, !10728}
!10718 = !DIDerivedType(tag: DW_TAG_member, name: "ihl", scope: !10715, file: !10716, line: 88, baseType: !1475, size: 4, flags: DIFlagBitField, extraData: i64 0)
!10719 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !10715, file: !10716, line: 89, baseType: !1475, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!10720 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !10715, file: !10716, line: 96, baseType: !1475, size: 8, offset: 8)
!10721 = !DIDerivedType(tag: DW_TAG_member, name: "tot_len", scope: !10715, file: !10716, line: 97, baseType: !566, size: 16, offset: 16)
!10722 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10715, file: !10716, line: 98, baseType: !566, size: 16, offset: 32)
!10723 = !DIDerivedType(tag: DW_TAG_member, name: "frag_off", scope: !10715, file: !10716, line: 99, baseType: !566, size: 16, offset: 48)
!10724 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !10715, file: !10716, line: 100, baseType: !1475, size: 8, offset: 64)
!10725 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !10715, file: !10716, line: 101, baseType: !1475, size: 8, offset: 72)
!10726 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !10715, file: !10716, line: 102, baseType: !10712, size: 16, offset: 80)
!10727 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !10715, file: !10716, line: 103, baseType: !543, size: 32, offset: 96)
!10728 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !10715, file: !10716, line: 104, baseType: !543, size: 32, offset: 128)
!10729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10730, size: 64)
!10730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6hdr", file: !10731, line: 117, size: 320, elements: !10732)
!10731 = !DIFile(filename: "./include/uapi/linux/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!10732 = !{!10733, !10734, !10735, !10737, !10738, !10739, !10740, !10741}
!10733 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !10730, file: !10731, line: 119, baseType: !1475, size: 4, flags: DIFlagBitField, extraData: i64 0)
!10734 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !10730, file: !10731, line: 120, baseType: !1475, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!10735 = !DIDerivedType(tag: DW_TAG_member, name: "flow_lbl", scope: !10730, file: !10731, line: 127, baseType: !10736, size: 24, offset: 8)
!10736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1475, size: 24, elements: !944)
!10737 = !DIDerivedType(tag: DW_TAG_member, name: "payload_len", scope: !10730, file: !10731, line: 129, baseType: !566, size: 16, offset: 32)
!10738 = !DIDerivedType(tag: DW_TAG_member, name: "nexthdr", scope: !10730, file: !10731, line: 130, baseType: !1475, size: 8, offset: 48)
!10739 = !DIDerivedType(tag: DW_TAG_member, name: "hop_limit", scope: !10730, file: !10731, line: 131, baseType: !1475, size: 8, offset: 56)
!10740 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !10730, file: !10731, line: 133, baseType: !2300, size: 128, offset: 64)
!10741 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !10730, file: !10731, line: 134, baseType: !2300, size: 128, offset: 192)
!10742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10460, size: 64)
!10743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10744, size: 64)
!10744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1115)
!10745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10746, size: 64)
!10746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mii_ioctl_data", file: !10747, line: 178, size: 64, elements: !10748)
!10747 = !DIFile(filename: "./include/uapi/linux/mii.h", directory: "/home/lizy2001/genbc/linux")
!10748 = !{!10749, !10750, !10751, !10752}
!10749 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id", scope: !10746, file: !10747, line: 179, baseType: !553, size: 16)
!10750 = !DIDerivedType(tag: DW_TAG_member, name: "reg_num", scope: !10746, file: !10747, line: 180, baseType: !553, size: 16, offset: 16)
!10751 = !DIDerivedType(tag: DW_TAG_member, name: "val_in", scope: !10746, file: !10747, line: 181, baseType: !553, size: 16, offset: 32)
!10752 = !DIDerivedType(tag: DW_TAG_member, name: "val_out", scope: !10746, file: !10747, line: 182, baseType: !553, size: 16, offset: 48)
!10753 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le64", file: !544, line: 33, baseType: !415)
!10754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10755, size: 64)
!10755 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_object", file: !10756, line: 899, size: 192, elements: !10757)
!10756 = !DIFile(filename: "./include/acpi/actypes.h", directory: "/home/lizy2001/genbc/linux")
!10757 = !{!10758, !10760, !10765, !10771, !10777, !10783, !10790, !10798}
!10758 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10755, file: !10756, line: 900, baseType: !10759, size: 32)
!10759 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_object_type", file: !10756, line: 635, baseType: !784)
!10760 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !10755, file: !10756, line: 904, baseType: !10761, size: 128)
!10761 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10755, file: !10756, line: 901, size: 128, elements: !10762)
!10762 = !{!10763, !10764}
!10763 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10761, file: !10756, line: 902, baseType: !10759, size: 32)
!10764 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !10761, file: !10756, line: 903, baseType: !413, size: 64, offset: 64)
!10765 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !10755, file: !10756, line: 910, baseType: !10766, size: 128)
!10766 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10755, file: !10756, line: 906, size: 128, elements: !10767)
!10767 = !{!10768, !10769, !10770}
!10768 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10766, file: !10756, line: 907, baseType: !10759, size: 32)
!10769 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !10766, file: !10756, line: 908, baseType: !784, size: 32, offset: 32)
!10770 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !10766, file: !10756, line: 909, baseType: !654, size: 64, offset: 64)
!10771 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !10755, file: !10756, line: 916, baseType: !10772, size: 128)
!10772 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10755, file: !10756, line: 912, size: 128, elements: !10773)
!10773 = !{!10774, !10775, !10776}
!10774 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10772, file: !10756, line: 913, baseType: !10759, size: 32)
!10775 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !10772, file: !10756, line: 914, baseType: !784, size: 32, offset: 32)
!10776 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !10772, file: !10756, line: 915, baseType: !7823, size: 64, offset: 64)
!10777 = !DIDerivedType(tag: DW_TAG_member, name: "package", scope: !10755, file: !10756, line: 922, baseType: !10778, size: 128)
!10778 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10755, file: !10756, line: 918, size: 128, elements: !10779)
!10779 = !{!10780, !10781, !10782}
!10780 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10778, file: !10756, line: 919, baseType: !10759, size: 32)
!10781 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10778, file: !10756, line: 920, baseType: !784, size: 32, offset: 32)
!10782 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !10778, file: !10756, line: 921, baseType: !10754, size: 64, offset: 64)
!10783 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !10755, file: !10756, line: 928, baseType: !10784, size: 128)
!10784 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10755, file: !10756, line: 924, size: 128, elements: !10785)
!10785 = !{!10786, !10787, !10788}
!10786 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10784, file: !10756, line: 925, baseType: !10759, size: 32)
!10787 = !DIDerivedType(tag: DW_TAG_member, name: "actual_type", scope: !10784, file: !10756, line: 926, baseType: !10759, size: 32, offset: 32)
!10788 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !10784, file: !10756, line: 927, baseType: !10789, size: 64, offset: 64)
!10789 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_handle", file: !10756, line: 424, baseType: !647)
!10790 = !DIDerivedType(tag: DW_TAG_member, name: "processor", scope: !10755, file: !10756, line: 935, baseType: !10791, size: 192)
!10791 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10755, file: !10756, line: 930, size: 192, elements: !10792)
!10792 = !{!10793, !10794, !10795, !10797}
!10793 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10791, file: !10756, line: 931, baseType: !10759, size: 32)
!10794 = !DIDerivedType(tag: DW_TAG_member, name: "proc_id", scope: !10791, file: !10756, line: 932, baseType: !784, size: 32, offset: 32)
!10795 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_address", scope: !10791, file: !10756, line: 933, baseType: !10796, size: 64, offset: 64)
!10796 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_io_address", file: !10756, line: 128, baseType: !413)
!10797 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_length", scope: !10791, file: !10756, line: 934, baseType: !784, size: 32, offset: 128)
!10798 = !DIDerivedType(tag: DW_TAG_member, name: "power_resource", scope: !10755, file: !10756, line: 941, baseType: !10799, size: 96)
!10799 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10755, file: !10756, line: 937, size: 96, elements: !10800)
!10800 = !{!10801, !10802, !10803}
!10801 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10799, file: !10756, line: 938, baseType: !10759, size: 32)
!10802 = !DIDerivedType(tag: DW_TAG_member, name: "system_level", scope: !10799, file: !10756, line: 939, baseType: !784, size: 32, offset: 32)
!10803 = !DIDerivedType(tag: DW_TAG_member, name: "resource_order", scope: !10799, file: !10756, line: 940, baseType: !784, size: 32, offset: 64)
!10804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!10805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10806, size: 64)
!10806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rx_desc", file: !3, line: 723, size: 192, elements: !10807)
!10807 = !{!10808, !10809, !10810, !10811, !10812, !10813}
!10808 = !DIDerivedType(tag: DW_TAG_member, name: "opts1", scope: !10806, file: !3, line: 724, baseType: !9980, size: 32)
!10809 = !DIDerivedType(tag: DW_TAG_member, name: "opts2", scope: !10806, file: !3, line: 727, baseType: !9980, size: 32, offset: 32)
!10810 = !DIDerivedType(tag: DW_TAG_member, name: "opts3", scope: !10806, file: !3, line: 733, baseType: !9980, size: 32, offset: 64)
!10811 = !DIDerivedType(tag: DW_TAG_member, name: "opts4", scope: !10806, file: !3, line: 739, baseType: !9980, size: 32, offset: 96)
!10812 = !DIDerivedType(tag: DW_TAG_member, name: "opts5", scope: !10806, file: !3, line: 740, baseType: !9980, size: 32, offset: 128)
!10813 = !DIDerivedType(tag: DW_TAG_member, name: "opts6", scope: !10806, file: !3, line: 741, baseType: !9980, size: 32, offset: 160)
!10814 = !{!0, !10815, !10818, !10820, !10822, !10824, !10829, !10834, !10839, !10844, !10849, !10854, !10899, !10960, !10963, !10966, !10968, !10970, !10974, !10976, !10979}
!10815 = !DIGlobalVariableExpression(var: !10816, expr: !DIExpression())
!10816 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware602", scope: !2, file: !3, line: 6583, type: !10817, isLocal: true, isDefinition: true, align: 8)
!10817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 296, elements: !2131)
!10818 = !DIGlobalVariableExpression(var: !10819, expr: !DIExpression())
!10819 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware603", scope: !2, file: !3, line: 6584, type: !10817, isLocal: true, isDefinition: true, align: 8)
!10820 = !DIGlobalVariableExpression(var: !10821, expr: !DIExpression())
!10821 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware604", scope: !2, file: !3, line: 6585, type: !10817, isLocal: true, isDefinition: true, align: 8)
!10822 = !DIGlobalVariableExpression(var: !10823, expr: !DIExpression())
!10823 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_rtl8152_driver_init605", scope: !2, file: !3, line: 6919, type: !647, isLocal: true, isDefinition: true)
!10824 = !DIGlobalVariableExpression(var: !10825, expr: !DIExpression())
!10825 = distinct !DIGlobalVariable(name: "__exitcall_rtl8152_driver_exit", scope: !2, file: !3, line: 6919, type: !10826, isLocal: true, isDefinition: true)
!10826 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !10827, line: 117, baseType: !10828)
!10827 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!10828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3847, size: 64)
!10829 = !DIGlobalVariableExpression(var: !10830, expr: !DIExpression())
!10830 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author606", scope: !2, file: !3, line: 6921, type: !10831, isLocal: true, isDefinition: true, align: 8)
!10831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 528, elements: !10832)
!10832 = !{!10833}
!10833 = !DISubrange(count: 66)
!10834 = !DIGlobalVariableExpression(var: !10835, expr: !DIExpression())
!10835 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description607", scope: !2, file: !3, line: 6922, type: !10836, isLocal: true, isDefinition: true, align: 8)
!10836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 560, elements: !10837)
!10837 = !{!10838}
!10838 = !DISubrange(count: 70)
!10839 = !DIGlobalVariableExpression(var: !10840, expr: !DIExpression())
!10840 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file608", scope: !2, file: !3, line: 6923, type: !10841, isLocal: true, isDefinition: true, align: 8)
!10841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 264, elements: !10842)
!10842 = !{!10843}
!10843 = !DISubrange(count: 33)
!10844 = !DIGlobalVariableExpression(var: !10845, expr: !DIExpression())
!10845 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license609", scope: !2, file: !3, line: 6923, type: !10846, isLocal: true, isDefinition: true, align: 8)
!10846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 144, elements: !10847)
!10847 = !{!10848}
!10848 = !DISubrange(count: 18)
!10849 = !DIGlobalVariableExpression(var: !10850, expr: !DIExpression())
!10850 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_version610", scope: !2, file: !3, line: 6924, type: !10851, isLocal: true, isDefinition: true, align: 8)
!10851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 184, elements: !10852)
!10852 = !{!10853}
!10853 = !DISubrange(count: 23)
!10854 = !DIGlobalVariableExpression(var: !10855, expr: !DIExpression())
!10855 = distinct !DIGlobalVariable(name: "__modver_attr", scope: !2, file: !3, line: 6924, type: !10856, isLocal: true, isDefinition: true)
!10856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10857)
!10857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10858, size: 64)
!10858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10859)
!10859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_version_attribute", file: !10860, line: 65, size: 576, align: 64, elements: !10861)
!10860 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!10861 = !{!10862, !10897, !10898}
!10862 = !DIDerivedType(tag: DW_TAG_member, name: "mattr", scope: !10859, file: !10860, line: 66, baseType: !10863, size: 448)
!10863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_attribute", file: !10860, line: 54, size: 448, elements: !10864)
!10864 = !{!10865, !10866, !10881, !10885, !10889, !10893}
!10865 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !10863, file: !10860, line: 55, baseType: !4015, size: 128)
!10866 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !10863, file: !10860, line: 56, baseType: !10867, size: 64, offset: 128)
!10867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10868, size: 64)
!10868 = !DISubroutineType(types: !10869)
!10869 = !{!1092, !10870, !10871, !654}
!10870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10863, size: 64)
!10871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10872, size: 64)
!10872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_kobject", file: !10860, line: 46, size: 768, elements: !10873)
!10873 = !{!10874, !10875, !10876, !10877, !10880}
!10874 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !10872, file: !10860, line: 47, baseType: !3949, size: 512)
!10875 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !10872, file: !10860, line: 48, baseType: !929, size: 64, offset: 512)
!10876 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_dir", scope: !10872, file: !10860, line: 49, baseType: !3955, size: 64, offset: 576)
!10877 = !DIDerivedType(tag: DW_TAG_member, name: "mp", scope: !10872, file: !10860, line: 50, baseType: !10878, size: 64, offset: 640)
!10878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10879, size: 64)
!10879 = !DICompositeType(tag: DW_TAG_structure_type, name: "module_param_attrs", file: !10860, line: 50, flags: DIFlagFwdDecl)
!10880 = !DIDerivedType(tag: DW_TAG_member, name: "kobj_completion", scope: !10872, file: !10860, line: 51, baseType: !1623, size: 64, offset: 704)
!10881 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !10863, file: !10860, line: 58, baseType: !10882, size: 64, offset: 192)
!10882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10883, size: 64)
!10883 = !DISubroutineType(types: !10884)
!10884 = !{!1092, !10870, !10871, !374, !671}
!10885 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !10863, file: !10860, line: 60, baseType: !10886, size: 64, offset: 256)
!10886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10887, size: 64)
!10887 = !DISubroutineType(types: !10888)
!10888 = !{null, !929, !374}
!10889 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !10863, file: !10860, line: 61, baseType: !10890, size: 64, offset: 320)
!10890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10891, size: 64)
!10891 = !DISubroutineType(types: !10892)
!10892 = !{!72, !929}
!10893 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !10863, file: !10860, line: 62, baseType: !10894, size: 64, offset: 384)
!10894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10895, size: 64)
!10895 = !DISubroutineType(types: !10896)
!10896 = !{null, !929}
!10897 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !10859, file: !10860, line: 67, baseType: !374, size: 64, offset: 448)
!10898 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !10859, file: !10860, line: 68, baseType: !374, size: 64, offset: 512)
!10899 = !DIGlobalVariableExpression(var: !10900, expr: !DIExpression())
!10900 = distinct !DIGlobalVariable(name: "rtl8152_driver", scope: !2, file: !3, line: 6905, type: !10901, isLocal: true, isDefinition: true)
!10901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_driver", file: !9505, line: 1184, size: 2112, elements: !10902)
!10902 = !{!10903, !10904, !10925, !10929, !10933, !10937, !10941, !10942, !10943, !10944, !10945, !10946, !10951, !10956, !10957, !10958, !10959}
!10903 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10901, file: !9505, line: 1185, baseType: !374, size: 64)
!10904 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !10901, file: !9505, line: 1187, baseType: !10905, size: 64, offset: 64)
!10905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10906, size: 64)
!10906 = !DISubroutineType(types: !10907)
!10907 = !{!72, !10100, !10908}
!10908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10909, size: 64)
!10909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10910)
!10910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_device_id", file: !4392, line: 121, size: 256, elements: !10911)
!10911 = !{!10912, !10913, !10914, !10915, !10916, !10917, !10918, !10919, !10920, !10921, !10922, !10923, !10924}
!10912 = !DIDerivedType(tag: DW_TAG_member, name: "match_flags", scope: !10910, file: !4392, line: 123, baseType: !553, size: 16)
!10913 = !DIDerivedType(tag: DW_TAG_member, name: "idVendor", scope: !10910, file: !4392, line: 126, baseType: !553, size: 16, offset: 16)
!10914 = !DIDerivedType(tag: DW_TAG_member, name: "idProduct", scope: !10910, file: !4392, line: 127, baseType: !553, size: 16, offset: 32)
!10915 = !DIDerivedType(tag: DW_TAG_member, name: "bcdDevice_lo", scope: !10910, file: !4392, line: 128, baseType: !553, size: 16, offset: 48)
!10916 = !DIDerivedType(tag: DW_TAG_member, name: "bcdDevice_hi", scope: !10910, file: !4392, line: 129, baseType: !553, size: 16, offset: 64)
!10917 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceClass", scope: !10910, file: !4392, line: 132, baseType: !1475, size: 8, offset: 80)
!10918 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceSubClass", scope: !10910, file: !4392, line: 133, baseType: !1475, size: 8, offset: 88)
!10919 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceProtocol", scope: !10910, file: !4392, line: 134, baseType: !1475, size: 8, offset: 96)
!10920 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceClass", scope: !10910, file: !4392, line: 137, baseType: !1475, size: 8, offset: 104)
!10921 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceSubClass", scope: !10910, file: !4392, line: 138, baseType: !1475, size: 8, offset: 112)
!10922 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceProtocol", scope: !10910, file: !4392, line: 139, baseType: !1475, size: 8, offset: 120)
!10923 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceNumber", scope: !10910, file: !4392, line: 142, baseType: !1475, size: 8, offset: 128)
!10924 = !DIDerivedType(tag: DW_TAG_member, name: "driver_info", scope: !10910, file: !4392, line: 145, baseType: !4406, size: 64, align: 64, offset: 192)
!10925 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !10901, file: !9505, line: 1190, baseType: !10926, size: 64, offset: 128)
!10926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10927, size: 64)
!10927 = !DISubroutineType(types: !10928)
!10928 = !{null, !10100}
!10929 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !10901, file: !9505, line: 1192, baseType: !10930, size: 64, offset: 192)
!10930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10931, size: 64)
!10931 = !DISubroutineType(types: !10932)
!10932 = !{!72, !10100, !7, !647}
!10933 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !10901, file: !9505, line: 1195, baseType: !10934, size: 64, offset: 256)
!10934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10935, size: 64)
!10935 = !DISubroutineType(types: !10936)
!10936 = !{!72, !10100, !4417}
!10937 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !10901, file: !9505, line: 1196, baseType: !10938, size: 64, offset: 320)
!10938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10939, size: 64)
!10939 = !DISubroutineType(types: !10940)
!10940 = !{!72, !10100}
!10941 = !DIDerivedType(tag: DW_TAG_member, name: "reset_resume", scope: !10901, file: !9505, line: 1197, baseType: !10938, size: 64, offset: 384)
!10942 = !DIDerivedType(tag: DW_TAG_member, name: "pre_reset", scope: !10901, file: !9505, line: 1199, baseType: !10938, size: 64, offset: 448)
!10943 = !DIDerivedType(tag: DW_TAG_member, name: "post_reset", scope: !10901, file: !9505, line: 1200, baseType: !10938, size: 64, offset: 512)
!10944 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !10901, file: !9505, line: 1202, baseType: !10908, size: 64, offset: 576)
!10945 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !10901, file: !9505, line: 1203, baseType: !4026, size: 64, offset: 640)
!10946 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !10901, file: !9505, line: 1205, baseType: !10947, size: 128, offset: 704)
!10947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_dynids", file: !9505, line: 1091, size: 128, elements: !10948)
!10948 = !{!10949, !10950}
!10949 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10947, file: !9505, line: 1092, baseType: !806)
!10950 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10947, file: !9505, line: 1093, baseType: !366, size: 128)
!10951 = !DIDerivedType(tag: DW_TAG_member, name: "drvwrap", scope: !10901, file: !9505, line: 1206, baseType: !10952, size: 1216, offset: 832)
!10952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbdrv_wrap", file: !9505, line: 1113, size: 1216, elements: !10953)
!10953 = !{!10954, !10955}
!10954 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !10952, file: !9505, line: 1114, baseType: !4380, size: 1152)
!10955 = !DIDerivedType(tag: DW_TAG_member, name: "for_devices", scope: !10952, file: !9505, line: 1115, baseType: !72, size: 32, offset: 1152)
!10956 = !DIDerivedType(tag: DW_TAG_member, name: "no_dynamic_id", scope: !10901, file: !9505, line: 1207, baseType: !7, size: 1, offset: 2048, flags: DIFlagBitField, extraData: i64 2048)
!10957 = !DIDerivedType(tag: DW_TAG_member, name: "supports_autosuspend", scope: !10901, file: !9505, line: 1208, baseType: !7, size: 1, offset: 2049, flags: DIFlagBitField, extraData: i64 2048)
!10958 = !DIDerivedType(tag: DW_TAG_member, name: "disable_hub_initiated_lpm", scope: !10901, file: !9505, line: 1209, baseType: !7, size: 1, offset: 2050, flags: DIFlagBitField, extraData: i64 2048)
!10959 = !DIDerivedType(tag: DW_TAG_member, name: "soft_unbind", scope: !10901, file: !9505, line: 1210, baseType: !7, size: 1, offset: 2051, flags: DIFlagBitField, extraData: i64 2048)
!10960 = !DIGlobalVariableExpression(var: !10961, expr: !DIExpression())
!10961 = distinct !DIGlobalVariable(name: "__key", scope: !10962, file: !3, line: 6730, type: !938, isLocal: true, isDefinition: true)
!10962 = distinct !DISubprogram(name: "rtl8152_probe", scope: !3, file: !3, line: 6677, type: !10906, scopeLine: 6679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!10963 = !DIGlobalVariableExpression(var: !10964, expr: !DIExpression(DW_OP_constu, 32, DW_OP_stack_value))
!10964 = distinct !DIGlobalVariable(name: "multicast_filter_limit", scope: !2, file: !3, line: 1027, type: !10965, isLocal: true, isDefinition: true)
!10965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !72)
!10966 = !DIGlobalVariableExpression(var: !10967, expr: !DIExpression())
!10967 = distinct !DIGlobalVariable(name: "rtl8152_netdev_ops", scope: !2, file: !3, line: 6466, type: !479, isLocal: true, isDefinition: true)
!10968 = !DIGlobalVariableExpression(var: !10969, expr: !DIExpression())
!10969 = distinct !DIGlobalVariable(name: "ops", scope: !2, file: !3, line: 6359, type: !8152, isLocal: true, isDefinition: true)
!10970 = !DIGlobalVariableExpression(var: !10971, expr: !DIExpression())
!10971 = distinct !DIGlobalVariable(name: "rtl8152_gstrings", scope: !2, file: !3, line: 6022, type: !10972, isLocal: true, isDefinition: true)
!10972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 3328, elements: !10973)
!10973 = !{!2886, !794}
!10974 = !DIGlobalVariableExpression(var: !10975, expr: !DIExpression())
!10975 = distinct !DIGlobalVariable(name: "agg_buf_sz", scope: !2, file: !3, line: 1028, type: !7, isLocal: true, isDefinition: true)
!10976 = !DIGlobalVariableExpression(var: !10977, expr: !DIExpression())
!10977 = distinct !DIGlobalVariable(name: "rtl8152_table", scope: !2, file: !3, line: 6881, type: !10978, isLocal: true, isDefinition: true)
!10978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10909, size: 9472, elements: !2131)
!10979 = !DIGlobalVariableExpression(var: !10980, expr: !DIExpression())
!10980 = distinct !DIGlobalVariable(name: "___modver_attr", scope: !2, file: !3, line: 6924, type: !10859, isLocal: true, isDefinition: true)
!10981 = !{!"rsp"}
!10982 = !{i32 7, !"Dwarf Version", i32 4}
!10983 = !{i32 2, !"Debug Info Version", i32 3}
!10984 = !{i32 1, !"wchar_size", i32 2}
!10985 = !{i32 1, !"Code Model", i32 2}
!10986 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!10987 = distinct !DISubprogram(name: "rtl8152_driver_init", scope: !3, file: !3, line: 6919, type: !10988, scopeLine: 6919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!10988 = !DISubroutineType(types: !10989)
!10989 = !{!72}
!10990 = !DILocation(line: 6919, column: 1, scope: !10987)
!10991 = distinct !DISubprogram(name: "rtl8152_driver_exit", scope: !3, file: !3, line: 6919, type: !3847, scopeLine: 6919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!10992 = !DILocation(line: 6919, column: 1, scope: !10991)
!10993 = !DILocalVariable(name: "intf", arg: 1, scope: !10962, file: !3, line: 6677, type: !10100)
!10994 = !DILocation(line: 6677, column: 48, scope: !10962)
!10995 = !DILocalVariable(name: "id", arg: 2, scope: !10962, file: !3, line: 6678, type: !10908)
!10996 = !DILocation(line: 6678, column: 33, scope: !10962)
!10997 = !DILocalVariable(name: "udev", scope: !10962, file: !3, line: 6680, type: !9907)
!10998 = !DILocation(line: 6680, column: 21, scope: !10962)
!10999 = !DILocation(line: 6680, column: 48, scope: !10962)
!11000 = !DILocation(line: 6680, column: 28, scope: !10962)
!11001 = !DILocalVariable(name: "version", scope: !10962, file: !3, line: 6681, type: !1474)
!11002 = !DILocation(line: 6681, column: 5, scope: !10962)
!11003 = !DILocation(line: 6681, column: 31, scope: !10962)
!11004 = !DILocation(line: 6681, column: 15, scope: !10962)
!11005 = !DILocalVariable(name: "tp", scope: !10962, file: !3, line: 6682, type: !10280)
!11006 = !DILocation(line: 6682, column: 16, scope: !10962)
!11007 = !DILocalVariable(name: "netdev", scope: !10962, file: !3, line: 6683, type: !372)
!11008 = !DILocation(line: 6683, column: 21, scope: !10962)
!11009 = !DILocalVariable(name: "ret", scope: !10962, file: !3, line: 6684, type: !72)
!11010 = !DILocation(line: 6684, column: 6, scope: !10962)
!11011 = !DILocation(line: 6686, column: 6, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 6686, column: 6)
!11013 = !DILocation(line: 6686, column: 14, scope: !11012)
!11014 = !DILocation(line: 6686, column: 6, scope: !10962)
!11015 = !DILocation(line: 6687, column: 3, scope: !11012)
!11016 = !DILocation(line: 6689, column: 6, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 6689, column: 6)
!11018 = !DILocation(line: 6689, column: 12, scope: !11017)
!11019 = !DILocation(line: 6689, column: 23, scope: !11017)
!11020 = !DILocation(line: 6689, column: 28, scope: !11017)
!11021 = !DILocation(line: 6689, column: 48, scope: !11017)
!11022 = !DILocation(line: 6689, column: 6, scope: !10962)
!11023 = !DILocation(line: 6690, column: 32, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 6689, column: 54)
!11025 = !DILocation(line: 6690, column: 3, scope: !11024)
!11026 = !DILocation(line: 6691, column: 3, scope: !11024)
!11027 = !DILocation(line: 6694, column: 6, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 6694, column: 6)
!11029 = !DILocation(line: 6694, column: 12, scope: !11028)
!11030 = !DILocation(line: 6694, column: 28, scope: !11028)
!11031 = !DILocation(line: 6694, column: 33, scope: !11028)
!11032 = !DILocation(line: 6694, column: 47, scope: !11028)
!11033 = !DILocation(line: 6694, column: 6, scope: !10962)
!11034 = !DILocation(line: 6695, column: 3, scope: !11028)
!11035 = !DILocation(line: 6697, column: 19, scope: !10962)
!11036 = !DILocation(line: 6697, column: 2, scope: !10962)
!11037 = !DILocation(line: 6698, column: 11, scope: !10962)
!11038 = !DILocation(line: 6698, column: 9, scope: !10962)
!11039 = !DILocation(line: 6699, column: 7, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 6699, column: 6)
!11041 = !DILocation(line: 6699, column: 6, scope: !10962)
!11042 = !DILocation(line: 6700, column: 3, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11040, file: !3, line: 6699, column: 15)
!11044 = !DILocation(line: 6701, column: 3, scope: !11043)
!11045 = !DILocation(line: 6704, column: 2, scope: !10962)
!11046 = !DILocation(line: 6705, column: 19, scope: !10962)
!11047 = !DILocation(line: 6705, column: 7, scope: !10962)
!11048 = !DILocation(line: 6705, column: 5, scope: !10962)
!11049 = !DILocation(line: 6706, column: 2, scope: !10962)
!11050 = !DILocation(line: 6706, column: 6, scope: !10962)
!11051 = !DILocation(line: 6706, column: 17, scope: !10962)
!11052 = !DILocation(line: 6708, column: 13, scope: !10962)
!11053 = !DILocation(line: 6708, column: 2, scope: !10962)
!11054 = !DILocation(line: 6708, column: 6, scope: !10962)
!11055 = !DILocation(line: 6708, column: 11, scope: !10962)
!11056 = !DILocation(line: 6709, column: 15, scope: !10962)
!11057 = !DILocation(line: 6709, column: 2, scope: !10962)
!11058 = !DILocation(line: 6709, column: 6, scope: !10962)
!11059 = !DILocation(line: 6709, column: 13, scope: !10962)
!11060 = !DILocation(line: 6710, column: 13, scope: !10962)
!11061 = !DILocation(line: 6710, column: 2, scope: !10962)
!11062 = !DILocation(line: 6710, column: 6, scope: !10962)
!11063 = !DILocation(line: 6710, column: 11, scope: !10962)
!11064 = !DILocation(line: 6711, column: 16, scope: !10962)
!11065 = !DILocation(line: 6711, column: 2, scope: !10962)
!11066 = !DILocation(line: 6711, column: 6, scope: !10962)
!11067 = !DILocation(line: 6711, column: 14, scope: !10962)
!11068 = !DILocation(line: 6713, column: 10, scope: !10962)
!11069 = !DILocation(line: 6713, column: 2, scope: !10962)
!11070 = !DILocation(line: 6717, column: 3, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 6713, column: 19)
!11072 = !DILocation(line: 6717, column: 7, scope: !11071)
!11073 = !DILocation(line: 6717, column: 11, scope: !11071)
!11074 = !DILocation(line: 6717, column: 25, scope: !11071)
!11075 = !DILocation(line: 6718, column: 3, scope: !11071)
!11076 = !DILocation(line: 6720, column: 3, scope: !11071)
!11077 = !DILocation(line: 6720, column: 7, scope: !11071)
!11078 = !DILocation(line: 6720, column: 11, scope: !11071)
!11079 = !DILocation(line: 6720, column: 25, scope: !11071)
!11080 = !DILocation(line: 6721, column: 3, scope: !11071)
!11081 = !DILocation(line: 6724, column: 21, scope: !10962)
!11082 = !DILocation(line: 6724, column: 8, scope: !10962)
!11083 = !DILocation(line: 6724, column: 6, scope: !10962)
!11084 = !DILocation(line: 6725, column: 6, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 6725, column: 6)
!11086 = !DILocation(line: 6725, column: 6, scope: !10962)
!11087 = !DILocation(line: 6726, column: 3, scope: !11085)
!11088 = !DILocation(line: 6728, column: 14, scope: !10962)
!11089 = !DILocation(line: 6728, column: 2, scope: !10962)
!11090 = !DILocation(line: 6730, column: 2, scope: !10962)
!11091 = !DILocation(line: 6730, column: 2, scope: !11092)
!11092 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 6730, column: 2)
!11093 = !DILocation(line: 6731, column: 2, scope: !10962)
!11094 = !DILocation(line: 6731, column: 2, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 6731, column: 2)
!11096 = !DILocation(line: 6731, column: 2, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11095, file: !3, line: 6731, column: 2)
!11098 = !DILocation(line: 6732, column: 2, scope: !10962)
!11099 = !DILocation(line: 6732, column: 2, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 6732, column: 2)
!11101 = !DILocation(line: 6732, column: 2, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11100, file: !3, line: 6732, column: 2)
!11103 = !DILocation(line: 6733, column: 16, scope: !10962)
!11104 = !DILocation(line: 6733, column: 20, scope: !10962)
!11105 = !DILocation(line: 6733, column: 55, scope: !10962)
!11106 = !DILocation(line: 6733, column: 40, scope: !10962)
!11107 = !DILocation(line: 6733, column: 2, scope: !10962)
!11108 = !DILocation(line: 6734, column: 19, scope: !10962)
!11109 = !DILocation(line: 6734, column: 23, scope: !10962)
!11110 = !DILocation(line: 6734, column: 2, scope: !10962)
!11111 = !DILocation(line: 6736, column: 2, scope: !10962)
!11112 = !DILocation(line: 6736, column: 10, scope: !10962)
!11113 = !DILocation(line: 6736, column: 21, scope: !10962)
!11114 = !DILocation(line: 6737, column: 2, scope: !10962)
!11115 = !DILocation(line: 6737, column: 10, scope: !10962)
!11116 = !DILocation(line: 6737, column: 25, scope: !10962)
!11117 = !DILocation(line: 6739, column: 2, scope: !10962)
!11118 = !DILocation(line: 6739, column: 10, scope: !10962)
!11119 = !DILocation(line: 6739, column: 19, scope: !10962)
!11120 = !DILocation(line: 6743, column: 2, scope: !10962)
!11121 = !DILocation(line: 6743, column: 10, scope: !10962)
!11122 = !DILocation(line: 6743, column: 22, scope: !10962)
!11123 = !DILocation(line: 6747, column: 2, scope: !10962)
!11124 = !DILocation(line: 6747, column: 10, scope: !10962)
!11125 = !DILocation(line: 6747, column: 24, scope: !10962)
!11126 = !DILocation(line: 6751, column: 6, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 6751, column: 6)
!11128 = !DILocation(line: 6751, column: 10, scope: !11127)
!11129 = !DILocation(line: 6751, column: 18, scope: !11127)
!11130 = !DILocation(line: 6751, column: 6, scope: !10962)
!11131 = !DILocation(line: 6752, column: 3, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11127, file: !3, line: 6751, column: 33)
!11133 = !DILocation(line: 6752, column: 11, scope: !11132)
!11134 = !DILocation(line: 6752, column: 20, scope: !11132)
!11135 = !DILocation(line: 6753, column: 3, scope: !11132)
!11136 = !DILocation(line: 6753, column: 11, scope: !11132)
!11137 = !DILocation(line: 6753, column: 23, scope: !11132)
!11138 = !DILocation(line: 6754, column: 2, scope: !11132)
!11139 = !DILocation(line: 6756, column: 6, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 6756, column: 6)
!11141 = !DILocation(line: 6756, column: 45, scope: !11140)
!11142 = !DILocation(line: 6756, column: 6, scope: !10962)
!11143 = !DILocation(line: 6757, column: 11, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11140, file: !3, line: 6756, column: 66)
!11145 = !DILocation(line: 6757, column: 3, scope: !11144)
!11146 = !DILocation(line: 6760, column: 33, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11144, file: !3, line: 6757, column: 52)
!11148 = !DILocation(line: 6760, column: 37, scope: !11147)
!11149 = !DILocation(line: 6760, column: 4, scope: !11147)
!11150 = !DILocation(line: 6761, column: 3, scope: !11147)
!11151 = !DILocation(line: 6762, column: 2, scope: !11144)
!11152 = !DILocation(line: 6764, column: 6, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 6764, column: 6)
!11154 = !DILocation(line: 6764, column: 46, scope: !11153)
!11155 = !DILocation(line: 6764, column: 56, scope: !11153)
!11156 = !DILocation(line: 6764, column: 59, scope: !11153)
!11157 = !DILocation(line: 6764, column: 65, scope: !11153)
!11158 = !DILocation(line: 6764, column: 72, scope: !11153)
!11159 = !DILocation(line: 6765, column: 15, scope: !11153)
!11160 = !DILocation(line: 6765, column: 21, scope: !11153)
!11161 = !DILocation(line: 6765, column: 8, scope: !11153)
!11162 = !DILocation(line: 6765, column: 45, scope: !11153)
!11163 = !DILocation(line: 6766, column: 15, scope: !11153)
!11164 = !DILocation(line: 6766, column: 21, scope: !11153)
!11165 = !DILocation(line: 6766, column: 8, scope: !11153)
!11166 = !DILocation(line: 6764, column: 6, scope: !10962)
!11167 = !DILocation(line: 6767, column: 3, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11153, file: !3, line: 6766, column: 47)
!11169 = !DILocation(line: 6768, column: 32, scope: !11168)
!11170 = !DILocation(line: 6768, column: 36, scope: !11168)
!11171 = !DILocation(line: 6768, column: 3, scope: !11168)
!11172 = !DILocation(line: 6769, column: 2, scope: !11168)
!11173 = !DILocation(line: 6771, column: 2, scope: !10962)
!11174 = !DILocation(line: 6771, column: 10, scope: !10962)
!11175 = !DILocation(line: 6771, column: 22, scope: !10962)
!11176 = !DILocation(line: 6772, column: 25, scope: !10962)
!11177 = !DILocation(line: 6772, column: 33, scope: !10962)
!11178 = !DILocation(line: 6772, column: 2, scope: !10962)
!11179 = !DILocation(line: 6775, column: 2, scope: !10962)
!11180 = !DILocation(line: 6775, column: 10, scope: !10962)
!11181 = !DILocation(line: 6775, column: 18, scope: !10962)
!11182 = !DILocation(line: 6776, column: 10, scope: !10962)
!11183 = !DILocation(line: 6776, column: 14, scope: !10962)
!11184 = !DILocation(line: 6776, column: 2, scope: !10962)
!11185 = !DILocation(line: 6779, column: 3, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 6776, column: 23)
!11187 = !DILocation(line: 6779, column: 11, scope: !11186)
!11188 = !DILocation(line: 6779, column: 19, scope: !11186)
!11189 = !DILocation(line: 6780, column: 3, scope: !11186)
!11190 = !DILocation(line: 6782, column: 3, scope: !11186)
!11191 = !DILocation(line: 6782, column: 11, scope: !11186)
!11192 = !DILocation(line: 6782, column: 19, scope: !11186)
!11193 = !DILocation(line: 6783, column: 3, scope: !11186)
!11194 = !DILocation(line: 6786, column: 16, scope: !10962)
!11195 = !DILocation(line: 6786, column: 2, scope: !10962)
!11196 = !DILocation(line: 6786, column: 6, scope: !10962)
!11197 = !DILocation(line: 6786, column: 10, scope: !10962)
!11198 = !DILocation(line: 6786, column: 14, scope: !10962)
!11199 = !DILocation(line: 6787, column: 2, scope: !10962)
!11200 = !DILocation(line: 6787, column: 6, scope: !10962)
!11201 = !DILocation(line: 6787, column: 10, scope: !10962)
!11202 = !DILocation(line: 6787, column: 20, scope: !10962)
!11203 = !DILocation(line: 6788, column: 2, scope: !10962)
!11204 = !DILocation(line: 6788, column: 6, scope: !10962)
!11205 = !DILocation(line: 6788, column: 10, scope: !10962)
!11206 = !DILocation(line: 6788, column: 21, scope: !10962)
!11207 = !DILocation(line: 6789, column: 2, scope: !10962)
!11208 = !DILocation(line: 6789, column: 6, scope: !10962)
!11209 = !DILocation(line: 6789, column: 10, scope: !10962)
!11210 = !DILocation(line: 6789, column: 22, scope: !10962)
!11211 = !DILocation(line: 6790, column: 2, scope: !10962)
!11212 = !DILocation(line: 6790, column: 6, scope: !10962)
!11213 = !DILocation(line: 6790, column: 10, scope: !10962)
!11214 = !DILocation(line: 6790, column: 23, scope: !10962)
!11215 = !DILocation(line: 6791, column: 2, scope: !10962)
!11216 = !DILocation(line: 6791, column: 6, scope: !10962)
!11217 = !DILocation(line: 6791, column: 10, scope: !10962)
!11218 = !DILocation(line: 6791, column: 17, scope: !10962)
!11219 = !DILocation(line: 6793, column: 2, scope: !10962)
!11220 = !DILocation(line: 6793, column: 6, scope: !10962)
!11221 = !DILocation(line: 6793, column: 14, scope: !10962)
!11222 = !DILocation(line: 6794, column: 2, scope: !10962)
!11223 = !DILocation(line: 6794, column: 6, scope: !10962)
!11224 = !DILocation(line: 6794, column: 12, scope: !10962)
!11225 = !DILocation(line: 6795, column: 2, scope: !10962)
!11226 = !DILocation(line: 6795, column: 6, scope: !10962)
!11227 = !DILocation(line: 6795, column: 18, scope: !10962)
!11228 = !DILocation(line: 6797, column: 6, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 6797, column: 6)
!11230 = !DILocation(line: 6797, column: 10, scope: !11229)
!11231 = !DILocation(line: 6797, column: 14, scope: !11229)
!11232 = !DILocation(line: 6797, column: 6, scope: !10962)
!11233 = !DILocation(line: 6798, column: 3, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 6797, column: 29)
!11235 = !DILocation(line: 6798, column: 7, scope: !11234)
!11236 = !DILocation(line: 6798, column: 13, scope: !11234)
!11237 = !DILocation(line: 6799, column: 3, scope: !11234)
!11238 = !DILocation(line: 6799, column: 7, scope: !11234)
!11239 = !DILocation(line: 6799, column: 19, scope: !11234)
!11240 = !DILocation(line: 6800, column: 2, scope: !11234)
!11241 = !DILocation(line: 6801, column: 2, scope: !10962)
!11242 = !DILocation(line: 6801, column: 6, scope: !10962)
!11243 = !DILocation(line: 6801, column: 13, scope: !10962)
!11244 = !DILocation(line: 6803, column: 2, scope: !10962)
!11245 = !DILocation(line: 6803, column: 6, scope: !10962)
!11246 = !DILocation(line: 6803, column: 19, scope: !10962)
!11247 = !DILocation(line: 6804, column: 2, scope: !10962)
!11248 = !DILocation(line: 6804, column: 6, scope: !10962)
!11249 = !DILocation(line: 6804, column: 17, scope: !10962)
!11250 = !DILocation(line: 6806, column: 2, scope: !10962)
!11251 = !DILocation(line: 6806, column: 8, scope: !10962)
!11252 = !DILocation(line: 6806, column: 28, scope: !10962)
!11253 = !DILocation(line: 6808, column: 22, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 6808, column: 6)
!11255 = !DILocation(line: 6808, column: 7, scope: !11254)
!11256 = !DILocation(line: 6808, column: 6, scope: !10962)
!11257 = !DILocation(line: 6809, column: 17, scope: !11254)
!11258 = !DILocation(line: 6809, column: 3, scope: !11254)
!11259 = !DILocation(line: 6811, column: 37, scope: !11254)
!11260 = !DILocation(line: 6811, column: 23, scope: !11254)
!11261 = !DILocation(line: 6811, column: 3, scope: !11254)
!11262 = !DILocation(line: 6811, column: 7, scope: !11254)
!11263 = !DILocation(line: 6811, column: 21, scope: !11254)
!11264 = !DILocation(line: 6813, column: 2, scope: !10962)
!11265 = !DILocation(line: 6813, column: 6, scope: !10962)
!11266 = !DILocation(line: 6813, column: 14, scope: !10962)
!11267 = !DILocation(line: 6813, column: 19, scope: !10962)
!11268 = !DILocation(line: 6816, column: 2, scope: !10962)
!11269 = !DILocation(line: 6816, column: 6, scope: !10962)
!11270 = !DILocation(line: 6816, column: 13, scope: !10962)
!11271 = !DILocation(line: 6816, column: 19, scope: !10962)
!11272 = !DILocation(line: 6818, column: 21, scope: !10962)
!11273 = !DILocation(line: 6818, column: 38, scope: !10962)
!11274 = !DILocation(line: 6818, column: 42, scope: !10962)
!11275 = !DILocation(line: 6818, column: 2, scope: !10962)
!11276 = !DILocation(line: 6819, column: 20, scope: !10962)
!11277 = !DILocation(line: 6819, column: 2, scope: !10962)
!11278 = !DILocation(line: 6821, column: 19, scope: !10962)
!11279 = !DILocation(line: 6821, column: 25, scope: !10962)
!11280 = !DILocation(line: 6821, column: 2, scope: !10962)
!11281 = !DILocation(line: 6822, column: 17, scope: !10962)
!11282 = !DILocation(line: 6822, column: 26, scope: !10962)
!11283 = !DILocation(line: 6822, column: 30, scope: !10962)
!11284 = !DILocation(line: 6822, column: 2, scope: !10962)
!11285 = !DILocation(line: 6824, column: 24, scope: !10962)
!11286 = !DILocation(line: 6824, column: 8, scope: !10962)
!11287 = !DILocation(line: 6824, column: 6, scope: !10962)
!11288 = !DILocation(line: 6825, column: 6, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 6825, column: 6)
!11290 = !DILocation(line: 6825, column: 10, scope: !11289)
!11291 = !DILocation(line: 6825, column: 6, scope: !10962)
!11292 = !DILocation(line: 6826, column: 3, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11289, file: !3, line: 6825, column: 16)
!11294 = !DILocation(line: 6826, column: 3, scope: !11295)
!11295 = distinct !DILexicalBlock(scope: !11296, file: !3, line: 6826, column: 3)
!11296 = distinct !DILexicalBlock(scope: !11293, file: !3, line: 6826, column: 3)
!11297 = !DILocation(line: 6826, column: 3, scope: !11296)
!11298 = !DILocation(line: 6827, column: 3, scope: !11293)
!11299 = !DILocation(line: 6830, column: 6, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 6830, column: 6)
!11301 = !DILocation(line: 6830, column: 10, scope: !11300)
!11302 = !DILocation(line: 6830, column: 6, scope: !10962)
!11303 = !DILocation(line: 6831, column: 29, scope: !11300)
!11304 = !DILocation(line: 6831, column: 35, scope: !11300)
!11305 = !DILocation(line: 6831, column: 3, scope: !11300)
!11306 = !DILocation(line: 6833, column: 29, scope: !11300)
!11307 = !DILocation(line: 6833, column: 35, scope: !11300)
!11308 = !DILocation(line: 6833, column: 3, scope: !11300)
!11309 = !DILocation(line: 6835, column: 2, scope: !10962)
!11310 = !DILocation(line: 6835, column: 2, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11312, file: !3, line: 6835, column: 2)
!11312 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 6835, column: 2)
!11313 = !DILocation(line: 6835, column: 2, scope: !11312)
!11314 = !DILocation(line: 6837, column: 2, scope: !10962)
!11315 = !DILabel(scope: !10962, name: "out1", file: !3, line: 6839)
!11316 = !DILocation(line: 6839, column: 1, scope: !10962)
!11317 = !DILocation(line: 6840, column: 16, scope: !10962)
!11318 = !DILocation(line: 6840, column: 20, scope: !10962)
!11319 = !DILocation(line: 6840, column: 2, scope: !10962)
!11320 = !DILocation(line: 6841, column: 19, scope: !10962)
!11321 = !DILocation(line: 6841, column: 2, scope: !10962)
!11322 = !DILabel(scope: !10962, name: "out", file: !3, line: 6842)
!11323 = !DILocation(line: 6842, column: 1, scope: !10962)
!11324 = !DILocation(line: 6843, column: 14, scope: !10962)
!11325 = !DILocation(line: 6843, column: 2, scope: !10962)
!11326 = !DILocation(line: 6844, column: 9, scope: !10962)
!11327 = !DILocation(line: 6844, column: 2, scope: !10962)
!11328 = !DILocation(line: 6845, column: 1, scope: !10962)
!11329 = distinct !DISubprogram(name: "rtl8152_disconnect", scope: !3, file: !3, line: 6847, type: !10927, scopeLine: 6848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!11330 = !DILocalVariable(name: "intf", arg: 1, scope: !11329, file: !3, line: 6847, type: !10100)
!11331 = !DILocation(line: 6847, column: 54, scope: !11329)
!11332 = !DILocalVariable(name: "tp", scope: !11329, file: !3, line: 6849, type: !10280)
!11333 = !DILocation(line: 6849, column: 16, scope: !11329)
!11334 = !DILocation(line: 6849, column: 38, scope: !11329)
!11335 = !DILocation(line: 6849, column: 21, scope: !11329)
!11336 = !DILocation(line: 6851, column: 19, scope: !11329)
!11337 = !DILocation(line: 6851, column: 2, scope: !11329)
!11338 = !DILocation(line: 6852, column: 6, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11329, file: !3, line: 6852, column: 6)
!11340 = !DILocation(line: 6852, column: 6, scope: !11329)
!11341 = !DILocation(line: 6853, column: 18, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11339, file: !3, line: 6852, column: 10)
!11343 = !DILocation(line: 6853, column: 3, scope: !11342)
!11344 = !DILocation(line: 6855, column: 21, scope: !11342)
!11345 = !DILocation(line: 6855, column: 25, scope: !11342)
!11346 = !DILocation(line: 6855, column: 3, scope: !11342)
!11347 = !DILocation(line: 6856, column: 17, scope: !11342)
!11348 = !DILocation(line: 6856, column: 21, scope: !11342)
!11349 = !DILocation(line: 6856, column: 3, scope: !11342)
!11350 = !DILocation(line: 6857, column: 29, scope: !11342)
!11351 = !DILocation(line: 6857, column: 33, scope: !11342)
!11352 = !DILocation(line: 6857, column: 3, scope: !11342)
!11353 = !DILocation(line: 6858, column: 3, scope: !11342)
!11354 = !DILocation(line: 6858, column: 7, scope: !11342)
!11355 = !DILocation(line: 6858, column: 15, scope: !11342)
!11356 = !DILocation(line: 6858, column: 22, scope: !11342)
!11357 = !DILocation(line: 6859, column: 28, scope: !11342)
!11358 = !DILocation(line: 6859, column: 3, scope: !11342)
!11359 = !DILocation(line: 6860, column: 15, scope: !11342)
!11360 = !DILocation(line: 6860, column: 19, scope: !11342)
!11361 = !DILocation(line: 6860, column: 3, scope: !11342)
!11362 = !DILocation(line: 6861, column: 2, scope: !11342)
!11363 = !DILocation(line: 6862, column: 1, scope: !11329)
!11364 = distinct !DISubprogram(name: "rtl8152_suspend", scope: !3, file: !3, line: 5822, type: !10935, scopeLine: 5823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!11365 = !DILocalVariable(name: "intf", arg: 1, scope: !11364, file: !3, line: 5822, type: !10100)
!11366 = !DILocation(line: 5822, column: 50, scope: !11364)
!11367 = !DILocalVariable(name: "message", arg: 2, scope: !11364, file: !3, line: 5822, type: !4417)
!11368 = !DILocation(line: 5822, column: 69, scope: !11364)
!11369 = !DILocalVariable(name: "tp", scope: !11364, file: !3, line: 5824, type: !10280)
!11370 = !DILocation(line: 5824, column: 16, scope: !11364)
!11371 = !DILocation(line: 5824, column: 38, scope: !11364)
!11372 = !DILocation(line: 5824, column: 21, scope: !11364)
!11373 = !DILocalVariable(name: "ret", scope: !11364, file: !3, line: 5825, type: !72)
!11374 = !DILocation(line: 5825, column: 6, scope: !11364)
!11375 = !DILocation(line: 5827, column: 14, scope: !11364)
!11376 = !DILocation(line: 5827, column: 18, scope: !11364)
!11377 = !DILocation(line: 5827, column: 2, scope: !11364)
!11378 = !DILocation(line: 5829, column: 6, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11364, file: !3, line: 5829, column: 6)
!11380 = !DILocation(line: 5829, column: 6, scope: !11364)
!11381 = !DILocation(line: 5830, column: 33, scope: !11379)
!11382 = !DILocation(line: 5830, column: 9, scope: !11379)
!11383 = !DILocation(line: 5830, column: 7, scope: !11379)
!11384 = !DILocation(line: 5830, column: 3, scope: !11379)
!11385 = !DILocation(line: 5832, column: 32, scope: !11379)
!11386 = !DILocation(line: 5832, column: 9, scope: !11379)
!11387 = !DILocation(line: 5832, column: 7, scope: !11379)
!11388 = !DILocation(line: 5834, column: 16, scope: !11364)
!11389 = !DILocation(line: 5834, column: 20, scope: !11364)
!11390 = !DILocation(line: 5834, column: 2, scope: !11364)
!11391 = !DILocation(line: 5836, column: 9, scope: !11364)
!11392 = !DILocation(line: 5836, column: 2, scope: !11364)
!11393 = distinct !DISubprogram(name: "rtl8152_resume", scope: !3, file: !3, line: 5839, type: !10939, scopeLine: 5840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!11394 = !DILocalVariable(name: "intf", arg: 1, scope: !11393, file: !3, line: 5839, type: !10100)
!11395 = !DILocation(line: 5839, column: 49, scope: !11393)
!11396 = !DILocalVariable(name: "tp", scope: !11393, file: !3, line: 5841, type: !10280)
!11397 = !DILocation(line: 5841, column: 16, scope: !11393)
!11398 = !DILocation(line: 5841, column: 38, scope: !11393)
!11399 = !DILocation(line: 5841, column: 21, scope: !11393)
!11400 = !DILocalVariable(name: "ret", scope: !11393, file: !3, line: 5842, type: !72)
!11401 = !DILocation(line: 5842, column: 6, scope: !11393)
!11402 = !DILocation(line: 5844, column: 14, scope: !11393)
!11403 = !DILocation(line: 5844, column: 18, scope: !11393)
!11404 = !DILocation(line: 5844, column: 2, scope: !11393)
!11405 = !DILocation(line: 5846, column: 35, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11393, file: !3, line: 5846, column: 6)
!11407 = !DILocation(line: 5846, column: 39, scope: !11406)
!11408 = !DILocation(line: 5846, column: 6, scope: !11406)
!11409 = !DILocation(line: 5846, column: 6, scope: !11393)
!11410 = !DILocation(line: 5847, column: 32, scope: !11406)
!11411 = !DILocation(line: 5847, column: 9, scope: !11406)
!11412 = !DILocation(line: 5847, column: 7, scope: !11406)
!11413 = !DILocation(line: 5847, column: 3, scope: !11406)
!11414 = !DILocation(line: 5849, column: 31, scope: !11406)
!11415 = !DILocation(line: 5849, column: 9, scope: !11406)
!11416 = !DILocation(line: 5849, column: 7, scope: !11406)
!11417 = !DILocation(line: 5851, column: 16, scope: !11393)
!11418 = !DILocation(line: 5851, column: 20, scope: !11393)
!11419 = !DILocation(line: 5851, column: 2, scope: !11393)
!11420 = !DILocation(line: 5853, column: 9, scope: !11393)
!11421 = !DILocation(line: 5853, column: 2, scope: !11393)
!11422 = distinct !DISubprogram(name: "rtl8152_reset_resume", scope: !3, file: !3, line: 5856, type: !10939, scopeLine: 5857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!11423 = !DILocalVariable(name: "intf", arg: 1, scope: !11422, file: !3, line: 5856, type: !10100)
!11424 = !DILocation(line: 5856, column: 55, scope: !11422)
!11425 = !DILocalVariable(name: "tp", scope: !11422, file: !3, line: 5858, type: !10280)
!11426 = !DILocation(line: 5858, column: 16, scope: !11422)
!11427 = !DILocation(line: 5858, column: 38, scope: !11422)
!11428 = !DILocation(line: 5858, column: 21, scope: !11422)
!11429 = !DILocation(line: 5860, column: 32, scope: !11422)
!11430 = !DILocation(line: 5860, column: 36, scope: !11422)
!11431 = !DILocation(line: 5860, column: 2, scope: !11422)
!11432 = !DILocation(line: 5861, column: 2, scope: !11422)
!11433 = !DILocation(line: 5861, column: 6, scope: !11422)
!11434 = !DILocation(line: 5861, column: 14, scope: !11422)
!11435 = !DILocation(line: 5861, column: 19, scope: !11422)
!11436 = !DILocation(line: 5862, column: 21, scope: !11422)
!11437 = !DILocation(line: 5862, column: 38, scope: !11422)
!11438 = !DILocation(line: 5862, column: 42, scope: !11422)
!11439 = !DILocation(line: 5862, column: 2, scope: !11422)
!11440 = !DILocation(line: 5863, column: 20, scope: !11422)
!11441 = !DILocation(line: 5863, column: 2, scope: !11422)
!11442 = !DILocation(line: 5864, column: 24, scope: !11422)
!11443 = !DILocation(line: 5864, column: 9, scope: !11422)
!11444 = !DILocation(line: 5864, column: 2, scope: !11422)
!11445 = distinct !DISubprogram(name: "rtl8152_pre_reset", scope: !3, file: !3, line: 5600, type: !10939, scopeLine: 5601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!11446 = !DILocalVariable(name: "intf", arg: 1, scope: !11445, file: !3, line: 5600, type: !10100)
!11447 = !DILocation(line: 5600, column: 52, scope: !11445)
!11448 = !DILocalVariable(name: "tp", scope: !11445, file: !3, line: 5602, type: !10280)
!11449 = !DILocation(line: 5602, column: 16, scope: !11445)
!11450 = !DILocation(line: 5602, column: 38, scope: !11445)
!11451 = !DILocation(line: 5602, column: 21, scope: !11445)
!11452 = !DILocalVariable(name: "netdev", scope: !11445, file: !3, line: 5603, type: !372)
!11453 = !DILocation(line: 5603, column: 21, scope: !11445)
!11454 = !DILocation(line: 5605, column: 7, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11445, file: !3, line: 5605, column: 6)
!11456 = !DILocation(line: 5605, column: 6, scope: !11445)
!11457 = !DILocation(line: 5606, column: 3, scope: !11455)
!11458 = !DILocation(line: 5608, column: 11, scope: !11445)
!11459 = !DILocation(line: 5608, column: 15, scope: !11445)
!11460 = !DILocation(line: 5608, column: 9, scope: !11445)
!11461 = !DILocation(line: 5609, column: 21, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11445, file: !3, line: 5609, column: 6)
!11463 = !DILocation(line: 5609, column: 7, scope: !11462)
!11464 = !DILocation(line: 5609, column: 6, scope: !11445)
!11465 = !DILocation(line: 5610, column: 3, scope: !11462)
!11466 = !DILocation(line: 5612, column: 19, scope: !11445)
!11467 = !DILocation(line: 5612, column: 2, scope: !11445)
!11468 = !DILocation(line: 5613, column: 19, scope: !11445)
!11469 = !DILocation(line: 5613, column: 23, scope: !11445)
!11470 = !DILocation(line: 5613, column: 2, scope: !11445)
!11471 = !DILocation(line: 5614, column: 26, scope: !11445)
!11472 = !DILocation(line: 5614, column: 30, scope: !11445)
!11473 = !DILocation(line: 5614, column: 2, scope: !11445)
!11474 = !DILocation(line: 5615, column: 15, scope: !11445)
!11475 = !DILocation(line: 5615, column: 19, scope: !11445)
!11476 = !DILocation(line: 5615, column: 2, scope: !11445)
!11477 = !DILocation(line: 5616, column: 28, scope: !11445)
!11478 = !DILocation(line: 5616, column: 32, scope: !11445)
!11479 = !DILocation(line: 5616, column: 2, scope: !11445)
!11480 = !DILocation(line: 5617, column: 16, scope: !11445)
!11481 = !DILocation(line: 5617, column: 20, scope: !11445)
!11482 = !DILocation(line: 5617, column: 2, scope: !11445)
!11483 = !DILocation(line: 5618, column: 23, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11445, file: !3, line: 5618, column: 6)
!11485 = !DILocation(line: 5618, column: 6, scope: !11484)
!11486 = !DILocation(line: 5618, column: 6, scope: !11445)
!11487 = !DILocation(line: 5619, column: 15, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11484, file: !3, line: 5618, column: 32)
!11489 = !DILocation(line: 5619, column: 19, scope: !11488)
!11490 = !DILocation(line: 5619, column: 3, scope: !11488)
!11491 = !DILocation(line: 5620, column: 3, scope: !11488)
!11492 = !DILocation(line: 5620, column: 7, scope: !11488)
!11493 = !DILocation(line: 5620, column: 15, scope: !11488)
!11494 = !DILocation(line: 5620, column: 23, scope: !11488)
!11495 = !DILocation(line: 5621, column: 17, scope: !11488)
!11496 = !DILocation(line: 5621, column: 21, scope: !11488)
!11497 = !DILocation(line: 5621, column: 3, scope: !11488)
!11498 = !DILocation(line: 5622, column: 2, scope: !11488)
!11499 = !DILocation(line: 5624, column: 2, scope: !11445)
!11500 = !DILocation(line: 5625, column: 1, scope: !11445)
!11501 = distinct !DISubprogram(name: "rtl8152_post_reset", scope: !3, file: !3, line: 5627, type: !10939, scopeLine: 5628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!11502 = !DILocalVariable(name: "intf", arg: 1, scope: !11501, file: !3, line: 5627, type: !10100)
!11503 = !DILocation(line: 5627, column: 53, scope: !11501)
!11504 = !DILocalVariable(name: "tp", scope: !11501, file: !3, line: 5629, type: !10280)
!11505 = !DILocation(line: 5629, column: 16, scope: !11501)
!11506 = !DILocation(line: 5629, column: 38, scope: !11501)
!11507 = !DILocation(line: 5629, column: 21, scope: !11501)
!11508 = !DILocalVariable(name: "netdev", scope: !11501, file: !3, line: 5630, type: !372)
!11509 = !DILocation(line: 5630, column: 21, scope: !11501)
!11510 = !DILocalVariable(name: "sa", scope: !11501, file: !3, line: 5631, type: !596)
!11511 = !DILocation(line: 5631, column: 18, scope: !11501)
!11512 = !DILocation(line: 5633, column: 7, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11501, file: !3, line: 5633, column: 6)
!11514 = !DILocation(line: 5633, column: 6, scope: !11501)
!11515 = !DILocation(line: 5634, column: 3, scope: !11513)
!11516 = !DILocation(line: 5637, column: 30, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11501, file: !3, line: 5637, column: 6)
!11518 = !DILocation(line: 5637, column: 6, scope: !11517)
!11519 = !DILocation(line: 5637, column: 39, scope: !11517)
!11520 = !DILocation(line: 5637, column: 6, scope: !11501)
!11521 = !DILocation(line: 5638, column: 3, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11517, file: !3, line: 5637, column: 45)
!11523 = !DILocation(line: 5639, column: 24, scope: !11522)
!11524 = !DILocation(line: 5639, column: 28, scope: !11522)
!11525 = !DILocation(line: 5639, column: 3, scope: !11522)
!11526 = !DILocation(line: 5640, column: 3, scope: !11522)
!11527 = !DILocation(line: 5641, column: 2, scope: !11522)
!11528 = !DILocation(line: 5643, column: 11, scope: !11501)
!11529 = !DILocation(line: 5643, column: 15, scope: !11501)
!11530 = !DILocation(line: 5643, column: 9, scope: !11501)
!11531 = !DILocation(line: 5644, column: 21, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11501, file: !3, line: 5644, column: 6)
!11533 = !DILocation(line: 5644, column: 7, scope: !11532)
!11534 = !DILocation(line: 5644, column: 6, scope: !11501)
!11535 = !DILocation(line: 5645, column: 3, scope: !11532)
!11536 = !DILocation(line: 5647, column: 24, scope: !11501)
!11537 = !DILocation(line: 5647, column: 28, scope: !11501)
!11538 = !DILocation(line: 5647, column: 2, scope: !11501)
!11539 = !DILocation(line: 5648, column: 23, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11501, file: !3, line: 5648, column: 6)
!11541 = !DILocation(line: 5648, column: 6, scope: !11540)
!11542 = !DILocation(line: 5648, column: 6, scope: !11501)
!11543 = !DILocation(line: 5649, column: 15, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 5648, column: 32)
!11545 = !DILocation(line: 5649, column: 19, scope: !11544)
!11546 = !DILocation(line: 5649, column: 3, scope: !11544)
!11547 = !DILocation(line: 5650, column: 3, scope: !11544)
!11548 = !DILocation(line: 5650, column: 7, scope: !11544)
!11549 = !DILocation(line: 5650, column: 15, scope: !11544)
!11550 = !DILocation(line: 5650, column: 22, scope: !11544)
!11551 = !DILocation(line: 5651, column: 16, scope: !11544)
!11552 = !DILocation(line: 5651, column: 3, scope: !11544)
!11553 = !DILocation(line: 5652, column: 24, scope: !11544)
!11554 = !DILocation(line: 5652, column: 3, scope: !11544)
!11555 = !DILocation(line: 5653, column: 17, scope: !11544)
!11556 = !DILocation(line: 5653, column: 21, scope: !11544)
!11557 = !DILocation(line: 5653, column: 3, scope: !11544)
!11558 = !DILocation(line: 5654, column: 2, scope: !11544)
!11559 = !DILocation(line: 5656, column: 15, scope: !11501)
!11560 = !DILocation(line: 5656, column: 19, scope: !11501)
!11561 = !DILocation(line: 5656, column: 2, scope: !11501)
!11562 = !DILocation(line: 5657, column: 18, scope: !11501)
!11563 = !DILocation(line: 5657, column: 22, scope: !11501)
!11564 = !DILocation(line: 5657, column: 2, scope: !11501)
!11565 = !DILocation(line: 5658, column: 19, scope: !11501)
!11566 = !DILocation(line: 5658, column: 2, scope: !11501)
!11567 = !DILocation(line: 5659, column: 17, scope: !11501)
!11568 = !DILocation(line: 5659, column: 21, scope: !11501)
!11569 = !DILocation(line: 5659, column: 2, scope: !11501)
!11570 = !DILocation(line: 5661, column: 19, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11501, file: !3, line: 5661, column: 6)
!11572 = !DILocation(line: 5661, column: 23, scope: !11571)
!11573 = !DILocation(line: 5661, column: 7, scope: !11571)
!11574 = !DILocation(line: 5661, column: 6, scope: !11501)
!11575 = !DILocation(line: 5662, column: 18, scope: !11571)
!11576 = !DILocation(line: 5662, column: 22, scope: !11571)
!11577 = !DILocation(line: 5662, column: 3, scope: !11571)
!11578 = !DILocation(line: 5664, column: 2, scope: !11501)
!11579 = !DILocation(line: 5665, column: 1, scope: !11501)
!11580 = distinct !DISubprogram(name: "interface_to_usbdev", scope: !9505, file: !9505, line: 715, type: !11581, scopeLine: 716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!11581 = !DISubroutineType(types: !11582)
!11582 = !{!9907, !10100}
!11583 = !DILocalVariable(name: "intf", arg: 1, scope: !11580, file: !9505, line: 715, type: !10100)
!11584 = !DILocation(line: 715, column: 76, scope: !11580)
!11585 = !DILocalVariable(name: "__mptr", scope: !11586, file: !9505, line: 717, type: !647)
!11586 = distinct !DILexicalBlock(scope: !11580, file: !9505, line: 717, column: 9)
!11587 = !DILocation(line: 717, column: 9, scope: !11586)
!11588 = !DILocation(line: 717, column: 9, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11586, file: !9505, line: 717, column: 9)
!11590 = !DILocation(line: 717, column: 2, scope: !11580)
!11591 = distinct !DISubprogram(name: "rtl_get_version", scope: !3, file: !3, line: 6618, type: !11592, scopeLine: 6619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!11592 = !DISubroutineType(types: !11593)
!11593 = !{!1474, !10100}
!11594 = !DILocalVariable(name: "s", arg: 1, scope: !11595, file: !9681, line: 445, type: !2348)
!11595 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !9681, file: !9681, line: 445, type: !11596, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!11596 = !DISubroutineType(types: !11597)
!11597 = !{!647, !2348, !2067, !671}
!11598 = !DILocation(line: 445, column: 72, scope: !11595, inlinedAt: !11599)
!11599 = distinct !DILocation(line: 552, column: 10, scope: !11600, inlinedAt: !11605)
!11600 = distinct !DILexicalBlock(scope: !11601, file: !9681, line: 540, column: 34)
!11601 = distinct !DILexicalBlock(scope: !11602, file: !9681, line: 540, column: 6)
!11602 = distinct !DISubprogram(name: "kmalloc", scope: !9681, file: !9681, line: 538, type: !11603, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!11603 = !DISubroutineType(types: !11604)
!11604 = !{!647, !671, !2067}
!11605 = distinct !DILocation(line: 6626, column: 8, scope: !11591)
!11606 = !DILocalVariable(name: "flags", arg: 2, scope: !11595, file: !9681, line: 446, type: !2067)
!11607 = !DILocation(line: 446, column: 9, scope: !11595, inlinedAt: !11599)
!11608 = !DILocalVariable(name: "size", arg: 3, scope: !11595, file: !9681, line: 446, type: !671)
!11609 = !DILocation(line: 446, column: 23, scope: !11595, inlinedAt: !11599)
!11610 = !DILocalVariable(name: "ret", scope: !11595, file: !9681, line: 448, type: !647)
!11611 = !DILocation(line: 448, column: 8, scope: !11595, inlinedAt: !11599)
!11612 = !DILocalVariable(name: "flags", arg: 1, scope: !11613, file: !9681, line: 318, type: !2067)
!11613 = distinct !DISubprogram(name: "kmalloc_type", scope: !9681, file: !9681, line: 318, type: !11614, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!11614 = !DISubroutineType(types: !11615)
!11615 = !{!9680, !2067}
!11616 = !DILocation(line: 318, column: 67, scope: !11613, inlinedAt: !11617)
!11617 = distinct !DILocation(line: 553, column: 20, scope: !11600, inlinedAt: !11605)
!11618 = !DILocalVariable(name: "size", arg: 1, scope: !11619, file: !9681, line: 346, type: !671)
!11619 = distinct !DISubprogram(name: "kmalloc_index", scope: !9681, file: !9681, line: 346, type: !11620, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!11620 = !DISubroutineType(types: !11621)
!11621 = !{!7, !671}
!11622 = !DILocation(line: 346, column: 58, scope: !11619, inlinedAt: !11623)
!11623 = distinct !DILocation(line: 547, column: 11, scope: !11600, inlinedAt: !11605)
!11624 = !DILocalVariable(name: "size", arg: 1, scope: !11625, file: !9681, line: 472, type: !671)
!11625 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !9681, file: !9681, line: 472, type: !11626, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!11626 = !DISubroutineType(types: !11627)
!11627 = !{!647, !671, !2067, !7}
!11628 = !DILocation(line: 472, column: 28, scope: !11625, inlinedAt: !11629)
!11629 = distinct !DILocation(line: 481, column: 9, scope: !11630, inlinedAt: !11631)
!11630 = distinct !DISubprogram(name: "kmalloc_large", scope: !9681, file: !9681, line: 478, type: !11603, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!11631 = distinct !DILocation(line: 545, column: 11, scope: !11632, inlinedAt: !11605)
!11632 = distinct !DILexicalBlock(scope: !11600, file: !9681, line: 544, column: 7)
!11633 = !DILocalVariable(name: "flags", arg: 2, scope: !11625, file: !9681, line: 472, type: !2067)
!11634 = !DILocation(line: 472, column: 40, scope: !11625, inlinedAt: !11629)
!11635 = !DILocalVariable(name: "order", arg: 3, scope: !11625, file: !9681, line: 472, type: !7)
!11636 = !DILocation(line: 472, column: 60, scope: !11625, inlinedAt: !11629)
!11637 = !DILocalVariable(name: "size", arg: 1, scope: !11630, file: !9681, line: 478, type: !671)
!11638 = !DILocation(line: 478, column: 51, scope: !11630, inlinedAt: !11631)
!11639 = !DILocalVariable(name: "flags", arg: 2, scope: !11630, file: !9681, line: 478, type: !2067)
!11640 = !DILocation(line: 478, column: 63, scope: !11630, inlinedAt: !11631)
!11641 = !DILocalVariable(name: "order", scope: !11630, file: !9681, line: 480, type: !7)
!11642 = !DILocation(line: 480, column: 15, scope: !11630, inlinedAt: !11631)
!11643 = !DILocalVariable(name: "size", arg: 1, scope: !11602, file: !9681, line: 538, type: !671)
!11644 = !DILocation(line: 538, column: 45, scope: !11602, inlinedAt: !11605)
!11645 = !DILocalVariable(name: "flags", arg: 2, scope: !11602, file: !9681, line: 538, type: !2067)
!11646 = !DILocation(line: 538, column: 57, scope: !11602, inlinedAt: !11605)
!11647 = !DILocalVariable(name: "index", scope: !11600, file: !9681, line: 542, type: !7)
!11648 = !DILocation(line: 542, column: 16, scope: !11600, inlinedAt: !11605)
!11649 = !DILocalVariable(name: "intf", arg: 1, scope: !11591, file: !3, line: 6618, type: !10100)
!11650 = !DILocation(line: 6618, column: 49, scope: !11591)
!11651 = !DILocalVariable(name: "udev", scope: !11591, file: !3, line: 6620, type: !9907)
!11652 = !DILocation(line: 6620, column: 21, scope: !11591)
!11653 = !DILocation(line: 6620, column: 48, scope: !11591)
!11654 = !DILocation(line: 6620, column: 28, scope: !11591)
!11655 = !DILocalVariable(name: "ocp_data", scope: !11591, file: !3, line: 6621, type: !784)
!11656 = !DILocation(line: 6621, column: 6, scope: !11591)
!11657 = !DILocalVariable(name: "tmp", scope: !11591, file: !3, line: 6622, type: !11658)
!11658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9980, size: 64)
!11659 = !DILocation(line: 6622, column: 10, scope: !11591)
!11660 = !DILocalVariable(name: "version", scope: !11591, file: !3, line: 6623, type: !1474)
!11661 = !DILocation(line: 6623, column: 5, scope: !11591)
!11662 = !DILocalVariable(name: "ret", scope: !11591, file: !3, line: 6624, type: !72)
!11663 = !DILocation(line: 6624, column: 6, scope: !11591)
!11664 = !DILocation(line: 540, column: 27, scope: !11601, inlinedAt: !11605)
!11665 = !DILocation(line: 540, column: 6, scope: !11601, inlinedAt: !11605)
!11666 = !DILocation(line: 540, column: 6, scope: !11602, inlinedAt: !11605)
!11667 = !DILocation(line: 544, column: 7, scope: !11632, inlinedAt: !11605)
!11668 = !DILocation(line: 544, column: 12, scope: !11632, inlinedAt: !11605)
!11669 = !DILocation(line: 544, column: 7, scope: !11600, inlinedAt: !11605)
!11670 = !DILocation(line: 545, column: 25, scope: !11632, inlinedAt: !11605)
!11671 = !DILocation(line: 545, column: 31, scope: !11632, inlinedAt: !11605)
!11672 = !DILocation(line: 480, column: 33, scope: !11630, inlinedAt: !11631)
!11673 = !DILocation(line: 480, column: 23, scope: !11630, inlinedAt: !11631)
!11674 = !DILocation(line: 481, column: 29, scope: !11630, inlinedAt: !11631)
!11675 = !DILocation(line: 481, column: 35, scope: !11630, inlinedAt: !11631)
!11676 = !DILocation(line: 481, column: 42, scope: !11630, inlinedAt: !11631)
!11677 = !DILocation(line: 474, column: 23, scope: !11625, inlinedAt: !11629)
!11678 = !DILocation(line: 474, column: 29, scope: !11625, inlinedAt: !11629)
!11679 = !DILocation(line: 474, column: 36, scope: !11625, inlinedAt: !11629)
!11680 = !DILocation(line: 474, column: 9, scope: !11625, inlinedAt: !11629)
!11681 = !DILocation(line: 545, column: 4, scope: !11632, inlinedAt: !11605)
!11682 = !DILocation(line: 547, column: 25, scope: !11600, inlinedAt: !11605)
!11683 = !DILocation(line: 348, column: 7, scope: !11684, inlinedAt: !11623)
!11684 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 348, column: 6)
!11685 = !DILocation(line: 348, column: 6, scope: !11619, inlinedAt: !11623)
!11686 = !DILocation(line: 349, column: 3, scope: !11684, inlinedAt: !11623)
!11687 = !DILocation(line: 351, column: 6, scope: !11688, inlinedAt: !11623)
!11688 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 351, column: 6)
!11689 = !DILocation(line: 351, column: 11, scope: !11688, inlinedAt: !11623)
!11690 = !DILocation(line: 351, column: 6, scope: !11619, inlinedAt: !11623)
!11691 = !DILocation(line: 352, column: 3, scope: !11688, inlinedAt: !11623)
!11692 = !DILocation(line: 354, column: 32, scope: !11693, inlinedAt: !11623)
!11693 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 354, column: 6)
!11694 = !DILocation(line: 354, column: 37, scope: !11693, inlinedAt: !11623)
!11695 = !DILocation(line: 354, column: 42, scope: !11693, inlinedAt: !11623)
!11696 = !DILocation(line: 354, column: 45, scope: !11693, inlinedAt: !11623)
!11697 = !DILocation(line: 354, column: 50, scope: !11693, inlinedAt: !11623)
!11698 = !DILocation(line: 354, column: 6, scope: !11619, inlinedAt: !11623)
!11699 = !DILocation(line: 355, column: 3, scope: !11693, inlinedAt: !11623)
!11700 = !DILocation(line: 356, column: 32, scope: !11701, inlinedAt: !11623)
!11701 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 356, column: 6)
!11702 = !DILocation(line: 356, column: 37, scope: !11701, inlinedAt: !11623)
!11703 = !DILocation(line: 356, column: 43, scope: !11701, inlinedAt: !11623)
!11704 = !DILocation(line: 356, column: 46, scope: !11701, inlinedAt: !11623)
!11705 = !DILocation(line: 356, column: 51, scope: !11701, inlinedAt: !11623)
!11706 = !DILocation(line: 356, column: 6, scope: !11619, inlinedAt: !11623)
!11707 = !DILocation(line: 357, column: 3, scope: !11701, inlinedAt: !11623)
!11708 = !DILocation(line: 358, column: 6, scope: !11709, inlinedAt: !11623)
!11709 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 358, column: 6)
!11710 = !DILocation(line: 358, column: 11, scope: !11709, inlinedAt: !11623)
!11711 = !DILocation(line: 358, column: 6, scope: !11619, inlinedAt: !11623)
!11712 = !DILocation(line: 358, column: 26, scope: !11709, inlinedAt: !11623)
!11713 = !DILocation(line: 359, column: 6, scope: !11714, inlinedAt: !11623)
!11714 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 359, column: 6)
!11715 = !DILocation(line: 359, column: 11, scope: !11714, inlinedAt: !11623)
!11716 = !DILocation(line: 359, column: 6, scope: !11619, inlinedAt: !11623)
!11717 = !DILocation(line: 359, column: 26, scope: !11714, inlinedAt: !11623)
!11718 = !DILocation(line: 360, column: 6, scope: !11719, inlinedAt: !11623)
!11719 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 360, column: 6)
!11720 = !DILocation(line: 360, column: 11, scope: !11719, inlinedAt: !11623)
!11721 = !DILocation(line: 360, column: 6, scope: !11619, inlinedAt: !11623)
!11722 = !DILocation(line: 360, column: 26, scope: !11719, inlinedAt: !11623)
!11723 = !DILocation(line: 361, column: 6, scope: !11724, inlinedAt: !11623)
!11724 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 361, column: 6)
!11725 = !DILocation(line: 361, column: 11, scope: !11724, inlinedAt: !11623)
!11726 = !DILocation(line: 361, column: 6, scope: !11619, inlinedAt: !11623)
!11727 = !DILocation(line: 361, column: 26, scope: !11724, inlinedAt: !11623)
!11728 = !DILocation(line: 362, column: 6, scope: !11729, inlinedAt: !11623)
!11729 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 362, column: 6)
!11730 = !DILocation(line: 362, column: 11, scope: !11729, inlinedAt: !11623)
!11731 = !DILocation(line: 362, column: 6, scope: !11619, inlinedAt: !11623)
!11732 = !DILocation(line: 362, column: 26, scope: !11729, inlinedAt: !11623)
!11733 = !DILocation(line: 363, column: 6, scope: !11734, inlinedAt: !11623)
!11734 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 363, column: 6)
!11735 = !DILocation(line: 363, column: 11, scope: !11734, inlinedAt: !11623)
!11736 = !DILocation(line: 363, column: 6, scope: !11619, inlinedAt: !11623)
!11737 = !DILocation(line: 363, column: 26, scope: !11734, inlinedAt: !11623)
!11738 = !DILocation(line: 364, column: 6, scope: !11739, inlinedAt: !11623)
!11739 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 364, column: 6)
!11740 = !DILocation(line: 364, column: 11, scope: !11739, inlinedAt: !11623)
!11741 = !DILocation(line: 364, column: 6, scope: !11619, inlinedAt: !11623)
!11742 = !DILocation(line: 364, column: 26, scope: !11739, inlinedAt: !11623)
!11743 = !DILocation(line: 365, column: 6, scope: !11744, inlinedAt: !11623)
!11744 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 365, column: 6)
!11745 = !DILocation(line: 365, column: 11, scope: !11744, inlinedAt: !11623)
!11746 = !DILocation(line: 365, column: 6, scope: !11619, inlinedAt: !11623)
!11747 = !DILocation(line: 365, column: 26, scope: !11744, inlinedAt: !11623)
!11748 = !DILocation(line: 366, column: 6, scope: !11749, inlinedAt: !11623)
!11749 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 366, column: 6)
!11750 = !DILocation(line: 366, column: 11, scope: !11749, inlinedAt: !11623)
!11751 = !DILocation(line: 366, column: 6, scope: !11619, inlinedAt: !11623)
!11752 = !DILocation(line: 366, column: 26, scope: !11749, inlinedAt: !11623)
!11753 = !DILocation(line: 367, column: 6, scope: !11754, inlinedAt: !11623)
!11754 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 367, column: 6)
!11755 = !DILocation(line: 367, column: 11, scope: !11754, inlinedAt: !11623)
!11756 = !DILocation(line: 367, column: 6, scope: !11619, inlinedAt: !11623)
!11757 = !DILocation(line: 367, column: 26, scope: !11754, inlinedAt: !11623)
!11758 = !DILocation(line: 368, column: 6, scope: !11759, inlinedAt: !11623)
!11759 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 368, column: 6)
!11760 = !DILocation(line: 368, column: 11, scope: !11759, inlinedAt: !11623)
!11761 = !DILocation(line: 368, column: 6, scope: !11619, inlinedAt: !11623)
!11762 = !DILocation(line: 368, column: 26, scope: !11759, inlinedAt: !11623)
!11763 = !DILocation(line: 369, column: 6, scope: !11764, inlinedAt: !11623)
!11764 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 369, column: 6)
!11765 = !DILocation(line: 369, column: 11, scope: !11764, inlinedAt: !11623)
!11766 = !DILocation(line: 369, column: 6, scope: !11619, inlinedAt: !11623)
!11767 = !DILocation(line: 369, column: 26, scope: !11764, inlinedAt: !11623)
!11768 = !DILocation(line: 370, column: 6, scope: !11769, inlinedAt: !11623)
!11769 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 370, column: 6)
!11770 = !DILocation(line: 370, column: 11, scope: !11769, inlinedAt: !11623)
!11771 = !DILocation(line: 370, column: 6, scope: !11619, inlinedAt: !11623)
!11772 = !DILocation(line: 370, column: 26, scope: !11769, inlinedAt: !11623)
!11773 = !DILocation(line: 371, column: 6, scope: !11774, inlinedAt: !11623)
!11774 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 371, column: 6)
!11775 = !DILocation(line: 371, column: 11, scope: !11774, inlinedAt: !11623)
!11776 = !DILocation(line: 371, column: 6, scope: !11619, inlinedAt: !11623)
!11777 = !DILocation(line: 371, column: 26, scope: !11774, inlinedAt: !11623)
!11778 = !DILocation(line: 372, column: 6, scope: !11779, inlinedAt: !11623)
!11779 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 372, column: 6)
!11780 = !DILocation(line: 372, column: 11, scope: !11779, inlinedAt: !11623)
!11781 = !DILocation(line: 372, column: 6, scope: !11619, inlinedAt: !11623)
!11782 = !DILocation(line: 372, column: 26, scope: !11779, inlinedAt: !11623)
!11783 = !DILocation(line: 373, column: 6, scope: !11784, inlinedAt: !11623)
!11784 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 373, column: 6)
!11785 = !DILocation(line: 373, column: 11, scope: !11784, inlinedAt: !11623)
!11786 = !DILocation(line: 373, column: 6, scope: !11619, inlinedAt: !11623)
!11787 = !DILocation(line: 373, column: 26, scope: !11784, inlinedAt: !11623)
!11788 = !DILocation(line: 374, column: 6, scope: !11789, inlinedAt: !11623)
!11789 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 374, column: 6)
!11790 = !DILocation(line: 374, column: 11, scope: !11789, inlinedAt: !11623)
!11791 = !DILocation(line: 374, column: 6, scope: !11619, inlinedAt: !11623)
!11792 = !DILocation(line: 374, column: 26, scope: !11789, inlinedAt: !11623)
!11793 = !DILocation(line: 375, column: 6, scope: !11794, inlinedAt: !11623)
!11794 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 375, column: 6)
!11795 = !DILocation(line: 375, column: 11, scope: !11794, inlinedAt: !11623)
!11796 = !DILocation(line: 375, column: 6, scope: !11619, inlinedAt: !11623)
!11797 = !DILocation(line: 375, column: 27, scope: !11794, inlinedAt: !11623)
!11798 = !DILocation(line: 376, column: 6, scope: !11799, inlinedAt: !11623)
!11799 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 376, column: 6)
!11800 = !DILocation(line: 376, column: 11, scope: !11799, inlinedAt: !11623)
!11801 = !DILocation(line: 376, column: 6, scope: !11619, inlinedAt: !11623)
!11802 = !DILocation(line: 376, column: 32, scope: !11799, inlinedAt: !11623)
!11803 = !DILocation(line: 377, column: 6, scope: !11804, inlinedAt: !11623)
!11804 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 377, column: 6)
!11805 = !DILocation(line: 377, column: 11, scope: !11804, inlinedAt: !11623)
!11806 = !DILocation(line: 377, column: 6, scope: !11619, inlinedAt: !11623)
!11807 = !DILocation(line: 377, column: 32, scope: !11804, inlinedAt: !11623)
!11808 = !DILocation(line: 378, column: 6, scope: !11809, inlinedAt: !11623)
!11809 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 378, column: 6)
!11810 = !DILocation(line: 378, column: 11, scope: !11809, inlinedAt: !11623)
!11811 = !DILocation(line: 378, column: 6, scope: !11619, inlinedAt: !11623)
!11812 = !DILocation(line: 378, column: 32, scope: !11809, inlinedAt: !11623)
!11813 = !DILocation(line: 379, column: 6, scope: !11814, inlinedAt: !11623)
!11814 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 379, column: 6)
!11815 = !DILocation(line: 379, column: 11, scope: !11814, inlinedAt: !11623)
!11816 = !DILocation(line: 379, column: 6, scope: !11619, inlinedAt: !11623)
!11817 = !DILocation(line: 379, column: 33, scope: !11814, inlinedAt: !11623)
!11818 = !DILocation(line: 380, column: 6, scope: !11819, inlinedAt: !11623)
!11819 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 380, column: 6)
!11820 = !DILocation(line: 380, column: 11, scope: !11819, inlinedAt: !11623)
!11821 = !DILocation(line: 380, column: 6, scope: !11619, inlinedAt: !11623)
!11822 = !DILocation(line: 380, column: 33, scope: !11819, inlinedAt: !11623)
!11823 = !DILocation(line: 381, column: 6, scope: !11824, inlinedAt: !11623)
!11824 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 381, column: 6)
!11825 = !DILocation(line: 381, column: 11, scope: !11824, inlinedAt: !11623)
!11826 = !DILocation(line: 381, column: 6, scope: !11619, inlinedAt: !11623)
!11827 = !DILocation(line: 381, column: 33, scope: !11824, inlinedAt: !11623)
!11828 = !DILocation(line: 382, column: 2, scope: !11829, inlinedAt: !11623)
!11829 = distinct !DILexicalBlock(scope: !11830, file: !9681, line: 382, column: 2)
!11830 = distinct !DILexicalBlock(scope: !11619, file: !9681, line: 382, column: 2)
!11831 = !{i32 -2144449231, i32 -2144449202, i32 -2144449156, i32 -2144449098, i32 -2144449044, i32 -2144448990, i32 -2144448935, i32 -2144448904}
!11832 = !DILocation(line: 382, column: 2, scope: !11833, inlinedAt: !11623)
!11833 = distinct !DILexicalBlock(scope: !11834, file: !9681, line: 382, column: 2)
!11834 = distinct !DILexicalBlock(scope: !11830, file: !9681, line: 382, column: 2)
!11835 = !{i32 -2144448461, i32 -2144448454, i32 -2144448400, i32 -2144448369, i32 -2144448339}
!11836 = !DILocation(line: 382, column: 2, scope: !11834, inlinedAt: !11623)
!11837 = !DILocation(line: 386, column: 1, scope: !11619, inlinedAt: !11623)
!11838 = !DILocation(line: 547, column: 9, scope: !11600, inlinedAt: !11605)
!11839 = !DILocation(line: 549, column: 8, scope: !11840, inlinedAt: !11605)
!11840 = distinct !DILexicalBlock(scope: !11600, file: !9681, line: 549, column: 7)
!11841 = !DILocation(line: 549, column: 7, scope: !11600, inlinedAt: !11605)
!11842 = !DILocation(line: 550, column: 4, scope: !11840, inlinedAt: !11605)
!11843 = !DILocation(line: 553, column: 33, scope: !11600, inlinedAt: !11605)
!11844 = !DILocation(line: 325, column: 6, scope: !11845, inlinedAt: !11617)
!11845 = distinct !DILexicalBlock(scope: !11613, file: !9681, line: 325, column: 6)
!11846 = !DILocation(line: 325, column: 6, scope: !11613, inlinedAt: !11617)
!11847 = !DILocation(line: 326, column: 3, scope: !11845, inlinedAt: !11617)
!11848 = !DILocation(line: 332, column: 9, scope: !11613, inlinedAt: !11617)
!11849 = !DILocation(line: 332, column: 15, scope: !11613, inlinedAt: !11617)
!11850 = !DILocation(line: 332, column: 2, scope: !11613, inlinedAt: !11617)
!11851 = !DILocation(line: 336, column: 1, scope: !11613, inlinedAt: !11617)
!11852 = !DILocation(line: 553, column: 5, scope: !11600, inlinedAt: !11605)
!11853 = !DILocation(line: 553, column: 41, scope: !11600, inlinedAt: !11605)
!11854 = !DILocation(line: 554, column: 5, scope: !11600, inlinedAt: !11605)
!11855 = !DILocation(line: 554, column: 12, scope: !11600, inlinedAt: !11605)
!11856 = !DILocation(line: 448, column: 31, scope: !11595, inlinedAt: !11599)
!11857 = !DILocation(line: 448, column: 34, scope: !11595, inlinedAt: !11599)
!11858 = !DILocation(line: 448, column: 14, scope: !11595, inlinedAt: !11599)
!11859 = !DILocation(line: 450, column: 22, scope: !11595, inlinedAt: !11599)
!11860 = !DILocation(line: 450, column: 25, scope: !11595, inlinedAt: !11599)
!11861 = !DILocation(line: 450, column: 30, scope: !11595, inlinedAt: !11599)
!11862 = !DILocation(line: 450, column: 36, scope: !11595, inlinedAt: !11599)
!11863 = !DILocation(line: 450, column: 8, scope: !11595, inlinedAt: !11599)
!11864 = !DILocation(line: 450, column: 6, scope: !11595, inlinedAt: !11599)
!11865 = !DILocation(line: 451, column: 9, scope: !11595, inlinedAt: !11599)
!11866 = !DILocation(line: 552, column: 3, scope: !11600, inlinedAt: !11605)
!11867 = !DILocation(line: 557, column: 19, scope: !11602, inlinedAt: !11605)
!11868 = !DILocation(line: 557, column: 25, scope: !11602, inlinedAt: !11605)
!11869 = !DILocation(line: 557, column: 9, scope: !11602, inlinedAt: !11605)
!11870 = !DILocation(line: 557, column: 2, scope: !11602, inlinedAt: !11605)
!11871 = !DILocation(line: 558, column: 1, scope: !11602, inlinedAt: !11605)
!11872 = !DILocation(line: 6626, column: 8, scope: !11591)
!11873 = !DILocation(line: 6626, column: 6, scope: !11591)
!11874 = !DILocation(line: 6627, column: 7, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11591, file: !3, line: 6627, column: 6)
!11876 = !DILocation(line: 6627, column: 6, scope: !11591)
!11877 = !DILocation(line: 6628, column: 3, scope: !11875)
!11878 = !DILocation(line: 6630, column: 24, scope: !11591)
!11879 = !DILocation(line: 6630, column: 30, scope: !11591)
!11880 = !DILocation(line: 6632, column: 34, scope: !11591)
!11881 = !DILocation(line: 6630, column: 8, scope: !11591)
!11882 = !DILocation(line: 6630, column: 6, scope: !11591)
!11883 = !DILocation(line: 6633, column: 6, scope: !11884)
!11884 = distinct !DILexicalBlock(scope: !11591, file: !3, line: 6633, column: 6)
!11885 = !DILocation(line: 6633, column: 10, scope: !11884)
!11886 = !DILocation(line: 6633, column: 6, scope: !11591)
!11887 = !DILocation(line: 6634, column: 15, scope: !11884)
!11888 = !DILocation(line: 6634, column: 35, scope: !11884)
!11889 = !DILocation(line: 6634, column: 42, scope: !11884)
!11890 = !DILocation(line: 6634, column: 12, scope: !11884)
!11891 = !DILocation(line: 6634, column: 3, scope: !11884)
!11892 = !DILocation(line: 6636, column: 8, scope: !11591)
!11893 = !DILocation(line: 6636, column: 2, scope: !11591)
!11894 = !DILocation(line: 6638, column: 10, scope: !11591)
!11895 = !DILocation(line: 6638, column: 2, scope: !11591)
!11896 = !DILocation(line: 6640, column: 11, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11591, file: !3, line: 6638, column: 20)
!11898 = !DILocation(line: 6641, column: 3, scope: !11897)
!11899 = !DILocation(line: 6643, column: 11, scope: !11897)
!11900 = !DILocation(line: 6644, column: 3, scope: !11897)
!11901 = !DILocation(line: 6646, column: 11, scope: !11897)
!11902 = !DILocation(line: 6647, column: 3, scope: !11897)
!11903 = !DILocation(line: 6649, column: 11, scope: !11897)
!11904 = !DILocation(line: 6650, column: 3, scope: !11897)
!11905 = !DILocation(line: 6652, column: 11, scope: !11897)
!11906 = !DILocation(line: 6653, column: 3, scope: !11897)
!11907 = !DILocation(line: 6655, column: 11, scope: !11897)
!11908 = !DILocation(line: 6656, column: 3, scope: !11897)
!11909 = !DILocation(line: 6658, column: 11, scope: !11897)
!11910 = !DILocation(line: 6659, column: 3, scope: !11897)
!11911 = !DILocation(line: 6661, column: 11, scope: !11897)
!11912 = !DILocation(line: 6662, column: 3, scope: !11897)
!11913 = !DILocation(line: 6664, column: 11, scope: !11897)
!11914 = !DILocation(line: 6665, column: 3, scope: !11897)
!11915 = !DILocation(line: 6667, column: 11, scope: !11897)
!11916 = !DILocation(line: 6668, column: 3, scope: !11897)
!11917 = !DILocation(line: 6669, column: 3, scope: !11897)
!11918 = !DILocation(line: 6674, column: 9, scope: !11591)
!11919 = !DILocation(line: 6674, column: 2, scope: !11591)
!11920 = !DILocation(line: 6675, column: 1, scope: !11591)
!11921 = distinct !DISubprogram(name: "netdev_priv", scope: !71, file: !71, line: 2322, type: !11922, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!11922 = !DISubroutineType(types: !11923)
!11923 = !{!647, !2825}
!11924 = !DILocalVariable(name: "dev", arg: 1, scope: !11921, file: !71, line: 2322, type: !2825)
!11925 = !DILocation(line: 2322, column: 58, scope: !11921)
!11926 = !DILocation(line: 2324, column: 17, scope: !11921)
!11927 = !DILocation(line: 2324, column: 9, scope: !11921)
!11928 = !DILocation(line: 2324, column: 21, scope: !11921)
!11929 = !DILocation(line: 2324, column: 2, scope: !11921)
!11930 = distinct !DISubprogram(name: "rtl_ops_init", scope: !3, file: !3, line: 6505, type: !10384, scopeLine: 6506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!11931 = !DILocalVariable(name: "tp", arg: 1, scope: !11930, file: !3, line: 6505, type: !10280)
!11932 = !DILocation(line: 6505, column: 39, scope: !11930)
!11933 = !DILocalVariable(name: "ops", scope: !11930, file: !3, line: 6507, type: !11934)
!11934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10376, size: 64)
!11935 = !DILocation(line: 6507, column: 18, scope: !11930)
!11936 = !DILocation(line: 6507, column: 25, scope: !11930)
!11937 = !DILocation(line: 6507, column: 29, scope: !11930)
!11938 = !DILocalVariable(name: "ret", scope: !11930, file: !3, line: 6508, type: !72)
!11939 = !DILocation(line: 6508, column: 6, scope: !11930)
!11940 = !DILocation(line: 6510, column: 10, scope: !11930)
!11941 = !DILocation(line: 6510, column: 14, scope: !11930)
!11942 = !DILocation(line: 6510, column: 2, scope: !11930)
!11943 = !DILocation(line: 6514, column: 3, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11930, file: !3, line: 6510, column: 23)
!11945 = !DILocation(line: 6514, column: 8, scope: !11944)
!11946 = !DILocation(line: 6514, column: 14, scope: !11944)
!11947 = !DILocation(line: 6515, column: 3, scope: !11944)
!11948 = !DILocation(line: 6515, column: 8, scope: !11944)
!11949 = !DILocation(line: 6515, column: 16, scope: !11944)
!11950 = !DILocation(line: 6516, column: 3, scope: !11944)
!11951 = !DILocation(line: 6516, column: 8, scope: !11944)
!11952 = !DILocation(line: 6516, column: 17, scope: !11944)
!11953 = !DILocation(line: 6517, column: 3, scope: !11944)
!11954 = !DILocation(line: 6517, column: 8, scope: !11944)
!11955 = !DILocation(line: 6517, column: 13, scope: !11944)
!11956 = !DILocation(line: 6518, column: 3, scope: !11944)
!11957 = !DILocation(line: 6518, column: 8, scope: !11944)
!11958 = !DILocation(line: 6518, column: 14, scope: !11944)
!11959 = !DILocation(line: 6519, column: 3, scope: !11944)
!11960 = !DILocation(line: 6519, column: 8, scope: !11944)
!11961 = !DILocation(line: 6519, column: 16, scope: !11944)
!11962 = !DILocation(line: 6520, column: 3, scope: !11944)
!11963 = !DILocation(line: 6520, column: 8, scope: !11944)
!11964 = !DILocation(line: 6520, column: 17, scope: !11944)
!11965 = !DILocation(line: 6521, column: 3, scope: !11944)
!11966 = !DILocation(line: 6521, column: 8, scope: !11944)
!11967 = !DILocation(line: 6521, column: 17, scope: !11944)
!11968 = !DILocation(line: 6522, column: 3, scope: !11944)
!11969 = !DILocation(line: 6522, column: 8, scope: !11944)
!11970 = !DILocation(line: 6522, column: 17, scope: !11944)
!11971 = !DILocation(line: 6523, column: 3, scope: !11944)
!11972 = !DILocation(line: 6523, column: 8, scope: !11944)
!11973 = !DILocation(line: 6523, column: 20, scope: !11944)
!11974 = !DILocation(line: 6524, column: 3, scope: !11944)
!11975 = !DILocation(line: 6524, column: 8, scope: !11944)
!11976 = !DILocation(line: 6524, column: 23, scope: !11944)
!11977 = !DILocation(line: 6525, column: 3, scope: !11944)
!11978 = !DILocation(line: 6525, column: 7, scope: !11944)
!11979 = !DILocation(line: 6525, column: 18, scope: !11944)
!11980 = !DILocation(line: 6526, column: 3, scope: !11944)
!11981 = !DILocation(line: 6526, column: 7, scope: !11944)
!11982 = !DILocation(line: 6526, column: 15, scope: !11944)
!11983 = !DILocation(line: 6527, column: 3, scope: !11944)
!11984 = !DILocation(line: 6527, column: 7, scope: !11944)
!11985 = !DILocation(line: 6527, column: 16, scope: !11944)
!11986 = !DILocation(line: 6528, column: 3, scope: !11944)
!11987 = !DILocation(line: 6534, column: 3, scope: !11944)
!11988 = !DILocation(line: 6534, column: 8, scope: !11944)
!11989 = !DILocation(line: 6534, column: 14, scope: !11944)
!11990 = !DILocation(line: 6535, column: 3, scope: !11944)
!11991 = !DILocation(line: 6535, column: 8, scope: !11944)
!11992 = !DILocation(line: 6535, column: 16, scope: !11944)
!11993 = !DILocation(line: 6536, column: 3, scope: !11944)
!11994 = !DILocation(line: 6536, column: 8, scope: !11944)
!11995 = !DILocation(line: 6536, column: 17, scope: !11944)
!11996 = !DILocation(line: 6537, column: 3, scope: !11944)
!11997 = !DILocation(line: 6537, column: 8, scope: !11944)
!11998 = !DILocation(line: 6537, column: 13, scope: !11944)
!11999 = !DILocation(line: 6538, column: 3, scope: !11944)
!12000 = !DILocation(line: 6538, column: 8, scope: !11944)
!12001 = !DILocation(line: 6538, column: 14, scope: !11944)
!12002 = !DILocation(line: 6539, column: 3, scope: !11944)
!12003 = !DILocation(line: 6539, column: 8, scope: !11944)
!12004 = !DILocation(line: 6539, column: 16, scope: !11944)
!12005 = !DILocation(line: 6540, column: 3, scope: !11944)
!12006 = !DILocation(line: 6540, column: 8, scope: !11944)
!12007 = !DILocation(line: 6540, column: 17, scope: !11944)
!12008 = !DILocation(line: 6541, column: 3, scope: !11944)
!12009 = !DILocation(line: 6541, column: 8, scope: !11944)
!12010 = !DILocation(line: 6541, column: 17, scope: !11944)
!12011 = !DILocation(line: 6542, column: 3, scope: !11944)
!12012 = !DILocation(line: 6542, column: 8, scope: !11944)
!12013 = !DILocation(line: 6542, column: 17, scope: !11944)
!12014 = !DILocation(line: 6543, column: 3, scope: !11944)
!12015 = !DILocation(line: 6543, column: 8, scope: !11944)
!12016 = !DILocation(line: 6543, column: 20, scope: !11944)
!12017 = !DILocation(line: 6544, column: 3, scope: !11944)
!12018 = !DILocation(line: 6544, column: 8, scope: !11944)
!12019 = !DILocation(line: 6544, column: 23, scope: !11944)
!12020 = !DILocation(line: 6545, column: 3, scope: !11944)
!12021 = !DILocation(line: 6545, column: 7, scope: !11944)
!12022 = !DILocation(line: 6545, column: 18, scope: !11944)
!12023 = !DILocation(line: 6546, column: 3, scope: !11944)
!12024 = !DILocation(line: 6546, column: 7, scope: !11944)
!12025 = !DILocation(line: 6546, column: 15, scope: !11944)
!12026 = !DILocation(line: 6547, column: 3, scope: !11944)
!12027 = !DILocation(line: 6547, column: 7, scope: !11944)
!12028 = !DILocation(line: 6547, column: 16, scope: !11944)
!12029 = !DILocation(line: 6548, column: 3, scope: !11944)
!12030 = !DILocation(line: 6552, column: 3, scope: !11944)
!12031 = !DILocation(line: 6552, column: 8, scope: !11944)
!12032 = !DILocation(line: 6552, column: 14, scope: !11944)
!12033 = !DILocation(line: 6553, column: 3, scope: !11944)
!12034 = !DILocation(line: 6553, column: 8, scope: !11944)
!12035 = !DILocation(line: 6553, column: 16, scope: !11944)
!12036 = !DILocation(line: 6554, column: 3, scope: !11944)
!12037 = !DILocation(line: 6554, column: 8, scope: !11944)
!12038 = !DILocation(line: 6554, column: 17, scope: !11944)
!12039 = !DILocation(line: 6555, column: 3, scope: !11944)
!12040 = !DILocation(line: 6555, column: 8, scope: !11944)
!12041 = !DILocation(line: 6555, column: 13, scope: !11944)
!12042 = !DILocation(line: 6556, column: 3, scope: !11944)
!12043 = !DILocation(line: 6556, column: 8, scope: !11944)
!12044 = !DILocation(line: 6556, column: 14, scope: !11944)
!12045 = !DILocation(line: 6557, column: 3, scope: !11944)
!12046 = !DILocation(line: 6557, column: 8, scope: !11944)
!12047 = !DILocation(line: 6557, column: 16, scope: !11944)
!12048 = !DILocation(line: 6558, column: 3, scope: !11944)
!12049 = !DILocation(line: 6558, column: 8, scope: !11944)
!12050 = !DILocation(line: 6558, column: 17, scope: !11944)
!12051 = !DILocation(line: 6559, column: 3, scope: !11944)
!12052 = !DILocation(line: 6559, column: 8, scope: !11944)
!12053 = !DILocation(line: 6559, column: 17, scope: !11944)
!12054 = !DILocation(line: 6560, column: 3, scope: !11944)
!12055 = !DILocation(line: 6560, column: 8, scope: !11944)
!12056 = !DILocation(line: 6560, column: 17, scope: !11944)
!12057 = !DILocation(line: 6561, column: 3, scope: !11944)
!12058 = !DILocation(line: 6561, column: 8, scope: !11944)
!12059 = !DILocation(line: 6561, column: 20, scope: !11944)
!12060 = !DILocation(line: 6562, column: 3, scope: !11944)
!12061 = !DILocation(line: 6562, column: 8, scope: !11944)
!12062 = !DILocation(line: 6562, column: 23, scope: !11944)
!12063 = !DILocation(line: 6563, column: 3, scope: !11944)
!12064 = !DILocation(line: 6563, column: 7, scope: !11944)
!12065 = !DILocation(line: 6563, column: 18, scope: !11944)
!12066 = !DILocation(line: 6564, column: 3, scope: !11944)
!12067 = !DILocation(line: 6564, column: 7, scope: !11944)
!12068 = !DILocation(line: 6564, column: 15, scope: !11944)
!12069 = !DILocation(line: 6565, column: 3, scope: !11944)
!12070 = !DILocation(line: 6565, column: 7, scope: !11944)
!12071 = !DILocation(line: 6565, column: 16, scope: !11944)
!12072 = !DILocation(line: 6566, column: 3, scope: !11944)
!12073 = !DILocation(line: 6569, column: 7, scope: !11944)
!12074 = !DILocation(line: 6570, column: 3, scope: !11944)
!12075 = !DILocation(line: 6570, column: 3, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12077, file: !3, line: 6570, column: 3)
!12077 = distinct !DILexicalBlock(scope: !11944, file: !3, line: 6570, column: 3)
!12078 = !DILocation(line: 6570, column: 3, scope: !12077)
!12079 = !DILocation(line: 6571, column: 3, scope: !11944)
!12080 = !DILocation(line: 6574, column: 9, scope: !11930)
!12081 = !DILocation(line: 6574, column: 2, scope: !11930)
!12082 = distinct !DISubprogram(name: "rtl_fw_init", scope: !3, file: !3, line: 6587, type: !10384, scopeLine: 6588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12083 = !DILocalVariable(name: "tp", arg: 1, scope: !12082, file: !3, line: 6587, type: !10280)
!12084 = !DILocation(line: 6587, column: 38, scope: !12082)
!12085 = !DILocalVariable(name: "rtl_fw", scope: !12082, file: !3, line: 6589, type: !12086)
!12086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10422, size: 64)
!12087 = !DILocation(line: 6589, column: 17, scope: !12082)
!12088 = !DILocation(line: 6589, column: 27, scope: !12082)
!12089 = !DILocation(line: 6589, column: 31, scope: !12082)
!12090 = !DILocation(line: 6591, column: 10, scope: !12082)
!12091 = !DILocation(line: 6591, column: 14, scope: !12082)
!12092 = !DILocation(line: 6591, column: 2, scope: !12082)
!12093 = !DILocation(line: 6593, column: 3, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12082, file: !3, line: 6591, column: 23)
!12095 = !DILocation(line: 6593, column: 11, scope: !12094)
!12096 = !DILocation(line: 6593, column: 20, scope: !12094)
!12097 = !DILocation(line: 6594, column: 3, scope: !12094)
!12098 = !DILocation(line: 6594, column: 11, scope: !12094)
!12099 = !DILocation(line: 6594, column: 19, scope: !12094)
!12100 = !DILocation(line: 6595, column: 3, scope: !12094)
!12101 = !DILocation(line: 6595, column: 11, scope: !12094)
!12102 = !DILocation(line: 6595, column: 20, scope: !12094)
!12103 = !DILocation(line: 6596, column: 3, scope: !12094)
!12104 = !DILocation(line: 6598, column: 3, scope: !12094)
!12105 = !DILocation(line: 6598, column: 11, scope: !12094)
!12106 = !DILocation(line: 6598, column: 20, scope: !12094)
!12107 = !DILocation(line: 6599, column: 3, scope: !12094)
!12108 = !DILocation(line: 6599, column: 11, scope: !12094)
!12109 = !DILocation(line: 6599, column: 19, scope: !12094)
!12110 = !DILocation(line: 6600, column: 3, scope: !12094)
!12111 = !DILocation(line: 6600, column: 11, scope: !12094)
!12112 = !DILocation(line: 6600, column: 20, scope: !12094)
!12113 = !DILocation(line: 6601, column: 3, scope: !12094)
!12114 = !DILocation(line: 6603, column: 3, scope: !12094)
!12115 = !DILocation(line: 6603, column: 11, scope: !12094)
!12116 = !DILocation(line: 6603, column: 20, scope: !12094)
!12117 = !DILocation(line: 6604, column: 3, scope: !12094)
!12118 = !DILocation(line: 6604, column: 11, scope: !12094)
!12119 = !DILocation(line: 6604, column: 20, scope: !12094)
!12120 = !DILocation(line: 6605, column: 3, scope: !12094)
!12121 = !DILocation(line: 6607, column: 3, scope: !12094)
!12122 = !DILocation(line: 6607, column: 11, scope: !12094)
!12123 = !DILocation(line: 6607, column: 20, scope: !12094)
!12124 = !DILocation(line: 6608, column: 3, scope: !12094)
!12125 = !DILocation(line: 6608, column: 11, scope: !12094)
!12126 = !DILocation(line: 6608, column: 19, scope: !12094)
!12127 = !DILocation(line: 6609, column: 3, scope: !12094)
!12128 = !DILocation(line: 6609, column: 11, scope: !12094)
!12129 = !DILocation(line: 6609, column: 20, scope: !12094)
!12130 = !DILocation(line: 6610, column: 3, scope: !12094)
!12131 = !DILocation(line: 6612, column: 3, scope: !12094)
!12132 = !DILocation(line: 6615, column: 2, scope: !12082)
!12133 = distinct !DISubprogram(name: "__init_work", scope: !1885, file: !1885, line: 215, type: !12134, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12134 = !DISubroutineType(types: !12135)
!12135 = !{null, !1894, !72}
!12136 = !DILocalVariable(name: "work", arg: 1, scope: !12133, file: !1885, line: 215, type: !1894)
!12137 = !DILocation(line: 215, column: 52, scope: !12133)
!12138 = !DILocalVariable(name: "onstack", arg: 2, scope: !12133, file: !1885, line: 215, type: !72)
!12139 = !DILocation(line: 215, column: 62, scope: !12133)
!12140 = !DILocation(line: 215, column: 73, scope: !12133)
!12141 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !12142, file: !12142, line: 33, type: !12143, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12142 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!12143 = !DISubroutineType(types: !12144)
!12144 = !{null, !369}
!12145 = !DILocalVariable(name: "list", arg: 1, scope: !12141, file: !12142, line: 33, type: !369)
!12146 = !DILocation(line: 33, column: 53, scope: !12141)
!12147 = !DILocation(line: 35, column: 2, scope: !12141)
!12148 = !DILocation(line: 35, column: 2, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12141, file: !12142, line: 35, column: 2)
!12150 = !DILocation(line: 35, column: 2, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12149, file: !12142, line: 35, column: 2)
!12152 = !DILocation(line: 35, column: 2, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12149, file: !12142, line: 35, column: 2)
!12154 = !DILocation(line: 36, column: 15, scope: !12141)
!12155 = !DILocation(line: 36, column: 2, scope: !12141)
!12156 = !DILocation(line: 36, column: 8, scope: !12141)
!12157 = !DILocation(line: 36, column: 13, scope: !12141)
!12158 = !DILocation(line: 37, column: 1, scope: !12141)
!12159 = distinct !DISubprogram(name: "rtl_work_func_t", scope: !3, file: !3, line: 5135, type: !1892, scopeLine: 5136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12160 = !DILocalVariable(name: "work", arg: 1, scope: !12159, file: !3, line: 5135, type: !1894)
!12161 = !DILocation(line: 5135, column: 49, scope: !12159)
!12162 = !DILocalVariable(name: "tp", scope: !12159, file: !3, line: 5137, type: !10280)
!12163 = !DILocation(line: 5137, column: 16, scope: !12159)
!12164 = !DILocalVariable(name: "__mptr", scope: !12165, file: !3, line: 5137, type: !647)
!12165 = distinct !DILexicalBlock(scope: !12159, file: !3, line: 5137, column: 21)
!12166 = !DILocation(line: 5137, column: 21, scope: !12165)
!12167 = !DILocation(line: 5137, column: 21, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12165, file: !3, line: 5137, column: 21)
!12169 = !DILocation(line: 5142, column: 32, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12159, file: !3, line: 5142, column: 6)
!12171 = !DILocation(line: 5142, column: 36, scope: !12170)
!12172 = !DILocation(line: 5142, column: 6, scope: !12170)
!12173 = !DILocation(line: 5142, column: 43, scope: !12170)
!12174 = !DILocation(line: 5142, column: 61, scope: !12170)
!12175 = !DILocation(line: 5142, column: 65, scope: !12170)
!12176 = !DILocation(line: 5142, column: 47, scope: !12170)
!12177 = !DILocation(line: 5142, column: 6, scope: !12159)
!12178 = !DILocation(line: 5143, column: 3, scope: !12170)
!12179 = !DILocation(line: 5145, column: 31, scope: !12180)
!12180 = distinct !DILexicalBlock(scope: !12159, file: !3, line: 5145, column: 6)
!12181 = !DILocation(line: 5145, column: 35, scope: !12180)
!12182 = !DILocation(line: 5145, column: 6, scope: !12180)
!12183 = !DILocation(line: 5145, column: 41, scope: !12180)
!12184 = !DILocation(line: 5145, column: 6, scope: !12159)
!12185 = !DILocation(line: 5146, column: 3, scope: !12180)
!12186 = !DILocation(line: 5148, column: 30, scope: !12187)
!12187 = distinct !DILexicalBlock(scope: !12159, file: !3, line: 5148, column: 6)
!12188 = !DILocation(line: 5148, column: 34, scope: !12187)
!12189 = !DILocation(line: 5148, column: 7, scope: !12187)
!12190 = !DILocation(line: 5148, column: 6, scope: !12159)
!12191 = !DILocation(line: 5149, column: 3, scope: !12187)
!12192 = !DILocation(line: 5151, column: 22, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12159, file: !3, line: 5151, column: 6)
!12194 = !DILocation(line: 5151, column: 26, scope: !12193)
!12195 = !DILocation(line: 5151, column: 7, scope: !12193)
!12196 = !DILocation(line: 5151, column: 6, scope: !12159)
!12197 = !DILocation(line: 5152, column: 26, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12193, file: !3, line: 5151, column: 36)
!12199 = !DILocation(line: 5152, column: 30, scope: !12198)
!12200 = !DILocation(line: 5152, column: 3, scope: !12198)
!12201 = !DILocation(line: 5153, column: 3, scope: !12198)
!12202 = !DILocation(line: 5156, column: 44, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12159, file: !3, line: 5156, column: 6)
!12204 = !DILocation(line: 5156, column: 48, scope: !12203)
!12205 = !DILocation(line: 5156, column: 6, scope: !12203)
!12206 = !DILocation(line: 5156, column: 6, scope: !12159)
!12207 = !DILocation(line: 5157, column: 15, scope: !12203)
!12208 = !DILocation(line: 5157, column: 3, scope: !12203)
!12209 = !DILocation(line: 5159, column: 47, scope: !12210)
!12210 = distinct !DILexicalBlock(scope: !12159, file: !3, line: 5159, column: 6)
!12211 = !DILocation(line: 5159, column: 51, scope: !12210)
!12212 = !DILocation(line: 5159, column: 6, scope: !12210)
!12213 = !DILocation(line: 5159, column: 6, scope: !12159)
!12214 = !DILocation(line: 5160, column: 24, scope: !12210)
!12215 = !DILocation(line: 5160, column: 28, scope: !12210)
!12216 = !DILocation(line: 5160, column: 3, scope: !12210)
!12217 = !DILocation(line: 5163, column: 44, scope: !12218)
!12218 = distinct !DILexicalBlock(scope: !12159, file: !3, line: 5163, column: 6)
!12219 = !DILocation(line: 5163, column: 48, scope: !12218)
!12220 = !DILocation(line: 5163, column: 6, scope: !12218)
!12221 = !DILocation(line: 5163, column: 55, scope: !12218)
!12222 = !DILocation(line: 5164, column: 23, scope: !12218)
!12223 = !DILocation(line: 5164, column: 27, scope: !12218)
!12224 = !DILocation(line: 5164, column: 6, scope: !12218)
!12225 = !DILocation(line: 5163, column: 6, scope: !12159)
!12226 = !DILocation(line: 5165, column: 21, scope: !12218)
!12227 = !DILocation(line: 5165, column: 25, scope: !12218)
!12228 = !DILocation(line: 5165, column: 3, scope: !12218)
!12229 = !DILocation(line: 5167, column: 16, scope: !12159)
!12230 = !DILocation(line: 5167, column: 20, scope: !12159)
!12231 = !DILocation(line: 5167, column: 2, scope: !12159)
!12232 = !DILabel(scope: !12159, name: "out1", file: !3, line: 5169)
!12233 = !DILocation(line: 5169, column: 1, scope: !12159)
!12234 = !DILocation(line: 5170, column: 27, scope: !12159)
!12235 = !DILocation(line: 5170, column: 31, scope: !12159)
!12236 = !DILocation(line: 5170, column: 2, scope: !12159)
!12237 = !DILocation(line: 5171, column: 1, scope: !12159)
!12238 = distinct !DISubprogram(name: "rtl_hw_phy_work_func_t", scope: !3, file: !3, line: 5173, type: !1892, scopeLine: 5174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12239 = !DILocalVariable(name: "work", arg: 1, scope: !12238, file: !3, line: 5173, type: !1894)
!12240 = !DILocation(line: 5173, column: 56, scope: !12238)
!12241 = !DILocalVariable(name: "tp", scope: !12238, file: !3, line: 5175, type: !10280)
!12242 = !DILocation(line: 5175, column: 16, scope: !12238)
!12243 = !DILocalVariable(name: "__mptr", scope: !12244, file: !3, line: 5175, type: !647)
!12244 = distinct !DILexicalBlock(scope: !12238, file: !3, line: 5175, column: 21)
!12245 = !DILocation(line: 5175, column: 21, scope: !12244)
!12246 = !DILocation(line: 5175, column: 21, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12244, file: !3, line: 5175, column: 21)
!12248 = !DILocation(line: 5177, column: 32, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12238, file: !3, line: 5177, column: 6)
!12250 = !DILocation(line: 5177, column: 36, scope: !12249)
!12251 = !DILocation(line: 5177, column: 6, scope: !12249)
!12252 = !DILocation(line: 5177, column: 6, scope: !12238)
!12253 = !DILocation(line: 5178, column: 3, scope: !12249)
!12254 = !DILocation(line: 5180, column: 31, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !12238, file: !3, line: 5180, column: 6)
!12256 = !DILocation(line: 5180, column: 35, scope: !12255)
!12257 = !DILocation(line: 5180, column: 6, scope: !12255)
!12258 = !DILocation(line: 5180, column: 41, scope: !12255)
!12259 = !DILocation(line: 5180, column: 6, scope: !12238)
!12260 = !DILocation(line: 5181, column: 3, scope: !12255)
!12261 = !DILocation(line: 5183, column: 14, scope: !12238)
!12262 = !DILocation(line: 5183, column: 18, scope: !12238)
!12263 = !DILocation(line: 5183, column: 2, scope: !12238)
!12264 = !DILocation(line: 5185, column: 31, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12238, file: !3, line: 5185, column: 6)
!12266 = !DILocation(line: 5185, column: 6, scope: !12265)
!12267 = !DILocation(line: 5185, column: 35, scope: !12265)
!12268 = !DILocation(line: 5185, column: 46, scope: !12265)
!12269 = !DILocation(line: 5185, column: 49, scope: !12265)
!12270 = !DILocation(line: 5185, column: 53, scope: !12265)
!12271 = !DILocation(line: 5185, column: 60, scope: !12265)
!12272 = !DILocation(line: 5185, column: 6, scope: !12238)
!12273 = !DILocation(line: 5186, column: 3, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12265, file: !3, line: 5185, column: 67)
!12275 = !DILocation(line: 5186, column: 7, scope: !12274)
!12276 = !DILocation(line: 5186, column: 14, scope: !12274)
!12277 = !DILocation(line: 5186, column: 20, scope: !12274)
!12278 = !DILocation(line: 5187, column: 3, scope: !12274)
!12279 = !DILocation(line: 5187, column: 7, scope: !12274)
!12280 = !DILocation(line: 5187, column: 14, scope: !12274)
!12281 = !DILocation(line: 5187, column: 17, scope: !12274)
!12282 = !DILocation(line: 5191, column: 22, scope: !12274)
!12283 = !DILocation(line: 5191, column: 39, scope: !12274)
!12284 = !DILocation(line: 5191, column: 43, scope: !12274)
!12285 = !DILocation(line: 5191, column: 3, scope: !12274)
!12286 = !DILocation(line: 5192, column: 3, scope: !12274)
!12287 = !DILocation(line: 5195, column: 2, scope: !12238)
!12288 = !DILocation(line: 5195, column: 6, scope: !12238)
!12289 = !DILocation(line: 5195, column: 14, scope: !12238)
!12290 = !DILocation(line: 5195, column: 25, scope: !12238)
!12291 = !DILocation(line: 5197, column: 20, scope: !12238)
!12292 = !DILocation(line: 5197, column: 24, scope: !12238)
!12293 = !DILocation(line: 5197, column: 28, scope: !12238)
!12294 = !DILocation(line: 5197, column: 37, scope: !12238)
!12295 = !DILocation(line: 5197, column: 41, scope: !12238)
!12296 = !DILocation(line: 5197, column: 48, scope: !12238)
!12297 = !DILocation(line: 5197, column: 52, scope: !12238)
!12298 = !DILocation(line: 5198, column: 6, scope: !12238)
!12299 = !DILocation(line: 5198, column: 10, scope: !12238)
!12300 = !DILocation(line: 5197, column: 2, scope: !12238)
!12301 = !DILabel(scope: !12238, name: "ignore_once", file: !3, line: 5200)
!12302 = !DILocation(line: 5200, column: 1, scope: !12238)
!12303 = !DILocation(line: 5201, column: 16, scope: !12238)
!12304 = !DILocation(line: 5201, column: 20, scope: !12238)
!12305 = !DILocation(line: 5201, column: 2, scope: !12238)
!12306 = !DILocation(line: 5203, column: 27, scope: !12238)
!12307 = !DILocation(line: 5203, column: 31, scope: !12238)
!12308 = !DILocation(line: 5203, column: 2, scope: !12238)
!12309 = !DILocation(line: 5204, column: 1, scope: !12238)
!12310 = distinct !DISubprogram(name: "bottom_half", scope: !3, file: !3, line: 2413, type: !10368, scopeLine: 2414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12311 = !DILocalVariable(name: "data", arg: 1, scope: !12310, file: !3, line: 2413, type: !394)
!12312 = !DILocation(line: 2413, column: 39, scope: !12310)
!12313 = !DILocalVariable(name: "tp", scope: !12310, file: !3, line: 2415, type: !10280)
!12314 = !DILocation(line: 2415, column: 16, scope: !12310)
!12315 = !DILocation(line: 2417, column: 23, scope: !12310)
!12316 = !DILocation(line: 2417, column: 7, scope: !12310)
!12317 = !DILocation(line: 2417, column: 5, scope: !12310)
!12318 = !DILocation(line: 2419, column: 32, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12310, file: !3, line: 2419, column: 6)
!12320 = !DILocation(line: 2419, column: 36, scope: !12319)
!12321 = !DILocation(line: 2419, column: 6, scope: !12319)
!12322 = !DILocation(line: 2419, column: 6, scope: !12310)
!12323 = !DILocation(line: 2420, column: 3, scope: !12319)
!12324 = !DILocation(line: 2422, column: 30, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12310, file: !3, line: 2422, column: 6)
!12326 = !DILocation(line: 2422, column: 34, scope: !12325)
!12327 = !DILocation(line: 2422, column: 7, scope: !12325)
!12328 = !DILocation(line: 2422, column: 6, scope: !12310)
!12329 = !DILocation(line: 2423, column: 3, scope: !12325)
!12330 = !DILocation(line: 2427, column: 24, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12310, file: !3, line: 2427, column: 6)
!12332 = !DILocation(line: 2427, column: 28, scope: !12331)
!12333 = !DILocation(line: 2427, column: 7, scope: !12331)
!12334 = !DILocation(line: 2427, column: 6, scope: !12310)
!12335 = !DILocation(line: 2428, column: 3, scope: !12331)
!12336 = !DILocation(line: 2430, column: 31, scope: !12310)
!12337 = !DILocation(line: 2430, column: 35, scope: !12310)
!12338 = !DILocation(line: 2430, column: 2, scope: !12310)
!12339 = !DILocation(line: 2432, column: 12, scope: !12310)
!12340 = !DILocation(line: 2432, column: 2, scope: !12310)
!12341 = !DILocation(line: 2433, column: 1, scope: !12310)
!12342 = distinct !DISubprogram(name: "tasklet_disable", scope: !9833, file: !9833, line: 701, type: !10372, scopeLine: 702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12343 = !DILocalVariable(name: "t", arg: 1, scope: !12342, file: !9833, line: 701, type: !10359)
!12344 = !DILocation(line: 701, column: 59, scope: !12342)
!12345 = !DILocation(line: 703, column: 25, scope: !12342)
!12346 = !DILocation(line: 703, column: 2, scope: !12342)
!12347 = !DILocation(line: 704, column: 2, scope: !12342)
!12348 = !DILocation(line: 704, column: 2, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12342, file: !9833, line: 704, column: 2)
!12350 = !DILocation(line: 705, column: 2, scope: !12342)
!12351 = !{i32 -2140640121}
!12352 = !DILocation(line: 706, column: 1, scope: !12342)
!12353 = distinct !DISubprogram(name: "set_bit", scope: !12354, file: !12354, line: 26, type: !12355, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12354 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!12355 = !DISubroutineType(types: !12356)
!12356 = !{null, !590, !12357}
!12357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10463, size: 64)
!12358 = !DILocalVariable(name: "nr", arg: 1, scope: !12359, file: !12360, line: 52, type: !590)
!12359 = distinct !DISubprogram(name: "arch_set_bit", scope: !12360, file: !12360, line: 52, type: !12355, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12360 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!12361 = !DILocation(line: 52, column: 19, scope: !12359, inlinedAt: !12362)
!12362 = distinct !DILocation(line: 29, column: 2, scope: !12353)
!12363 = !DILocalVariable(name: "addr", arg: 2, scope: !12359, file: !12360, line: 52, type: !12357)
!12364 = !DILocation(line: 52, column: 47, scope: !12359, inlinedAt: !12362)
!12365 = !DILocalVariable(name: "v", arg: 1, scope: !12366, file: !12367, line: 84, type: !12370)
!12366 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !12367, file: !12367, line: 84, type: !12368, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12367 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!12368 = !DISubroutineType(types: !12369)
!12369 = !{null, !12370, !671}
!12370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12371, size: 64)
!12371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12372)
!12372 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!12373 = !DILocation(line: 84, column: 74, scope: !12366, inlinedAt: !12374)
!12374 = distinct !DILocation(line: 28, column: 2, scope: !12353)
!12375 = !DILocalVariable(name: "size", arg: 2, scope: !12366, file: !12367, line: 84, type: !671)
!12376 = !DILocation(line: 84, column: 84, scope: !12366, inlinedAt: !12374)
!12377 = !DILocalVariable(name: "nr", arg: 1, scope: !12353, file: !12354, line: 26, type: !590)
!12378 = !DILocation(line: 26, column: 33, scope: !12353)
!12379 = !DILocalVariable(name: "addr", arg: 2, scope: !12353, file: !12354, line: 26, type: !12357)
!12380 = !DILocation(line: 26, column: 61, scope: !12353)
!12381 = !DILocation(line: 28, column: 26, scope: !12353)
!12382 = !DILocation(line: 28, column: 33, scope: !12353)
!12383 = !DILocation(line: 28, column: 31, scope: !12353)
!12384 = !DILocation(line: 86, column: 20, scope: !12366, inlinedAt: !12374)
!12385 = !DILocation(line: 86, column: 23, scope: !12366, inlinedAt: !12374)
!12386 = !DILocation(line: 86, column: 2, scope: !12366, inlinedAt: !12374)
!12387 = !DILocation(line: 87, column: 2, scope: !12366, inlinedAt: !12374)
!12388 = !DILocation(line: 29, column: 15, scope: !12353)
!12389 = !DILocation(line: 29, column: 19, scope: !12353)
!12390 = !DILocation(line: 54, column: 27, scope: !12391, inlinedAt: !12362)
!12391 = distinct !DILexicalBlock(scope: !12359, file: !12360, line: 54, column: 6)
!12392 = !DILocation(line: 54, column: 6, scope: !12391, inlinedAt: !12362)
!12393 = !DILocation(line: 54, column: 6, scope: !12359, inlinedAt: !12362)
!12394 = !DILocation(line: 56, column: 6, scope: !12395, inlinedAt: !12362)
!12395 = distinct !DILexicalBlock(scope: !12391, file: !12360, line: 54, column: 32)
!12396 = !DILocation(line: 57, column: 12, scope: !12395, inlinedAt: !12362)
!12397 = !DILocation(line: 55, column: 3, scope: !12395, inlinedAt: !12362)
!12398 = !{i32 -2147022292}
!12399 = !DILocation(line: 59, column: 2, scope: !12395, inlinedAt: !12362)
!12400 = !DILocation(line: 61, column: 8, scope: !12401, inlinedAt: !12362)
!12401 = distinct !DILexicalBlock(scope: !12391, file: !12360, line: 59, column: 9)
!12402 = !DILocation(line: 61, column: 32, scope: !12401, inlinedAt: !12362)
!12403 = !DILocation(line: 60, column: 3, scope: !12401, inlinedAt: !12362)
!12404 = !{i32 -2147022160}
!12405 = !DILocation(line: 30, column: 1, scope: !12353)
!12406 = distinct !DISubprogram(name: "netif_set_gso_max_size", scope: !71, file: !71, line: 4852, type: !7767, scopeLine: 4854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12407 = !DILocalVariable(name: "dev", arg: 1, scope: !12406, file: !71, line: 4852, type: !372)
!12408 = !DILocation(line: 4852, column: 62, scope: !12406)
!12409 = !DILocalVariable(name: "size", arg: 2, scope: !12406, file: !71, line: 4853, type: !7)
!12410 = !DILocation(line: 4853, column: 21, scope: !12406)
!12411 = !DILocation(line: 4855, column: 22, scope: !12406)
!12412 = !DILocation(line: 4855, column: 2, scope: !12406)
!12413 = !DILocation(line: 4855, column: 7, scope: !12406)
!12414 = !DILocation(line: 4855, column: 20, scope: !12406)
!12415 = !DILocation(line: 4856, column: 1, scope: !12406)
!12416 = distinct !DISubprogram(name: "read_mii_word", scope: !3, file: !3, line: 1358, type: !7859, scopeLine: 1359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12417 = !DILocalVariable(name: "netdev", arg: 1, scope: !12416, file: !3, line: 1358, type: !372)
!12418 = !DILocation(line: 1358, column: 45, scope: !12416)
!12419 = !DILocalVariable(name: "phy_id", arg: 2, scope: !12416, file: !3, line: 1358, type: !72)
!12420 = !DILocation(line: 1358, column: 57, scope: !12416)
!12421 = !DILocalVariable(name: "reg", arg: 3, scope: !12416, file: !3, line: 1358, type: !72)
!12422 = !DILocation(line: 1358, column: 69, scope: !12416)
!12423 = !DILocalVariable(name: "tp", scope: !12416, file: !3, line: 1360, type: !10280)
!12424 = !DILocation(line: 1360, column: 16, scope: !12416)
!12425 = !DILocation(line: 1360, column: 33, scope: !12416)
!12426 = !DILocation(line: 1360, column: 21, scope: !12416)
!12427 = !DILocalVariable(name: "ret", scope: !12416, file: !3, line: 1361, type: !72)
!12428 = !DILocation(line: 1361, column: 6, scope: !12416)
!12429 = !DILocation(line: 1363, column: 32, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12416, file: !3, line: 1363, column: 6)
!12431 = !DILocation(line: 1363, column: 36, scope: !12430)
!12432 = !DILocation(line: 1363, column: 6, scope: !12430)
!12433 = !DILocation(line: 1363, column: 6, scope: !12416)
!12434 = !DILocation(line: 1364, column: 3, scope: !12430)
!12435 = !DILocation(line: 1366, column: 6, scope: !12436)
!12436 = distinct !DILexicalBlock(scope: !12416, file: !3, line: 1366, column: 6)
!12437 = !DILocation(line: 1366, column: 13, scope: !12436)
!12438 = !DILocation(line: 1366, column: 6, scope: !12416)
!12439 = !DILocation(line: 1367, column: 3, scope: !12436)
!12440 = !DILocation(line: 1369, column: 24, scope: !12416)
!12441 = !DILocation(line: 1369, column: 28, scope: !12416)
!12442 = !DILocation(line: 1369, column: 8, scope: !12416)
!12443 = !DILocation(line: 1369, column: 6, scope: !12416)
!12444 = !DILocation(line: 1371, column: 9, scope: !12416)
!12445 = !DILocation(line: 1371, column: 2, scope: !12416)
!12446 = !DILocation(line: 1372, column: 1, scope: !12416)
!12447 = distinct !DISubprogram(name: "write_mii_word", scope: !3, file: !3, line: 1375, type: !10351, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12448 = !DILocalVariable(name: "netdev", arg: 1, scope: !12447, file: !3, line: 1375, type: !372)
!12449 = !DILocation(line: 1375, column: 40, scope: !12447)
!12450 = !DILocalVariable(name: "phy_id", arg: 2, scope: !12447, file: !3, line: 1375, type: !72)
!12451 = !DILocation(line: 1375, column: 52, scope: !12447)
!12452 = !DILocalVariable(name: "reg", arg: 3, scope: !12447, file: !3, line: 1375, type: !72)
!12453 = !DILocation(line: 1375, column: 64, scope: !12447)
!12454 = !DILocalVariable(name: "val", arg: 4, scope: !12447, file: !3, line: 1375, type: !72)
!12455 = !DILocation(line: 1375, column: 73, scope: !12447)
!12456 = !DILocalVariable(name: "tp", scope: !12447, file: !3, line: 1377, type: !10280)
!12457 = !DILocation(line: 1377, column: 16, scope: !12447)
!12458 = !DILocation(line: 1377, column: 33, scope: !12447)
!12459 = !DILocation(line: 1377, column: 21, scope: !12447)
!12460 = !DILocation(line: 1379, column: 32, scope: !12461)
!12461 = distinct !DILexicalBlock(scope: !12447, file: !3, line: 1379, column: 6)
!12462 = !DILocation(line: 1379, column: 36, scope: !12461)
!12463 = !DILocation(line: 1379, column: 6, scope: !12461)
!12464 = !DILocation(line: 1379, column: 6, scope: !12447)
!12465 = !DILocation(line: 1380, column: 3, scope: !12461)
!12466 = !DILocation(line: 1382, column: 6, scope: !12467)
!12467 = distinct !DILexicalBlock(scope: !12447, file: !3, line: 1382, column: 6)
!12468 = !DILocation(line: 1382, column: 13, scope: !12467)
!12469 = !DILocation(line: 1382, column: 6, scope: !12447)
!12470 = !DILocation(line: 1383, column: 3, scope: !12467)
!12471 = !DILocation(line: 1385, column: 19, scope: !12447)
!12472 = !DILocation(line: 1385, column: 23, scope: !12447)
!12473 = !DILocation(line: 1385, column: 28, scope: !12447)
!12474 = !DILocation(line: 1385, column: 2, scope: !12447)
!12475 = !DILocation(line: 1386, column: 1, scope: !12447)
!12476 = distinct !DISubprogram(name: "rtl_can_wakeup", scope: !3, file: !3, line: 3317, type: !10397, scopeLine: 3318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12477 = !DILocalVariable(name: "tp", arg: 1, scope: !12476, file: !3, line: 3317, type: !10280)
!12478 = !DILocation(line: 3317, column: 42, scope: !12476)
!12479 = !DILocalVariable(name: "udev", scope: !12476, file: !3, line: 3319, type: !9907)
!12480 = !DILocation(line: 3319, column: 21, scope: !12476)
!12481 = !DILocation(line: 3319, column: 28, scope: !12476)
!12482 = !DILocation(line: 3319, column: 32, scope: !12476)
!12483 = !DILocation(line: 3321, column: 10, scope: !12476)
!12484 = !DILocation(line: 3321, column: 16, scope: !12476)
!12485 = !DILocation(line: 3321, column: 27, scope: !12476)
!12486 = !DILocation(line: 3321, column: 32, scope: !12476)
!12487 = !DILocation(line: 3321, column: 45, scope: !12476)
!12488 = !DILocation(line: 3321, column: 9, scope: !12476)
!12489 = !DILocation(line: 3321, column: 2, scope: !12476)
!12490 = distinct !DISubprogram(name: "__rtl_set_wol", scope: !3, file: !3, line: 3000, type: !12491, scopeLine: 3001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12491 = !DISubroutineType(types: !12492)
!12492 = !{null, !10280, !784}
!12493 = !DILocalVariable(name: "tp", arg: 1, scope: !12490, file: !3, line: 3000, type: !10280)
!12494 = !DILocation(line: 3000, column: 41, scope: !12490)
!12495 = !DILocalVariable(name: "wolopts", arg: 2, scope: !12490, file: !3, line: 3000, type: !784)
!12496 = !DILocation(line: 3000, column: 49, scope: !12490)
!12497 = !DILocalVariable(name: "ocp_data", scope: !12490, file: !3, line: 3002, type: !784)
!12498 = !DILocation(line: 3002, column: 6, scope: !12490)
!12499 = !DILocation(line: 3004, column: 17, scope: !12490)
!12500 = !DILocation(line: 3004, column: 2, scope: !12490)
!12501 = !DILocation(line: 3006, column: 27, scope: !12490)
!12502 = !DILocation(line: 3006, column: 13, scope: !12490)
!12503 = !DILocation(line: 3006, column: 11, scope: !12490)
!12504 = !DILocation(line: 3007, column: 11, scope: !12490)
!12505 = !DILocation(line: 3008, column: 6, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12490, file: !3, line: 3008, column: 6)
!12507 = !DILocation(line: 3008, column: 14, scope: !12506)
!12508 = !DILocation(line: 3008, column: 6, scope: !12490)
!12509 = !DILocation(line: 3009, column: 12, scope: !12506)
!12510 = !DILocation(line: 3009, column: 3, scope: !12506)
!12511 = !DILocation(line: 3010, column: 17, scope: !12490)
!12512 = !DILocation(line: 3010, column: 49, scope: !12490)
!12513 = !DILocation(line: 3010, column: 2, scope: !12490)
!12514 = !DILocation(line: 3012, column: 27, scope: !12490)
!12515 = !DILocation(line: 3012, column: 13, scope: !12490)
!12516 = !DILocation(line: 3012, column: 11, scope: !12490)
!12517 = !DILocation(line: 3013, column: 11, scope: !12490)
!12518 = !DILocation(line: 3014, column: 6, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12490, file: !3, line: 3014, column: 6)
!12520 = !DILocation(line: 3014, column: 14, scope: !12519)
!12521 = !DILocation(line: 3014, column: 6, scope: !12490)
!12522 = !DILocation(line: 3015, column: 12, scope: !12519)
!12523 = !DILocation(line: 3015, column: 3, scope: !12519)
!12524 = !DILocation(line: 3016, column: 6, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12490, file: !3, line: 3016, column: 6)
!12526 = !DILocation(line: 3016, column: 14, scope: !12525)
!12527 = !DILocation(line: 3016, column: 6, scope: !12490)
!12528 = !DILocation(line: 3017, column: 12, scope: !12525)
!12529 = !DILocation(line: 3017, column: 3, scope: !12525)
!12530 = !DILocation(line: 3018, column: 6, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12490, file: !3, line: 3018, column: 6)
!12532 = !DILocation(line: 3018, column: 14, scope: !12531)
!12533 = !DILocation(line: 3018, column: 6, scope: !12490)
!12534 = !DILocation(line: 3019, column: 12, scope: !12531)
!12535 = !DILocation(line: 3019, column: 3, scope: !12531)
!12536 = !DILocation(line: 3020, column: 17, scope: !12490)
!12537 = !DILocation(line: 3020, column: 48, scope: !12490)
!12538 = !DILocation(line: 3020, column: 2, scope: !12490)
!12539 = !DILocation(line: 3022, column: 17, scope: !12490)
!12540 = !DILocation(line: 3022, column: 2, scope: !12490)
!12541 = !DILocation(line: 3024, column: 27, scope: !12490)
!12542 = !DILocation(line: 3024, column: 13, scope: !12490)
!12543 = !DILocation(line: 3024, column: 11, scope: !12490)
!12544 = !DILocation(line: 3025, column: 11, scope: !12490)
!12545 = !DILocation(line: 3026, column: 6, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12490, file: !3, line: 3026, column: 6)
!12547 = !DILocation(line: 3026, column: 14, scope: !12546)
!12548 = !DILocation(line: 3026, column: 6, scope: !12490)
!12549 = !DILocation(line: 3027, column: 12, scope: !12546)
!12550 = !DILocation(line: 3027, column: 3, scope: !12546)
!12551 = !DILocation(line: 3028, column: 17, scope: !12490)
!12552 = !DILocation(line: 3028, column: 48, scope: !12490)
!12553 = !DILocation(line: 3028, column: 2, scope: !12490)
!12554 = !DILocation(line: 3030, column: 6, scope: !12555)
!12555 = distinct !DILexicalBlock(scope: !12490, file: !3, line: 3030, column: 6)
!12556 = !DILocation(line: 3030, column: 14, scope: !12555)
!12557 = !DILocation(line: 3030, column: 6, scope: !12490)
!12558 = !DILocation(line: 3031, column: 29, scope: !12555)
!12559 = !DILocation(line: 3031, column: 33, scope: !12555)
!12560 = !DILocation(line: 3031, column: 39, scope: !12555)
!12561 = !DILocation(line: 3031, column: 3, scope: !12555)
!12562 = !DILocation(line: 3033, column: 29, scope: !12555)
!12563 = !DILocation(line: 3033, column: 33, scope: !12555)
!12564 = !DILocation(line: 3033, column: 39, scope: !12555)
!12565 = !DILocation(line: 3033, column: 3, scope: !12555)
!12566 = !DILocation(line: 3034, column: 1, scope: !12490)
!12567 = distinct !DISubprogram(name: "__rtl_get_wol", scope: !3, file: !3, line: 2976, type: !12568, scopeLine: 2977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12568 = !DISubroutineType(types: !12569)
!12569 = !{!784, !10280}
!12570 = !DILocalVariable(name: "tp", arg: 1, scope: !12567, file: !3, line: 2976, type: !10280)
!12571 = !DILocation(line: 2976, column: 40, scope: !12567)
!12572 = !DILocalVariable(name: "ocp_data", scope: !12567, file: !3, line: 2978, type: !784)
!12573 = !DILocation(line: 2978, column: 6, scope: !12567)
!12574 = !DILocalVariable(name: "wolopts", scope: !12567, file: !3, line: 2979, type: !784)
!12575 = !DILocation(line: 2979, column: 6, scope: !12567)
!12576 = !DILocation(line: 2981, column: 27, scope: !12567)
!12577 = !DILocation(line: 2981, column: 13, scope: !12567)
!12578 = !DILocation(line: 2981, column: 11, scope: !12567)
!12579 = !DILocation(line: 2982, column: 6, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12567, file: !3, line: 2982, column: 6)
!12581 = !DILocation(line: 2982, column: 15, scope: !12580)
!12582 = !DILocation(line: 2982, column: 6, scope: !12567)
!12583 = !DILocation(line: 2983, column: 11, scope: !12580)
!12584 = !DILocation(line: 2983, column: 3, scope: !12580)
!12585 = !DILocation(line: 2985, column: 27, scope: !12567)
!12586 = !DILocation(line: 2985, column: 13, scope: !12567)
!12587 = !DILocation(line: 2985, column: 11, scope: !12567)
!12588 = !DILocation(line: 2986, column: 6, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12567, file: !3, line: 2986, column: 6)
!12590 = !DILocation(line: 2986, column: 15, scope: !12589)
!12591 = !DILocation(line: 2986, column: 6, scope: !12567)
!12592 = !DILocation(line: 2987, column: 11, scope: !12589)
!12593 = !DILocation(line: 2987, column: 3, scope: !12589)
!12594 = !DILocation(line: 2988, column: 6, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12567, file: !3, line: 2988, column: 6)
!12596 = !DILocation(line: 2988, column: 15, scope: !12595)
!12597 = !DILocation(line: 2988, column: 6, scope: !12567)
!12598 = !DILocation(line: 2989, column: 11, scope: !12595)
!12599 = !DILocation(line: 2989, column: 3, scope: !12595)
!12600 = !DILocation(line: 2990, column: 6, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12567, file: !3, line: 2990, column: 6)
!12602 = !DILocation(line: 2990, column: 15, scope: !12601)
!12603 = !DILocation(line: 2990, column: 6, scope: !12567)
!12604 = !DILocation(line: 2991, column: 11, scope: !12601)
!12605 = !DILocation(line: 2991, column: 3, scope: !12601)
!12606 = !DILocation(line: 2993, column: 27, scope: !12567)
!12607 = !DILocation(line: 2993, column: 13, scope: !12567)
!12608 = !DILocation(line: 2993, column: 11, scope: !12567)
!12609 = !DILocation(line: 2994, column: 6, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12567, file: !3, line: 2994, column: 6)
!12611 = !DILocation(line: 2994, column: 15, scope: !12610)
!12612 = !DILocation(line: 2994, column: 6, scope: !12567)
!12613 = !DILocation(line: 2995, column: 11, scope: !12610)
!12614 = !DILocation(line: 2995, column: 3, scope: !12610)
!12615 = !DILocation(line: 2997, column: 9, scope: !12567)
!12616 = !DILocation(line: 2997, column: 2, scope: !12567)
!12617 = distinct !DISubprogram(name: "queue_delayed_work", scope: !1885, file: !1885, line: 518, type: !12618, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12618 = !DISubroutineType(types: !12619)
!12619 = !{!617, !2900, !12620, !394}
!12620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2895, size: 64)
!12621 = !DILocalVariable(name: "wq", arg: 1, scope: !12617, file: !1885, line: 518, type: !2900)
!12622 = !DILocation(line: 518, column: 64, scope: !12617)
!12623 = !DILocalVariable(name: "dwork", arg: 2, scope: !12617, file: !1885, line: 519, type: !12620)
!12624 = !DILocation(line: 519, column: 32, scope: !12617)
!12625 = !DILocalVariable(name: "delay", arg: 3, scope: !12617, file: !1885, line: 520, type: !394)
!12626 = !DILocation(line: 520, column: 25, scope: !12617)
!12627 = !DILocation(line: 522, column: 49, scope: !12617)
!12628 = !DILocation(line: 522, column: 53, scope: !12617)
!12629 = !DILocation(line: 522, column: 60, scope: !12617)
!12630 = !DILocation(line: 522, column: 9, scope: !12617)
!12631 = !DILocation(line: 522, column: 2, scope: !12617)
!12632 = distinct !DISubprogram(name: "set_ethernet_addr", scope: !3, file: !3, line: 1537, type: !10384, scopeLine: 1538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12633 = !DILocalVariable(name: "tp", arg: 1, scope: !12632, file: !3, line: 1537, type: !10280)
!12634 = !DILocation(line: 1537, column: 44, scope: !12632)
!12635 = !DILocalVariable(name: "dev", scope: !12632, file: !3, line: 1539, type: !372)
!12636 = !DILocation(line: 1539, column: 21, scope: !12632)
!12637 = !DILocation(line: 1539, column: 27, scope: !12632)
!12638 = !DILocation(line: 1539, column: 31, scope: !12632)
!12639 = !DILocalVariable(name: "sa", scope: !12632, file: !3, line: 1540, type: !596)
!12640 = !DILocation(line: 1540, column: 18, scope: !12632)
!12641 = !DILocalVariable(name: "ret", scope: !12632, file: !3, line: 1541, type: !72)
!12642 = !DILocation(line: 1541, column: 6, scope: !12632)
!12643 = !DILocation(line: 1543, column: 32, scope: !12632)
!12644 = !DILocation(line: 1543, column: 8, scope: !12632)
!12645 = !DILocation(line: 1543, column: 6, scope: !12632)
!12646 = !DILocation(line: 1544, column: 6, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12632, file: !3, line: 1544, column: 6)
!12648 = !DILocation(line: 1544, column: 10, scope: !12647)
!12649 = !DILocation(line: 1544, column: 6, scope: !12632)
!12650 = !DILocation(line: 1545, column: 10, scope: !12647)
!12651 = !DILocation(line: 1545, column: 3, scope: !12647)
!12652 = !DILocation(line: 1547, column: 6, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12632, file: !3, line: 1547, column: 6)
!12654 = !DILocation(line: 1547, column: 10, scope: !12653)
!12655 = !DILocation(line: 1547, column: 18, scope: !12653)
!12656 = !DILocation(line: 1547, column: 6, scope: !12632)
!12657 = !DILocation(line: 1548, column: 19, scope: !12653)
!12658 = !DILocation(line: 1548, column: 24, scope: !12653)
!12659 = !DILocation(line: 1548, column: 37, scope: !12653)
!12660 = !DILocation(line: 1548, column: 34, scope: !12653)
!12661 = !DILocation(line: 1548, column: 3, scope: !12653)
!12662 = !DILocation(line: 1550, column: 33, scope: !12653)
!12663 = !DILocation(line: 1550, column: 38, scope: !12653)
!12664 = !DILocation(line: 1550, column: 9, scope: !12653)
!12665 = !DILocation(line: 1550, column: 7, scope: !12653)
!12666 = !DILocation(line: 1552, column: 9, scope: !12632)
!12667 = !DILocation(line: 1552, column: 2, scope: !12632)
!12668 = !DILocation(line: 1553, column: 1, scope: !12632)
!12669 = distinct !DISubprogram(name: "usb_set_intfdata", scope: !9505, file: !9505, line: 268, type: !12670, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12670 = !DISubroutineType(types: !12671)
!12671 = !{null, !10100, !647}
!12672 = !DILocalVariable(name: "intf", arg: 1, scope: !12669, file: !9505, line: 268, type: !10100)
!12673 = !DILocation(line: 268, column: 59, scope: !12669)
!12674 = !DILocalVariable(name: "data", arg: 2, scope: !12669, file: !9505, line: 268, type: !647)
!12675 = !DILocation(line: 268, column: 71, scope: !12669)
!12676 = !DILocation(line: 270, column: 19, scope: !12669)
!12677 = !DILocation(line: 270, column: 25, scope: !12669)
!12678 = !DILocation(line: 270, column: 30, scope: !12669)
!12679 = !DILocation(line: 270, column: 2, scope: !12669)
!12680 = !DILocation(line: 271, column: 1, scope: !12669)
!12681 = distinct !DISubprogram(name: "r8152_poll", scope: !3, file: !3, line: 2435, type: !10295, scopeLine: 2436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12682 = !DILocalVariable(name: "napi", arg: 1, scope: !12681, file: !3, line: 2435, type: !10297)
!12683 = !DILocation(line: 2435, column: 43, scope: !12681)
!12684 = !DILocalVariable(name: "budget", arg: 2, scope: !12681, file: !3, line: 2435, type: !72)
!12685 = !DILocation(line: 2435, column: 53, scope: !12681)
!12686 = !DILocalVariable(name: "tp", scope: !12681, file: !3, line: 2437, type: !10280)
!12687 = !DILocation(line: 2437, column: 16, scope: !12681)
!12688 = !DILocalVariable(name: "__mptr", scope: !12689, file: !3, line: 2437, type: !647)
!12689 = distinct !DILexicalBlock(scope: !12681, file: !3, line: 2437, column: 21)
!12690 = !DILocation(line: 2437, column: 21, scope: !12689)
!12691 = !DILocation(line: 2437, column: 21, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12689, file: !3, line: 2437, column: 21)
!12693 = !DILocalVariable(name: "work_done", scope: !12681, file: !3, line: 2438, type: !72)
!12694 = !DILocation(line: 2438, column: 6, scope: !12681)
!12695 = !DILocation(line: 2440, column: 24, scope: !12681)
!12696 = !DILocation(line: 2440, column: 28, scope: !12681)
!12697 = !DILocation(line: 2440, column: 14, scope: !12681)
!12698 = !DILocation(line: 2440, column: 12, scope: !12681)
!12699 = !DILocation(line: 2442, column: 6, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12681, file: !3, line: 2442, column: 6)
!12701 = !DILocation(line: 2442, column: 18, scope: !12700)
!12702 = !DILocation(line: 2442, column: 16, scope: !12700)
!12703 = !DILocation(line: 2442, column: 6, scope: !12681)
!12704 = !DILocation(line: 2443, column: 27, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12706, file: !3, line: 2443, column: 7)
!12706 = distinct !DILexicalBlock(scope: !12700, file: !3, line: 2442, column: 26)
!12707 = !DILocation(line: 2443, column: 33, scope: !12705)
!12708 = !DILocation(line: 2443, column: 8, scope: !12705)
!12709 = !DILocation(line: 2443, column: 7, scope: !12706)
!12710 = !DILocation(line: 2444, column: 4, scope: !12705)
!12711 = !DILocation(line: 2445, column: 20, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12706, file: !3, line: 2445, column: 7)
!12713 = !DILocation(line: 2445, column: 24, scope: !12712)
!12714 = !DILocation(line: 2445, column: 8, scope: !12712)
!12715 = !DILocation(line: 2445, column: 7, scope: !12706)
!12716 = !DILocation(line: 2446, column: 18, scope: !12712)
!12717 = !DILocation(line: 2446, column: 4, scope: !12712)
!12718 = !DILocation(line: 2447, column: 2, scope: !12706)
!12719 = !DILabel(scope: !12681, name: "out", file: !3, line: 2449)
!12720 = !DILocation(line: 2449, column: 1, scope: !12681)
!12721 = !DILocation(line: 2450, column: 9, scope: !12681)
!12722 = !DILocation(line: 2450, column: 2, scope: !12681)
!12723 = distinct !DISubprogram(name: "__create_pipe", scope: !9505, file: !9505, line: 1945, type: !12724, scopeLine: 1947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12724 = !DISubroutineType(types: !12725)
!12725 = !{!7, !9907, !7}
!12726 = !DILocalVariable(name: "dev", arg: 1, scope: !12723, file: !9505, line: 1945, type: !9907)
!12727 = !DILocation(line: 1945, column: 61, scope: !12723)
!12728 = !DILocalVariable(name: "endpoint", arg: 2, scope: !12723, file: !9505, line: 1946, type: !7)
!12729 = !DILocation(line: 1946, column: 16, scope: !12723)
!12730 = !DILocation(line: 1948, column: 10, scope: !12723)
!12731 = !DILocation(line: 1948, column: 15, scope: !12723)
!12732 = !DILocation(line: 1948, column: 22, scope: !12723)
!12733 = !DILocation(line: 1948, column: 31, scope: !12723)
!12734 = !DILocation(line: 1948, column: 40, scope: !12723)
!12735 = !DILocation(line: 1948, column: 28, scope: !12723)
!12736 = !DILocation(line: 1948, column: 2, scope: !12723)
!12737 = distinct !DISubprogram(name: "get_order", scope: !12738, file: !12738, line: 29, type: !12739, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12738 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!12739 = !DISubroutineType(types: !12740)
!12740 = !{!72, !394}
!12741 = !DILocalVariable(name: "x", arg: 1, scope: !12742, file: !12360, line: 366, type: !415)
!12742 = distinct !DISubprogram(name: "fls64", scope: !12360, file: !12360, line: 366, type: !12743, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12743 = !DISubroutineType(types: !12744)
!12744 = !{!72, !415}
!12745 = !DILocation(line: 366, column: 40, scope: !12742, inlinedAt: !12746)
!12746 = distinct !DILocation(line: 46, column: 9, scope: !12737)
!12747 = !DILocalVariable(name: "bitpos", scope: !12742, file: !12360, line: 368, type: !72)
!12748 = !DILocation(line: 368, column: 6, scope: !12742, inlinedAt: !12746)
!12749 = !DILocalVariable(name: "size", arg: 1, scope: !12737, file: !12738, line: 29, type: !394)
!12750 = !DILocation(line: 29, column: 63, scope: !12737)
!12751 = !DILocation(line: 31, column: 27, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12737, file: !12738, line: 31, column: 6)
!12753 = !DILocation(line: 31, column: 6, scope: !12752)
!12754 = !DILocation(line: 31, column: 6, scope: !12737)
!12755 = !DILocation(line: 32, column: 8, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12757, file: !12738, line: 32, column: 7)
!12757 = distinct !DILexicalBlock(scope: !12752, file: !12738, line: 31, column: 34)
!12758 = !DILocation(line: 32, column: 7, scope: !12757)
!12759 = !DILocation(line: 33, column: 4, scope: !12756)
!12760 = !DILocation(line: 35, column: 7, scope: !12761)
!12761 = distinct !DILexicalBlock(scope: !12757, file: !12738, line: 35, column: 7)
!12762 = !DILocation(line: 35, column: 12, scope: !12761)
!12763 = !DILocation(line: 35, column: 7, scope: !12757)
!12764 = !DILocation(line: 36, column: 4, scope: !12761)
!12765 = !DILocation(line: 38, column: 10, scope: !12757)
!12766 = !DILocation(line: 38, column: 28, scope: !12757)
!12767 = !DILocation(line: 38, column: 41, scope: !12757)
!12768 = !DILocation(line: 38, column: 3, scope: !12757)
!12769 = !DILocation(line: 41, column: 6, scope: !12737)
!12770 = !DILocation(line: 42, column: 7, scope: !12737)
!12771 = !DILocation(line: 46, column: 15, scope: !12737)
!12772 = !DILocation(line: 374, column: 2, scope: !12742, inlinedAt: !12746)
!12773 = !DILocation(line: 376, column: 14, scope: !12742, inlinedAt: !12746)
!12774 = !{i32 429929}
!12775 = !DILocation(line: 377, column: 9, scope: !12742, inlinedAt: !12746)
!12776 = !DILocation(line: 377, column: 16, scope: !12742, inlinedAt: !12746)
!12777 = !DILocation(line: 46, column: 2, scope: !12737)
!12778 = !DILocation(line: 48, column: 1, scope: !12737)
!12779 = distinct !DISubprogram(name: "__ilog2_u64", scope: !12780, file: !12780, line: 30, type: !12781, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12780 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!12781 = !DISubroutineType(types: !12782)
!12782 = !{!72, !413}
!12783 = !DILocation(line: 366, column: 40, scope: !12742, inlinedAt: !12784)
!12784 = distinct !DILocation(line: 32, column: 9, scope: !12779)
!12785 = !DILocation(line: 368, column: 6, scope: !12742, inlinedAt: !12784)
!12786 = !DILocalVariable(name: "n", arg: 1, scope: !12779, file: !12780, line: 30, type: !413)
!12787 = !DILocation(line: 30, column: 21, scope: !12779)
!12788 = !DILocation(line: 32, column: 15, scope: !12779)
!12789 = !DILocation(line: 374, column: 2, scope: !12742, inlinedAt: !12784)
!12790 = !DILocation(line: 376, column: 14, scope: !12742, inlinedAt: !12784)
!12791 = !DILocation(line: 377, column: 9, scope: !12742, inlinedAt: !12784)
!12792 = !DILocation(line: 377, column: 16, scope: !12742, inlinedAt: !12784)
!12793 = !DILocation(line: 32, column: 18, scope: !12779)
!12794 = !DILocation(line: 32, column: 2, scope: !12779)
!12795 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !12796, file: !12796, line: 137, type: !12797, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12796 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!12797 = !DISubroutineType(types: !12798)
!12798 = !{!647, !2348, !2340, !671, !2067}
!12799 = !DILocalVariable(name: "s", arg: 1, scope: !12795, file: !12796, line: 137, type: !2348)
!12800 = !DILocation(line: 137, column: 54, scope: !12795)
!12801 = !DILocalVariable(name: "object", arg: 2, scope: !12795, file: !12796, line: 137, type: !2340)
!12802 = !DILocation(line: 137, column: 69, scope: !12795)
!12803 = !DILocalVariable(name: "size", arg: 3, scope: !12795, file: !12796, line: 138, type: !671)
!12804 = !DILocation(line: 138, column: 12, scope: !12795)
!12805 = !DILocalVariable(name: "flags", arg: 4, scope: !12795, file: !12796, line: 138, type: !2067)
!12806 = !DILocation(line: 138, column: 24, scope: !12795)
!12807 = !DILocation(line: 140, column: 17, scope: !12795)
!12808 = !DILocation(line: 140, column: 2, scope: !12795)
!12809 = distinct !DISubprogram(name: "r8152b_init", scope: !3, file: !3, line: 5331, type: !10380, scopeLine: 5332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12810 = !DILocalVariable(name: "tp", arg: 1, scope: !12809, file: !3, line: 5331, type: !10280)
!12811 = !DILocation(line: 5331, column: 39, scope: !12809)
!12812 = !DILocalVariable(name: "ocp_data", scope: !12809, file: !3, line: 5333, type: !784)
!12813 = !DILocation(line: 5333, column: 6, scope: !12809)
!12814 = !DILocalVariable(name: "data", scope: !12809, file: !3, line: 5334, type: !1115)
!12815 = !DILocation(line: 5334, column: 6, scope: !12809)
!12816 = !DILocation(line: 5336, column: 32, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12809, file: !3, line: 5336, column: 6)
!12818 = !DILocation(line: 5336, column: 36, scope: !12817)
!12819 = !DILocation(line: 5336, column: 6, scope: !12817)
!12820 = !DILocation(line: 5336, column: 6, scope: !12809)
!12821 = !DILocation(line: 5337, column: 3, scope: !12817)
!12822 = !DILocation(line: 5339, column: 25, scope: !12809)
!12823 = !DILocation(line: 5339, column: 9, scope: !12809)
!12824 = !DILocation(line: 5339, column: 7, scope: !12809)
!12825 = !DILocation(line: 5340, column: 6, scope: !12826)
!12826 = distinct !DILexicalBlock(scope: !12809, file: !3, line: 5340, column: 6)
!12827 = !DILocation(line: 5340, column: 11, scope: !12826)
!12828 = !DILocation(line: 5340, column: 6, scope: !12809)
!12829 = !DILocation(line: 5341, column: 8, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 5340, column: 25)
!12831 = !DILocation(line: 5342, column: 20, scope: !12830)
!12832 = !DILocation(line: 5342, column: 34, scope: !12830)
!12833 = !DILocation(line: 5342, column: 3, scope: !12830)
!12834 = !DILocation(line: 5343, column: 2, scope: !12830)
!12835 = !DILocation(line: 5345, column: 17, scope: !12809)
!12836 = !DILocation(line: 5345, column: 2, scope: !12809)
!12837 = !DILocation(line: 5347, column: 6, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12809, file: !3, line: 5347, column: 6)
!12839 = !DILocation(line: 5347, column: 10, scope: !12838)
!12840 = !DILocation(line: 5347, column: 18, scope: !12838)
!12841 = !DILocation(line: 5347, column: 6, scope: !12809)
!12842 = !DILocation(line: 5348, column: 28, scope: !12843)
!12843 = distinct !DILexicalBlock(scope: !12838, file: !3, line: 5347, column: 33)
!12844 = !DILocation(line: 5348, column: 14, scope: !12843)
!12845 = !DILocation(line: 5348, column: 12, scope: !12843)
!12846 = !DILocation(line: 5349, column: 12, scope: !12843)
!12847 = !DILocation(line: 5350, column: 18, scope: !12843)
!12848 = !DILocation(line: 5350, column: 53, scope: !12843)
!12849 = !DILocation(line: 5350, column: 3, scope: !12843)
!12850 = !DILocation(line: 5351, column: 2, scope: !12843)
!12851 = !DILocation(line: 5353, column: 21, scope: !12809)
!12852 = !DILocation(line: 5353, column: 2, scope: !12809)
!12853 = !DILocation(line: 5355, column: 27, scope: !12809)
!12854 = !DILocation(line: 5355, column: 13, scope: !12809)
!12855 = !DILocation(line: 5355, column: 11, scope: !12809)
!12856 = !DILocation(line: 5356, column: 11, scope: !12809)
!12857 = !DILocation(line: 5357, column: 17, scope: !12809)
!12858 = !DILocation(line: 5357, column: 48, scope: !12809)
!12859 = !DILocation(line: 5357, column: 2, scope: !12809)
!12860 = !DILocation(line: 5358, column: 28, scope: !12809)
!12861 = !DILocation(line: 5358, column: 13, scope: !12809)
!12862 = !DILocation(line: 5358, column: 11, scope: !12809)
!12863 = !DILocation(line: 5359, column: 11, scope: !12809)
!12864 = !DILocation(line: 5360, column: 11, scope: !12809)
!12865 = !DILocation(line: 5361, column: 18, scope: !12809)
!12866 = !DILocation(line: 5361, column: 54, scope: !12809)
!12867 = !DILocation(line: 5361, column: 2, scope: !12809)
!12868 = !DILocation(line: 5362, column: 11, scope: !12809)
!12869 = !DILocation(line: 5364, column: 17, scope: !12809)
!12870 = !DILocation(line: 5364, column: 54, scope: !12809)
!12871 = !DILocation(line: 5364, column: 2, scope: !12809)
!12872 = !DILocation(line: 5366, column: 18, scope: !12809)
!12873 = !DILocation(line: 5366, column: 2, scope: !12809)
!12874 = !DILocation(line: 5369, column: 27, scope: !12809)
!12875 = !DILocation(line: 5369, column: 13, scope: !12809)
!12876 = !DILocation(line: 5369, column: 11, scope: !12809)
!12877 = !DILocation(line: 5370, column: 11, scope: !12809)
!12878 = !DILocation(line: 5371, column: 17, scope: !12809)
!12879 = !DILocation(line: 5371, column: 49, scope: !12809)
!12880 = !DILocation(line: 5371, column: 2, scope: !12809)
!12881 = !DILocation(line: 5372, column: 1, scope: !12809)
!12882 = distinct !DISubprogram(name: "rtl8152_enable", scope: !3, file: !3, line: 2792, type: !10384, scopeLine: 2793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12883 = !DILocalVariable(name: "tp", arg: 1, scope: !12882, file: !3, line: 2792, type: !10280)
!12884 = !DILocation(line: 2792, column: 41, scope: !12882)
!12885 = !DILocation(line: 2794, column: 32, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12882, file: !3, line: 2794, column: 6)
!12887 = !DILocation(line: 2794, column: 36, scope: !12886)
!12888 = !DILocation(line: 2794, column: 6, scope: !12886)
!12889 = !DILocation(line: 2794, column: 6, scope: !12882)
!12890 = !DILocation(line: 2795, column: 3, scope: !12886)
!12891 = !DILocation(line: 2797, column: 14, scope: !12882)
!12892 = !DILocation(line: 2797, column: 2, scope: !12882)
!12893 = !DILocation(line: 2798, column: 19, scope: !12882)
!12894 = !DILocation(line: 2798, column: 2, scope: !12882)
!12895 = !DILocation(line: 2800, column: 20, scope: !12882)
!12896 = !DILocation(line: 2800, column: 9, scope: !12882)
!12897 = !DILocation(line: 2800, column: 2, scope: !12882)
!12898 = !DILocation(line: 2801, column: 1, scope: !12882)
!12899 = distinct !DISubprogram(name: "rtl8152_disable", scope: !3, file: !3, line: 4259, type: !10380, scopeLine: 4260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12900 = !DILocalVariable(name: "tp", arg: 1, scope: !12899, file: !3, line: 4259, type: !10280)
!12901 = !DILocation(line: 4259, column: 43, scope: !12899)
!12902 = !DILocation(line: 4261, column: 17, scope: !12899)
!12903 = !DILocation(line: 4261, column: 2, scope: !12899)
!12904 = !DILocation(line: 4262, column: 14, scope: !12899)
!12905 = !DILocation(line: 4262, column: 2, scope: !12899)
!12906 = !DILocation(line: 4263, column: 17, scope: !12899)
!12907 = !DILocation(line: 4263, column: 2, scope: !12899)
!12908 = !DILocation(line: 4264, column: 1, scope: !12899)
!12909 = distinct !DISubprogram(name: "rtl8152_up", scope: !3, file: !3, line: 4943, type: !10380, scopeLine: 4944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12910 = !DILocalVariable(name: "tp", arg: 1, scope: !12909, file: !3, line: 4943, type: !10280)
!12911 = !DILocation(line: 4943, column: 38, scope: !12909)
!12912 = !DILocation(line: 4945, column: 32, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12909, file: !3, line: 4945, column: 6)
!12914 = !DILocation(line: 4945, column: 36, scope: !12913)
!12915 = !DILocation(line: 4945, column: 6, scope: !12913)
!12916 = !DILocation(line: 4945, column: 6, scope: !12909)
!12917 = !DILocation(line: 4946, column: 3, scope: !12913)
!12918 = !DILocation(line: 4948, column: 17, scope: !12909)
!12919 = !DILocation(line: 4948, column: 2, scope: !12909)
!12920 = !DILocation(line: 4949, column: 18, scope: !12909)
!12921 = !DILocation(line: 4949, column: 2, scope: !12909)
!12922 = !DILocation(line: 4950, column: 17, scope: !12909)
!12923 = !DILocation(line: 4950, column: 2, scope: !12909)
!12924 = !DILocation(line: 4951, column: 1, scope: !12909)
!12925 = distinct !DISubprogram(name: "rtl8152_down", scope: !3, file: !3, line: 4953, type: !10380, scopeLine: 4954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12926 = !DILocalVariable(name: "tp", arg: 1, scope: !12925, file: !3, line: 4953, type: !10280)
!12927 = !DILocation(line: 4953, column: 40, scope: !12925)
!12928 = !DILocation(line: 4955, column: 32, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12925, file: !3, line: 4955, column: 6)
!12930 = !DILocation(line: 4955, column: 36, scope: !12929)
!12931 = !DILocation(line: 4955, column: 6, scope: !12929)
!12932 = !DILocation(line: 4955, column: 6, scope: !12925)
!12933 = !DILocation(line: 4956, column: 22, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !12929, file: !3, line: 4955, column: 44)
!12935 = !DILocation(line: 4956, column: 3, scope: !12934)
!12936 = !DILocation(line: 4957, column: 3, scope: !12934)
!12937 = !DILocation(line: 4960, column: 21, scope: !12925)
!12938 = !DILocation(line: 4960, column: 2, scope: !12925)
!12939 = !DILocation(line: 4961, column: 17, scope: !12925)
!12940 = !DILocation(line: 4961, column: 2, scope: !12925)
!12941 = !DILocation(line: 4962, column: 19, scope: !12925)
!12942 = !DILocation(line: 4962, column: 2, scope: !12925)
!12943 = !DILocation(line: 4963, column: 17, scope: !12925)
!12944 = !DILocation(line: 4963, column: 2, scope: !12925)
!12945 = !DILocation(line: 4964, column: 1, scope: !12925)
!12946 = distinct !DISubprogram(name: "rtl8152_unload", scope: !3, file: !3, line: 6480, type: !10380, scopeLine: 6481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12947 = !DILocalVariable(name: "tp", arg: 1, scope: !12946, file: !3, line: 6480, type: !10280)
!12948 = !DILocation(line: 6480, column: 42, scope: !12946)
!12949 = !DILocation(line: 6482, column: 32, scope: !12950)
!12950 = distinct !DILexicalBlock(scope: !12946, file: !3, line: 6482, column: 6)
!12951 = !DILocation(line: 6482, column: 36, scope: !12950)
!12952 = !DILocation(line: 6482, column: 6, scope: !12950)
!12953 = !DILocation(line: 6482, column: 6, scope: !12946)
!12954 = !DILocation(line: 6483, column: 3, scope: !12950)
!12955 = !DILocation(line: 6485, column: 6, scope: !12956)
!12956 = distinct !DILexicalBlock(scope: !12946, file: !3, line: 6485, column: 6)
!12957 = !DILocation(line: 6485, column: 10, scope: !12956)
!12958 = !DILocation(line: 6485, column: 18, scope: !12956)
!12959 = !DILocation(line: 6485, column: 6, scope: !12946)
!12960 = !DILocation(line: 6486, column: 22, scope: !12956)
!12961 = !DILocation(line: 6486, column: 3, scope: !12956)
!12962 = !DILocation(line: 6487, column: 1, scope: !12946)
!12963 = distinct !DISubprogram(name: "r8152_get_eee", scope: !3, file: !3, line: 6085, type: !10392, scopeLine: 6086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!12964 = !DILocalVariable(name: "tp", arg: 1, scope: !12963, file: !3, line: 6085, type: !10280)
!12965 = !DILocation(line: 6085, column: 40, scope: !12963)
!12966 = !DILocalVariable(name: "eee", arg: 2, scope: !12963, file: !3, line: 6085, type: !8568)
!12967 = !DILocation(line: 6085, column: 64, scope: !12963)
!12968 = !DILocalVariable(name: "lp", scope: !12963, file: !3, line: 6087, type: !784)
!12969 = !DILocation(line: 6087, column: 6, scope: !12963)
!12970 = !DILocalVariable(name: "adv", scope: !12963, file: !3, line: 6087, type: !784)
!12971 = !DILocation(line: 6087, column: 10, scope: !12963)
!12972 = !DILocalVariable(name: "supported", scope: !12963, file: !3, line: 6087, type: !784)
!12973 = !DILocation(line: 6087, column: 15, scope: !12963)
!12974 = !DILocalVariable(name: "val", scope: !12963, file: !3, line: 6088, type: !1115)
!12975 = !DILocation(line: 6088, column: 6, scope: !12963)
!12976 = !DILocation(line: 6090, column: 23, scope: !12963)
!12977 = !DILocation(line: 6090, column: 8, scope: !12963)
!12978 = !DILocation(line: 6090, column: 6, scope: !12963)
!12979 = !DILocation(line: 6091, column: 43, scope: !12963)
!12980 = !DILocation(line: 6091, column: 14, scope: !12963)
!12981 = !DILocation(line: 6091, column: 12, scope: !12963)
!12982 = !DILocation(line: 6093, column: 23, scope: !12963)
!12983 = !DILocation(line: 6093, column: 8, scope: !12963)
!12984 = !DILocation(line: 6093, column: 6, scope: !12963)
!12985 = !DILocation(line: 6094, column: 37, scope: !12963)
!12986 = !DILocation(line: 6094, column: 8, scope: !12963)
!12987 = !DILocation(line: 6094, column: 6, scope: !12963)
!12988 = !DILocation(line: 6096, column: 23, scope: !12963)
!12989 = !DILocation(line: 6096, column: 8, scope: !12963)
!12990 = !DILocation(line: 6096, column: 6, scope: !12963)
!12991 = !DILocation(line: 6097, column: 36, scope: !12963)
!12992 = !DILocation(line: 6097, column: 7, scope: !12963)
!12993 = !DILocation(line: 6097, column: 5, scope: !12963)
!12994 = !DILocation(line: 6099, column: 21, scope: !12963)
!12995 = !DILocation(line: 6099, column: 25, scope: !12963)
!12996 = !DILocation(line: 6099, column: 2, scope: !12963)
!12997 = !DILocation(line: 6099, column: 7, scope: !12963)
!12998 = !DILocation(line: 6099, column: 19, scope: !12963)
!12999 = !DILocation(line: 6100, column: 23, scope: !12963)
!13000 = !DILocation(line: 6100, column: 35, scope: !12963)
!13001 = !DILocation(line: 6100, column: 33, scope: !12963)
!13002 = !DILocation(line: 6100, column: 41, scope: !12963)
!13003 = !DILocation(line: 6100, column: 39, scope: !12963)
!13004 = !DILocation(line: 6100, column: 21, scope: !12963)
!13005 = !DILocation(line: 6100, column: 20, scope: !12963)
!13006 = !DILocation(line: 6100, column: 2, scope: !12963)
!13007 = !DILocation(line: 6100, column: 7, scope: !12963)
!13008 = !DILocation(line: 6100, column: 18, scope: !12963)
!13009 = !DILocation(line: 6101, column: 19, scope: !12963)
!13010 = !DILocation(line: 6101, column: 2, scope: !12963)
!13011 = !DILocation(line: 6101, column: 7, scope: !12963)
!13012 = !DILocation(line: 6101, column: 17, scope: !12963)
!13013 = !DILocation(line: 6102, column: 20, scope: !12963)
!13014 = !DILocation(line: 6102, column: 24, scope: !12963)
!13015 = !DILocation(line: 6102, column: 2, scope: !12963)
!13016 = !DILocation(line: 6102, column: 7, scope: !12963)
!13017 = !DILocation(line: 6102, column: 18, scope: !12963)
!13018 = !DILocation(line: 6103, column: 23, scope: !12963)
!13019 = !DILocation(line: 6103, column: 2, scope: !12963)
!13020 = !DILocation(line: 6103, column: 7, scope: !12963)
!13021 = !DILocation(line: 6103, column: 21, scope: !12963)
!13022 = !DILocation(line: 6105, column: 2, scope: !12963)
!13023 = distinct !DISubprogram(name: "r8152_set_eee", scope: !3, file: !3, line: 6108, type: !10392, scopeLine: 6109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!13024 = !DILocalVariable(name: "tp", arg: 1, scope: !13023, file: !3, line: 6108, type: !10280)
!13025 = !DILocation(line: 6108, column: 40, scope: !13023)
!13026 = !DILocalVariable(name: "eee", arg: 2, scope: !13023, file: !3, line: 6108, type: !8568)
!13027 = !DILocation(line: 6108, column: 64, scope: !13023)
!13028 = !DILocalVariable(name: "val", scope: !13023, file: !3, line: 6110, type: !1115)
!13029 = !DILocation(line: 6110, column: 6, scope: !13023)
!13030 = !DILocation(line: 6110, column: 41, scope: !13023)
!13031 = !DILocation(line: 6110, column: 46, scope: !13023)
!13032 = !DILocation(line: 6110, column: 12, scope: !13023)
!13033 = !DILocation(line: 6112, column: 15, scope: !13023)
!13034 = !DILocation(line: 6112, column: 20, scope: !13023)
!13035 = !DILocation(line: 6112, column: 2, scope: !13023)
!13036 = !DILocation(line: 6112, column: 6, scope: !13023)
!13037 = !DILocation(line: 6112, column: 13, scope: !13023)
!13038 = !DILocation(line: 6113, column: 16, scope: !13023)
!13039 = !DILocation(line: 6113, column: 2, scope: !13023)
!13040 = !DILocation(line: 6113, column: 6, scope: !13023)
!13041 = !DILocation(line: 6113, column: 14, scope: !13023)
!13042 = !DILocation(line: 6115, column: 17, scope: !13023)
!13043 = !DILocation(line: 6115, column: 21, scope: !13023)
!13044 = !DILocation(line: 6115, column: 25, scope: !13023)
!13045 = !DILocation(line: 6115, column: 2, scope: !13023)
!13046 = !DILocation(line: 6117, column: 2, scope: !13023)
!13047 = distinct !DISubprogram(name: "rtl8152_in_nway", scope: !3, file: !3, line: 5072, type: !10397, scopeLine: 5073, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!13048 = !DILocalVariable(name: "tp", arg: 1, scope: !13047, file: !3, line: 5072, type: !10280)
!13049 = !DILocation(line: 5072, column: 43, scope: !13047)
!13050 = !DILocalVariable(name: "nway_state", scope: !13047, file: !3, line: 5074, type: !1115)
!13051 = !DILocation(line: 5074, column: 6, scope: !13047)
!13052 = !DILocation(line: 5076, column: 17, scope: !13047)
!13053 = !DILocation(line: 5076, column: 2, scope: !13047)
!13054 = !DILocation(line: 5077, column: 2, scope: !13047)
!13055 = !DILocation(line: 5077, column: 6, scope: !13047)
!13056 = !DILocation(line: 5077, column: 15, scope: !13047)
!13057 = !DILocation(line: 5078, column: 17, scope: !13047)
!13058 = !DILocation(line: 5078, column: 2, scope: !13047)
!13059 = !DILocation(line: 5079, column: 29, scope: !13047)
!13060 = !DILocation(line: 5079, column: 15, scope: !13047)
!13061 = !DILocation(line: 5079, column: 13, scope: !13047)
!13062 = !DILocation(line: 5082, column: 6, scope: !13063)
!13063 = distinct !DILexicalBlock(scope: !13047, file: !3, line: 5082, column: 6)
!13064 = !DILocation(line: 5082, column: 17, scope: !13063)
!13065 = !DILocation(line: 5082, column: 6, scope: !13047)
!13066 = !DILocation(line: 5083, column: 3, scope: !13063)
!13067 = !DILocation(line: 5085, column: 3, scope: !13063)
!13068 = !DILocation(line: 5086, column: 1, scope: !13047)
!13069 = distinct !DISubprogram(name: "r8152b_hw_phy_cfg", scope: !3, file: !3, line: 4266, type: !10380, scopeLine: 4267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!13070 = !DILocalVariable(name: "tp", arg: 1, scope: !13069, file: !3, line: 4266, type: !10280)
!13071 = !DILocation(line: 4266, column: 45, scope: !13069)
!13072 = !DILocation(line: 4268, column: 25, scope: !13069)
!13073 = !DILocation(line: 4268, column: 2, scope: !13069)
!13074 = !DILocation(line: 4269, column: 17, scope: !13069)
!13075 = !DILocation(line: 4269, column: 21, scope: !13069)
!13076 = !DILocation(line: 4269, column: 25, scope: !13069)
!13077 = !DILocation(line: 4269, column: 2, scope: !13069)
!13078 = !DILocation(line: 4270, column: 17, scope: !13069)
!13079 = !DILocation(line: 4270, column: 2, scope: !13069)
!13080 = !DILocation(line: 4271, column: 19, scope: !13069)
!13081 = !DILocation(line: 4271, column: 2, scope: !13069)
!13082 = !DILocation(line: 4273, column: 22, scope: !13069)
!13083 = !DILocation(line: 4273, column: 26, scope: !13069)
!13084 = !DILocation(line: 4273, column: 2, scope: !13069)
!13085 = !DILocation(line: 4274, column: 1, scope: !13069)
!13086 = distinct !DISubprogram(name: "rtl_runtime_suspend_enable", scope: !3, file: !3, line: 3324, type: !10402, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!13087 = !DILocalVariable(name: "tp", arg: 1, scope: !13086, file: !3, line: 3324, type: !10280)
!13088 = !DILocation(line: 3324, column: 54, scope: !13086)
!13089 = !DILocalVariable(name: "enable", arg: 2, scope: !13086, file: !3, line: 3324, type: !617)
!13090 = !DILocation(line: 3324, column: 63, scope: !13086)
!13091 = !DILocation(line: 3326, column: 6, scope: !13092)
!13092 = distinct !DILexicalBlock(scope: !13086, file: !3, line: 3326, column: 6)
!13093 = !DILocation(line: 3326, column: 6, scope: !13086)
!13094 = !DILocalVariable(name: "ocp_data", scope: !13095, file: !3, line: 3327, type: !784)
!13095 = distinct !DILexicalBlock(scope: !13092, file: !3, line: 3326, column: 14)
!13096 = !DILocation(line: 3327, column: 7, scope: !13095)
!13097 = !DILocation(line: 3329, column: 17, scope: !13095)
!13098 = !DILocation(line: 3329, column: 3, scope: !13095)
!13099 = !DILocation(line: 3331, column: 18, scope: !13095)
!13100 = !DILocation(line: 3331, column: 3, scope: !13095)
!13101 = !DILocation(line: 3333, column: 28, scope: !13095)
!13102 = !DILocation(line: 3333, column: 14, scope: !13095)
!13103 = !DILocation(line: 3333, column: 12, scope: !13095)
!13104 = !DILocation(line: 3334, column: 12, scope: !13095)
!13105 = !DILocation(line: 3335, column: 18, scope: !13095)
!13106 = !DILocation(line: 3335, column: 50, scope: !13095)
!13107 = !DILocation(line: 3335, column: 3, scope: !13095)
!13108 = !DILocation(line: 3337, column: 18, scope: !13095)
!13109 = !DILocation(line: 3337, column: 3, scope: !13095)
!13110 = !DILocation(line: 3338, column: 2, scope: !13095)
!13111 = !DILocalVariable(name: "ocp_data", scope: !13112, file: !3, line: 3339, type: !784)
!13112 = distinct !DILexicalBlock(scope: !13092, file: !3, line: 3338, column: 9)
!13113 = !DILocation(line: 3339, column: 7, scope: !13112)
!13114 = !DILocation(line: 3341, column: 17, scope: !13112)
!13115 = !DILocation(line: 3341, column: 21, scope: !13112)
!13116 = !DILocation(line: 3341, column: 25, scope: !13112)
!13117 = !DILocation(line: 3341, column: 3, scope: !13112)
!13118 = !DILocation(line: 3343, column: 18, scope: !13112)
!13119 = !DILocation(line: 3343, column: 3, scope: !13112)
!13120 = !DILocation(line: 3345, column: 28, scope: !13112)
!13121 = !DILocation(line: 3345, column: 14, scope: !13112)
!13122 = !DILocation(line: 3345, column: 12, scope: !13112)
!13123 = !DILocation(line: 3346, column: 12, scope: !13112)
!13124 = !DILocation(line: 3347, column: 18, scope: !13112)
!13125 = !DILocation(line: 3347, column: 50, scope: !13112)
!13126 = !DILocation(line: 3347, column: 3, scope: !13112)
!13127 = !DILocation(line: 3349, column: 18, scope: !13112)
!13128 = !DILocation(line: 3349, column: 3, scope: !13112)
!13129 = !DILocation(line: 3351, column: 1, scope: !13086)
!13130 = distinct !DISubprogram(name: "r8153_init", scope: !3, file: !3, line: 5374, type: !10380, scopeLine: 5375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!13131 = !DILocalVariable(name: "tp", arg: 1, scope: !13130, file: !3, line: 5374, type: !10280)
!13132 = !DILocation(line: 5374, column: 38, scope: !13130)
!13133 = !DILocalVariable(name: "ocp_data", scope: !13130, file: !3, line: 5376, type: !784)
!13134 = !DILocation(line: 5376, column: 6, scope: !13130)
!13135 = !DILocalVariable(name: "data", scope: !13130, file: !3, line: 5377, type: !1115)
!13136 = !DILocation(line: 5377, column: 6, scope: !13130)
!13137 = !DILocalVariable(name: "i", scope: !13130, file: !3, line: 5378, type: !72)
!13138 = !DILocation(line: 5378, column: 6, scope: !13130)
!13139 = !DILocation(line: 5380, column: 32, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13130, file: !3, line: 5380, column: 6)
!13141 = !DILocation(line: 5380, column: 36, scope: !13140)
!13142 = !DILocation(line: 5380, column: 6, scope: !13140)
!13143 = !DILocation(line: 5380, column: 6, scope: !13130)
!13144 = !DILocation(line: 5381, column: 3, scope: !13140)
!13145 = !DILocation(line: 5383, column: 15, scope: !13130)
!13146 = !DILocation(line: 5383, column: 2, scope: !13130)
!13147 = !DILocation(line: 5385, column: 9, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !13130, file: !3, line: 5385, column: 2)
!13149 = !DILocation(line: 5385, column: 7, scope: !13148)
!13150 = !DILocation(line: 5385, column: 14, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13148, file: !3, line: 5385, column: 2)
!13152 = !DILocation(line: 5385, column: 16, scope: !13151)
!13153 = !DILocation(line: 5385, column: 2, scope: !13148)
!13154 = !DILocation(line: 5386, column: 21, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13156, file: !3, line: 5386, column: 7)
!13156 = distinct !DILexicalBlock(scope: !13151, file: !3, line: 5385, column: 28)
!13157 = !DILocation(line: 5386, column: 7, scope: !13155)
!13158 = !DILocation(line: 5386, column: 54, scope: !13155)
!13159 = !DILocation(line: 5386, column: 7, scope: !13156)
!13160 = !DILocation(line: 5388, column: 4, scope: !13155)
!13161 = !DILocation(line: 5390, column: 3, scope: !13156)
!13162 = !DILocation(line: 5391, column: 33, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !13156, file: !3, line: 5391, column: 7)
!13164 = !DILocation(line: 5391, column: 37, scope: !13163)
!13165 = !DILocation(line: 5391, column: 7, scope: !13163)
!13166 = !DILocation(line: 5391, column: 7, scope: !13156)
!13167 = !DILocation(line: 5392, column: 4, scope: !13163)
!13168 = !DILocation(line: 5393, column: 2, scope: !13156)
!13169 = !DILocation(line: 5385, column: 24, scope: !13151)
!13170 = !DILocation(line: 5385, column: 2, scope: !13151)
!13171 = distinct !{!13171, !13153, !13172}
!13172 = !DILocation(line: 5393, column: 2, scope: !13148)
!13173 = !DILocation(line: 5395, column: 26, scope: !13130)
!13174 = !DILocation(line: 5395, column: 9, scope: !13130)
!13175 = !DILocation(line: 5395, column: 7, scope: !13130)
!13176 = !DILocation(line: 5397, column: 6, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13130, file: !3, line: 5397, column: 6)
!13178 = !DILocation(line: 5397, column: 10, scope: !13177)
!13179 = !DILocation(line: 5397, column: 18, scope: !13177)
!13180 = !DILocation(line: 5397, column: 32, scope: !13177)
!13181 = !DILocation(line: 5397, column: 35, scope: !13177)
!13182 = !DILocation(line: 5397, column: 39, scope: !13177)
!13183 = !DILocation(line: 5397, column: 47, scope: !13177)
!13184 = !DILocation(line: 5397, column: 61, scope: !13177)
!13185 = !DILocation(line: 5398, column: 6, scope: !13177)
!13186 = !DILocation(line: 5398, column: 10, scope: !13177)
!13187 = !DILocation(line: 5398, column: 18, scope: !13177)
!13188 = !DILocation(line: 5397, column: 6, scope: !13130)
!13189 = !DILocation(line: 5399, column: 17, scope: !13177)
!13190 = !DILocation(line: 5399, column: 3, scope: !13177)
!13191 = !DILocation(line: 5401, column: 25, scope: !13130)
!13192 = !DILocation(line: 5401, column: 9, scope: !13130)
!13193 = !DILocation(line: 5401, column: 7, scope: !13130)
!13194 = !DILocation(line: 5402, column: 6, scope: !13195)
!13195 = distinct !DILexicalBlock(scope: !13130, file: !3, line: 5402, column: 6)
!13196 = !DILocation(line: 5402, column: 11, scope: !13195)
!13197 = !DILocation(line: 5402, column: 6, scope: !13130)
!13198 = !DILocation(line: 5403, column: 8, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13195, file: !3, line: 5402, column: 25)
!13200 = !DILocation(line: 5404, column: 20, scope: !13199)
!13201 = !DILocation(line: 5404, column: 34, scope: !13199)
!13202 = !DILocation(line: 5404, column: 3, scope: !13199)
!13203 = !DILocation(line: 5405, column: 2, scope: !13199)
!13204 = !DILocation(line: 5407, column: 26, scope: !13130)
!13205 = !DILocation(line: 5407, column: 9, scope: !13130)
!13206 = !DILocation(line: 5407, column: 7, scope: !13130)
!13207 = !DILocation(line: 5409, column: 15, scope: !13130)
!13208 = !DILocation(line: 5409, column: 2, scope: !13130)
!13209 = !DILocation(line: 5411, column: 6, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !13130, file: !3, line: 5411, column: 6)
!13211 = !DILocation(line: 5411, column: 10, scope: !13210)
!13212 = !DILocation(line: 5411, column: 18, scope: !13210)
!13213 = !DILocation(line: 5411, column: 6, scope: !13130)
!13214 = !DILocation(line: 5412, column: 28, scope: !13215)
!13215 = distinct !DILexicalBlock(scope: !13210, file: !3, line: 5411, column: 33)
!13216 = !DILocation(line: 5412, column: 14, scope: !13215)
!13217 = !DILocation(line: 5412, column: 12, scope: !13215)
!13218 = !DILocation(line: 5413, column: 12, scope: !13215)
!13219 = !DILocation(line: 5414, column: 12, scope: !13215)
!13220 = !DILocation(line: 5415, column: 18, scope: !13215)
!13221 = !DILocation(line: 5415, column: 52, scope: !13215)
!13222 = !DILocation(line: 5415, column: 3, scope: !13215)
!13223 = !DILocation(line: 5417, column: 28, scope: !13215)
!13224 = !DILocation(line: 5417, column: 14, scope: !13215)
!13225 = !DILocation(line: 5417, column: 12, scope: !13215)
!13226 = !DILocation(line: 5418, column: 12, scope: !13215)
!13227 = !DILocation(line: 5419, column: 18, scope: !13215)
!13228 = !DILocation(line: 5419, column: 49, scope: !13215)
!13229 = !DILocation(line: 5419, column: 3, scope: !13215)
!13230 = !DILocation(line: 5420, column: 2, scope: !13215)
!13231 = !DILocation(line: 5420, column: 13, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13210, file: !3, line: 5420, column: 13)
!13233 = !DILocation(line: 5420, column: 17, scope: !13232)
!13234 = !DILocation(line: 5420, column: 25, scope: !13232)
!13235 = !DILocation(line: 5420, column: 13, scope: !13210)
!13236 = !DILocation(line: 5421, column: 28, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !13232, file: !3, line: 5420, column: 40)
!13238 = !DILocation(line: 5421, column: 14, scope: !13237)
!13239 = !DILocation(line: 5421, column: 12, scope: !13237)
!13240 = !DILocation(line: 5422, column: 12, scope: !13237)
!13241 = !DILocation(line: 5423, column: 18, scope: !13237)
!13242 = !DILocation(line: 5423, column: 50, scope: !13237)
!13243 = !DILocation(line: 5423, column: 3, scope: !13237)
!13244 = !DILocation(line: 5425, column: 28, scope: !13237)
!13245 = !DILocation(line: 5425, column: 14, scope: !13237)
!13246 = !DILocation(line: 5425, column: 12, scope: !13237)
!13247 = !DILocation(line: 5426, column: 21, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !13237, file: !3, line: 5426, column: 7)
!13249 = !DILocation(line: 5426, column: 7, scope: !13248)
!13250 = !DILocation(line: 5426, column: 55, scope: !13248)
!13251 = !DILocation(line: 5426, column: 7, scope: !13237)
!13252 = !DILocation(line: 5427, column: 13, scope: !13248)
!13253 = !DILocation(line: 5427, column: 4, scope: !13248)
!13254 = !DILocation(line: 5429, column: 13, scope: !13248)
!13255 = !DILocation(line: 5430, column: 18, scope: !13237)
!13256 = !DILocation(line: 5430, column: 52, scope: !13237)
!13257 = !DILocation(line: 5430, column: 3, scope: !13237)
!13258 = !DILocation(line: 5431, column: 2, scope: !13237)
!13259 = !DILocation(line: 5431, column: 13, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13232, file: !3, line: 5431, column: 13)
!13261 = !DILocation(line: 5431, column: 17, scope: !13260)
!13262 = !DILocation(line: 5431, column: 25, scope: !13260)
!13263 = !DILocation(line: 5431, column: 13, scope: !13232)
!13264 = !DILocation(line: 5432, column: 28, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13260, file: !3, line: 5431, column: 40)
!13266 = !DILocation(line: 5432, column: 14, scope: !13265)
!13267 = !DILocation(line: 5432, column: 12, scope: !13265)
!13268 = !DILocation(line: 5433, column: 21, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13265, file: !3, line: 5433, column: 7)
!13270 = !DILocation(line: 5433, column: 7, scope: !13269)
!13271 = !DILocation(line: 5433, column: 55, scope: !13269)
!13272 = !DILocation(line: 5433, column: 7, scope: !13265)
!13273 = !DILocation(line: 5434, column: 13, scope: !13269)
!13274 = !DILocation(line: 5434, column: 4, scope: !13269)
!13275 = !DILocation(line: 5436, column: 13, scope: !13269)
!13276 = !DILocation(line: 5437, column: 18, scope: !13265)
!13277 = !DILocation(line: 5437, column: 52, scope: !13265)
!13278 = !DILocation(line: 5437, column: 3, scope: !13265)
!13279 = !DILocation(line: 5439, column: 20, scope: !13265)
!13280 = !DILocation(line: 5439, column: 3, scope: !13265)
!13281 = !DILocation(line: 5441, column: 28, scope: !13265)
!13282 = !DILocation(line: 5441, column: 14, scope: !13265)
!13283 = !DILocation(line: 5441, column: 12, scope: !13265)
!13284 = !DILocation(line: 5442, column: 25, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13265, file: !3, line: 5442, column: 7)
!13286 = !DILocation(line: 5442, column: 7, scope: !13285)
!13287 = !DILocation(line: 5442, column: 29, scope: !13285)
!13288 = !DILocation(line: 5442, column: 7, scope: !13265)
!13289 = !DILocation(line: 5443, column: 13, scope: !13285)
!13290 = !DILocation(line: 5443, column: 4, scope: !13285)
!13291 = !DILocation(line: 5445, column: 13, scope: !13285)
!13292 = !DILocation(line: 5446, column: 12, scope: !13265)
!13293 = !DILocation(line: 5447, column: 18, scope: !13265)
!13294 = !DILocation(line: 5447, column: 54, scope: !13265)
!13295 = !DILocation(line: 5447, column: 3, scope: !13265)
!13296 = !DILocation(line: 5448, column: 2, scope: !13265)
!13297 = !DILocation(line: 5450, column: 27, scope: !13130)
!13298 = !DILocation(line: 5450, column: 13, scope: !13130)
!13299 = !DILocation(line: 5450, column: 11, scope: !13130)
!13300 = !DILocation(line: 5451, column: 11, scope: !13130)
!13301 = !DILocation(line: 5452, column: 17, scope: !13130)
!13302 = !DILocation(line: 5452, column: 51, scope: !13130)
!13303 = !DILocation(line: 5452, column: 2, scope: !13130)
!13304 = !DILocation(line: 5454, column: 27, scope: !13130)
!13305 = !DILocation(line: 5454, column: 13, scope: !13130)
!13306 = !DILocation(line: 5454, column: 11, scope: !13130)
!13307 = !DILocation(line: 5455, column: 11, scope: !13130)
!13308 = !DILocation(line: 5456, column: 17, scope: !13130)
!13309 = !DILocation(line: 5456, column: 51, scope: !13130)
!13310 = !DILocation(line: 5456, column: 2, scope: !13130)
!13311 = !DILocation(line: 5458, column: 27, scope: !13130)
!13312 = !DILocation(line: 5458, column: 13, scope: !13130)
!13313 = !DILocation(line: 5458, column: 11, scope: !13130)
!13314 = !DILocation(line: 5459, column: 11, scope: !13130)
!13315 = !DILocation(line: 5460, column: 17, scope: !13130)
!13316 = !DILocation(line: 5460, column: 52, scope: !13130)
!13317 = !DILocation(line: 5460, column: 2, scope: !13130)
!13318 = !DILocation(line: 5462, column: 11, scope: !13130)
!13319 = !DILocation(line: 5463, column: 6, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13130, file: !3, line: 5463, column: 6)
!13321 = !DILocation(line: 5463, column: 10, scope: !13320)
!13322 = !DILocation(line: 5463, column: 18, scope: !13320)
!13323 = !DILocation(line: 5463, column: 32, scope: !13320)
!13324 = !DILocation(line: 5463, column: 35, scope: !13320)
!13325 = !DILocation(line: 5463, column: 39, scope: !13320)
!13326 = !DILocation(line: 5463, column: 45, scope: !13320)
!13327 = !DILocation(line: 5463, column: 51, scope: !13320)
!13328 = !DILocation(line: 5463, column: 6, scope: !13130)
!13329 = !DILocation(line: 5464, column: 12, scope: !13320)
!13330 = !DILocation(line: 5464, column: 3, scope: !13320)
!13331 = !DILocation(line: 5466, column: 12, scope: !13320)
!13332 = !DILocation(line: 5467, column: 17, scope: !13130)
!13333 = !DILocation(line: 5467, column: 49, scope: !13130)
!13334 = !DILocation(line: 5467, column: 2, scope: !13130)
!13335 = !DILocation(line: 5469, column: 27, scope: !13130)
!13336 = !DILocation(line: 5469, column: 13, scope: !13130)
!13337 = !DILocation(line: 5469, column: 11, scope: !13130)
!13338 = !DILocation(line: 5470, column: 11, scope: !13130)
!13339 = !DILocation(line: 5471, column: 11, scope: !13130)
!13340 = !DILocation(line: 5472, column: 17, scope: !13130)
!13341 = !DILocation(line: 5472, column: 50, scope: !13130)
!13342 = !DILocation(line: 5472, column: 2, scope: !13130)
!13343 = !DILocation(line: 5474, column: 17, scope: !13130)
!13344 = !DILocation(line: 5474, column: 2, scope: !13130)
!13345 = !DILocation(line: 5476, column: 21, scope: !13130)
!13346 = !DILocation(line: 5476, column: 2, scope: !13130)
!13347 = !DILocation(line: 5477, column: 29, scope: !13130)
!13348 = !DILocation(line: 5477, column: 2, scope: !13130)
!13349 = !DILocation(line: 5478, column: 15, scope: !13130)
!13350 = !DILocation(line: 5478, column: 2, scope: !13130)
!13351 = !DILocation(line: 5479, column: 20, scope: !13130)
!13352 = !DILocation(line: 5479, column: 2, scope: !13130)
!13353 = !DILocation(line: 5480, column: 17, scope: !13130)
!13354 = !DILocation(line: 5480, column: 21, scope: !13130)
!13355 = !DILocation(line: 5480, column: 2, scope: !13130)
!13356 = !DILocation(line: 5482, column: 27, scope: !13130)
!13357 = !DILocation(line: 5482, column: 13, scope: !13130)
!13358 = !DILocation(line: 5482, column: 11, scope: !13130)
!13359 = !DILocation(line: 5483, column: 11, scope: !13130)
!13360 = !DILocation(line: 5484, column: 17, scope: !13130)
!13361 = !DILocation(line: 5484, column: 48, scope: !13130)
!13362 = !DILocation(line: 5484, column: 2, scope: !13130)
!13363 = !DILocation(line: 5486, column: 27, scope: !13130)
!13364 = !DILocation(line: 5486, column: 13, scope: !13130)
!13365 = !DILocation(line: 5486, column: 11, scope: !13130)
!13366 = !DILocation(line: 5487, column: 11, scope: !13130)
!13367 = !DILocation(line: 5488, column: 17, scope: !13130)
!13368 = !DILocation(line: 5488, column: 55, scope: !13130)
!13369 = !DILocation(line: 5488, column: 2, scope: !13130)
!13370 = !DILocation(line: 5491, column: 27, scope: !13130)
!13371 = !DILocation(line: 5491, column: 13, scope: !13130)
!13372 = !DILocation(line: 5491, column: 11, scope: !13130)
!13373 = !DILocation(line: 5492, column: 11, scope: !13130)
!13374 = !DILocation(line: 5493, column: 36, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13130, file: !3, line: 5493, column: 6)
!13376 = !DILocation(line: 5493, column: 40, scope: !13375)
!13377 = !DILocation(line: 5493, column: 6, scope: !13375)
!13378 = !DILocation(line: 5493, column: 6, scope: !13130)
!13379 = !DILocation(line: 5494, column: 12, scope: !13375)
!13380 = !DILocation(line: 5494, column: 3, scope: !13375)
!13381 = !DILocation(line: 5496, column: 17, scope: !13130)
!13382 = !DILocation(line: 5496, column: 49, scope: !13130)
!13383 = !DILocation(line: 5496, column: 2, scope: !13130)
!13384 = !DILocation(line: 5498, column: 18, scope: !13130)
!13385 = !DILocation(line: 5498, column: 2, scope: !13130)
!13386 = !DILocation(line: 5500, column: 10, scope: !13130)
!13387 = !DILocation(line: 5500, column: 14, scope: !13130)
!13388 = !DILocation(line: 5500, column: 20, scope: !13130)
!13389 = !DILocation(line: 5500, column: 2, scope: !13130)
!13390 = !DILocation(line: 5503, column: 3, scope: !13391)
!13391 = distinct !DILexicalBlock(scope: !13130, file: !3, line: 5500, column: 27)
!13392 = !DILocation(line: 5503, column: 7, scope: !13391)
!13393 = !DILocation(line: 5503, column: 16, scope: !13391)
!13394 = !DILocation(line: 5504, column: 3, scope: !13391)
!13395 = !DILocation(line: 5506, column: 3, scope: !13391)
!13396 = !DILocation(line: 5506, column: 7, scope: !13391)
!13397 = !DILocation(line: 5506, column: 16, scope: !13391)
!13398 = !DILocation(line: 5507, column: 3, scope: !13391)
!13399 = !DILocation(line: 5509, column: 3, scope: !13391)
!13400 = !DILocation(line: 5509, column: 7, scope: !13391)
!13401 = !DILocation(line: 5509, column: 16, scope: !13391)
!13402 = !DILocation(line: 5510, column: 3, scope: !13391)
!13403 = !DILocation(line: 5512, column: 1, scope: !13130)
!13404 = distinct !DISubprogram(name: "rtl8153_enable", scope: !3, file: !3, line: 2855, type: !10384, scopeLine: 2856, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!13405 = !DILocalVariable(name: "tp", arg: 1, scope: !13404, file: !3, line: 2855, type: !10280)
!13406 = !DILocation(line: 2855, column: 41, scope: !13404)
!13407 = !DILocation(line: 2857, column: 32, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13404, file: !3, line: 2857, column: 6)
!13409 = !DILocation(line: 2857, column: 36, scope: !13408)
!13410 = !DILocation(line: 2857, column: 6, scope: !13408)
!13411 = !DILocation(line: 2857, column: 6, scope: !13404)
!13412 = !DILocation(line: 2858, column: 3, scope: !13408)
!13413 = !DILocation(line: 2860, column: 14, scope: !13404)
!13414 = !DILocation(line: 2860, column: 2, scope: !13404)
!13415 = !DILocation(line: 2861, column: 19, scope: !13404)
!13416 = !DILocation(line: 2861, column: 2, scope: !13404)
!13417 = !DILocation(line: 2862, column: 29, scope: !13404)
!13418 = !DILocation(line: 2862, column: 2, scope: !13404)
!13419 = !DILocation(line: 2863, column: 26, scope: !13404)
!13420 = !DILocation(line: 2863, column: 2, scope: !13404)
!13421 = !DILocation(line: 2865, column: 6, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13404, file: !3, line: 2865, column: 6)
!13423 = !DILocation(line: 2865, column: 10, scope: !13422)
!13424 = !DILocation(line: 2865, column: 18, scope: !13422)
!13425 = !DILocation(line: 2865, column: 6, scope: !13404)
!13426 = !DILocalVariable(name: "ocp_data", scope: !13427, file: !3, line: 2866, type: !784)
!13427 = distinct !DILexicalBlock(scope: !13422, file: !3, line: 2865, column: 33)
!13428 = !DILocation(line: 2866, column: 7, scope: !13427)
!13429 = !DILocation(line: 2868, column: 28, scope: !13427)
!13430 = !DILocation(line: 2868, column: 14, scope: !13427)
!13431 = !DILocation(line: 2868, column: 12, scope: !13427)
!13432 = !DILocation(line: 2869, column: 12, scope: !13427)
!13433 = !DILocation(line: 2870, column: 18, scope: !13427)
!13434 = !DILocation(line: 2870, column: 49, scope: !13427)
!13435 = !DILocation(line: 2870, column: 3, scope: !13427)
!13436 = !DILocation(line: 2871, column: 3, scope: !13427)
!13437 = !DILocation(line: 2872, column: 12, scope: !13427)
!13438 = !DILocation(line: 2873, column: 18, scope: !13427)
!13439 = !DILocation(line: 2873, column: 49, scope: !13427)
!13440 = !DILocation(line: 2873, column: 3, scope: !13427)
!13441 = !DILocation(line: 2874, column: 2, scope: !13427)
!13442 = !DILocation(line: 2876, column: 20, scope: !13404)
!13443 = !DILocation(line: 2876, column: 9, scope: !13404)
!13444 = !DILocation(line: 2876, column: 2, scope: !13404)
!13445 = !DILocation(line: 2877, column: 1, scope: !13404)
!13446 = distinct !DISubprogram(name: "rtl8153_disable", scope: !3, file: !3, line: 4809, type: !10380, scopeLine: 4810, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!13447 = !DILocalVariable(name: "tp", arg: 1, scope: !13446, file: !3, line: 4809, type: !10280)
!13448 = !DILocation(line: 4809, column: 43, scope: !13446)
!13449 = !DILocation(line: 4811, column: 17, scope: !13446)
!13450 = !DILocation(line: 4811, column: 2, scope: !13446)
!13451 = !DILocation(line: 4812, column: 14, scope: !13446)
!13452 = !DILocation(line: 4812, column: 2, scope: !13446)
!13453 = !DILocation(line: 4813, column: 16, scope: !13446)
!13454 = !DILocation(line: 4813, column: 2, scope: !13446)
!13455 = !DILocation(line: 4814, column: 17, scope: !13446)
!13456 = !DILocation(line: 4814, column: 2, scope: !13446)
!13457 = !DILocation(line: 4815, column: 1, scope: !13446)
!13458 = distinct !DISubprogram(name: "rtl8153_up", scope: !3, file: !3, line: 4966, type: !10380, scopeLine: 4967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!13459 = !DILocalVariable(name: "tp", arg: 1, scope: !13458, file: !3, line: 4966, type: !10280)
!13460 = !DILocation(line: 4966, column: 38, scope: !13458)
!13461 = !DILocalVariable(name: "ocp_data", scope: !13458, file: !3, line: 4968, type: !784)
!13462 = !DILocation(line: 4968, column: 6, scope: !13458)
!13463 = !DILocation(line: 4970, column: 32, scope: !13464)
!13464 = distinct !DILexicalBlock(scope: !13458, file: !3, line: 4970, column: 6)
!13465 = !DILocation(line: 4970, column: 36, scope: !13464)
!13466 = !DILocation(line: 4970, column: 6, scope: !13464)
!13467 = !DILocation(line: 4970, column: 6, scope: !13458)
!13468 = !DILocation(line: 4971, column: 3, scope: !13464)
!13469 = !DILocation(line: 4973, column: 15, scope: !13458)
!13470 = !DILocation(line: 4973, column: 2, scope: !13458)
!13471 = !DILocation(line: 4974, column: 15, scope: !13458)
!13472 = !DILocation(line: 4974, column: 2, scope: !13458)
!13473 = !DILocation(line: 4975, column: 17, scope: !13458)
!13474 = !DILocation(line: 4975, column: 2, scope: !13458)
!13475 = !DILocation(line: 4976, column: 19, scope: !13458)
!13476 = !DILocation(line: 4976, column: 2, scope: !13458)
!13477 = !DILocation(line: 4978, column: 27, scope: !13458)
!13478 = !DILocation(line: 4978, column: 13, scope: !13458)
!13479 = !DILocation(line: 4978, column: 11, scope: !13458)
!13480 = !DILocation(line: 4979, column: 11, scope: !13458)
!13481 = !DILocation(line: 4980, column: 17, scope: !13458)
!13482 = !DILocation(line: 4980, column: 48, scope: !13458)
!13483 = !DILocation(line: 4980, column: 2, scope: !13458)
!13484 = !DILocation(line: 4982, column: 27, scope: !13458)
!13485 = !DILocation(line: 4982, column: 13, scope: !13458)
!13486 = !DILocation(line: 4982, column: 11, scope: !13458)
!13487 = !DILocation(line: 4983, column: 11, scope: !13458)
!13488 = !DILocation(line: 4984, column: 17, scope: !13458)
!13489 = !DILocation(line: 4984, column: 55, scope: !13458)
!13490 = !DILocation(line: 4984, column: 2, scope: !13458)
!13491 = !DILocation(line: 4986, column: 27, scope: !13458)
!13492 = !DILocation(line: 4986, column: 13, scope: !13458)
!13493 = !DILocation(line: 4986, column: 11, scope: !13458)
!13494 = !DILocation(line: 4987, column: 11, scope: !13458)
!13495 = !DILocation(line: 4988, column: 17, scope: !13458)
!13496 = !DILocation(line: 4988, column: 51, scope: !13458)
!13497 = !DILocation(line: 4988, column: 2, scope: !13458)
!13498 = !DILocation(line: 4990, column: 17, scope: !13458)
!13499 = !DILocation(line: 4990, column: 2, scope: !13458)
!13500 = !DILocation(line: 4992, column: 10, scope: !13458)
!13501 = !DILocation(line: 4992, column: 14, scope: !13458)
!13502 = !DILocation(line: 4992, column: 2, scope: !13458)
!13503 = !DILocation(line: 4995, column: 3, scope: !13504)
!13504 = distinct !DILexicalBlock(scope: !13458, file: !3, line: 4992, column: 23)
!13505 = !DILocation(line: 4999, column: 16, scope: !13504)
!13506 = !DILocation(line: 4999, column: 3, scope: !13504)
!13507 = !DILocation(line: 5000, column: 3, scope: !13504)
!13508 = !DILocation(line: 5003, column: 15, scope: !13458)
!13509 = !DILocation(line: 5003, column: 2, scope: !13458)
!13510 = !DILocation(line: 5004, column: 1, scope: !13458)
!13511 = distinct !DISubprogram(name: "rtl8153_down", scope: !3, file: !3, line: 5006, type: !10380, scopeLine: 5007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!13512 = !DILocalVariable(name: "tp", arg: 1, scope: !13511, file: !3, line: 5006, type: !10280)
!13513 = !DILocation(line: 5006, column: 40, scope: !13511)
!13514 = !DILocalVariable(name: "ocp_data", scope: !13511, file: !3, line: 5008, type: !784)
!13515 = !DILocation(line: 5008, column: 6, scope: !13511)
!13516 = !DILocation(line: 5010, column: 32, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13511, file: !3, line: 5010, column: 6)
!13518 = !DILocation(line: 5010, column: 36, scope: !13517)
!13519 = !DILocation(line: 5010, column: 6, scope: !13517)
!13520 = !DILocation(line: 5010, column: 6, scope: !13511)
!13521 = !DILocation(line: 5011, column: 22, scope: !13522)
!13522 = distinct !DILexicalBlock(scope: !13517, file: !3, line: 5010, column: 44)
!13523 = !DILocation(line: 5011, column: 3, scope: !13522)
!13524 = !DILocation(line: 5012, column: 3, scope: !13522)
!13525 = !DILocation(line: 5015, column: 27, scope: !13511)
!13526 = !DILocation(line: 5015, column: 13, scope: !13511)
!13527 = !DILocation(line: 5015, column: 11, scope: !13511)
!13528 = !DILocation(line: 5016, column: 11, scope: !13511)
!13529 = !DILocation(line: 5017, column: 17, scope: !13511)
!13530 = !DILocation(line: 5017, column: 48, scope: !13511)
!13531 = !DILocation(line: 5017, column: 2, scope: !13511)
!13532 = !DILocation(line: 5019, column: 15, scope: !13511)
!13533 = !DILocation(line: 5019, column: 2, scope: !13511)
!13534 = !DILocation(line: 5020, column: 15, scope: !13511)
!13535 = !DILocation(line: 5020, column: 2, scope: !13511)
!13536 = !DILocation(line: 5021, column: 21, scope: !13511)
!13537 = !DILocation(line: 5021, column: 2, scope: !13511)
!13538 = !DILocation(line: 5022, column: 17, scope: !13511)
!13539 = !DILocation(line: 5022, column: 2, scope: !13511)
!13540 = !DILocation(line: 5023, column: 18, scope: !13511)
!13541 = !DILocation(line: 5023, column: 2, scope: !13511)
!13542 = !DILocation(line: 5024, column: 17, scope: !13511)
!13543 = !DILocation(line: 5024, column: 2, scope: !13511)
!13544 = !DILocation(line: 5025, column: 1, scope: !13511)
!13545 = distinct !DISubprogram(name: "rtl8153_unload", scope: !3, file: !3, line: 6489, type: !10380, scopeLine: 6490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!13546 = !DILocalVariable(name: "tp", arg: 1, scope: !13545, file: !3, line: 6489, type: !10280)
!13547 = !DILocation(line: 6489, column: 42, scope: !13545)
!13548 = !DILocation(line: 6491, column: 32, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13545, file: !3, line: 6491, column: 6)
!13550 = !DILocation(line: 6491, column: 36, scope: !13549)
!13551 = !DILocation(line: 6491, column: 6, scope: !13549)
!13552 = !DILocation(line: 6491, column: 6, scope: !13545)
!13553 = !DILocation(line: 6492, column: 3, scope: !13549)
!13554 = !DILocation(line: 6494, column: 21, scope: !13545)
!13555 = !DILocation(line: 6494, column: 2, scope: !13545)
!13556 = !DILocation(line: 6495, column: 1, scope: !13545)
!13557 = distinct !DISubprogram(name: "r8153_get_eee", scope: !3, file: !3, line: 6120, type: !10392, scopeLine: 6121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!13558 = !DILocalVariable(name: "tp", arg: 1, scope: !13557, file: !3, line: 6120, type: !10280)
!13559 = !DILocation(line: 6120, column: 40, scope: !13557)
!13560 = !DILocalVariable(name: "eee", arg: 2, scope: !13557, file: !3, line: 6120, type: !8568)
!13561 = !DILocation(line: 6120, column: 64, scope: !13557)
!13562 = !DILocalVariable(name: "lp", scope: !13557, file: !3, line: 6122, type: !784)
!13563 = !DILocation(line: 6122, column: 6, scope: !13557)
!13564 = !DILocalVariable(name: "adv", scope: !13557, file: !3, line: 6122, type: !784)
!13565 = !DILocation(line: 6122, column: 10, scope: !13557)
!13566 = !DILocalVariable(name: "supported", scope: !13557, file: !3, line: 6122, type: !784)
!13567 = !DILocation(line: 6122, column: 15, scope: !13557)
!13568 = !DILocalVariable(name: "val", scope: !13557, file: !3, line: 6123, type: !1115)
!13569 = !DILocation(line: 6123, column: 6, scope: !13557)
!13570 = !DILocation(line: 6125, column: 21, scope: !13557)
!13571 = !DILocation(line: 6125, column: 8, scope: !13557)
!13572 = !DILocation(line: 6125, column: 6, scope: !13557)
!13573 = !DILocation(line: 6126, column: 43, scope: !13557)
!13574 = !DILocation(line: 6126, column: 14, scope: !13557)
!13575 = !DILocation(line: 6126, column: 12, scope: !13557)
!13576 = !DILocation(line: 6128, column: 21, scope: !13557)
!13577 = !DILocation(line: 6128, column: 8, scope: !13557)
!13578 = !DILocation(line: 6128, column: 6, scope: !13557)
!13579 = !DILocation(line: 6129, column: 37, scope: !13557)
!13580 = !DILocation(line: 6129, column: 8, scope: !13557)
!13581 = !DILocation(line: 6129, column: 6, scope: !13557)
!13582 = !DILocation(line: 6131, column: 21, scope: !13557)
!13583 = !DILocation(line: 6131, column: 8, scope: !13557)
!13584 = !DILocation(line: 6131, column: 6, scope: !13557)
!13585 = !DILocation(line: 6132, column: 36, scope: !13557)
!13586 = !DILocation(line: 6132, column: 7, scope: !13557)
!13587 = !DILocation(line: 6132, column: 5, scope: !13557)
!13588 = !DILocation(line: 6134, column: 21, scope: !13557)
!13589 = !DILocation(line: 6134, column: 25, scope: !13557)
!13590 = !DILocation(line: 6134, column: 2, scope: !13557)
!13591 = !DILocation(line: 6134, column: 7, scope: !13557)
!13592 = !DILocation(line: 6134, column: 19, scope: !13557)
!13593 = !DILocation(line: 6135, column: 23, scope: !13557)
!13594 = !DILocation(line: 6135, column: 35, scope: !13557)
!13595 = !DILocation(line: 6135, column: 33, scope: !13557)
!13596 = !DILocation(line: 6135, column: 41, scope: !13557)
!13597 = !DILocation(line: 6135, column: 39, scope: !13557)
!13598 = !DILocation(line: 6135, column: 21, scope: !13557)
!13599 = !DILocation(line: 6135, column: 20, scope: !13557)
!13600 = !DILocation(line: 6135, column: 2, scope: !13557)
!13601 = !DILocation(line: 6135, column: 7, scope: !13557)
!13602 = !DILocation(line: 6135, column: 18, scope: !13557)
!13603 = !DILocation(line: 6136, column: 19, scope: !13557)
!13604 = !DILocation(line: 6136, column: 2, scope: !13557)
!13605 = !DILocation(line: 6136, column: 7, scope: !13557)
!13606 = !DILocation(line: 6136, column: 17, scope: !13557)
!13607 = !DILocation(line: 6137, column: 20, scope: !13557)
!13608 = !DILocation(line: 6137, column: 24, scope: !13557)
!13609 = !DILocation(line: 6137, column: 2, scope: !13557)
!13610 = !DILocation(line: 6137, column: 7, scope: !13557)
!13611 = !DILocation(line: 6137, column: 18, scope: !13557)
!13612 = !DILocation(line: 6138, column: 23, scope: !13557)
!13613 = !DILocation(line: 6138, column: 2, scope: !13557)
!13614 = !DILocation(line: 6138, column: 7, scope: !13557)
!13615 = !DILocation(line: 6138, column: 21, scope: !13557)
!13616 = !DILocation(line: 6140, column: 2, scope: !13557)
!13617 = distinct !DISubprogram(name: "rtl8153_in_nway", scope: !3, file: !3, line: 5088, type: !10397, scopeLine: 5089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!13618 = !DILocalVariable(name: "tp", arg: 1, scope: !13617, file: !3, line: 5088, type: !10280)
!13619 = !DILocation(line: 5088, column: 43, scope: !13617)
!13620 = !DILocalVariable(name: "phy_state", scope: !13617, file: !3, line: 5090, type: !1115)
!13621 = !DILocation(line: 5090, column: 6, scope: !13617)
!13622 = !DILocation(line: 5090, column: 31, scope: !13617)
!13623 = !DILocation(line: 5090, column: 18, scope: !13617)
!13624 = !DILocation(line: 5090, column: 50, scope: !13617)
!13625 = !DILocation(line: 5092, column: 6, scope: !13626)
!13626 = distinct !DILexicalBlock(scope: !13617, file: !3, line: 5092, column: 6)
!13627 = !DILocation(line: 5092, column: 16, scope: !13626)
!13628 = !DILocation(line: 5092, column: 31, scope: !13626)
!13629 = !DILocation(line: 5092, column: 34, scope: !13626)
!13630 = !DILocation(line: 5092, column: 44, scope: !13626)
!13631 = !DILocation(line: 5092, column: 6, scope: !13617)
!13632 = !DILocation(line: 5093, column: 3, scope: !13626)
!13633 = !DILocation(line: 5095, column: 3, scope: !13626)
!13634 = !DILocation(line: 5096, column: 1, scope: !13617)
!13635 = distinct !DISubprogram(name: "r8153_hw_phy_cfg", scope: !3, file: !3, line: 4539, type: !10380, scopeLine: 4540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!13636 = !DILocalVariable(name: "tp", arg: 1, scope: !13635, file: !3, line: 4539, type: !10280)
!13637 = !DILocation(line: 4539, column: 44, scope: !13635)
!13638 = !DILocalVariable(name: "ocp_data", scope: !13635, file: !3, line: 4541, type: !784)
!13639 = !DILocation(line: 4541, column: 6, scope: !13635)
!13640 = !DILocalVariable(name: "data", scope: !13635, file: !3, line: 4542, type: !1115)
!13641 = !DILocation(line: 4542, column: 6, scope: !13635)
!13642 = !DILocation(line: 4545, column: 17, scope: !13635)
!13643 = !DILocation(line: 4545, column: 2, scope: !13635)
!13644 = !DILocation(line: 4548, column: 17, scope: !13635)
!13645 = !DILocation(line: 4548, column: 2, scope: !13635)
!13646 = !DILocation(line: 4550, column: 25, scope: !13635)
!13647 = !DILocation(line: 4550, column: 2, scope: !13635)
!13648 = !DILocation(line: 4552, column: 6, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13635, file: !3, line: 4552, column: 6)
!13650 = !DILocation(line: 4552, column: 10, scope: !13649)
!13651 = !DILocation(line: 4552, column: 18, scope: !13649)
!13652 = !DILocation(line: 4552, column: 6, scope: !13635)
!13653 = !DILocation(line: 4553, column: 23, scope: !13654)
!13654 = distinct !DILexicalBlock(scope: !13649, file: !3, line: 4552, column: 33)
!13655 = !DILocation(line: 4553, column: 10, scope: !13654)
!13656 = !DILocation(line: 4553, column: 8, scope: !13654)
!13657 = !DILocation(line: 4554, column: 8, scope: !13654)
!13658 = !DILocation(line: 4555, column: 17, scope: !13654)
!13659 = !DILocation(line: 4555, column: 34, scope: !13654)
!13660 = !DILocation(line: 4555, column: 3, scope: !13654)
!13661 = !DILocation(line: 4556, column: 2, scope: !13654)
!13662 = !DILocation(line: 4558, column: 22, scope: !13635)
!13663 = !DILocation(line: 4558, column: 9, scope: !13635)
!13664 = !DILocation(line: 4558, column: 7, scope: !13635)
!13665 = !DILocation(line: 4559, column: 7, scope: !13635)
!13666 = !DILocation(line: 4560, column: 16, scope: !13635)
!13667 = !DILocation(line: 4560, column: 35, scope: !13635)
!13668 = !DILocation(line: 4560, column: 2, scope: !13635)
!13669 = !DILocation(line: 4562, column: 22, scope: !13635)
!13670 = !DILocation(line: 4562, column: 9, scope: !13635)
!13671 = !DILocation(line: 4562, column: 7, scope: !13635)
!13672 = !DILocation(line: 4563, column: 7, scope: !13635)
!13673 = !DILocation(line: 4564, column: 16, scope: !13635)
!13674 = !DILocation(line: 4564, column: 36, scope: !13635)
!13675 = !DILocation(line: 4564, column: 2, scope: !13635)
!13676 = !DILocation(line: 4565, column: 22, scope: !13635)
!13677 = !DILocation(line: 4565, column: 9, scope: !13635)
!13678 = !DILocation(line: 4565, column: 7, scope: !13635)
!13679 = !DILocation(line: 4566, column: 7, scope: !13635)
!13680 = !DILocation(line: 4567, column: 16, scope: !13635)
!13681 = !DILocation(line: 4567, column: 35, scope: !13635)
!13682 = !DILocation(line: 4567, column: 2, scope: !13635)
!13683 = !DILocation(line: 4568, column: 13, scope: !13635)
!13684 = !DILocation(line: 4568, column: 2, scope: !13635)
!13685 = !DILocation(line: 4570, column: 27, scope: !13635)
!13686 = !DILocation(line: 4570, column: 13, scope: !13635)
!13687 = !DILocation(line: 4570, column: 11, scope: !13635)
!13688 = !DILocation(line: 4571, column: 11, scope: !13635)
!13689 = !DILocation(line: 4572, column: 17, scope: !13635)
!13690 = !DILocation(line: 4572, column: 48, scope: !13635)
!13691 = !DILocation(line: 4572, column: 2, scope: !13635)
!13692 = !DILocation(line: 4575, column: 13, scope: !13635)
!13693 = !DILocation(line: 4575, column: 2, scope: !13635)
!13694 = !DILocation(line: 4578, column: 13, scope: !13635)
!13695 = !DILocation(line: 4578, column: 2, scope: !13635)
!13696 = !DILocation(line: 4579, column: 13, scope: !13635)
!13697 = !DILocation(line: 4579, column: 2, scope: !13635)
!13698 = !DILocation(line: 4581, column: 6, scope: !13699)
!13699 = distinct !DILexicalBlock(scope: !13635, file: !3, line: 4581, column: 6)
!13700 = !DILocation(line: 4581, column: 10, scope: !13699)
!13701 = !DILocation(line: 4581, column: 6, scope: !13635)
!13702 = !DILocation(line: 4582, column: 18, scope: !13699)
!13703 = !DILocation(line: 4582, column: 3, scope: !13699)
!13704 = !DILocation(line: 4584, column: 17, scope: !13635)
!13705 = !DILocation(line: 4584, column: 2, scope: !13635)
!13706 = !DILocation(line: 4585, column: 19, scope: !13635)
!13707 = !DILocation(line: 4585, column: 2, scope: !13635)
!13708 = !DILocation(line: 4587, column: 10, scope: !13635)
!13709 = !DILocation(line: 4587, column: 14, scope: !13635)
!13710 = !DILocation(line: 4587, column: 2, scope: !13635)
!13711 = !DILocation(line: 4590, column: 3, scope: !13712)
!13712 = distinct !DILexicalBlock(scope: !13635, file: !3, line: 4587, column: 23)
!13713 = !DILocation(line: 4594, column: 16, scope: !13712)
!13714 = !DILocation(line: 4594, column: 3, scope: !13712)
!13715 = !DILocation(line: 4595, column: 3, scope: !13712)
!13716 = !DILocation(line: 4598, column: 22, scope: !13635)
!13717 = !DILocation(line: 4598, column: 26, scope: !13635)
!13718 = !DILocation(line: 4598, column: 2, scope: !13635)
!13719 = !DILocation(line: 4599, column: 1, scope: !13635)
!13720 = distinct !DISubprogram(name: "rtl8153_runtime_enable", scope: !3, file: !3, line: 3353, type: !10402, scopeLine: 3354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!13721 = !DILocalVariable(name: "tp", arg: 1, scope: !13720, file: !3, line: 3353, type: !10280)
!13722 = !DILocation(line: 3353, column: 50, scope: !13720)
!13723 = !DILocalVariable(name: "enable", arg: 2, scope: !13720, file: !3, line: 3353, type: !617)
!13724 = !DILocation(line: 3353, column: 59, scope: !13720)
!13725 = !DILocation(line: 3355, column: 6, scope: !13726)
!13726 = distinct !DILexicalBlock(scope: !13720, file: !3, line: 3355, column: 6)
!13727 = !DILocation(line: 3355, column: 6, scope: !13720)
!13728 = !DILocation(line: 3356, column: 16, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13726, file: !3, line: 3355, column: 14)
!13730 = !DILocation(line: 3356, column: 3, scope: !13729)
!13731 = !DILocation(line: 3357, column: 16, scope: !13729)
!13732 = !DILocation(line: 3357, column: 3, scope: !13729)
!13733 = !DILocation(line: 3358, column: 21, scope: !13729)
!13734 = !DILocation(line: 3358, column: 3, scope: !13729)
!13735 = !DILocation(line: 3359, column: 30, scope: !13729)
!13736 = !DILocation(line: 3359, column: 3, scope: !13729)
!13737 = !DILocation(line: 3360, column: 2, scope: !13729)
!13738 = !DILocation(line: 3361, column: 30, scope: !13739)
!13739 = distinct !DILexicalBlock(scope: !13726, file: !3, line: 3360, column: 9)
!13740 = !DILocation(line: 3361, column: 3, scope: !13739)
!13741 = !DILocation(line: 3362, column: 21, scope: !13739)
!13742 = !DILocation(line: 3362, column: 3, scope: !13739)
!13743 = !DILocation(line: 3364, column: 11, scope: !13739)
!13744 = !DILocation(line: 3364, column: 15, scope: !13739)
!13745 = !DILocation(line: 3364, column: 3, scope: !13739)
!13746 = !DILocation(line: 3367, column: 4, scope: !13747)
!13747 = distinct !DILexicalBlock(scope: !13739, file: !3, line: 3364, column: 24)
!13748 = !DILocation(line: 3371, column: 17, scope: !13747)
!13749 = !DILocation(line: 3371, column: 4, scope: !13747)
!13750 = !DILocation(line: 3372, column: 4, scope: !13747)
!13751 = !DILocation(line: 3375, column: 16, scope: !13739)
!13752 = !DILocation(line: 3375, column: 3, scope: !13739)
!13753 = !DILocation(line: 3377, column: 1, scope: !13720)
!13754 = distinct !DISubprogram(name: "r8153b_init", scope: !3, file: !3, line: 5514, type: !10380, scopeLine: 5515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!13755 = !DILocalVariable(name: "tp", arg: 1, scope: !13754, file: !3, line: 5514, type: !10280)
!13756 = !DILocation(line: 5514, column: 39, scope: !13754)
!13757 = !DILocalVariable(name: "ocp_data", scope: !13754, file: !3, line: 5516, type: !784)
!13758 = !DILocation(line: 5516, column: 6, scope: !13754)
!13759 = !DILocalVariable(name: "data", scope: !13754, file: !3, line: 5517, type: !1115)
!13760 = !DILocation(line: 5517, column: 6, scope: !13754)
!13761 = !DILocalVariable(name: "i", scope: !13754, file: !3, line: 5518, type: !72)
!13762 = !DILocation(line: 5518, column: 6, scope: !13754)
!13763 = !DILocation(line: 5520, column: 32, scope: !13764)
!13764 = distinct !DILexicalBlock(scope: !13754, file: !3, line: 5520, column: 6)
!13765 = !DILocation(line: 5520, column: 36, scope: !13764)
!13766 = !DILocation(line: 5520, column: 6, scope: !13764)
!13767 = !DILocation(line: 5520, column: 6, scope: !13754)
!13768 = !DILocation(line: 5521, column: 3, scope: !13764)
!13769 = !DILocation(line: 5523, column: 16, scope: !13754)
!13770 = !DILocation(line: 5523, column: 2, scope: !13754)
!13771 = !DILocation(line: 5525, column: 9, scope: !13772)
!13772 = distinct !DILexicalBlock(scope: !13754, file: !3, line: 5525, column: 2)
!13773 = !DILocation(line: 5525, column: 7, scope: !13772)
!13774 = !DILocation(line: 5525, column: 14, scope: !13775)
!13775 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 5525, column: 2)
!13776 = !DILocation(line: 5525, column: 16, scope: !13775)
!13777 = !DILocation(line: 5525, column: 2, scope: !13772)
!13778 = !DILocation(line: 5526, column: 21, scope: !13779)
!13779 = distinct !DILexicalBlock(scope: !13780, file: !3, line: 5526, column: 7)
!13780 = distinct !DILexicalBlock(scope: !13775, file: !3, line: 5525, column: 28)
!13781 = !DILocation(line: 5526, column: 7, scope: !13779)
!13782 = !DILocation(line: 5526, column: 54, scope: !13779)
!13783 = !DILocation(line: 5526, column: 7, scope: !13780)
!13784 = !DILocation(line: 5528, column: 4, scope: !13779)
!13785 = !DILocation(line: 5530, column: 3, scope: !13780)
!13786 = !DILocation(line: 5531, column: 33, scope: !13787)
!13787 = distinct !DILexicalBlock(scope: !13780, file: !3, line: 5531, column: 7)
!13788 = !DILocation(line: 5531, column: 37, scope: !13787)
!13789 = !DILocation(line: 5531, column: 7, scope: !13787)
!13790 = !DILocation(line: 5531, column: 7, scope: !13780)
!13791 = !DILocation(line: 5532, column: 4, scope: !13787)
!13792 = !DILocation(line: 5533, column: 2, scope: !13780)
!13793 = !DILocation(line: 5525, column: 24, scope: !13775)
!13794 = !DILocation(line: 5525, column: 2, scope: !13775)
!13795 = distinct !{!13795, !13777, !13796}
!13796 = !DILocation(line: 5533, column: 2, scope: !13772)
!13797 = !DILocation(line: 5535, column: 26, scope: !13754)
!13798 = !DILocation(line: 5535, column: 9, scope: !13754)
!13799 = !DILocation(line: 5535, column: 7, scope: !13754)
!13800 = !DILocation(line: 5537, column: 25, scope: !13754)
!13801 = !DILocation(line: 5537, column: 9, scope: !13754)
!13802 = !DILocation(line: 5537, column: 7, scope: !13754)
!13803 = !DILocation(line: 5538, column: 6, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13754, file: !3, line: 5538, column: 6)
!13805 = !DILocation(line: 5538, column: 11, scope: !13804)
!13806 = !DILocation(line: 5538, column: 6, scope: !13754)
!13807 = !DILocation(line: 5539, column: 8, scope: !13808)
!13808 = distinct !DILexicalBlock(scope: !13804, file: !3, line: 5538, column: 25)
!13809 = !DILocation(line: 5540, column: 20, scope: !13808)
!13810 = !DILocation(line: 5540, column: 34, scope: !13808)
!13811 = !DILocation(line: 5540, column: 3, scope: !13808)
!13812 = !DILocation(line: 5541, column: 2, scope: !13808)
!13813 = !DILocation(line: 5543, column: 26, scope: !13754)
!13814 = !DILocation(line: 5543, column: 9, scope: !13754)
!13815 = !DILocation(line: 5543, column: 7, scope: !13754)
!13816 = !DILocation(line: 5545, column: 15, scope: !13754)
!13817 = !DILocation(line: 5545, column: 2, scope: !13754)
!13818 = !DILocation(line: 5548, column: 17, scope: !13754)
!13819 = !DILocation(line: 5548, column: 2, scope: !13754)
!13820 = !DILocation(line: 5551, column: 17, scope: !13754)
!13821 = !DILocation(line: 5551, column: 2, scope: !13754)
!13822 = !DILocation(line: 5553, column: 22, scope: !13754)
!13823 = !DILocation(line: 5553, column: 2, scope: !13754)
!13824 = !DILocation(line: 5554, column: 16, scope: !13754)
!13825 = !DILocation(line: 5554, column: 2, scope: !13754)
!13826 = !DILocation(line: 5555, column: 19, scope: !13754)
!13827 = !DILocation(line: 5555, column: 2, scope: !13754)
!13828 = !DILocation(line: 5556, column: 29, scope: !13754)
!13829 = !DILocation(line: 5556, column: 2, scope: !13754)
!13830 = !DILocation(line: 5558, column: 27, scope: !13754)
!13831 = !DILocation(line: 5558, column: 13, scope: !13754)
!13832 = !DILocation(line: 5558, column: 11, scope: !13754)
!13833 = !DILocation(line: 5559, column: 24, scope: !13834)
!13834 = distinct !DILexicalBlock(scope: !13754, file: !3, line: 5559, column: 6)
!13835 = !DILocation(line: 5559, column: 6, scope: !13834)
!13836 = !DILocation(line: 5559, column: 28, scope: !13834)
!13837 = !DILocation(line: 5559, column: 6, scope: !13754)
!13838 = !DILocation(line: 5560, column: 12, scope: !13834)
!13839 = !DILocation(line: 5560, column: 3, scope: !13834)
!13840 = !DILocation(line: 5562, column: 12, scope: !13834)
!13841 = !DILocation(line: 5563, column: 11, scope: !13754)
!13842 = !DILocation(line: 5564, column: 17, scope: !13754)
!13843 = !DILocation(line: 5564, column: 53, scope: !13754)
!13844 = !DILocation(line: 5564, column: 2, scope: !13754)
!13845 = !DILocation(line: 5566, column: 6, scope: !13846)
!13846 = distinct !DILexicalBlock(scope: !13754, file: !3, line: 5566, column: 6)
!13847 = !DILocation(line: 5566, column: 10, scope: !13846)
!13848 = !DILocation(line: 5566, column: 16, scope: !13846)
!13849 = !DILocation(line: 5566, column: 22, scope: !13846)
!13850 = !DILocation(line: 5566, column: 6, scope: !13754)
!13851 = !DILocation(line: 5567, column: 17, scope: !13846)
!13852 = !DILocation(line: 5567, column: 3, scope: !13846)
!13853 = !DILocation(line: 5568, column: 17, scope: !13754)
!13854 = !DILocation(line: 5568, column: 21, scope: !13754)
!13855 = !DILocation(line: 5568, column: 2, scope: !13754)
!13856 = !DILocation(line: 5571, column: 27, scope: !13754)
!13857 = !DILocation(line: 5571, column: 13, scope: !13754)
!13858 = !DILocation(line: 5571, column: 11, scope: !13754)
!13859 = !DILocation(line: 5572, column: 11, scope: !13754)
!13860 = !DILocation(line: 5573, column: 17, scope: !13754)
!13861 = !DILocation(line: 5573, column: 54, scope: !13754)
!13862 = !DILocation(line: 5573, column: 2, scope: !13754)
!13863 = !DILocation(line: 5575, column: 27, scope: !13754)
!13864 = !DILocation(line: 5575, column: 13, scope: !13754)
!13865 = !DILocation(line: 5575, column: 11, scope: !13754)
!13866 = !DILocation(line: 5576, column: 11, scope: !13754)
!13867 = !DILocation(line: 5577, column: 17, scope: !13754)
!13868 = !DILocation(line: 5577, column: 54, scope: !13754)
!13869 = !DILocation(line: 5577, column: 2, scope: !13754)
!13870 = !DILocation(line: 5579, column: 6, scope: !13871)
!13871 = distinct !DILexicalBlock(scope: !13754, file: !3, line: 5579, column: 6)
!13872 = !DILocation(line: 5579, column: 10, scope: !13871)
!13873 = !DILocation(line: 5579, column: 18, scope: !13871)
!13874 = !DILocation(line: 5579, column: 6, scope: !13754)
!13875 = !DILocation(line: 5581, column: 21, scope: !13876)
!13876 = distinct !DILexicalBlock(scope: !13877, file: !3, line: 5581, column: 7)
!13877 = distinct !DILexicalBlock(scope: !13871, file: !3, line: 5579, column: 33)
!13878 = !DILocation(line: 5581, column: 7, scope: !13876)
!13879 = !DILocation(line: 5581, column: 47, scope: !13876)
!13880 = !DILocation(line: 5581, column: 7, scope: !13877)
!13881 = !DILocation(line: 5582, column: 29, scope: !13882)
!13882 = distinct !DILexicalBlock(scope: !13876, file: !3, line: 5581, column: 57)
!13883 = !DILocation(line: 5582, column: 15, scope: !13882)
!13884 = !DILocation(line: 5582, column: 13, scope: !13882)
!13885 = !DILocation(line: 5583, column: 13, scope: !13882)
!13886 = !DILocation(line: 5584, column: 19, scope: !13882)
!13887 = !DILocation(line: 5584, column: 50, scope: !13882)
!13888 = !DILocation(line: 5584, column: 4, scope: !13882)
!13889 = !DILocation(line: 5585, column: 3, scope: !13882)
!13890 = !DILocation(line: 5586, column: 2, scope: !13877)
!13891 = !DILocation(line: 5588, column: 27, scope: !13754)
!13892 = !DILocation(line: 5588, column: 31, scope: !13754)
!13893 = !DILocation(line: 5588, column: 2, scope: !13754)
!13894 = !DILocation(line: 5591, column: 27, scope: !13754)
!13895 = !DILocation(line: 5591, column: 13, scope: !13754)
!13896 = !DILocation(line: 5591, column: 11, scope: !13754)
!13897 = !DILocation(line: 5592, column: 11, scope: !13754)
!13898 = !DILocation(line: 5593, column: 17, scope: !13754)
!13899 = !DILocation(line: 5593, column: 49, scope: !13754)
!13900 = !DILocation(line: 5593, column: 2, scope: !13754)
!13901 = !DILocation(line: 5595, column: 18, scope: !13754)
!13902 = !DILocation(line: 5595, column: 2, scope: !13754)
!13903 = !DILocation(line: 5597, column: 2, scope: !13754)
!13904 = !DILocation(line: 5597, column: 6, scope: !13754)
!13905 = !DILocation(line: 5597, column: 15, scope: !13754)
!13906 = !DILocation(line: 5598, column: 1, scope: !13754)
!13907 = distinct !DISubprogram(name: "rtl8153b_up", scope: !3, file: !3, line: 5027, type: !10380, scopeLine: 5028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!13908 = !DILocalVariable(name: "tp", arg: 1, scope: !13907, file: !3, line: 5027, type: !10280)
!13909 = !DILocation(line: 5027, column: 39, scope: !13907)
!13910 = !DILocalVariable(name: "ocp_data", scope: !13907, file: !3, line: 5029, type: !784)
!13911 = !DILocation(line: 5029, column: 6, scope: !13907)
!13912 = !DILocation(line: 5031, column: 32, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13907, file: !3, line: 5031, column: 6)
!13914 = !DILocation(line: 5031, column: 36, scope: !13913)
!13915 = !DILocation(line: 5031, column: 6, scope: !13913)
!13916 = !DILocation(line: 5031, column: 6, scope: !13907)
!13917 = !DILocation(line: 5032, column: 3, scope: !13913)
!13918 = !DILocation(line: 5034, column: 16, scope: !13907)
!13919 = !DILocation(line: 5034, column: 2, scope: !13907)
!13920 = !DILocation(line: 5035, column: 15, scope: !13907)
!13921 = !DILocation(line: 5035, column: 2, scope: !13907)
!13922 = !DILocation(line: 5036, column: 17, scope: !13907)
!13923 = !DILocation(line: 5036, column: 2, scope: !13907)
!13924 = !DILocation(line: 5038, column: 19, scope: !13907)
!13925 = !DILocation(line: 5038, column: 2, scope: !13907)
!13926 = !DILocation(line: 5039, column: 18, scope: !13907)
!13927 = !DILocation(line: 5039, column: 2, scope: !13907)
!13928 = !DILocation(line: 5041, column: 27, scope: !13907)
!13929 = !DILocation(line: 5041, column: 13, scope: !13907)
!13930 = !DILocation(line: 5041, column: 11, scope: !13907)
!13931 = !DILocation(line: 5042, column: 11, scope: !13907)
!13932 = !DILocation(line: 5043, column: 17, scope: !13907)
!13933 = !DILocation(line: 5043, column: 54, scope: !13907)
!13934 = !DILocation(line: 5043, column: 2, scope: !13907)
!13935 = !DILocation(line: 5045, column: 17, scope: !13907)
!13936 = !DILocation(line: 5045, column: 2, scope: !13907)
!13937 = !DILocation(line: 5047, column: 6, scope: !13938)
!13938 = distinct !DILexicalBlock(scope: !13907, file: !3, line: 5047, column: 6)
!13939 = !DILocation(line: 5047, column: 10, scope: !13938)
!13940 = !DILocation(line: 5047, column: 16, scope: !13938)
!13941 = !DILocation(line: 5047, column: 22, scope: !13938)
!13942 = !DILocation(line: 5047, column: 6, scope: !13907)
!13943 = !DILocation(line: 5048, column: 17, scope: !13938)
!13944 = !DILocation(line: 5048, column: 3, scope: !13938)
!13945 = !DILocation(line: 5049, column: 1, scope: !13907)
!13946 = distinct !DISubprogram(name: "rtl8153b_down", scope: !3, file: !3, line: 5051, type: !10380, scopeLine: 5052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!13947 = !DILocalVariable(name: "tp", arg: 1, scope: !13946, file: !3, line: 5051, type: !10280)
!13948 = !DILocation(line: 5051, column: 41, scope: !13946)
!13949 = !DILocalVariable(name: "ocp_data", scope: !13946, file: !3, line: 5053, type: !784)
!13950 = !DILocation(line: 5053, column: 6, scope: !13946)
!13951 = !DILocation(line: 5055, column: 32, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13946, file: !3, line: 5055, column: 6)
!13953 = !DILocation(line: 5055, column: 36, scope: !13952)
!13954 = !DILocation(line: 5055, column: 6, scope: !13952)
!13955 = !DILocation(line: 5055, column: 6, scope: !13946)
!13956 = !DILocation(line: 5056, column: 22, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13952, file: !3, line: 5055, column: 44)
!13958 = !DILocation(line: 5056, column: 3, scope: !13957)
!13959 = !DILocation(line: 5057, column: 3, scope: !13957)
!13960 = !DILocation(line: 5060, column: 27, scope: !13946)
!13961 = !DILocation(line: 5060, column: 13, scope: !13946)
!13962 = !DILocation(line: 5060, column: 11, scope: !13946)
!13963 = !DILocation(line: 5061, column: 11, scope: !13946)
!13964 = !DILocation(line: 5062, column: 17, scope: !13946)
!13965 = !DILocation(line: 5062, column: 54, scope: !13946)
!13966 = !DILocation(line: 5062, column: 2, scope: !13946)
!13967 = !DILocation(line: 5064, column: 16, scope: !13946)
!13968 = !DILocation(line: 5064, column: 2, scope: !13946)
!13969 = !DILocation(line: 5065, column: 15, scope: !13946)
!13970 = !DILocation(line: 5065, column: 2, scope: !13946)
!13971 = !DILocation(line: 5066, column: 22, scope: !13946)
!13972 = !DILocation(line: 5066, column: 2, scope: !13946)
!13973 = !DILocation(line: 5067, column: 17, scope: !13946)
!13974 = !DILocation(line: 5067, column: 2, scope: !13946)
!13975 = !DILocation(line: 5068, column: 18, scope: !13946)
!13976 = !DILocation(line: 5068, column: 2, scope: !13946)
!13977 = !DILocation(line: 5069, column: 17, scope: !13946)
!13978 = !DILocation(line: 5069, column: 2, scope: !13946)
!13979 = !DILocation(line: 5070, column: 1, scope: !13946)
!13980 = distinct !DISubprogram(name: "rtl8153b_unload", scope: !3, file: !3, line: 6497, type: !10380, scopeLine: 6498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!13981 = !DILocalVariable(name: "tp", arg: 1, scope: !13980, file: !3, line: 6497, type: !10280)
!13982 = !DILocation(line: 6497, column: 43, scope: !13980)
!13983 = !DILocation(line: 6499, column: 32, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13980, file: !3, line: 6499, column: 6)
!13985 = !DILocation(line: 6499, column: 36, scope: !13984)
!13986 = !DILocation(line: 6499, column: 6, scope: !13984)
!13987 = !DILocation(line: 6499, column: 6, scope: !13980)
!13988 = !DILocation(line: 6500, column: 3, scope: !13984)
!13989 = !DILocation(line: 6502, column: 22, scope: !13980)
!13990 = !DILocation(line: 6502, column: 2, scope: !13980)
!13991 = !DILocation(line: 6503, column: 1, scope: !13980)
!13992 = distinct !DISubprogram(name: "r8153b_hw_phy_cfg", scope: !3, file: !3, line: 4613, type: !10380, scopeLine: 4614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!13993 = !DILocalVariable(name: "tp", arg: 1, scope: !13992, file: !3, line: 4613, type: !10280)
!13994 = !DILocation(line: 4613, column: 45, scope: !13992)
!13995 = !DILocalVariable(name: "ocp_data", scope: !13992, file: !3, line: 4615, type: !784)
!13996 = !DILocation(line: 4615, column: 6, scope: !13992)
!13997 = !DILocalVariable(name: "data", scope: !13992, file: !3, line: 4616, type: !1115)
!13998 = !DILocation(line: 4616, column: 6, scope: !13992)
!13999 = !DILocation(line: 4619, column: 17, scope: !13992)
!14000 = !DILocation(line: 4619, column: 2, scope: !13992)
!14001 = !DILocation(line: 4622, column: 17, scope: !13992)
!14002 = !DILocation(line: 4622, column: 2, scope: !13992)
!14003 = !DILocation(line: 4624, column: 25, scope: !13992)
!14004 = !DILocation(line: 4624, column: 2, scope: !13992)
!14005 = !DILocation(line: 4626, column: 18, scope: !13992)
!14006 = !DILocation(line: 4626, column: 48, scope: !13992)
!14007 = !DILocation(line: 4626, column: 52, scope: !13992)
!14008 = !DILocation(line: 4626, column: 22, scope: !13992)
!14009 = !DILocation(line: 4626, column: 2, scope: !13992)
!14010 = !DILocation(line: 4628, column: 19, scope: !13992)
!14011 = !DILocation(line: 4628, column: 9, scope: !13992)
!14012 = !DILocation(line: 4628, column: 7, scope: !13992)
!14013 = !DILocation(line: 4629, column: 7, scope: !13992)
!14014 = !DILocation(line: 4630, column: 13, scope: !13992)
!14015 = !DILocation(line: 4630, column: 33, scope: !13992)
!14016 = !DILocation(line: 4630, column: 2, scope: !13992)
!14017 = !DILocation(line: 4631, column: 22, scope: !13992)
!14018 = !DILocation(line: 4631, column: 9, scope: !13992)
!14019 = !DILocation(line: 4631, column: 7, scope: !13992)
!14020 = !DILocation(line: 4632, column: 7, scope: !13992)
!14021 = !DILocation(line: 4633, column: 16, scope: !13992)
!14022 = !DILocation(line: 4633, column: 34, scope: !13992)
!14023 = !DILocation(line: 4633, column: 2, scope: !13992)
!14024 = !DILocation(line: 4640, column: 30, scope: !13992)
!14025 = !DILocation(line: 4640, column: 13, scope: !13992)
!14026 = !DILocation(line: 4640, column: 11, scope: !13992)
!14027 = !DILocation(line: 4641, column: 17, scope: !13992)
!14028 = !DILocation(line: 4641, column: 26, scope: !13992)
!14029 = !DILocation(line: 4641, column: 37, scope: !13992)
!14030 = !DILocation(line: 4641, column: 46, scope: !13992)
!14031 = !DILocation(line: 4641, column: 55, scope: !13992)
!14032 = !DILocation(line: 4641, column: 43, scope: !13992)
!14033 = !DILocation(line: 4641, column: 9, scope: !13992)
!14034 = !DILocation(line: 4641, column: 7, scope: !13992)
!14035 = !DILocation(line: 4642, column: 6, scope: !14036)
!14036 = distinct !DILexicalBlock(scope: !13992, file: !3, line: 4642, column: 6)
!14037 = !DILocation(line: 4642, column: 11, scope: !14036)
!14038 = !DILocation(line: 4642, column: 6, scope: !13992)
!14039 = !DILocation(line: 4643, column: 17, scope: !14036)
!14040 = !DILocation(line: 4643, column: 38, scope: !14036)
!14041 = !DILocation(line: 4643, column: 3, scope: !14036)
!14042 = !DILocation(line: 4649, column: 26, scope: !13992)
!14043 = !DILocation(line: 4649, column: 13, scope: !13992)
!14044 = !DILocation(line: 4649, column: 11, scope: !13992)
!14045 = !DILocation(line: 4650, column: 11, scope: !13992)
!14046 = !DILocation(line: 4651, column: 6, scope: !14047)
!14047 = distinct !DILexicalBlock(scope: !13992, file: !3, line: 4651, column: 6)
!14048 = !DILocation(line: 4651, column: 6, scope: !13992)
!14049 = !DILocalVariable(name: "swr_cnt_1ms_ini", scope: !14050, file: !3, line: 4652, type: !784)
!14050 = distinct !DILexicalBlock(scope: !14047, file: !3, line: 4651, column: 16)
!14051 = !DILocation(line: 4652, column: 7, scope: !14050)
!14052 = !DILocation(line: 4654, column: 33, scope: !14050)
!14053 = !DILocation(line: 4654, column: 31, scope: !14050)
!14054 = !DILocation(line: 4654, column: 43, scope: !14050)
!14055 = !DILocation(line: 4654, column: 19, scope: !14050)
!14056 = !DILocation(line: 4655, column: 28, scope: !14050)
!14057 = !DILocation(line: 4655, column: 14, scope: !14050)
!14058 = !DILocation(line: 4655, column: 12, scope: !14050)
!14059 = !DILocation(line: 4656, column: 15, scope: !14050)
!14060 = !DILocation(line: 4656, column: 24, scope: !14050)
!14061 = !DILocation(line: 4656, column: 47, scope: !14050)
!14062 = !DILocation(line: 4656, column: 45, scope: !14050)
!14063 = !DILocation(line: 4656, column: 12, scope: !14050)
!14064 = !DILocation(line: 4657, column: 18, scope: !14050)
!14065 = !DILocation(line: 4657, column: 49, scope: !14050)
!14066 = !DILocation(line: 4657, column: 3, scope: !14050)
!14067 = !DILocation(line: 4658, column: 2, scope: !14050)
!14068 = !DILocation(line: 4660, column: 27, scope: !13992)
!14069 = !DILocation(line: 4660, column: 13, scope: !13992)
!14070 = !DILocation(line: 4660, column: 11, scope: !13992)
!14071 = !DILocation(line: 4661, column: 11, scope: !13992)
!14072 = !DILocation(line: 4662, column: 17, scope: !13992)
!14073 = !DILocation(line: 4662, column: 48, scope: !13992)
!14074 = !DILocation(line: 4662, column: 2, scope: !13992)
!14075 = !DILocation(line: 4665, column: 27, scope: !14076)
!14076 = distinct !DILexicalBlock(scope: !13992, file: !3, line: 4665, column: 6)
!14077 = !DILocation(line: 4665, column: 7, scope: !14076)
!14078 = !DILocation(line: 4665, column: 6, scope: !13992)
!14079 = !DILocation(line: 4666, column: 23, scope: !14080)
!14080 = distinct !DILexicalBlock(scope: !14076, file: !3, line: 4665, column: 38)
!14081 = !DILocation(line: 4666, column: 10, scope: !14080)
!14082 = !DILocation(line: 4666, column: 8, scope: !14080)
!14083 = !DILocation(line: 4667, column: 8, scope: !14080)
!14084 = !DILocation(line: 4668, column: 17, scope: !14080)
!14085 = !DILocation(line: 4668, column: 36, scope: !14080)
!14086 = !DILocation(line: 4668, column: 3, scope: !14080)
!14087 = !DILocation(line: 4669, column: 3, scope: !14080)
!14088 = !DILocation(line: 4669, column: 7, scope: !14080)
!14089 = !DILocation(line: 4669, column: 16, scope: !14080)
!14090 = !DILocation(line: 4669, column: 26, scope: !14080)
!14091 = !DILocation(line: 4671, column: 23, scope: !14080)
!14092 = !DILocation(line: 4671, column: 10, scope: !14080)
!14093 = !DILocation(line: 4671, column: 8, scope: !14080)
!14094 = !DILocation(line: 4672, column: 8, scope: !14080)
!14095 = !DILocation(line: 4673, column: 17, scope: !14080)
!14096 = !DILocation(line: 4673, column: 37, scope: !14080)
!14097 = !DILocation(line: 4673, column: 3, scope: !14080)
!14098 = !DILocation(line: 4674, column: 3, scope: !14080)
!14099 = !DILocation(line: 4674, column: 7, scope: !14080)
!14100 = !DILocation(line: 4674, column: 16, scope: !14080)
!14101 = !DILocation(line: 4674, column: 28, scope: !14080)
!14102 = !DILocation(line: 4675, column: 3, scope: !14080)
!14103 = !DILocation(line: 4675, column: 7, scope: !14080)
!14104 = !DILocation(line: 4675, column: 16, scope: !14080)
!14105 = !DILocation(line: 4675, column: 27, scope: !14080)
!14106 = !DILocation(line: 4676, column: 3, scope: !14080)
!14107 = !DILocation(line: 4676, column: 7, scope: !14080)
!14108 = !DILocation(line: 4676, column: 16, scope: !14080)
!14109 = !DILocation(line: 4676, column: 32, scope: !14080)
!14110 = !DILocation(line: 4678, column: 17, scope: !14080)
!14111 = !DILocation(line: 4678, column: 3, scope: !14080)
!14112 = !DILocation(line: 4679, column: 17, scope: !14080)
!14113 = !DILocation(line: 4679, column: 3, scope: !14080)
!14114 = !DILocation(line: 4680, column: 3, scope: !14080)
!14115 = !DILocation(line: 4680, column: 7, scope: !14080)
!14116 = !DILocation(line: 4680, column: 16, scope: !14080)
!14117 = !DILocation(line: 4680, column: 28, scope: !14080)
!14118 = !DILocation(line: 4682, column: 23, scope: !14080)
!14119 = !DILocation(line: 4682, column: 3, scope: !14080)
!14120 = !DILocation(line: 4683, column: 2, scope: !14080)
!14121 = !DILocation(line: 4685, column: 6, scope: !14122)
!14122 = distinct !DILexicalBlock(scope: !13992, file: !3, line: 4685, column: 6)
!14123 = !DILocation(line: 4685, column: 10, scope: !14122)
!14124 = !DILocation(line: 4685, column: 6, scope: !13992)
!14125 = !DILocation(line: 4686, column: 18, scope: !14122)
!14126 = !DILocation(line: 4686, column: 3, scope: !14122)
!14127 = !DILocation(line: 4688, column: 17, scope: !13992)
!14128 = !DILocation(line: 4688, column: 2, scope: !13992)
!14129 = !DILocation(line: 4689, column: 19, scope: !13992)
!14130 = !DILocation(line: 4689, column: 2, scope: !13992)
!14131 = !DILocation(line: 4691, column: 22, scope: !13992)
!14132 = !DILocation(line: 4691, column: 26, scope: !13992)
!14133 = !DILocation(line: 4691, column: 2, scope: !13992)
!14134 = !DILocation(line: 4692, column: 1, scope: !13992)
!14135 = distinct !DISubprogram(name: "rtl8153b_runtime_enable", scope: !3, file: !3, line: 3379, type: !10402, scopeLine: 3380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14136 = !DILocalVariable(name: "tp", arg: 1, scope: !14135, file: !3, line: 3379, type: !10280)
!14137 = !DILocation(line: 3379, column: 51, scope: !14135)
!14138 = !DILocalVariable(name: "enable", arg: 2, scope: !14135, file: !3, line: 3379, type: !617)
!14139 = !DILocation(line: 3379, column: 60, scope: !14135)
!14140 = !DILocation(line: 3381, column: 6, scope: !14141)
!14141 = distinct !DILexicalBlock(scope: !14135, file: !3, line: 3381, column: 6)
!14142 = !DILocation(line: 3381, column: 6, scope: !14135)
!14143 = !DILocation(line: 3382, column: 20, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14141, file: !3, line: 3381, column: 14)
!14145 = !DILocation(line: 3382, column: 3, scope: !14144)
!14146 = !DILocation(line: 3383, column: 17, scope: !14144)
!14147 = !DILocation(line: 3383, column: 3, scope: !14144)
!14148 = !DILocation(line: 3384, column: 16, scope: !14144)
!14149 = !DILocation(line: 3384, column: 3, scope: !14144)
!14150 = !DILocation(line: 3385, column: 30, scope: !14144)
!14151 = !DILocation(line: 3385, column: 3, scope: !14144)
!14152 = !DILocation(line: 3386, column: 17, scope: !14144)
!14153 = !DILocation(line: 3386, column: 3, scope: !14144)
!14154 = !DILocation(line: 3387, column: 2, scope: !14144)
!14155 = !DILocation(line: 3388, column: 17, scope: !14156)
!14156 = distinct !DILexicalBlock(scope: !14141, file: !3, line: 3387, column: 9)
!14157 = !DILocation(line: 3388, column: 3, scope: !14156)
!14158 = !DILocation(line: 3389, column: 20, scope: !14156)
!14159 = !DILocation(line: 3389, column: 3, scope: !14156)
!14160 = !DILocation(line: 3390, column: 30, scope: !14156)
!14161 = !DILocation(line: 3390, column: 3, scope: !14156)
!14162 = !DILocation(line: 3391, column: 7, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14156, file: !3, line: 3391, column: 7)
!14164 = !DILocation(line: 3391, column: 11, scope: !14163)
!14165 = !DILocation(line: 3391, column: 17, scope: !14163)
!14166 = !DILocation(line: 3391, column: 23, scope: !14163)
!14167 = !DILocation(line: 3391, column: 7, scope: !14156)
!14168 = !DILocation(line: 3392, column: 18, scope: !14163)
!14169 = !DILocation(line: 3392, column: 4, scope: !14163)
!14170 = !DILocation(line: 3394, column: 1, scope: !14135)
!14171 = distinct !DISubprogram(name: "test_bit", scope: !14172, file: !14172, line: 132, type: !14173, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14172 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!14173 = !DISubroutineType(types: !14174)
!14174 = !{!617, !590, !10461}
!14175 = !DILocalVariable(name: "nr", arg: 1, scope: !14176, file: !12360, line: 210, type: !590)
!14176 = distinct !DISubprogram(name: "variable_test_bit", scope: !12360, file: !12360, line: 210, type: !14173, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14177 = !DILocation(line: 210, column: 52, scope: !14176, inlinedAt: !14178)
!14178 = distinct !DILocation(line: 135, column: 9, scope: !14171)
!14179 = !DILocalVariable(name: "addr", arg: 2, scope: !14176, file: !12360, line: 210, type: !10461)
!14180 = !DILocation(line: 210, column: 86, scope: !14176, inlinedAt: !14178)
!14181 = !DILocalVariable(name: "oldbit", scope: !14176, file: !12360, line: 212, type: !617)
!14182 = !DILocation(line: 212, column: 7, scope: !14176, inlinedAt: !14178)
!14183 = !DILocalVariable(name: "nr", arg: 1, scope: !14184, file: !12360, line: 204, type: !590)
!14184 = distinct !DISubprogram(name: "constant_test_bit", scope: !12360, file: !12360, line: 204, type: !14173, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14185 = !DILocation(line: 204, column: 52, scope: !14184, inlinedAt: !14186)
!14186 = distinct !DILocation(line: 135, column: 9, scope: !14171)
!14187 = !DILocalVariable(name: "addr", arg: 2, scope: !14184, file: !12360, line: 204, type: !10461)
!14188 = !DILocation(line: 204, column: 86, scope: !14184, inlinedAt: !14186)
!14189 = !DILocalVariable(name: "v", arg: 1, scope: !14190, file: !12367, line: 69, type: !12370)
!14190 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !12367, file: !12367, line: 69, type: !12368, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14191 = !DILocation(line: 69, column: 73, scope: !14190, inlinedAt: !14192)
!14192 = distinct !DILocation(line: 134, column: 2, scope: !14171)
!14193 = !DILocalVariable(name: "size", arg: 2, scope: !14190, file: !12367, line: 69, type: !671)
!14194 = !DILocation(line: 69, column: 83, scope: !14190, inlinedAt: !14192)
!14195 = !DILocalVariable(name: "nr", arg: 1, scope: !14171, file: !14172, line: 132, type: !590)
!14196 = !DILocation(line: 132, column: 34, scope: !14171)
!14197 = !DILocalVariable(name: "addr", arg: 2, scope: !14171, file: !14172, line: 132, type: !10461)
!14198 = !DILocation(line: 132, column: 68, scope: !14171)
!14199 = !DILocation(line: 134, column: 25, scope: !14171)
!14200 = !DILocation(line: 134, column: 32, scope: !14171)
!14201 = !DILocation(line: 134, column: 30, scope: !14171)
!14202 = !DILocation(line: 71, column: 19, scope: !14190, inlinedAt: !14192)
!14203 = !DILocation(line: 71, column: 22, scope: !14190, inlinedAt: !14192)
!14204 = !DILocation(line: 71, column: 2, scope: !14190, inlinedAt: !14192)
!14205 = !DILocation(line: 72, column: 2, scope: !14190, inlinedAt: !14192)
!14206 = !DILocation(line: 135, column: 9, scope: !14171)
!14207 = !DILocation(line: 206, column: 19, scope: !14184, inlinedAt: !14186)
!14208 = !DILocation(line: 206, column: 22, scope: !14184, inlinedAt: !14186)
!14209 = !DILocation(line: 206, column: 15, scope: !14184, inlinedAt: !14186)
!14210 = !DILocation(line: 207, column: 4, scope: !14184, inlinedAt: !14186)
!14211 = !DILocation(line: 207, column: 9, scope: !14184, inlinedAt: !14186)
!14212 = !DILocation(line: 207, column: 12, scope: !14184, inlinedAt: !14186)
!14213 = !DILocation(line: 206, column: 44, scope: !14184, inlinedAt: !14186)
!14214 = !DILocation(line: 207, column: 37, scope: !14184, inlinedAt: !14186)
!14215 = !DILocation(line: 217, column: 33, scope: !14176, inlinedAt: !14178)
!14216 = !DILocation(line: 217, column: 46, scope: !14176, inlinedAt: !14178)
!14217 = !DILocation(line: 214, column: 2, scope: !14176, inlinedAt: !14178)
!14218 = !{i32 -2147013044, i32 -2147012984}
!14219 = !DILocation(line: 219, column: 9, scope: !14176, inlinedAt: !14178)
!14220 = !DILocation(line: 135, column: 2, scope: !14171)
!14221 = distinct !DISubprogram(name: "r8152_mdio_read", scope: !3, file: !3, line: 1341, type: !14222, scopeLine: 1342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14222 = !DISubroutineType(types: !14223)
!14223 = !{!72, !10280, !784}
!14224 = !DILocalVariable(name: "tp", arg: 1, scope: !14221, file: !3, line: 1341, type: !10280)
!14225 = !DILocation(line: 1341, column: 49, scope: !14221)
!14226 = !DILocalVariable(name: "reg_addr", arg: 2, scope: !14221, file: !3, line: 1341, type: !784)
!14227 = !DILocation(line: 1341, column: 57, scope: !14221)
!14228 = !DILocation(line: 1343, column: 22, scope: !14221)
!14229 = !DILocation(line: 1343, column: 41, scope: !14221)
!14230 = !DILocation(line: 1343, column: 50, scope: !14221)
!14231 = !DILocation(line: 1343, column: 39, scope: !14221)
!14232 = !DILocation(line: 1343, column: 26, scope: !14221)
!14233 = !DILocation(line: 1343, column: 9, scope: !14221)
!14234 = !DILocation(line: 1343, column: 2, scope: !14221)
!14235 = distinct !DISubprogram(name: "r8152_mdio_write", scope: !3, file: !3, line: 1336, type: !14236, scopeLine: 1337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14236 = !DISubroutineType(types: !14237)
!14237 = !{null, !10280, !784, !784}
!14238 = !DILocalVariable(name: "tp", arg: 1, scope: !14235, file: !3, line: 1336, type: !10280)
!14239 = !DILocation(line: 1336, column: 51, scope: !14235)
!14240 = !DILocalVariable(name: "reg_addr", arg: 2, scope: !14235, file: !3, line: 1336, type: !784)
!14241 = !DILocation(line: 1336, column: 59, scope: !14235)
!14242 = !DILocalVariable(name: "value", arg: 3, scope: !14235, file: !3, line: 1336, type: !784)
!14243 = !DILocation(line: 1336, column: 73, scope: !14235)
!14244 = !DILocation(line: 1338, column: 16, scope: !14235)
!14245 = !DILocation(line: 1338, column: 35, scope: !14235)
!14246 = !DILocation(line: 1338, column: 44, scope: !14235)
!14247 = !DILocation(line: 1338, column: 33, scope: !14235)
!14248 = !DILocation(line: 1338, column: 20, scope: !14235)
!14249 = !DILocation(line: 1338, column: 49, scope: !14235)
!14250 = !DILocation(line: 1338, column: 2, scope: !14235)
!14251 = !DILocation(line: 1339, column: 1, scope: !14235)
!14252 = distinct !DISubprogram(name: "r8152_aldps_en", scope: !3, file: !3, line: 4124, type: !10402, scopeLine: 4125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14253 = !DILocalVariable(name: "tp", arg: 1, scope: !14252, file: !3, line: 4124, type: !10280)
!14254 = !DILocation(line: 4124, column: 42, scope: !14252)
!14255 = !DILocalVariable(name: "enable", arg: 2, scope: !14252, file: !3, line: 4124, type: !617)
!14256 = !DILocation(line: 4124, column: 51, scope: !14252)
!14257 = !DILocation(line: 4126, column: 6, scope: !14258)
!14258 = distinct !DILexicalBlock(scope: !14252, file: !3, line: 4126, column: 6)
!14259 = !DILocation(line: 4126, column: 6, scope: !14252)
!14260 = !DILocation(line: 4127, column: 17, scope: !14261)
!14261 = distinct !DILexicalBlock(scope: !14258, file: !3, line: 4126, column: 14)
!14262 = !DILocation(line: 4127, column: 3, scope: !14261)
!14263 = !DILocation(line: 4129, column: 2, scope: !14261)
!14264 = !DILocation(line: 4130, column: 17, scope: !14265)
!14265 = distinct !DILexicalBlock(scope: !14258, file: !3, line: 4129, column: 9)
!14266 = !DILocation(line: 4130, column: 3, scope: !14265)
!14267 = !DILocation(line: 4132, column: 3, scope: !14265)
!14268 = !DILocation(line: 4134, column: 1, scope: !14252)
!14269 = distinct !DISubprogram(name: "ocp_read_word", scope: !3, file: !3, line: 1230, type: !14270, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14270 = !DISubroutineType(types: !14271)
!14271 = !{!1115, !10280, !1115, !1115}
!14272 = !DILocalVariable(name: "tp", arg: 1, scope: !14269, file: !3, line: 1230, type: !10280)
!14273 = !DILocation(line: 1230, column: 40, scope: !14269)
!14274 = !DILocalVariable(name: "type", arg: 2, scope: !14269, file: !3, line: 1230, type: !1115)
!14275 = !DILocation(line: 1230, column: 48, scope: !14269)
!14276 = !DILocalVariable(name: "index", arg: 3, scope: !14269, file: !3, line: 1230, type: !1115)
!14277 = !DILocation(line: 1230, column: 58, scope: !14269)
!14278 = !DILocalVariable(name: "data", scope: !14269, file: !3, line: 1232, type: !784)
!14279 = !DILocation(line: 1232, column: 6, scope: !14269)
!14280 = !DILocalVariable(name: "tmp", scope: !14269, file: !3, line: 1233, type: !9980)
!14281 = !DILocation(line: 1233, column: 9, scope: !14269)
!14282 = !DILocalVariable(name: "byen", scope: !14269, file: !3, line: 1234, type: !1115)
!14283 = !DILocation(line: 1234, column: 6, scope: !14269)
!14284 = !DILocalVariable(name: "shift", scope: !14269, file: !3, line: 1235, type: !1474)
!14285 = !DILocation(line: 1235, column: 5, scope: !14269)
!14286 = !DILocation(line: 1235, column: 13, scope: !14269)
!14287 = !DILocation(line: 1235, column: 19, scope: !14269)
!14288 = !DILocation(line: 1237, column: 8, scope: !14269)
!14289 = !DILocation(line: 1238, column: 11, scope: !14269)
!14290 = !DILocation(line: 1238, column: 7, scope: !14269)
!14291 = !DILocation(line: 1240, column: 19, scope: !14269)
!14292 = !DILocation(line: 1240, column: 23, scope: !14269)
!14293 = !DILocation(line: 1240, column: 43, scope: !14269)
!14294 = !DILocation(line: 1240, column: 49, scope: !14269)
!14295 = !DILocation(line: 1240, column: 56, scope: !14269)
!14296 = !DILocation(line: 1240, column: 54, scope: !14269)
!14297 = !DILocation(line: 1240, column: 2, scope: !14269)
!14298 = !DILocation(line: 1242, column: 9, scope: !14269)
!14299 = !DILocation(line: 1242, column: 7, scope: !14269)
!14300 = !DILocation(line: 1243, column: 12, scope: !14269)
!14301 = !DILocation(line: 1243, column: 18, scope: !14269)
!14302 = !DILocation(line: 1243, column: 7, scope: !14269)
!14303 = !DILocation(line: 1244, column: 7, scope: !14269)
!14304 = !DILocation(line: 1246, column: 14, scope: !14269)
!14305 = !DILocation(line: 1246, column: 9, scope: !14269)
!14306 = !DILocation(line: 1246, column: 2, scope: !14269)
!14307 = distinct !DISubprogram(name: "ocp_write_word", scope: !3, file: !3, line: 1249, type: !14308, scopeLine: 1250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14308 = !DISubroutineType(types: !14309)
!14309 = !{null, !10280, !1115, !1115, !784}
!14310 = !DILocalVariable(name: "tp", arg: 1, scope: !14307, file: !3, line: 1249, type: !10280)
!14311 = !DILocation(line: 1249, column: 42, scope: !14307)
!14312 = !DILocalVariable(name: "type", arg: 2, scope: !14307, file: !3, line: 1249, type: !1115)
!14313 = !DILocation(line: 1249, column: 50, scope: !14307)
!14314 = !DILocalVariable(name: "index", arg: 3, scope: !14307, file: !3, line: 1249, type: !1115)
!14315 = !DILocation(line: 1249, column: 60, scope: !14307)
!14316 = !DILocalVariable(name: "data", arg: 4, scope: !14307, file: !3, line: 1249, type: !784)
!14317 = !DILocation(line: 1249, column: 71, scope: !14307)
!14318 = !DILocalVariable(name: "mask", scope: !14307, file: !3, line: 1251, type: !784)
!14319 = !DILocation(line: 1251, column: 6, scope: !14307)
!14320 = !DILocalVariable(name: "tmp", scope: !14307, file: !3, line: 1252, type: !9980)
!14321 = !DILocation(line: 1252, column: 9, scope: !14307)
!14322 = !DILocalVariable(name: "byen", scope: !14307, file: !3, line: 1253, type: !1115)
!14323 = !DILocation(line: 1253, column: 6, scope: !14307)
!14324 = !DILocalVariable(name: "shift", scope: !14307, file: !3, line: 1254, type: !1474)
!14325 = !DILocation(line: 1254, column: 5, scope: !14307)
!14326 = !DILocation(line: 1254, column: 13, scope: !14307)
!14327 = !DILocation(line: 1254, column: 19, scope: !14307)
!14328 = !DILocation(line: 1256, column: 10, scope: !14307)
!14329 = !DILocation(line: 1256, column: 7, scope: !14307)
!14330 = !DILocation(line: 1258, column: 6, scope: !14331)
!14331 = distinct !DILexicalBlock(scope: !14307, file: !3, line: 1258, column: 6)
!14332 = !DILocation(line: 1258, column: 12, scope: !14331)
!14333 = !DILocation(line: 1258, column: 6, scope: !14307)
!14334 = !DILocation(line: 1259, column: 12, scope: !14335)
!14335 = distinct !DILexicalBlock(scope: !14331, file: !3, line: 1258, column: 17)
!14336 = !DILocation(line: 1259, column: 8, scope: !14335)
!14337 = !DILocation(line: 1260, column: 13, scope: !14335)
!14338 = !DILocation(line: 1260, column: 19, scope: !14335)
!14339 = !DILocation(line: 1260, column: 8, scope: !14335)
!14340 = !DILocation(line: 1261, column: 13, scope: !14335)
!14341 = !DILocation(line: 1261, column: 19, scope: !14335)
!14342 = !DILocation(line: 1261, column: 8, scope: !14335)
!14343 = !DILocation(line: 1262, column: 9, scope: !14335)
!14344 = !DILocation(line: 1263, column: 2, scope: !14335)
!14345 = !DILocation(line: 1265, column: 8, scope: !14307)
!14346 = !DILocation(line: 1265, column: 6, scope: !14307)
!14347 = !DILocation(line: 1267, column: 20, scope: !14307)
!14348 = !DILocation(line: 1267, column: 24, scope: !14307)
!14349 = !DILocation(line: 1267, column: 31, scope: !14307)
!14350 = !DILocation(line: 1267, column: 50, scope: !14307)
!14351 = !DILocation(line: 1267, column: 56, scope: !14307)
!14352 = !DILocation(line: 1267, column: 2, scope: !14307)
!14353 = !DILocation(line: 1268, column: 1, scope: !14307)
!14354 = distinct !DISubprogram(name: "r8152_power_cut_en", scope: !3, file: !3, line: 2918, type: !10402, scopeLine: 2919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14355 = !DILocalVariable(name: "tp", arg: 1, scope: !14354, file: !3, line: 2918, type: !10280)
!14356 = !DILocation(line: 2918, column: 46, scope: !14354)
!14357 = !DILocalVariable(name: "enable", arg: 2, scope: !14354, file: !3, line: 2918, type: !617)
!14358 = !DILocation(line: 2918, column: 55, scope: !14354)
!14359 = !DILocalVariable(name: "ocp_data", scope: !14354, file: !3, line: 2920, type: !784)
!14360 = !DILocation(line: 2920, column: 6, scope: !14354)
!14361 = !DILocation(line: 2922, column: 27, scope: !14354)
!14362 = !DILocation(line: 2922, column: 13, scope: !14354)
!14363 = !DILocation(line: 2922, column: 11, scope: !14354)
!14364 = !DILocation(line: 2923, column: 6, scope: !14365)
!14365 = distinct !DILexicalBlock(scope: !14354, file: !3, line: 2923, column: 6)
!14366 = !DILocation(line: 2923, column: 6, scope: !14354)
!14367 = !DILocation(line: 2924, column: 12, scope: !14365)
!14368 = !DILocation(line: 2924, column: 3, scope: !14365)
!14369 = !DILocation(line: 2926, column: 12, scope: !14365)
!14370 = !DILocation(line: 2927, column: 17, scope: !14354)
!14371 = !DILocation(line: 2927, column: 49, scope: !14354)
!14372 = !DILocation(line: 2927, column: 2, scope: !14354)
!14373 = !DILocation(line: 2929, column: 27, scope: !14354)
!14374 = !DILocation(line: 2929, column: 13, scope: !14354)
!14375 = !DILocation(line: 2929, column: 11, scope: !14354)
!14376 = !DILocation(line: 2930, column: 11, scope: !14354)
!14377 = !DILocation(line: 2931, column: 17, scope: !14354)
!14378 = !DILocation(line: 2931, column: 55, scope: !14354)
!14379 = !DILocation(line: 2931, column: 2, scope: !14354)
!14380 = !DILocation(line: 2932, column: 1, scope: !14354)
!14381 = distinct !DISubprogram(name: "ocp_read_dword", scope: !3, file: !3, line: 1214, type: !14382, scopeLine: 1215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14382 = !DISubroutineType(types: !14383)
!14383 = !{!784, !10280, !1115, !1115}
!14384 = !DILocalVariable(name: "tp", arg: 1, scope: !14381, file: !3, line: 1214, type: !10280)
!14385 = !DILocation(line: 1214, column: 41, scope: !14381)
!14386 = !DILocalVariable(name: "type", arg: 2, scope: !14381, file: !3, line: 1214, type: !1115)
!14387 = !DILocation(line: 1214, column: 49, scope: !14381)
!14388 = !DILocalVariable(name: "index", arg: 3, scope: !14381, file: !3, line: 1214, type: !1115)
!14389 = !DILocation(line: 1214, column: 59, scope: !14381)
!14390 = !DILocalVariable(name: "data", scope: !14381, file: !3, line: 1216, type: !9980)
!14391 = !DILocation(line: 1216, column: 9, scope: !14381)
!14392 = !DILocation(line: 1218, column: 19, scope: !14381)
!14393 = !DILocation(line: 1218, column: 23, scope: !14381)
!14394 = !DILocation(line: 1218, column: 44, scope: !14381)
!14395 = !DILocation(line: 1218, column: 51, scope: !14381)
!14396 = !DILocation(line: 1218, column: 2, scope: !14381)
!14397 = !DILocation(line: 1220, column: 9, scope: !14381)
!14398 = !DILocation(line: 1220, column: 2, scope: !14381)
!14399 = distinct !DISubprogram(name: "ocp_write_dword", scope: !3, file: !3, line: 1223, type: !14308, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14400 = !DILocalVariable(name: "tp", arg: 1, scope: !14399, file: !3, line: 1223, type: !10280)
!14401 = !DILocation(line: 1223, column: 43, scope: !14399)
!14402 = !DILocalVariable(name: "type", arg: 2, scope: !14399, file: !3, line: 1223, type: !1115)
!14403 = !DILocation(line: 1223, column: 51, scope: !14399)
!14404 = !DILocalVariable(name: "index", arg: 3, scope: !14399, file: !3, line: 1223, type: !1115)
!14405 = !DILocation(line: 1223, column: 61, scope: !14399)
!14406 = !DILocalVariable(name: "data", arg: 4, scope: !14399, file: !3, line: 1223, type: !784)
!14407 = !DILocation(line: 1223, column: 72, scope: !14399)
!14408 = !DILocalVariable(name: "tmp", scope: !14399, file: !3, line: 1225, type: !9980)
!14409 = !DILocation(line: 1225, column: 9, scope: !14399)
!14410 = !DILocation(line: 1225, column: 15, scope: !14399)
!14411 = !DILocation(line: 1227, column: 20, scope: !14399)
!14412 = !DILocation(line: 1227, column: 24, scope: !14399)
!14413 = !DILocation(line: 1227, column: 59, scope: !14399)
!14414 = !DILocation(line: 1227, column: 65, scope: !14399)
!14415 = !DILocation(line: 1227, column: 2, scope: !14399)
!14416 = !DILocation(line: 1228, column: 1, scope: !14399)
!14417 = distinct !DISubprogram(name: "rtl_tally_reset", scope: !3, file: !3, line: 5322, type: !10380, scopeLine: 5323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14418 = !DILocalVariable(name: "tp", arg: 1, scope: !14417, file: !3, line: 5322, type: !10280)
!14419 = !DILocation(line: 5322, column: 43, scope: !14417)
!14420 = !DILocalVariable(name: "ocp_data", scope: !14417, file: !3, line: 5324, type: !784)
!14421 = !DILocation(line: 5324, column: 6, scope: !14417)
!14422 = !DILocation(line: 5326, column: 27, scope: !14417)
!14423 = !DILocation(line: 5326, column: 13, scope: !14417)
!14424 = !DILocation(line: 5326, column: 11, scope: !14417)
!14425 = !DILocation(line: 5327, column: 11, scope: !14417)
!14426 = !DILocation(line: 5328, column: 17, scope: !14417)
!14427 = !DILocation(line: 5328, column: 49, scope: !14417)
!14428 = !DILocation(line: 5328, column: 2, scope: !14417)
!14429 = !DILocation(line: 5329, column: 1, scope: !14417)
!14430 = distinct !DISubprogram(name: "kasan_check_read", scope: !14431, file: !14431, line: 34, type: !14432, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14431 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!14432 = !DISubroutineType(types: !14433)
!14433 = !{!617, !12370, !7}
!14434 = !DILocalVariable(name: "p", arg: 1, scope: !14430, file: !14431, line: 34, type: !12370)
!14435 = !DILocation(line: 34, column: 58, scope: !14430)
!14436 = !DILocalVariable(name: "size", arg: 2, scope: !14430, file: !14431, line: 34, type: !7)
!14437 = !DILocation(line: 34, column: 74, scope: !14430)
!14438 = !DILocation(line: 36, column: 2, scope: !14430)
!14439 = distinct !DISubprogram(name: "kcsan_check_access", scope: !14440, file: !14440, line: 178, type: !14441, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14440 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!14441 = !DISubroutineType(types: !14442)
!14442 = !{null, !12370, !671, !72}
!14443 = !DILocalVariable(name: "ptr", arg: 1, scope: !14439, file: !14440, line: 178, type: !12370)
!14444 = !DILocation(line: 178, column: 60, scope: !14439)
!14445 = !DILocalVariable(name: "size", arg: 2, scope: !14439, file: !14440, line: 178, type: !671)
!14446 = !DILocation(line: 178, column: 72, scope: !14439)
!14447 = !DILocalVariable(name: "type", arg: 3, scope: !14439, file: !14440, line: 179, type: !72)
!14448 = !DILocation(line: 179, column: 15, scope: !14439)
!14449 = !DILocation(line: 179, column: 23, scope: !14439)
!14450 = distinct !DISubprogram(name: "ocp_reg_read", scope: !3, file: !3, line: 1308, type: !14451, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14451 = !DISubroutineType(types: !14452)
!14452 = !{!1115, !10280, !1115}
!14453 = !DILocalVariable(name: "tp", arg: 1, scope: !14450, file: !3, line: 1308, type: !10280)
!14454 = !DILocation(line: 1308, column: 39, scope: !14450)
!14455 = !DILocalVariable(name: "addr", arg: 2, scope: !14450, file: !3, line: 1308, type: !1115)
!14456 = !DILocation(line: 1308, column: 47, scope: !14450)
!14457 = !DILocalVariable(name: "ocp_base", scope: !14450, file: !3, line: 1310, type: !1115)
!14458 = !DILocation(line: 1310, column: 6, scope: !14450)
!14459 = !DILocalVariable(name: "ocp_index", scope: !14450, file: !3, line: 1310, type: !1115)
!14460 = !DILocation(line: 1310, column: 16, scope: !14450)
!14461 = !DILocation(line: 1312, column: 13, scope: !14450)
!14462 = !DILocation(line: 1312, column: 18, scope: !14450)
!14463 = !DILocation(line: 1312, column: 11, scope: !14450)
!14464 = !DILocation(line: 1313, column: 6, scope: !14465)
!14465 = distinct !DILexicalBlock(scope: !14450, file: !3, line: 1313, column: 6)
!14466 = !DILocation(line: 1313, column: 18, scope: !14465)
!14467 = !DILocation(line: 1313, column: 22, scope: !14465)
!14468 = !DILocation(line: 1313, column: 15, scope: !14465)
!14469 = !DILocation(line: 1313, column: 6, scope: !14450)
!14470 = !DILocation(line: 1314, column: 18, scope: !14471)
!14471 = distinct !DILexicalBlock(scope: !14465, file: !3, line: 1313, column: 32)
!14472 = !DILocation(line: 1314, column: 55, scope: !14471)
!14473 = !DILocation(line: 1314, column: 3, scope: !14471)
!14474 = !DILocation(line: 1315, column: 18, scope: !14471)
!14475 = !DILocation(line: 1315, column: 3, scope: !14471)
!14476 = !DILocation(line: 1315, column: 7, scope: !14471)
!14477 = !DILocation(line: 1315, column: 16, scope: !14471)
!14478 = !DILocation(line: 1316, column: 2, scope: !14471)
!14479 = !DILocation(line: 1318, column: 15, scope: !14450)
!14480 = !DILocation(line: 1318, column: 20, scope: !14450)
!14481 = !DILocation(line: 1318, column: 30, scope: !14450)
!14482 = !DILocation(line: 1318, column: 14, scope: !14450)
!14483 = !DILocation(line: 1318, column: 12, scope: !14450)
!14484 = !DILocation(line: 1319, column: 23, scope: !14450)
!14485 = !DILocation(line: 1319, column: 41, scope: !14450)
!14486 = !DILocation(line: 1319, column: 9, scope: !14450)
!14487 = !DILocation(line: 1319, column: 2, scope: !14450)
!14488 = distinct !DISubprogram(name: "ocp_reg_write", scope: !3, file: !3, line: 1322, type: !14489, scopeLine: 1323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14489 = !DISubroutineType(types: !14490)
!14490 = !{null, !10280, !1115, !1115}
!14491 = !DILocalVariable(name: "tp", arg: 1, scope: !14488, file: !3, line: 1322, type: !10280)
!14492 = !DILocation(line: 1322, column: 41, scope: !14488)
!14493 = !DILocalVariable(name: "addr", arg: 2, scope: !14488, file: !3, line: 1322, type: !1115)
!14494 = !DILocation(line: 1322, column: 49, scope: !14488)
!14495 = !DILocalVariable(name: "data", arg: 3, scope: !14488, file: !3, line: 1322, type: !1115)
!14496 = !DILocation(line: 1322, column: 59, scope: !14488)
!14497 = !DILocalVariable(name: "ocp_base", scope: !14488, file: !3, line: 1324, type: !1115)
!14498 = !DILocation(line: 1324, column: 6, scope: !14488)
!14499 = !DILocalVariable(name: "ocp_index", scope: !14488, file: !3, line: 1324, type: !1115)
!14500 = !DILocation(line: 1324, column: 16, scope: !14488)
!14501 = !DILocation(line: 1326, column: 13, scope: !14488)
!14502 = !DILocation(line: 1326, column: 18, scope: !14488)
!14503 = !DILocation(line: 1326, column: 11, scope: !14488)
!14504 = !DILocation(line: 1327, column: 6, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14488, file: !3, line: 1327, column: 6)
!14506 = !DILocation(line: 1327, column: 18, scope: !14505)
!14507 = !DILocation(line: 1327, column: 22, scope: !14505)
!14508 = !DILocation(line: 1327, column: 15, scope: !14505)
!14509 = !DILocation(line: 1327, column: 6, scope: !14488)
!14510 = !DILocation(line: 1328, column: 18, scope: !14511)
!14511 = distinct !DILexicalBlock(scope: !14505, file: !3, line: 1327, column: 32)
!14512 = !DILocation(line: 1328, column: 55, scope: !14511)
!14513 = !DILocation(line: 1328, column: 3, scope: !14511)
!14514 = !DILocation(line: 1329, column: 18, scope: !14511)
!14515 = !DILocation(line: 1329, column: 3, scope: !14511)
!14516 = !DILocation(line: 1329, column: 7, scope: !14511)
!14517 = !DILocation(line: 1329, column: 16, scope: !14511)
!14518 = !DILocation(line: 1330, column: 2, scope: !14511)
!14519 = !DILocation(line: 1332, column: 15, scope: !14488)
!14520 = !DILocation(line: 1332, column: 20, scope: !14488)
!14521 = !DILocation(line: 1332, column: 30, scope: !14488)
!14522 = !DILocation(line: 1332, column: 14, scope: !14488)
!14523 = !DILocation(line: 1332, column: 12, scope: !14488)
!14524 = !DILocation(line: 1333, column: 17, scope: !14488)
!14525 = !DILocation(line: 1333, column: 35, scope: !14488)
!14526 = !DILocation(line: 1333, column: 46, scope: !14488)
!14527 = !DILocation(line: 1333, column: 2, scope: !14488)
!14528 = !DILocation(line: 1334, column: 1, scope: !14488)
!14529 = distinct !DISubprogram(name: "generic_ocp_read", scope: !3, file: !3, line: 1083, type: !14530, scopeLine: 1085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14530 = !DISubroutineType(types: !14531)
!14531 = !{!72, !10280, !1115, !1115, !647, !1115}
!14532 = !DILocalVariable(name: "tp", arg: 1, scope: !14529, file: !3, line: 1083, type: !10280)
!14533 = !DILocation(line: 1083, column: 43, scope: !14529)
!14534 = !DILocalVariable(name: "index", arg: 2, scope: !14529, file: !3, line: 1083, type: !1115)
!14535 = !DILocation(line: 1083, column: 51, scope: !14529)
!14536 = !DILocalVariable(name: "size", arg: 3, scope: !14529, file: !3, line: 1083, type: !1115)
!14537 = !DILocation(line: 1083, column: 62, scope: !14529)
!14538 = !DILocalVariable(name: "data", arg: 4, scope: !14529, file: !3, line: 1084, type: !647)
!14539 = !DILocation(line: 1084, column: 14, scope: !14529)
!14540 = !DILocalVariable(name: "type", arg: 5, scope: !14529, file: !3, line: 1084, type: !1115)
!14541 = !DILocation(line: 1084, column: 24, scope: !14529)
!14542 = !DILocalVariable(name: "limit", scope: !14529, file: !3, line: 1086, type: !1115)
!14543 = !DILocation(line: 1086, column: 6, scope: !14529)
!14544 = !DILocalVariable(name: "ret", scope: !14529, file: !3, line: 1087, type: !72)
!14545 = !DILocation(line: 1087, column: 6, scope: !14529)
!14546 = !DILocation(line: 1089, column: 32, scope: !14547)
!14547 = distinct !DILexicalBlock(scope: !14529, file: !3, line: 1089, column: 6)
!14548 = !DILocation(line: 1089, column: 36, scope: !14547)
!14549 = !DILocation(line: 1089, column: 6, scope: !14547)
!14550 = !DILocation(line: 1089, column: 6, scope: !14529)
!14551 = !DILocation(line: 1090, column: 3, scope: !14547)
!14552 = !DILocation(line: 1093, column: 7, scope: !14553)
!14553 = distinct !DILexicalBlock(scope: !14529, file: !3, line: 1093, column: 6)
!14554 = !DILocation(line: 1093, column: 12, scope: !14553)
!14555 = !DILocation(line: 1093, column: 17, scope: !14553)
!14556 = !DILocation(line: 1093, column: 21, scope: !14553)
!14557 = !DILocation(line: 1093, column: 26, scope: !14553)
!14558 = !DILocation(line: 1093, column: 30, scope: !14553)
!14559 = !DILocation(line: 1093, column: 36, scope: !14553)
!14560 = !DILocation(line: 1093, column: 41, scope: !14553)
!14561 = !DILocation(line: 1093, column: 45, scope: !14553)
!14562 = !DILocation(line: 1093, column: 6, scope: !14529)
!14563 = !DILocation(line: 1094, column: 3, scope: !14553)
!14564 = !DILocation(line: 1096, column: 11, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14529, file: !3, line: 1096, column: 6)
!14566 = !DILocation(line: 1096, column: 6, scope: !14565)
!14567 = !DILocation(line: 1096, column: 24, scope: !14565)
!14568 = !DILocation(line: 1096, column: 19, scope: !14565)
!14569 = !DILocation(line: 1096, column: 17, scope: !14565)
!14570 = !DILocation(line: 1096, column: 29, scope: !14565)
!14571 = !DILocation(line: 1096, column: 6, scope: !14529)
!14572 = !DILocation(line: 1097, column: 3, scope: !14565)
!14573 = !DILocation(line: 1099, column: 2, scope: !14529)
!14574 = !DILocation(line: 1099, column: 9, scope: !14529)
!14575 = !DILocation(line: 1100, column: 7, scope: !14576)
!14576 = distinct !DILexicalBlock(scope: !14577, file: !3, line: 1100, column: 7)
!14577 = distinct !DILexicalBlock(scope: !14529, file: !3, line: 1099, column: 15)
!14578 = !DILocation(line: 1100, column: 14, scope: !14576)
!14579 = !DILocation(line: 1100, column: 12, scope: !14576)
!14580 = !DILocation(line: 1100, column: 7, scope: !14577)
!14581 = !DILocation(line: 1101, column: 24, scope: !14582)
!14582 = distinct !DILexicalBlock(scope: !14576, file: !3, line: 1100, column: 21)
!14583 = !DILocation(line: 1101, column: 28, scope: !14582)
!14584 = !DILocation(line: 1101, column: 35, scope: !14582)
!14585 = !DILocation(line: 1101, column: 41, scope: !14582)
!14586 = !DILocation(line: 1101, column: 48, scope: !14582)
!14587 = !DILocation(line: 1101, column: 10, scope: !14582)
!14588 = !DILocation(line: 1101, column: 8, scope: !14582)
!14589 = !DILocation(line: 1102, column: 8, scope: !14590)
!14590 = distinct !DILexicalBlock(scope: !14582, file: !3, line: 1102, column: 8)
!14591 = !DILocation(line: 1102, column: 12, scope: !14590)
!14592 = !DILocation(line: 1102, column: 8, scope: !14582)
!14593 = !DILocation(line: 1103, column: 5, scope: !14590)
!14594 = !DILocation(line: 1105, column: 13, scope: !14582)
!14595 = !DILocation(line: 1105, column: 10, scope: !14582)
!14596 = !DILocation(line: 1106, column: 12, scope: !14582)
!14597 = !DILocation(line: 1106, column: 9, scope: !14582)
!14598 = !DILocation(line: 1107, column: 12, scope: !14582)
!14599 = !DILocation(line: 1107, column: 9, scope: !14582)
!14600 = !DILocation(line: 1108, column: 3, scope: !14582)
!14601 = !DILocation(line: 1109, column: 24, scope: !14602)
!14602 = distinct !DILexicalBlock(scope: !14576, file: !3, line: 1108, column: 10)
!14603 = !DILocation(line: 1109, column: 28, scope: !14602)
!14604 = !DILocation(line: 1109, column: 35, scope: !14602)
!14605 = !DILocation(line: 1109, column: 41, scope: !14602)
!14606 = !DILocation(line: 1109, column: 47, scope: !14602)
!14607 = !DILocation(line: 1109, column: 10, scope: !14602)
!14608 = !DILocation(line: 1109, column: 8, scope: !14602)
!14609 = !DILocation(line: 1110, column: 8, scope: !14610)
!14610 = distinct !DILexicalBlock(scope: !14602, file: !3, line: 1110, column: 8)
!14611 = !DILocation(line: 1110, column: 12, scope: !14610)
!14612 = !DILocation(line: 1110, column: 8, scope: !14602)
!14613 = !DILocation(line: 1111, column: 5, scope: !14610)
!14614 = !DILocation(line: 1113, column: 13, scope: !14602)
!14615 = !DILocation(line: 1113, column: 10, scope: !14602)
!14616 = !DILocation(line: 1114, column: 12, scope: !14602)
!14617 = !DILocation(line: 1114, column: 9, scope: !14602)
!14618 = !DILocation(line: 1115, column: 9, scope: !14602)
!14619 = !DILocation(line: 1116, column: 4, scope: !14602)
!14620 = distinct !{!14620, !14573, !14621}
!14621 = !DILocation(line: 1118, column: 2, scope: !14529)
!14622 = !DILocation(line: 1120, column: 6, scope: !14623)
!14623 = distinct !DILexicalBlock(scope: !14529, file: !3, line: 1120, column: 6)
!14624 = !DILocation(line: 1120, column: 10, scope: !14623)
!14625 = !DILocation(line: 1120, column: 6, scope: !14529)
!14626 = !DILocation(line: 1121, column: 18, scope: !14623)
!14627 = !DILocation(line: 1121, column: 3, scope: !14623)
!14628 = !DILocation(line: 1123, column: 9, scope: !14529)
!14629 = !DILocation(line: 1123, column: 2, scope: !14529)
!14630 = !DILocation(line: 1124, column: 1, scope: !14529)
!14631 = distinct !DISubprogram(name: "get_registers", scope: !3, file: !3, line: 1034, type: !14632, scopeLine: 1035, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14632 = !DISubroutineType(types: !14633)
!14633 = !{!72, !10280, !1115, !1115, !1115, !647}
!14634 = !DILocation(line: 445, column: 72, scope: !11595, inlinedAt: !14635)
!14635 = distinct !DILocation(line: 552, column: 10, scope: !11600, inlinedAt: !14636)
!14636 = distinct !DILocation(line: 1039, column: 8, scope: !14631)
!14637 = !DILocation(line: 446, column: 9, scope: !11595, inlinedAt: !14635)
!14638 = !DILocation(line: 446, column: 23, scope: !11595, inlinedAt: !14635)
!14639 = !DILocation(line: 448, column: 8, scope: !11595, inlinedAt: !14635)
!14640 = !DILocation(line: 318, column: 67, scope: !11613, inlinedAt: !14641)
!14641 = distinct !DILocation(line: 553, column: 20, scope: !11600, inlinedAt: !14636)
!14642 = !DILocation(line: 346, column: 58, scope: !11619, inlinedAt: !14643)
!14643 = distinct !DILocation(line: 547, column: 11, scope: !11600, inlinedAt: !14636)
!14644 = !DILocation(line: 472, column: 28, scope: !11625, inlinedAt: !14645)
!14645 = distinct !DILocation(line: 481, column: 9, scope: !11630, inlinedAt: !14646)
!14646 = distinct !DILocation(line: 545, column: 11, scope: !11632, inlinedAt: !14636)
!14647 = !DILocation(line: 472, column: 40, scope: !11625, inlinedAt: !14645)
!14648 = !DILocation(line: 472, column: 60, scope: !11625, inlinedAt: !14645)
!14649 = !DILocation(line: 478, column: 51, scope: !11630, inlinedAt: !14646)
!14650 = !DILocation(line: 478, column: 63, scope: !11630, inlinedAt: !14646)
!14651 = !DILocation(line: 480, column: 15, scope: !11630, inlinedAt: !14646)
!14652 = !DILocation(line: 538, column: 45, scope: !11602, inlinedAt: !14636)
!14653 = !DILocation(line: 538, column: 57, scope: !11602, inlinedAt: !14636)
!14654 = !DILocation(line: 542, column: 16, scope: !11600, inlinedAt: !14636)
!14655 = !DILocalVariable(name: "tp", arg: 1, scope: !14631, file: !3, line: 1034, type: !10280)
!14656 = !DILocation(line: 1034, column: 33, scope: !14631)
!14657 = !DILocalVariable(name: "value", arg: 2, scope: !14631, file: !3, line: 1034, type: !1115)
!14658 = !DILocation(line: 1034, column: 41, scope: !14631)
!14659 = !DILocalVariable(name: "index", arg: 3, scope: !14631, file: !3, line: 1034, type: !1115)
!14660 = !DILocation(line: 1034, column: 52, scope: !14631)
!14661 = !DILocalVariable(name: "size", arg: 4, scope: !14631, file: !3, line: 1034, type: !1115)
!14662 = !DILocation(line: 1034, column: 63, scope: !14631)
!14663 = !DILocalVariable(name: "data", arg: 5, scope: !14631, file: !3, line: 1034, type: !647)
!14664 = !DILocation(line: 1034, column: 75, scope: !14631)
!14665 = !DILocalVariable(name: "ret", scope: !14631, file: !3, line: 1036, type: !72)
!14666 = !DILocation(line: 1036, column: 6, scope: !14631)
!14667 = !DILocalVariable(name: "tmp", scope: !14631, file: !3, line: 1037, type: !647)
!14668 = !DILocation(line: 1037, column: 8, scope: !14631)
!14669 = !DILocation(line: 1039, column: 16, scope: !14631)
!14670 = !DILocation(line: 540, column: 27, scope: !11601, inlinedAt: !14636)
!14671 = !DILocation(line: 540, column: 6, scope: !11601, inlinedAt: !14636)
!14672 = !DILocation(line: 540, column: 6, scope: !11602, inlinedAt: !14636)
!14673 = !DILocation(line: 544, column: 7, scope: !11632, inlinedAt: !14636)
!14674 = !DILocation(line: 544, column: 12, scope: !11632, inlinedAt: !14636)
!14675 = !DILocation(line: 544, column: 7, scope: !11600, inlinedAt: !14636)
!14676 = !DILocation(line: 545, column: 25, scope: !11632, inlinedAt: !14636)
!14677 = !DILocation(line: 545, column: 31, scope: !11632, inlinedAt: !14636)
!14678 = !DILocation(line: 480, column: 33, scope: !11630, inlinedAt: !14646)
!14679 = !DILocation(line: 480, column: 23, scope: !11630, inlinedAt: !14646)
!14680 = !DILocation(line: 481, column: 29, scope: !11630, inlinedAt: !14646)
!14681 = !DILocation(line: 481, column: 35, scope: !11630, inlinedAt: !14646)
!14682 = !DILocation(line: 481, column: 42, scope: !11630, inlinedAt: !14646)
!14683 = !DILocation(line: 474, column: 23, scope: !11625, inlinedAt: !14645)
!14684 = !DILocation(line: 474, column: 29, scope: !11625, inlinedAt: !14645)
!14685 = !DILocation(line: 474, column: 36, scope: !11625, inlinedAt: !14645)
!14686 = !DILocation(line: 474, column: 9, scope: !11625, inlinedAt: !14645)
!14687 = !DILocation(line: 545, column: 4, scope: !11632, inlinedAt: !14636)
!14688 = !DILocation(line: 547, column: 25, scope: !11600, inlinedAt: !14636)
!14689 = !DILocation(line: 348, column: 7, scope: !11684, inlinedAt: !14643)
!14690 = !DILocation(line: 348, column: 6, scope: !11619, inlinedAt: !14643)
!14691 = !DILocation(line: 349, column: 3, scope: !11684, inlinedAt: !14643)
!14692 = !DILocation(line: 351, column: 6, scope: !11688, inlinedAt: !14643)
!14693 = !DILocation(line: 351, column: 11, scope: !11688, inlinedAt: !14643)
!14694 = !DILocation(line: 351, column: 6, scope: !11619, inlinedAt: !14643)
!14695 = !DILocation(line: 352, column: 3, scope: !11688, inlinedAt: !14643)
!14696 = !DILocation(line: 354, column: 32, scope: !11693, inlinedAt: !14643)
!14697 = !DILocation(line: 354, column: 37, scope: !11693, inlinedAt: !14643)
!14698 = !DILocation(line: 354, column: 42, scope: !11693, inlinedAt: !14643)
!14699 = !DILocation(line: 354, column: 45, scope: !11693, inlinedAt: !14643)
!14700 = !DILocation(line: 354, column: 50, scope: !11693, inlinedAt: !14643)
!14701 = !DILocation(line: 354, column: 6, scope: !11619, inlinedAt: !14643)
!14702 = !DILocation(line: 355, column: 3, scope: !11693, inlinedAt: !14643)
!14703 = !DILocation(line: 356, column: 32, scope: !11701, inlinedAt: !14643)
!14704 = !DILocation(line: 356, column: 37, scope: !11701, inlinedAt: !14643)
!14705 = !DILocation(line: 356, column: 43, scope: !11701, inlinedAt: !14643)
!14706 = !DILocation(line: 356, column: 46, scope: !11701, inlinedAt: !14643)
!14707 = !DILocation(line: 356, column: 51, scope: !11701, inlinedAt: !14643)
!14708 = !DILocation(line: 356, column: 6, scope: !11619, inlinedAt: !14643)
!14709 = !DILocation(line: 357, column: 3, scope: !11701, inlinedAt: !14643)
!14710 = !DILocation(line: 358, column: 6, scope: !11709, inlinedAt: !14643)
!14711 = !DILocation(line: 358, column: 11, scope: !11709, inlinedAt: !14643)
!14712 = !DILocation(line: 358, column: 6, scope: !11619, inlinedAt: !14643)
!14713 = !DILocation(line: 358, column: 26, scope: !11709, inlinedAt: !14643)
!14714 = !DILocation(line: 359, column: 6, scope: !11714, inlinedAt: !14643)
!14715 = !DILocation(line: 359, column: 11, scope: !11714, inlinedAt: !14643)
!14716 = !DILocation(line: 359, column: 6, scope: !11619, inlinedAt: !14643)
!14717 = !DILocation(line: 359, column: 26, scope: !11714, inlinedAt: !14643)
!14718 = !DILocation(line: 360, column: 6, scope: !11719, inlinedAt: !14643)
!14719 = !DILocation(line: 360, column: 11, scope: !11719, inlinedAt: !14643)
!14720 = !DILocation(line: 360, column: 6, scope: !11619, inlinedAt: !14643)
!14721 = !DILocation(line: 360, column: 26, scope: !11719, inlinedAt: !14643)
!14722 = !DILocation(line: 361, column: 6, scope: !11724, inlinedAt: !14643)
!14723 = !DILocation(line: 361, column: 11, scope: !11724, inlinedAt: !14643)
!14724 = !DILocation(line: 361, column: 6, scope: !11619, inlinedAt: !14643)
!14725 = !DILocation(line: 361, column: 26, scope: !11724, inlinedAt: !14643)
!14726 = !DILocation(line: 362, column: 6, scope: !11729, inlinedAt: !14643)
!14727 = !DILocation(line: 362, column: 11, scope: !11729, inlinedAt: !14643)
!14728 = !DILocation(line: 362, column: 6, scope: !11619, inlinedAt: !14643)
!14729 = !DILocation(line: 362, column: 26, scope: !11729, inlinedAt: !14643)
!14730 = !DILocation(line: 363, column: 6, scope: !11734, inlinedAt: !14643)
!14731 = !DILocation(line: 363, column: 11, scope: !11734, inlinedAt: !14643)
!14732 = !DILocation(line: 363, column: 6, scope: !11619, inlinedAt: !14643)
!14733 = !DILocation(line: 363, column: 26, scope: !11734, inlinedAt: !14643)
!14734 = !DILocation(line: 364, column: 6, scope: !11739, inlinedAt: !14643)
!14735 = !DILocation(line: 364, column: 11, scope: !11739, inlinedAt: !14643)
!14736 = !DILocation(line: 364, column: 6, scope: !11619, inlinedAt: !14643)
!14737 = !DILocation(line: 364, column: 26, scope: !11739, inlinedAt: !14643)
!14738 = !DILocation(line: 365, column: 6, scope: !11744, inlinedAt: !14643)
!14739 = !DILocation(line: 365, column: 11, scope: !11744, inlinedAt: !14643)
!14740 = !DILocation(line: 365, column: 6, scope: !11619, inlinedAt: !14643)
!14741 = !DILocation(line: 365, column: 26, scope: !11744, inlinedAt: !14643)
!14742 = !DILocation(line: 366, column: 6, scope: !11749, inlinedAt: !14643)
!14743 = !DILocation(line: 366, column: 11, scope: !11749, inlinedAt: !14643)
!14744 = !DILocation(line: 366, column: 6, scope: !11619, inlinedAt: !14643)
!14745 = !DILocation(line: 366, column: 26, scope: !11749, inlinedAt: !14643)
!14746 = !DILocation(line: 367, column: 6, scope: !11754, inlinedAt: !14643)
!14747 = !DILocation(line: 367, column: 11, scope: !11754, inlinedAt: !14643)
!14748 = !DILocation(line: 367, column: 6, scope: !11619, inlinedAt: !14643)
!14749 = !DILocation(line: 367, column: 26, scope: !11754, inlinedAt: !14643)
!14750 = !DILocation(line: 368, column: 6, scope: !11759, inlinedAt: !14643)
!14751 = !DILocation(line: 368, column: 11, scope: !11759, inlinedAt: !14643)
!14752 = !DILocation(line: 368, column: 6, scope: !11619, inlinedAt: !14643)
!14753 = !DILocation(line: 368, column: 26, scope: !11759, inlinedAt: !14643)
!14754 = !DILocation(line: 369, column: 6, scope: !11764, inlinedAt: !14643)
!14755 = !DILocation(line: 369, column: 11, scope: !11764, inlinedAt: !14643)
!14756 = !DILocation(line: 369, column: 6, scope: !11619, inlinedAt: !14643)
!14757 = !DILocation(line: 369, column: 26, scope: !11764, inlinedAt: !14643)
!14758 = !DILocation(line: 370, column: 6, scope: !11769, inlinedAt: !14643)
!14759 = !DILocation(line: 370, column: 11, scope: !11769, inlinedAt: !14643)
!14760 = !DILocation(line: 370, column: 6, scope: !11619, inlinedAt: !14643)
!14761 = !DILocation(line: 370, column: 26, scope: !11769, inlinedAt: !14643)
!14762 = !DILocation(line: 371, column: 6, scope: !11774, inlinedAt: !14643)
!14763 = !DILocation(line: 371, column: 11, scope: !11774, inlinedAt: !14643)
!14764 = !DILocation(line: 371, column: 6, scope: !11619, inlinedAt: !14643)
!14765 = !DILocation(line: 371, column: 26, scope: !11774, inlinedAt: !14643)
!14766 = !DILocation(line: 372, column: 6, scope: !11779, inlinedAt: !14643)
!14767 = !DILocation(line: 372, column: 11, scope: !11779, inlinedAt: !14643)
!14768 = !DILocation(line: 372, column: 6, scope: !11619, inlinedAt: !14643)
!14769 = !DILocation(line: 372, column: 26, scope: !11779, inlinedAt: !14643)
!14770 = !DILocation(line: 373, column: 6, scope: !11784, inlinedAt: !14643)
!14771 = !DILocation(line: 373, column: 11, scope: !11784, inlinedAt: !14643)
!14772 = !DILocation(line: 373, column: 6, scope: !11619, inlinedAt: !14643)
!14773 = !DILocation(line: 373, column: 26, scope: !11784, inlinedAt: !14643)
!14774 = !DILocation(line: 374, column: 6, scope: !11789, inlinedAt: !14643)
!14775 = !DILocation(line: 374, column: 11, scope: !11789, inlinedAt: !14643)
!14776 = !DILocation(line: 374, column: 6, scope: !11619, inlinedAt: !14643)
!14777 = !DILocation(line: 374, column: 26, scope: !11789, inlinedAt: !14643)
!14778 = !DILocation(line: 375, column: 6, scope: !11794, inlinedAt: !14643)
!14779 = !DILocation(line: 375, column: 11, scope: !11794, inlinedAt: !14643)
!14780 = !DILocation(line: 375, column: 6, scope: !11619, inlinedAt: !14643)
!14781 = !DILocation(line: 375, column: 27, scope: !11794, inlinedAt: !14643)
!14782 = !DILocation(line: 376, column: 6, scope: !11799, inlinedAt: !14643)
!14783 = !DILocation(line: 376, column: 11, scope: !11799, inlinedAt: !14643)
!14784 = !DILocation(line: 376, column: 6, scope: !11619, inlinedAt: !14643)
!14785 = !DILocation(line: 376, column: 32, scope: !11799, inlinedAt: !14643)
!14786 = !DILocation(line: 377, column: 6, scope: !11804, inlinedAt: !14643)
!14787 = !DILocation(line: 377, column: 11, scope: !11804, inlinedAt: !14643)
!14788 = !DILocation(line: 377, column: 6, scope: !11619, inlinedAt: !14643)
!14789 = !DILocation(line: 377, column: 32, scope: !11804, inlinedAt: !14643)
!14790 = !DILocation(line: 378, column: 6, scope: !11809, inlinedAt: !14643)
!14791 = !DILocation(line: 378, column: 11, scope: !11809, inlinedAt: !14643)
!14792 = !DILocation(line: 378, column: 6, scope: !11619, inlinedAt: !14643)
!14793 = !DILocation(line: 378, column: 32, scope: !11809, inlinedAt: !14643)
!14794 = !DILocation(line: 379, column: 6, scope: !11814, inlinedAt: !14643)
!14795 = !DILocation(line: 379, column: 11, scope: !11814, inlinedAt: !14643)
!14796 = !DILocation(line: 379, column: 6, scope: !11619, inlinedAt: !14643)
!14797 = !DILocation(line: 379, column: 33, scope: !11814, inlinedAt: !14643)
!14798 = !DILocation(line: 380, column: 6, scope: !11819, inlinedAt: !14643)
!14799 = !DILocation(line: 380, column: 11, scope: !11819, inlinedAt: !14643)
!14800 = !DILocation(line: 380, column: 6, scope: !11619, inlinedAt: !14643)
!14801 = !DILocation(line: 380, column: 33, scope: !11819, inlinedAt: !14643)
!14802 = !DILocation(line: 381, column: 6, scope: !11824, inlinedAt: !14643)
!14803 = !DILocation(line: 381, column: 11, scope: !11824, inlinedAt: !14643)
!14804 = !DILocation(line: 381, column: 6, scope: !11619, inlinedAt: !14643)
!14805 = !DILocation(line: 381, column: 33, scope: !11824, inlinedAt: !14643)
!14806 = !DILocation(line: 382, column: 2, scope: !11829, inlinedAt: !14643)
!14807 = !DILocation(line: 382, column: 2, scope: !11833, inlinedAt: !14643)
!14808 = !DILocation(line: 382, column: 2, scope: !11834, inlinedAt: !14643)
!14809 = !DILocation(line: 386, column: 1, scope: !11619, inlinedAt: !14643)
!14810 = !DILocation(line: 547, column: 9, scope: !11600, inlinedAt: !14636)
!14811 = !DILocation(line: 549, column: 8, scope: !11840, inlinedAt: !14636)
!14812 = !DILocation(line: 549, column: 7, scope: !11600, inlinedAt: !14636)
!14813 = !DILocation(line: 550, column: 4, scope: !11840, inlinedAt: !14636)
!14814 = !DILocation(line: 553, column: 33, scope: !11600, inlinedAt: !14636)
!14815 = !DILocation(line: 325, column: 6, scope: !11845, inlinedAt: !14641)
!14816 = !DILocation(line: 325, column: 6, scope: !11613, inlinedAt: !14641)
!14817 = !DILocation(line: 326, column: 3, scope: !11845, inlinedAt: !14641)
!14818 = !DILocation(line: 332, column: 9, scope: !11613, inlinedAt: !14641)
!14819 = !DILocation(line: 332, column: 15, scope: !11613, inlinedAt: !14641)
!14820 = !DILocation(line: 332, column: 2, scope: !11613, inlinedAt: !14641)
!14821 = !DILocation(line: 336, column: 1, scope: !11613, inlinedAt: !14641)
!14822 = !DILocation(line: 553, column: 5, scope: !11600, inlinedAt: !14636)
!14823 = !DILocation(line: 553, column: 41, scope: !11600, inlinedAt: !14636)
!14824 = !DILocation(line: 554, column: 5, scope: !11600, inlinedAt: !14636)
!14825 = !DILocation(line: 554, column: 12, scope: !11600, inlinedAt: !14636)
!14826 = !DILocation(line: 448, column: 31, scope: !11595, inlinedAt: !14635)
!14827 = !DILocation(line: 448, column: 34, scope: !11595, inlinedAt: !14635)
!14828 = !DILocation(line: 448, column: 14, scope: !11595, inlinedAt: !14635)
!14829 = !DILocation(line: 450, column: 22, scope: !11595, inlinedAt: !14635)
!14830 = !DILocation(line: 450, column: 25, scope: !11595, inlinedAt: !14635)
!14831 = !DILocation(line: 450, column: 30, scope: !11595, inlinedAt: !14635)
!14832 = !DILocation(line: 450, column: 36, scope: !11595, inlinedAt: !14635)
!14833 = !DILocation(line: 450, column: 8, scope: !11595, inlinedAt: !14635)
!14834 = !DILocation(line: 450, column: 6, scope: !11595, inlinedAt: !14635)
!14835 = !DILocation(line: 451, column: 9, scope: !11595, inlinedAt: !14635)
!14836 = !DILocation(line: 552, column: 3, scope: !11600, inlinedAt: !14636)
!14837 = !DILocation(line: 557, column: 19, scope: !11602, inlinedAt: !14636)
!14838 = !DILocation(line: 557, column: 25, scope: !11602, inlinedAt: !14636)
!14839 = !DILocation(line: 557, column: 9, scope: !11602, inlinedAt: !14636)
!14840 = !DILocation(line: 557, column: 2, scope: !11602, inlinedAt: !14636)
!14841 = !DILocation(line: 558, column: 1, scope: !11602, inlinedAt: !14636)
!14842 = !DILocation(line: 1039, column: 6, scope: !14631)
!14843 = !DILocation(line: 1040, column: 7, scope: !14844)
!14844 = distinct !DILexicalBlock(scope: !14631, file: !3, line: 1040, column: 6)
!14845 = !DILocation(line: 1040, column: 6, scope: !14631)
!14846 = !DILocation(line: 1041, column: 3, scope: !14844)
!14847 = !DILocation(line: 1043, column: 24, scope: !14631)
!14848 = !DILocation(line: 1043, column: 28, scope: !14631)
!14849 = !DILocation(line: 1043, column: 34, scope: !14631)
!14850 = !DILocation(line: 1045, column: 10, scope: !14631)
!14851 = !DILocation(line: 1045, column: 17, scope: !14631)
!14852 = !DILocation(line: 1045, column: 24, scope: !14631)
!14853 = !DILocation(line: 1045, column: 29, scope: !14631)
!14854 = !DILocation(line: 1043, column: 8, scope: !14631)
!14855 = !DILocation(line: 1043, column: 6, scope: !14631)
!14856 = !DILocation(line: 1046, column: 6, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14631, file: !3, line: 1046, column: 6)
!14858 = !DILocation(line: 1046, column: 10, scope: !14857)
!14859 = !DILocation(line: 1046, column: 6, scope: !14631)
!14860 = !DILocation(line: 1047, column: 10, scope: !14857)
!14861 = !DILocation(line: 1047, column: 22, scope: !14857)
!14862 = !DILocation(line: 1047, column: 3, scope: !14857)
!14863 = !DILocation(line: 1049, column: 10, scope: !14857)
!14864 = !DILocation(line: 1049, column: 16, scope: !14857)
!14865 = !DILocation(line: 1049, column: 21, scope: !14857)
!14866 = !DILocation(line: 1049, column: 3, scope: !14857)
!14867 = !DILocation(line: 1051, column: 8, scope: !14631)
!14868 = !DILocation(line: 1051, column: 2, scope: !14631)
!14869 = !DILocation(line: 1053, column: 9, scope: !14631)
!14870 = !DILocation(line: 1053, column: 2, scope: !14631)
!14871 = !DILocation(line: 1054, column: 1, scope: !14631)
!14872 = distinct !DISubprogram(name: "rtl_set_unplug", scope: !3, file: !3, line: 1075, type: !10380, scopeLine: 1076, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14873 = !DILocalVariable(name: "tp", arg: 1, scope: !14872, file: !3, line: 1075, type: !10280)
!14874 = !DILocation(line: 1075, column: 42, scope: !14872)
!14875 = !DILocation(line: 1077, column: 6, scope: !14876)
!14876 = distinct !DILexicalBlock(scope: !14872, file: !3, line: 1077, column: 6)
!14877 = !DILocation(line: 1077, column: 10, scope: !14876)
!14878 = !DILocation(line: 1077, column: 16, scope: !14876)
!14879 = !DILocation(line: 1077, column: 22, scope: !14876)
!14880 = !DILocation(line: 1077, column: 6, scope: !14872)
!14881 = !DILocation(line: 1078, column: 28, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14876, file: !3, line: 1077, column: 48)
!14883 = !DILocation(line: 1078, column: 32, scope: !14882)
!14884 = !DILocation(line: 1078, column: 3, scope: !14882)
!14885 = !DILocation(line: 1079, column: 3, scope: !14882)
!14886 = !{i32 -2137114044}
!14887 = !DILocation(line: 1080, column: 2, scope: !14882)
!14888 = !DILocation(line: 1081, column: 1, scope: !14872)
!14889 = distinct !DISubprogram(name: "generic_ocp_write", scope: !3, file: !3, line: 1126, type: !14890, scopeLine: 1128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!14890 = !DISubroutineType(types: !14891)
!14891 = !{!72, !10280, !1115, !1115, !1115, !647, !1115}
!14892 = !DILocalVariable(name: "tp", arg: 1, scope: !14889, file: !3, line: 1126, type: !10280)
!14893 = !DILocation(line: 1126, column: 44, scope: !14889)
!14894 = !DILocalVariable(name: "index", arg: 2, scope: !14889, file: !3, line: 1126, type: !1115)
!14895 = !DILocation(line: 1126, column: 52, scope: !14889)
!14896 = !DILocalVariable(name: "byteen", arg: 3, scope: !14889, file: !3, line: 1126, type: !1115)
!14897 = !DILocation(line: 1126, column: 63, scope: !14889)
!14898 = !DILocalVariable(name: "size", arg: 4, scope: !14889, file: !3, line: 1127, type: !1115)
!14899 = !DILocation(line: 1127, column: 13, scope: !14889)
!14900 = !DILocalVariable(name: "data", arg: 5, scope: !14889, file: !3, line: 1127, type: !647)
!14901 = !DILocation(line: 1127, column: 25, scope: !14889)
!14902 = !DILocalVariable(name: "type", arg: 6, scope: !14889, file: !3, line: 1127, type: !1115)
!14903 = !DILocation(line: 1127, column: 35, scope: !14889)
!14904 = !DILocalVariable(name: "ret", scope: !14889, file: !3, line: 1129, type: !72)
!14905 = !DILocation(line: 1129, column: 6, scope: !14889)
!14906 = !DILocalVariable(name: "byteen_start", scope: !14889, file: !3, line: 1130, type: !1115)
!14907 = !DILocation(line: 1130, column: 6, scope: !14889)
!14908 = !DILocalVariable(name: "byteen_end", scope: !14889, file: !3, line: 1130, type: !1115)
!14909 = !DILocation(line: 1130, column: 20, scope: !14889)
!14910 = !DILocalVariable(name: "byen", scope: !14889, file: !3, line: 1130, type: !1115)
!14911 = !DILocation(line: 1130, column: 32, scope: !14889)
!14912 = !DILocalVariable(name: "limit", scope: !14889, file: !3, line: 1131, type: !1115)
!14913 = !DILocation(line: 1131, column: 6, scope: !14889)
!14914 = !DILocation(line: 1133, column: 32, scope: !14915)
!14915 = distinct !DILexicalBlock(scope: !14889, file: !3, line: 1133, column: 6)
!14916 = !DILocation(line: 1133, column: 36, scope: !14915)
!14917 = !DILocation(line: 1133, column: 6, scope: !14915)
!14918 = !DILocation(line: 1133, column: 6, scope: !14889)
!14919 = !DILocation(line: 1134, column: 3, scope: !14915)
!14920 = !DILocation(line: 1137, column: 7, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14889, file: !3, line: 1137, column: 6)
!14922 = !DILocation(line: 1137, column: 12, scope: !14921)
!14923 = !DILocation(line: 1137, column: 17, scope: !14921)
!14924 = !DILocation(line: 1137, column: 21, scope: !14921)
!14925 = !DILocation(line: 1137, column: 26, scope: !14921)
!14926 = !DILocation(line: 1137, column: 30, scope: !14921)
!14927 = !DILocation(line: 1137, column: 36, scope: !14921)
!14928 = !DILocation(line: 1137, column: 41, scope: !14921)
!14929 = !DILocation(line: 1137, column: 45, scope: !14921)
!14930 = !DILocation(line: 1137, column: 6, scope: !14889)
!14931 = !DILocation(line: 1138, column: 3, scope: !14921)
!14932 = !DILocation(line: 1140, column: 11, scope: !14933)
!14933 = distinct !DILexicalBlock(scope: !14889, file: !3, line: 1140, column: 6)
!14934 = !DILocation(line: 1140, column: 6, scope: !14933)
!14935 = !DILocation(line: 1140, column: 24, scope: !14933)
!14936 = !DILocation(line: 1140, column: 19, scope: !14933)
!14937 = !DILocation(line: 1140, column: 17, scope: !14933)
!14938 = !DILocation(line: 1140, column: 29, scope: !14933)
!14939 = !DILocation(line: 1140, column: 6, scope: !14889)
!14940 = !DILocation(line: 1141, column: 3, scope: !14933)
!14941 = !DILocation(line: 1143, column: 17, scope: !14889)
!14942 = !DILocation(line: 1143, column: 24, scope: !14889)
!14943 = !DILocation(line: 1143, column: 15, scope: !14889)
!14944 = !DILocation(line: 1144, column: 15, scope: !14889)
!14945 = !DILocation(line: 1144, column: 22, scope: !14889)
!14946 = !DILocation(line: 1144, column: 13, scope: !14889)
!14947 = !DILocation(line: 1146, column: 9, scope: !14889)
!14948 = !DILocation(line: 1146, column: 25, scope: !14889)
!14949 = !DILocation(line: 1146, column: 38, scope: !14889)
!14950 = !DILocation(line: 1146, column: 22, scope: !14889)
!14951 = !DILocation(line: 1146, column: 7, scope: !14889)
!14952 = !DILocation(line: 1147, column: 22, scope: !14889)
!14953 = !DILocation(line: 1147, column: 26, scope: !14889)
!14954 = !DILocation(line: 1147, column: 33, scope: !14889)
!14955 = !DILocation(line: 1147, column: 40, scope: !14889)
!14956 = !DILocation(line: 1147, column: 38, scope: !14889)
!14957 = !DILocation(line: 1147, column: 49, scope: !14889)
!14958 = !DILocation(line: 1147, column: 8, scope: !14889)
!14959 = !DILocation(line: 1147, column: 6, scope: !14889)
!14960 = !DILocation(line: 1148, column: 6, scope: !14961)
!14961 = distinct !DILexicalBlock(scope: !14889, file: !3, line: 1148, column: 6)
!14962 = !DILocation(line: 1148, column: 10, scope: !14961)
!14963 = !DILocation(line: 1148, column: 6, scope: !14889)
!14964 = !DILocation(line: 1149, column: 3, scope: !14961)
!14965 = !DILocation(line: 1151, column: 8, scope: !14889)
!14966 = !DILocation(line: 1152, column: 7, scope: !14889)
!14967 = !DILocation(line: 1153, column: 7, scope: !14889)
!14968 = !DILocation(line: 1155, column: 6, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14889, file: !3, line: 1155, column: 6)
!14970 = !DILocation(line: 1155, column: 6, scope: !14889)
!14971 = !DILocation(line: 1156, column: 8, scope: !14972)
!14972 = distinct !DILexicalBlock(scope: !14969, file: !3, line: 1155, column: 12)
!14973 = !DILocation(line: 1158, column: 3, scope: !14972)
!14974 = !DILocation(line: 1158, column: 10, scope: !14972)
!14975 = !DILocation(line: 1159, column: 8, scope: !14976)
!14976 = distinct !DILexicalBlock(scope: !14977, file: !3, line: 1159, column: 8)
!14977 = distinct !DILexicalBlock(scope: !14972, file: !3, line: 1158, column: 16)
!14978 = !DILocation(line: 1159, column: 15, scope: !14976)
!14979 = !DILocation(line: 1159, column: 13, scope: !14976)
!14980 = !DILocation(line: 1159, column: 8, scope: !14977)
!14981 = !DILocation(line: 1160, column: 25, scope: !14982)
!14982 = distinct !DILexicalBlock(scope: !14976, file: !3, line: 1159, column: 22)
!14983 = !DILocation(line: 1160, column: 29, scope: !14982)
!14984 = !DILocation(line: 1161, column: 11, scope: !14982)
!14985 = !DILocation(line: 1161, column: 16, scope: !14982)
!14986 = !DILocation(line: 1162, column: 11, scope: !14982)
!14987 = !DILocation(line: 1162, column: 18, scope: !14982)
!14988 = !DILocation(line: 1160, column: 11, scope: !14982)
!14989 = !DILocation(line: 1160, column: 9, scope: !14982)
!14990 = !DILocation(line: 1163, column: 9, scope: !14991)
!14991 = distinct !DILexicalBlock(scope: !14982, file: !3, line: 1163, column: 9)
!14992 = !DILocation(line: 1163, column: 13, scope: !14991)
!14993 = !DILocation(line: 1163, column: 9, scope: !14982)
!14994 = !DILocation(line: 1164, column: 6, scope: !14991)
!14995 = !DILocation(line: 1166, column: 14, scope: !14982)
!14996 = !DILocation(line: 1166, column: 11, scope: !14982)
!14997 = !DILocation(line: 1167, column: 13, scope: !14982)
!14998 = !DILocation(line: 1167, column: 10, scope: !14982)
!14999 = !DILocation(line: 1168, column: 13, scope: !14982)
!15000 = !DILocation(line: 1168, column: 10, scope: !14982)
!15001 = !DILocation(line: 1169, column: 4, scope: !14982)
!15002 = !DILocation(line: 1170, column: 25, scope: !15003)
!15003 = distinct !DILexicalBlock(scope: !14976, file: !3, line: 1169, column: 11)
!15004 = !DILocation(line: 1170, column: 29, scope: !15003)
!15005 = !DILocation(line: 1171, column: 11, scope: !15003)
!15006 = !DILocation(line: 1171, column: 16, scope: !15003)
!15007 = !DILocation(line: 1172, column: 11, scope: !15003)
!15008 = !DILocation(line: 1172, column: 17, scope: !15003)
!15009 = !DILocation(line: 1170, column: 11, scope: !15003)
!15010 = !DILocation(line: 1170, column: 9, scope: !15003)
!15011 = !DILocation(line: 1173, column: 9, scope: !15012)
!15012 = distinct !DILexicalBlock(scope: !15003, file: !3, line: 1173, column: 9)
!15013 = !DILocation(line: 1173, column: 13, scope: !15012)
!15014 = !DILocation(line: 1173, column: 9, scope: !15003)
!15015 = !DILocation(line: 1174, column: 6, scope: !15012)
!15016 = !DILocation(line: 1176, column: 14, scope: !15003)
!15017 = !DILocation(line: 1176, column: 11, scope: !15003)
!15018 = !DILocation(line: 1177, column: 13, scope: !15003)
!15019 = !DILocation(line: 1177, column: 10, scope: !15003)
!15020 = !DILocation(line: 1178, column: 10, scope: !15003)
!15021 = !DILocation(line: 1179, column: 5, scope: !15003)
!15022 = distinct !{!15022, !14973, !15023}
!15023 = !DILocation(line: 1181, column: 3, scope: !14972)
!15024 = !DILocation(line: 1183, column: 10, scope: !14972)
!15025 = !DILocation(line: 1183, column: 24, scope: !14972)
!15026 = !DILocation(line: 1183, column: 35, scope: !14972)
!15027 = !DILocation(line: 1183, column: 21, scope: !14972)
!15028 = !DILocation(line: 1183, column: 8, scope: !14972)
!15029 = !DILocation(line: 1184, column: 23, scope: !14972)
!15030 = !DILocation(line: 1184, column: 27, scope: !14972)
!15031 = !DILocation(line: 1184, column: 34, scope: !14972)
!15032 = !DILocation(line: 1184, column: 41, scope: !14972)
!15033 = !DILocation(line: 1184, column: 39, scope: !14972)
!15034 = !DILocation(line: 1184, column: 50, scope: !14972)
!15035 = !DILocation(line: 1184, column: 9, scope: !14972)
!15036 = !DILocation(line: 1184, column: 7, scope: !14972)
!15037 = !DILocation(line: 1185, column: 7, scope: !15038)
!15038 = distinct !DILexicalBlock(scope: !14972, file: !3, line: 1185, column: 7)
!15039 = !DILocation(line: 1185, column: 11, scope: !15038)
!15040 = !DILocation(line: 1185, column: 7, scope: !14972)
!15041 = !DILocation(line: 1186, column: 4, scope: !15038)
!15042 = !DILocation(line: 1187, column: 2, scope: !14972)
!15043 = !DILabel(scope: !14889, name: "error1", file: !3, line: 1189)
!15044 = !DILocation(line: 1189, column: 1, scope: !14889)
!15045 = !DILocation(line: 1190, column: 6, scope: !15046)
!15046 = distinct !DILexicalBlock(scope: !14889, file: !3, line: 1190, column: 6)
!15047 = !DILocation(line: 1190, column: 10, scope: !15046)
!15048 = !DILocation(line: 1190, column: 6, scope: !14889)
!15049 = !DILocation(line: 1191, column: 18, scope: !15046)
!15050 = !DILocation(line: 1191, column: 3, scope: !15046)
!15051 = !DILocation(line: 1193, column: 9, scope: !14889)
!15052 = !DILocation(line: 1193, column: 2, scope: !14889)
!15053 = !DILocation(line: 1194, column: 1, scope: !14889)
!15054 = distinct !DISubprogram(name: "set_registers", scope: !3, file: !3, line: 1057, type: !14632, scopeLine: 1058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15055 = !DILocalVariable(name: "tp", arg: 1, scope: !15054, file: !3, line: 1057, type: !10280)
!15056 = !DILocation(line: 1057, column: 33, scope: !15054)
!15057 = !DILocalVariable(name: "value", arg: 2, scope: !15054, file: !3, line: 1057, type: !1115)
!15058 = !DILocation(line: 1057, column: 41, scope: !15054)
!15059 = !DILocalVariable(name: "index", arg: 3, scope: !15054, file: !3, line: 1057, type: !1115)
!15060 = !DILocation(line: 1057, column: 52, scope: !15054)
!15061 = !DILocalVariable(name: "size", arg: 4, scope: !15054, file: !3, line: 1057, type: !1115)
!15062 = !DILocation(line: 1057, column: 63, scope: !15054)
!15063 = !DILocalVariable(name: "data", arg: 5, scope: !15054, file: !3, line: 1057, type: !647)
!15064 = !DILocation(line: 1057, column: 75, scope: !15054)
!15065 = !DILocalVariable(name: "ret", scope: !15054, file: !3, line: 1059, type: !72)
!15066 = !DILocation(line: 1059, column: 6, scope: !15054)
!15067 = !DILocalVariable(name: "tmp", scope: !15054, file: !3, line: 1060, type: !647)
!15068 = !DILocation(line: 1060, column: 8, scope: !15054)
!15069 = !DILocation(line: 1062, column: 16, scope: !15054)
!15070 = !DILocation(line: 1062, column: 22, scope: !15054)
!15071 = !DILocation(line: 1062, column: 8, scope: !15054)
!15072 = !DILocation(line: 1062, column: 6, scope: !15054)
!15073 = !DILocation(line: 1063, column: 7, scope: !15074)
!15074 = distinct !DILexicalBlock(scope: !15054, file: !3, line: 1063, column: 6)
!15075 = !DILocation(line: 1063, column: 6, scope: !15054)
!15076 = !DILocation(line: 1064, column: 3, scope: !15074)
!15077 = !DILocation(line: 1066, column: 24, scope: !15054)
!15078 = !DILocation(line: 1066, column: 28, scope: !15054)
!15079 = !DILocation(line: 1066, column: 34, scope: !15054)
!15080 = !DILocation(line: 1068, column: 10, scope: !15054)
!15081 = !DILocation(line: 1068, column: 17, scope: !15054)
!15082 = !DILocation(line: 1068, column: 24, scope: !15054)
!15083 = !DILocation(line: 1068, column: 29, scope: !15054)
!15084 = !DILocation(line: 1066, column: 8, scope: !15054)
!15085 = !DILocation(line: 1066, column: 6, scope: !15054)
!15086 = !DILocation(line: 1070, column: 8, scope: !15054)
!15087 = !DILocation(line: 1070, column: 2, scope: !15054)
!15088 = !DILocation(line: 1072, column: 9, scope: !15054)
!15089 = !DILocation(line: 1072, column: 2, scope: !15054)
!15090 = !DILocation(line: 1073, column: 1, scope: !15054)
!15091 = distinct !DISubprogram(name: "set_tx_qlen", scope: !3, file: !3, line: 2637, type: !10380, scopeLine: 2638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15092 = !DILocalVariable(name: "tp", arg: 1, scope: !15091, file: !3, line: 2637, type: !10280)
!15093 = !DILocation(line: 2637, column: 39, scope: !15091)
!15094 = !DILocalVariable(name: "netdev", scope: !15091, file: !3, line: 2639, type: !372)
!15095 = !DILocation(line: 2639, column: 21, scope: !15091)
!15096 = !DILocation(line: 2639, column: 30, scope: !15091)
!15097 = !DILocation(line: 2639, column: 34, scope: !15091)
!15098 = !DILocation(line: 2641, column: 16, scope: !15091)
!15099 = !DILocation(line: 2641, column: 30, scope: !15091)
!15100 = !DILocation(line: 2641, column: 38, scope: !15091)
!15101 = !DILocation(line: 2641, column: 42, scope: !15091)
!15102 = !DILocation(line: 2641, column: 58, scope: !15091)
!15103 = !DILocation(line: 2641, column: 72, scope: !15091)
!15104 = !DILocation(line: 2641, column: 27, scope: !15091)
!15105 = !DILocation(line: 2641, column: 2, scope: !15091)
!15106 = !DILocation(line: 2641, column: 6, scope: !15091)
!15107 = !DILocation(line: 2641, column: 14, scope: !15091)
!15108 = !DILocation(line: 2643, column: 1, scope: !15091)
!15109 = distinct !DISubprogram(name: "rtl_set_eee_plus", scope: !3, file: !3, line: 2650, type: !10380, scopeLine: 2651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15110 = !DILocalVariable(name: "tp", arg: 1, scope: !15109, file: !3, line: 2650, type: !10280)
!15111 = !DILocation(line: 2650, column: 44, scope: !15109)
!15112 = !DILocalVariable(name: "ocp_data", scope: !15109, file: !3, line: 2652, type: !784)
!15113 = !DILocation(line: 2652, column: 6, scope: !15109)
!15114 = !DILocalVariable(name: "speed", scope: !15109, file: !3, line: 2653, type: !1474)
!15115 = !DILocation(line: 2653, column: 5, scope: !15109)
!15116 = !DILocation(line: 2655, column: 28, scope: !15109)
!15117 = !DILocation(line: 2655, column: 10, scope: !15109)
!15118 = !DILocation(line: 2655, column: 8, scope: !15109)
!15119 = !DILocation(line: 2656, column: 6, scope: !15120)
!15120 = distinct !DILexicalBlock(scope: !15109, file: !3, line: 2656, column: 6)
!15121 = !DILocation(line: 2656, column: 12, scope: !15120)
!15122 = !DILocation(line: 2656, column: 6, scope: !15109)
!15123 = !DILocation(line: 2657, column: 28, scope: !15124)
!15124 = distinct !DILexicalBlock(scope: !15120, file: !3, line: 2656, column: 22)
!15125 = !DILocation(line: 2657, column: 14, scope: !15124)
!15126 = !DILocation(line: 2657, column: 12, scope: !15124)
!15127 = !DILocation(line: 2658, column: 12, scope: !15124)
!15128 = !DILocation(line: 2659, column: 18, scope: !15124)
!15129 = !DILocation(line: 2659, column: 49, scope: !15124)
!15130 = !DILocation(line: 2659, column: 3, scope: !15124)
!15131 = !DILocation(line: 2660, column: 2, scope: !15124)
!15132 = !DILocation(line: 2661, column: 28, scope: !15133)
!15133 = distinct !DILexicalBlock(scope: !15120, file: !3, line: 2660, column: 9)
!15134 = !DILocation(line: 2661, column: 14, scope: !15133)
!15135 = !DILocation(line: 2661, column: 12, scope: !15133)
!15136 = !DILocation(line: 2662, column: 12, scope: !15133)
!15137 = !DILocation(line: 2663, column: 18, scope: !15133)
!15138 = !DILocation(line: 2663, column: 49, scope: !15133)
!15139 = !DILocation(line: 2663, column: 3, scope: !15133)
!15140 = !DILocation(line: 2665, column: 1, scope: !15109)
!15141 = distinct !DISubprogram(name: "rtl_enable", scope: !3, file: !3, line: 2768, type: !10384, scopeLine: 2769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15142 = !DILocalVariable(name: "tp", arg: 1, scope: !15141, file: !3, line: 2768, type: !10280)
!15143 = !DILocation(line: 2768, column: 37, scope: !15141)
!15144 = !DILocalVariable(name: "ocp_data", scope: !15141, file: !3, line: 2770, type: !784)
!15145 = !DILocation(line: 2770, column: 6, scope: !15141)
!15146 = !DILocation(line: 2772, column: 29, scope: !15141)
!15147 = !DILocation(line: 2772, column: 2, scope: !15141)
!15148 = !DILocation(line: 2774, column: 27, scope: !15141)
!15149 = !DILocation(line: 2774, column: 13, scope: !15141)
!15150 = !DILocation(line: 2774, column: 11, scope: !15141)
!15151 = !DILocation(line: 2775, column: 11, scope: !15141)
!15152 = !DILocation(line: 2776, column: 17, scope: !15141)
!15153 = !DILocation(line: 2776, column: 43, scope: !15141)
!15154 = !DILocation(line: 2776, column: 2, scope: !15141)
!15155 = !DILocation(line: 2778, column: 10, scope: !15141)
!15156 = !DILocation(line: 2778, column: 14, scope: !15141)
!15157 = !DILocation(line: 2778, column: 2, scope: !15141)
!15158 = !DILocation(line: 2781, column: 30, scope: !15159)
!15159 = distinct !DILexicalBlock(scope: !15141, file: !3, line: 2778, column: 23)
!15160 = !DILocation(line: 2781, column: 3, scope: !15159)
!15161 = !DILocation(line: 2782, column: 3, scope: !15159)
!15162 = !DILocation(line: 2784, column: 3, scope: !15159)
!15163 = !DILocation(line: 2787, column: 16, scope: !15141)
!15164 = !DILocation(line: 2787, column: 2, scope: !15141)
!15165 = !DILocation(line: 2789, column: 2, scope: !15141)
!15166 = distinct !DISubprogram(name: "rtl8152_get_speed", scope: !3, file: !3, line: 2645, type: !15167, scopeLine: 2646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15167 = !DISubroutineType(types: !15168)
!15168 = !{!1474, !10280}
!15169 = !DILocalVariable(name: "tp", arg: 1, scope: !15166, file: !3, line: 2645, type: !10280)
!15170 = !DILocation(line: 2645, column: 50, scope: !15166)
!15171 = !DILocation(line: 2647, column: 23, scope: !15166)
!15172 = !DILocation(line: 2647, column: 9, scope: !15166)
!15173 = !DILocation(line: 2647, column: 2, scope: !15166)
!15174 = distinct !DISubprogram(name: "ocp_read_byte", scope: !3, file: !3, line: 1270, type: !15175, scopeLine: 1271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15175 = !DISubroutineType(types: !15176)
!15176 = !{!1474, !10280, !1115, !1115}
!15177 = !DILocalVariable(name: "tp", arg: 1, scope: !15174, file: !3, line: 1270, type: !10280)
!15178 = !DILocation(line: 1270, column: 39, scope: !15174)
!15179 = !DILocalVariable(name: "type", arg: 2, scope: !15174, file: !3, line: 1270, type: !1115)
!15180 = !DILocation(line: 1270, column: 47, scope: !15174)
!15181 = !DILocalVariable(name: "index", arg: 3, scope: !15174, file: !3, line: 1270, type: !1115)
!15182 = !DILocation(line: 1270, column: 57, scope: !15174)
!15183 = !DILocalVariable(name: "data", scope: !15174, file: !3, line: 1272, type: !784)
!15184 = !DILocation(line: 1272, column: 6, scope: !15174)
!15185 = !DILocalVariable(name: "tmp", scope: !15174, file: !3, line: 1273, type: !9980)
!15186 = !DILocation(line: 1273, column: 9, scope: !15174)
!15187 = !DILocalVariable(name: "shift", scope: !15174, file: !3, line: 1274, type: !1474)
!15188 = !DILocation(line: 1274, column: 5, scope: !15174)
!15189 = !DILocation(line: 1274, column: 13, scope: !15174)
!15190 = !DILocation(line: 1274, column: 19, scope: !15174)
!15191 = !DILocation(line: 1276, column: 8, scope: !15174)
!15192 = !DILocation(line: 1278, column: 19, scope: !15174)
!15193 = !DILocation(line: 1278, column: 23, scope: !15174)
!15194 = !DILocation(line: 1278, column: 43, scope: !15174)
!15195 = !DILocation(line: 1278, column: 49, scope: !15174)
!15196 = !DILocation(line: 1278, column: 2, scope: !15174)
!15197 = !DILocation(line: 1280, column: 9, scope: !15174)
!15198 = !DILocation(line: 1280, column: 7, scope: !15174)
!15199 = !DILocation(line: 1281, column: 12, scope: !15174)
!15200 = !DILocation(line: 1281, column: 18, scope: !15174)
!15201 = !DILocation(line: 1281, column: 7, scope: !15174)
!15202 = !DILocation(line: 1282, column: 7, scope: !15174)
!15203 = !DILocation(line: 1284, column: 13, scope: !15174)
!15204 = !DILocation(line: 1284, column: 9, scope: !15174)
!15205 = !DILocation(line: 1284, column: 2, scope: !15174)
!15206 = distinct !DISubprogram(name: "r8152b_reset_packet_filter", scope: !3, file: !3, line: 2613, type: !10380, scopeLine: 2614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15207 = !DILocalVariable(name: "tp", arg: 1, scope: !15206, file: !3, line: 2613, type: !10280)
!15208 = !DILocation(line: 2613, column: 54, scope: !15206)
!15209 = !DILocalVariable(name: "ocp_data", scope: !15206, file: !3, line: 2615, type: !784)
!15210 = !DILocation(line: 2615, column: 6, scope: !15206)
!15211 = !DILocation(line: 2617, column: 27, scope: !15206)
!15212 = !DILocation(line: 2617, column: 13, scope: !15206)
!15213 = !DILocation(line: 2617, column: 11, scope: !15206)
!15214 = !DILocation(line: 2618, column: 11, scope: !15206)
!15215 = !DILocation(line: 2619, column: 17, scope: !15206)
!15216 = !DILocation(line: 2619, column: 44, scope: !15206)
!15217 = !DILocation(line: 2619, column: 2, scope: !15206)
!15218 = !DILocation(line: 2620, column: 11, scope: !15206)
!15219 = !DILocation(line: 2621, column: 17, scope: !15206)
!15220 = !DILocation(line: 2621, column: 44, scope: !15206)
!15221 = !DILocation(line: 2621, column: 2, scope: !15206)
!15222 = !DILocation(line: 2622, column: 1, scope: !15206)
!15223 = distinct !DISubprogram(name: "ocp_write_byte", scope: !3, file: !3, line: 1287, type: !14308, scopeLine: 1288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15224 = !DILocalVariable(name: "tp", arg: 1, scope: !15223, file: !3, line: 1287, type: !10280)
!15225 = !DILocation(line: 1287, column: 42, scope: !15223)
!15226 = !DILocalVariable(name: "type", arg: 2, scope: !15223, file: !3, line: 1287, type: !1115)
!15227 = !DILocation(line: 1287, column: 50, scope: !15223)
!15228 = !DILocalVariable(name: "index", arg: 3, scope: !15223, file: !3, line: 1287, type: !1115)
!15229 = !DILocation(line: 1287, column: 60, scope: !15223)
!15230 = !DILocalVariable(name: "data", arg: 4, scope: !15223, file: !3, line: 1287, type: !784)
!15231 = !DILocation(line: 1287, column: 71, scope: !15223)
!15232 = !DILocalVariable(name: "mask", scope: !15223, file: !3, line: 1289, type: !784)
!15233 = !DILocation(line: 1289, column: 6, scope: !15223)
!15234 = !DILocalVariable(name: "tmp", scope: !15223, file: !3, line: 1290, type: !9980)
!15235 = !DILocation(line: 1290, column: 9, scope: !15223)
!15236 = !DILocalVariable(name: "byen", scope: !15223, file: !3, line: 1291, type: !1115)
!15237 = !DILocation(line: 1291, column: 6, scope: !15223)
!15238 = !DILocalVariable(name: "shift", scope: !15223, file: !3, line: 1292, type: !1474)
!15239 = !DILocation(line: 1292, column: 5, scope: !15223)
!15240 = !DILocation(line: 1292, column: 13, scope: !15223)
!15241 = !DILocation(line: 1292, column: 19, scope: !15223)
!15242 = !DILocation(line: 1294, column: 10, scope: !15223)
!15243 = !DILocation(line: 1294, column: 7, scope: !15223)
!15244 = !DILocation(line: 1296, column: 6, scope: !15245)
!15245 = distinct !DILexicalBlock(scope: !15223, file: !3, line: 1296, column: 6)
!15246 = !DILocation(line: 1296, column: 12, scope: !15245)
!15247 = !DILocation(line: 1296, column: 6, scope: !15223)
!15248 = !DILocation(line: 1297, column: 12, scope: !15249)
!15249 = distinct !DILexicalBlock(scope: !15245, file: !3, line: 1296, column: 17)
!15250 = !DILocation(line: 1297, column: 8, scope: !15249)
!15251 = !DILocation(line: 1298, column: 13, scope: !15249)
!15252 = !DILocation(line: 1298, column: 19, scope: !15249)
!15253 = !DILocation(line: 1298, column: 8, scope: !15249)
!15254 = !DILocation(line: 1299, column: 13, scope: !15249)
!15255 = !DILocation(line: 1299, column: 19, scope: !15249)
!15256 = !DILocation(line: 1299, column: 8, scope: !15249)
!15257 = !DILocation(line: 1300, column: 9, scope: !15249)
!15258 = !DILocation(line: 1301, column: 2, scope: !15249)
!15259 = !DILocation(line: 1303, column: 8, scope: !15223)
!15260 = !DILocation(line: 1303, column: 6, scope: !15223)
!15261 = !DILocation(line: 1305, column: 20, scope: !15223)
!15262 = !DILocation(line: 1305, column: 24, scope: !15223)
!15263 = !DILocation(line: 1305, column: 31, scope: !15223)
!15264 = !DILocation(line: 1305, column: 50, scope: !15223)
!15265 = !DILocation(line: 1305, column: 56, scope: !15223)
!15266 = !DILocation(line: 1305, column: 2, scope: !15223)
!15267 = !DILocation(line: 1306, column: 1, scope: !15223)
!15268 = distinct !DISubprogram(name: "r8153b_rx_agg_chg_indicate", scope: !3, file: !3, line: 2762, type: !10380, scopeLine: 2763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15269 = !DILocalVariable(name: "tp", arg: 1, scope: !15268, file: !3, line: 2762, type: !10280)
!15270 = !DILocation(line: 2762, column: 61, scope: !15268)
!15271 = !DILocation(line: 2764, column: 17, scope: !15268)
!15272 = !DILocation(line: 2764, column: 2, scope: !15268)
!15273 = !DILocation(line: 2766, column: 1, scope: !15268)
!15274 = distinct !DISubprogram(name: "rxdy_gated_en", scope: !3, file: !3, line: 2667, type: !10402, scopeLine: 2668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15275 = !DILocalVariable(name: "tp", arg: 1, scope: !15274, file: !3, line: 2667, type: !10280)
!15276 = !DILocation(line: 2667, column: 41, scope: !15274)
!15277 = !DILocalVariable(name: "enable", arg: 2, scope: !15274, file: !3, line: 2667, type: !617)
!15278 = !DILocation(line: 2667, column: 50, scope: !15274)
!15279 = !DILocalVariable(name: "ocp_data", scope: !15274, file: !3, line: 2669, type: !784)
!15280 = !DILocation(line: 2669, column: 6, scope: !15274)
!15281 = !DILocation(line: 2671, column: 27, scope: !15274)
!15282 = !DILocation(line: 2671, column: 13, scope: !15274)
!15283 = !DILocation(line: 2671, column: 11, scope: !15274)
!15284 = !DILocation(line: 2672, column: 6, scope: !15285)
!15285 = distinct !DILexicalBlock(scope: !15274, file: !3, line: 2672, column: 6)
!15286 = !DILocation(line: 2672, column: 6, scope: !15274)
!15287 = !DILocation(line: 2673, column: 12, scope: !15285)
!15288 = !DILocation(line: 2673, column: 3, scope: !15285)
!15289 = !DILocation(line: 2675, column: 12, scope: !15285)
!15290 = !DILocation(line: 2676, column: 17, scope: !15274)
!15291 = !DILocation(line: 2676, column: 47, scope: !15274)
!15292 = !DILocation(line: 2676, column: 2, scope: !15274)
!15293 = !DILocation(line: 2677, column: 1, scope: !15274)
!15294 = distinct !DISubprogram(name: "rtl_disable", scope: !3, file: !3, line: 2879, type: !10380, scopeLine: 2880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15295 = !DILocalVariable(name: "tp", arg: 1, scope: !15294, file: !3, line: 2879, type: !10280)
!15296 = !DILocation(line: 2879, column: 39, scope: !15294)
!15297 = !DILocalVariable(name: "ocp_data", scope: !15294, file: !3, line: 2881, type: !784)
!15298 = !DILocation(line: 2881, column: 6, scope: !15294)
!15299 = !DILocalVariable(name: "i", scope: !15294, file: !3, line: 2882, type: !72)
!15300 = !DILocation(line: 2882, column: 6, scope: !15294)
!15301 = !DILocation(line: 2884, column: 32, scope: !15302)
!15302 = distinct !DILexicalBlock(scope: !15294, file: !3, line: 2884, column: 6)
!15303 = !DILocation(line: 2884, column: 36, scope: !15302)
!15304 = !DILocation(line: 2884, column: 6, scope: !15302)
!15305 = !DILocation(line: 2884, column: 6, scope: !15294)
!15306 = !DILocation(line: 2885, column: 22, scope: !15307)
!15307 = distinct !DILexicalBlock(scope: !15302, file: !3, line: 2884, column: 44)
!15308 = !DILocation(line: 2885, column: 3, scope: !15307)
!15309 = !DILocation(line: 2886, column: 3, scope: !15307)
!15310 = !DILocation(line: 2889, column: 28, scope: !15294)
!15311 = !DILocation(line: 2889, column: 13, scope: !15294)
!15312 = !DILocation(line: 2889, column: 11, scope: !15294)
!15313 = !DILocation(line: 2890, column: 11, scope: !15294)
!15314 = !DILocation(line: 2891, column: 18, scope: !15294)
!15315 = !DILocation(line: 2891, column: 45, scope: !15294)
!15316 = !DILocation(line: 2891, column: 2, scope: !15294)
!15317 = !DILocation(line: 2893, column: 21, scope: !15294)
!15318 = !DILocation(line: 2893, column: 2, scope: !15294)
!15319 = !DILocation(line: 2895, column: 9, scope: !15320)
!15320 = distinct !DILexicalBlock(scope: !15294, file: !3, line: 2895, column: 2)
!15321 = !DILocation(line: 2895, column: 7, scope: !15320)
!15322 = !DILocation(line: 2895, column: 14, scope: !15323)
!15323 = distinct !DILexicalBlock(scope: !15320, file: !3, line: 2895, column: 2)
!15324 = !DILocation(line: 2895, column: 16, scope: !15323)
!15325 = !DILocation(line: 2895, column: 2, scope: !15320)
!15326 = !DILocation(line: 2896, column: 16, scope: !15323)
!15327 = !DILocation(line: 2896, column: 20, scope: !15323)
!15328 = !DILocation(line: 2896, column: 28, scope: !15323)
!15329 = !DILocation(line: 2896, column: 31, scope: !15323)
!15330 = !DILocation(line: 2896, column: 3, scope: !15323)
!15331 = !DILocation(line: 2895, column: 35, scope: !15323)
!15332 = !DILocation(line: 2895, column: 2, scope: !15323)
!15333 = distinct !{!15333, !15325, !15334}
!15334 = !DILocation(line: 2896, column: 34, scope: !15320)
!15335 = !DILocation(line: 2898, column: 16, scope: !15294)
!15336 = !DILocation(line: 2898, column: 2, scope: !15294)
!15337 = !DILocation(line: 2900, column: 9, scope: !15338)
!15338 = distinct !DILexicalBlock(scope: !15294, file: !3, line: 2900, column: 2)
!15339 = !DILocation(line: 2900, column: 7, scope: !15338)
!15340 = !DILocation(line: 2900, column: 14, scope: !15341)
!15341 = distinct !DILexicalBlock(scope: !15338, file: !3, line: 2900, column: 2)
!15342 = !DILocation(line: 2900, column: 16, scope: !15341)
!15343 = !DILocation(line: 2900, column: 2, scope: !15338)
!15344 = !DILocation(line: 2901, column: 28, scope: !15345)
!15345 = distinct !DILexicalBlock(scope: !15341, file: !3, line: 2900, column: 29)
!15346 = !DILocation(line: 2901, column: 14, scope: !15345)
!15347 = !DILocation(line: 2901, column: 12, scope: !15345)
!15348 = !DILocation(line: 2902, column: 8, scope: !15349)
!15349 = distinct !DILexicalBlock(scope: !15345, file: !3, line: 2902, column: 7)
!15350 = !DILocation(line: 2902, column: 17, scope: !15349)
!15351 = !DILocation(line: 2902, column: 31, scope: !15349)
!15352 = !DILocation(line: 2902, column: 7, scope: !15345)
!15353 = !DILocation(line: 2903, column: 4, scope: !15349)
!15354 = !DILocation(line: 2904, column: 3, scope: !15345)
!15355 = !DILocation(line: 2905, column: 2, scope: !15345)
!15356 = !DILocation(line: 2900, column: 25, scope: !15341)
!15357 = !DILocation(line: 2900, column: 2, scope: !15341)
!15358 = distinct !{!15358, !15343, !15359}
!15359 = !DILocation(line: 2905, column: 2, scope: !15338)
!15360 = !DILocation(line: 2907, column: 9, scope: !15361)
!15361 = distinct !DILexicalBlock(scope: !15294, file: !3, line: 2907, column: 2)
!15362 = !DILocation(line: 2907, column: 7, scope: !15361)
!15363 = !DILocation(line: 2907, column: 14, scope: !15364)
!15364 = distinct !DILexicalBlock(scope: !15361, file: !3, line: 2907, column: 2)
!15365 = !DILocation(line: 2907, column: 16, scope: !15364)
!15366 = !DILocation(line: 2907, column: 2, scope: !15361)
!15367 = !DILocation(line: 2908, column: 21, scope: !15368)
!15368 = distinct !DILexicalBlock(scope: !15369, file: !3, line: 2908, column: 7)
!15369 = distinct !DILexicalBlock(scope: !15364, file: !3, line: 2907, column: 29)
!15370 = !DILocation(line: 2908, column: 7, scope: !15368)
!15371 = !DILocation(line: 2908, column: 49, scope: !15368)
!15372 = !DILocation(line: 2908, column: 7, scope: !15369)
!15373 = !DILocation(line: 2909, column: 4, scope: !15368)
!15374 = !DILocation(line: 2910, column: 3, scope: !15369)
!15375 = !DILocation(line: 2911, column: 2, scope: !15369)
!15376 = !DILocation(line: 2907, column: 25, scope: !15364)
!15377 = !DILocation(line: 2907, column: 2, scope: !15364)
!15378 = distinct !{!15378, !15366, !15379}
!15379 = !DILocation(line: 2911, column: 2, scope: !15361)
!15380 = !DILocation(line: 2913, column: 14, scope: !15294)
!15381 = !DILocation(line: 2913, column: 2, scope: !15294)
!15382 = !DILocation(line: 2915, column: 20, scope: !15294)
!15383 = !DILocation(line: 2915, column: 2, scope: !15294)
!15384 = !DILocation(line: 2916, column: 1, scope: !15294)
!15385 = distinct !DISubprogram(name: "rtl_drop_queued_tx", scope: !3, file: !3, line: 2489, type: !10380, scopeLine: 2490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15386 = !DILocalVariable(name: "tp", arg: 1, scope: !15385, file: !3, line: 2489, type: !10280)
!15387 = !DILocation(line: 2489, column: 46, scope: !15385)
!15388 = !DILocalVariable(name: "stats", scope: !15385, file: !3, line: 2491, type: !7813)
!15389 = !DILocation(line: 2491, column: 27, scope: !15385)
!15390 = !DILocation(line: 2491, column: 36, scope: !15385)
!15391 = !DILocation(line: 2491, column: 40, scope: !15385)
!15392 = !DILocation(line: 2491, column: 48, scope: !15385)
!15393 = !DILocalVariable(name: "skb_head", scope: !15385, file: !3, line: 2492, type: !2905)
!15394 = !DILocation(line: 2492, column: 22, scope: !15385)
!15395 = !DILocalVariable(name: "tx_queue", scope: !15385, file: !3, line: 2492, type: !15396)
!15396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 64)
!15397 = !DILocation(line: 2492, column: 33, scope: !15385)
!15398 = !DILocation(line: 2492, column: 45, scope: !15385)
!15399 = !DILocation(line: 2492, column: 49, scope: !15385)
!15400 = !DILocalVariable(name: "skb", scope: !15385, file: !3, line: 2493, type: !497)
!15401 = !DILocation(line: 2493, column: 18, scope: !15385)
!15402 = !DILocation(line: 2495, column: 22, scope: !15403)
!15403 = distinct !DILexicalBlock(scope: !15385, file: !3, line: 2495, column: 6)
!15404 = !DILocation(line: 2495, column: 6, scope: !15403)
!15405 = !DILocation(line: 2495, column: 6, scope: !15385)
!15406 = !DILocation(line: 2496, column: 3, scope: !15403)
!15407 = !DILocation(line: 2498, column: 2, scope: !15385)
!15408 = !DILocation(line: 2499, column: 16, scope: !15385)
!15409 = !DILocation(line: 2499, column: 26, scope: !15385)
!15410 = !DILocation(line: 2499, column: 2, scope: !15385)
!15411 = !DILocation(line: 2500, column: 24, scope: !15385)
!15412 = !DILocation(line: 2500, column: 2, scope: !15385)
!15413 = !DILocation(line: 2501, column: 18, scope: !15385)
!15414 = !DILocation(line: 2501, column: 28, scope: !15385)
!15415 = !DILocation(line: 2501, column: 2, scope: !15385)
!15416 = !DILocation(line: 2503, column: 2, scope: !15385)
!15417 = !DILocation(line: 2503, column: 16, scope: !15385)
!15418 = !DILocation(line: 2503, column: 14, scope: !15385)
!15419 = !DILocation(line: 2504, column: 3, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !15385, file: !3, line: 2503, column: 43)
!15421 = !DILocation(line: 2505, column: 3, scope: !15420)
!15422 = !DILocation(line: 2505, column: 10, scope: !15420)
!15423 = !DILocation(line: 2505, column: 20, scope: !15420)
!15424 = distinct !{!15424, !15416, !15425}
!15425 = !DILocation(line: 2506, column: 2, scope: !15385)
!15426 = !DILocation(line: 2507, column: 1, scope: !15385)
!15427 = distinct !DISubprogram(name: "rtl_stop_rx", scope: !3, file: !3, line: 2722, type: !10384, scopeLine: 2723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15428 = !DILocalVariable(name: "lock", arg: 1, scope: !15429, file: !15430, line: 407, type: !4233)
!15429 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !15430, file: !15430, line: 407, type: !15431, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15430 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!15431 = !DISubroutineType(types: !15432)
!15432 = !{null, !4233, !394}
!15433 = !DILocation(line: 407, column: 64, scope: !15429, inlinedAt: !15434)
!15434 = distinct !DILocation(line: 2754, column: 2, scope: !15427)
!15435 = !DILocalVariable(name: "flags", arg: 2, scope: !15429, file: !15430, line: 407, type: !394)
!15436 = !DILocation(line: 407, column: 84, scope: !15429, inlinedAt: !15434)
!15437 = !DILocalVariable(name: "lock", arg: 1, scope: !15438, file: !15430, line: 327, type: !4233)
!15438 = distinct !DISubprogram(name: "spinlock_check", scope: !15430, file: !15430, line: 327, type: !15439, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15439 = !DISubroutineType(types: !15440)
!15440 = !{!15441, !4233}
!15441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!15442 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !15443)
!15443 = distinct !DILocation(line: 2751, column: 2, scope: !15444)
!15444 = distinct !DILexicalBlock(scope: !15445, file: !3, line: 2751, column: 2)
!15445 = distinct !DILexicalBlock(scope: !15446, file: !3, line: 2751, column: 2)
!15446 = distinct !DILexicalBlock(scope: !15447, file: !3, line: 2751, column: 2)
!15447 = distinct !DILexicalBlock(scope: !15448, file: !3, line: 2751, column: 2)
!15448 = distinct !DILexicalBlock(scope: !15427, file: !3, line: 2751, column: 2)
!15449 = !DILocation(line: 407, column: 64, scope: !15429, inlinedAt: !15450)
!15450 = distinct !DILocation(line: 2738, column: 2, scope: !15427)
!15451 = !DILocation(line: 407, column: 84, scope: !15429, inlinedAt: !15450)
!15452 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !15453)
!15453 = distinct !DILocation(line: 2736, column: 2, scope: !15454)
!15454 = distinct !DILexicalBlock(scope: !15455, file: !3, line: 2736, column: 2)
!15455 = distinct !DILexicalBlock(scope: !15456, file: !3, line: 2736, column: 2)
!15456 = distinct !DILexicalBlock(scope: !15457, file: !3, line: 2736, column: 2)
!15457 = distinct !DILexicalBlock(scope: !15458, file: !3, line: 2736, column: 2)
!15458 = distinct !DILexicalBlock(scope: !15427, file: !3, line: 2736, column: 2)
!15459 = !DILocalVariable(name: "tp", arg: 1, scope: !15427, file: !3, line: 2722, type: !10280)
!15460 = !DILocation(line: 2722, column: 38, scope: !15427)
!15461 = !DILocalVariable(name: "agg", scope: !15427, file: !3, line: 2724, type: !10212)
!15462 = !DILocation(line: 2724, column: 17, scope: !15427)
!15463 = !DILocalVariable(name: "agg_next", scope: !15427, file: !3, line: 2724, type: !10212)
!15464 = !DILocation(line: 2724, column: 23, scope: !15427)
!15465 = !DILocalVariable(name: "tmp_list", scope: !15427, file: !3, line: 2725, type: !366)
!15466 = !DILocation(line: 2725, column: 19, scope: !15427)
!15467 = !DILocalVariable(name: "flags", scope: !15427, file: !3, line: 2726, type: !394)
!15468 = !DILocation(line: 2726, column: 16, scope: !15427)
!15469 = !DILocation(line: 2728, column: 2, scope: !15427)
!15470 = !DILocation(line: 2736, column: 2, scope: !15427)
!15471 = !DILocation(line: 2736, column: 2, scope: !15458)
!15472 = !DILocalVariable(name: "__dummy", scope: !15473, file: !3, line: 2736, type: !394)
!15473 = distinct !DILexicalBlock(scope: !15457, file: !3, line: 2736, column: 2)
!15474 = !DILocation(line: 2736, column: 2, scope: !15473)
!15475 = !DILocalVariable(name: "__dummy2", scope: !15473, file: !3, line: 2736, type: !394)
!15476 = !DILocation(line: 2736, column: 2, scope: !15457)
!15477 = !DILocation(line: 2736, column: 2, scope: !15456)
!15478 = !DILocation(line: 2736, column: 2, scope: !15479)
!15479 = distinct !DILexicalBlock(scope: !15456, file: !3, line: 2736, column: 2)
!15480 = !DILocalVariable(name: "__dummy", scope: !15481, file: !3, line: 2736, type: !394)
!15481 = distinct !DILexicalBlock(scope: !15482, file: !3, line: 2736, column: 2)
!15482 = distinct !DILexicalBlock(scope: !15479, file: !3, line: 2736, column: 2)
!15483 = !DILocation(line: 2736, column: 2, scope: !15481)
!15484 = !DILocalVariable(name: "__dummy2", scope: !15481, file: !3, line: 2736, type: !394)
!15485 = !DILocation(line: 2736, column: 2, scope: !15482)
!15486 = !DILocation(line: 2736, column: 2, scope: !15455)
!15487 = !{i32 -2137036064}
!15488 = !DILocation(line: 2736, column: 2, scope: !15454)
!15489 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !15453)
!15490 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !15453)
!15491 = !DILocation(line: 2737, column: 20, scope: !15427)
!15492 = !DILocation(line: 2737, column: 24, scope: !15427)
!15493 = !DILocation(line: 2737, column: 2, scope: !15427)
!15494 = !DILocation(line: 2738, column: 26, scope: !15427)
!15495 = !DILocation(line: 2738, column: 30, scope: !15427)
!15496 = !DILocation(line: 2738, column: 39, scope: !15427)
!15497 = !DILocalVariable(name: "__dummy", scope: !15498, file: !15430, line: 409, type: !394)
!15498 = distinct !DILexicalBlock(scope: !15499, file: !15430, line: 409, column: 2)
!15499 = distinct !DILexicalBlock(scope: !15429, file: !15430, line: 409, column: 2)
!15500 = !DILocation(line: 409, column: 2, scope: !15498, inlinedAt: !15450)
!15501 = !DILocalVariable(name: "__dummy2", scope: !15498, file: !15430, line: 409, type: !394)
!15502 = !DILocalVariable(name: "__dummy", scope: !15503, file: !15430, line: 409, type: !394)
!15503 = distinct !DILexicalBlock(scope: !15504, file: !15430, line: 409, column: 2)
!15504 = distinct !DILexicalBlock(scope: !15505, file: !15430, line: 409, column: 2)
!15505 = distinct !DILexicalBlock(scope: !15506, file: !15430, line: 409, column: 2)
!15506 = distinct !DILexicalBlock(scope: !15499, file: !15430, line: 409, column: 2)
!15507 = !DILocation(line: 409, column: 2, scope: !15503, inlinedAt: !15450)
!15508 = !DILocalVariable(name: "__dummy2", scope: !15503, file: !15430, line: 409, type: !394)
!15509 = !DILocation(line: 409, column: 2, scope: !15504, inlinedAt: !15450)
!15510 = !DILocation(line: 409, column: 2, scope: !15511, inlinedAt: !15450)
!15511 = distinct !DILexicalBlock(scope: !15506, file: !15430, line: 409, column: 2)
!15512 = !{i32 -2145300556}
!15513 = !DILocation(line: 409, column: 2, scope: !15514, inlinedAt: !15450)
!15514 = distinct !DILexicalBlock(scope: !15511, file: !15430, line: 409, column: 2)
!15515 = !DILocalVariable(name: "__mptr", scope: !15516, file: !3, line: 2740, type: !647)
!15516 = distinct !DILexicalBlock(scope: !15517, file: !3, line: 2740, column: 2)
!15517 = distinct !DILexicalBlock(scope: !15427, file: !3, line: 2740, column: 2)
!15518 = !DILocation(line: 2740, column: 2, scope: !15516)
!15519 = !DILocation(line: 2740, column: 2, scope: !15520)
!15520 = distinct !DILexicalBlock(scope: !15516, file: !3, line: 2740, column: 2)
!15521 = !DILocation(line: 2740, column: 2, scope: !15517)
!15522 = !DILocalVariable(name: "__mptr", scope: !15523, file: !3, line: 2740, type: !647)
!15523 = distinct !DILexicalBlock(scope: !15517, file: !3, line: 2740, column: 2)
!15524 = !DILocation(line: 2740, column: 2, scope: !15523)
!15525 = !DILocation(line: 2740, column: 2, scope: !15526)
!15526 = distinct !DILexicalBlock(scope: !15523, file: !3, line: 2740, column: 2)
!15527 = !DILocation(line: 2740, column: 2, scope: !15528)
!15528 = distinct !DILexicalBlock(scope: !15517, file: !3, line: 2740, column: 2)
!15529 = !DILocation(line: 2744, column: 18, scope: !15530)
!15530 = distinct !DILexicalBlock(scope: !15531, file: !3, line: 2744, column: 7)
!15531 = distinct !DILexicalBlock(scope: !15528, file: !3, line: 2740, column: 64)
!15532 = !DILocation(line: 2744, column: 23, scope: !15530)
!15533 = !DILocation(line: 2744, column: 7, scope: !15530)
!15534 = !DILocation(line: 2744, column: 29, scope: !15530)
!15535 = !DILocation(line: 2744, column: 7, scope: !15531)
!15536 = !DILocation(line: 2745, column: 16, scope: !15530)
!15537 = !DILocation(line: 2745, column: 20, scope: !15530)
!15538 = !DILocation(line: 2745, column: 4, scope: !15530)
!15539 = !DILocation(line: 2747, column: 17, scope: !15530)
!15540 = !DILocation(line: 2747, column: 22, scope: !15530)
!15541 = !DILocation(line: 2747, column: 4, scope: !15530)
!15542 = !DILocation(line: 2748, column: 2, scope: !15531)
!15543 = !DILocalVariable(name: "__mptr", scope: !15544, file: !3, line: 2740, type: !647)
!15544 = distinct !DILexicalBlock(scope: !15528, file: !3, line: 2740, column: 2)
!15545 = !DILocation(line: 2740, column: 2, scope: !15544)
!15546 = !DILocation(line: 2740, column: 2, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !15544, file: !3, line: 2740, column: 2)
!15548 = distinct !{!15548, !15521, !15549}
!15549 = !DILocation(line: 2748, column: 2, scope: !15517)
!15550 = !DILocation(line: 2751, column: 2, scope: !15427)
!15551 = !DILocation(line: 2751, column: 2, scope: !15448)
!15552 = !DILocalVariable(name: "__dummy", scope: !15553, file: !3, line: 2751, type: !394)
!15553 = distinct !DILexicalBlock(scope: !15447, file: !3, line: 2751, column: 2)
!15554 = !DILocation(line: 2751, column: 2, scope: !15553)
!15555 = !DILocalVariable(name: "__dummy2", scope: !15553, file: !3, line: 2751, type: !394)
!15556 = !DILocation(line: 2751, column: 2, scope: !15447)
!15557 = !DILocation(line: 2751, column: 2, scope: !15446)
!15558 = !DILocation(line: 2751, column: 2, scope: !15559)
!15559 = distinct !DILexicalBlock(scope: !15446, file: !3, line: 2751, column: 2)
!15560 = !DILocalVariable(name: "__dummy", scope: !15561, file: !3, line: 2751, type: !394)
!15561 = distinct !DILexicalBlock(scope: !15562, file: !3, line: 2751, column: 2)
!15562 = distinct !DILexicalBlock(scope: !15559, file: !3, line: 2751, column: 2)
!15563 = !DILocation(line: 2751, column: 2, scope: !15561)
!15564 = !DILocalVariable(name: "__dummy2", scope: !15561, file: !3, line: 2751, type: !394)
!15565 = !DILocation(line: 2751, column: 2, scope: !15562)
!15566 = !DILocation(line: 2751, column: 2, scope: !15445)
!15567 = !{i32 -2137029021}
!15568 = !DILocation(line: 2751, column: 2, scope: !15444)
!15569 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !15443)
!15570 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !15443)
!15571 = !DILocalVariable(name: "__ret_warn_on", scope: !15572, file: !3, line: 2752, type: !72)
!15572 = distinct !DILexicalBlock(scope: !15427, file: !3, line: 2752, column: 2)
!15573 = !DILocation(line: 2752, column: 2, scope: !15572)
!15574 = !DILocation(line: 2752, column: 2, scope: !15575)
!15575 = distinct !DILexicalBlock(scope: !15572, file: !3, line: 2752, column: 2)
!15576 = !DILocation(line: 2752, column: 2, scope: !15577)
!15577 = distinct !DILexicalBlock(scope: !15575, file: !3, line: 2752, column: 2)
!15578 = !DILocation(line: 2752, column: 2, scope: !15579)
!15579 = distinct !DILexicalBlock(scope: !15577, file: !3, line: 2752, column: 2)
!15580 = !DILocation(line: 2752, column: 2, scope: !15581)
!15581 = distinct !DILexicalBlock(scope: !15577, file: !3, line: 2752, column: 2)
!15582 = !{i32 -2137028384, i32 -2137028355, i32 -2137028309, i32 -2137028251, i32 -2137028197, i32 -2137028143, i32 -2137028088, i32 -2137028057}
!15583 = !DILocation(line: 2752, column: 2, scope: !15584)
!15584 = distinct !DILexicalBlock(scope: !15577, file: !3, line: 2752, column: 2)
!15585 = !{i32 -2137027651, i32 -2137027644, i32 -2137027592, i32 -2137027561, i32 -2137027531}
!15586 = !DILocation(line: 2752, column: 2, scope: !15587)
!15587 = distinct !DILexicalBlock(scope: !15577, file: !3, line: 2752, column: 2)
!15588 = !DILocation(line: 2753, column: 26, scope: !15427)
!15589 = !DILocation(line: 2753, column: 30, scope: !15427)
!15590 = !DILocation(line: 2753, column: 2, scope: !15427)
!15591 = !DILocation(line: 2754, column: 26, scope: !15427)
!15592 = !DILocation(line: 2754, column: 30, scope: !15427)
!15593 = !DILocation(line: 2754, column: 39, scope: !15427)
!15594 = !DILocation(line: 409, column: 2, scope: !15498, inlinedAt: !15434)
!15595 = !DILocation(line: 409, column: 2, scope: !15503, inlinedAt: !15434)
!15596 = !DILocation(line: 409, column: 2, scope: !15504, inlinedAt: !15434)
!15597 = !DILocation(line: 409, column: 2, scope: !15511, inlinedAt: !15434)
!15598 = !DILocation(line: 409, column: 2, scope: !15514, inlinedAt: !15434)
!15599 = !DILocation(line: 2756, column: 2, scope: !15427)
!15600 = !DILocation(line: 2756, column: 27, scope: !15427)
!15601 = !DILocation(line: 2756, column: 31, scope: !15427)
!15602 = !DILocation(line: 2756, column: 10, scope: !15427)
!15603 = !DILocation(line: 2756, column: 9, scope: !15427)
!15604 = !DILocation(line: 2757, column: 3, scope: !15427)
!15605 = distinct !{!15605, !15599, !15604}
!15606 = !DILocation(line: 2759, column: 2, scope: !15427)
!15607 = distinct !DISubprogram(name: "rtl8152_nic_reset", scope: !3, file: !3, line: 2624, type: !10380, scopeLine: 2625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15608 = !DILocalVariable(name: "tp", arg: 1, scope: !15607, file: !3, line: 2624, type: !10280)
!15609 = !DILocation(line: 2624, column: 45, scope: !15607)
!15610 = !DILocalVariable(name: "i", scope: !15607, file: !3, line: 2626, type: !72)
!15611 = !DILocation(line: 2626, column: 6, scope: !15607)
!15612 = !DILocation(line: 2628, column: 17, scope: !15607)
!15613 = !DILocation(line: 2628, column: 2, scope: !15607)
!15614 = !DILocation(line: 2630, column: 9, scope: !15615)
!15615 = distinct !DILexicalBlock(scope: !15607, file: !3, line: 2630, column: 2)
!15616 = !DILocation(line: 2630, column: 7, scope: !15615)
!15617 = !DILocation(line: 2630, column: 14, scope: !15618)
!15618 = distinct !DILexicalBlock(scope: !15615, file: !3, line: 2630, column: 2)
!15619 = !DILocation(line: 2630, column: 16, scope: !15618)
!15620 = !DILocation(line: 2630, column: 2, scope: !15615)
!15621 = !DILocation(line: 2631, column: 23, scope: !15622)
!15622 = distinct !DILexicalBlock(scope: !15623, file: !3, line: 2631, column: 7)
!15623 = distinct !DILexicalBlock(scope: !15618, file: !3, line: 2630, column: 29)
!15624 = !DILocation(line: 2631, column: 9, scope: !15622)
!15625 = !DILocation(line: 2631, column: 49, scope: !15622)
!15626 = !DILocation(line: 2631, column: 7, scope: !15623)
!15627 = !DILocation(line: 2632, column: 4, scope: !15622)
!15628 = !DILocation(line: 2633, column: 3, scope: !15623)
!15629 = !DILocation(line: 2634, column: 2, scope: !15623)
!15630 = !DILocation(line: 2630, column: 25, scope: !15618)
!15631 = !DILocation(line: 2630, column: 2, scope: !15618)
!15632 = distinct !{!15632, !15620, !15633}
!15633 = !DILocation(line: 2634, column: 2, scope: !15615)
!15634 = !DILocation(line: 2635, column: 1, scope: !15607)
!15635 = distinct !DISubprogram(name: "skb_queue_empty", scope: !499, file: !499, line: 1521, type: !15636, scopeLine: 1522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15636 = !DISubroutineType(types: !15637)
!15637 = !{!72, !15638}
!15638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15639, size: 64)
!15639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2905)
!15640 = !DILocalVariable(name: "list", arg: 1, scope: !15635, file: !499, line: 1521, type: !15638)
!15641 = !DILocation(line: 1521, column: 62, scope: !15635)
!15642 = !DILocation(line: 1523, column: 9, scope: !15635)
!15643 = !DILocation(line: 1523, column: 15, scope: !15635)
!15644 = !DILocation(line: 1523, column: 48, scope: !15635)
!15645 = !DILocation(line: 1523, column: 23, scope: !15635)
!15646 = !DILocation(line: 1523, column: 20, scope: !15635)
!15647 = !DILocation(line: 1523, column: 2, scope: !15635)
!15648 = distinct !DISubprogram(name: "__skb_queue_head_init", scope: !499, file: !499, line: 1867, type: !15649, scopeLine: 1868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15649 = !DISubroutineType(types: !15650)
!15650 = !{null, !15396}
!15651 = !DILocalVariable(name: "list", arg: 1, scope: !15648, file: !499, line: 1867, type: !15396)
!15652 = !DILocation(line: 1867, column: 63, scope: !15648)
!15653 = !DILocation(line: 1869, column: 46, scope: !15648)
!15654 = !DILocation(line: 1869, column: 28, scope: !15648)
!15655 = !DILocation(line: 1869, column: 15, scope: !15648)
!15656 = !DILocation(line: 1869, column: 21, scope: !15648)
!15657 = !DILocation(line: 1869, column: 26, scope: !15648)
!15658 = !DILocation(line: 1869, column: 2, scope: !15648)
!15659 = !DILocation(line: 1869, column: 8, scope: !15648)
!15660 = !DILocation(line: 1869, column: 13, scope: !15648)
!15661 = !DILocation(line: 1870, column: 2, scope: !15648)
!15662 = !DILocation(line: 1870, column: 8, scope: !15648)
!15663 = !DILocation(line: 1870, column: 13, scope: !15648)
!15664 = !DILocation(line: 1871, column: 1, scope: !15648)
!15665 = distinct !DISubprogram(name: "spin_lock_bh", scope: !15430, file: !15430, line: 357, type: !15666, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15666 = !DISubroutineType(types: !15667)
!15667 = !{null, !4233}
!15668 = !DILocalVariable(name: "val", arg: 1, scope: !15669, file: !15670, line: 77, type: !72)
!15669 = distinct !DISubprogram(name: "__preempt_count_add", scope: !15670, file: !15670, line: 77, type: !3840, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15670 = !DIFile(filename: "./arch/x86/include/asm/preempt.h", directory: "/home/lizy2001/genbc/linux")
!15671 = !DILocation(line: 77, column: 53, scope: !15669, inlinedAt: !15672)
!15672 = distinct !DILocation(line: 12, column: 2, scope: !15673, inlinedAt: !15677)
!15673 = distinct !DISubprogram(name: "__local_bh_disable_ip", scope: !15674, file: !15674, line: 10, type: !15675, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15674 = !DIFile(filename: "./include/linux/bottom_half.h", directory: "/home/lizy2001/genbc/linux")
!15675 = !DISubroutineType(types: !15676)
!15676 = !{null, !394, !7}
!15677 = distinct !DILocation(line: 359, column: 2, scope: !15678)
!15678 = distinct !DILexicalBlock(scope: !15665, file: !15430, line: 359, column: 2)
!15679 = !DILocalVariable(name: "pao_ID__", scope: !15680, file: !15670, line: 79, type: !10965)
!15680 = distinct !DILexicalBlock(scope: !15669, file: !15670, line: 79, column: 2)
!15681 = !DILocation(line: 79, column: 2, scope: !15680, inlinedAt: !15672)
!15682 = !DILocalVariable(name: "pto_val__", scope: !15683, file: !15670, line: 79, type: !784)
!15683 = distinct !DILexicalBlock(scope: !15684, file: !15670, line: 79, column: 2)
!15684 = distinct !DILexicalBlock(scope: !15685, file: !15670, line: 79, column: 2)
!15685 = distinct !DILexicalBlock(scope: !15680, file: !15670, line: 79, column: 2)
!15686 = !DILocation(line: 79, column: 2, scope: !15683, inlinedAt: !15672)
!15687 = !DILocalVariable(name: "ip", arg: 1, scope: !15673, file: !15674, line: 10, type: !394)
!15688 = !DILocation(line: 10, column: 65, scope: !15673, inlinedAt: !15677)
!15689 = !DILocalVariable(name: "cnt", arg: 2, scope: !15673, file: !15674, line: 10, type: !7)
!15690 = !DILocation(line: 10, column: 82, scope: !15673, inlinedAt: !15677)
!15691 = !DILocalVariable(name: "lock", arg: 1, scope: !15665, file: !15430, line: 357, type: !4233)
!15692 = !DILocation(line: 357, column: 54, scope: !15665)
!15693 = !DILocation(line: 359, column: 2, scope: !15665)
!15694 = !DILocation(line: 359, column: 2, scope: !15695)
!15695 = distinct !DILexicalBlock(scope: !15678, file: !15430, line: 359, column: 2)
!15696 = !DILabel(scope: !15695, name: "__here", file: !15430, line: 359)
!15697 = !DILocation(line: 12, column: 2, scope: !15673, inlinedAt: !15677)
!15698 = !{i32 -2145375053}
!15699 = !DILocation(line: 13, column: 2, scope: !15673, inlinedAt: !15677)
!15700 = !{i32 -2145365451}
!15701 = !DILocation(line: 359, column: 2, scope: !15678)
!15702 = !DILocation(line: 359, column: 2, scope: !15703)
!15703 = distinct !DILexicalBlock(scope: !15678, file: !15430, line: 359, column: 2)
!15704 = !DILocation(line: 360, column: 1, scope: !15665)
!15705 = distinct !DISubprogram(name: "skb_queue_splice_init", scope: !499, file: !499, line: 1949, type: !15706, scopeLine: 1951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15706 = !DISubroutineType(types: !15707)
!15707 = !{null, !15396, !15396}
!15708 = !DILocalVariable(name: "list", arg: 1, scope: !15705, file: !499, line: 1949, type: !15396)
!15709 = !DILocation(line: 1949, column: 63, scope: !15705)
!15710 = !DILocalVariable(name: "head", arg: 2, scope: !15705, file: !499, line: 1950, type: !15396)
!15711 = !DILocation(line: 1950, column: 28, scope: !15705)
!15712 = !DILocation(line: 1952, column: 23, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !15705, file: !499, line: 1952, column: 6)
!15714 = !DILocation(line: 1952, column: 7, scope: !15713)
!15715 = !DILocation(line: 1952, column: 6, scope: !15705)
!15716 = !DILocation(line: 1953, column: 22, scope: !15717)
!15717 = distinct !DILexicalBlock(scope: !15713, file: !499, line: 1952, column: 30)
!15718 = !DILocation(line: 1953, column: 47, scope: !15717)
!15719 = !DILocation(line: 1953, column: 28, scope: !15717)
!15720 = !DILocation(line: 1953, column: 53, scope: !15717)
!15721 = !DILocation(line: 1953, column: 59, scope: !15717)
!15722 = !DILocation(line: 1953, column: 3, scope: !15717)
!15723 = !DILocation(line: 1954, column: 17, scope: !15717)
!15724 = !DILocation(line: 1954, column: 23, scope: !15717)
!15725 = !DILocation(line: 1954, column: 3, scope: !15717)
!15726 = !DILocation(line: 1954, column: 9, scope: !15717)
!15727 = !DILocation(line: 1954, column: 14, scope: !15717)
!15728 = !DILocation(line: 1955, column: 25, scope: !15717)
!15729 = !DILocation(line: 1955, column: 3, scope: !15717)
!15730 = !DILocation(line: 1956, column: 2, scope: !15717)
!15731 = !DILocation(line: 1957, column: 1, scope: !15705)
!15732 = distinct !DISubprogram(name: "spin_unlock_bh", scope: !15430, file: !15430, line: 397, type: !15666, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15733 = !DILocalVariable(name: "lock", arg: 1, scope: !15732, file: !15430, line: 397, type: !4233)
!15734 = !DILocation(line: 397, column: 56, scope: !15732)
!15735 = !DILocation(line: 399, column: 2, scope: !15732)
!15736 = !DILocation(line: 399, column: 2, scope: !15737)
!15737 = distinct !DILexicalBlock(scope: !15738, file: !15430, line: 399, column: 2)
!15738 = distinct !DILexicalBlock(scope: !15732, file: !15430, line: 399, column: 2)
!15739 = !DILabel(scope: !15737, name: "__here", file: !15430, line: 399)
!15740 = !DILocation(line: 399, column: 2, scope: !15738)
!15741 = !DILocation(line: 399, column: 2, scope: !15742)
!15742 = distinct !DILexicalBlock(scope: !15738, file: !15430, line: 399, column: 2)
!15743 = !DILocation(line: 400, column: 1, scope: !15732)
!15744 = distinct !DISubprogram(name: "__skb_dequeue", scope: !499, file: !499, line: 2078, type: !15745, scopeLine: 2079, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15745 = !DISubroutineType(types: !15746)
!15746 = !{!497, !15396}
!15747 = !DILocalVariable(name: "list", arg: 1, scope: !15744, file: !499, line: 2078, type: !15396)
!15748 = !DILocation(line: 2078, column: 66, scope: !15744)
!15749 = !DILocalVariable(name: "skb", scope: !15744, file: !499, line: 2080, type: !497)
!15750 = !DILocation(line: 2080, column: 18, scope: !15744)
!15751 = !DILocation(line: 2080, column: 33, scope: !15744)
!15752 = !DILocation(line: 2080, column: 24, scope: !15744)
!15753 = !DILocation(line: 2081, column: 6, scope: !15754)
!15754 = distinct !DILexicalBlock(scope: !15744, file: !499, line: 2081, column: 6)
!15755 = !DILocation(line: 2081, column: 6, scope: !15744)
!15756 = !DILocation(line: 2082, column: 16, scope: !15754)
!15757 = !DILocation(line: 2082, column: 21, scope: !15754)
!15758 = !DILocation(line: 2082, column: 3, scope: !15754)
!15759 = !DILocation(line: 2083, column: 9, scope: !15744)
!15760 = !DILocation(line: 2083, column: 2, scope: !15744)
!15761 = distinct !DISubprogram(name: "consume_skb", scope: !499, file: !499, line: 1063, type: !2793, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15762 = !DILocalVariable(name: "skb", arg: 1, scope: !15761, file: !499, line: 1063, type: !497)
!15763 = !DILocation(line: 1063, column: 48, scope: !15761)
!15764 = !DILocation(line: 1065, column: 19, scope: !15761)
!15765 = !DILocation(line: 1065, column: 9, scope: !15761)
!15766 = !DILocation(line: 1065, column: 2, scope: !15761)
!15767 = distinct !DISubprogram(name: "__skb_queue_splice", scope: !499, file: !499, line: 1914, type: !15768, scopeLine: 1917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15768 = !DISubroutineType(types: !15769)
!15769 = !{null, !15638, !497, !497}
!15770 = !DILocalVariable(name: "list", arg: 1, scope: !15767, file: !499, line: 1914, type: !15638)
!15771 = !DILocation(line: 1914, column: 66, scope: !15767)
!15772 = !DILocalVariable(name: "prev", arg: 2, scope: !15767, file: !499, line: 1915, type: !497)
!15773 = !DILocation(line: 1915, column: 27, scope: !15767)
!15774 = !DILocalVariable(name: "next", arg: 3, scope: !15767, file: !499, line: 1916, type: !497)
!15775 = !DILocation(line: 1916, column: 27, scope: !15767)
!15776 = !DILocalVariable(name: "first", scope: !15767, file: !499, line: 1918, type: !497)
!15777 = !DILocation(line: 1918, column: 18, scope: !15767)
!15778 = !DILocation(line: 1918, column: 26, scope: !15767)
!15779 = !DILocation(line: 1918, column: 32, scope: !15767)
!15780 = !DILocalVariable(name: "last", scope: !15767, file: !499, line: 1919, type: !497)
!15781 = !DILocation(line: 1919, column: 18, scope: !15767)
!15782 = !DILocation(line: 1919, column: 25, scope: !15767)
!15783 = !DILocation(line: 1919, column: 31, scope: !15767)
!15784 = !DILocation(line: 1921, column: 2, scope: !15767)
!15785 = !DILocation(line: 1921, column: 2, scope: !15786)
!15786 = distinct !DILexicalBlock(scope: !15767, file: !499, line: 1921, column: 2)
!15787 = !DILocation(line: 1921, column: 2, scope: !15788)
!15788 = distinct !DILexicalBlock(scope: !15786, file: !499, line: 1921, column: 2)
!15789 = !DILocation(line: 1921, column: 2, scope: !15790)
!15790 = distinct !DILexicalBlock(scope: !15786, file: !499, line: 1921, column: 2)
!15791 = !DILocation(line: 1922, column: 2, scope: !15767)
!15792 = !DILocation(line: 1922, column: 2, scope: !15793)
!15793 = distinct !DILexicalBlock(scope: !15767, file: !499, line: 1922, column: 2)
!15794 = !DILocation(line: 1922, column: 2, scope: !15795)
!15795 = distinct !DILexicalBlock(scope: !15793, file: !499, line: 1922, column: 2)
!15796 = !DILocation(line: 1922, column: 2, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15793, file: !499, line: 1922, column: 2)
!15798 = !DILocation(line: 1924, column: 2, scope: !15767)
!15799 = !DILocation(line: 1924, column: 2, scope: !15800)
!15800 = distinct !DILexicalBlock(scope: !15767, file: !499, line: 1924, column: 2)
!15801 = !DILocation(line: 1924, column: 2, scope: !15802)
!15802 = distinct !DILexicalBlock(scope: !15800, file: !499, line: 1924, column: 2)
!15803 = !DILocation(line: 1924, column: 2, scope: !15804)
!15804 = distinct !DILexicalBlock(scope: !15800, file: !499, line: 1924, column: 2)
!15805 = !DILocation(line: 1925, column: 2, scope: !15767)
!15806 = !DILocation(line: 1925, column: 2, scope: !15807)
!15807 = distinct !DILexicalBlock(scope: !15767, file: !499, line: 1925, column: 2)
!15808 = !DILocation(line: 1925, column: 2, scope: !15809)
!15809 = distinct !DILexicalBlock(scope: !15807, file: !499, line: 1925, column: 2)
!15810 = !DILocation(line: 1925, column: 2, scope: !15811)
!15811 = distinct !DILexicalBlock(scope: !15807, file: !499, line: 1925, column: 2)
!15812 = !DILocation(line: 1926, column: 1, scope: !15767)
!15813 = distinct !DISubprogram(name: "skb_peek", scope: !499, file: !499, line: 1772, type: !15814, scopeLine: 1773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15814 = !DISubroutineType(types: !15815)
!15815 = !{!497, !15638}
!15816 = !DILocalVariable(name: "list_", arg: 1, scope: !15813, file: !499, line: 1772, type: !15638)
!15817 = !DILocation(line: 1772, column: 67, scope: !15813)
!15818 = !DILocalVariable(name: "skb", scope: !15813, file: !499, line: 1774, type: !497)
!15819 = !DILocation(line: 1774, column: 18, scope: !15813)
!15820 = !DILocation(line: 1774, column: 24, scope: !15813)
!15821 = !DILocation(line: 1774, column: 31, scope: !15813)
!15822 = !DILocation(line: 1776, column: 6, scope: !15823)
!15823 = distinct !DILexicalBlock(scope: !15813, file: !499, line: 1776, column: 6)
!15824 = !DILocation(line: 1776, column: 31, scope: !15823)
!15825 = !DILocation(line: 1776, column: 13, scope: !15823)
!15826 = !DILocation(line: 1776, column: 10, scope: !15823)
!15827 = !DILocation(line: 1776, column: 6, scope: !15813)
!15828 = !DILocation(line: 1777, column: 7, scope: !15823)
!15829 = !DILocation(line: 1777, column: 3, scope: !15823)
!15830 = !DILocation(line: 1778, column: 9, scope: !15813)
!15831 = !DILocation(line: 1778, column: 2, scope: !15813)
!15832 = distinct !DISubprogram(name: "__skb_unlink", scope: !499, file: !499, line: 2058, type: !15833, scopeLine: 2059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15833 = !DISubroutineType(types: !15834)
!15834 = !{null, !497, !15396}
!15835 = !DILocalVariable(name: "skb", arg: 1, scope: !15832, file: !499, line: 2058, type: !497)
!15836 = !DILocation(line: 2058, column: 49, scope: !15832)
!15837 = !DILocalVariable(name: "list", arg: 2, scope: !15832, file: !499, line: 2058, type: !15396)
!15838 = !DILocation(line: 2058, column: 75, scope: !15832)
!15839 = !DILocalVariable(name: "next", scope: !15832, file: !499, line: 2060, type: !497)
!15840 = !DILocation(line: 2060, column: 18, scope: !15832)
!15841 = !DILocalVariable(name: "prev", scope: !15832, file: !499, line: 2060, type: !497)
!15842 = !DILocation(line: 2060, column: 25, scope: !15832)
!15843 = !DILocation(line: 2062, column: 2, scope: !15832)
!15844 = !DILocation(line: 2062, column: 2, scope: !15845)
!15845 = distinct !DILexicalBlock(scope: !15832, file: !499, line: 2062, column: 2)
!15846 = !DILocation(line: 2062, column: 2, scope: !15847)
!15847 = distinct !DILexicalBlock(scope: !15845, file: !499, line: 2062, column: 2)
!15848 = !DILocation(line: 2062, column: 2, scope: !15849)
!15849 = distinct !DILexicalBlock(scope: !15845, file: !499, line: 2062, column: 2)
!15850 = !DILocation(line: 2063, column: 12, scope: !15832)
!15851 = !DILocation(line: 2063, column: 17, scope: !15832)
!15852 = !DILocation(line: 2063, column: 10, scope: !15832)
!15853 = !DILocation(line: 2064, column: 12, scope: !15832)
!15854 = !DILocation(line: 2064, column: 17, scope: !15832)
!15855 = !DILocation(line: 2064, column: 10, scope: !15832)
!15856 = !DILocation(line: 2065, column: 15, scope: !15832)
!15857 = !DILocation(line: 2065, column: 20, scope: !15832)
!15858 = !DILocation(line: 2065, column: 25, scope: !15832)
!15859 = !DILocation(line: 2065, column: 2, scope: !15832)
!15860 = !DILocation(line: 2065, column: 7, scope: !15832)
!15861 = !DILocation(line: 2065, column: 13, scope: !15832)
!15862 = !DILocation(line: 2066, column: 2, scope: !15832)
!15863 = !DILocation(line: 2066, column: 2, scope: !15864)
!15864 = distinct !DILexicalBlock(scope: !15832, file: !499, line: 2066, column: 2)
!15865 = !DILocation(line: 2066, column: 2, scope: !15866)
!15866 = distinct !DILexicalBlock(scope: !15864, file: !499, line: 2066, column: 2)
!15867 = !DILocation(line: 2066, column: 2, scope: !15868)
!15868 = distinct !DILexicalBlock(scope: !15864, file: !499, line: 2066, column: 2)
!15869 = !DILocation(line: 2067, column: 2, scope: !15832)
!15870 = !DILocation(line: 2067, column: 2, scope: !15871)
!15871 = distinct !DILexicalBlock(scope: !15832, file: !499, line: 2067, column: 2)
!15872 = !DILocation(line: 2067, column: 2, scope: !15873)
!15873 = distinct !DILexicalBlock(scope: !15871, file: !499, line: 2067, column: 2)
!15874 = !DILocation(line: 2067, column: 2, scope: !15875)
!15875 = distinct !DILexicalBlock(scope: !15871, file: !499, line: 2067, column: 2)
!15876 = !DILocation(line: 2068, column: 1, scope: !15832)
!15877 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !15878, file: !15878, line: 666, type: !15879, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15878 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!15879 = !DISubroutineType(types: !15880)
!15880 = !{!394}
!15881 = !DILocalVariable(name: "f", scope: !15877, file: !15878, line: 668, type: !394)
!15882 = !DILocation(line: 668, column: 16, scope: !15877)
!15883 = !DILocation(line: 670, column: 6, scope: !15877)
!15884 = !DILocation(line: 670, column: 4, scope: !15877)
!15885 = !DILocation(line: 671, column: 2, scope: !15877)
!15886 = !DILocation(line: 672, column: 9, scope: !15877)
!15887 = !DILocation(line: 672, column: 2, scope: !15877)
!15888 = distinct !DISubprogram(name: "list_splice_init", scope: !12142, file: !12142, line: 478, type: !15889, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15889 = !DISubroutineType(types: !15890)
!15890 = !{null, !369, !369}
!15891 = !DILocalVariable(name: "list", arg: 1, scope: !15888, file: !12142, line: 478, type: !369)
!15892 = !DILocation(line: 478, column: 55, scope: !15888)
!15893 = !DILocalVariable(name: "head", arg: 2, scope: !15888, file: !12142, line: 479, type: !369)
!15894 = !DILocation(line: 479, column: 27, scope: !15888)
!15895 = !DILocation(line: 481, column: 18, scope: !15896)
!15896 = distinct !DILexicalBlock(scope: !15888, file: !12142, line: 481, column: 6)
!15897 = !DILocation(line: 481, column: 7, scope: !15896)
!15898 = !DILocation(line: 481, column: 6, scope: !15888)
!15899 = !DILocation(line: 482, column: 17, scope: !15900)
!15900 = distinct !DILexicalBlock(scope: !15896, file: !12142, line: 481, column: 25)
!15901 = !DILocation(line: 482, column: 23, scope: !15900)
!15902 = !DILocation(line: 482, column: 29, scope: !15900)
!15903 = !DILocation(line: 482, column: 35, scope: !15900)
!15904 = !DILocation(line: 482, column: 3, scope: !15900)
!15905 = !DILocation(line: 483, column: 18, scope: !15900)
!15906 = !DILocation(line: 483, column: 3, scope: !15900)
!15907 = !DILocation(line: 484, column: 2, scope: !15900)
!15908 = !DILocation(line: 485, column: 1, scope: !15888)
!15909 = distinct !DISubprogram(name: "page_count", scope: !15910, file: !15910, line: 70, type: !6819, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15910 = !DIFile(filename: "./include/linux/page_ref.h", directory: "/home/lizy2001/genbc/linux")
!15911 = !DILocalVariable(name: "v", arg: 1, scope: !15912, file: !15913, line: 23, type: !15916)
!15912 = distinct !DISubprogram(name: "arch_atomic_read", scope: !15913, file: !15913, line: 23, type: !15914, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15913 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!15914 = !DISubroutineType(types: !15915)
!15915 = !{!72, !15916}
!15916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15917, size: 64)
!15917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !465)
!15918 = !DILocation(line: 23, column: 61, scope: !15912, inlinedAt: !15919)
!15919 = distinct !DILocation(line: 28, column: 9, scope: !15920, inlinedAt: !15922)
!15920 = distinct !DISubprogram(name: "atomic_read", scope: !15921, file: !15921, line: 25, type: !15914, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15921 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!15922 = distinct !DILocation(line: 72, column: 9, scope: !15909)
!15923 = !DILocation(line: 69, column: 73, scope: !14190, inlinedAt: !15924)
!15924 = distinct !DILocation(line: 27, column: 2, scope: !15920, inlinedAt: !15922)
!15925 = !DILocation(line: 69, column: 83, scope: !14190, inlinedAt: !15924)
!15926 = !DILocalVariable(name: "v", arg: 1, scope: !15920, file: !15921, line: 25, type: !15916)
!15927 = !DILocation(line: 25, column: 29, scope: !15920, inlinedAt: !15922)
!15928 = !DILocalVariable(name: "page", arg: 1, scope: !15909, file: !15910, line: 70, type: !701)
!15929 = !DILocation(line: 70, column: 43, scope: !15909)
!15930 = !DILocation(line: 72, column: 36, scope: !15909)
!15931 = !DILocation(line: 72, column: 22, scope: !15909)
!15932 = !DILocation(line: 72, column: 43, scope: !15909)
!15933 = !DILocation(line: 27, column: 25, scope: !15920, inlinedAt: !15922)
!15934 = !DILocation(line: 71, column: 19, scope: !14190, inlinedAt: !15924)
!15935 = !DILocation(line: 71, column: 22, scope: !14190, inlinedAt: !15924)
!15936 = !DILocation(line: 71, column: 2, scope: !14190, inlinedAt: !15924)
!15937 = !DILocation(line: 72, column: 2, scope: !14190, inlinedAt: !15924)
!15938 = !DILocation(line: 28, column: 26, scope: !15920, inlinedAt: !15922)
!15939 = !DILocation(line: 29, column: 9, scope: !15912, inlinedAt: !15919)
!15940 = !DILocation(line: 72, column: 2, scope: !15909)
!15941 = distinct !DISubprogram(name: "free_rx_agg", scope: !3, file: !3, line: 1735, type: !15942, scopeLine: 1736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15942 = !DISubroutineType(types: !15943)
!15943 = !{null, !10280, !10212}
!15944 = !DILocalVariable(name: "v", arg: 1, scope: !15945, file: !15913, line: 106, type: !15948)
!15945 = distinct !DISubprogram(name: "arch_atomic_dec", scope: !15913, file: !15913, line: 106, type: !15946, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15946 = !DISubroutineType(types: !15947)
!15947 = !{null, !15948}
!15948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!15949 = !DILocation(line: 106, column: 55, scope: !15945, inlinedAt: !15950)
!15950 = distinct !DILocation(line: 331, column: 2, scope: !15951, inlinedAt: !15952)
!15951 = distinct !DISubprogram(name: "atomic_dec", scope: !15921, file: !15921, line: 328, type: !15946, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15952 = distinct !DILocation(line: 1743, column: 2, scope: !15941)
!15953 = !DILocalVariable(name: "v", arg: 1, scope: !15954, file: !12367, line: 99, type: !12370)
!15954 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !12367, file: !12367, line: 99, type: !12368, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15955 = !DILocation(line: 99, column: 79, scope: !15954, inlinedAt: !15956)
!15956 = distinct !DILocation(line: 330, column: 2, scope: !15951, inlinedAt: !15952)
!15957 = !DILocalVariable(name: "size", arg: 2, scope: !15954, file: !12367, line: 99, type: !671)
!15958 = !DILocation(line: 99, column: 89, scope: !15954, inlinedAt: !15956)
!15959 = !DILocalVariable(name: "v", arg: 1, scope: !15951, file: !15921, line: 328, type: !15948)
!15960 = !DILocation(line: 328, column: 22, scope: !15951, inlinedAt: !15952)
!15961 = !DILocalVariable(name: "tp", arg: 1, scope: !15941, file: !3, line: 1735, type: !10280)
!15962 = !DILocation(line: 1735, column: 39, scope: !15941)
!15963 = !DILocalVariable(name: "agg", arg: 2, scope: !15941, file: !3, line: 1735, type: !10212)
!15964 = !DILocation(line: 1735, column: 58, scope: !15941)
!15965 = !DILocation(line: 1737, column: 12, scope: !15941)
!15966 = !DILocation(line: 1737, column: 17, scope: !15941)
!15967 = !DILocation(line: 1737, column: 2, scope: !15941)
!15968 = !DILocation(line: 1739, column: 15, scope: !15941)
!15969 = !DILocation(line: 1739, column: 20, scope: !15941)
!15970 = !DILocation(line: 1739, column: 2, scope: !15941)
!15971 = !DILocation(line: 1740, column: 11, scope: !15941)
!15972 = !DILocation(line: 1740, column: 16, scope: !15941)
!15973 = !DILocation(line: 1740, column: 2, scope: !15941)
!15974 = !DILocation(line: 1741, column: 8, scope: !15941)
!15975 = !DILocation(line: 1741, column: 2, scope: !15941)
!15976 = !DILocation(line: 1743, column: 14, scope: !15941)
!15977 = !DILocation(line: 1743, column: 18, scope: !15941)
!15978 = !DILocation(line: 330, column: 31, scope: !15951, inlinedAt: !15952)
!15979 = !DILocation(line: 101, column: 20, scope: !15954, inlinedAt: !15956)
!15980 = !DILocation(line: 101, column: 23, scope: !15954, inlinedAt: !15956)
!15981 = !DILocation(line: 101, column: 2, scope: !15954, inlinedAt: !15956)
!15982 = !DILocation(line: 102, column: 2, scope: !15954, inlinedAt: !15956)
!15983 = !DILocation(line: 331, column: 18, scope: !15951, inlinedAt: !15952)
!15984 = !DILocation(line: 109, column: 16, scope: !15945, inlinedAt: !15950)
!15985 = !DILocation(line: 109, column: 19, scope: !15945, inlinedAt: !15950)
!15986 = !DILocation(line: 108, column: 2, scope: !15945, inlinedAt: !15950)
!15987 = !{i32 -2146468671}
!15988 = !DILocation(line: 1744, column: 1, scope: !15941)
!15989 = distinct !DISubprogram(name: "list_empty", scope: !12142, file: !12142, line: 280, type: !15990, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!15990 = !DISubroutineType(types: !15991)
!15991 = !{!72, !15992}
!15992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15993, size: 64)
!15993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !366)
!15994 = !DILocalVariable(name: "head", arg: 1, scope: !15989, file: !12142, line: 280, type: !15992)
!15995 = !DILocation(line: 280, column: 54, scope: !15989)
!15996 = !DILocation(line: 282, column: 9, scope: !15997)
!15997 = distinct !DILexicalBlock(scope: !15989, file: !12142, line: 282, column: 9)
!15998 = !DILocation(line: 282, column: 9, scope: !15999)
!15999 = distinct !DILexicalBlock(scope: !15997, file: !12142, line: 282, column: 9)
!16000 = !DILocation(line: 282, column: 34, scope: !15989)
!16001 = !DILocation(line: 282, column: 31, scope: !15989)
!16002 = !DILocation(line: 282, column: 2, scope: !15989)
!16003 = distinct !DISubprogram(name: "list_splice", scope: !12142, file: !12142, line: 452, type: !16004, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16004 = !DISubroutineType(types: !16005)
!16005 = !{null, !15992, !369}
!16006 = !DILocalVariable(name: "list", arg: 1, scope: !16003, file: !12142, line: 452, type: !15992)
!16007 = !DILocation(line: 452, column: 56, scope: !16003)
!16008 = !DILocalVariable(name: "head", arg: 2, scope: !16003, file: !12142, line: 453, type: !369)
!16009 = !DILocation(line: 453, column: 23, scope: !16003)
!16010 = !DILocation(line: 455, column: 18, scope: !16011)
!16011 = distinct !DILexicalBlock(scope: !16003, file: !12142, line: 455, column: 6)
!16012 = !DILocation(line: 455, column: 7, scope: !16011)
!16013 = !DILocation(line: 455, column: 6, scope: !16003)
!16014 = !DILocation(line: 456, column: 17, scope: !16011)
!16015 = !DILocation(line: 456, column: 23, scope: !16011)
!16016 = !DILocation(line: 456, column: 29, scope: !16011)
!16017 = !DILocation(line: 456, column: 35, scope: !16011)
!16018 = !DILocation(line: 456, column: 3, scope: !16011)
!16019 = !DILocation(line: 457, column: 1, scope: !16003)
!16020 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !15878, file: !15878, line: 646, type: !15879, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16021 = !DILocalVariable(name: "__ret", scope: !16022, file: !15878, line: 648, type: !394)
!16022 = distinct !DILexicalBlock(scope: !16020, file: !15878, line: 648, column: 9)
!16023 = !DILocation(line: 648, column: 9, scope: !16022)
!16024 = !DILocalVariable(name: "__edi", scope: !16022, file: !15878, line: 648, type: !394)
!16025 = !DILocalVariable(name: "__esi", scope: !16022, file: !15878, line: 648, type: !394)
!16026 = !DILocalVariable(name: "__edx", scope: !16022, file: !15878, line: 648, type: !394)
!16027 = !DILocalVariable(name: "__ecx", scope: !16022, file: !15878, line: 648, type: !394)
!16028 = !DILocalVariable(name: "__eax", scope: !16022, file: !15878, line: 648, type: !394)
!16029 = !DILocation(line: 648, column: 9, scope: !16030)
!16030 = distinct !DILexicalBlock(scope: !16031, file: !15878, line: 648, column: 9)
!16031 = distinct !DILexicalBlock(scope: !16022, file: !15878, line: 648, column: 9)
!16032 = !{i32 -2145642359, i32 -2145640044, i32 -2145639810, i32 -2145639759, i32 -2145639731, i32 -2145639706, i32 -2145640022, i32 -2145640009, i32 -2145639571, i32 -2145639452, i32 -2145639917, i32 -2145639890, i32 -2145639862, i32 -2145639832}
!16033 = !DILocalVariable(name: "__mask", scope: !16034, file: !15878, line: 648, type: !394)
!16034 = distinct !DILexicalBlock(scope: !16030, file: !15878, line: 648, column: 9)
!16035 = !DILocation(line: 648, column: 9, scope: !16034)
!16036 = !DILocation(line: 648, column: 9, scope: !16031)
!16037 = !DILocation(line: 648, column: 2, scope: !16020)
!16038 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !15878, file: !15878, line: 656, type: !3847, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16039 = !DILocalVariable(name: "__edi", scope: !16040, file: !15878, line: 658, type: !394)
!16040 = distinct !DILexicalBlock(scope: !16038, file: !15878, line: 658, column: 2)
!16041 = !DILocation(line: 658, column: 2, scope: !16040)
!16042 = !DILocalVariable(name: "__esi", scope: !16040, file: !15878, line: 658, type: !394)
!16043 = !DILocalVariable(name: "__edx", scope: !16040, file: !15878, line: 658, type: !394)
!16044 = !DILocalVariable(name: "__ecx", scope: !16040, file: !15878, line: 658, type: !394)
!16045 = !DILocalVariable(name: "__eax", scope: !16040, file: !15878, line: 658, type: !394)
!16046 = !{i32 -2145635265, i32 -2145634533, i32 -2145634299, i32 -2145634248, i32 -2145634220, i32 -2145634195, i32 -2145634511, i32 -2145634498, i32 -2145634060, i32 -2145633941, i32 -2145634406, i32 -2145634379, i32 -2145634351, i32 -2145634321}
!16047 = !DILocation(line: 659, column: 1, scope: !16038)
!16048 = distinct !DISubprogram(name: "__list_splice", scope: !12142, file: !12142, line: 433, type: !16049, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16049 = !DISubroutineType(types: !16050)
!16050 = !{null, !15992, !369, !369}
!16051 = !DILocalVariable(name: "list", arg: 1, scope: !16048, file: !12142, line: 433, type: !15992)
!16052 = !DILocation(line: 433, column: 58, scope: !16048)
!16053 = !DILocalVariable(name: "prev", arg: 2, scope: !16048, file: !12142, line: 434, type: !369)
!16054 = !DILocation(line: 434, column: 24, scope: !16048)
!16055 = !DILocalVariable(name: "next", arg: 3, scope: !16048, file: !12142, line: 435, type: !369)
!16056 = !DILocation(line: 435, column: 24, scope: !16048)
!16057 = !DILocalVariable(name: "first", scope: !16048, file: !12142, line: 437, type: !369)
!16058 = !DILocation(line: 437, column: 20, scope: !16048)
!16059 = !DILocation(line: 437, column: 28, scope: !16048)
!16060 = !DILocation(line: 437, column: 34, scope: !16048)
!16061 = !DILocalVariable(name: "last", scope: !16048, file: !12142, line: 438, type: !369)
!16062 = !DILocation(line: 438, column: 20, scope: !16048)
!16063 = !DILocation(line: 438, column: 27, scope: !16048)
!16064 = !DILocation(line: 438, column: 33, scope: !16048)
!16065 = !DILocation(line: 440, column: 16, scope: !16048)
!16066 = !DILocation(line: 440, column: 2, scope: !16048)
!16067 = !DILocation(line: 440, column: 9, scope: !16048)
!16068 = !DILocation(line: 440, column: 14, scope: !16048)
!16069 = !DILocation(line: 441, column: 15, scope: !16048)
!16070 = !DILocation(line: 441, column: 2, scope: !16048)
!16071 = !DILocation(line: 441, column: 8, scope: !16048)
!16072 = !DILocation(line: 441, column: 13, scope: !16048)
!16073 = !DILocation(line: 443, column: 15, scope: !16048)
!16074 = !DILocation(line: 443, column: 2, scope: !16048)
!16075 = !DILocation(line: 443, column: 8, scope: !16048)
!16076 = !DILocation(line: 443, column: 13, scope: !16048)
!16077 = !DILocation(line: 444, column: 15, scope: !16048)
!16078 = !DILocation(line: 444, column: 2, scope: !16048)
!16079 = !DILocation(line: 444, column: 8, scope: !16048)
!16080 = !DILocation(line: 444, column: 13, scope: !16048)
!16081 = !DILocation(line: 445, column: 1, scope: !16048)
!16082 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !15878, file: !15878, line: 651, type: !10368, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16083 = !DILocalVariable(name: "f", arg: 1, scope: !16082, file: !15878, line: 651, type: !394)
!16084 = !DILocation(line: 651, column: 65, scope: !16082)
!16085 = !DILocalVariable(name: "__edi", scope: !16086, file: !15878, line: 653, type: !394)
!16086 = distinct !DILexicalBlock(scope: !16082, file: !15878, line: 653, column: 2)
!16087 = !DILocation(line: 653, column: 2, scope: !16086)
!16088 = !DILocalVariable(name: "__esi", scope: !16086, file: !15878, line: 653, type: !394)
!16089 = !DILocalVariable(name: "__edx", scope: !16086, file: !15878, line: 653, type: !394)
!16090 = !DILocalVariable(name: "__ecx", scope: !16086, file: !15878, line: 653, type: !394)
!16091 = !DILocalVariable(name: "__eax", scope: !16086, file: !15878, line: 653, type: !394)
!16092 = !{i32 -2145637892, i32 -2145637142, i32 -2145636908, i32 -2145636857, i32 -2145636829, i32 -2145636804, i32 -2145637120, i32 -2145637107, i32 -2145636669, i32 -2145636550, i32 -2145637015, i32 -2145636988, i32 -2145636960, i32 -2145636930}
!16093 = !DILocation(line: 654, column: 1, scope: !16082)
!16094 = distinct !DISubprogram(name: "compound_head", scope: !16095, file: !16095, line: 183, type: !16096, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16095 = !DIFile(filename: "./include/linux/page-flags.h", directory: "/home/lizy2001/genbc/linux")
!16096 = !DISubroutineType(types: !16097)
!16097 = !{!701, !701}
!16098 = !DILocalVariable(name: "page", arg: 1, scope: !16094, file: !16095, line: 183, type: !701)
!16099 = !DILocation(line: 183, column: 55, scope: !16094)
!16100 = !DILocalVariable(name: "head", scope: !16094, file: !16095, line: 185, type: !394)
!16101 = !DILocation(line: 185, column: 16, scope: !16094)
!16102 = !DILocation(line: 185, column: 23, scope: !16103)
!16103 = distinct !DILexicalBlock(scope: !16094, file: !16095, line: 185, column: 23)
!16104 = !DILocation(line: 185, column: 23, scope: !16105)
!16105 = distinct !DILexicalBlock(scope: !16103, file: !16095, line: 185, column: 23)
!16106 = !DILocation(line: 187, column: 6, scope: !16107)
!16107 = distinct !DILexicalBlock(scope: !16094, file: !16095, line: 187, column: 6)
!16108 = !DILocation(line: 187, column: 6, scope: !16094)
!16109 = !DILocation(line: 188, column: 27, scope: !16107)
!16110 = !DILocation(line: 188, column: 32, scope: !16107)
!16111 = !DILocation(line: 188, column: 10, scope: !16107)
!16112 = !DILocation(line: 188, column: 3, scope: !16107)
!16113 = !DILocation(line: 189, column: 9, scope: !16094)
!16114 = !DILocation(line: 189, column: 2, scope: !16094)
!16115 = !DILocation(line: 190, column: 1, scope: !16094)
!16116 = distinct !DISubprogram(name: "list_del", scope: !12142, file: !12142, line: 144, type: !12143, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16117 = !DILocalVariable(name: "entry", arg: 1, scope: !16116, file: !12142, line: 144, type: !369)
!16118 = !DILocation(line: 144, column: 47, scope: !16116)
!16119 = !DILocation(line: 146, column: 19, scope: !16116)
!16120 = !DILocation(line: 146, column: 2, scope: !16116)
!16121 = !DILocation(line: 147, column: 2, scope: !16116)
!16122 = !DILocation(line: 147, column: 9, scope: !16116)
!16123 = !DILocation(line: 147, column: 14, scope: !16116)
!16124 = !DILocation(line: 148, column: 2, scope: !16116)
!16125 = !DILocation(line: 148, column: 9, scope: !16116)
!16126 = !DILocation(line: 148, column: 14, scope: !16116)
!16127 = !DILocation(line: 149, column: 1, scope: !16116)
!16128 = distinct !DISubprogram(name: "put_page", scope: !227, file: !227, line: 1178, type: !6859, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16129 = !DILocalVariable(name: "page", arg: 1, scope: !16128, file: !227, line: 1178, type: !701)
!16130 = !DILocation(line: 1178, column: 42, scope: !16128)
!16131 = !DILocation(line: 1180, column: 23, scope: !16128)
!16132 = !DILocation(line: 1180, column: 9, scope: !16128)
!16133 = !DILocation(line: 1180, column: 7, scope: !16128)
!16134 = !DILocation(line: 1188, column: 29, scope: !16135)
!16135 = distinct !DILexicalBlock(scope: !16128, file: !227, line: 1188, column: 6)
!16136 = !DILocation(line: 1188, column: 6, scope: !16135)
!16137 = !DILocation(line: 1188, column: 6, scope: !16128)
!16138 = !DILocation(line: 1189, column: 27, scope: !16139)
!16139 = distinct !DILexicalBlock(scope: !16135, file: !227, line: 1188, column: 36)
!16140 = !DILocation(line: 1189, column: 3, scope: !16139)
!16141 = !DILocation(line: 1190, column: 3, scope: !16139)
!16142 = !DILocation(line: 1193, column: 24, scope: !16143)
!16143 = distinct !DILexicalBlock(scope: !16128, file: !227, line: 1193, column: 6)
!16144 = !DILocation(line: 1193, column: 6, scope: !16143)
!16145 = !DILocation(line: 1193, column: 6, scope: !16128)
!16146 = !DILocation(line: 1194, column: 14, scope: !16143)
!16147 = !DILocation(line: 1194, column: 3, scope: !16143)
!16148 = !DILocation(line: 1195, column: 1, scope: !16128)
!16149 = distinct !DISubprogram(name: "__list_del_entry", scope: !12142, file: !12142, line: 130, type: !12143, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16150 = !DILocalVariable(name: "entry", arg: 1, scope: !16149, file: !12142, line: 130, type: !369)
!16151 = !DILocation(line: 130, column: 55, scope: !16149)
!16152 = !DILocation(line: 132, column: 30, scope: !16153)
!16153 = distinct !DILexicalBlock(scope: !16149, file: !12142, line: 132, column: 6)
!16154 = !DILocation(line: 132, column: 7, scope: !16153)
!16155 = !DILocation(line: 132, column: 6, scope: !16149)
!16156 = !DILocation(line: 133, column: 3, scope: !16153)
!16157 = !DILocation(line: 135, column: 13, scope: !16149)
!16158 = !DILocation(line: 135, column: 20, scope: !16149)
!16159 = !DILocation(line: 135, column: 26, scope: !16149)
!16160 = !DILocation(line: 135, column: 33, scope: !16149)
!16161 = !DILocation(line: 135, column: 2, scope: !16149)
!16162 = !DILocation(line: 136, column: 1, scope: !16149)
!16163 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !12142, file: !12142, line: 51, type: !16164, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16164 = !DISubroutineType(types: !16165)
!16165 = !{!617, !369}
!16166 = !DILocalVariable(name: "entry", arg: 1, scope: !16163, file: !12142, line: 51, type: !369)
!16167 = !DILocation(line: 51, column: 61, scope: !16163)
!16168 = !DILocation(line: 53, column: 2, scope: !16163)
!16169 = distinct !DISubprogram(name: "__list_del", scope: !12142, file: !12142, line: 110, type: !15889, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16170 = !DILocalVariable(name: "prev", arg: 1, scope: !16169, file: !12142, line: 110, type: !369)
!16171 = !DILocation(line: 110, column: 50, scope: !16169)
!16172 = !DILocalVariable(name: "next", arg: 2, scope: !16169, file: !12142, line: 110, type: !369)
!16173 = !DILocation(line: 110, column: 75, scope: !16169)
!16174 = !DILocation(line: 112, column: 15, scope: !16169)
!16175 = !DILocation(line: 112, column: 2, scope: !16169)
!16176 = !DILocation(line: 112, column: 8, scope: !16169)
!16177 = !DILocation(line: 112, column: 13, scope: !16169)
!16178 = !DILocation(line: 113, column: 2, scope: !16169)
!16179 = !DILocation(line: 113, column: 2, scope: !16180)
!16180 = distinct !DILexicalBlock(scope: !16169, file: !12142, line: 113, column: 2)
!16181 = !DILocation(line: 113, column: 2, scope: !16182)
!16182 = distinct !DILexicalBlock(scope: !16180, file: !12142, line: 113, column: 2)
!16183 = !DILocation(line: 113, column: 2, scope: !16184)
!16184 = distinct !DILexicalBlock(scope: !16180, file: !12142, line: 113, column: 2)
!16185 = !DILocation(line: 114, column: 1, scope: !16169)
!16186 = distinct !DISubprogram(name: "page_is_devmap_managed", scope: !227, file: !227, line: 1126, type: !16187, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16187 = !DISubroutineType(types: !16188)
!16188 = !{!617, !701}
!16189 = !DILocalVariable(name: "page", arg: 1, scope: !16186, file: !227, line: 1126, type: !701)
!16190 = !DILocation(line: 1126, column: 56, scope: !16186)
!16191 = !DILocation(line: 1128, column: 2, scope: !16186)
!16192 = distinct !DISubprogram(name: "put_devmap_managed_page", scope: !227, file: !227, line: 1131, type: !6859, scopeLine: 1132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16193 = !DILocalVariable(name: "page", arg: 1, scope: !16192, file: !227, line: 1131, type: !701)
!16194 = !DILocation(line: 1131, column: 57, scope: !16192)
!16195 = !DILocation(line: 1133, column: 1, scope: !16192)
!16196 = distinct !DISubprogram(name: "put_page_testzero", scope: !227, file: !227, line: 705, type: !6819, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16197 = !DILocalVariable(name: "page", arg: 1, scope: !16196, file: !227, line: 705, type: !701)
!16198 = !DILocation(line: 705, column: 50, scope: !16196)
!16199 = !DILocation(line: 708, column: 31, scope: !16196)
!16200 = !DILocation(line: 708, column: 9, scope: !16196)
!16201 = !DILocation(line: 708, column: 2, scope: !16196)
!16202 = distinct !DISubprogram(name: "page_ref_dec_and_test", scope: !15910, file: !15910, line: 146, type: !6819, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16203 = !DILocalVariable(name: "v", arg: 1, scope: !16204, file: !15913, line: 121, type: !15948)
!16204 = distinct !DISubprogram(name: "arch_atomic_dec_and_test", scope: !15913, file: !15913, line: 121, type: !16205, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16205 = !DISubroutineType(types: !16206)
!16206 = !{!617, !15948}
!16207 = !DILocation(line: 121, column: 64, scope: !16204, inlinedAt: !16208)
!16208 = distinct !DILocation(line: 749, column: 9, scope: !16209, inlinedAt: !16210)
!16209 = distinct !DISubprogram(name: "atomic_dec_and_test", scope: !15921, file: !15921, line: 746, type: !16205, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16210 = distinct !DILocation(line: 148, column: 12, scope: !16202)
!16211 = !DILocalVariable(name: "c", scope: !16212, file: !15913, line: 123, type: !617)
!16212 = distinct !DILexicalBlock(scope: !16204, file: !15913, line: 123, column: 9)
!16213 = !DILocation(line: 123, column: 9, scope: !16212, inlinedAt: !16208)
!16214 = !DILocation(line: 99, column: 79, scope: !15954, inlinedAt: !16215)
!16215 = distinct !DILocation(line: 748, column: 2, scope: !16209, inlinedAt: !16210)
!16216 = !DILocation(line: 99, column: 89, scope: !15954, inlinedAt: !16215)
!16217 = !DILocalVariable(name: "v", arg: 1, scope: !16209, file: !15921, line: 746, type: !15948)
!16218 = !DILocation(line: 746, column: 31, scope: !16209, inlinedAt: !16210)
!16219 = !DILocalVariable(name: "page", arg: 1, scope: !16202, file: !15910, line: 146, type: !701)
!16220 = !DILocation(line: 146, column: 54, scope: !16202)
!16221 = !DILocalVariable(name: "ret", scope: !16202, file: !15910, line: 148, type: !72)
!16222 = !DILocation(line: 148, column: 6, scope: !16202)
!16223 = !DILocation(line: 148, column: 33, scope: !16202)
!16224 = !DILocation(line: 148, column: 39, scope: !16202)
!16225 = !DILocation(line: 748, column: 31, scope: !16209, inlinedAt: !16210)
!16226 = !DILocation(line: 101, column: 20, scope: !15954, inlinedAt: !16215)
!16227 = !DILocation(line: 101, column: 23, scope: !15954, inlinedAt: !16215)
!16228 = !DILocation(line: 101, column: 2, scope: !15954, inlinedAt: !16215)
!16229 = !DILocation(line: 102, column: 2, scope: !15954, inlinedAt: !16215)
!16230 = !DILocation(line: 749, column: 34, scope: !16209, inlinedAt: !16210)
!16231 = !{i32 -2146467871, i32 -2146467804}
!16232 = !DILocation(line: 148, column: 12, scope: !16202)
!16233 = !DILocation(line: 152, column: 9, scope: !16202)
!16234 = !DILocation(line: 152, column: 2, scope: !16202)
!16235 = distinct !DISubprogram(name: "kasan_check_write", scope: !14431, file: !14431, line: 38, type: !14432, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16236 = !DILocalVariable(name: "p", arg: 1, scope: !16235, file: !14431, line: 38, type: !12370)
!16237 = !DILocation(line: 38, column: 59, scope: !16235)
!16238 = !DILocalVariable(name: "size", arg: 2, scope: !16235, file: !14431, line: 38, type: !7)
!16239 = !DILocation(line: 38, column: 75, scope: !16235)
!16240 = !DILocation(line: 40, column: 2, scope: !16235)
!16241 = distinct !DISubprogram(name: "r8152b_exit_oob", scope: !3, file: !3, line: 4289, type: !10380, scopeLine: 4290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16242 = !DILocalVariable(name: "tp", arg: 1, scope: !16241, file: !3, line: 4289, type: !10280)
!16243 = !DILocation(line: 4289, column: 43, scope: !16241)
!16244 = !DILocalVariable(name: "ocp_data", scope: !16241, file: !3, line: 4291, type: !784)
!16245 = !DILocation(line: 4291, column: 6, scope: !16241)
!16246 = !DILocation(line: 4293, column: 28, scope: !16241)
!16247 = !DILocation(line: 4293, column: 13, scope: !16241)
!16248 = !DILocation(line: 4293, column: 11, scope: !16241)
!16249 = !DILocation(line: 4294, column: 11, scope: !16241)
!16250 = !DILocation(line: 4295, column: 18, scope: !16241)
!16251 = !DILocation(line: 4295, column: 45, scope: !16241)
!16252 = !DILocation(line: 4295, column: 2, scope: !16241)
!16253 = !DILocation(line: 4297, column: 16, scope: !16241)
!16254 = !DILocation(line: 4297, column: 2, scope: !16241)
!16255 = !DILocation(line: 4298, column: 19, scope: !16241)
!16256 = !DILocation(line: 4298, column: 2, scope: !16241)
!16257 = !DILocation(line: 4299, column: 17, scope: !16241)
!16258 = !DILocation(line: 4299, column: 2, scope: !16241)
!16259 = !DILocation(line: 4300, column: 17, scope: !16241)
!16260 = !DILocation(line: 4300, column: 2, scope: !16241)
!16261 = !DILocation(line: 4302, column: 27, scope: !16241)
!16262 = !DILocation(line: 4302, column: 13, scope: !16241)
!16263 = !DILocation(line: 4302, column: 11, scope: !16241)
!16264 = !DILocation(line: 4303, column: 11, scope: !16241)
!16265 = !DILocation(line: 4304, column: 17, scope: !16241)
!16266 = !DILocation(line: 4304, column: 49, scope: !16241)
!16267 = !DILocation(line: 4304, column: 2, scope: !16241)
!16268 = !DILocation(line: 4306, column: 27, scope: !16241)
!16269 = !DILocation(line: 4306, column: 13, scope: !16241)
!16270 = !DILocation(line: 4306, column: 11, scope: !16241)
!16271 = !DILocation(line: 4307, column: 11, scope: !16241)
!16272 = !DILocation(line: 4308, column: 17, scope: !16241)
!16273 = !DILocation(line: 4308, column: 50, scope: !16241)
!16274 = !DILocation(line: 4308, column: 2, scope: !16241)
!16275 = !DILocation(line: 4310, column: 27, scope: !16241)
!16276 = !DILocation(line: 4310, column: 2, scope: !16241)
!16277 = !DILocation(line: 4312, column: 27, scope: !16241)
!16278 = !DILocation(line: 4312, column: 13, scope: !16241)
!16279 = !DILocation(line: 4312, column: 11, scope: !16241)
!16280 = !DILocation(line: 4313, column: 11, scope: !16241)
!16281 = !DILocation(line: 4314, column: 17, scope: !16241)
!16282 = !DILocation(line: 4314, column: 50, scope: !16241)
!16283 = !DILocation(line: 4314, column: 2, scope: !16241)
!16284 = !DILocation(line: 4316, column: 27, scope: !16241)
!16285 = !DILocation(line: 4316, column: 2, scope: !16241)
!16286 = !DILocation(line: 4318, column: 20, scope: !16241)
!16287 = !DILocation(line: 4318, column: 2, scope: !16241)
!16288 = !DILocation(line: 4321, column: 18, scope: !16241)
!16289 = !DILocation(line: 4321, column: 2, scope: !16241)
!16290 = !DILocation(line: 4323, column: 6, scope: !16291)
!16291 = distinct !DILexicalBlock(scope: !16241, file: !3, line: 4323, column: 6)
!16292 = !DILocation(line: 4323, column: 10, scope: !16291)
!16293 = !DILocation(line: 4323, column: 16, scope: !16291)
!16294 = !DILocation(line: 4323, column: 22, scope: !16291)
!16295 = !DILocation(line: 4323, column: 40, scope: !16291)
!16296 = !DILocation(line: 4324, column: 6, scope: !16291)
!16297 = !DILocation(line: 4324, column: 10, scope: !16291)
!16298 = !DILocation(line: 4324, column: 16, scope: !16291)
!16299 = !DILocation(line: 4324, column: 22, scope: !16291)
!16300 = !DILocation(line: 4323, column: 6, scope: !16241)
!16301 = !DILocation(line: 4326, column: 19, scope: !16302)
!16302 = distinct !DILexicalBlock(scope: !16291, file: !3, line: 4324, column: 40)
!16303 = !DILocation(line: 4326, column: 3, scope: !16302)
!16304 = !DILocation(line: 4328, column: 19, scope: !16302)
!16305 = !DILocation(line: 4328, column: 3, scope: !16302)
!16306 = !DILocation(line: 4330, column: 2, scope: !16302)
!16307 = !DILocation(line: 4332, column: 19, scope: !16308)
!16308 = distinct !DILexicalBlock(scope: !16291, file: !3, line: 4330, column: 9)
!16309 = !DILocation(line: 4332, column: 3, scope: !16308)
!16310 = !DILocation(line: 4334, column: 19, scope: !16308)
!16311 = !DILocation(line: 4334, column: 3, scope: !16308)
!16312 = !DILocation(line: 4339, column: 18, scope: !16241)
!16313 = !DILocation(line: 4339, column: 2, scope: !16241)
!16314 = !DILocation(line: 4341, column: 17, scope: !16241)
!16315 = !DILocation(line: 4341, column: 2, scope: !16241)
!16316 = !DILocation(line: 4342, column: 18, scope: !16241)
!16317 = !DILocation(line: 4342, column: 2, scope: !16241)
!16318 = !DILocation(line: 4343, column: 18, scope: !16241)
!16319 = !DILocation(line: 4343, column: 2, scope: !16241)
!16320 = !DILocation(line: 4346, column: 17, scope: !16241)
!16321 = !DILocation(line: 4346, column: 21, scope: !16241)
!16322 = !DILocation(line: 4346, column: 25, scope: !16241)
!16323 = !DILocation(line: 4346, column: 33, scope: !16241)
!16324 = !DILocation(line: 4346, column: 42, scope: !16241)
!16325 = !DILocation(line: 4346, column: 2, scope: !16241)
!16326 = !DILocation(line: 4348, column: 17, scope: !16241)
!16327 = !DILocation(line: 4348, column: 2, scope: !16241)
!16328 = !DILocation(line: 4350, column: 27, scope: !16241)
!16329 = !DILocation(line: 4350, column: 13, scope: !16241)
!16330 = !DILocation(line: 4350, column: 11, scope: !16241)
!16331 = !DILocation(line: 4351, column: 11, scope: !16241)
!16332 = !DILocation(line: 4352, column: 17, scope: !16241)
!16333 = !DILocation(line: 4352, column: 45, scope: !16241)
!16334 = !DILocation(line: 4352, column: 2, scope: !16241)
!16335 = !DILocation(line: 4353, column: 1, scope: !16241)
!16336 = distinct !DISubprogram(name: "r8153_teredo_off", scope: !3, file: !3, line: 3396, type: !10380, scopeLine: 3397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16337 = !DILocalVariable(name: "tp", arg: 1, scope: !16336, file: !3, line: 3396, type: !10280)
!16338 = !DILocation(line: 3396, column: 44, scope: !16336)
!16339 = !DILocalVariable(name: "ocp_data", scope: !16336, file: !3, line: 3398, type: !784)
!16340 = !DILocation(line: 3398, column: 6, scope: !16336)
!16341 = !DILocation(line: 3400, column: 10, scope: !16336)
!16342 = !DILocation(line: 3400, column: 14, scope: !16336)
!16343 = !DILocation(line: 3400, column: 2, scope: !16336)
!16344 = !DILocation(line: 3408, column: 28, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16336, file: !3, line: 3400, column: 23)
!16346 = !DILocation(line: 3408, column: 14, scope: !16345)
!16347 = !DILocation(line: 3408, column: 12, scope: !16345)
!16348 = !DILocation(line: 3409, column: 12, scope: !16345)
!16349 = !DILocation(line: 3411, column: 18, scope: !16345)
!16350 = !DILocation(line: 3411, column: 52, scope: !16345)
!16351 = !DILocation(line: 3411, column: 3, scope: !16345)
!16352 = !DILocation(line: 3412, column: 3, scope: !16345)
!16353 = !DILocation(line: 3419, column: 18, scope: !16345)
!16354 = !DILocation(line: 3419, column: 3, scope: !16345)
!16355 = !DILocation(line: 3420, column: 3, scope: !16345)
!16356 = !DILocation(line: 3423, column: 3, scope: !16345)
!16357 = !DILocation(line: 3426, column: 17, scope: !16336)
!16358 = !DILocation(line: 3426, column: 2, scope: !16336)
!16359 = !DILocation(line: 3427, column: 17, scope: !16336)
!16360 = !DILocation(line: 3427, column: 2, scope: !16336)
!16361 = !DILocation(line: 3428, column: 18, scope: !16336)
!16362 = !DILocation(line: 3428, column: 2, scope: !16336)
!16363 = !DILocation(line: 3429, column: 1, scope: !16336)
!16364 = distinct !DISubprogram(name: "wait_oob_link_list_ready", scope: !3, file: !3, line: 4276, type: !10380, scopeLine: 4277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16365 = !DILocalVariable(name: "tp", arg: 1, scope: !16364, file: !3, line: 4276, type: !10280)
!16366 = !DILocation(line: 4276, column: 52, scope: !16364)
!16367 = !DILocalVariable(name: "ocp_data", scope: !16364, file: !3, line: 4278, type: !784)
!16368 = !DILocation(line: 4278, column: 6, scope: !16364)
!16369 = !DILocalVariable(name: "i", scope: !16364, file: !3, line: 4279, type: !72)
!16370 = !DILocation(line: 4279, column: 6, scope: !16364)
!16371 = !DILocation(line: 4281, column: 9, scope: !16372)
!16372 = distinct !DILexicalBlock(scope: !16364, file: !3, line: 4281, column: 2)
!16373 = !DILocation(line: 4281, column: 7, scope: !16372)
!16374 = !DILocation(line: 4281, column: 14, scope: !16375)
!16375 = distinct !DILexicalBlock(scope: !16372, file: !3, line: 4281, column: 2)
!16376 = !DILocation(line: 4281, column: 16, scope: !16375)
!16377 = !DILocation(line: 4281, column: 2, scope: !16372)
!16378 = !DILocation(line: 4282, column: 28, scope: !16379)
!16379 = distinct !DILexicalBlock(scope: !16375, file: !3, line: 4281, column: 29)
!16380 = !DILocation(line: 4282, column: 14, scope: !16379)
!16381 = !DILocation(line: 4282, column: 12, scope: !16379)
!16382 = !DILocation(line: 4283, column: 7, scope: !16383)
!16383 = distinct !DILexicalBlock(scope: !16379, file: !3, line: 4283, column: 7)
!16384 = !DILocation(line: 4283, column: 16, scope: !16383)
!16385 = !DILocation(line: 4283, column: 7, scope: !16379)
!16386 = !DILocation(line: 4284, column: 4, scope: !16383)
!16387 = !DILocation(line: 4285, column: 3, scope: !16379)
!16388 = !DILocation(line: 4286, column: 2, scope: !16379)
!16389 = !DILocation(line: 4281, column: 25, scope: !16375)
!16390 = !DILocation(line: 4281, column: 2, scope: !16375)
!16391 = distinct !{!16391, !16377, !16392}
!16392 = !DILocation(line: 4286, column: 2, scope: !16372)
!16393 = !DILocation(line: 4287, column: 1, scope: !16364)
!16394 = distinct !DISubprogram(name: "rtl_rx_vlan_en", scope: !3, file: !3, line: 2934, type: !10402, scopeLine: 2935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16395 = !DILocalVariable(name: "tp", arg: 1, scope: !16394, file: !3, line: 2934, type: !10280)
!16396 = !DILocation(line: 2934, column: 42, scope: !16394)
!16397 = !DILocalVariable(name: "enable", arg: 2, scope: !16394, file: !3, line: 2934, type: !617)
!16398 = !DILocation(line: 2934, column: 51, scope: !16394)
!16399 = !DILocalVariable(name: "ocp_data", scope: !16394, file: !3, line: 2936, type: !784)
!16400 = !DILocation(line: 2936, column: 6, scope: !16394)
!16401 = !DILocation(line: 2938, column: 27, scope: !16394)
!16402 = !DILocation(line: 2938, column: 13, scope: !16394)
!16403 = !DILocation(line: 2938, column: 11, scope: !16394)
!16404 = !DILocation(line: 2939, column: 6, scope: !16405)
!16405 = distinct !DILexicalBlock(scope: !16394, file: !3, line: 2939, column: 6)
!16406 = !DILocation(line: 2939, column: 6, scope: !16394)
!16407 = !DILocation(line: 2940, column: 12, scope: !16405)
!16408 = !DILocation(line: 2940, column: 3, scope: !16405)
!16409 = !DILocation(line: 2942, column: 12, scope: !16405)
!16410 = !DILocation(line: 2943, column: 17, scope: !16394)
!16411 = !DILocation(line: 2943, column: 45, scope: !16394)
!16412 = !DILocation(line: 2943, column: 2, scope: !16394)
!16413 = !DILocation(line: 2944, column: 1, scope: !16394)
!16414 = distinct !DISubprogram(name: "r8152b_enter_oob", scope: !3, file: !3, line: 4355, type: !10380, scopeLine: 4356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16415 = !DILocalVariable(name: "tp", arg: 1, scope: !16414, file: !3, line: 4355, type: !10280)
!16416 = !DILocation(line: 4355, column: 44, scope: !16414)
!16417 = !DILocalVariable(name: "ocp_data", scope: !16414, file: !3, line: 4357, type: !784)
!16418 = !DILocation(line: 4357, column: 6, scope: !16414)
!16419 = !DILocation(line: 4359, column: 27, scope: !16414)
!16420 = !DILocation(line: 4359, column: 13, scope: !16414)
!16421 = !DILocation(line: 4359, column: 11, scope: !16414)
!16422 = !DILocation(line: 4360, column: 11, scope: !16414)
!16423 = !DILocation(line: 4361, column: 17, scope: !16414)
!16424 = !DILocation(line: 4361, column: 49, scope: !16414)
!16425 = !DILocation(line: 4361, column: 2, scope: !16414)
!16426 = !DILocation(line: 4363, column: 18, scope: !16414)
!16427 = !DILocation(line: 4363, column: 2, scope: !16414)
!16428 = !DILocation(line: 4364, column: 18, scope: !16414)
!16429 = !DILocation(line: 4364, column: 2, scope: !16414)
!16430 = !DILocation(line: 4365, column: 18, scope: !16414)
!16431 = !DILocation(line: 4365, column: 2, scope: !16414)
!16432 = !DILocation(line: 4367, column: 14, scope: !16414)
!16433 = !DILocation(line: 4367, column: 2, scope: !16414)
!16434 = !DILocation(line: 4369, column: 27, scope: !16414)
!16435 = !DILocation(line: 4369, column: 2, scope: !16414)
!16436 = !DILocation(line: 4371, column: 27, scope: !16414)
!16437 = !DILocation(line: 4371, column: 13, scope: !16414)
!16438 = !DILocation(line: 4371, column: 11, scope: !16414)
!16439 = !DILocation(line: 4372, column: 11, scope: !16414)
!16440 = !DILocation(line: 4373, column: 17, scope: !16414)
!16441 = !DILocation(line: 4373, column: 50, scope: !16414)
!16442 = !DILocation(line: 4373, column: 2, scope: !16414)
!16443 = !DILocation(line: 4375, column: 27, scope: !16414)
!16444 = !DILocation(line: 4375, column: 2, scope: !16414)
!16445 = !DILocation(line: 4377, column: 17, scope: !16414)
!16446 = !DILocation(line: 4377, column: 2, scope: !16414)
!16447 = !DILocation(line: 4379, column: 17, scope: !16414)
!16448 = !DILocation(line: 4379, column: 2, scope: !16414)
!16449 = !DILocation(line: 4381, column: 27, scope: !16414)
!16450 = !DILocation(line: 4381, column: 13, scope: !16414)
!16451 = !DILocation(line: 4381, column: 11, scope: !16414)
!16452 = !DILocation(line: 4382, column: 11, scope: !16414)
!16453 = !DILocation(line: 4383, column: 17, scope: !16414)
!16454 = !DILocation(line: 4383, column: 47, scope: !16414)
!16455 = !DILocation(line: 4383, column: 2, scope: !16414)
!16456 = !DILocation(line: 4385, column: 27, scope: !16414)
!16457 = !DILocation(line: 4385, column: 13, scope: !16414)
!16458 = !DILocation(line: 4385, column: 11, scope: !16414)
!16459 = !DILocation(line: 4386, column: 11, scope: !16414)
!16460 = !DILocation(line: 4387, column: 17, scope: !16414)
!16461 = !DILocation(line: 4387, column: 49, scope: !16414)
!16462 = !DILocation(line: 4387, column: 2, scope: !16414)
!16463 = !DILocation(line: 4389, column: 16, scope: !16414)
!16464 = !DILocation(line: 4389, column: 2, scope: !16414)
!16465 = !DILocation(line: 4391, column: 28, scope: !16414)
!16466 = !DILocation(line: 4391, column: 13, scope: !16414)
!16467 = !DILocation(line: 4391, column: 11, scope: !16414)
!16468 = !DILocation(line: 4392, column: 11, scope: !16414)
!16469 = !DILocation(line: 4393, column: 18, scope: !16414)
!16470 = !DILocation(line: 4393, column: 45, scope: !16414)
!16471 = !DILocation(line: 4393, column: 2, scope: !16414)
!16472 = !DILocation(line: 4394, column: 1, scope: !16414)
!16473 = distinct !DISubprogram(name: "r8152_mmd_read", scope: !3, file: !3, line: 4143, type: !14270, scopeLine: 4144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16474 = !DILocalVariable(name: "tp", arg: 1, scope: !16473, file: !3, line: 4143, type: !10280)
!16475 = !DILocation(line: 4143, column: 41, scope: !16473)
!16476 = !DILocalVariable(name: "dev", arg: 2, scope: !16473, file: !3, line: 4143, type: !1115)
!16477 = !DILocation(line: 4143, column: 49, scope: !16473)
!16478 = !DILocalVariable(name: "reg", arg: 3, scope: !16473, file: !3, line: 4143, type: !1115)
!16479 = !DILocation(line: 4143, column: 58, scope: !16473)
!16480 = !DILocalVariable(name: "data", scope: !16473, file: !3, line: 4145, type: !1115)
!16481 = !DILocation(line: 4145, column: 6, scope: !16473)
!16482 = !DILocation(line: 4147, column: 21, scope: !16473)
!16483 = !DILocation(line: 4147, column: 25, scope: !16473)
!16484 = !DILocation(line: 4147, column: 30, scope: !16473)
!16485 = !DILocation(line: 4147, column: 2, scope: !16473)
!16486 = !DILocation(line: 4148, column: 22, scope: !16473)
!16487 = !DILocation(line: 4148, column: 9, scope: !16473)
!16488 = !DILocation(line: 4148, column: 7, scope: !16473)
!16489 = !DILocation(line: 4149, column: 16, scope: !16473)
!16490 = !DILocation(line: 4149, column: 2, scope: !16473)
!16491 = !DILocation(line: 4151, column: 9, scope: !16473)
!16492 = !DILocation(line: 4151, column: 2, scope: !16473)
!16493 = distinct !DISubprogram(name: "mmd_eee_cap_to_ethtool_sup_t", scope: !16494, file: !16494, line: 205, type: !16495, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16494 = !DIFile(filename: "./include/linux/mdio.h", directory: "/home/lizy2001/genbc/linux")
!16495 = !DISubroutineType(types: !16496)
!16496 = !{!784, !1115}
!16497 = !DILocalVariable(name: "eee_cap", arg: 1, scope: !16493, file: !16494, line: 205, type: !1115)
!16498 = !DILocation(line: 205, column: 52, scope: !16493)
!16499 = !DILocalVariable(name: "supported", scope: !16493, file: !16494, line: 207, type: !784)
!16500 = !DILocation(line: 207, column: 6, scope: !16493)
!16501 = !DILocation(line: 209, column: 6, scope: !16502)
!16502 = distinct !DILexicalBlock(scope: !16493, file: !16494, line: 209, column: 6)
!16503 = !DILocation(line: 209, column: 14, scope: !16502)
!16504 = !DILocation(line: 209, column: 6, scope: !16493)
!16505 = !DILocation(line: 210, column: 13, scope: !16502)
!16506 = !DILocation(line: 210, column: 3, scope: !16502)
!16507 = !DILocation(line: 211, column: 6, scope: !16508)
!16508 = distinct !DILexicalBlock(scope: !16493, file: !16494, line: 211, column: 6)
!16509 = !DILocation(line: 211, column: 14, scope: !16508)
!16510 = !DILocation(line: 211, column: 6, scope: !16493)
!16511 = !DILocation(line: 212, column: 13, scope: !16508)
!16512 = !DILocation(line: 212, column: 3, scope: !16508)
!16513 = !DILocation(line: 213, column: 6, scope: !16514)
!16514 = distinct !DILexicalBlock(scope: !16493, file: !16494, line: 213, column: 6)
!16515 = !DILocation(line: 213, column: 14, scope: !16514)
!16516 = !DILocation(line: 213, column: 6, scope: !16493)
!16517 = !DILocation(line: 214, column: 13, scope: !16514)
!16518 = !DILocation(line: 214, column: 3, scope: !16514)
!16519 = !DILocation(line: 215, column: 6, scope: !16520)
!16520 = distinct !DILexicalBlock(scope: !16493, file: !16494, line: 215, column: 6)
!16521 = !DILocation(line: 215, column: 14, scope: !16520)
!16522 = !DILocation(line: 215, column: 6, scope: !16493)
!16523 = !DILocation(line: 216, column: 13, scope: !16520)
!16524 = !DILocation(line: 216, column: 3, scope: !16520)
!16525 = !DILocation(line: 217, column: 6, scope: !16526)
!16526 = distinct !DILexicalBlock(scope: !16493, file: !16494, line: 217, column: 6)
!16527 = !DILocation(line: 217, column: 14, scope: !16526)
!16528 = !DILocation(line: 217, column: 6, scope: !16493)
!16529 = !DILocation(line: 218, column: 13, scope: !16526)
!16530 = !DILocation(line: 218, column: 3, scope: !16526)
!16531 = !DILocation(line: 219, column: 6, scope: !16532)
!16532 = distinct !DILexicalBlock(scope: !16493, file: !16494, line: 219, column: 6)
!16533 = !DILocation(line: 219, column: 14, scope: !16532)
!16534 = !DILocation(line: 219, column: 6, scope: !16493)
!16535 = !DILocation(line: 220, column: 13, scope: !16532)
!16536 = !DILocation(line: 220, column: 3, scope: !16532)
!16537 = !DILocation(line: 222, column: 9, scope: !16493)
!16538 = !DILocation(line: 222, column: 2, scope: !16493)
!16539 = distinct !DISubprogram(name: "mmd_eee_adv_to_ethtool_adv_t", scope: !16494, file: !16494, line: 233, type: !16495, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16540 = !DILocalVariable(name: "eee_adv", arg: 1, scope: !16539, file: !16494, line: 233, type: !1115)
!16541 = !DILocation(line: 233, column: 52, scope: !16539)
!16542 = !DILocalVariable(name: "adv", scope: !16539, file: !16494, line: 235, type: !784)
!16543 = !DILocation(line: 235, column: 6, scope: !16539)
!16544 = !DILocation(line: 237, column: 6, scope: !16545)
!16545 = distinct !DILexicalBlock(scope: !16539, file: !16494, line: 237, column: 6)
!16546 = !DILocation(line: 237, column: 14, scope: !16545)
!16547 = !DILocation(line: 237, column: 6, scope: !16539)
!16548 = !DILocation(line: 238, column: 7, scope: !16545)
!16549 = !DILocation(line: 238, column: 3, scope: !16545)
!16550 = !DILocation(line: 239, column: 6, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16539, file: !16494, line: 239, column: 6)
!16552 = !DILocation(line: 239, column: 14, scope: !16551)
!16553 = !DILocation(line: 239, column: 6, scope: !16539)
!16554 = !DILocation(line: 240, column: 7, scope: !16551)
!16555 = !DILocation(line: 240, column: 3, scope: !16551)
!16556 = !DILocation(line: 241, column: 6, scope: !16557)
!16557 = distinct !DILexicalBlock(scope: !16539, file: !16494, line: 241, column: 6)
!16558 = !DILocation(line: 241, column: 14, scope: !16557)
!16559 = !DILocation(line: 241, column: 6, scope: !16539)
!16560 = !DILocation(line: 242, column: 7, scope: !16557)
!16561 = !DILocation(line: 242, column: 3, scope: !16557)
!16562 = !DILocation(line: 243, column: 6, scope: !16563)
!16563 = distinct !DILexicalBlock(scope: !16539, file: !16494, line: 243, column: 6)
!16564 = !DILocation(line: 243, column: 14, scope: !16563)
!16565 = !DILocation(line: 243, column: 6, scope: !16539)
!16566 = !DILocation(line: 244, column: 7, scope: !16563)
!16567 = !DILocation(line: 244, column: 3, scope: !16563)
!16568 = !DILocation(line: 245, column: 6, scope: !16569)
!16569 = distinct !DILexicalBlock(scope: !16539, file: !16494, line: 245, column: 6)
!16570 = !DILocation(line: 245, column: 14, scope: !16569)
!16571 = !DILocation(line: 245, column: 6, scope: !16539)
!16572 = !DILocation(line: 246, column: 7, scope: !16569)
!16573 = !DILocation(line: 246, column: 3, scope: !16569)
!16574 = !DILocation(line: 247, column: 6, scope: !16575)
!16575 = distinct !DILexicalBlock(scope: !16539, file: !16494, line: 247, column: 6)
!16576 = !DILocation(line: 247, column: 14, scope: !16575)
!16577 = !DILocation(line: 247, column: 6, scope: !16539)
!16578 = !DILocation(line: 248, column: 7, scope: !16575)
!16579 = !DILocation(line: 248, column: 3, scope: !16575)
!16580 = !DILocation(line: 250, column: 9, scope: !16539)
!16581 = !DILocation(line: 250, column: 2, scope: !16539)
!16582 = distinct !DISubprogram(name: "r8152_mmd_indirect", scope: !3, file: !3, line: 4136, type: !14489, scopeLine: 4137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16583 = !DILocalVariable(name: "tp", arg: 1, scope: !16582, file: !3, line: 4136, type: !10280)
!16584 = !DILocation(line: 4136, column: 53, scope: !16582)
!16585 = !DILocalVariable(name: "dev", arg: 2, scope: !16582, file: !3, line: 4136, type: !1115)
!16586 = !DILocation(line: 4136, column: 61, scope: !16582)
!16587 = !DILocalVariable(name: "reg", arg: 3, scope: !16582, file: !3, line: 4136, type: !1115)
!16588 = !DILocation(line: 4136, column: 70, scope: !16582)
!16589 = !DILocation(line: 4138, column: 16, scope: !16582)
!16590 = !DILocation(line: 4138, column: 43, scope: !16582)
!16591 = !DILocation(line: 4138, column: 41, scope: !16582)
!16592 = !DILocation(line: 4138, column: 32, scope: !16582)
!16593 = !DILocation(line: 4138, column: 2, scope: !16582)
!16594 = !DILocation(line: 4139, column: 16, scope: !16582)
!16595 = !DILocation(line: 4139, column: 34, scope: !16582)
!16596 = !DILocation(line: 4139, column: 2, scope: !16582)
!16597 = !DILocation(line: 4140, column: 16, scope: !16582)
!16598 = !DILocation(line: 4140, column: 43, scope: !16582)
!16599 = !DILocation(line: 4140, column: 41, scope: !16582)
!16600 = !DILocation(line: 4140, column: 32, scope: !16582)
!16601 = !DILocation(line: 4140, column: 2, scope: !16582)
!16602 = !DILocation(line: 4141, column: 1, scope: !16582)
!16603 = distinct !DISubprogram(name: "ethtool_adv_to_mmd_eee_adv_t", scope: !16494, file: !16494, line: 261, type: !16604, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16604 = !DISubroutineType(types: !16605)
!16605 = !{!1115, !784}
!16606 = !DILocalVariable(name: "adv", arg: 1, scope: !16603, file: !16494, line: 261, type: !784)
!16607 = !DILocation(line: 261, column: 52, scope: !16603)
!16608 = !DILocalVariable(name: "reg", scope: !16603, file: !16494, line: 263, type: !1115)
!16609 = !DILocation(line: 263, column: 6, scope: !16603)
!16610 = !DILocation(line: 265, column: 6, scope: !16611)
!16611 = distinct !DILexicalBlock(scope: !16603, file: !16494, line: 265, column: 6)
!16612 = !DILocation(line: 265, column: 10, scope: !16611)
!16613 = !DILocation(line: 265, column: 6, scope: !16603)
!16614 = !DILocation(line: 266, column: 7, scope: !16611)
!16615 = !DILocation(line: 266, column: 3, scope: !16611)
!16616 = !DILocation(line: 267, column: 6, scope: !16617)
!16617 = distinct !DILexicalBlock(scope: !16603, file: !16494, line: 267, column: 6)
!16618 = !DILocation(line: 267, column: 10, scope: !16617)
!16619 = !DILocation(line: 267, column: 6, scope: !16603)
!16620 = !DILocation(line: 268, column: 7, scope: !16617)
!16621 = !DILocation(line: 268, column: 3, scope: !16617)
!16622 = !DILocation(line: 269, column: 6, scope: !16623)
!16623 = distinct !DILexicalBlock(scope: !16603, file: !16494, line: 269, column: 6)
!16624 = !DILocation(line: 269, column: 10, scope: !16623)
!16625 = !DILocation(line: 269, column: 6, scope: !16603)
!16626 = !DILocation(line: 270, column: 7, scope: !16623)
!16627 = !DILocation(line: 270, column: 3, scope: !16623)
!16628 = !DILocation(line: 271, column: 6, scope: !16629)
!16629 = distinct !DILexicalBlock(scope: !16603, file: !16494, line: 271, column: 6)
!16630 = !DILocation(line: 271, column: 10, scope: !16629)
!16631 = !DILocation(line: 271, column: 6, scope: !16603)
!16632 = !DILocation(line: 272, column: 7, scope: !16629)
!16633 = !DILocation(line: 272, column: 3, scope: !16629)
!16634 = !DILocation(line: 273, column: 6, scope: !16635)
!16635 = distinct !DILexicalBlock(scope: !16603, file: !16494, line: 273, column: 6)
!16636 = !DILocation(line: 273, column: 10, scope: !16635)
!16637 = !DILocation(line: 273, column: 6, scope: !16603)
!16638 = !DILocation(line: 274, column: 7, scope: !16635)
!16639 = !DILocation(line: 274, column: 3, scope: !16635)
!16640 = !DILocation(line: 275, column: 6, scope: !16641)
!16641 = distinct !DILexicalBlock(scope: !16603, file: !16494, line: 275, column: 6)
!16642 = !DILocation(line: 275, column: 10, scope: !16641)
!16643 = !DILocation(line: 275, column: 6, scope: !16603)
!16644 = !DILocation(line: 276, column: 7, scope: !16641)
!16645 = !DILocation(line: 276, column: 3, scope: !16641)
!16646 = !DILocation(line: 278, column: 9, scope: !16603)
!16647 = !DILocation(line: 278, column: 2, scope: !16603)
!16648 = distinct !DISubprogram(name: "rtl_eee_enable", scope: !3, file: !3, line: 4214, type: !10402, scopeLine: 4215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16649 = !DILocalVariable(name: "tp", arg: 1, scope: !16648, file: !3, line: 4214, type: !10280)
!16650 = !DILocation(line: 4214, column: 42, scope: !16648)
!16651 = !DILocalVariable(name: "enable", arg: 2, scope: !16648, file: !3, line: 4214, type: !617)
!16652 = !DILocation(line: 4214, column: 51, scope: !16648)
!16653 = !DILocation(line: 4216, column: 10, scope: !16648)
!16654 = !DILocation(line: 4216, column: 14, scope: !16648)
!16655 = !DILocation(line: 4216, column: 2, scope: !16648)
!16656 = !DILocation(line: 4220, column: 7, scope: !16657)
!16657 = distinct !DILexicalBlock(scope: !16658, file: !3, line: 4220, column: 7)
!16658 = distinct !DILexicalBlock(scope: !16648, file: !3, line: 4216, column: 23)
!16659 = !DILocation(line: 4220, column: 7, scope: !16658)
!16660 = !DILocation(line: 4221, column: 17, scope: !16661)
!16661 = distinct !DILexicalBlock(scope: !16657, file: !3, line: 4220, column: 15)
!16662 = !DILocation(line: 4221, column: 4, scope: !16661)
!16663 = !DILocation(line: 4222, column: 20, scope: !16661)
!16664 = !DILocation(line: 4223, column: 6, scope: !16661)
!16665 = !DILocation(line: 4223, column: 10, scope: !16661)
!16666 = !DILocation(line: 4222, column: 4, scope: !16661)
!16667 = !DILocation(line: 4224, column: 3, scope: !16661)
!16668 = !DILocation(line: 4225, column: 17, scope: !16669)
!16669 = distinct !DILexicalBlock(scope: !16657, file: !3, line: 4224, column: 10)
!16670 = !DILocation(line: 4225, column: 4, scope: !16669)
!16671 = !DILocation(line: 4226, column: 20, scope: !16669)
!16672 = !DILocation(line: 4226, column: 4, scope: !16669)
!16673 = !DILocation(line: 4228, column: 3, scope: !16658)
!16674 = !DILocation(line: 4235, column: 7, scope: !16675)
!16675 = distinct !DILexicalBlock(scope: !16658, file: !3, line: 4235, column: 7)
!16676 = !DILocation(line: 4235, column: 7, scope: !16658)
!16677 = !DILocation(line: 4236, column: 17, scope: !16678)
!16678 = distinct !DILexicalBlock(scope: !16675, file: !3, line: 4235, column: 15)
!16679 = !DILocation(line: 4236, column: 4, scope: !16678)
!16680 = !DILocation(line: 4237, column: 18, scope: !16678)
!16681 = !DILocation(line: 4237, column: 35, scope: !16678)
!16682 = !DILocation(line: 4237, column: 39, scope: !16678)
!16683 = !DILocation(line: 4237, column: 4, scope: !16678)
!16684 = !DILocation(line: 4238, column: 3, scope: !16678)
!16685 = !DILocation(line: 4239, column: 17, scope: !16686)
!16686 = distinct !DILexicalBlock(scope: !16675, file: !3, line: 4238, column: 10)
!16687 = !DILocation(line: 4239, column: 4, scope: !16686)
!16688 = !DILocation(line: 4240, column: 18, scope: !16686)
!16689 = !DILocation(line: 4240, column: 4, scope: !16686)
!16690 = !DILocation(line: 4242, column: 3, scope: !16658)
!16691 = !DILocation(line: 4244, column: 3, scope: !16658)
!16692 = !DILocation(line: 4246, column: 1, scope: !16648)
!16693 = distinct !DISubprogram(name: "r8152_eee_en", scope: !3, file: !3, line: 4161, type: !10402, scopeLine: 4162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16694 = !DILocalVariable(name: "tp", arg: 1, scope: !16693, file: !3, line: 4161, type: !10280)
!16695 = !DILocation(line: 4161, column: 40, scope: !16693)
!16696 = !DILocalVariable(name: "enable", arg: 2, scope: !16693, file: !3, line: 4161, type: !617)
!16697 = !DILocation(line: 4161, column: 49, scope: !16693)
!16698 = !DILocalVariable(name: "config1", scope: !16693, file: !3, line: 4163, type: !1115)
!16699 = !DILocation(line: 4163, column: 6, scope: !16693)
!16700 = !DILocalVariable(name: "config2", scope: !16693, file: !3, line: 4163, type: !1115)
!16701 = !DILocation(line: 4163, column: 15, scope: !16693)
!16702 = !DILocalVariable(name: "config3", scope: !16693, file: !3, line: 4163, type: !1115)
!16703 = !DILocation(line: 4163, column: 24, scope: !16693)
!16704 = !DILocalVariable(name: "ocp_data", scope: !16693, file: !3, line: 4164, type: !784)
!16705 = !DILocation(line: 4164, column: 6, scope: !16693)
!16706 = !DILocation(line: 4166, column: 27, scope: !16693)
!16707 = !DILocation(line: 4166, column: 13, scope: !16693)
!16708 = !DILocation(line: 4166, column: 11, scope: !16693)
!16709 = !DILocation(line: 4167, column: 25, scope: !16693)
!16710 = !DILocation(line: 4167, column: 12, scope: !16693)
!16711 = !DILocation(line: 4167, column: 46, scope: !16693)
!16712 = !DILocation(line: 4167, column: 10, scope: !16693)
!16713 = !DILocation(line: 4168, column: 25, scope: !16693)
!16714 = !DILocation(line: 4168, column: 12, scope: !16693)
!16715 = !DILocation(line: 4168, column: 10, scope: !16693)
!16716 = !DILocation(line: 4169, column: 25, scope: !16693)
!16717 = !DILocation(line: 4169, column: 12, scope: !16693)
!16718 = !DILocation(line: 4169, column: 46, scope: !16693)
!16719 = !DILocation(line: 4169, column: 10, scope: !16693)
!16720 = !DILocation(line: 4171, column: 6, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16693, file: !3, line: 4171, column: 6)
!16722 = !DILocation(line: 4171, column: 6, scope: !16693)
!16723 = !DILocation(line: 4172, column: 12, scope: !16724)
!16724 = distinct !DILexicalBlock(scope: !16721, file: !3, line: 4171, column: 14)
!16725 = !DILocation(line: 4173, column: 11, scope: !16724)
!16726 = !DILocation(line: 4174, column: 11, scope: !16724)
!16727 = !DILocation(line: 4175, column: 11, scope: !16724)
!16728 = !DILocation(line: 4176, column: 11, scope: !16724)
!16729 = !DILocation(line: 4177, column: 2, scope: !16724)
!16730 = !DILocation(line: 4178, column: 12, scope: !16731)
!16731 = distinct !DILexicalBlock(scope: !16721, file: !3, line: 4177, column: 9)
!16732 = !DILocation(line: 4179, column: 11, scope: !16731)
!16733 = !DILocation(line: 4181, column: 11, scope: !16731)
!16734 = !DILocation(line: 4182, column: 11, scope: !16731)
!16735 = !DILocation(line: 4183, column: 11, scope: !16731)
!16736 = !DILocation(line: 4186, column: 17, scope: !16693)
!16737 = !DILocation(line: 4186, column: 47, scope: !16693)
!16738 = !DILocation(line: 4186, column: 2, scope: !16693)
!16739 = !DILocation(line: 4187, column: 16, scope: !16693)
!16740 = !DILocation(line: 4187, column: 37, scope: !16693)
!16741 = !DILocation(line: 4187, column: 2, scope: !16693)
!16742 = !DILocation(line: 4188, column: 16, scope: !16693)
!16743 = !DILocation(line: 4188, column: 37, scope: !16693)
!16744 = !DILocation(line: 4188, column: 2, scope: !16693)
!16745 = !DILocation(line: 4189, column: 16, scope: !16693)
!16746 = !DILocation(line: 4189, column: 37, scope: !16693)
!16747 = !DILocation(line: 4189, column: 2, scope: !16693)
!16748 = !DILocation(line: 4190, column: 1, scope: !16693)
!16749 = distinct !DISubprogram(name: "r8152_mmd_write", scope: !3, file: !3, line: 4154, type: !16750, scopeLine: 4155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16750 = !DISubroutineType(types: !16751)
!16751 = !{null, !10280, !1115, !1115, !1115}
!16752 = !DILocalVariable(name: "tp", arg: 1, scope: !16749, file: !3, line: 4154, type: !10280)
!16753 = !DILocation(line: 4154, column: 43, scope: !16749)
!16754 = !DILocalVariable(name: "dev", arg: 2, scope: !16749, file: !3, line: 4154, type: !1115)
!16755 = !DILocation(line: 4154, column: 51, scope: !16749)
!16756 = !DILocalVariable(name: "reg", arg: 3, scope: !16749, file: !3, line: 4154, type: !1115)
!16757 = !DILocation(line: 4154, column: 60, scope: !16749)
!16758 = !DILocalVariable(name: "data", arg: 4, scope: !16749, file: !3, line: 4154, type: !1115)
!16759 = !DILocation(line: 4154, column: 69, scope: !16749)
!16760 = !DILocation(line: 4156, column: 21, scope: !16749)
!16761 = !DILocation(line: 4156, column: 25, scope: !16749)
!16762 = !DILocation(line: 4156, column: 30, scope: !16749)
!16763 = !DILocation(line: 4156, column: 2, scope: !16749)
!16764 = !DILocation(line: 4157, column: 16, scope: !16749)
!16765 = !DILocation(line: 4157, column: 34, scope: !16749)
!16766 = !DILocation(line: 4157, column: 2, scope: !16749)
!16767 = !DILocation(line: 4158, column: 16, scope: !16749)
!16768 = !DILocation(line: 4158, column: 2, scope: !16749)
!16769 = !DILocation(line: 4159, column: 1, scope: !16749)
!16770 = distinct !DISubprogram(name: "r8153_eee_en", scope: !3, file: !3, line: 4192, type: !10402, scopeLine: 4193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16771 = !DILocalVariable(name: "tp", arg: 1, scope: !16770, file: !3, line: 4192, type: !10280)
!16772 = !DILocation(line: 4192, column: 40, scope: !16770)
!16773 = !DILocalVariable(name: "enable", arg: 2, scope: !16770, file: !3, line: 4192, type: !617)
!16774 = !DILocation(line: 4192, column: 49, scope: !16770)
!16775 = !DILocalVariable(name: "ocp_data", scope: !16770, file: !3, line: 4194, type: !784)
!16776 = !DILocation(line: 4194, column: 6, scope: !16770)
!16777 = !DILocalVariable(name: "config", scope: !16770, file: !3, line: 4195, type: !1115)
!16778 = !DILocation(line: 4195, column: 6, scope: !16770)
!16779 = !DILocation(line: 4197, column: 27, scope: !16770)
!16780 = !DILocation(line: 4197, column: 13, scope: !16770)
!16781 = !DILocation(line: 4197, column: 11, scope: !16770)
!16782 = !DILocation(line: 4198, column: 24, scope: !16770)
!16783 = !DILocation(line: 4198, column: 11, scope: !16770)
!16784 = !DILocation(line: 4198, column: 9, scope: !16770)
!16785 = !DILocation(line: 4200, column: 6, scope: !16786)
!16786 = distinct !DILexicalBlock(scope: !16770, file: !3, line: 4200, column: 6)
!16787 = !DILocation(line: 4200, column: 6, scope: !16770)
!16788 = !DILocation(line: 4201, column: 12, scope: !16789)
!16789 = distinct !DILexicalBlock(scope: !16786, file: !3, line: 4200, column: 14)
!16790 = !DILocation(line: 4202, column: 10, scope: !16789)
!16791 = !DILocation(line: 4203, column: 2, scope: !16789)
!16792 = !DILocation(line: 4204, column: 12, scope: !16793)
!16793 = distinct !DILexicalBlock(scope: !16786, file: !3, line: 4203, column: 9)
!16794 = !DILocation(line: 4205, column: 10, scope: !16793)
!16795 = !DILocation(line: 4208, column: 17, scope: !16770)
!16796 = !DILocation(line: 4208, column: 47, scope: !16770)
!16797 = !DILocation(line: 4208, column: 2, scope: !16770)
!16798 = !DILocation(line: 4209, column: 16, scope: !16770)
!16799 = !DILocation(line: 4209, column: 33, scope: !16770)
!16800 = !DILocation(line: 4209, column: 2, scope: !16770)
!16801 = !DILocation(line: 4211, column: 21, scope: !16770)
!16802 = !DILocation(line: 4211, column: 2, scope: !16770)
!16803 = !DILocation(line: 4211, column: 6, scope: !16770)
!16804 = !DILocation(line: 4211, column: 15, scope: !16770)
!16805 = !DILocation(line: 4211, column: 19, scope: !16770)
!16806 = !DILocation(line: 4212, column: 1, scope: !16770)
!16807 = distinct !DISubprogram(name: "rtl8152_apply_firmware", scope: !3, file: !3, line: 4027, type: !10380, scopeLine: 4028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16808 = !DILocalVariable(name: "tp", arg: 1, scope: !16807, file: !3, line: 4027, type: !10280)
!16809 = !DILocation(line: 4027, column: 50, scope: !16807)
!16810 = !DILocalVariable(name: "rtl_fw", scope: !16807, file: !3, line: 4029, type: !12086)
!16811 = !DILocation(line: 4029, column: 17, scope: !16807)
!16812 = !DILocation(line: 4029, column: 27, scope: !16807)
!16813 = !DILocation(line: 4029, column: 31, scope: !16807)
!16814 = !DILocalVariable(name: "fw", scope: !16807, file: !3, line: 4030, type: !10426)
!16815 = !DILocation(line: 4030, column: 25, scope: !16807)
!16816 = !DILocalVariable(name: "fw_hdr", scope: !16807, file: !3, line: 4031, type: !10468)
!16817 = !DILocation(line: 4031, column: 20, scope: !16807)
!16818 = !DILocalVariable(name: "key", scope: !16807, file: !3, line: 4032, type: !10499)
!16819 = !DILocation(line: 4032, column: 27, scope: !16807)
!16820 = !DILocalVariable(name: "key_addr", scope: !16807, file: !3, line: 4033, type: !1115)
!16821 = !DILocation(line: 4033, column: 6, scope: !16807)
!16822 = !DILocalVariable(name: "i", scope: !16807, file: !3, line: 4034, type: !72)
!16823 = !DILocation(line: 4034, column: 6, scope: !16807)
!16824 = !DILocation(line: 4036, column: 21, scope: !16825)
!16825 = distinct !DILexicalBlock(scope: !16807, file: !3, line: 4036, column: 6)
!16826 = !DILocation(line: 4036, column: 29, scope: !16825)
!16827 = !DILocation(line: 4036, column: 6, scope: !16825)
!16828 = !DILocation(line: 4036, column: 6, scope: !16807)
!16829 = !DILocation(line: 4037, column: 3, scope: !16825)
!16830 = !DILocation(line: 4039, column: 7, scope: !16807)
!16831 = !DILocation(line: 4039, column: 15, scope: !16807)
!16832 = !DILocation(line: 4039, column: 5, scope: !16807)
!16833 = !DILocation(line: 4040, column: 31, scope: !16807)
!16834 = !DILocation(line: 4040, column: 35, scope: !16807)
!16835 = !DILocation(line: 4040, column: 11, scope: !16807)
!16836 = !DILocation(line: 4040, column: 9, scope: !16807)
!16837 = !DILocation(line: 4042, column: 6, scope: !16838)
!16838 = distinct !DILexicalBlock(scope: !16807, file: !3, line: 4042, column: 6)
!16839 = !DILocation(line: 4042, column: 14, scope: !16838)
!16840 = !DILocation(line: 4042, column: 6, scope: !16807)
!16841 = !DILocation(line: 4043, column: 3, scope: !16838)
!16842 = !DILocation(line: 4043, column: 11, scope: !16838)
!16843 = !DILocation(line: 4043, column: 18, scope: !16838)
!16844 = !DILocation(line: 4045, column: 9, scope: !16845)
!16845 = distinct !DILexicalBlock(scope: !16807, file: !3, line: 4045, column: 2)
!16846 = !DILocation(line: 4045, column: 7, scope: !16845)
!16847 = !DILocation(line: 4045, column: 47, scope: !16848)
!16848 = distinct !DILexicalBlock(scope: !16845, file: !3, line: 4045, column: 2)
!16849 = !DILocation(line: 4045, column: 51, scope: !16848)
!16850 = !DILocation(line: 4045, column: 55, scope: !16848)
!16851 = !DILocation(line: 4045, column: 49, scope: !16848)
!16852 = !DILocation(line: 4045, column: 2, scope: !16845)
!16853 = !DILocalVariable(name: "block", scope: !16854, file: !3, line: 4046, type: !10480)
!16854 = distinct !DILexicalBlock(scope: !16848, file: !3, line: 4045, column: 62)
!16855 = !DILocation(line: 4046, column: 20, scope: !16854)
!16856 = !DILocation(line: 4046, column: 48, scope: !16854)
!16857 = !DILocation(line: 4046, column: 52, scope: !16854)
!16858 = !DILocation(line: 4046, column: 57, scope: !16854)
!16859 = !DILocation(line: 4046, column: 28, scope: !16854)
!16860 = !DILocation(line: 4048, column: 11, scope: !16854)
!16861 = !DILocation(line: 4048, column: 3, scope: !16854)
!16862 = !DILocation(line: 4050, column: 4, scope: !16863)
!16863 = distinct !DILexicalBlock(scope: !16854, file: !3, line: 4048, column: 39)
!16864 = !DILocation(line: 4053, column: 25, scope: !16863)
!16865 = !DILocation(line: 4053, column: 46, scope: !16863)
!16866 = !DILocation(line: 4053, column: 29, scope: !16863)
!16867 = !DILocation(line: 4053, column: 4, scope: !16863)
!16868 = !DILocation(line: 4054, column: 4, scope: !16863)
!16869 = !DILocation(line: 4056, column: 37, scope: !16863)
!16870 = !DILocation(line: 4056, column: 10, scope: !16863)
!16871 = !DILocation(line: 4056, column: 8, scope: !16863)
!16872 = !DILocation(line: 4057, column: 15, scope: !16863)
!16873 = !DILocation(line: 4057, column: 13, scope: !16863)
!16874 = !DILocation(line: 4058, column: 23, scope: !16863)
!16875 = !DILocation(line: 4058, column: 27, scope: !16863)
!16876 = !DILocation(line: 4059, column: 9, scope: !16863)
!16877 = !DILocation(line: 4058, column: 4, scope: !16863)
!16878 = !DILocation(line: 4060, column: 4, scope: !16863)
!16879 = !DILocalVariable(name: "__ret_warn_on", scope: !16880, file: !3, line: 4062, type: !72)
!16880 = distinct !DILexicalBlock(scope: !16863, file: !3, line: 4062, column: 4)
!16881 = !DILocation(line: 4062, column: 4, scope: !16880)
!16882 = !DILocation(line: 4062, column: 4, scope: !16883)
!16883 = distinct !DILexicalBlock(scope: !16880, file: !3, line: 4062, column: 4)
!16884 = !DILocation(line: 4062, column: 4, scope: !16885)
!16885 = distinct !DILexicalBlock(scope: !16883, file: !3, line: 4062, column: 4)
!16886 = !DILocation(line: 4062, column: 4, scope: !16887)
!16887 = distinct !DILexicalBlock(scope: !16885, file: !3, line: 4062, column: 4)
!16888 = !DILocation(line: 4062, column: 4, scope: !16889)
!16889 = distinct !DILexicalBlock(scope: !16885, file: !3, line: 4062, column: 4)
!16890 = !{i32 -2137010539, i32 -2137010510, i32 -2137010464, i32 -2137010406, i32 -2137010352, i32 -2137010298, i32 -2137010243, i32 -2137010212}
!16891 = !DILocation(line: 4062, column: 4, scope: !16892)
!16892 = distinct !DILexicalBlock(scope: !16885, file: !3, line: 4062, column: 4)
!16893 = !{i32 -2137009806, i32 -2137009799, i32 -2137009747, i32 -2137009716, i32 -2137009686}
!16894 = !DILocation(line: 4062, column: 4, scope: !16895)
!16895 = distinct !DILexicalBlock(scope: !16885, file: !3, line: 4062, column: 4)
!16896 = !DILocation(line: 4063, column: 24, scope: !16863)
!16897 = !DILocation(line: 4063, column: 28, scope: !16863)
!16898 = !DILocation(line: 4063, column: 4, scope: !16863)
!16899 = !DILocation(line: 4064, column: 4, scope: !16863)
!16900 = !DILocation(line: 4066, column: 28, scope: !16863)
!16901 = !DILocation(line: 4066, column: 52, scope: !16863)
!16902 = !DILocation(line: 4066, column: 32, scope: !16863)
!16903 = !DILocation(line: 4066, column: 4, scope: !16863)
!16904 = !DILocation(line: 4067, column: 4, scope: !16863)
!16905 = !DILocation(line: 4069, column: 4, scope: !16863)
!16906 = !DILocation(line: 4072, column: 8, scope: !16854)
!16907 = !DILocation(line: 4072, column: 5, scope: !16854)
!16908 = !DILocation(line: 4045, column: 2, scope: !16848)
!16909 = distinct !{!16909, !16852, !16910}
!16910 = !DILocation(line: 4073, column: 2, scope: !16845)
!16911 = !DILabel(scope: !16807, name: "post_fw", file: !3, line: 4075)
!16912 = !DILocation(line: 4075, column: 1, scope: !16807)
!16913 = !DILocation(line: 4076, column: 6, scope: !16914)
!16914 = distinct !DILexicalBlock(scope: !16807, file: !3, line: 4076, column: 6)
!16915 = !DILocation(line: 4076, column: 14, scope: !16914)
!16916 = !DILocation(line: 4076, column: 6, scope: !16807)
!16917 = !DILocation(line: 4077, column: 3, scope: !16914)
!16918 = !DILocation(line: 4077, column: 11, scope: !16914)
!16919 = !DILocation(line: 4077, column: 19, scope: !16914)
!16920 = !DILocation(line: 4079, column: 10, scope: !16807)
!16921 = !DILocation(line: 4079, column: 18, scope: !16807)
!16922 = !DILocation(line: 4079, column: 27, scope: !16807)
!16923 = !DILocation(line: 4079, column: 35, scope: !16807)
!16924 = !DILocation(line: 4079, column: 2, scope: !16807)
!16925 = !DILocation(line: 4080, column: 2, scope: !16807)
!16926 = !DILocation(line: 4081, column: 1, scope: !16807)
!16927 = distinct !DISubprogram(name: "r8152b_enable_fc", scope: !3, file: !3, line: 4248, type: !10380, scopeLine: 4249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16928 = !DILocalVariable(name: "tp", arg: 1, scope: !16927, file: !3, line: 4248, type: !10280)
!16929 = !DILocation(line: 4248, column: 44, scope: !16927)
!16930 = !DILocalVariable(name: "anar", scope: !16927, file: !3, line: 4250, type: !1115)
!16931 = !DILocation(line: 4250, column: 6, scope: !16927)
!16932 = !DILocation(line: 4252, column: 25, scope: !16927)
!16933 = !DILocation(line: 4252, column: 9, scope: !16927)
!16934 = !DILocation(line: 4252, column: 7, scope: !16927)
!16935 = !DILocation(line: 4253, column: 7, scope: !16927)
!16936 = !DILocation(line: 4254, column: 19, scope: !16927)
!16937 = !DILocation(line: 4254, column: 38, scope: !16927)
!16938 = !DILocation(line: 4254, column: 2, scope: !16927)
!16939 = !DILocation(line: 4256, column: 2, scope: !16927)
!16940 = !DILocation(line: 4256, column: 6, scope: !16927)
!16941 = !DILocation(line: 4256, column: 15, scope: !16927)
!16942 = !DILocation(line: 4256, column: 28, scope: !16927)
!16943 = !DILocation(line: 4257, column: 1, scope: !16927)
!16944 = distinct !DISubprogram(name: "IS_ERR_OR_NULL", scope: !16945, file: !16945, line: 39, type: !16946, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16945 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!16946 = !DISubroutineType(types: !16947)
!16947 = !{!617, !2340}
!16948 = !DILocalVariable(name: "ptr", arg: 1, scope: !16944, file: !16945, line: 39, type: !2340)
!16949 = !DILocation(line: 39, column: 68, scope: !16944)
!16950 = !DILocation(line: 41, column: 9, scope: !16944)
!16951 = !DILocation(line: 41, column: 24, scope: !16944)
!16952 = !DILocation(line: 41, column: 27, scope: !16944)
!16953 = !DILocation(line: 41, column: 2, scope: !16944)
!16954 = distinct !DISubprogram(name: "rtl8152_fw_mac_apply", scope: !3, file: !3, line: 3966, type: !16955, scopeLine: 3967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!16955 = !DISubroutineType(types: !16956)
!16956 = !{null, !10280, !10481}
!16957 = !DILocalVariable(name: "tp", arg: 1, scope: !16954, file: !3, line: 3966, type: !10280)
!16958 = !DILocation(line: 3966, column: 48, scope: !16954)
!16959 = !DILocalVariable(name: "mac", arg: 2, scope: !16954, file: !3, line: 3966, type: !10481)
!16960 = !DILocation(line: 3966, column: 67, scope: !16954)
!16961 = !DILocalVariable(name: "bp_en_addr", scope: !16954, file: !3, line: 3968, type: !1115)
!16962 = !DILocation(line: 3968, column: 6, scope: !16954)
!16963 = !DILocalVariable(name: "bp_index", scope: !16954, file: !3, line: 3968, type: !1115)
!16964 = !DILocation(line: 3968, column: 18, scope: !16954)
!16965 = !DILocalVariable(name: "type", scope: !16954, file: !3, line: 3968, type: !1115)
!16966 = !DILocation(line: 3968, column: 28, scope: !16954)
!16967 = !DILocalVariable(name: "bp_num", scope: !16954, file: !3, line: 3968, type: !1115)
!16968 = !DILocation(line: 3968, column: 34, scope: !16954)
!16969 = !DILocalVariable(name: "fw_ver_reg", scope: !16954, file: !3, line: 3968, type: !1115)
!16970 = !DILocation(line: 3968, column: 42, scope: !16954)
!16971 = !DILocalVariable(name: "length", scope: !16954, file: !3, line: 3969, type: !784)
!16972 = !DILocation(line: 3969, column: 6, scope: !16954)
!16973 = !DILocalVariable(name: "data", scope: !16954, file: !3, line: 3970, type: !7823)
!16974 = !DILocation(line: 3970, column: 6, scope: !16954)
!16975 = !DILocalVariable(name: "i", scope: !16954, file: !3, line: 3971, type: !72)
!16976 = !DILocation(line: 3971, column: 6, scope: !16954)
!16977 = !DILocation(line: 3973, column: 10, scope: !16954)
!16978 = !DILocation(line: 3973, column: 2, scope: !16954)
!16979 = !DILocation(line: 3975, column: 8, scope: !16980)
!16980 = distinct !DILexicalBlock(scope: !16954, file: !3, line: 3973, column: 44)
!16981 = !DILocation(line: 3976, column: 3, scope: !16980)
!16982 = !DILocation(line: 3978, column: 8, scope: !16980)
!16983 = !DILocation(line: 3979, column: 3, scope: !16980)
!16984 = !DILocation(line: 3981, column: 3, scope: !16980)
!16985 = !DILocation(line: 3984, column: 15, scope: !16954)
!16986 = !DILocation(line: 3984, column: 19, scope: !16954)
!16987 = !DILocation(line: 3984, column: 2, scope: !16954)
!16988 = !DILocation(line: 3989, column: 6, scope: !16989)
!16989 = distinct !DILexicalBlock(scope: !16954, file: !3, line: 3989, column: 6)
!16990 = !DILocation(line: 3989, column: 10, scope: !16989)
!16991 = !DILocation(line: 3989, column: 18, scope: !16989)
!16992 = !DILocation(line: 3989, column: 32, scope: !16989)
!16993 = !DILocation(line: 3989, column: 35, scope: !16989)
!16994 = !DILocation(line: 3989, column: 40, scope: !16989)
!16995 = !DILocation(line: 3989, column: 56, scope: !16989)
!16996 = !DILocation(line: 3990, column: 22, scope: !16989)
!16997 = !DILocation(line: 3990, column: 8, scope: !16989)
!16998 = !DILocation(line: 3990, column: 57, scope: !16989)
!16999 = !DILocation(line: 3989, column: 6, scope: !16954)
!17000 = !DILocation(line: 3991, column: 18, scope: !17001)
!17001 = distinct !DILexicalBlock(scope: !16989, file: !3, line: 3990, column: 70)
!17002 = !DILocation(line: 3991, column: 3, scope: !17001)
!17003 = !DILocation(line: 3992, column: 18, scope: !17001)
!17004 = !DILocation(line: 3992, column: 3, scope: !17001)
!17005 = !DILocation(line: 3993, column: 2, scope: !17001)
!17006 = !DILocation(line: 3995, column: 11, scope: !16954)
!17007 = !DILocation(line: 3995, column: 9, scope: !16954)
!17008 = !DILocation(line: 3996, column: 12, scope: !16954)
!17009 = !DILocation(line: 3996, column: 9, scope: !16954)
!17010 = !DILocation(line: 3998, column: 15, scope: !16954)
!17011 = !DILocation(line: 3998, column: 9, scope: !16954)
!17012 = !DILocation(line: 3998, column: 7, scope: !16954)
!17013 = !DILocation(line: 3999, column: 10, scope: !16954)
!17014 = !DILocation(line: 3999, column: 7, scope: !16954)
!17015 = !DILocation(line: 4001, column: 20, scope: !16954)
!17016 = !DILocation(line: 4001, column: 24, scope: !16954)
!17017 = !DILocation(line: 4001, column: 58, scope: !16954)
!17018 = !DILocation(line: 4001, column: 66, scope: !16954)
!17019 = !DILocation(line: 4002, column: 6, scope: !16954)
!17020 = !DILocation(line: 4001, column: 2, scope: !16954)
!17021 = !DILocation(line: 4004, column: 17, scope: !16954)
!17022 = !DILocation(line: 4004, column: 21, scope: !16954)
!17023 = !DILocation(line: 4004, column: 27, scope: !16954)
!17024 = !DILocation(line: 4005, column: 10, scope: !16954)
!17025 = !DILocation(line: 4004, column: 2, scope: !16954)
!17026 = !DILocation(line: 4007, column: 13, scope: !16954)
!17027 = !DILocation(line: 4007, column: 11, scope: !16954)
!17028 = !DILocation(line: 4008, column: 11, scope: !16954)
!17029 = !DILocation(line: 4008, column: 9, scope: !16954)
!17030 = !DILocation(line: 4009, column: 9, scope: !17031)
!17031 = distinct !DILexicalBlock(scope: !16954, file: !3, line: 4009, column: 2)
!17032 = !DILocation(line: 4009, column: 7, scope: !17031)
!17033 = !DILocation(line: 4009, column: 14, scope: !17034)
!17034 = distinct !DILexicalBlock(scope: !17031, file: !3, line: 4009, column: 2)
!17035 = !DILocation(line: 4009, column: 18, scope: !17034)
!17036 = !DILocation(line: 4009, column: 16, scope: !17034)
!17037 = !DILocation(line: 4009, column: 2, scope: !17031)
!17038 = !DILocation(line: 4010, column: 18, scope: !17039)
!17039 = distinct !DILexicalBlock(scope: !17034, file: !3, line: 4009, column: 31)
!17040 = !DILocation(line: 4010, column: 22, scope: !17039)
!17041 = !DILocation(line: 4010, column: 28, scope: !17039)
!17042 = !DILocation(line: 4010, column: 38, scope: !17039)
!17043 = !DILocation(line: 4010, column: 3, scope: !17039)
!17044 = !DILocation(line: 4011, column: 12, scope: !17039)
!17045 = !DILocation(line: 4012, column: 2, scope: !17039)
!17046 = !DILocation(line: 4009, column: 27, scope: !17034)
!17047 = !DILocation(line: 4009, column: 2, scope: !17034)
!17048 = distinct !{!17048, !17037, !17049}
!17049 = !DILocation(line: 4012, column: 2, scope: !17031)
!17050 = !DILocation(line: 4014, column: 15, scope: !16954)
!17051 = !DILocation(line: 4014, column: 13, scope: !16954)
!17052 = !DILocation(line: 4015, column: 6, scope: !17053)
!17053 = distinct !DILexicalBlock(scope: !16954, file: !3, line: 4015, column: 6)
!17054 = !DILocation(line: 4015, column: 6, scope: !16954)
!17055 = !DILocation(line: 4016, column: 18, scope: !17053)
!17056 = !DILocation(line: 4016, column: 22, scope: !17053)
!17057 = !DILocation(line: 4016, column: 28, scope: !17053)
!17058 = !DILocation(line: 4017, column: 11, scope: !17053)
!17059 = !DILocation(line: 4016, column: 3, scope: !17053)
!17060 = !DILocation(line: 4019, column: 15, scope: !16954)
!17061 = !DILocation(line: 4019, column: 13, scope: !16954)
!17062 = !DILocation(line: 4020, column: 6, scope: !17063)
!17063 = distinct !DILexicalBlock(scope: !16954, file: !3, line: 4020, column: 6)
!17064 = !DILocation(line: 4020, column: 6, scope: !16954)
!17065 = !DILocation(line: 4021, column: 18, scope: !17063)
!17066 = !DILocation(line: 4021, column: 36, scope: !17063)
!17067 = !DILocation(line: 4022, column: 11, scope: !17063)
!17068 = !DILocation(line: 4022, column: 16, scope: !17063)
!17069 = !DILocation(line: 4021, column: 3, scope: !17063)
!17070 = !DILocation(line: 4025, column: 1, scope: !16954)
!17071 = distinct !DISubprogram(name: "r8153_pre_ram_code", scope: !3, file: !3, line: 3517, type: !17072, scopeLine: 3518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17072 = !DISubroutineType(types: !17073)
!17073 = !{!72, !10280, !1115, !1115}
!17074 = !DILocalVariable(name: "tp", arg: 1, scope: !17071, file: !3, line: 3517, type: !10280)
!17075 = !DILocation(line: 3517, column: 45, scope: !17071)
!17076 = !DILocalVariable(name: "key_addr", arg: 2, scope: !17071, file: !3, line: 3517, type: !1115)
!17077 = !DILocation(line: 3517, column: 53, scope: !17071)
!17078 = !DILocalVariable(name: "patch_key", arg: 3, scope: !17071, file: !3, line: 3517, type: !1115)
!17079 = !DILocation(line: 3517, column: 67, scope: !17071)
!17080 = !DILocation(line: 3519, column: 26, scope: !17081)
!17081 = distinct !DILexicalBlock(scope: !17071, file: !3, line: 3519, column: 6)
!17082 = !DILocation(line: 3519, column: 6, scope: !17081)
!17083 = !DILocation(line: 3519, column: 6, scope: !17071)
!17084 = !DILocation(line: 3520, column: 3, scope: !17085)
!17085 = distinct !DILexicalBlock(scope: !17081, file: !3, line: 3519, column: 37)
!17086 = !DILocation(line: 3521, column: 3, scope: !17085)
!17087 = !DILocation(line: 3524, column: 13, scope: !17071)
!17088 = !DILocation(line: 3524, column: 17, scope: !17071)
!17089 = !DILocation(line: 3524, column: 27, scope: !17071)
!17090 = !DILocation(line: 3524, column: 2, scope: !17071)
!17091 = !DILocation(line: 3525, column: 13, scope: !17071)
!17092 = !DILocation(line: 3525, column: 2, scope: !17071)
!17093 = !DILocation(line: 3527, column: 2, scope: !17071)
!17094 = !DILocation(line: 3528, column: 1, scope: !17071)
!17095 = distinct !DISubprogram(name: "r8153_post_ram_code", scope: !3, file: !3, line: 3530, type: !17096, scopeLine: 3531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17096 = !DISubroutineType(types: !17097)
!17097 = !{!72, !10280, !1115}
!17098 = !DILocalVariable(name: "tp", arg: 1, scope: !17095, file: !3, line: 3530, type: !10280)
!17099 = !DILocation(line: 3530, column: 46, scope: !17095)
!17100 = !DILocalVariable(name: "key_addr", arg: 2, scope: !17095, file: !3, line: 3530, type: !1115)
!17101 = !DILocation(line: 3530, column: 54, scope: !17095)
!17102 = !DILocalVariable(name: "data", scope: !17095, file: !3, line: 3532, type: !1115)
!17103 = !DILocation(line: 3532, column: 6, scope: !17095)
!17104 = !DILocation(line: 3534, column: 13, scope: !17095)
!17105 = !DILocation(line: 3534, column: 2, scope: !17095)
!17106 = !DILocation(line: 3536, column: 22, scope: !17095)
!17107 = !DILocation(line: 3536, column: 9, scope: !17095)
!17108 = !DILocation(line: 3536, column: 7, scope: !17095)
!17109 = !DILocation(line: 3537, column: 7, scope: !17095)
!17110 = !DILocation(line: 3538, column: 16, scope: !17095)
!17111 = !DILocation(line: 3538, column: 34, scope: !17095)
!17112 = !DILocation(line: 3538, column: 2, scope: !17095)
!17113 = !DILocation(line: 3540, column: 13, scope: !17095)
!17114 = !DILocation(line: 3540, column: 17, scope: !17095)
!17115 = !DILocation(line: 3540, column: 2, scope: !17095)
!17116 = !DILocation(line: 3542, column: 22, scope: !17095)
!17117 = !DILocation(line: 3542, column: 2, scope: !17095)
!17118 = !DILocation(line: 3544, column: 17, scope: !17095)
!17119 = !DILocation(line: 3544, column: 54, scope: !17095)
!17120 = !DILocation(line: 3544, column: 58, scope: !17095)
!17121 = !DILocation(line: 3544, column: 2, scope: !17095)
!17122 = !DILocation(line: 3546, column: 2, scope: !17095)
!17123 = distinct !DISubprogram(name: "rtl8152_fw_phy_nc_apply", scope: !3, file: !3, line: 3931, type: !17124, scopeLine: 3932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17124 = !DISubroutineType(types: !17125)
!17125 = !{null, !10280, !10506}
!17126 = !DILocalVariable(name: "tp", arg: 1, scope: !17123, file: !3, line: 3931, type: !10280)
!17127 = !DILocation(line: 3931, column: 51, scope: !17123)
!17128 = !DILocalVariable(name: "phy", arg: 2, scope: !17123, file: !3, line: 3931, type: !10506)
!17129 = !DILocation(line: 3931, column: 73, scope: !17123)
!17130 = !DILocalVariable(name: "mode_reg", scope: !17123, file: !3, line: 3933, type: !1115)
!17131 = !DILocation(line: 3933, column: 6, scope: !17123)
!17132 = !DILocalVariable(name: "bp_index", scope: !17123, file: !3, line: 3933, type: !1115)
!17133 = !DILocation(line: 3933, column: 16, scope: !17123)
!17134 = !DILocalVariable(name: "length", scope: !17123, file: !3, line: 3934, type: !784)
!17135 = !DILocation(line: 3934, column: 6, scope: !17123)
!17136 = !DILocalVariable(name: "i", scope: !17123, file: !3, line: 3934, type: !784)
!17137 = !DILocation(line: 3934, column: 14, scope: !17123)
!17138 = !DILocalVariable(name: "num", scope: !17123, file: !3, line: 3934, type: !784)
!17139 = !DILocation(line: 3934, column: 17, scope: !17123)
!17140 = !DILocalVariable(name: "data", scope: !17123, file: !3, line: 3935, type: !10525)
!17141 = !DILocation(line: 3935, column: 10, scope: !17123)
!17142 = !DILocation(line: 3937, column: 13, scope: !17123)
!17143 = !DILocation(line: 3937, column: 11, scope: !17123)
!17144 = !DILocation(line: 3938, column: 13, scope: !17123)
!17145 = !DILocation(line: 3938, column: 17, scope: !17123)
!17146 = !DILocation(line: 3938, column: 27, scope: !17123)
!17147 = !DILocation(line: 3938, column: 2, scope: !17123)
!17148 = !DILocation(line: 3939, column: 13, scope: !17123)
!17149 = !DILocation(line: 3939, column: 17, scope: !17123)
!17150 = !DILocation(line: 3940, column: 6, scope: !17123)
!17151 = !DILocation(line: 3939, column: 2, scope: !17123)
!17152 = !DILocation(line: 3942, column: 11, scope: !17123)
!17153 = !DILocation(line: 3942, column: 9, scope: !17123)
!17154 = !DILocation(line: 3943, column: 12, scope: !17123)
!17155 = !DILocation(line: 3943, column: 9, scope: !17123)
!17156 = !DILocation(line: 3944, column: 8, scope: !17123)
!17157 = !DILocation(line: 3944, column: 15, scope: !17123)
!17158 = !DILocation(line: 3944, column: 6, scope: !17123)
!17159 = !DILocation(line: 3945, column: 26, scope: !17123)
!17160 = !DILocation(line: 3945, column: 20, scope: !17123)
!17161 = !DILocation(line: 3945, column: 32, scope: !17123)
!17162 = !DILocation(line: 3945, column: 30, scope: !17123)
!17163 = !DILocation(line: 3945, column: 9, scope: !17123)
!17164 = !DILocation(line: 3945, column: 7, scope: !17123)
!17165 = !DILocation(line: 3947, column: 16, scope: !17123)
!17166 = !DILocation(line: 3947, column: 35, scope: !17123)
!17167 = !DILocation(line: 3947, column: 2, scope: !17123)
!17168 = !DILocation(line: 3948, column: 9, scope: !17169)
!17169 = distinct !DILexicalBlock(scope: !17123, file: !3, line: 3948, column: 2)
!17170 = !DILocation(line: 3948, column: 7, scope: !17169)
!17171 = !DILocation(line: 3948, column: 14, scope: !17172)
!17172 = distinct !DILexicalBlock(scope: !17169, file: !3, line: 3948, column: 2)
!17173 = !DILocation(line: 3948, column: 18, scope: !17172)
!17174 = !DILocation(line: 3948, column: 16, scope: !17172)
!17175 = !DILocation(line: 3948, column: 2, scope: !17169)
!17176 = !DILocation(line: 3949, column: 17, scope: !17172)
!17177 = !DILocation(line: 3949, column: 36, scope: !17172)
!17178 = !DILocation(line: 3949, column: 3, scope: !17172)
!17179 = !DILocation(line: 3948, column: 24, scope: !17172)
!17180 = !DILocation(line: 3948, column: 2, scope: !17172)
!17181 = distinct !{!17181, !17175, !17182}
!17182 = !DILocation(line: 3949, column: 58, scope: !17169)
!17183 = !DILocation(line: 3951, column: 13, scope: !17123)
!17184 = !DILocation(line: 3951, column: 17, scope: !17123)
!17185 = !DILocation(line: 3952, column: 6, scope: !17123)
!17186 = !DILocation(line: 3951, column: 2, scope: !17123)
!17187 = !DILocation(line: 3954, column: 13, scope: !17123)
!17188 = !DILocation(line: 3954, column: 11, scope: !17123)
!17189 = !DILocation(line: 3955, column: 8, scope: !17123)
!17190 = !DILocation(line: 3955, column: 6, scope: !17123)
!17191 = !DILocation(line: 3956, column: 9, scope: !17192)
!17192 = distinct !DILexicalBlock(scope: !17123, file: !3, line: 3956, column: 2)
!17193 = !DILocation(line: 3956, column: 7, scope: !17192)
!17194 = !DILocation(line: 3956, column: 14, scope: !17195)
!17195 = distinct !DILexicalBlock(scope: !17192, file: !3, line: 3956, column: 2)
!17196 = !DILocation(line: 3956, column: 18, scope: !17195)
!17197 = !DILocation(line: 3956, column: 16, scope: !17195)
!17198 = !DILocation(line: 3956, column: 2, scope: !17192)
!17199 = !DILocation(line: 3957, column: 14, scope: !17200)
!17200 = distinct !DILexicalBlock(scope: !17195, file: !3, line: 3956, column: 28)
!17201 = !DILocation(line: 3957, column: 18, scope: !17200)
!17202 = !DILocation(line: 3957, column: 28, scope: !17200)
!17203 = !DILocation(line: 3957, column: 3, scope: !17200)
!17204 = !DILocation(line: 3958, column: 12, scope: !17200)
!17205 = !DILocation(line: 3959, column: 2, scope: !17200)
!17206 = !DILocation(line: 3956, column: 24, scope: !17195)
!17207 = !DILocation(line: 3956, column: 2, scope: !17195)
!17208 = distinct !{!17208, !17198, !17209}
!17209 = !DILocation(line: 3959, column: 2, scope: !17192)
!17210 = !DILocation(line: 3961, column: 13, scope: !17123)
!17211 = !DILocation(line: 3961, column: 17, scope: !17123)
!17212 = !DILocation(line: 3961, column: 27, scope: !17123)
!17213 = !DILocation(line: 3961, column: 2, scope: !17123)
!17214 = !DILocation(line: 3964, column: 1, scope: !17123)
!17215 = distinct !DISubprogram(name: "rtl_clear_bp", scope: !3, file: !3, line: 3443, type: !17216, scopeLine: 3444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17216 = !DISubroutineType(types: !17217)
!17217 = !{null, !10280, !1115}
!17218 = !DILocalVariable(name: "tp", arg: 1, scope: !17215, file: !3, line: 3443, type: !10280)
!17219 = !DILocation(line: 3443, column: 40, scope: !17215)
!17220 = !DILocalVariable(name: "type", arg: 2, scope: !17215, file: !3, line: 3443, type: !1115)
!17221 = !DILocation(line: 3443, column: 48, scope: !17215)
!17222 = !DILocation(line: 3445, column: 10, scope: !17215)
!17223 = !DILocation(line: 3445, column: 14, scope: !17215)
!17224 = !DILocation(line: 3445, column: 2, scope: !17215)
!17225 = !DILocation(line: 3449, column: 3, scope: !17226)
!17226 = distinct !DILexicalBlock(scope: !17215, file: !3, line: 3445, column: 23)
!17227 = !DILocation(line: 3454, column: 18, scope: !17226)
!17228 = !DILocation(line: 3454, column: 22, scope: !17226)
!17229 = !DILocation(line: 3454, column: 3, scope: !17226)
!17230 = !DILocation(line: 3455, column: 3, scope: !17226)
!17231 = !DILocation(line: 3459, column: 7, scope: !17232)
!17232 = distinct !DILexicalBlock(scope: !17226, file: !3, line: 3459, column: 7)
!17233 = !DILocation(line: 3459, column: 12, scope: !17232)
!17234 = !DILocation(line: 3459, column: 7, scope: !17226)
!17235 = !DILocation(line: 3460, column: 19, scope: !17236)
!17236 = distinct !DILexicalBlock(scope: !17232, file: !3, line: 3459, column: 29)
!17237 = !DILocation(line: 3460, column: 4, scope: !17236)
!17238 = !DILocation(line: 3462, column: 19, scope: !17236)
!17239 = !DILocation(line: 3462, column: 4, scope: !17236)
!17240 = !DILocation(line: 3463, column: 19, scope: !17236)
!17241 = !DILocation(line: 3463, column: 4, scope: !17236)
!17242 = !DILocation(line: 3464, column: 19, scope: !17236)
!17243 = !DILocation(line: 3464, column: 4, scope: !17236)
!17244 = !DILocation(line: 3465, column: 19, scope: !17236)
!17245 = !DILocation(line: 3465, column: 4, scope: !17236)
!17246 = !DILocation(line: 3466, column: 19, scope: !17236)
!17247 = !DILocation(line: 3466, column: 4, scope: !17236)
!17248 = !DILocation(line: 3467, column: 19, scope: !17236)
!17249 = !DILocation(line: 3467, column: 4, scope: !17236)
!17250 = !DILocation(line: 3468, column: 19, scope: !17236)
!17251 = !DILocation(line: 3468, column: 4, scope: !17236)
!17252 = !DILocation(line: 3469, column: 19, scope: !17236)
!17253 = !DILocation(line: 3469, column: 4, scope: !17236)
!17254 = !DILocation(line: 3470, column: 3, scope: !17236)
!17255 = !DILocation(line: 3471, column: 19, scope: !17256)
!17256 = distinct !DILexicalBlock(scope: !17232, file: !3, line: 3470, column: 10)
!17257 = !DILocation(line: 3471, column: 4, scope: !17256)
!17258 = !DILocation(line: 3473, column: 3, scope: !17226)
!17259 = !DILocation(line: 3476, column: 17, scope: !17215)
!17260 = !DILocation(line: 3476, column: 21, scope: !17215)
!17261 = !DILocation(line: 3476, column: 2, scope: !17215)
!17262 = !DILocation(line: 3477, column: 17, scope: !17215)
!17263 = !DILocation(line: 3477, column: 21, scope: !17215)
!17264 = !DILocation(line: 3477, column: 2, scope: !17215)
!17265 = !DILocation(line: 3478, column: 17, scope: !17215)
!17266 = !DILocation(line: 3478, column: 21, scope: !17215)
!17267 = !DILocation(line: 3478, column: 2, scope: !17215)
!17268 = !DILocation(line: 3479, column: 17, scope: !17215)
!17269 = !DILocation(line: 3479, column: 21, scope: !17215)
!17270 = !DILocation(line: 3479, column: 2, scope: !17215)
!17271 = !DILocation(line: 3480, column: 17, scope: !17215)
!17272 = !DILocation(line: 3480, column: 21, scope: !17215)
!17273 = !DILocation(line: 3480, column: 2, scope: !17215)
!17274 = !DILocation(line: 3481, column: 17, scope: !17215)
!17275 = !DILocation(line: 3481, column: 21, scope: !17215)
!17276 = !DILocation(line: 3481, column: 2, scope: !17215)
!17277 = !DILocation(line: 3482, column: 17, scope: !17215)
!17278 = !DILocation(line: 3482, column: 21, scope: !17215)
!17279 = !DILocation(line: 3482, column: 2, scope: !17215)
!17280 = !DILocation(line: 3483, column: 17, scope: !17215)
!17281 = !DILocation(line: 3483, column: 21, scope: !17215)
!17282 = !DILocation(line: 3483, column: 2, scope: !17215)
!17283 = !DILocation(line: 3486, column: 2, scope: !17215)
!17284 = !DILocation(line: 3487, column: 17, scope: !17215)
!17285 = !DILocation(line: 3487, column: 21, scope: !17215)
!17286 = !DILocation(line: 3487, column: 2, scope: !17215)
!17287 = !DILocation(line: 3488, column: 1, scope: !17215)
!17288 = distinct !DISubprogram(name: "r8153_patch_request", scope: !3, file: !3, line: 3490, type: !17289, scopeLine: 3491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17289 = !DISubroutineType(types: !17290)
!17290 = !{!72, !10280, !617}
!17291 = !DILocalVariable(name: "tp", arg: 1, scope: !17288, file: !3, line: 3490, type: !10280)
!17292 = !DILocation(line: 3490, column: 46, scope: !17288)
!17293 = !DILocalVariable(name: "request", arg: 2, scope: !17288, file: !3, line: 3490, type: !617)
!17294 = !DILocation(line: 3490, column: 55, scope: !17288)
!17295 = !DILocalVariable(name: "data", scope: !17288, file: !3, line: 3492, type: !1115)
!17296 = !DILocation(line: 3492, column: 6, scope: !17288)
!17297 = !DILocalVariable(name: "i", scope: !17288, file: !3, line: 3493, type: !72)
!17298 = !DILocation(line: 3493, column: 6, scope: !17288)
!17299 = !DILocation(line: 3495, column: 22, scope: !17288)
!17300 = !DILocation(line: 3495, column: 9, scope: !17288)
!17301 = !DILocation(line: 3495, column: 7, scope: !17288)
!17302 = !DILocation(line: 3496, column: 6, scope: !17303)
!17303 = distinct !DILexicalBlock(scope: !17288, file: !3, line: 3496, column: 6)
!17304 = !DILocation(line: 3496, column: 6, scope: !17288)
!17305 = !DILocation(line: 3497, column: 8, scope: !17303)
!17306 = !DILocation(line: 3497, column: 3, scope: !17303)
!17307 = !DILocation(line: 3499, column: 8, scope: !17303)
!17308 = !DILocation(line: 3500, column: 16, scope: !17288)
!17309 = !DILocation(line: 3500, column: 39, scope: !17288)
!17310 = !DILocation(line: 3500, column: 2, scope: !17288)
!17311 = !DILocation(line: 3502, column: 9, scope: !17312)
!17312 = distinct !DILexicalBlock(scope: !17288, file: !3, line: 3502, column: 2)
!17313 = !DILocation(line: 3502, column: 7, scope: !17312)
!17314 = !DILocation(line: 3502, column: 14, scope: !17315)
!17315 = distinct !DILexicalBlock(scope: !17312, file: !3, line: 3502, column: 2)
!17316 = !DILocation(line: 3502, column: 22, scope: !17315)
!17317 = !DILocation(line: 3502, column: 25, scope: !17315)
!17318 = !DILocation(line: 3502, column: 27, scope: !17315)
!17319 = !DILocation(line: 0, scope: !17315)
!17320 = !DILocation(line: 3502, column: 2, scope: !17312)
!17321 = !DILocation(line: 3503, column: 3, scope: !17322)
!17322 = distinct !DILexicalBlock(scope: !17315, file: !3, line: 3502, column: 40)
!17323 = !DILocation(line: 3504, column: 20, scope: !17324)
!17324 = distinct !DILexicalBlock(scope: !17322, file: !3, line: 3504, column: 7)
!17325 = !DILocation(line: 3504, column: 7, scope: !17324)
!17326 = !DILocation(line: 3504, column: 44, scope: !17324)
!17327 = !DILocation(line: 3504, column: 7, scope: !17322)
!17328 = !DILocation(line: 3505, column: 4, scope: !17324)
!17329 = !DILocation(line: 3506, column: 2, scope: !17322)
!17330 = !DILocation(line: 3502, column: 36, scope: !17315)
!17331 = !DILocation(line: 3502, column: 2, scope: !17315)
!17332 = distinct !{!17332, !17320, !17333}
!17333 = !DILocation(line: 3506, column: 2, scope: !17312)
!17334 = !DILocation(line: 3508, column: 6, scope: !17335)
!17335 = distinct !DILexicalBlock(scope: !17288, file: !3, line: 3508, column: 6)
!17336 = !DILocation(line: 3508, column: 14, scope: !17335)
!17337 = !DILocation(line: 3508, column: 32, scope: !17335)
!17338 = !DILocation(line: 3508, column: 19, scope: !17335)
!17339 = !DILocation(line: 3508, column: 56, scope: !17335)
!17340 = !DILocation(line: 3508, column: 6, scope: !17288)
!17341 = !DILocation(line: 3509, column: 3, scope: !17342)
!17342 = distinct !DILexicalBlock(scope: !17335, file: !3, line: 3508, column: 72)
!17343 = !DILocation(line: 3509, column: 3, scope: !17344)
!17344 = distinct !DILexicalBlock(scope: !17345, file: !3, line: 3509, column: 3)
!17345 = distinct !DILexicalBlock(scope: !17342, file: !3, line: 3509, column: 3)
!17346 = !DILocation(line: 3509, column: 3, scope: !17345)
!17347 = !DILocation(line: 3510, column: 23, scope: !17342)
!17348 = !DILocation(line: 3510, column: 3, scope: !17342)
!17349 = !DILocation(line: 3511, column: 3, scope: !17342)
!17350 = !DILocation(line: 3513, column: 3, scope: !17351)
!17351 = distinct !DILexicalBlock(scope: !17335, file: !3, line: 3512, column: 9)
!17352 = !DILocation(line: 3515, column: 1, scope: !17288)
!17353 = distinct !DISubprogram(name: "sram_write", scope: !3, file: !3, line: 1346, type: !14489, scopeLine: 1347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17354 = !DILocalVariable(name: "tp", arg: 1, scope: !17353, file: !3, line: 1346, type: !10280)
!17355 = !DILocation(line: 1346, column: 38, scope: !17353)
!17356 = !DILocalVariable(name: "addr", arg: 2, scope: !17353, file: !3, line: 1346, type: !1115)
!17357 = !DILocation(line: 1346, column: 46, scope: !17353)
!17358 = !DILocalVariable(name: "data", arg: 3, scope: !17353, file: !3, line: 1346, type: !1115)
!17359 = !DILocation(line: 1346, column: 56, scope: !17353)
!17360 = !DILocation(line: 1348, column: 16, scope: !17353)
!17361 = !DILocation(line: 1348, column: 35, scope: !17353)
!17362 = !DILocation(line: 1348, column: 2, scope: !17353)
!17363 = !DILocation(line: 1349, column: 16, scope: !17353)
!17364 = !DILocation(line: 1349, column: 35, scope: !17353)
!17365 = !DILocation(line: 1349, column: 2, scope: !17353)
!17366 = !DILocation(line: 1350, column: 1, scope: !17353)
!17367 = distinct !DISubprogram(name: "r8153_u1u2en", scope: !3, file: !3, line: 3059, type: !10402, scopeLine: 3060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17368 = !DILocalVariable(name: "tp", arg: 1, scope: !17367, file: !3, line: 3059, type: !10280)
!17369 = !DILocation(line: 3059, column: 40, scope: !17367)
!17370 = !DILocalVariable(name: "enable", arg: 2, scope: !17367, file: !3, line: 3059, type: !617)
!17371 = !DILocation(line: 3059, column: 49, scope: !17367)
!17372 = !DILocalVariable(name: "u1u2", scope: !17367, file: !3, line: 3061, type: !3073)
!17373 = !DILocation(line: 3061, column: 5, scope: !17367)
!17374 = !DILocation(line: 3063, column: 6, scope: !17375)
!17375 = distinct !DILexicalBlock(scope: !17367, file: !3, line: 3063, column: 6)
!17376 = !DILocation(line: 3063, column: 6, scope: !17367)
!17377 = !DILocation(line: 3064, column: 3, scope: !17375)
!17378 = !DILocation(line: 3066, column: 3, scope: !17375)
!17379 = !DILocation(line: 3068, column: 16, scope: !17367)
!17380 = !DILocation(line: 3068, column: 68, scope: !17367)
!17381 = !DILocation(line: 3068, column: 2, scope: !17367)
!17382 = !DILocation(line: 3069, column: 1, scope: !17367)
!17383 = distinct !DISubprogram(name: "r8153_phy_status", scope: !3, file: !3, line: 3189, type: !14451, scopeLine: 3190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17384 = !DILocalVariable(name: "tp", arg: 1, scope: !17383, file: !3, line: 3189, type: !10280)
!17385 = !DILocation(line: 3189, column: 43, scope: !17383)
!17386 = !DILocalVariable(name: "desired", arg: 2, scope: !17383, file: !3, line: 3189, type: !1115)
!17387 = !DILocation(line: 3189, column: 51, scope: !17383)
!17388 = !DILocalVariable(name: "data", scope: !17383, file: !3, line: 3191, type: !1115)
!17389 = !DILocation(line: 3191, column: 6, scope: !17383)
!17390 = !DILocalVariable(name: "i", scope: !17383, file: !3, line: 3192, type: !72)
!17391 = !DILocation(line: 3192, column: 6, scope: !17383)
!17392 = !DILocation(line: 3194, column: 9, scope: !17393)
!17393 = distinct !DILexicalBlock(scope: !17383, file: !3, line: 3194, column: 2)
!17394 = !DILocation(line: 3194, column: 7, scope: !17393)
!17395 = !DILocation(line: 3194, column: 14, scope: !17396)
!17396 = distinct !DILexicalBlock(scope: !17393, file: !3, line: 3194, column: 2)
!17397 = !DILocation(line: 3194, column: 16, scope: !17396)
!17398 = !DILocation(line: 3194, column: 2, scope: !17393)
!17399 = !DILocation(line: 3195, column: 23, scope: !17400)
!17400 = distinct !DILexicalBlock(scope: !17396, file: !3, line: 3194, column: 28)
!17401 = !DILocation(line: 3195, column: 10, scope: !17400)
!17402 = !DILocation(line: 3195, column: 8, scope: !17400)
!17403 = !DILocation(line: 3196, column: 8, scope: !17400)
!17404 = !DILocation(line: 3197, column: 7, scope: !17405)
!17405 = distinct !DILexicalBlock(scope: !17400, file: !3, line: 3197, column: 7)
!17406 = !DILocation(line: 3197, column: 7, scope: !17400)
!17407 = !DILocation(line: 3198, column: 8, scope: !17408)
!17408 = distinct !DILexicalBlock(scope: !17409, file: !3, line: 3198, column: 8)
!17409 = distinct !DILexicalBlock(scope: !17405, file: !3, line: 3197, column: 16)
!17410 = !DILocation(line: 3198, column: 16, scope: !17408)
!17411 = !DILocation(line: 3198, column: 13, scope: !17408)
!17412 = !DILocation(line: 3198, column: 8, scope: !17409)
!17413 = !DILocation(line: 3199, column: 5, scope: !17408)
!17414 = !DILocation(line: 3200, column: 3, scope: !17409)
!17415 = !DILocation(line: 3200, column: 14, scope: !17416)
!17416 = distinct !DILexicalBlock(scope: !17405, file: !3, line: 3200, column: 14)
!17417 = !DILocation(line: 3200, column: 19, scope: !17416)
!17418 = !DILocation(line: 3200, column: 38, scope: !17416)
!17419 = !DILocation(line: 3200, column: 41, scope: !17416)
!17420 = !DILocation(line: 3200, column: 46, scope: !17416)
!17421 = !DILocation(line: 3200, column: 64, scope: !17416)
!17422 = !DILocation(line: 3201, column: 7, scope: !17416)
!17423 = !DILocation(line: 3201, column: 12, scope: !17416)
!17424 = !DILocation(line: 3200, column: 14, scope: !17405)
!17425 = !DILocation(line: 3202, column: 4, scope: !17426)
!17426 = distinct !DILexicalBlock(scope: !17416, file: !3, line: 3201, column: 34)
!17427 = !DILocation(line: 3205, column: 3, scope: !17400)
!17428 = !DILocation(line: 3206, column: 33, scope: !17429)
!17429 = distinct !DILexicalBlock(scope: !17400, file: !3, line: 3206, column: 7)
!17430 = !DILocation(line: 3206, column: 37, scope: !17429)
!17431 = !DILocation(line: 3206, column: 7, scope: !17429)
!17432 = !DILocation(line: 3206, column: 7, scope: !17400)
!17433 = !DILocation(line: 3207, column: 4, scope: !17429)
!17434 = !DILocation(line: 3208, column: 2, scope: !17400)
!17435 = !DILocation(line: 3194, column: 24, scope: !17396)
!17436 = !DILocation(line: 3194, column: 2, scope: !17396)
!17437 = distinct !{!17437, !17398, !17438}
!17438 = !DILocation(line: 3208, column: 2, scope: !17393)
!17439 = !DILocation(line: 3210, column: 9, scope: !17383)
!17440 = !DILocation(line: 3210, column: 2, scope: !17383)
!17441 = distinct !DISubprogram(name: "r8153_u2p3en", scope: !3, file: !3, line: 3084, type: !10402, scopeLine: 3085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17442 = !DILocalVariable(name: "tp", arg: 1, scope: !17441, file: !3, line: 3084, type: !10280)
!17443 = !DILocation(line: 3084, column: 40, scope: !17441)
!17444 = !DILocalVariable(name: "enable", arg: 2, scope: !17441, file: !3, line: 3084, type: !617)
!17445 = !DILocation(line: 3084, column: 49, scope: !17441)
!17446 = !DILocalVariable(name: "ocp_data", scope: !17441, file: !3, line: 3086, type: !784)
!17447 = !DILocation(line: 3086, column: 6, scope: !17441)
!17448 = !DILocation(line: 3088, column: 27, scope: !17441)
!17449 = !DILocation(line: 3088, column: 13, scope: !17441)
!17450 = !DILocation(line: 3088, column: 11, scope: !17441)
!17451 = !DILocation(line: 3089, column: 6, scope: !17452)
!17452 = distinct !DILexicalBlock(scope: !17441, file: !3, line: 3089, column: 6)
!17453 = !DILocation(line: 3089, column: 6, scope: !17441)
!17454 = !DILocation(line: 3090, column: 12, scope: !17452)
!17455 = !DILocation(line: 3090, column: 3, scope: !17452)
!17456 = !DILocation(line: 3092, column: 12, scope: !17452)
!17457 = !DILocation(line: 3093, column: 17, scope: !17441)
!17458 = !DILocation(line: 3093, column: 50, scope: !17441)
!17459 = !DILocation(line: 3093, column: 2, scope: !17441)
!17460 = !DILocation(line: 3094, column: 1, scope: !17441)
!17461 = distinct !DISubprogram(name: "r8153_queue_wake", scope: !3, file: !3, line: 3297, type: !10402, scopeLine: 3298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17462 = !DILocalVariable(name: "tp", arg: 1, scope: !17461, file: !3, line: 3297, type: !10280)
!17463 = !DILocation(line: 3297, column: 44, scope: !17461)
!17464 = !DILocalVariable(name: "enable", arg: 2, scope: !17461, file: !3, line: 3297, type: !617)
!17465 = !DILocation(line: 3297, column: 53, scope: !17461)
!17466 = !DILocalVariable(name: "ocp_data", scope: !17461, file: !3, line: 3299, type: !784)
!17467 = !DILocation(line: 3299, column: 6, scope: !17461)
!17468 = !DILocation(line: 3301, column: 27, scope: !17461)
!17469 = !DILocation(line: 3301, column: 13, scope: !17461)
!17470 = !DILocation(line: 3301, column: 11, scope: !17461)
!17471 = !DILocation(line: 3302, column: 6, scope: !17472)
!17472 = distinct !DILexicalBlock(scope: !17461, file: !3, line: 3302, column: 6)
!17473 = !DILocation(line: 3302, column: 6, scope: !17461)
!17474 = !DILocation(line: 3303, column: 12, scope: !17472)
!17475 = !DILocation(line: 3303, column: 3, scope: !17472)
!17476 = !DILocation(line: 3305, column: 12, scope: !17472)
!17477 = !DILocation(line: 3306, column: 17, scope: !17461)
!17478 = !DILocation(line: 3306, column: 54, scope: !17461)
!17479 = !DILocation(line: 3306, column: 2, scope: !17461)
!17480 = !DILocation(line: 3308, column: 27, scope: !17461)
!17481 = !DILocation(line: 3308, column: 13, scope: !17461)
!17482 = !DILocation(line: 3308, column: 11, scope: !17461)
!17483 = !DILocation(line: 3309, column: 11, scope: !17461)
!17484 = !DILocation(line: 3310, column: 17, scope: !17461)
!17485 = !DILocation(line: 3310, column: 53, scope: !17461)
!17486 = !DILocation(line: 3310, column: 2, scope: !17461)
!17487 = !DILocation(line: 3312, column: 27, scope: !17461)
!17488 = !DILocation(line: 3312, column: 13, scope: !17461)
!17489 = !DILocation(line: 3312, column: 11, scope: !17461)
!17490 = !DILocation(line: 3313, column: 11, scope: !17461)
!17491 = !DILocation(line: 3314, column: 17, scope: !17461)
!17492 = !DILocation(line: 3314, column: 53, scope: !17461)
!17493 = !DILocation(line: 3314, column: 2, scope: !17461)
!17494 = !DILocation(line: 3315, column: 1, scope: !17461)
!17495 = distinct !DISubprogram(name: "r8153_power_cut_en", scope: !3, file: !3, line: 3265, type: !10402, scopeLine: 3266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17496 = !DILocalVariable(name: "tp", arg: 1, scope: !17495, file: !3, line: 3265, type: !10280)
!17497 = !DILocation(line: 3265, column: 46, scope: !17495)
!17498 = !DILocalVariable(name: "enable", arg: 2, scope: !17495, file: !3, line: 3265, type: !617)
!17499 = !DILocation(line: 3265, column: 55, scope: !17495)
!17500 = !DILocalVariable(name: "ocp_data", scope: !17495, file: !3, line: 3267, type: !784)
!17501 = !DILocation(line: 3267, column: 6, scope: !17495)
!17502 = !DILocation(line: 3269, column: 27, scope: !17495)
!17503 = !DILocation(line: 3269, column: 13, scope: !17495)
!17504 = !DILocation(line: 3269, column: 11, scope: !17495)
!17505 = !DILocation(line: 3270, column: 6, scope: !17506)
!17506 = distinct !DILexicalBlock(scope: !17495, file: !3, line: 3270, column: 6)
!17507 = !DILocation(line: 3270, column: 6, scope: !17495)
!17508 = !DILocation(line: 3271, column: 12, scope: !17506)
!17509 = !DILocation(line: 3271, column: 3, scope: !17506)
!17510 = !DILocation(line: 3273, column: 12, scope: !17506)
!17511 = !DILocation(line: 3274, column: 17, scope: !17495)
!17512 = !DILocation(line: 3274, column: 50, scope: !17495)
!17513 = !DILocation(line: 3274, column: 2, scope: !17495)
!17514 = !DILocation(line: 3276, column: 27, scope: !17495)
!17515 = !DILocation(line: 3276, column: 13, scope: !17495)
!17516 = !DILocation(line: 3276, column: 11, scope: !17495)
!17517 = !DILocation(line: 3277, column: 11, scope: !17495)
!17518 = !DILocation(line: 3278, column: 17, scope: !17495)
!17519 = !DILocation(line: 3278, column: 47, scope: !17495)
!17520 = !DILocation(line: 3278, column: 2, scope: !17495)
!17521 = !DILocation(line: 3279, column: 1, scope: !17495)
!17522 = distinct !DISubprogram(name: "r8153_mac_clk_spd", scope: !3, file: !3, line: 3036, type: !10402, scopeLine: 3037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17523 = !DILocalVariable(name: "tp", arg: 1, scope: !17522, file: !3, line: 3036, type: !10280)
!17524 = !DILocation(line: 3036, column: 45, scope: !17522)
!17525 = !DILocalVariable(name: "enable", arg: 2, scope: !17522, file: !3, line: 3036, type: !617)
!17526 = !DILocation(line: 3036, column: 54, scope: !17522)
!17527 = !DILocation(line: 3039, column: 6, scope: !17528)
!17528 = distinct !DILexicalBlock(scope: !17522, file: !3, line: 3039, column: 6)
!17529 = !DILocation(line: 3039, column: 6, scope: !17522)
!17530 = !DILocation(line: 3040, column: 18, scope: !17531)
!17531 = distinct !DILexicalBlock(scope: !17528, file: !3, line: 3039, column: 14)
!17532 = !DILocation(line: 3040, column: 3, scope: !17531)
!17533 = !DILocation(line: 3042, column: 18, scope: !17531)
!17534 = !DILocation(line: 3042, column: 3, scope: !17531)
!17535 = !DILocation(line: 3044, column: 18, scope: !17531)
!17536 = !DILocation(line: 3044, column: 3, scope: !17531)
!17537 = !DILocation(line: 3047, column: 18, scope: !17531)
!17538 = !DILocation(line: 3047, column: 3, scope: !17531)
!17539 = !DILocation(line: 3051, column: 2, scope: !17531)
!17540 = !DILocation(line: 3052, column: 18, scope: !17541)
!17541 = distinct !DILexicalBlock(scope: !17528, file: !3, line: 3051, column: 9)
!17542 = !DILocation(line: 3052, column: 3, scope: !17541)
!17543 = !DILocation(line: 3053, column: 18, scope: !17541)
!17544 = !DILocation(line: 3053, column: 3, scope: !17541)
!17545 = !DILocation(line: 3054, column: 18, scope: !17541)
!17546 = !DILocation(line: 3054, column: 3, scope: !17541)
!17547 = !DILocation(line: 3055, column: 18, scope: !17541)
!17548 = !DILocation(line: 3055, column: 3, scope: !17541)
!17549 = !DILocation(line: 3057, column: 1, scope: !17522)
!17550 = distinct !DISubprogram(name: "usb_ocp_write", scope: !3, file: !3, line: 1209, type: !14632, scopeLine: 1210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17551 = !DILocalVariable(name: "tp", arg: 1, scope: !17550, file: !3, line: 1209, type: !10280)
!17552 = !DILocation(line: 1209, column: 33, scope: !17550)
!17553 = !DILocalVariable(name: "index", arg: 2, scope: !17550, file: !3, line: 1209, type: !1115)
!17554 = !DILocation(line: 1209, column: 41, scope: !17550)
!17555 = !DILocalVariable(name: "byteen", arg: 3, scope: !17550, file: !3, line: 1209, type: !1115)
!17556 = !DILocation(line: 1209, column: 52, scope: !17550)
!17557 = !DILocalVariable(name: "size", arg: 4, scope: !17550, file: !3, line: 1209, type: !1115)
!17558 = !DILocation(line: 1209, column: 64, scope: !17550)
!17559 = !DILocalVariable(name: "data", arg: 5, scope: !17550, file: !3, line: 1209, type: !647)
!17560 = !DILocation(line: 1209, column: 76, scope: !17550)
!17561 = !DILocation(line: 1211, column: 27, scope: !17550)
!17562 = !DILocation(line: 1211, column: 31, scope: !17550)
!17563 = !DILocation(line: 1211, column: 38, scope: !17550)
!17564 = !DILocation(line: 1211, column: 46, scope: !17550)
!17565 = !DILocation(line: 1211, column: 52, scope: !17550)
!17566 = !DILocation(line: 1211, column: 9, scope: !17550)
!17567 = !DILocation(line: 1211, column: 2, scope: !17550)
!17568 = distinct !DISubprogram(name: "r8153_set_rx_early_timeout", scope: !3, file: !3, line: 2803, type: !10380, scopeLine: 2804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17569 = !DILocalVariable(name: "tp", arg: 1, scope: !17568, file: !3, line: 2803, type: !10280)
!17570 = !DILocation(line: 2803, column: 54, scope: !17568)
!17571 = !DILocalVariable(name: "ocp_data", scope: !17568, file: !3, line: 2805, type: !784)
!17572 = !DILocation(line: 2805, column: 6, scope: !17568)
!17573 = !DILocation(line: 2805, column: 17, scope: !17568)
!17574 = !DILocation(line: 2805, column: 21, scope: !17568)
!17575 = !DILocation(line: 2805, column: 30, scope: !17568)
!17576 = !DILocation(line: 2807, column: 10, scope: !17568)
!17577 = !DILocation(line: 2807, column: 14, scope: !17568)
!17578 = !DILocation(line: 2807, column: 2, scope: !17568)
!17579 = !DILocation(line: 2812, column: 18, scope: !17580)
!17580 = distinct !DILexicalBlock(scope: !17568, file: !3, line: 2807, column: 23)
!17581 = !DILocation(line: 2813, column: 11, scope: !17580)
!17582 = !DILocation(line: 2812, column: 3, scope: !17580)
!17583 = !DILocation(line: 2814, column: 3, scope: !17580)
!17584 = !DILocation(line: 2821, column: 18, scope: !17580)
!17585 = !DILocation(line: 2821, column: 3, scope: !17580)
!17586 = !DILocation(line: 2823, column: 18, scope: !17580)
!17587 = !DILocation(line: 2824, column: 11, scope: !17580)
!17588 = !DILocation(line: 2823, column: 3, scope: !17580)
!17589 = !DILocation(line: 2825, column: 3, scope: !17580)
!17590 = !DILocation(line: 2828, column: 3, scope: !17580)
!17591 = !DILocation(line: 2830, column: 1, scope: !17568)
!17592 = distinct !DISubprogram(name: "r8153_set_rx_early_size", scope: !3, file: !3, line: 2832, type: !10380, scopeLine: 2833, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17593 = !DILocalVariable(name: "tp", arg: 1, scope: !17592, file: !3, line: 2832, type: !10280)
!17594 = !DILocation(line: 2832, column: 51, scope: !17592)
!17595 = !DILocalVariable(name: "ocp_data", scope: !17592, file: !3, line: 2834, type: !784)
!17596 = !DILocation(line: 2834, column: 6, scope: !17592)
!17597 = !DILocation(line: 2834, column: 17, scope: !17592)
!17598 = !DILocation(line: 2834, column: 21, scope: !17592)
!17599 = !DILocation(line: 2834, column: 33, scope: !17592)
!17600 = !DILocation(line: 2834, column: 31, scope: !17592)
!17601 = !DILocation(line: 2836, column: 10, scope: !17592)
!17602 = !DILocation(line: 2836, column: 14, scope: !17592)
!17603 = !DILocation(line: 2836, column: 2, scope: !17592)
!17604 = !DILocation(line: 2841, column: 18, scope: !17605)
!17605 = distinct !DILexicalBlock(scope: !17592, file: !3, line: 2836, column: 23)
!17606 = !DILocation(line: 2842, column: 11, scope: !17605)
!17607 = !DILocation(line: 2842, column: 20, scope: !17605)
!17608 = !DILocation(line: 2841, column: 3, scope: !17605)
!17609 = !DILocation(line: 2843, column: 3, scope: !17605)
!17610 = !DILocation(line: 2846, column: 18, scope: !17605)
!17611 = !DILocation(line: 2847, column: 11, scope: !17605)
!17612 = !DILocation(line: 2847, column: 20, scope: !17605)
!17613 = !DILocation(line: 2846, column: 3, scope: !17605)
!17614 = !DILocation(line: 2848, column: 3, scope: !17605)
!17615 = !DILocalVariable(name: "__ret_warn_on", scope: !17616, file: !3, line: 2850, type: !72)
!17616 = distinct !DILexicalBlock(scope: !17605, file: !3, line: 2850, column: 3)
!17617 = !DILocation(line: 2850, column: 3, scope: !17616)
!17618 = !DILocation(line: 2850, column: 3, scope: !17619)
!17619 = distinct !DILexicalBlock(scope: !17616, file: !3, line: 2850, column: 3)
!17620 = !DILocation(line: 2850, column: 3, scope: !17621)
!17621 = distinct !DILexicalBlock(scope: !17619, file: !3, line: 2850, column: 3)
!17622 = !DILocation(line: 2850, column: 3, scope: !17623)
!17623 = distinct !DILexicalBlock(scope: !17621, file: !3, line: 2850, column: 3)
!17624 = !DILocation(line: 2850, column: 3, scope: !17625)
!17625 = distinct !DILexicalBlock(scope: !17621, file: !3, line: 2850, column: 3)
!17626 = !{i32 -2137026330, i32 -2137026301, i32 -2137026255, i32 -2137026197, i32 -2137026143, i32 -2137026089, i32 -2137026034, i32 -2137026003}
!17627 = !DILocation(line: 2850, column: 3, scope: !17628)
!17628 = distinct !DILexicalBlock(scope: !17621, file: !3, line: 2850, column: 3)
!17629 = !{i32 -2137025586, i32 -2137025579, i32 -2137025527, i32 -2137025496, i32 -2137025466}
!17630 = !DILocation(line: 2850, column: 3, scope: !17631)
!17631 = distinct !DILexicalBlock(scope: !17621, file: !3, line: 2850, column: 3)
!17632 = !DILocation(line: 2851, column: 3, scope: !17605)
!17633 = !DILocation(line: 2853, column: 1, scope: !17592)
!17634 = distinct !DISubprogram(name: "r8153_aldps_en", scope: !3, file: !3, line: 4516, type: !10402, scopeLine: 4517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17635 = !DILocalVariable(name: "tp", arg: 1, scope: !17634, file: !3, line: 4516, type: !10280)
!17636 = !DILocation(line: 4516, column: 42, scope: !17634)
!17637 = !DILocalVariable(name: "enable", arg: 2, scope: !17634, file: !3, line: 4516, type: !617)
!17638 = !DILocation(line: 4516, column: 51, scope: !17634)
!17639 = !DILocalVariable(name: "data", scope: !17634, file: !3, line: 4518, type: !1115)
!17640 = !DILocation(line: 4518, column: 6, scope: !17634)
!17641 = !DILocation(line: 4520, column: 22, scope: !17634)
!17642 = !DILocation(line: 4520, column: 9, scope: !17634)
!17643 = !DILocation(line: 4520, column: 7, scope: !17634)
!17644 = !DILocation(line: 4521, column: 6, scope: !17645)
!17645 = distinct !DILexicalBlock(scope: !17634, file: !3, line: 4521, column: 6)
!17646 = !DILocation(line: 4521, column: 6, scope: !17634)
!17647 = !DILocation(line: 4522, column: 8, scope: !17648)
!17648 = distinct !DILexicalBlock(scope: !17645, file: !3, line: 4521, column: 14)
!17649 = !DILocation(line: 4523, column: 17, scope: !17648)
!17650 = !DILocation(line: 4523, column: 36, scope: !17648)
!17651 = !DILocation(line: 4523, column: 3, scope: !17648)
!17652 = !DILocation(line: 4524, column: 2, scope: !17648)
!17653 = !DILocalVariable(name: "i", scope: !17654, file: !3, line: 4525, type: !72)
!17654 = distinct !DILexicalBlock(scope: !17645, file: !3, line: 4524, column: 9)
!17655 = !DILocation(line: 4525, column: 7, scope: !17654)
!17656 = !DILocation(line: 4527, column: 8, scope: !17654)
!17657 = !DILocation(line: 4528, column: 17, scope: !17654)
!17658 = !DILocation(line: 4528, column: 36, scope: !17654)
!17659 = !DILocation(line: 4528, column: 3, scope: !17654)
!17660 = !DILocation(line: 4529, column: 10, scope: !17661)
!17661 = distinct !DILexicalBlock(scope: !17654, file: !3, line: 4529, column: 3)
!17662 = !DILocation(line: 4529, column: 8, scope: !17661)
!17663 = !DILocation(line: 4529, column: 15, scope: !17664)
!17664 = distinct !DILexicalBlock(scope: !17661, file: !3, line: 4529, column: 3)
!17665 = !DILocation(line: 4529, column: 17, scope: !17664)
!17666 = !DILocation(line: 4529, column: 3, scope: !17661)
!17667 = !DILocation(line: 4530, column: 4, scope: !17668)
!17668 = distinct !DILexicalBlock(scope: !17664, file: !3, line: 4529, column: 28)
!17669 = !DILocation(line: 4531, column: 22, scope: !17670)
!17670 = distinct !DILexicalBlock(scope: !17668, file: !3, line: 4531, column: 8)
!17671 = !DILocation(line: 4531, column: 8, scope: !17670)
!17672 = !DILocation(line: 4531, column: 48, scope: !17670)
!17673 = !DILocation(line: 4531, column: 8, scope: !17668)
!17674 = !DILocation(line: 4532, column: 5, scope: !17670)
!17675 = !DILocation(line: 4533, column: 3, scope: !17668)
!17676 = !DILocation(line: 4529, column: 24, scope: !17664)
!17677 = !DILocation(line: 4529, column: 3, scope: !17664)
!17678 = distinct !{!17678, !17666, !17679}
!17679 = !DILocation(line: 4533, column: 3, scope: !17661)
!17680 = !DILocation(line: 4536, column: 23, scope: !17634)
!17681 = !DILocation(line: 4536, column: 2, scope: !17634)
!17682 = !DILocation(line: 4536, column: 6, scope: !17634)
!17683 = !DILocation(line: 4536, column: 15, scope: !17634)
!17684 = !DILocation(line: 4536, column: 21, scope: !17634)
!17685 = !DILocation(line: 4537, column: 1, scope: !17634)
!17686 = distinct !DISubprogram(name: "rtl_reset_bmu", scope: !3, file: !3, line: 3431, type: !10380, scopeLine: 3432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17687 = !DILocalVariable(name: "tp", arg: 1, scope: !17686, file: !3, line: 3431, type: !10280)
!17688 = !DILocation(line: 3431, column: 41, scope: !17686)
!17689 = !DILocalVariable(name: "ocp_data", scope: !17686, file: !3, line: 3433, type: !784)
!17690 = !DILocation(line: 3433, column: 6, scope: !17686)
!17691 = !DILocation(line: 3435, column: 27, scope: !17686)
!17692 = !DILocation(line: 3435, column: 13, scope: !17686)
!17693 = !DILocation(line: 3435, column: 11, scope: !17686)
!17694 = !DILocation(line: 3436, column: 11, scope: !17686)
!17695 = !DILocation(line: 3437, column: 17, scope: !17686)
!17696 = !DILocation(line: 3437, column: 50, scope: !17686)
!17697 = !DILocation(line: 3437, column: 2, scope: !17686)
!17698 = !DILocation(line: 3438, column: 11, scope: !17686)
!17699 = !DILocation(line: 3439, column: 17, scope: !17686)
!17700 = !DILocation(line: 3439, column: 50, scope: !17686)
!17701 = !DILocation(line: 3439, column: 2, scope: !17686)
!17702 = !DILocation(line: 3440, column: 1, scope: !17686)
!17703 = distinct !DISubprogram(name: "r8153_first_init", scope: !3, file: !3, line: 4694, type: !10380, scopeLine: 4695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17704 = !DILocalVariable(name: "tp", arg: 1, scope: !17703, file: !3, line: 4694, type: !10280)
!17705 = !DILocation(line: 4694, column: 44, scope: !17703)
!17706 = !DILocalVariable(name: "ocp_data", scope: !17703, file: !3, line: 4696, type: !784)
!17707 = !DILocation(line: 4696, column: 6, scope: !17703)
!17708 = !DILocation(line: 4698, column: 20, scope: !17703)
!17709 = !DILocation(line: 4698, column: 2, scope: !17703)
!17710 = !DILocation(line: 4699, column: 16, scope: !17703)
!17711 = !DILocation(line: 4699, column: 2, scope: !17703)
!17712 = !DILocation(line: 4700, column: 19, scope: !17703)
!17713 = !DILocation(line: 4700, column: 2, scope: !17703)
!17714 = !DILocation(line: 4702, column: 28, scope: !17703)
!17715 = !DILocation(line: 4702, column: 13, scope: !17703)
!17716 = !DILocation(line: 4702, column: 11, scope: !17703)
!17717 = !DILocation(line: 4703, column: 11, scope: !17703)
!17718 = !DILocation(line: 4704, column: 18, scope: !17703)
!17719 = !DILocation(line: 4704, column: 45, scope: !17703)
!17720 = !DILocation(line: 4704, column: 2, scope: !17703)
!17721 = !DILocation(line: 4706, column: 20, scope: !17703)
!17722 = !DILocation(line: 4706, column: 2, scope: !17703)
!17723 = !DILocation(line: 4707, column: 16, scope: !17703)
!17724 = !DILocation(line: 4707, column: 2, scope: !17703)
!17725 = !DILocation(line: 4709, column: 27, scope: !17703)
!17726 = !DILocation(line: 4709, column: 13, scope: !17703)
!17727 = !DILocation(line: 4709, column: 11, scope: !17703)
!17728 = !DILocation(line: 4710, column: 11, scope: !17703)
!17729 = !DILocation(line: 4711, column: 17, scope: !17703)
!17730 = !DILocation(line: 4711, column: 49, scope: !17703)
!17731 = !DILocation(line: 4711, column: 2, scope: !17703)
!17732 = !DILocation(line: 4713, column: 27, scope: !17703)
!17733 = !DILocation(line: 4713, column: 13, scope: !17703)
!17734 = !DILocation(line: 4713, column: 11, scope: !17703)
!17735 = !DILocation(line: 4714, column: 11, scope: !17703)
!17736 = !DILocation(line: 4715, column: 17, scope: !17703)
!17737 = !DILocation(line: 4715, column: 50, scope: !17703)
!17738 = !DILocation(line: 4715, column: 2, scope: !17703)
!17739 = !DILocation(line: 4717, column: 27, scope: !17703)
!17740 = !DILocation(line: 4717, column: 2, scope: !17703)
!17741 = !DILocation(line: 4719, column: 27, scope: !17703)
!17742 = !DILocation(line: 4719, column: 13, scope: !17703)
!17743 = !DILocation(line: 4719, column: 11, scope: !17703)
!17744 = !DILocation(line: 4720, column: 11, scope: !17703)
!17745 = !DILocation(line: 4721, column: 17, scope: !17703)
!17746 = !DILocation(line: 4721, column: 50, scope: !17703)
!17747 = !DILocation(line: 4721, column: 2, scope: !17703)
!17748 = !DILocation(line: 4723, column: 27, scope: !17703)
!17749 = !DILocation(line: 4723, column: 2, scope: !17703)
!17750 = !DILocation(line: 4725, column: 17, scope: !17703)
!17751 = !DILocation(line: 4725, column: 21, scope: !17703)
!17752 = !DILocation(line: 4725, column: 25, scope: !17703)
!17753 = !DILocation(line: 4725, column: 33, scope: !17703)
!17754 = !DILocation(line: 4725, column: 42, scope: !17703)
!17755 = !DILocation(line: 4725, column: 2, scope: !17703)
!17756 = !DILocation(line: 4727, column: 13, scope: !17703)
!17757 = !DILocation(line: 4727, column: 17, scope: !17703)
!17758 = !DILocation(line: 4727, column: 25, scope: !17703)
!17759 = !DILocation(line: 4727, column: 29, scope: !17703)
!17760 = !DILocation(line: 4727, column: 45, scope: !17703)
!17761 = !DILocation(line: 4727, column: 11, scope: !17703)
!17762 = !DILocation(line: 4728, column: 17, scope: !17703)
!17763 = !DILocation(line: 4728, column: 44, scope: !17703)
!17764 = !DILocation(line: 4728, column: 2, scope: !17703)
!17765 = !DILocation(line: 4729, column: 17, scope: !17703)
!17766 = !DILocation(line: 4729, column: 2, scope: !17703)
!17767 = !DILocation(line: 4731, column: 27, scope: !17703)
!17768 = !DILocation(line: 4731, column: 13, scope: !17703)
!17769 = !DILocation(line: 4731, column: 11, scope: !17703)
!17770 = !DILocation(line: 4732, column: 11, scope: !17703)
!17771 = !DILocation(line: 4733, column: 17, scope: !17703)
!17772 = !DILocation(line: 4733, column: 45, scope: !17703)
!17773 = !DILocation(line: 4733, column: 2, scope: !17703)
!17774 = !DILocation(line: 4735, column: 20, scope: !17703)
!17775 = !DILocation(line: 4735, column: 2, scope: !17703)
!17776 = !DILocation(line: 4738, column: 18, scope: !17703)
!17777 = !DILocation(line: 4738, column: 2, scope: !17703)
!17778 = !DILocation(line: 4739, column: 17, scope: !17703)
!17779 = !DILocation(line: 4739, column: 2, scope: !17703)
!17780 = !DILocation(line: 4740, column: 17, scope: !17703)
!17781 = !DILocation(line: 4740, column: 2, scope: !17703)
!17782 = !DILocation(line: 4742, column: 18, scope: !17703)
!17783 = !DILocation(line: 4742, column: 2, scope: !17703)
!17784 = !DILocation(line: 4743, column: 1, scope: !17703)
!17785 = distinct !DISubprogram(name: "r8153_enter_oob", scope: !3, file: !3, line: 4745, type: !10380, scopeLine: 4746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17786 = !DILocalVariable(name: "tp", arg: 1, scope: !17785, file: !3, line: 4745, type: !10280)
!17787 = !DILocation(line: 4745, column: 43, scope: !17785)
!17788 = !DILocalVariable(name: "ocp_data", scope: !17785, file: !3, line: 4747, type: !784)
!17789 = !DILocation(line: 4747, column: 6, scope: !17785)
!17790 = !DILocation(line: 4749, column: 20, scope: !17785)
!17791 = !DILocation(line: 4749, column: 2, scope: !17785)
!17792 = !DILocation(line: 4751, column: 27, scope: !17785)
!17793 = !DILocation(line: 4751, column: 13, scope: !17785)
!17794 = !DILocation(line: 4751, column: 11, scope: !17785)
!17795 = !DILocation(line: 4752, column: 11, scope: !17785)
!17796 = !DILocation(line: 4753, column: 17, scope: !17785)
!17797 = !DILocation(line: 4753, column: 49, scope: !17785)
!17798 = !DILocation(line: 4753, column: 2, scope: !17785)
!17799 = !DILocation(line: 4755, column: 14, scope: !17785)
!17800 = !DILocation(line: 4755, column: 2, scope: !17785)
!17801 = !DILocation(line: 4756, column: 16, scope: !17785)
!17802 = !DILocation(line: 4756, column: 2, scope: !17785)
!17803 = !DILocation(line: 4758, column: 27, scope: !17785)
!17804 = !DILocation(line: 4758, column: 2, scope: !17785)
!17805 = !DILocation(line: 4760, column: 27, scope: !17785)
!17806 = !DILocation(line: 4760, column: 13, scope: !17785)
!17807 = !DILocation(line: 4760, column: 11, scope: !17785)
!17808 = !DILocation(line: 4761, column: 11, scope: !17785)
!17809 = !DILocation(line: 4762, column: 17, scope: !17785)
!17810 = !DILocation(line: 4762, column: 50, scope: !17785)
!17811 = !DILocation(line: 4762, column: 2, scope: !17785)
!17812 = !DILocation(line: 4764, column: 27, scope: !17785)
!17813 = !DILocation(line: 4764, column: 2, scope: !17785)
!17814 = !DILocation(line: 4766, column: 13, scope: !17785)
!17815 = !DILocation(line: 4766, column: 17, scope: !17785)
!17816 = !DILocation(line: 4766, column: 25, scope: !17785)
!17817 = !DILocation(line: 4766, column: 29, scope: !17785)
!17818 = !DILocation(line: 4766, column: 45, scope: !17785)
!17819 = !DILocation(line: 4766, column: 11, scope: !17785)
!17820 = !DILocation(line: 4767, column: 17, scope: !17785)
!17821 = !DILocation(line: 4767, column: 44, scope: !17785)
!17822 = !DILocation(line: 4767, column: 2, scope: !17785)
!17823 = !DILocation(line: 4769, column: 10, scope: !17785)
!17824 = !DILocation(line: 4769, column: 14, scope: !17785)
!17825 = !DILocation(line: 4769, column: 2, scope: !17785)
!17826 = !DILocation(line: 4774, column: 28, scope: !17827)
!17827 = distinct !DILexicalBlock(scope: !17785, file: !3, line: 4769, column: 23)
!17828 = !DILocation(line: 4774, column: 14, scope: !17827)
!17829 = !DILocation(line: 4774, column: 12, scope: !17827)
!17830 = !DILocation(line: 4775, column: 12, scope: !17827)
!17831 = !DILocation(line: 4776, column: 18, scope: !17827)
!17832 = !DILocation(line: 4776, column: 52, scope: !17827)
!17833 = !DILocation(line: 4776, column: 3, scope: !17827)
!17834 = !DILocation(line: 4777, column: 3, scope: !17827)
!17835 = !DILocation(line: 4785, column: 18, scope: !17827)
!17836 = !DILocation(line: 4785, column: 3, scope: !17827)
!17837 = !DILocation(line: 4786, column: 3, scope: !17827)
!17838 = !DILocation(line: 4789, column: 3, scope: !17827)
!17839 = !DILocation(line: 4792, column: 17, scope: !17785)
!17840 = !DILocation(line: 4792, column: 2, scope: !17785)
!17841 = !DILocation(line: 4794, column: 27, scope: !17785)
!17842 = !DILocation(line: 4794, column: 13, scope: !17785)
!17843 = !DILocation(line: 4794, column: 11, scope: !17785)
!17844 = !DILocation(line: 4795, column: 11, scope: !17785)
!17845 = !DILocation(line: 4796, column: 17, scope: !17785)
!17846 = !DILocation(line: 4796, column: 47, scope: !17785)
!17847 = !DILocation(line: 4796, column: 2, scope: !17785)
!17848 = !DILocation(line: 4798, column: 27, scope: !17785)
!17849 = !DILocation(line: 4798, column: 13, scope: !17785)
!17850 = !DILocation(line: 4798, column: 11, scope: !17785)
!17851 = !DILocation(line: 4799, column: 11, scope: !17785)
!17852 = !DILocation(line: 4800, column: 17, scope: !17785)
!17853 = !DILocation(line: 4800, column: 49, scope: !17785)
!17854 = !DILocation(line: 4800, column: 2, scope: !17785)
!17855 = !DILocation(line: 4802, column: 16, scope: !17785)
!17856 = !DILocation(line: 4802, column: 2, scope: !17785)
!17857 = !DILocation(line: 4804, column: 28, scope: !17785)
!17858 = !DILocation(line: 4804, column: 13, scope: !17785)
!17859 = !DILocation(line: 4804, column: 11, scope: !17785)
!17860 = !DILocation(line: 4805, column: 11, scope: !17785)
!17861 = !DILocation(line: 4806, column: 18, scope: !17785)
!17862 = !DILocation(line: 4806, column: 45, scope: !17785)
!17863 = !DILocation(line: 4806, column: 2, scope: !17785)
!17864 = !DILocation(line: 4807, column: 1, scope: !17785)
!17865 = distinct !DISubprogram(name: "r8153b_u1u2en", scope: !3, file: !3, line: 3071, type: !10402, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17866 = !DILocalVariable(name: "tp", arg: 1, scope: !17865, file: !3, line: 3071, type: !10280)
!17867 = !DILocation(line: 3071, column: 41, scope: !17865)
!17868 = !DILocalVariable(name: "enable", arg: 2, scope: !17865, file: !3, line: 3071, type: !617)
!17869 = !DILocation(line: 3071, column: 50, scope: !17865)
!17870 = !DILocalVariable(name: "ocp_data", scope: !17865, file: !3, line: 3073, type: !784)
!17871 = !DILocation(line: 3073, column: 6, scope: !17865)
!17872 = !DILocation(line: 3075, column: 27, scope: !17865)
!17873 = !DILocation(line: 3075, column: 13, scope: !17865)
!17874 = !DILocation(line: 3075, column: 11, scope: !17865)
!17875 = !DILocation(line: 3076, column: 6, scope: !17876)
!17876 = distinct !DILexicalBlock(scope: !17865, file: !3, line: 3076, column: 6)
!17877 = !DILocation(line: 3076, column: 6, scope: !17865)
!17878 = !DILocation(line: 3077, column: 12, scope: !17876)
!17879 = !DILocation(line: 3077, column: 3, scope: !17876)
!17880 = !DILocation(line: 3079, column: 12, scope: !17876)
!17881 = !DILocation(line: 3081, column: 17, scope: !17865)
!17882 = !DILocation(line: 3081, column: 51, scope: !17865)
!17883 = !DILocation(line: 3081, column: 2, scope: !17865)
!17884 = !DILocation(line: 3082, column: 1, scope: !17865)
!17885 = distinct !DISubprogram(name: "r8153b_power_cut_en", scope: !3, file: !3, line: 3281, type: !10402, scopeLine: 3282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17886 = !DILocalVariable(name: "tp", arg: 1, scope: !17885, file: !3, line: 3281, type: !10280)
!17887 = !DILocation(line: 3281, column: 47, scope: !17885)
!17888 = !DILocalVariable(name: "enable", arg: 2, scope: !17885, file: !3, line: 3281, type: !617)
!17889 = !DILocation(line: 3281, column: 56, scope: !17885)
!17890 = !DILocalVariable(name: "ocp_data", scope: !17885, file: !3, line: 3283, type: !784)
!17891 = !DILocation(line: 3283, column: 6, scope: !17885)
!17892 = !DILocation(line: 3285, column: 27, scope: !17885)
!17893 = !DILocation(line: 3285, column: 13, scope: !17885)
!17894 = !DILocation(line: 3285, column: 11, scope: !17885)
!17895 = !DILocation(line: 3286, column: 6, scope: !17896)
!17896 = distinct !DILexicalBlock(scope: !17885, file: !3, line: 3286, column: 6)
!17897 = !DILocation(line: 3286, column: 6, scope: !17885)
!17898 = !DILocation(line: 3287, column: 12, scope: !17896)
!17899 = !DILocation(line: 3287, column: 3, scope: !17896)
!17900 = !DILocation(line: 3289, column: 12, scope: !17896)
!17901 = !DILocation(line: 3290, column: 17, scope: !17885)
!17902 = !DILocation(line: 3290, column: 50, scope: !17885)
!17903 = !DILocation(line: 3290, column: 2, scope: !17885)
!17904 = !DILocation(line: 3292, column: 27, scope: !17885)
!17905 = !DILocation(line: 3292, column: 13, scope: !17885)
!17906 = !DILocation(line: 3292, column: 11, scope: !17885)
!17907 = !DILocation(line: 3293, column: 11, scope: !17885)
!17908 = !DILocation(line: 3294, column: 17, scope: !17885)
!17909 = !DILocation(line: 3294, column: 47, scope: !17885)
!17910 = !DILocation(line: 3294, column: 2, scope: !17885)
!17911 = !DILocation(line: 3295, column: 1, scope: !17885)
!17912 = distinct !DISubprogram(name: "r8153b_ups_en", scope: !3, file: !3, line: 3213, type: !10402, scopeLine: 3214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17913 = !DILocalVariable(name: "tp", arg: 1, scope: !17912, file: !3, line: 3213, type: !10280)
!17914 = !DILocation(line: 3213, column: 41, scope: !17912)
!17915 = !DILocalVariable(name: "enable", arg: 2, scope: !17912, file: !3, line: 3213, type: !617)
!17916 = !DILocation(line: 3213, column: 50, scope: !17912)
!17917 = !DILocalVariable(name: "ocp_data", scope: !17912, file: !3, line: 3215, type: !784)
!17918 = !DILocation(line: 3215, column: 6, scope: !17912)
!17919 = !DILocation(line: 3215, column: 31, scope: !17912)
!17920 = !DILocation(line: 3215, column: 17, scope: !17912)
!17921 = !DILocation(line: 3217, column: 6, scope: !17922)
!17922 = distinct !DILexicalBlock(scope: !17912, file: !3, line: 3217, column: 6)
!17923 = !DILocation(line: 3217, column: 6, scope: !17912)
!17924 = !DILocation(line: 3218, column: 20, scope: !17925)
!17925 = distinct !DILexicalBlock(scope: !17922, file: !3, line: 3217, column: 14)
!17926 = !DILocation(line: 3218, column: 3, scope: !17925)
!17927 = !DILocation(line: 3220, column: 12, scope: !17925)
!17928 = !DILocation(line: 3221, column: 18, scope: !17925)
!17929 = !DILocation(line: 3221, column: 51, scope: !17925)
!17930 = !DILocation(line: 3221, column: 3, scope: !17925)
!17931 = !DILocation(line: 3223, column: 28, scope: !17925)
!17932 = !DILocation(line: 3223, column: 14, scope: !17925)
!17933 = !DILocation(line: 3223, column: 12, scope: !17925)
!17934 = !DILocation(line: 3224, column: 12, scope: !17925)
!17935 = !DILocation(line: 3225, column: 18, scope: !17925)
!17936 = !DILocation(line: 3225, column: 44, scope: !17925)
!17937 = !DILocation(line: 3225, column: 3, scope: !17925)
!17938 = !DILocation(line: 3226, column: 2, scope: !17925)
!17939 = !DILocalVariable(name: "data", scope: !17940, file: !3, line: 3227, type: !1115)
!17940 = distinct !DILexicalBlock(scope: !17922, file: !3, line: 3226, column: 9)
!17941 = !DILocation(line: 3227, column: 7, scope: !17940)
!17942 = !DILocation(line: 3229, column: 12, scope: !17940)
!17943 = !DILocation(line: 3230, column: 18, scope: !17940)
!17944 = !DILocation(line: 3230, column: 51, scope: !17940)
!17945 = !DILocation(line: 3230, column: 3, scope: !17940)
!17946 = !DILocation(line: 3232, column: 28, scope: !17940)
!17947 = !DILocation(line: 3232, column: 14, scope: !17940)
!17948 = !DILocation(line: 3232, column: 12, scope: !17940)
!17949 = !DILocation(line: 3233, column: 12, scope: !17940)
!17950 = !DILocation(line: 3234, column: 18, scope: !17940)
!17951 = !DILocation(line: 3234, column: 44, scope: !17940)
!17952 = !DILocation(line: 3234, column: 3, scope: !17940)
!17953 = !DILocation(line: 3236, column: 28, scope: !17940)
!17954 = !DILocation(line: 3236, column: 14, scope: !17940)
!17955 = !DILocation(line: 3236, column: 12, scope: !17940)
!17956 = !DILocation(line: 3237, column: 12, scope: !17940)
!17957 = !DILocation(line: 3238, column: 18, scope: !17940)
!17958 = !DILocation(line: 3238, column: 48, scope: !17940)
!17959 = !DILocation(line: 3238, column: 3, scope: !17940)
!17960 = !DILocation(line: 3240, column: 27, scope: !17940)
!17961 = !DILocation(line: 3240, column: 10, scope: !17940)
!17962 = !DILocation(line: 3240, column: 8, scope: !17940)
!17963 = !DILocation(line: 3242, column: 11, scope: !17940)
!17964 = !DILocation(line: 3242, column: 3, scope: !17940)
!17965 = !DILocation(line: 3245, column: 20, scope: !17966)
!17966 = distinct !DILexicalBlock(scope: !17940, file: !3, line: 3242, column: 17)
!17967 = !DILocation(line: 3246, column: 32, scope: !17966)
!17968 = !DILocation(line: 3246, column: 36, scope: !17966)
!17969 = !DILocation(line: 3246, column: 6, scope: !17966)
!17970 = !DILocation(line: 3245, column: 4, scope: !17966)
!17971 = !DILocation(line: 3248, column: 27, scope: !17966)
!17972 = !DILocation(line: 3248, column: 11, scope: !17966)
!17973 = !DILocation(line: 3248, column: 9, scope: !17966)
!17974 = !DILocation(line: 3249, column: 9, scope: !17966)
!17975 = !DILocation(line: 3250, column: 9, scope: !17966)
!17976 = !DILocation(line: 3251, column: 21, scope: !17966)
!17977 = !DILocation(line: 3251, column: 35, scope: !17966)
!17978 = !DILocation(line: 3251, column: 4, scope: !17966)
!17979 = !DILocation(line: 3253, column: 28, scope: !17966)
!17980 = !DILocation(line: 3253, column: 11, scope: !17966)
!17981 = !DILocation(line: 3253, column: 9, scope: !17966)
!17982 = !DILocation(line: 3253, column: 4, scope: !17966)
!17983 = !DILocation(line: 3257, column: 8, scope: !17984)
!17984 = distinct !DILexicalBlock(scope: !17966, file: !3, line: 3257, column: 8)
!17985 = !DILocation(line: 3257, column: 13, scope: !17984)
!17986 = !DILocation(line: 3257, column: 8, scope: !17966)
!17987 = !DILocation(line: 3258, column: 5, scope: !17984)
!17988 = !DILocation(line: 3258, column: 5, scope: !17989)
!17989 = distinct !DILexicalBlock(scope: !17990, file: !3, line: 3258, column: 5)
!17990 = distinct !DILexicalBlock(scope: !17984, file: !3, line: 3258, column: 5)
!17991 = !DILocation(line: 3258, column: 5, scope: !17990)
!17992 = !DILocation(line: 3260, column: 4, scope: !17966)
!17993 = !DILocation(line: 3263, column: 1, scope: !17912)
!17994 = distinct !DISubprogram(name: "r8153b_ups_flags", scope: !3, file: !3, line: 3096, type: !10380, scopeLine: 3097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!17995 = !DILocalVariable(name: "tp", arg: 1, scope: !17994, file: !3, line: 3096, type: !10280)
!17996 = !DILocation(line: 3096, column: 44, scope: !17994)
!17997 = !DILocalVariable(name: "ups_flags", scope: !17994, file: !3, line: 3098, type: !784)
!17998 = !DILocation(line: 3098, column: 6, scope: !17994)
!17999 = !DILocation(line: 3100, column: 6, scope: !18000)
!18000 = distinct !DILexicalBlock(scope: !17994, file: !3, line: 3100, column: 6)
!18001 = !DILocation(line: 3100, column: 10, scope: !18000)
!18002 = !DILocation(line: 3100, column: 19, scope: !18000)
!18003 = !DILocation(line: 3100, column: 6, scope: !17994)
!18004 = !DILocation(line: 3101, column: 13, scope: !18000)
!18005 = !DILocation(line: 3101, column: 3, scope: !18000)
!18006 = !DILocation(line: 3103, column: 6, scope: !18007)
!18007 = distinct !DILexicalBlock(scope: !17994, file: !3, line: 3103, column: 6)
!18008 = !DILocation(line: 3103, column: 10, scope: !18007)
!18009 = !DILocation(line: 3103, column: 19, scope: !18007)
!18010 = !DILocation(line: 3103, column: 6, scope: !17994)
!18011 = !DILocation(line: 3104, column: 13, scope: !18007)
!18012 = !DILocation(line: 3104, column: 3, scope: !18007)
!18013 = !DILocation(line: 3106, column: 6, scope: !18014)
!18014 = distinct !DILexicalBlock(scope: !17994, file: !3, line: 3106, column: 6)
!18015 = !DILocation(line: 3106, column: 10, scope: !18014)
!18016 = !DILocation(line: 3106, column: 19, scope: !18014)
!18017 = !DILocation(line: 3106, column: 6, scope: !17994)
!18018 = !DILocation(line: 3107, column: 13, scope: !18014)
!18019 = !DILocation(line: 3107, column: 3, scope: !18014)
!18020 = !DILocation(line: 3109, column: 6, scope: !18021)
!18021 = distinct !DILexicalBlock(scope: !17994, file: !3, line: 3109, column: 6)
!18022 = !DILocation(line: 3109, column: 10, scope: !18021)
!18023 = !DILocation(line: 3109, column: 19, scope: !18021)
!18024 = !DILocation(line: 3109, column: 6, scope: !17994)
!18025 = !DILocation(line: 3110, column: 13, scope: !18021)
!18026 = !DILocation(line: 3110, column: 3, scope: !18021)
!18027 = !DILocation(line: 3112, column: 6, scope: !18028)
!18028 = distinct !DILexicalBlock(scope: !17994, file: !3, line: 3112, column: 6)
!18029 = !DILocation(line: 3112, column: 10, scope: !18028)
!18030 = !DILocation(line: 3112, column: 19, scope: !18028)
!18031 = !DILocation(line: 3112, column: 6, scope: !17994)
!18032 = !DILocation(line: 3113, column: 13, scope: !18028)
!18033 = !DILocation(line: 3113, column: 3, scope: !18028)
!18034 = !DILocation(line: 3115, column: 6, scope: !18035)
!18035 = distinct !DILexicalBlock(scope: !17994, file: !3, line: 3115, column: 6)
!18036 = !DILocation(line: 3115, column: 10, scope: !18035)
!18037 = !DILocation(line: 3115, column: 19, scope: !18035)
!18038 = !DILocation(line: 3115, column: 6, scope: !17994)
!18039 = !DILocation(line: 3116, column: 13, scope: !18035)
!18040 = !DILocation(line: 3116, column: 3, scope: !18035)
!18041 = !DILocation(line: 3118, column: 6, scope: !18042)
!18042 = distinct !DILexicalBlock(scope: !17994, file: !3, line: 3118, column: 6)
!18043 = !DILocation(line: 3118, column: 10, scope: !18042)
!18044 = !DILocation(line: 3118, column: 19, scope: !18042)
!18045 = !DILocation(line: 3118, column: 6, scope: !17994)
!18046 = !DILocation(line: 3119, column: 13, scope: !18042)
!18047 = !DILocation(line: 3119, column: 3, scope: !18042)
!18048 = !DILocation(line: 3121, column: 6, scope: !18049)
!18049 = distinct !DILexicalBlock(scope: !17994, file: !3, line: 3121, column: 6)
!18050 = !DILocation(line: 3121, column: 10, scope: !18049)
!18051 = !DILocation(line: 3121, column: 19, scope: !18049)
!18052 = !DILocation(line: 3121, column: 6, scope: !17994)
!18053 = !DILocation(line: 3122, column: 13, scope: !18049)
!18054 = !DILocation(line: 3122, column: 3, scope: !18049)
!18055 = !DILocation(line: 3124, column: 6, scope: !18056)
!18056 = distinct !DILexicalBlock(scope: !17994, file: !3, line: 3124, column: 6)
!18057 = !DILocation(line: 3124, column: 10, scope: !18056)
!18058 = !DILocation(line: 3124, column: 19, scope: !18056)
!18059 = !DILocation(line: 3124, column: 6, scope: !17994)
!18060 = !DILocation(line: 3125, column: 13, scope: !18056)
!18061 = !DILocation(line: 3125, column: 3, scope: !18056)
!18062 = !DILocation(line: 3127, column: 6, scope: !18063)
!18063 = distinct !DILexicalBlock(scope: !17994, file: !3, line: 3127, column: 6)
!18064 = !DILocation(line: 3127, column: 10, scope: !18063)
!18065 = !DILocation(line: 3127, column: 19, scope: !18063)
!18066 = !DILocation(line: 3127, column: 6, scope: !17994)
!18067 = !DILocation(line: 3128, column: 13, scope: !18063)
!18068 = !DILocation(line: 3128, column: 3, scope: !18063)
!18069 = !DILocation(line: 3130, column: 6, scope: !18070)
!18070 = distinct !DILexicalBlock(scope: !17994, file: !3, line: 3130, column: 6)
!18071 = !DILocation(line: 3130, column: 10, scope: !18070)
!18072 = !DILocation(line: 3130, column: 19, scope: !18070)
!18073 = !DILocation(line: 3130, column: 6, scope: !17994)
!18074 = !DILocation(line: 3131, column: 13, scope: !18070)
!18075 = !DILocation(line: 3131, column: 3, scope: !18070)
!18076 = !DILocation(line: 3133, column: 10, scope: !17994)
!18077 = !DILocation(line: 3133, column: 14, scope: !17994)
!18078 = !DILocation(line: 3133, column: 23, scope: !17994)
!18079 = !DILocation(line: 3133, column: 2, scope: !17994)
!18080 = !DILocation(line: 3135, column: 13, scope: !18081)
!18081 = distinct !DILexicalBlock(scope: !17994, file: !3, line: 3133, column: 37)
!18082 = !DILocation(line: 3136, column: 3, scope: !18081)
!18083 = !DILocation(line: 3138, column: 13, scope: !18081)
!18084 = !DILocation(line: 3139, column: 3, scope: !18081)
!18085 = !DILocation(line: 3141, column: 13, scope: !18081)
!18086 = !DILocation(line: 3142, column: 3, scope: !18081)
!18087 = !DILocation(line: 3144, column: 13, scope: !18081)
!18088 = !DILocation(line: 3145, column: 3, scope: !18081)
!18089 = !DILocation(line: 3147, column: 13, scope: !18081)
!18090 = !DILocation(line: 3148, column: 3, scope: !18081)
!18091 = !DILocation(line: 3150, column: 13, scope: !18081)
!18092 = !DILocation(line: 3151, column: 3, scope: !18081)
!18093 = !DILocation(line: 3153, column: 13, scope: !18081)
!18094 = !DILocation(line: 3154, column: 3, scope: !18081)
!18095 = !DILocation(line: 3156, column: 13, scope: !18081)
!18096 = !DILocation(line: 3157, column: 3, scope: !18081)
!18097 = !DILocation(line: 3159, column: 13, scope: !18081)
!18098 = !DILocation(line: 3160, column: 3, scope: !18081)
!18099 = !DILocation(line: 3162, column: 3, scope: !18081)
!18100 = !DILocation(line: 3165, column: 18, scope: !17994)
!18101 = !DILocation(line: 3165, column: 51, scope: !17994)
!18102 = !DILocation(line: 3165, column: 2, scope: !17994)
!18103 = !DILocation(line: 3166, column: 1, scope: !17994)
!18104 = distinct !DISubprogram(name: "r8153b_green_en", scope: !3, file: !3, line: 3168, type: !10402, scopeLine: 3169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18105 = !DILocalVariable(name: "tp", arg: 1, scope: !18104, file: !3, line: 3168, type: !10280)
!18106 = !DILocation(line: 3168, column: 43, scope: !18104)
!18107 = !DILocalVariable(name: "enable", arg: 2, scope: !18104, file: !3, line: 3168, type: !617)
!18108 = !DILocation(line: 3168, column: 52, scope: !18104)
!18109 = !DILocalVariable(name: "data", scope: !18104, file: !3, line: 3170, type: !1115)
!18110 = !DILocation(line: 3170, column: 6, scope: !18104)
!18111 = !DILocation(line: 3172, column: 6, scope: !18112)
!18112 = distinct !DILexicalBlock(scope: !18104, file: !3, line: 3172, column: 6)
!18113 = !DILocation(line: 3172, column: 6, scope: !18104)
!18114 = !DILocation(line: 3173, column: 14, scope: !18115)
!18115 = distinct !DILexicalBlock(scope: !18112, file: !3, line: 3172, column: 14)
!18116 = !DILocation(line: 3173, column: 3, scope: !18115)
!18117 = !DILocation(line: 3174, column: 14, scope: !18115)
!18118 = !DILocation(line: 3174, column: 3, scope: !18115)
!18119 = !DILocation(line: 3175, column: 14, scope: !18115)
!18120 = !DILocation(line: 3175, column: 3, scope: !18115)
!18121 = !DILocation(line: 3176, column: 2, scope: !18115)
!18122 = !DILocation(line: 3177, column: 14, scope: !18123)
!18123 = distinct !DILexicalBlock(scope: !18112, file: !3, line: 3176, column: 9)
!18124 = !DILocation(line: 3177, column: 3, scope: !18123)
!18125 = !DILocation(line: 3178, column: 14, scope: !18123)
!18126 = !DILocation(line: 3178, column: 3, scope: !18123)
!18127 = !DILocation(line: 3179, column: 14, scope: !18123)
!18128 = !DILocation(line: 3179, column: 3, scope: !18123)
!18129 = !DILocation(line: 3182, column: 19, scope: !18104)
!18130 = !DILocation(line: 3182, column: 9, scope: !18104)
!18131 = !DILocation(line: 3182, column: 7, scope: !18104)
!18132 = !DILocation(line: 3183, column: 7, scope: !18104)
!18133 = !DILocation(line: 3184, column: 13, scope: !18104)
!18134 = !DILocation(line: 3184, column: 33, scope: !18104)
!18135 = !DILocation(line: 3184, column: 2, scope: !18104)
!18136 = !DILocation(line: 3186, column: 23, scope: !18104)
!18137 = !DILocation(line: 3186, column: 2, scope: !18104)
!18138 = !DILocation(line: 3186, column: 6, scope: !18104)
!18139 = !DILocation(line: 3186, column: 15, scope: !18104)
!18140 = !DILocation(line: 3186, column: 21, scope: !18104)
!18141 = !DILocation(line: 3187, column: 1, scope: !18104)
!18142 = distinct !DISubprogram(name: "sram_read", scope: !3, file: !3, line: 1352, type: !14451, scopeLine: 1353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18143 = !DILocalVariable(name: "tp", arg: 1, scope: !18142, file: !3, line: 1352, type: !10280)
!18144 = !DILocation(line: 1352, column: 36, scope: !18142)
!18145 = !DILocalVariable(name: "addr", arg: 2, scope: !18142, file: !3, line: 1352, type: !1115)
!18146 = !DILocation(line: 1352, column: 44, scope: !18142)
!18147 = !DILocation(line: 1354, column: 16, scope: !18142)
!18148 = !DILocation(line: 1354, column: 35, scope: !18142)
!18149 = !DILocation(line: 1354, column: 2, scope: !18142)
!18150 = !DILocation(line: 1355, column: 22, scope: !18142)
!18151 = !DILocation(line: 1355, column: 9, scope: !18142)
!18152 = !DILocation(line: 1355, column: 2, scope: !18142)
!18153 = distinct !DISubprogram(name: "r8152_efuse_read", scope: !3, file: !3, line: 4601, type: !18154, scopeLine: 4602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18154 = !DISubroutineType(types: !18155)
!18155 = !{!784, !10280, !1474}
!18156 = !DILocalVariable(name: "tp", arg: 1, scope: !18153, file: !3, line: 4601, type: !10280)
!18157 = !DILocation(line: 4601, column: 43, scope: !18153)
!18158 = !DILocalVariable(name: "addr", arg: 2, scope: !18153, file: !3, line: 4601, type: !1474)
!18159 = !DILocation(line: 4601, column: 50, scope: !18153)
!18160 = !DILocalVariable(name: "ocp_data", scope: !18153, file: !3, line: 4603, type: !784)
!18161 = !DILocation(line: 4603, column: 6, scope: !18153)
!18162 = !DILocation(line: 4605, column: 17, scope: !18153)
!18163 = !DILocation(line: 4605, column: 67, scope: !18153)
!18164 = !DILocation(line: 4605, column: 65, scope: !18153)
!18165 = !DILocation(line: 4605, column: 50, scope: !18153)
!18166 = !DILocation(line: 4605, column: 2, scope: !18153)
!18167 = !DILocation(line: 4606, column: 27, scope: !18153)
!18168 = !DILocation(line: 4606, column: 13, scope: !18153)
!18169 = !DILocation(line: 4606, column: 11, scope: !18153)
!18170 = !DILocation(line: 4607, column: 14, scope: !18153)
!18171 = !DILocation(line: 4607, column: 23, scope: !18153)
!18172 = !DILocation(line: 4607, column: 43, scope: !18153)
!18173 = !DILocation(line: 4607, column: 13, scope: !18153)
!18174 = !DILocation(line: 4607, column: 11, scope: !18153)
!18175 = !DILocation(line: 4608, column: 28, scope: !18153)
!18176 = !DILocation(line: 4608, column: 14, scope: !18153)
!18177 = !DILocation(line: 4608, column: 11, scope: !18153)
!18178 = !DILocation(line: 4610, column: 9, scope: !18153)
!18179 = !DILocation(line: 4610, column: 2, scope: !18153)
!18180 = distinct !DISubprogram(name: "r8153_pre_firmware_1", scope: !3, file: !3, line: 4396, type: !10384, scopeLine: 4397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18181 = !DILocalVariable(name: "tp", arg: 1, scope: !18180, file: !3, line: 4396, type: !10280)
!18182 = !DILocation(line: 4396, column: 47, scope: !18180)
!18183 = !DILocalVariable(name: "i", scope: !18180, file: !3, line: 4398, type: !72)
!18184 = !DILocation(line: 4398, column: 6, scope: !18180)
!18185 = !DILocation(line: 4401, column: 9, scope: !18186)
!18186 = distinct !DILexicalBlock(scope: !18180, file: !3, line: 4401, column: 2)
!18187 = !DILocation(line: 4401, column: 7, scope: !18186)
!18188 = !DILocation(line: 4401, column: 14, scope: !18189)
!18189 = distinct !DILexicalBlock(scope: !18186, file: !3, line: 4401, column: 2)
!18190 = !DILocation(line: 4401, column: 16, scope: !18189)
!18191 = !DILocation(line: 4401, column: 2, scope: !18186)
!18192 = !DILocalVariable(name: "ocp_data", scope: !18193, file: !3, line: 4402, type: !784)
!18193 = distinct !DILexicalBlock(scope: !18189, file: !3, line: 4401, column: 28)
!18194 = !DILocation(line: 4402, column: 7, scope: !18193)
!18195 = !DILocation(line: 4402, column: 32, scope: !18193)
!18196 = !DILocation(line: 4402, column: 18, scope: !18193)
!18197 = !DILocation(line: 4404, column: 9, scope: !18198)
!18198 = distinct !DILexicalBlock(scope: !18193, file: !3, line: 4404, column: 7)
!18199 = !DILocation(line: 4404, column: 18, scope: !18198)
!18200 = !DILocation(line: 4404, column: 7, scope: !18193)
!18201 = !DILocation(line: 4405, column: 4, scope: !18198)
!18202 = !DILocation(line: 4406, column: 3, scope: !18193)
!18203 = !DILocation(line: 4407, column: 2, scope: !18193)
!18204 = !DILocation(line: 4401, column: 24, scope: !18189)
!18205 = !DILocation(line: 4401, column: 2, scope: !18189)
!18206 = distinct !{!18206, !18191, !18207}
!18207 = !DILocation(line: 4407, column: 2, scope: !18186)
!18208 = !DILocation(line: 4409, column: 2, scope: !18180)
!18209 = distinct !DISubprogram(name: "r8153_post_firmware_1", scope: !3, file: !3, line: 4412, type: !10384, scopeLine: 4413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18210 = !DILocalVariable(name: "tp", arg: 1, scope: !18209, file: !3, line: 4412, type: !10280)
!18211 = !DILocation(line: 4412, column: 48, scope: !18209)
!18212 = !DILocation(line: 4415, column: 20, scope: !18213)
!18213 = distinct !DILexicalBlock(scope: !18209, file: !3, line: 4415, column: 6)
!18214 = !DILocation(line: 4415, column: 6, scope: !18213)
!18215 = !DILocation(line: 4415, column: 49, scope: !18213)
!18216 = !DILocation(line: 4415, column: 6, scope: !18209)
!18217 = !DILocation(line: 4416, column: 18, scope: !18213)
!18218 = !DILocation(line: 4416, column: 3, scope: !18213)
!18219 = !DILocation(line: 4419, column: 17, scope: !18209)
!18220 = !DILocation(line: 4419, column: 2, scope: !18209)
!18221 = !DILocation(line: 4421, column: 2, scope: !18209)
!18222 = distinct !DISubprogram(name: "r8153_pre_firmware_2", scope: !3, file: !3, line: 4424, type: !10384, scopeLine: 4425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18223 = !DILocalVariable(name: "tp", arg: 1, scope: !18222, file: !3, line: 4424, type: !10280)
!18224 = !DILocation(line: 4424, column: 47, scope: !18222)
!18225 = !DILocalVariable(name: "ocp_data", scope: !18222, file: !3, line: 4426, type: !784)
!18226 = !DILocation(line: 4426, column: 6, scope: !18222)
!18227 = !DILocation(line: 4428, column: 23, scope: !18222)
!18228 = !DILocation(line: 4428, column: 2, scope: !18222)
!18229 = !DILocation(line: 4430, column: 27, scope: !18222)
!18230 = !DILocation(line: 4430, column: 13, scope: !18222)
!18231 = !DILocation(line: 4430, column: 11, scope: !18222)
!18232 = !DILocation(line: 4431, column: 11, scope: !18222)
!18233 = !DILocation(line: 4432, column: 17, scope: !18222)
!18234 = !DILocation(line: 4432, column: 51, scope: !18222)
!18235 = !DILocation(line: 4432, column: 2, scope: !18222)
!18236 = !DILocation(line: 4434, column: 2, scope: !18222)
!18237 = distinct !DISubprogram(name: "r8153_post_firmware_2", scope: !3, file: !3, line: 4437, type: !10384, scopeLine: 4438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18238 = !DILocalVariable(name: "tp", arg: 1, scope: !18237, file: !3, line: 4437, type: !10280)
!18239 = !DILocation(line: 4437, column: 48, scope: !18237)
!18240 = !DILocalVariable(name: "ocp_data", scope: !18237, file: !3, line: 4439, type: !784)
!18241 = !DILocation(line: 4439, column: 6, scope: !18237)
!18242 = !DILocation(line: 4442, column: 20, scope: !18243)
!18243 = distinct !DILexicalBlock(scope: !18237, file: !3, line: 4442, column: 6)
!18244 = !DILocation(line: 4442, column: 6, scope: !18243)
!18245 = !DILocation(line: 4442, column: 49, scope: !18243)
!18246 = !DILocation(line: 4442, column: 6, scope: !18237)
!18247 = !DILocation(line: 4443, column: 28, scope: !18248)
!18248 = distinct !DILexicalBlock(scope: !18243, file: !3, line: 4442, column: 64)
!18249 = !DILocation(line: 4443, column: 14, scope: !18248)
!18250 = !DILocation(line: 4443, column: 12, scope: !18248)
!18251 = !DILocation(line: 4444, column: 12, scope: !18248)
!18252 = !DILocation(line: 4445, column: 18, scope: !18248)
!18253 = !DILocation(line: 4445, column: 47, scope: !18248)
!18254 = !DILocation(line: 4445, column: 3, scope: !18248)
!18255 = !DILocation(line: 4446, column: 2, scope: !18248)
!18256 = !DILocation(line: 4449, column: 17, scope: !18237)
!18257 = !DILocation(line: 4449, column: 2, scope: !18237)
!18258 = !DILocation(line: 4452, column: 17, scope: !18237)
!18259 = !DILocation(line: 4452, column: 2, scope: !18237)
!18260 = !DILocation(line: 4454, column: 27, scope: !18237)
!18261 = !DILocation(line: 4454, column: 13, scope: !18237)
!18262 = !DILocation(line: 4454, column: 11, scope: !18237)
!18263 = !DILocation(line: 4455, column: 11, scope: !18237)
!18264 = !DILocation(line: 4456, column: 17, scope: !18237)
!18265 = !DILocation(line: 4456, column: 51, scope: !18237)
!18266 = !DILocation(line: 4456, column: 2, scope: !18237)
!18267 = !DILocation(line: 4458, column: 27, scope: !18237)
!18268 = !DILocation(line: 4458, column: 13, scope: !18237)
!18269 = !DILocation(line: 4458, column: 11, scope: !18237)
!18270 = !DILocation(line: 4459, column: 11, scope: !18237)
!18271 = !DILocation(line: 4460, column: 17, scope: !18237)
!18272 = !DILocation(line: 4460, column: 48, scope: !18237)
!18273 = !DILocation(line: 4460, column: 2, scope: !18237)
!18274 = !DILocation(line: 4462, column: 2, scope: !18237)
!18275 = distinct !DISubprogram(name: "r8153_post_firmware_3", scope: !3, file: !3, line: 4465, type: !10384, scopeLine: 4466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18276 = !DILocalVariable(name: "tp", arg: 1, scope: !18275, file: !3, line: 4465, type: !10280)
!18277 = !DILocation(line: 4465, column: 48, scope: !18275)
!18278 = !DILocalVariable(name: "ocp_data", scope: !18275, file: !3, line: 4467, type: !784)
!18279 = !DILocation(line: 4467, column: 6, scope: !18275)
!18280 = !DILocation(line: 4469, column: 27, scope: !18275)
!18281 = !DILocation(line: 4469, column: 13, scope: !18275)
!18282 = !DILocation(line: 4469, column: 11, scope: !18275)
!18283 = !DILocation(line: 4470, column: 11, scope: !18275)
!18284 = !DILocation(line: 4471, column: 17, scope: !18275)
!18285 = !DILocation(line: 4471, column: 48, scope: !18275)
!18286 = !DILocation(line: 4471, column: 2, scope: !18275)
!18287 = !DILocation(line: 4473, column: 27, scope: !18275)
!18288 = !DILocation(line: 4473, column: 13, scope: !18275)
!18289 = !DILocation(line: 4473, column: 11, scope: !18275)
!18290 = !DILocation(line: 4474, column: 11, scope: !18275)
!18291 = !DILocation(line: 4475, column: 17, scope: !18275)
!18292 = !DILocation(line: 4475, column: 51, scope: !18275)
!18293 = !DILocation(line: 4475, column: 2, scope: !18275)
!18294 = !DILocation(line: 4477, column: 2, scope: !18275)
!18295 = distinct !DISubprogram(name: "r8153b_pre_firmware_1", scope: !3, file: !3, line: 4480, type: !10384, scopeLine: 4481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18296 = !DILocalVariable(name: "tp", arg: 1, scope: !18295, file: !3, line: 4480, type: !10280)
!18297 = !DILocation(line: 4480, column: 48, scope: !18295)
!18298 = !DILocation(line: 4483, column: 17, scope: !18295)
!18299 = !DILocation(line: 4483, column: 2, scope: !18295)
!18300 = !DILocation(line: 4486, column: 2, scope: !18295)
!18301 = distinct !DISubprogram(name: "r8153b_post_firmware_1", scope: !3, file: !3, line: 4489, type: !10384, scopeLine: 4490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18302 = !DILocalVariable(name: "tp", arg: 1, scope: !18301, file: !3, line: 4489, type: !10280)
!18303 = !DILocation(line: 4489, column: 49, scope: !18301)
!18304 = !DILocalVariable(name: "ocp_data", scope: !18301, file: !3, line: 4491, type: !784)
!18305 = !DILocation(line: 4491, column: 6, scope: !18301)
!18306 = !DILocation(line: 4494, column: 27, scope: !18301)
!18307 = !DILocation(line: 4494, column: 13, scope: !18301)
!18308 = !DILocation(line: 4494, column: 11, scope: !18301)
!18309 = !DILocation(line: 4495, column: 6, scope: !18310)
!18310 = distinct !DILexicalBlock(scope: !18301, file: !3, line: 4495, column: 6)
!18311 = !DILocation(line: 4495, column: 15, scope: !18310)
!18312 = !DILocation(line: 4495, column: 6, scope: !18301)
!18313 = !DILocation(line: 4496, column: 28, scope: !18314)
!18314 = distinct !DILexicalBlock(scope: !18310, file: !3, line: 4495, column: 27)
!18315 = !DILocation(line: 4496, column: 14, scope: !18314)
!18316 = !DILocation(line: 4496, column: 12, scope: !18314)
!18317 = !DILocation(line: 4497, column: 12, scope: !18314)
!18318 = !DILocation(line: 4498, column: 18, scope: !18314)
!18319 = !DILocation(line: 4498, column: 47, scope: !18314)
!18320 = !DILocation(line: 4498, column: 3, scope: !18314)
!18321 = !DILocation(line: 4499, column: 2, scope: !18314)
!18322 = !DILocation(line: 4501, column: 27, scope: !18301)
!18323 = !DILocation(line: 4501, column: 13, scope: !18301)
!18324 = !DILocation(line: 4501, column: 11, scope: !18301)
!18325 = !DILocation(line: 4502, column: 11, scope: !18301)
!18326 = !DILocation(line: 4503, column: 17, scope: !18301)
!18327 = !DILocation(line: 4503, column: 48, scope: !18301)
!18328 = !DILocation(line: 4503, column: 2, scope: !18301)
!18329 = !DILocation(line: 4505, column: 27, scope: !18301)
!18330 = !DILocation(line: 4505, column: 13, scope: !18301)
!18331 = !DILocation(line: 4505, column: 11, scope: !18301)
!18332 = !DILocation(line: 4506, column: 11, scope: !18301)
!18333 = !DILocation(line: 4507, column: 17, scope: !18301)
!18334 = !DILocation(line: 4507, column: 48, scope: !18301)
!18335 = !DILocation(line: 4507, column: 2, scope: !18301)
!18336 = !DILocation(line: 4509, column: 27, scope: !18301)
!18337 = !DILocation(line: 4509, column: 13, scope: !18301)
!18338 = !DILocation(line: 4509, column: 11, scope: !18301)
!18339 = !DILocation(line: 4510, column: 11, scope: !18301)
!18340 = !DILocation(line: 4511, column: 17, scope: !18301)
!18341 = !DILocation(line: 4511, column: 51, scope: !18301)
!18342 = !DILocation(line: 4511, column: 2, scope: !18301)
!18343 = !DILocation(line: 4513, column: 2, scope: !18301)
!18344 = distinct !DISubprogram(name: "netif_running", scope: !71, file: !71, line: 3556, type: !18345, scopeLine: 3557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18345 = !DISubroutineType(types: !18346)
!18346 = !{!617, !2825}
!18347 = !DILocalVariable(name: "dev", arg: 1, scope: !18344, file: !71, line: 3556, type: !2825)
!18348 = !DILocation(line: 3556, column: 59, scope: !18344)
!18349 = !DILocation(line: 3558, column: 39, scope: !18344)
!18350 = !DILocation(line: 3558, column: 44, scope: !18344)
!18351 = !DILocation(line: 3558, column: 9, scope: !18344)
!18352 = !DILocation(line: 3558, column: 2, scope: !18344)
!18353 = distinct !DISubprogram(name: "schedule_delayed_work", scope: !1885, file: !1885, line: 623, type: !18354, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18354 = !DISubroutineType(types: !18355)
!18355 = !{!617, !12620, !394}
!18356 = !DILocalVariable(name: "dwork", arg: 1, scope: !18353, file: !1885, line: 623, type: !12620)
!18357 = !DILocation(line: 623, column: 63, scope: !18353)
!18358 = !DILocalVariable(name: "delay", arg: 2, scope: !18353, file: !1885, line: 624, type: !394)
!18359 = !DILocation(line: 624, column: 21, scope: !18353)
!18360 = !DILocation(line: 626, column: 28, scope: !18353)
!18361 = !DILocation(line: 626, column: 39, scope: !18353)
!18362 = !DILocation(line: 626, column: 46, scope: !18353)
!18363 = !DILocation(line: 626, column: 9, scope: !18353)
!18364 = !DILocation(line: 626, column: 2, scope: !18353)
!18365 = distinct !DISubprogram(name: "test_and_clear_bit", scope: !12354, file: !12354, line: 81, type: !18366, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18366 = !DISubroutineType(types: !18367)
!18367 = !{!617, !590, !12357}
!18368 = !DILocalVariable(name: "nr", arg: 1, scope: !18369, file: !12360, line: 160, type: !590)
!18369 = distinct !DISubprogram(name: "arch_test_and_clear_bit", scope: !12360, file: !12360, line: 160, type: !18366, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18370 = !DILocation(line: 160, column: 30, scope: !18369, inlinedAt: !18371)
!18371 = distinct !DILocation(line: 84, column: 9, scope: !18365)
!18372 = !DILocalVariable(name: "addr", arg: 2, scope: !18369, file: !12360, line: 160, type: !12357)
!18373 = !DILocation(line: 160, column: 58, scope: !18369, inlinedAt: !18371)
!18374 = !DILocalVariable(name: "c", scope: !18375, file: !12360, line: 162, type: !617)
!18375 = distinct !DILexicalBlock(scope: !18369, file: !12360, line: 162, column: 9)
!18376 = !DILocation(line: 162, column: 9, scope: !18375, inlinedAt: !18371)
!18377 = !DILocation(line: 99, column: 79, scope: !15954, inlinedAt: !18378)
!18378 = distinct !DILocation(line: 83, column: 2, scope: !18365)
!18379 = !DILocation(line: 99, column: 89, scope: !15954, inlinedAt: !18378)
!18380 = !DILocalVariable(name: "nr", arg: 1, scope: !18365, file: !12354, line: 81, type: !590)
!18381 = !DILocation(line: 81, column: 44, scope: !18365)
!18382 = !DILocalVariable(name: "addr", arg: 2, scope: !18365, file: !12354, line: 81, type: !12357)
!18383 = !DILocation(line: 81, column: 72, scope: !18365)
!18384 = !DILocation(line: 83, column: 31, scope: !18365)
!18385 = !DILocation(line: 83, column: 38, scope: !18365)
!18386 = !DILocation(line: 83, column: 36, scope: !18365)
!18387 = !DILocation(line: 101, column: 20, scope: !15954, inlinedAt: !18378)
!18388 = !DILocation(line: 101, column: 23, scope: !15954, inlinedAt: !18378)
!18389 = !DILocation(line: 101, column: 2, scope: !15954, inlinedAt: !18378)
!18390 = !DILocation(line: 102, column: 2, scope: !15954, inlinedAt: !18378)
!18391 = !DILocation(line: 84, column: 33, scope: !18365)
!18392 = !DILocation(line: 84, column: 37, scope: !18365)
!18393 = !{i32 -2147015894, i32 -2147015798}
!18394 = !DILocation(line: 84, column: 2, scope: !18365)
!18395 = distinct !DISubprogram(name: "set_carrier", scope: !3, file: !3, line: 5098, type: !10380, scopeLine: 5099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18396 = !DILocalVariable(name: "tp", arg: 1, scope: !18395, file: !3, line: 5098, type: !10280)
!18397 = !DILocation(line: 5098, column: 39, scope: !18395)
!18398 = !DILocalVariable(name: "netdev", scope: !18395, file: !3, line: 5100, type: !372)
!18399 = !DILocation(line: 5100, column: 21, scope: !18395)
!18400 = !DILocation(line: 5100, column: 30, scope: !18395)
!18401 = !DILocation(line: 5100, column: 34, scope: !18395)
!18402 = !DILocalVariable(name: "napi", scope: !18395, file: !3, line: 5101, type: !10297)
!18403 = !DILocation(line: 5101, column: 22, scope: !18395)
!18404 = !DILocation(line: 5101, column: 30, scope: !18395)
!18405 = !DILocation(line: 5101, column: 34, scope: !18395)
!18406 = !DILocalVariable(name: "speed", scope: !18395, file: !3, line: 5102, type: !1474)
!18407 = !DILocation(line: 5102, column: 5, scope: !18395)
!18408 = !DILocation(line: 5104, column: 28, scope: !18395)
!18409 = !DILocation(line: 5104, column: 10, scope: !18395)
!18410 = !DILocation(line: 5104, column: 8, scope: !18395)
!18411 = !DILocation(line: 5106, column: 6, scope: !18412)
!18412 = distinct !DILexicalBlock(scope: !18395, file: !3, line: 5106, column: 6)
!18413 = !DILocation(line: 5106, column: 12, scope: !18412)
!18414 = !DILocation(line: 5106, column: 6, scope: !18395)
!18415 = !DILocation(line: 5107, column: 25, scope: !18416)
!18416 = distinct !DILexicalBlock(scope: !18417, file: !3, line: 5107, column: 7)
!18417 = distinct !DILexicalBlock(scope: !18412, file: !3, line: 5106, column: 27)
!18418 = !DILocation(line: 5107, column: 8, scope: !18416)
!18419 = !DILocation(line: 5107, column: 7, scope: !18417)
!18420 = !DILocation(line: 5108, column: 4, scope: !18421)
!18421 = distinct !DILexicalBlock(scope: !18416, file: !3, line: 5107, column: 34)
!18422 = !DILocation(line: 5108, column: 8, scope: !18421)
!18423 = !DILocation(line: 5108, column: 16, scope: !18421)
!18424 = !DILocation(line: 5108, column: 23, scope: !18421)
!18425 = !DILocation(line: 5109, column: 21, scope: !18421)
!18426 = !DILocation(line: 5109, column: 4, scope: !18421)
!18427 = !DILocation(line: 5110, column: 17, scope: !18421)
!18428 = !DILocation(line: 5110, column: 4, scope: !18421)
!18429 = !DILocation(line: 5111, column: 21, scope: !18421)
!18430 = !DILocation(line: 5111, column: 4, scope: !18421)
!18431 = !DILocation(line: 5112, column: 17, scope: !18421)
!18432 = !DILocation(line: 5112, column: 4, scope: !18421)
!18433 = !DILocation(line: 5113, column: 36, scope: !18421)
!18434 = !DILocation(line: 5113, column: 40, scope: !18421)
!18435 = !DILocation(line: 5113, column: 4, scope: !18421)
!18436 = !DILocation(line: 5114, column: 25, scope: !18421)
!18437 = !DILocation(line: 5114, column: 4, scope: !18421)
!18438 = !DILocation(line: 5115, column: 17, scope: !18421)
!18439 = !DILocation(line: 5115, column: 21, scope: !18421)
!18440 = !DILocation(line: 5115, column: 4, scope: !18421)
!18441 = !DILocation(line: 5116, column: 21, scope: !18421)
!18442 = !DILocation(line: 5116, column: 4, scope: !18421)
!18443 = !DILocation(line: 5117, column: 4, scope: !18421)
!18444 = !DILocation(line: 5117, column: 4, scope: !18445)
!18445 = distinct !DILexicalBlock(scope: !18446, file: !3, line: 5117, column: 4)
!18446 = distinct !DILexicalBlock(scope: !18421, file: !3, line: 5117, column: 4)
!18447 = !DILocation(line: 5117, column: 4, scope: !18446)
!18448 = !DILocation(line: 5118, column: 3, scope: !18421)
!18449 = !DILocation(line: 5118, column: 34, scope: !18450)
!18450 = distinct !DILexicalBlock(scope: !18416, file: !3, line: 5118, column: 14)
!18451 = !DILocation(line: 5118, column: 14, scope: !18450)
!18452 = !DILocation(line: 5118, column: 42, scope: !18450)
!18453 = !DILocation(line: 5119, column: 22, scope: !18450)
!18454 = !DILocation(line: 5119, column: 26, scope: !18450)
!18455 = !DILocation(line: 5119, column: 7, scope: !18450)
!18456 = !DILocation(line: 5119, column: 38, scope: !18450)
!18457 = !DILocation(line: 5119, column: 42, scope: !18450)
!18458 = !DILocation(line: 5119, column: 36, scope: !18450)
!18459 = !DILocation(line: 5118, column: 14, scope: !18416)
!18460 = !DILocation(line: 5120, column: 21, scope: !18461)
!18461 = distinct !DILexicalBlock(scope: !18450, file: !3, line: 5119, column: 51)
!18462 = !DILocation(line: 5120, column: 4, scope: !18461)
!18463 = !DILocation(line: 5121, column: 3, scope: !18461)
!18464 = !DILocation(line: 5122, column: 2, scope: !18417)
!18465 = !DILocation(line: 5123, column: 24, scope: !18466)
!18466 = distinct !DILexicalBlock(scope: !18467, file: !3, line: 5123, column: 7)
!18467 = distinct !DILexicalBlock(scope: !18412, file: !3, line: 5122, column: 9)
!18468 = !DILocation(line: 5123, column: 7, scope: !18466)
!18469 = !DILocation(line: 5123, column: 7, scope: !18467)
!18470 = !DILocation(line: 5124, column: 22, scope: !18471)
!18471 = distinct !DILexicalBlock(scope: !18466, file: !3, line: 5123, column: 33)
!18472 = !DILocation(line: 5124, column: 4, scope: !18471)
!18473 = !DILocation(line: 5125, column: 21, scope: !18471)
!18474 = !DILocation(line: 5125, column: 25, scope: !18471)
!18475 = !DILocation(line: 5125, column: 4, scope: !18471)
!18476 = !DILocation(line: 5126, column: 17, scope: !18471)
!18477 = !DILocation(line: 5126, column: 4, scope: !18471)
!18478 = !DILocation(line: 5127, column: 4, scope: !18471)
!18479 = !DILocation(line: 5127, column: 8, scope: !18471)
!18480 = !DILocation(line: 5127, column: 16, scope: !18471)
!18481 = !DILocation(line: 5127, column: 24, scope: !18471)
!18482 = !DILocation(line: 5128, column: 16, scope: !18471)
!18483 = !DILocation(line: 5128, column: 4, scope: !18471)
!18484 = !DILocation(line: 5129, column: 20, scope: !18471)
!18485 = !DILocation(line: 5129, column: 24, scope: !18471)
!18486 = !DILocation(line: 5129, column: 4, scope: !18471)
!18487 = !DILocation(line: 5130, column: 4, scope: !18471)
!18488 = !DILocation(line: 5130, column: 4, scope: !18489)
!18489 = distinct !DILexicalBlock(scope: !18490, file: !3, line: 5130, column: 4)
!18490 = distinct !DILexicalBlock(scope: !18471, file: !3, line: 5130, column: 4)
!18491 = !DILocation(line: 5130, column: 4, scope: !18490)
!18492 = !DILocation(line: 5131, column: 3, scope: !18471)
!18493 = !DILocation(line: 5133, column: 1, scope: !18395)
!18494 = distinct !DISubprogram(name: "_rtl8152_set_rx_mode", scope: !3, file: !3, line: 2528, type: !488, scopeLine: 2529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18495 = !DILocalVariable(name: "netdev", arg: 1, scope: !18494, file: !3, line: 2528, type: !372)
!18496 = !DILocation(line: 2528, column: 53, scope: !18494)
!18497 = !DILocalVariable(name: "tp", scope: !18494, file: !3, line: 2530, type: !10280)
!18498 = !DILocation(line: 2530, column: 16, scope: !18494)
!18499 = !DILocation(line: 2530, column: 33, scope: !18494)
!18500 = !DILocation(line: 2530, column: 21, scope: !18494)
!18501 = !DILocalVariable(name: "mc_filter", scope: !18494, file: !3, line: 2531, type: !18502)
!18502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !784, size: 64, elements: !555)
!18503 = !DILocation(line: 2531, column: 6, scope: !18494)
!18504 = !DILocalVariable(name: "tmp", scope: !18494, file: !3, line: 2532, type: !18505)
!18505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9980, size: 64, elements: !555)
!18506 = !DILocation(line: 2532, column: 9, scope: !18494)
!18507 = !DILocalVariable(name: "ocp_data", scope: !18494, file: !3, line: 2533, type: !784)
!18508 = !DILocation(line: 2533, column: 6, scope: !18494)
!18509 = !DILocation(line: 2535, column: 19, scope: !18494)
!18510 = !DILocation(line: 2535, column: 2, scope: !18494)
!18511 = !DILocation(line: 2536, column: 28, scope: !18494)
!18512 = !DILocation(line: 2536, column: 13, scope: !18494)
!18513 = !DILocation(line: 2536, column: 11, scope: !18494)
!18514 = !DILocation(line: 2537, column: 11, scope: !18494)
!18515 = !DILocation(line: 2538, column: 11, scope: !18494)
!18516 = !DILocation(line: 2540, column: 6, scope: !18517)
!18517 = distinct !DILexicalBlock(scope: !18494, file: !3, line: 2540, column: 6)
!18518 = !DILocation(line: 2540, column: 14, scope: !18517)
!18519 = !DILocation(line: 2540, column: 20, scope: !18517)
!18520 = !DILocation(line: 2540, column: 6, scope: !18494)
!18521 = !DILocation(line: 2542, column: 3, scope: !18522)
!18522 = distinct !DILexicalBlock(scope: !18517, file: !3, line: 2540, column: 35)
!18523 = !DILocation(line: 2542, column: 3, scope: !18524)
!18524 = distinct !DILexicalBlock(scope: !18525, file: !3, line: 2542, column: 3)
!18525 = distinct !DILexicalBlock(scope: !18522, file: !3, line: 2542, column: 3)
!18526 = !DILocation(line: 2542, column: 3, scope: !18525)
!18527 = !DILocation(line: 2543, column: 12, scope: !18522)
!18528 = !DILocation(line: 2544, column: 3, scope: !18522)
!18529 = !DILocation(line: 2544, column: 16, scope: !18522)
!18530 = !DILocation(line: 2545, column: 3, scope: !18522)
!18531 = !DILocation(line: 2545, column: 16, scope: !18522)
!18532 = !DILocation(line: 2546, column: 2, scope: !18522)
!18533 = !DILocation(line: 2546, column: 14, scope: !18534)
!18534 = distinct !DILexicalBlock(scope: !18517, file: !3, line: 2546, column: 13)
!18535 = !DILocation(line: 2546, column: 38, scope: !18534)
!18536 = !DILocation(line: 2546, column: 64, scope: !18534)
!18537 = !DILocation(line: 2547, column: 7, scope: !18534)
!18538 = !DILocation(line: 2547, column: 15, scope: !18534)
!18539 = !DILocation(line: 2547, column: 21, scope: !18534)
!18540 = !DILocation(line: 2546, column: 13, scope: !18517)
!18541 = !DILocation(line: 2549, column: 12, scope: !18542)
!18542 = distinct !DILexicalBlock(scope: !18534, file: !3, line: 2547, column: 38)
!18543 = !DILocation(line: 2550, column: 3, scope: !18542)
!18544 = !DILocation(line: 2550, column: 16, scope: !18542)
!18545 = !DILocation(line: 2551, column: 3, scope: !18542)
!18546 = !DILocation(line: 2551, column: 16, scope: !18542)
!18547 = !DILocation(line: 2552, column: 2, scope: !18542)
!18548 = !DILocalVariable(name: "ha", scope: !18549, file: !3, line: 2553, type: !10531)
!18549 = distinct !DILexicalBlock(scope: !18534, file: !3, line: 2552, column: 9)
!18550 = !DILocation(line: 2553, column: 26, scope: !18549)
!18551 = !DILocation(line: 2555, column: 3, scope: !18549)
!18552 = !DILocation(line: 2555, column: 16, scope: !18549)
!18553 = !DILocation(line: 2556, column: 3, scope: !18549)
!18554 = !DILocation(line: 2556, column: 16, scope: !18549)
!18555 = !DILocalVariable(name: "__mptr", scope: !18556, file: !3, line: 2557, type: !647)
!18556 = distinct !DILexicalBlock(scope: !18557, file: !3, line: 2557, column: 3)
!18557 = distinct !DILexicalBlock(scope: !18549, file: !3, line: 2557, column: 3)
!18558 = !DILocation(line: 2557, column: 3, scope: !18556)
!18559 = !DILocation(line: 2557, column: 3, scope: !18560)
!18560 = distinct !DILexicalBlock(scope: !18556, file: !3, line: 2557, column: 3)
!18561 = !DILocation(line: 2557, column: 3, scope: !18557)
!18562 = !DILocation(line: 2557, column: 3, scope: !18563)
!18563 = distinct !DILexicalBlock(scope: !18557, file: !3, line: 2557, column: 3)
!18564 = !DILocalVariable(name: "bit_nr", scope: !18565, file: !3, line: 2558, type: !72)
!18565 = distinct !DILexicalBlock(scope: !18563, file: !3, line: 2557, column: 39)
!18566 = !DILocation(line: 2558, column: 8, scope: !18565)
!18567 = !DILocalVariable(name: "__x", scope: !18568, file: !3, line: 2558, type: !784)
!18568 = distinct !DILexicalBlock(scope: !18565, file: !3, line: 2558, column: 17)
!18569 = !DILocation(line: 2558, column: 17, scope: !18568)
!18570 = !DILocalVariable(name: "___x", scope: !18571, file: !3, line: 2558, type: !784)
!18571 = distinct !DILexicalBlock(scope: !18568, file: !3, line: 2558, column: 17)
!18572 = !DILocation(line: 2558, column: 17, scope: !18571)
!18573 = !DILocation(line: 2558, column: 47, scope: !18565)
!18574 = !DILocation(line: 2560, column: 36, scope: !18565)
!18575 = !DILocation(line: 2560, column: 43, scope: !18565)
!18576 = !DILocation(line: 2560, column: 32, scope: !18565)
!18577 = !DILocation(line: 2560, column: 14, scope: !18565)
!18578 = !DILocation(line: 2560, column: 21, scope: !18565)
!18579 = !DILocation(line: 2560, column: 4, scope: !18565)
!18580 = !DILocation(line: 2560, column: 27, scope: !18565)
!18581 = !DILocation(line: 2561, column: 13, scope: !18565)
!18582 = !DILocation(line: 2562, column: 3, scope: !18565)
!18583 = !DILocalVariable(name: "__mptr", scope: !18584, file: !3, line: 2557, type: !647)
!18584 = distinct !DILexicalBlock(scope: !18563, file: !3, line: 2557, column: 3)
!18585 = !DILocation(line: 2557, column: 3, scope: !18584)
!18586 = !DILocation(line: 2557, column: 3, scope: !18587)
!18587 = distinct !DILexicalBlock(scope: !18584, file: !3, line: 2557, column: 3)
!18588 = distinct !{!18588, !18561, !18589}
!18589 = !DILocation(line: 2562, column: 3, scope: !18557)
!18590 = !DILocation(line: 2565, column: 11, scope: !18494)
!18591 = !DILocation(line: 2565, column: 2, scope: !18494)
!18592 = !DILocation(line: 2565, column: 9, scope: !18494)
!18593 = !DILocation(line: 2566, column: 11, scope: !18494)
!18594 = !DILocation(line: 2566, column: 2, scope: !18494)
!18595 = !DILocation(line: 2566, column: 9, scope: !18494)
!18596 = !DILocation(line: 2568, column: 16, scope: !18494)
!18597 = !DILocation(line: 2568, column: 57, scope: !18494)
!18598 = !DILocation(line: 2568, column: 2, scope: !18494)
!18599 = !DILocation(line: 2569, column: 18, scope: !18494)
!18600 = !DILocation(line: 2569, column: 45, scope: !18494)
!18601 = !DILocation(line: 2569, column: 2, scope: !18494)
!18602 = !DILocation(line: 2570, column: 19, scope: !18494)
!18603 = !DILocation(line: 2570, column: 2, scope: !18494)
!18604 = !DILocation(line: 2571, column: 1, scope: !18494)
!18605 = distinct !DISubprogram(name: "netif_carrier_ok", scope: !71, file: !71, line: 3976, type: !18345, scopeLine: 3977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18606 = !DILocalVariable(name: "dev", arg: 1, scope: !18605, file: !71, line: 3976, type: !2825)
!18607 = !DILocation(line: 3976, column: 62, scope: !18605)
!18608 = !DILocation(line: 3978, column: 44, scope: !18605)
!18609 = !DILocation(line: 3978, column: 49, scope: !18605)
!18610 = !DILocation(line: 3978, column: 10, scope: !18605)
!18611 = !DILocation(line: 3978, column: 9, scope: !18605)
!18612 = !DILocation(line: 3978, column: 2, scope: !18605)
!18613 = distinct !DISubprogram(name: "tasklet_schedule", scope: !9833, file: !9833, line: 681, type: !10372, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18614 = !DILocalVariable(name: "t", arg: 1, scope: !18613, file: !9833, line: 681, type: !10359)
!18615 = !DILocation(line: 681, column: 60, scope: !18613)
!18616 = !DILocation(line: 683, column: 46, scope: !18617)
!18617 = distinct !DILexicalBlock(scope: !18613, file: !9833, line: 683, column: 6)
!18618 = !DILocation(line: 683, column: 49, scope: !18617)
!18619 = !DILocation(line: 683, column: 7, scope: !18617)
!18620 = !DILocation(line: 683, column: 6, scope: !18613)
!18621 = !DILocation(line: 684, column: 22, scope: !18617)
!18622 = !DILocation(line: 684, column: 3, scope: !18617)
!18623 = !DILocation(line: 685, column: 1, scope: !18613)
!18624 = distinct !DISubprogram(name: "netif_stop_queue", scope: !71, file: !71, line: 3336, type: !488, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18625 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !18626, file: !71, line: 3324, type: !8914)
!18626 = distinct !DISubprogram(name: "netif_tx_stop_queue", scope: !71, file: !71, line: 3324, type: !18627, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18627 = !DISubroutineType(types: !18628)
!18628 = !{null, !8914}
!18629 = !DILocation(line: 3324, column: 70, scope: !18626, inlinedAt: !18630)
!18630 = distinct !DILocation(line: 3338, column: 2, scope: !18624)
!18631 = !DILocalVariable(name: "dev", arg: 1, scope: !18624, file: !71, line: 3336, type: !372)
!18632 = !DILocation(line: 3336, column: 56, scope: !18624)
!18633 = !DILocation(line: 3338, column: 42, scope: !18624)
!18634 = !DILocation(line: 3338, column: 22, scope: !18624)
!18635 = !DILocation(line: 3326, column: 35, scope: !18626, inlinedAt: !18630)
!18636 = !DILocation(line: 3326, column: 46, scope: !18626, inlinedAt: !18630)
!18637 = !DILocation(line: 3326, column: 2, scope: !18626, inlinedAt: !18630)
!18638 = !DILocation(line: 3339, column: 1, scope: !18624)
!18639 = distinct !DISubprogram(name: "rtl_start_rx", scope: !3, file: !3, line: 2679, type: !10384, scopeLine: 2680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18640 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !18641)
!18641 = distinct !DILocation(line: 2714, column: 2, scope: !18642)
!18642 = distinct !DILexicalBlock(scope: !18643, file: !3, line: 2714, column: 2)
!18643 = distinct !DILexicalBlock(scope: !18644, file: !3, line: 2714, column: 2)
!18644 = distinct !DILexicalBlock(scope: !18645, file: !3, line: 2714, column: 2)
!18645 = distinct !DILexicalBlock(scope: !18646, file: !3, line: 2714, column: 2)
!18646 = distinct !DILexicalBlock(scope: !18639, file: !3, line: 2714, column: 2)
!18647 = !DILocation(line: 407, column: 64, scope: !15429, inlinedAt: !18648)
!18648 = distinct !DILocation(line: 2708, column: 4, scope: !18649)
!18649 = distinct !DILexicalBlock(scope: !18650, file: !3, line: 2705, column: 33)
!18650 = distinct !DILexicalBlock(scope: !18651, file: !3, line: 2705, column: 14)
!18651 = distinct !DILexicalBlock(scope: !18652, file: !3, line: 2701, column: 7)
!18652 = distinct !DILexicalBlock(scope: !18653, file: !3, line: 2697, column: 64)
!18653 = distinct !DILexicalBlock(scope: !18654, file: !3, line: 2697, column: 2)
!18654 = distinct !DILexicalBlock(scope: !18639, file: !3, line: 2697, column: 2)
!18655 = !DILocation(line: 407, column: 84, scope: !15429, inlinedAt: !18648)
!18656 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !18657)
!18657 = distinct !DILocation(line: 2706, column: 4, scope: !18658)
!18658 = distinct !DILexicalBlock(scope: !18659, file: !3, line: 2706, column: 4)
!18659 = distinct !DILexicalBlock(scope: !18660, file: !3, line: 2706, column: 4)
!18660 = distinct !DILexicalBlock(scope: !18661, file: !3, line: 2706, column: 4)
!18661 = distinct !DILexicalBlock(scope: !18662, file: !3, line: 2706, column: 4)
!18662 = distinct !DILexicalBlock(scope: !18649, file: !3, line: 2706, column: 4)
!18663 = !DILocation(line: 407, column: 64, scope: !15429, inlinedAt: !18664)
!18664 = distinct !DILocation(line: 2704, column: 4, scope: !18665)
!18665 = distinct !DILexicalBlock(scope: !18651, file: !3, line: 2701, column: 29)
!18666 = !DILocation(line: 407, column: 84, scope: !15429, inlinedAt: !18664)
!18667 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !18668)
!18668 = distinct !DILocation(line: 2702, column: 4, scope: !18669)
!18669 = distinct !DILexicalBlock(scope: !18670, file: !3, line: 2702, column: 4)
!18670 = distinct !DILexicalBlock(scope: !18671, file: !3, line: 2702, column: 4)
!18671 = distinct !DILexicalBlock(scope: !18672, file: !3, line: 2702, column: 4)
!18672 = distinct !DILexicalBlock(scope: !18673, file: !3, line: 2702, column: 4)
!18673 = distinct !DILexicalBlock(scope: !18665, file: !3, line: 2702, column: 4)
!18674 = !DILocation(line: 407, column: 64, scope: !15429, inlinedAt: !18675)
!18675 = distinct !DILocation(line: 2695, column: 2, scope: !18639)
!18676 = !DILocation(line: 407, column: 84, scope: !15429, inlinedAt: !18675)
!18677 = !DILocation(line: 407, column: 64, scope: !15429, inlinedAt: !18678)
!18678 = distinct !DILocation(line: 2717, column: 2, scope: !18639)
!18679 = !DILocation(line: 407, column: 84, scope: !15429, inlinedAt: !18678)
!18680 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !18681)
!18681 = distinct !DILocation(line: 2688, column: 2, scope: !18682)
!18682 = distinct !DILexicalBlock(scope: !18683, file: !3, line: 2688, column: 2)
!18683 = distinct !DILexicalBlock(scope: !18684, file: !3, line: 2688, column: 2)
!18684 = distinct !DILexicalBlock(scope: !18685, file: !3, line: 2688, column: 2)
!18685 = distinct !DILexicalBlock(scope: !18686, file: !3, line: 2688, column: 2)
!18686 = distinct !DILexicalBlock(scope: !18639, file: !3, line: 2688, column: 2)
!18687 = !DILocalVariable(name: "tp", arg: 1, scope: !18639, file: !3, line: 2679, type: !10280)
!18688 = !DILocation(line: 2679, column: 39, scope: !18639)
!18689 = !DILocalVariable(name: "agg", scope: !18639, file: !3, line: 2681, type: !10212)
!18690 = !DILocation(line: 2681, column: 17, scope: !18639)
!18691 = !DILocalVariable(name: "agg_next", scope: !18639, file: !3, line: 2681, type: !10212)
!18692 = !DILocation(line: 2681, column: 23, scope: !18639)
!18693 = !DILocalVariable(name: "tmp_list", scope: !18639, file: !3, line: 2682, type: !366)
!18694 = !DILocation(line: 2682, column: 19, scope: !18639)
!18695 = !DILocalVariable(name: "flags", scope: !18639, file: !3, line: 2683, type: !394)
!18696 = !DILocation(line: 2683, column: 16, scope: !18639)
!18697 = !DILocalVariable(name: "ret", scope: !18639, file: !3, line: 2684, type: !72)
!18698 = !DILocation(line: 2684, column: 6, scope: !18639)
!18699 = !DILocalVariable(name: "i", scope: !18639, file: !3, line: 2684, type: !72)
!18700 = !DILocation(line: 2684, column: 15, scope: !18639)
!18701 = !DILocation(line: 2686, column: 2, scope: !18639)
!18702 = !DILocation(line: 2688, column: 2, scope: !18639)
!18703 = !DILocation(line: 2688, column: 2, scope: !18686)
!18704 = !DILocalVariable(name: "__dummy", scope: !18705, file: !3, line: 2688, type: !394)
!18705 = distinct !DILexicalBlock(scope: !18685, file: !3, line: 2688, column: 2)
!18706 = !DILocation(line: 2688, column: 2, scope: !18705)
!18707 = !DILocalVariable(name: "__dummy2", scope: !18705, file: !3, line: 2688, type: !394)
!18708 = !DILocation(line: 2688, column: 2, scope: !18685)
!18709 = !DILocation(line: 2688, column: 2, scope: !18684)
!18710 = !DILocation(line: 2688, column: 2, scope: !18711)
!18711 = distinct !DILexicalBlock(scope: !18684, file: !3, line: 2688, column: 2)
!18712 = !DILocalVariable(name: "__dummy", scope: !18713, file: !3, line: 2688, type: !394)
!18713 = distinct !DILexicalBlock(scope: !18714, file: !3, line: 2688, column: 2)
!18714 = distinct !DILexicalBlock(scope: !18711, file: !3, line: 2688, column: 2)
!18715 = !DILocation(line: 2688, column: 2, scope: !18713)
!18716 = !DILocalVariable(name: "__dummy2", scope: !18713, file: !3, line: 2688, type: !394)
!18717 = !DILocation(line: 2688, column: 2, scope: !18714)
!18718 = !DILocation(line: 2688, column: 2, scope: !18683)
!18719 = !{i32 -2137047854}
!18720 = !DILocation(line: 2688, column: 2, scope: !18682)
!18721 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !18681)
!18722 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !18681)
!18723 = !DILocation(line: 2690, column: 18, scope: !18639)
!18724 = !DILocation(line: 2690, column: 22, scope: !18639)
!18725 = !DILocation(line: 2690, column: 2, scope: !18639)
!18726 = !DILocation(line: 2691, column: 18, scope: !18639)
!18727 = !DILocation(line: 2691, column: 22, scope: !18639)
!18728 = !DILocation(line: 2691, column: 2, scope: !18639)
!18729 = !DILocation(line: 2693, column: 20, scope: !18639)
!18730 = !DILocation(line: 2693, column: 24, scope: !18639)
!18731 = !DILocation(line: 2693, column: 2, scope: !18639)
!18732 = !DILocation(line: 2695, column: 26, scope: !18639)
!18733 = !DILocation(line: 2695, column: 30, scope: !18639)
!18734 = !DILocation(line: 2695, column: 39, scope: !18639)
!18735 = !DILocation(line: 409, column: 2, scope: !15498, inlinedAt: !18675)
!18736 = !DILocation(line: 409, column: 2, scope: !15503, inlinedAt: !18675)
!18737 = !DILocation(line: 409, column: 2, scope: !15504, inlinedAt: !18675)
!18738 = !DILocation(line: 409, column: 2, scope: !15511, inlinedAt: !18675)
!18739 = !DILocation(line: 409, column: 2, scope: !15514, inlinedAt: !18675)
!18740 = !DILocalVariable(name: "__mptr", scope: !18741, file: !3, line: 2697, type: !647)
!18741 = distinct !DILexicalBlock(scope: !18654, file: !3, line: 2697, column: 2)
!18742 = !DILocation(line: 2697, column: 2, scope: !18741)
!18743 = !DILocation(line: 2697, column: 2, scope: !18744)
!18744 = distinct !DILexicalBlock(scope: !18741, file: !3, line: 2697, column: 2)
!18745 = !DILocation(line: 2697, column: 2, scope: !18654)
!18746 = !DILocalVariable(name: "__mptr", scope: !18747, file: !3, line: 2697, type: !647)
!18747 = distinct !DILexicalBlock(scope: !18654, file: !3, line: 2697, column: 2)
!18748 = !DILocation(line: 2697, column: 2, scope: !18747)
!18749 = !DILocation(line: 2697, column: 2, scope: !18750)
!18750 = distinct !DILexicalBlock(scope: !18747, file: !3, line: 2697, column: 2)
!18751 = !DILocation(line: 2697, column: 2, scope: !18653)
!18752 = !DILocation(line: 2698, column: 19, scope: !18652)
!18753 = !DILocation(line: 2698, column: 24, scope: !18652)
!18754 = !DILocation(line: 2698, column: 3, scope: !18652)
!18755 = !DILocation(line: 2701, column: 7, scope: !18651)
!18756 = !DILocation(line: 2701, column: 11, scope: !18651)
!18757 = !DILocation(line: 2701, column: 7, scope: !18652)
!18758 = !DILocation(line: 2702, column: 4, scope: !18665)
!18759 = !DILocation(line: 2702, column: 4, scope: !18673)
!18760 = !DILocalVariable(name: "__dummy", scope: !18761, file: !3, line: 2702, type: !394)
!18761 = distinct !DILexicalBlock(scope: !18672, file: !3, line: 2702, column: 4)
!18762 = !DILocation(line: 2702, column: 4, scope: !18761)
!18763 = !DILocalVariable(name: "__dummy2", scope: !18761, file: !3, line: 2702, type: !394)
!18764 = !DILocation(line: 2702, column: 4, scope: !18672)
!18765 = !DILocation(line: 2702, column: 4, scope: !18671)
!18766 = !DILocation(line: 2702, column: 4, scope: !18767)
!18767 = distinct !DILexicalBlock(scope: !18671, file: !3, line: 2702, column: 4)
!18768 = !DILocalVariable(name: "__dummy", scope: !18769, file: !3, line: 2702, type: !394)
!18769 = distinct !DILexicalBlock(scope: !18770, file: !3, line: 2702, column: 4)
!18770 = distinct !DILexicalBlock(scope: !18767, file: !3, line: 2702, column: 4)
!18771 = !DILocation(line: 2702, column: 4, scope: !18769)
!18772 = !DILocalVariable(name: "__dummy2", scope: !18769, file: !3, line: 2702, type: !394)
!18773 = !DILocation(line: 2702, column: 4, scope: !18770)
!18774 = !DILocation(line: 2702, column: 4, scope: !18670)
!18775 = !{i32 -2137040808}
!18776 = !DILocation(line: 2702, column: 4, scope: !18669)
!18777 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !18668)
!18778 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !18668)
!18779 = !DILocation(line: 2703, column: 19, scope: !18665)
!18780 = !DILocation(line: 2703, column: 24, scope: !18665)
!18781 = !DILocation(line: 2703, column: 31, scope: !18665)
!18782 = !DILocation(line: 2703, column: 35, scope: !18665)
!18783 = !DILocation(line: 2703, column: 4, scope: !18665)
!18784 = !DILocation(line: 2704, column: 28, scope: !18665)
!18785 = !DILocation(line: 2704, column: 32, scope: !18665)
!18786 = !DILocation(line: 2704, column: 41, scope: !18665)
!18787 = !DILocation(line: 409, column: 2, scope: !15498, inlinedAt: !18664)
!18788 = !DILocation(line: 409, column: 2, scope: !15503, inlinedAt: !18664)
!18789 = !DILocation(line: 409, column: 2, scope: !15504, inlinedAt: !18664)
!18790 = !DILocation(line: 409, column: 2, scope: !15511, inlinedAt: !18664)
!18791 = !DILocation(line: 409, column: 2, scope: !15514, inlinedAt: !18664)
!18792 = !DILocation(line: 2705, column: 3, scope: !18665)
!18793 = !DILocation(line: 2705, column: 14, scope: !18650)
!18794 = !DILocation(line: 2705, column: 14, scope: !18651)
!18795 = !DILocation(line: 2706, column: 4, scope: !18649)
!18796 = !DILocation(line: 2706, column: 4, scope: !18662)
!18797 = !DILocalVariable(name: "__dummy", scope: !18798, file: !3, line: 2706, type: !394)
!18798 = distinct !DILexicalBlock(scope: !18661, file: !3, line: 2706, column: 4)
!18799 = !DILocation(line: 2706, column: 4, scope: !18798)
!18800 = !DILocalVariable(name: "__dummy2", scope: !18798, file: !3, line: 2706, type: !394)
!18801 = !DILocation(line: 2706, column: 4, scope: !18661)
!18802 = !DILocation(line: 2706, column: 4, scope: !18660)
!18803 = !DILocation(line: 2706, column: 4, scope: !18804)
!18804 = distinct !DILexicalBlock(scope: !18660, file: !3, line: 2706, column: 4)
!18805 = !DILocalVariable(name: "__dummy", scope: !18806, file: !3, line: 2706, type: !394)
!18806 = distinct !DILexicalBlock(scope: !18807, file: !3, line: 2706, column: 4)
!18807 = distinct !DILexicalBlock(scope: !18804, file: !3, line: 2706, column: 4)
!18808 = !DILocation(line: 2706, column: 4, scope: !18806)
!18809 = !DILocalVariable(name: "__dummy2", scope: !18806, file: !3, line: 2706, type: !394)
!18810 = !DILocation(line: 2706, column: 4, scope: !18807)
!18811 = !DILocation(line: 2706, column: 4, scope: !18659)
!18812 = !{i32 -2137039747}
!18813 = !DILocation(line: 2706, column: 4, scope: !18658)
!18814 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !18657)
!18815 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !18657)
!18816 = !DILocation(line: 2707, column: 19, scope: !18649)
!18817 = !DILocation(line: 2707, column: 24, scope: !18649)
!18818 = !DILocation(line: 2707, column: 31, scope: !18649)
!18819 = !DILocation(line: 2707, column: 35, scope: !18649)
!18820 = !DILocation(line: 2707, column: 4, scope: !18649)
!18821 = !DILocation(line: 2708, column: 28, scope: !18649)
!18822 = !DILocation(line: 2708, column: 32, scope: !18649)
!18823 = !DILocation(line: 2708, column: 41, scope: !18649)
!18824 = !DILocation(line: 409, column: 2, scope: !15498, inlinedAt: !18648)
!18825 = !DILocation(line: 409, column: 2, scope: !15503, inlinedAt: !18648)
!18826 = !DILocation(line: 409, column: 2, scope: !15504, inlinedAt: !18648)
!18827 = !DILocation(line: 409, column: 2, scope: !15511, inlinedAt: !18648)
!18828 = !DILocation(line: 409, column: 2, scope: !15514, inlinedAt: !18648)
!18829 = !DILocation(line: 2709, column: 3, scope: !18649)
!18830 = !DILocation(line: 2710, column: 26, scope: !18831)
!18831 = distinct !DILexicalBlock(scope: !18650, file: !3, line: 2709, column: 10)
!18832 = !DILocation(line: 2710, column: 30, scope: !18831)
!18833 = !DILocation(line: 2710, column: 10, scope: !18831)
!18834 = !DILocation(line: 2710, column: 8, scope: !18831)
!18835 = !DILocation(line: 2712, column: 2, scope: !18652)
!18836 = !DILocalVariable(name: "__mptr", scope: !18837, file: !3, line: 2697, type: !647)
!18837 = distinct !DILexicalBlock(scope: !18653, file: !3, line: 2697, column: 2)
!18838 = !DILocation(line: 2697, column: 2, scope: !18837)
!18839 = !DILocation(line: 2697, column: 2, scope: !18840)
!18840 = distinct !DILexicalBlock(scope: !18837, file: !3, line: 2697, column: 2)
!18841 = distinct !{!18841, !18745, !18842}
!18842 = !DILocation(line: 2712, column: 2, scope: !18654)
!18843 = !DILocation(line: 2714, column: 2, scope: !18639)
!18844 = !DILocation(line: 2714, column: 2, scope: !18646)
!18845 = !DILocalVariable(name: "__dummy", scope: !18846, file: !3, line: 2714, type: !394)
!18846 = distinct !DILexicalBlock(scope: !18645, file: !3, line: 2714, column: 2)
!18847 = !DILocation(line: 2714, column: 2, scope: !18846)
!18848 = !DILocalVariable(name: "__dummy2", scope: !18846, file: !3, line: 2714, type: !394)
!18849 = !DILocation(line: 2714, column: 2, scope: !18645)
!18850 = !DILocation(line: 2714, column: 2, scope: !18644)
!18851 = !DILocation(line: 2714, column: 2, scope: !18852)
!18852 = distinct !DILexicalBlock(scope: !18644, file: !3, line: 2714, column: 2)
!18853 = !DILocalVariable(name: "__dummy", scope: !18854, file: !3, line: 2714, type: !394)
!18854 = distinct !DILexicalBlock(scope: !18855, file: !3, line: 2714, column: 2)
!18855 = distinct !DILexicalBlock(scope: !18852, file: !3, line: 2714, column: 2)
!18856 = !DILocation(line: 2714, column: 2, scope: !18854)
!18857 = !DILocalVariable(name: "__dummy2", scope: !18854, file: !3, line: 2714, type: !394)
!18858 = !DILocation(line: 2714, column: 2, scope: !18855)
!18859 = !DILocation(line: 2714, column: 2, scope: !18643)
!18860 = !{i32 -2137038540}
!18861 = !DILocation(line: 2714, column: 2, scope: !18642)
!18862 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !18641)
!18863 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !18641)
!18864 = !DILocalVariable(name: "__ret_warn_on", scope: !18865, file: !3, line: 2715, type: !72)
!18865 = distinct !DILexicalBlock(scope: !18639, file: !3, line: 2715, column: 2)
!18866 = !DILocation(line: 2715, column: 2, scope: !18865)
!18867 = !DILocation(line: 2715, column: 2, scope: !18868)
!18868 = distinct !DILexicalBlock(scope: !18865, file: !3, line: 2715, column: 2)
!18869 = !DILocation(line: 2715, column: 2, scope: !18870)
!18870 = distinct !DILexicalBlock(scope: !18868, file: !3, line: 2715, column: 2)
!18871 = !DILocation(line: 2715, column: 2, scope: !18872)
!18872 = distinct !DILexicalBlock(scope: !18870, file: !3, line: 2715, column: 2)
!18873 = !DILocation(line: 2715, column: 2, scope: !18874)
!18874 = distinct !DILexicalBlock(scope: !18870, file: !3, line: 2715, column: 2)
!18875 = !{i32 -2137037903, i32 -2137037874, i32 -2137037828, i32 -2137037770, i32 -2137037716, i32 -2137037662, i32 -2137037607, i32 -2137037576}
!18876 = !DILocation(line: 2715, column: 2, scope: !18877)
!18877 = distinct !DILexicalBlock(scope: !18870, file: !3, line: 2715, column: 2)
!18878 = !{i32 -2137037170, i32 -2137037163, i32 -2137037111, i32 -2137037080, i32 -2137037050}
!18879 = !DILocation(line: 2715, column: 2, scope: !18880)
!18880 = distinct !DILexicalBlock(scope: !18870, file: !3, line: 2715, column: 2)
!18881 = !DILocation(line: 2716, column: 26, scope: !18639)
!18882 = !DILocation(line: 2716, column: 30, scope: !18639)
!18883 = !DILocation(line: 2716, column: 2, scope: !18639)
!18884 = !DILocation(line: 2717, column: 26, scope: !18639)
!18885 = !DILocation(line: 2717, column: 30, scope: !18639)
!18886 = !DILocation(line: 2717, column: 39, scope: !18639)
!18887 = !DILocation(line: 409, column: 2, scope: !15498, inlinedAt: !18678)
!18888 = !DILocation(line: 409, column: 2, scope: !15503, inlinedAt: !18678)
!18889 = !DILocation(line: 409, column: 2, scope: !15504, inlinedAt: !18678)
!18890 = !DILocation(line: 409, column: 2, scope: !15511, inlinedAt: !18678)
!18891 = !DILocation(line: 409, column: 2, scope: !15514, inlinedAt: !18678)
!18892 = !DILocation(line: 2719, column: 9, scope: !18639)
!18893 = !DILocation(line: 2719, column: 2, scope: !18639)
!18894 = distinct !DISubprogram(name: "clear_bit", scope: !12354, file: !12354, line: 39, type: !12355, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18895 = !DILocalVariable(name: "nr", arg: 1, scope: !18896, file: !12360, line: 72, type: !590)
!18896 = distinct !DISubprogram(name: "arch_clear_bit", scope: !12360, file: !12360, line: 72, type: !12355, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18897 = !DILocation(line: 72, column: 21, scope: !18896, inlinedAt: !18898)
!18898 = distinct !DILocation(line: 42, column: 2, scope: !18894)
!18899 = !DILocalVariable(name: "addr", arg: 2, scope: !18896, file: !12360, line: 72, type: !12357)
!18900 = !DILocation(line: 72, column: 49, scope: !18896, inlinedAt: !18898)
!18901 = !DILocation(line: 84, column: 74, scope: !12366, inlinedAt: !18902)
!18902 = distinct !DILocation(line: 41, column: 2, scope: !18894)
!18903 = !DILocation(line: 84, column: 84, scope: !12366, inlinedAt: !18902)
!18904 = !DILocalVariable(name: "nr", arg: 1, scope: !18894, file: !12354, line: 39, type: !590)
!18905 = !DILocation(line: 39, column: 35, scope: !18894)
!18906 = !DILocalVariable(name: "addr", arg: 2, scope: !18894, file: !12354, line: 39, type: !12357)
!18907 = !DILocation(line: 39, column: 63, scope: !18894)
!18908 = !DILocation(line: 41, column: 26, scope: !18894)
!18909 = !DILocation(line: 41, column: 33, scope: !18894)
!18910 = !DILocation(line: 41, column: 31, scope: !18894)
!18911 = !DILocation(line: 86, column: 20, scope: !12366, inlinedAt: !18902)
!18912 = !DILocation(line: 86, column: 23, scope: !12366, inlinedAt: !18902)
!18913 = !DILocation(line: 86, column: 2, scope: !12366, inlinedAt: !18902)
!18914 = !DILocation(line: 87, column: 2, scope: !12366, inlinedAt: !18902)
!18915 = !DILocation(line: 42, column: 17, scope: !18894)
!18916 = !DILocation(line: 42, column: 21, scope: !18894)
!18917 = !DILocation(line: 74, column: 27, scope: !18918, inlinedAt: !18898)
!18918 = distinct !DILexicalBlock(scope: !18896, file: !12360, line: 74, column: 6)
!18919 = !DILocation(line: 74, column: 6, scope: !18918, inlinedAt: !18898)
!18920 = !DILocation(line: 74, column: 6, scope: !18896, inlinedAt: !18898)
!18921 = !DILocation(line: 76, column: 6, scope: !18922, inlinedAt: !18898)
!18922 = distinct !DILexicalBlock(scope: !18918, file: !12360, line: 74, column: 32)
!18923 = !DILocation(line: 77, column: 13, scope: !18922, inlinedAt: !18898)
!18924 = !DILocation(line: 77, column: 12, scope: !18922, inlinedAt: !18898)
!18925 = !DILocation(line: 75, column: 3, scope: !18922, inlinedAt: !18898)
!18926 = !{i32 -2147021338}
!18927 = !DILocation(line: 78, column: 2, scope: !18922, inlinedAt: !18898)
!18928 = !DILocation(line: 80, column: 8, scope: !18929, inlinedAt: !18898)
!18929 = distinct !DILexicalBlock(scope: !18918, file: !12360, line: 78, column: 9)
!18930 = !DILocation(line: 80, column: 32, scope: !18929, inlinedAt: !18898)
!18931 = !DILocation(line: 79, column: 3, scope: !18929, inlinedAt: !18898)
!18932 = !{i32 -2147021206}
!18933 = !DILocation(line: 43, column: 1, scope: !18894)
!18934 = distinct !DISubprogram(name: "napi_enable", scope: !71, file: !71, line: 507, type: !18935, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18935 = !DISubroutineType(types: !18936)
!18936 = !{null, !10297}
!18937 = !DILocalVariable(name: "n", arg: 1, scope: !18934, file: !71, line: 507, type: !10297)
!18938 = !DILocation(line: 507, column: 52, scope: !18934)
!18939 = !DILocation(line: 509, column: 2, scope: !18934)
!18940 = !DILocation(line: 509, column: 2, scope: !18941)
!18941 = distinct !DILexicalBlock(scope: !18942, file: !71, line: 509, column: 2)
!18942 = distinct !DILexicalBlock(scope: !18934, file: !71, line: 509, column: 2)
!18943 = !DILocation(line: 509, column: 2, scope: !18942)
!18944 = !DILocation(line: 509, column: 2, scope: !18945)
!18945 = distinct !DILexicalBlock(scope: !18941, file: !71, line: 509, column: 2)
!18946 = !DILocation(line: 509, column: 2, scope: !18947)
!18947 = distinct !DILexicalBlock(scope: !18945, file: !71, line: 509, column: 2)
!18948 = !DILocation(line: 509, column: 2, scope: !18949)
!18949 = distinct !DILexicalBlock(scope: !18945, file: !71, line: 509, column: 2)
!18950 = !{i32 -2140231608, i32 -2140231579, i32 -2140231533, i32 -2140231475, i32 -2140231421, i32 -2140231367, i32 -2140231312, i32 -2140231281}
!18951 = !DILocation(line: 509, column: 2, scope: !18952)
!18952 = distinct !DILexicalBlock(scope: !18953, file: !71, line: 509, column: 2)
!18953 = distinct !DILexicalBlock(scope: !18945, file: !71, line: 509, column: 2)
!18954 = !{i32 -2140230833, i32 -2140230826, i32 -2140230772, i32 -2140230741, i32 -2140230711}
!18955 = !DILocation(line: 509, column: 2, scope: !18953)
!18956 = !DILocation(line: 510, column: 2, scope: !18934)
!18957 = !{i32 -2140230642}
!18958 = !DILocation(line: 511, column: 31, scope: !18934)
!18959 = !DILocation(line: 511, column: 34, scope: !18934)
!18960 = !DILocation(line: 511, column: 2, scope: !18934)
!18961 = !DILocation(line: 512, column: 31, scope: !18934)
!18962 = !DILocation(line: 512, column: 34, scope: !18934)
!18963 = !DILocation(line: 512, column: 2, scope: !18934)
!18964 = !DILocation(line: 513, column: 1, scope: !18934)
!18965 = distinct !DISubprogram(name: "netif_wake_queue", scope: !71, file: !71, line: 3309, type: !488, scopeLine: 3310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18966 = !DILocalVariable(name: "dev", arg: 1, scope: !18965, file: !71, line: 3309, type: !372)
!18967 = !DILocation(line: 3309, column: 56, scope: !18965)
!18968 = !DILocation(line: 3311, column: 42, scope: !18965)
!18969 = !DILocation(line: 3311, column: 22, scope: !18965)
!18970 = !DILocation(line: 3311, column: 2, scope: !18965)
!18971 = !DILocation(line: 3312, column: 1, scope: !18965)
!18972 = distinct !DISubprogram(name: "netif_queue_stopped", scope: !71, file: !71, line: 3354, type: !18345, scopeLine: 3355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18973 = !DILocalVariable(name: "dev", arg: 1, scope: !18972, file: !71, line: 3354, type: !2825)
!18974 = !DILocation(line: 3354, column: 65, scope: !18972)
!18975 = !DILocation(line: 3356, column: 52, scope: !18972)
!18976 = !DILocation(line: 3356, column: 32, scope: !18972)
!18977 = !DILocation(line: 3356, column: 9, scope: !18972)
!18978 = !DILocation(line: 3356, column: 2, scope: !18972)
!18979 = distinct !DISubprogram(name: "skb_queue_len", scope: !499, file: !499, line: 1840, type: !18980, scopeLine: 1841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18980 = !DISubroutineType(types: !18981)
!18981 = !{!545, !15638}
!18982 = !DILocalVariable(name: "list_", arg: 1, scope: !18979, file: !499, line: 1840, type: !15638)
!18983 = !DILocation(line: 1840, column: 62, scope: !18979)
!18984 = !DILocation(line: 1842, column: 9, scope: !18979)
!18985 = !DILocation(line: 1842, column: 16, scope: !18979)
!18986 = !DILocation(line: 1842, column: 2, scope: !18979)
!18987 = distinct !DISubprogram(name: "tasklet_enable", scope: !9833, file: !9833, line: 708, type: !10372, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!18988 = !DILocation(line: 106, column: 55, scope: !15945, inlinedAt: !18989)
!18989 = distinct !DILocation(line: 331, column: 2, scope: !15951, inlinedAt: !18990)
!18990 = distinct !DILocation(line: 711, column: 2, scope: !18987)
!18991 = !DILocation(line: 99, column: 79, scope: !15954, inlinedAt: !18992)
!18992 = distinct !DILocation(line: 330, column: 2, scope: !15951, inlinedAt: !18990)
!18993 = !DILocation(line: 99, column: 89, scope: !15954, inlinedAt: !18992)
!18994 = !DILocation(line: 328, column: 22, scope: !15951, inlinedAt: !18990)
!18995 = !DILocalVariable(name: "t", arg: 1, scope: !18987, file: !9833, line: 708, type: !10359)
!18996 = !DILocation(line: 708, column: 58, scope: !18987)
!18997 = !DILocation(line: 710, column: 2, scope: !18987)
!18998 = !{i32 -2140639908}
!18999 = !DILocation(line: 711, column: 14, scope: !18987)
!19000 = !DILocation(line: 711, column: 17, scope: !18987)
!19001 = !DILocation(line: 330, column: 31, scope: !15951, inlinedAt: !18990)
!19002 = !DILocation(line: 101, column: 20, scope: !15954, inlinedAt: !18992)
!19003 = !DILocation(line: 101, column: 23, scope: !15954, inlinedAt: !18992)
!19004 = !DILocation(line: 101, column: 2, scope: !15954, inlinedAt: !18992)
!19005 = !DILocation(line: 102, column: 2, scope: !15954, inlinedAt: !18992)
!19006 = !DILocation(line: 331, column: 18, scope: !15951, inlinedAt: !18990)
!19007 = !DILocation(line: 109, column: 16, scope: !15945, inlinedAt: !18989)
!19008 = !DILocation(line: 109, column: 19, scope: !15945, inlinedAt: !18989)
!19009 = !DILocation(line: 108, column: 2, scope: !15945, inlinedAt: !18989)
!19010 = !DILocation(line: 712, column: 1, scope: !18987)
!19011 = distinct !DISubprogram(name: "netdev_get_tx_queue", scope: !71, file: !71, line: 2234, type: !19012, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19012 = !DISubroutineType(types: !19013)
!19013 = !{!8914, !2825, !7}
!19014 = !DILocalVariable(name: "dev", arg: 1, scope: !19011, file: !71, line: 2234, type: !2825)
!19015 = !DILocation(line: 2234, column: 67, scope: !19011)
!19016 = !DILocalVariable(name: "index", arg: 2, scope: !19011, file: !71, line: 2235, type: !7)
!19017 = !DILocation(line: 2235, column: 20, scope: !19011)
!19018 = !DILocation(line: 2237, column: 10, scope: !19011)
!19019 = !DILocation(line: 2237, column: 15, scope: !19011)
!19020 = !DILocation(line: 2237, column: 19, scope: !19011)
!19021 = !DILocation(line: 2237, column: 2, scope: !19011)
!19022 = distinct !DISubprogram(name: "list_add_tail", scope: !12142, file: !12142, line: 98, type: !15889, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19023 = !DILocalVariable(name: "new", arg: 1, scope: !19022, file: !12142, line: 98, type: !369)
!19024 = !DILocation(line: 98, column: 52, scope: !19022)
!19025 = !DILocalVariable(name: "head", arg: 2, scope: !19022, file: !12142, line: 98, type: !369)
!19026 = !DILocation(line: 98, column: 75, scope: !19022)
!19027 = !DILocation(line: 100, column: 13, scope: !19022)
!19028 = !DILocation(line: 100, column: 18, scope: !19022)
!19029 = !DILocation(line: 100, column: 24, scope: !19022)
!19030 = !DILocation(line: 100, column: 30, scope: !19022)
!19031 = !DILocation(line: 100, column: 2, scope: !19022)
!19032 = !DILocation(line: 101, column: 1, scope: !19022)
!19033 = distinct !DISubprogram(name: "r8152_submit_rx", scope: !3, file: !3, line: 2454, type: !19034, scopeLine: 2455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19034 = !DISubroutineType(types: !19035)
!19035 = !{!72, !10280, !10212, !2067}
!19036 = !DILocation(line: 407, column: 64, scope: !15429, inlinedAt: !19037)
!19037 = distinct !DILocation(line: 2478, column: 3, scope: !19038)
!19038 = distinct !DILexicalBlock(scope: !19039, file: !3, line: 2471, column: 18)
!19039 = distinct !DILexicalBlock(scope: !19040, file: !3, line: 2471, column: 13)
!19040 = distinct !DILexicalBlock(scope: !19033, file: !3, line: 2468, column: 6)
!19041 = !DILocation(line: 407, column: 84, scope: !15429, inlinedAt: !19037)
!19042 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !19043)
!19043 = distinct !DILocation(line: 2476, column: 3, scope: !19044)
!19044 = distinct !DILexicalBlock(scope: !19045, file: !3, line: 2476, column: 3)
!19045 = distinct !DILexicalBlock(scope: !19046, file: !3, line: 2476, column: 3)
!19046 = distinct !DILexicalBlock(scope: !19047, file: !3, line: 2476, column: 3)
!19047 = distinct !DILexicalBlock(scope: !19048, file: !3, line: 2476, column: 3)
!19048 = distinct !DILexicalBlock(scope: !19038, file: !3, line: 2476, column: 3)
!19049 = !DILocalVariable(name: "tp", arg: 1, scope: !19033, file: !3, line: 2454, type: !10280)
!19050 = !DILocation(line: 2454, column: 35, scope: !19033)
!19051 = !DILocalVariable(name: "agg", arg: 2, scope: !19033, file: !3, line: 2454, type: !10212)
!19052 = !DILocation(line: 2454, column: 54, scope: !19033)
!19053 = !DILocalVariable(name: "mem_flags", arg: 3, scope: !19033, file: !3, line: 2454, type: !2067)
!19054 = !DILocation(line: 2454, column: 65, scope: !19033)
!19055 = !DILocalVariable(name: "ret", scope: !19033, file: !3, line: 2456, type: !72)
!19056 = !DILocation(line: 2456, column: 6, scope: !19033)
!19057 = !DILocation(line: 2459, column: 32, scope: !19058)
!19058 = distinct !DILexicalBlock(scope: !19033, file: !3, line: 2459, column: 6)
!19059 = !DILocation(line: 2459, column: 36, scope: !19058)
!19060 = !DILocation(line: 2459, column: 6, scope: !19058)
!19061 = !DILocation(line: 2459, column: 43, scope: !19058)
!19062 = !DILocation(line: 2460, column: 30, scope: !19058)
!19063 = !DILocation(line: 2460, column: 34, scope: !19058)
!19064 = !DILocation(line: 2460, column: 7, scope: !19058)
!19065 = !DILocation(line: 2460, column: 41, scope: !19058)
!19066 = !DILocation(line: 2460, column: 62, scope: !19058)
!19067 = !DILocation(line: 2460, column: 66, scope: !19058)
!19068 = !DILocation(line: 2460, column: 45, scope: !19058)
!19069 = !DILocation(line: 2459, column: 6, scope: !19033)
!19070 = !DILocation(line: 2461, column: 3, scope: !19058)
!19071 = !DILocation(line: 2463, column: 20, scope: !19033)
!19072 = !DILocation(line: 2463, column: 25, scope: !19033)
!19073 = !DILocation(line: 2463, column: 30, scope: !19033)
!19074 = !DILocation(line: 2463, column: 34, scope: !19033)
!19075 = !DILocation(line: 2463, column: 40, scope: !19033)
!19076 = !DILocation(line: 2464, column: 6, scope: !19033)
!19077 = !DILocation(line: 2464, column: 11, scope: !19033)
!19078 = !DILocation(line: 2464, column: 19, scope: !19033)
!19079 = !DILocation(line: 2464, column: 23, scope: !19033)
!19080 = !DILocation(line: 2465, column: 42, scope: !19033)
!19081 = !DILocation(line: 2463, column: 2, scope: !19033)
!19082 = !DILocation(line: 2467, column: 23, scope: !19033)
!19083 = !DILocation(line: 2467, column: 28, scope: !19033)
!19084 = !DILocation(line: 2467, column: 33, scope: !19033)
!19085 = !DILocation(line: 2467, column: 8, scope: !19033)
!19086 = !DILocation(line: 2467, column: 6, scope: !19033)
!19087 = !DILocation(line: 2468, column: 6, scope: !19040)
!19088 = !DILocation(line: 2468, column: 10, scope: !19040)
!19089 = !DILocation(line: 2468, column: 6, scope: !19033)
!19090 = !DILocation(line: 2469, column: 18, scope: !19091)
!19091 = distinct !DILexicalBlock(scope: !19040, file: !3, line: 2468, column: 22)
!19092 = !DILocation(line: 2469, column: 3, scope: !19091)
!19093 = !DILocation(line: 2470, column: 23, scope: !19091)
!19094 = !DILocation(line: 2470, column: 27, scope: !19091)
!19095 = !DILocation(line: 2470, column: 3, scope: !19091)
!19096 = !DILocation(line: 2471, column: 2, scope: !19091)
!19097 = !DILocation(line: 2471, column: 13, scope: !19039)
!19098 = !DILocation(line: 2471, column: 13, scope: !19040)
!19099 = !DILocalVariable(name: "urb", scope: !19038, file: !3, line: 2472, type: !10218)
!19100 = !DILocation(line: 2472, column: 15, scope: !19038)
!19101 = !DILocation(line: 2472, column: 21, scope: !19038)
!19102 = !DILocation(line: 2472, column: 26, scope: !19038)
!19103 = !DILocalVariable(name: "flags", scope: !19038, file: !3, line: 2473, type: !394)
!19104 = !DILocation(line: 2473, column: 17, scope: !19038)
!19105 = !DILocation(line: 2475, column: 3, scope: !19038)
!19106 = !DILocation(line: 2475, column: 8, scope: !19038)
!19107 = !DILocation(line: 2475, column: 22, scope: !19038)
!19108 = !DILocation(line: 2476, column: 3, scope: !19038)
!19109 = !DILocation(line: 2476, column: 3, scope: !19048)
!19110 = !DILocalVariable(name: "__dummy", scope: !19111, file: !3, line: 2476, type: !394)
!19111 = distinct !DILexicalBlock(scope: !19047, file: !3, line: 2476, column: 3)
!19112 = !DILocation(line: 2476, column: 3, scope: !19111)
!19113 = !DILocalVariable(name: "__dummy2", scope: !19111, file: !3, line: 2476, type: !394)
!19114 = !DILocation(line: 2476, column: 3, scope: !19047)
!19115 = !DILocation(line: 2476, column: 3, scope: !19046)
!19116 = !DILocation(line: 2476, column: 3, scope: !19117)
!19117 = distinct !DILexicalBlock(scope: !19046, file: !3, line: 2476, column: 3)
!19118 = !DILocalVariable(name: "__dummy", scope: !19119, file: !3, line: 2476, type: !394)
!19119 = distinct !DILexicalBlock(scope: !19120, file: !3, line: 2476, column: 3)
!19120 = distinct !DILexicalBlock(scope: !19117, file: !3, line: 2476, column: 3)
!19121 = !DILocation(line: 2476, column: 3, scope: !19119)
!19122 = !DILocalVariable(name: "__dummy2", scope: !19119, file: !3, line: 2476, type: !394)
!19123 = !DILocation(line: 2476, column: 3, scope: !19120)
!19124 = !DILocation(line: 2476, column: 3, scope: !19045)
!19125 = !{i32 -2137058041}
!19126 = !DILocation(line: 2476, column: 3, scope: !19044)
!19127 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !19043)
!19128 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !19043)
!19129 = !DILocation(line: 2477, column: 18, scope: !19038)
!19130 = !DILocation(line: 2477, column: 23, scope: !19038)
!19131 = !DILocation(line: 2477, column: 30, scope: !19038)
!19132 = !DILocation(line: 2477, column: 34, scope: !19038)
!19133 = !DILocation(line: 2477, column: 3, scope: !19038)
!19134 = !DILocation(line: 2478, column: 27, scope: !19038)
!19135 = !DILocation(line: 2478, column: 31, scope: !19038)
!19136 = !DILocation(line: 2478, column: 40, scope: !19038)
!19137 = !DILocation(line: 409, column: 2, scope: !15498, inlinedAt: !19037)
!19138 = !DILocation(line: 409, column: 2, scope: !15503, inlinedAt: !19037)
!19139 = !DILocation(line: 409, column: 2, scope: !15504, inlinedAt: !19037)
!19140 = !DILocation(line: 409, column: 2, scope: !15511, inlinedAt: !19037)
!19141 = !DILocation(line: 409, column: 2, scope: !15514, inlinedAt: !19037)
!19142 = !DILocation(line: 2480, column: 3, scope: !19038)
!19143 = !DILocation(line: 2480, column: 3, scope: !19144)
!19144 = distinct !DILexicalBlock(scope: !19145, file: !3, line: 2480, column: 3)
!19145 = distinct !DILexicalBlock(scope: !19038, file: !3, line: 2480, column: 3)
!19146 = !DILocation(line: 2480, column: 3, scope: !19145)
!19147 = !DILocation(line: 2483, column: 18, scope: !19038)
!19148 = !DILocation(line: 2483, column: 22, scope: !19038)
!19149 = !DILocation(line: 2483, column: 3, scope: !19038)
!19150 = !DILocation(line: 2484, column: 2, scope: !19038)
!19151 = !DILocation(line: 2486, column: 9, scope: !19033)
!19152 = !DILocation(line: 2486, column: 2, scope: !19033)
!19153 = !DILocation(line: 2487, column: 1, scope: !19033)
!19154 = distinct !DISubprogram(name: "__list_add", scope: !12142, file: !12142, line: 63, type: !19155, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19155 = !DISubroutineType(types: !19156)
!19156 = !{null, !369, !369, !369}
!19157 = !DILocalVariable(name: "new", arg: 1, scope: !19154, file: !12142, line: 63, type: !369)
!19158 = !DILocation(line: 63, column: 49, scope: !19154)
!19159 = !DILocalVariable(name: "prev", arg: 2, scope: !19154, file: !12142, line: 64, type: !369)
!19160 = !DILocation(line: 64, column: 28, scope: !19154)
!19161 = !DILocalVariable(name: "next", arg: 3, scope: !19154, file: !12142, line: 65, type: !369)
!19162 = !DILocation(line: 65, column: 28, scope: !19154)
!19163 = !DILocation(line: 67, column: 24, scope: !19164)
!19164 = distinct !DILexicalBlock(scope: !19154, file: !12142, line: 67, column: 6)
!19165 = !DILocation(line: 67, column: 29, scope: !19164)
!19166 = !DILocation(line: 67, column: 35, scope: !19164)
!19167 = !DILocation(line: 67, column: 7, scope: !19164)
!19168 = !DILocation(line: 67, column: 6, scope: !19154)
!19169 = !DILocation(line: 68, column: 3, scope: !19164)
!19170 = !DILocation(line: 70, column: 15, scope: !19154)
!19171 = !DILocation(line: 70, column: 2, scope: !19154)
!19172 = !DILocation(line: 70, column: 8, scope: !19154)
!19173 = !DILocation(line: 70, column: 13, scope: !19154)
!19174 = !DILocation(line: 71, column: 14, scope: !19154)
!19175 = !DILocation(line: 71, column: 2, scope: !19154)
!19176 = !DILocation(line: 71, column: 7, scope: !19154)
!19177 = !DILocation(line: 71, column: 12, scope: !19154)
!19178 = !DILocation(line: 72, column: 14, scope: !19154)
!19179 = !DILocation(line: 72, column: 2, scope: !19154)
!19180 = !DILocation(line: 72, column: 7, scope: !19154)
!19181 = !DILocation(line: 72, column: 12, scope: !19154)
!19182 = !DILocation(line: 73, column: 2, scope: !19154)
!19183 = !DILocation(line: 73, column: 2, scope: !19184)
!19184 = distinct !DILexicalBlock(scope: !19154, file: !12142, line: 73, column: 2)
!19185 = !DILocation(line: 73, column: 2, scope: !19186)
!19186 = distinct !DILexicalBlock(scope: !19184, file: !12142, line: 73, column: 2)
!19187 = !DILocation(line: 73, column: 2, scope: !19188)
!19188 = distinct !DILexicalBlock(scope: !19184, file: !12142, line: 73, column: 2)
!19189 = !DILocation(line: 74, column: 1, scope: !19154)
!19190 = distinct !DISubprogram(name: "__list_add_valid", scope: !12142, file: !12142, line: 45, type: !19191, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19191 = !DISubroutineType(types: !19192)
!19192 = !{!617, !369, !369, !369}
!19193 = !DILocalVariable(name: "new", arg: 1, scope: !19190, file: !12142, line: 45, type: !369)
!19194 = !DILocation(line: 45, column: 55, scope: !19190)
!19195 = !DILocalVariable(name: "prev", arg: 2, scope: !19190, file: !12142, line: 46, type: !369)
!19196 = !DILocation(line: 46, column: 23, scope: !19190)
!19197 = !DILocalVariable(name: "next", arg: 3, scope: !19190, file: !12142, line: 47, type: !369)
!19198 = !DILocation(line: 47, column: 23, scope: !19190)
!19199 = !DILocation(line: 49, column: 2, scope: !19190)
!19200 = distinct !DISubprogram(name: "usb_fill_bulk_urb", scope: !9505, file: !9505, line: 1647, type: !19201, scopeLine: 1654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19201 = !DISubroutineType(types: !19202)
!19202 = !{null, !10218, !9907, !7, !647, !72, !10267, !647}
!19203 = !DILocalVariable(name: "urb", arg: 1, scope: !19200, file: !9505, line: 1647, type: !10218)
!19204 = !DILocation(line: 1647, column: 50, scope: !19200)
!19205 = !DILocalVariable(name: "dev", arg: 2, scope: !19200, file: !9505, line: 1648, type: !9907)
!19206 = !DILocation(line: 1648, column: 29, scope: !19200)
!19207 = !DILocalVariable(name: "pipe", arg: 3, scope: !19200, file: !9505, line: 1649, type: !7)
!19208 = !DILocation(line: 1649, column: 23, scope: !19200)
!19209 = !DILocalVariable(name: "transfer_buffer", arg: 4, scope: !19200, file: !9505, line: 1650, type: !647)
!19210 = !DILocation(line: 1650, column: 16, scope: !19200)
!19211 = !DILocalVariable(name: "buffer_length", arg: 5, scope: !19200, file: !9505, line: 1651, type: !72)
!19212 = !DILocation(line: 1651, column: 14, scope: !19200)
!19213 = !DILocalVariable(name: "complete_fn", arg: 6, scope: !19200, file: !9505, line: 1652, type: !10267)
!19214 = !DILocation(line: 1652, column: 25, scope: !19200)
!19215 = !DILocalVariable(name: "context", arg: 7, scope: !19200, file: !9505, line: 1653, type: !647)
!19216 = !DILocation(line: 1653, column: 16, scope: !19200)
!19217 = !DILocation(line: 1655, column: 13, scope: !19200)
!19218 = !DILocation(line: 1655, column: 2, scope: !19200)
!19219 = !DILocation(line: 1655, column: 7, scope: !19200)
!19220 = !DILocation(line: 1655, column: 11, scope: !19200)
!19221 = !DILocation(line: 1656, column: 14, scope: !19200)
!19222 = !DILocation(line: 1656, column: 2, scope: !19200)
!19223 = !DILocation(line: 1656, column: 7, scope: !19200)
!19224 = !DILocation(line: 1656, column: 12, scope: !19200)
!19225 = !DILocation(line: 1657, column: 25, scope: !19200)
!19226 = !DILocation(line: 1657, column: 2, scope: !19200)
!19227 = !DILocation(line: 1657, column: 7, scope: !19200)
!19228 = !DILocation(line: 1657, column: 23, scope: !19200)
!19229 = !DILocation(line: 1658, column: 32, scope: !19200)
!19230 = !DILocation(line: 1658, column: 2, scope: !19200)
!19231 = !DILocation(line: 1658, column: 7, scope: !19200)
!19232 = !DILocation(line: 1658, column: 30, scope: !19200)
!19233 = !DILocation(line: 1659, column: 18, scope: !19200)
!19234 = !DILocation(line: 1659, column: 2, scope: !19200)
!19235 = !DILocation(line: 1659, column: 7, scope: !19200)
!19236 = !DILocation(line: 1659, column: 16, scope: !19200)
!19237 = !DILocation(line: 1660, column: 17, scope: !19200)
!19238 = !DILocation(line: 1660, column: 2, scope: !19200)
!19239 = !DILocation(line: 1660, column: 7, scope: !19200)
!19240 = !DILocation(line: 1660, column: 15, scope: !19200)
!19241 = !DILocation(line: 1661, column: 1, scope: !19200)
!19242 = distinct !DISubprogram(name: "read_bulk_callback", scope: !3, file: !3, line: 1555, type: !10269, scopeLine: 1556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19243 = !DILocation(line: 407, column: 64, scope: !15429, inlinedAt: !19244)
!19244 = distinct !DILocation(line: 1593, column: 3, scope: !19245)
!19245 = distinct !DILexicalBlock(scope: !19242, file: !3, line: 1586, column: 18)
!19246 = !DILocation(line: 407, column: 84, scope: !15429, inlinedAt: !19244)
!19247 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !19248)
!19248 = distinct !DILocation(line: 1591, column: 3, scope: !19249)
!19249 = distinct !DILexicalBlock(scope: !19250, file: !3, line: 1591, column: 3)
!19250 = distinct !DILexicalBlock(scope: !19251, file: !3, line: 1591, column: 3)
!19251 = distinct !DILexicalBlock(scope: !19252, file: !3, line: 1591, column: 3)
!19252 = distinct !DILexicalBlock(scope: !19253, file: !3, line: 1591, column: 3)
!19253 = distinct !DILexicalBlock(scope: !19245, file: !3, line: 1591, column: 3)
!19254 = !DILocalVariable(name: "urb", arg: 1, scope: !19242, file: !3, line: 1555, type: !10218)
!19255 = !DILocation(line: 1555, column: 44, scope: !19242)
!19256 = !DILocalVariable(name: "netdev", scope: !19242, file: !3, line: 1557, type: !372)
!19257 = !DILocation(line: 1557, column: 21, scope: !19242)
!19258 = !DILocalVariable(name: "status", scope: !19242, file: !3, line: 1558, type: !72)
!19259 = !DILocation(line: 1558, column: 6, scope: !19242)
!19260 = !DILocation(line: 1558, column: 15, scope: !19242)
!19261 = !DILocation(line: 1558, column: 20, scope: !19242)
!19262 = !DILocalVariable(name: "agg", scope: !19242, file: !3, line: 1559, type: !10212)
!19263 = !DILocation(line: 1559, column: 17, scope: !19242)
!19264 = !DILocalVariable(name: "tp", scope: !19242, file: !3, line: 1560, type: !10280)
!19265 = !DILocation(line: 1560, column: 16, scope: !19242)
!19266 = !DILocalVariable(name: "flags", scope: !19242, file: !3, line: 1561, type: !394)
!19267 = !DILocation(line: 1561, column: 16, scope: !19242)
!19268 = !DILocation(line: 1563, column: 8, scope: !19242)
!19269 = !DILocation(line: 1563, column: 13, scope: !19242)
!19270 = !DILocation(line: 1563, column: 6, scope: !19242)
!19271 = !DILocation(line: 1564, column: 7, scope: !19272)
!19272 = distinct !DILexicalBlock(scope: !19242, file: !3, line: 1564, column: 6)
!19273 = !DILocation(line: 1564, column: 6, scope: !19242)
!19274 = !DILocation(line: 1565, column: 3, scope: !19272)
!19275 = !DILocation(line: 1567, column: 7, scope: !19242)
!19276 = !DILocation(line: 1567, column: 12, scope: !19242)
!19277 = !DILocation(line: 1567, column: 5, scope: !19242)
!19278 = !DILocation(line: 1568, column: 7, scope: !19279)
!19279 = distinct !DILexicalBlock(scope: !19242, file: !3, line: 1568, column: 6)
!19280 = !DILocation(line: 1568, column: 6, scope: !19242)
!19281 = !DILocation(line: 1569, column: 3, scope: !19279)
!19282 = !DILocation(line: 1571, column: 32, scope: !19283)
!19283 = distinct !DILexicalBlock(scope: !19242, file: !3, line: 1571, column: 6)
!19284 = !DILocation(line: 1571, column: 36, scope: !19283)
!19285 = !DILocation(line: 1571, column: 6, scope: !19283)
!19286 = !DILocation(line: 1571, column: 6, scope: !19242)
!19287 = !DILocation(line: 1572, column: 3, scope: !19283)
!19288 = !DILocation(line: 1574, column: 30, scope: !19289)
!19289 = distinct !DILexicalBlock(scope: !19242, file: !3, line: 1574, column: 6)
!19290 = !DILocation(line: 1574, column: 34, scope: !19289)
!19291 = !DILocation(line: 1574, column: 7, scope: !19289)
!19292 = !DILocation(line: 1574, column: 6, scope: !19242)
!19293 = !DILocation(line: 1575, column: 3, scope: !19289)
!19294 = !DILocation(line: 1577, column: 11, scope: !19242)
!19295 = !DILocation(line: 1577, column: 15, scope: !19242)
!19296 = !DILocation(line: 1577, column: 9, scope: !19242)
!19297 = !DILocation(line: 1581, column: 24, scope: !19298)
!19298 = distinct !DILexicalBlock(scope: !19242, file: !3, line: 1581, column: 6)
!19299 = !DILocation(line: 1581, column: 7, scope: !19298)
!19300 = !DILocation(line: 1581, column: 6, scope: !19242)
!19301 = !DILocation(line: 1582, column: 3, scope: !19298)
!19302 = !DILocation(line: 1584, column: 21, scope: !19242)
!19303 = !DILocation(line: 1584, column: 25, scope: !19242)
!19304 = !DILocation(line: 1584, column: 2, scope: !19242)
!19305 = !DILocation(line: 1586, column: 10, scope: !19242)
!19306 = !DILocation(line: 1586, column: 2, scope: !19242)
!19307 = !DILocation(line: 1588, column: 7, scope: !19308)
!19308 = distinct !DILexicalBlock(scope: !19245, file: !3, line: 1588, column: 7)
!19309 = !DILocation(line: 1588, column: 12, scope: !19308)
!19310 = !DILocation(line: 1588, column: 26, scope: !19308)
!19311 = !DILocation(line: 1588, column: 7, scope: !19245)
!19312 = !DILocation(line: 1589, column: 4, scope: !19308)
!19313 = !DILocation(line: 1591, column: 3, scope: !19245)
!19314 = !DILocation(line: 1591, column: 3, scope: !19253)
!19315 = !DILocalVariable(name: "__dummy", scope: !19316, file: !3, line: 1591, type: !394)
!19316 = distinct !DILexicalBlock(scope: !19252, file: !3, line: 1591, column: 3)
!19317 = !DILocation(line: 1591, column: 3, scope: !19316)
!19318 = !DILocalVariable(name: "__dummy2", scope: !19316, file: !3, line: 1591, type: !394)
!19319 = !DILocation(line: 1591, column: 3, scope: !19252)
!19320 = !DILocation(line: 1591, column: 3, scope: !19251)
!19321 = !DILocation(line: 1591, column: 3, scope: !19322)
!19322 = distinct !DILexicalBlock(scope: !19251, file: !3, line: 1591, column: 3)
!19323 = !DILocalVariable(name: "__dummy", scope: !19324, file: !3, line: 1591, type: !394)
!19324 = distinct !DILexicalBlock(scope: !19325, file: !3, line: 1591, column: 3)
!19325 = distinct !DILexicalBlock(scope: !19322, file: !3, line: 1591, column: 3)
!19326 = !DILocation(line: 1591, column: 3, scope: !19324)
!19327 = !DILocalVariable(name: "__dummy2", scope: !19324, file: !3, line: 1591, type: !394)
!19328 = !DILocation(line: 1591, column: 3, scope: !19325)
!19329 = !DILocation(line: 1591, column: 3, scope: !19250)
!19330 = !{i32 -2137107243}
!19331 = !DILocation(line: 1591, column: 3, scope: !19249)
!19332 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !19248)
!19333 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !19248)
!19334 = !DILocation(line: 1592, column: 18, scope: !19245)
!19335 = !DILocation(line: 1592, column: 23, scope: !19245)
!19336 = !DILocation(line: 1592, column: 30, scope: !19245)
!19337 = !DILocation(line: 1592, column: 34, scope: !19245)
!19338 = !DILocation(line: 1592, column: 3, scope: !19245)
!19339 = !DILocation(line: 1593, column: 27, scope: !19245)
!19340 = !DILocation(line: 1593, column: 31, scope: !19245)
!19341 = !DILocation(line: 1593, column: 40, scope: !19245)
!19342 = !DILocation(line: 409, column: 2, scope: !15498, inlinedAt: !19244)
!19343 = !DILocation(line: 409, column: 2, scope: !15503, inlinedAt: !19244)
!19344 = !DILocation(line: 409, column: 2, scope: !15504, inlinedAt: !19244)
!19345 = !DILocation(line: 409, column: 2, scope: !15511, inlinedAt: !19244)
!19346 = !DILocation(line: 409, column: 2, scope: !15514, inlinedAt: !19244)
!19347 = !DILocation(line: 1594, column: 18, scope: !19245)
!19348 = !DILocation(line: 1594, column: 22, scope: !19245)
!19349 = !DILocation(line: 1594, column: 3, scope: !19245)
!19350 = !DILocation(line: 1595, column: 3, scope: !19245)
!19351 = !DILocation(line: 1597, column: 18, scope: !19245)
!19352 = !DILocation(line: 1597, column: 3, scope: !19245)
!19353 = !DILocation(line: 1598, column: 23, scope: !19245)
!19354 = !DILocation(line: 1598, column: 27, scope: !19245)
!19355 = !DILocation(line: 1598, column: 3, scope: !19245)
!19356 = !DILocation(line: 1599, column: 3, scope: !19245)
!19357 = !DILocation(line: 1601, column: 3, scope: !19245)
!19358 = !DILocation(line: 1603, column: 7, scope: !19359)
!19359 = distinct !DILexicalBlock(scope: !19245, file: !3, line: 1603, column: 7)
!19360 = !DILocation(line: 1603, column: 7, scope: !19245)
!19361 = !DILocation(line: 1604, column: 16, scope: !19359)
!19362 = !DILocation(line: 1604, column: 4, scope: !19359)
!19363 = !DILocation(line: 1605, column: 3, scope: !19245)
!19364 = !DILocation(line: 1607, column: 7, scope: !19365)
!19365 = distinct !DILexicalBlock(scope: !19245, file: !3, line: 1607, column: 7)
!19366 = !DILocation(line: 1607, column: 7, scope: !19245)
!19367 = !DILocation(line: 1608, column: 16, scope: !19365)
!19368 = !DILocation(line: 1608, column: 42, scope: !19365)
!19369 = !DILocation(line: 1608, column: 4, scope: !19365)
!19370 = !DILocation(line: 1609, column: 3, scope: !19245)
!19371 = !DILocation(line: 1612, column: 18, scope: !19242)
!19372 = !DILocation(line: 1612, column: 22, scope: !19242)
!19373 = !DILocation(line: 1612, column: 2, scope: !19242)
!19374 = !DILocation(line: 1613, column: 1, scope: !19242)
!19375 = distinct !DISubprogram(name: "napi_schedule", scope: !71, file: !71, line: 449, type: !18935, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19376 = !DILocalVariable(name: "n", arg: 1, scope: !19375, file: !71, line: 449, type: !10297)
!19377 = !DILocation(line: 449, column: 54, scope: !19375)
!19378 = !DILocation(line: 451, column: 25, scope: !19379)
!19379 = distinct !DILexicalBlock(scope: !19375, file: !71, line: 451, column: 6)
!19380 = !DILocation(line: 451, column: 6, scope: !19379)
!19381 = !DILocation(line: 451, column: 6, scope: !19375)
!19382 = !DILocation(line: 452, column: 19, scope: !19379)
!19383 = !DILocation(line: 452, column: 3, scope: !19379)
!19384 = !DILocation(line: 453, column: 1, scope: !19375)
!19385 = distinct !DISubprogram(name: "usb_mark_last_busy", scope: !9505, file: !9505, line: 772, type: !19386, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19386 = !DISubroutineType(types: !19387)
!19387 = !{null, !9907}
!19388 = !DILocalVariable(name: "udev", arg: 1, scope: !19385, file: !9505, line: 772, type: !9907)
!19389 = !DILocation(line: 772, column: 58, scope: !19385)
!19390 = !DILocation(line: 774, column: 29, scope: !19385)
!19391 = !DILocation(line: 774, column: 35, scope: !19385)
!19392 = !DILocation(line: 774, column: 2, scope: !19385)
!19393 = !DILocation(line: 775, column: 1, scope: !19385)
!19394 = distinct !DISubprogram(name: "pm_runtime_mark_last_busy", scope: !19395, file: !19395, line: 194, type: !4331, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19395 = !DIFile(filename: "./include/linux/pm_runtime.h", directory: "/home/lizy2001/genbc/linux")
!19396 = !DILocalVariable(name: "dev", arg: 1, scope: !19394, file: !19395, line: 194, type: !4308)
!19397 = !DILocation(line: 194, column: 61, scope: !19394)
!19398 = !DILocation(line: 196, column: 2, scope: !19394)
!19399 = !DILocation(line: 196, column: 2, scope: !19400)
!19400 = distinct !DILexicalBlock(scope: !19394, file: !19395, line: 196, column: 2)
!19401 = !DILocation(line: 196, column: 2, scope: !19402)
!19402 = distinct !DILexicalBlock(scope: !19400, file: !19395, line: 196, column: 2)
!19403 = !DILocation(line: 196, column: 2, scope: !19404)
!19404 = distinct !DILexicalBlock(scope: !19400, file: !19395, line: 196, column: 2)
!19405 = !DILocation(line: 197, column: 1, scope: !19394)
!19406 = distinct !DISubprogram(name: "netif_tx_queue_stopped", scope: !71, file: !71, line: 3343, type: !19407, scopeLine: 3344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19407 = !DISubroutineType(types: !19408)
!19408 = !{!617, !19409}
!19409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19410, size: 64)
!19410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8915)
!19411 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !19406, file: !71, line: 3343, type: !19409)
!19412 = !DILocation(line: 3343, column: 70, scope: !19406)
!19413 = !DILocation(line: 3345, column: 43, scope: !19406)
!19414 = !DILocation(line: 3345, column: 54, scope: !19406)
!19415 = !DILocation(line: 3345, column: 9, scope: !19406)
!19416 = !DILocation(line: 3345, column: 2, scope: !19406)
!19417 = distinct !DISubprogram(name: "__bitrev32", scope: !19418, file: !19418, line: 26, type: !19419, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19418 = !DIFile(filename: "./include/linux/bitrev.h", directory: "/home/lizy2001/genbc/linux")
!19419 = !DISubroutineType(types: !19420)
!19420 = !{!784, !784}
!19421 = !DILocalVariable(name: "x", arg: 1, scope: !19417, file: !19418, line: 26, type: !784)
!19422 = !DILocation(line: 26, column: 34, scope: !19417)
!19423 = !DILocation(line: 28, column: 21, scope: !19417)
!19424 = !DILocation(line: 28, column: 23, scope: !19417)
!19425 = !DILocation(line: 28, column: 10, scope: !19417)
!19426 = !DILocation(line: 28, column: 33, scope: !19417)
!19427 = !DILocation(line: 28, column: 53, scope: !19417)
!19428 = !DILocation(line: 28, column: 55, scope: !19417)
!19429 = !DILocation(line: 28, column: 42, scope: !19417)
!19430 = !DILocation(line: 28, column: 40, scope: !19417)
!19431 = !DILocation(line: 28, column: 2, scope: !19417)
!19432 = distinct !DISubprogram(name: "__fswab32", scope: !19433, file: !19433, line: 57, type: !19434, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19433 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!19434 = !DISubroutineType(types: !19435)
!19435 = !{!545, !545}
!19436 = !DILocalVariable(name: "val", arg: 1, scope: !19432, file: !19433, line: 57, type: !545)
!19437 = !DILocation(line: 57, column: 57, scope: !19432)
!19438 = !DILocation(line: 60, column: 23, scope: !19432)
!19439 = !DILocation(line: 60, column: 9, scope: !19432)
!19440 = !DILocation(line: 60, column: 2, scope: !19432)
!19441 = distinct !DISubprogram(name: "pla_ocp_write", scope: !3, file: !3, line: 1203, type: !14632, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19442 = !DILocalVariable(name: "tp", arg: 1, scope: !19441, file: !3, line: 1203, type: !10280)
!19443 = !DILocation(line: 1203, column: 33, scope: !19441)
!19444 = !DILocalVariable(name: "index", arg: 2, scope: !19441, file: !3, line: 1203, type: !1115)
!19445 = !DILocation(line: 1203, column: 41, scope: !19441)
!19446 = !DILocalVariable(name: "byteen", arg: 3, scope: !19441, file: !3, line: 1203, type: !1115)
!19447 = !DILocation(line: 1203, column: 52, scope: !19441)
!19448 = !DILocalVariable(name: "size", arg: 4, scope: !19441, file: !3, line: 1203, type: !1115)
!19449 = !DILocation(line: 1203, column: 64, scope: !19441)
!19450 = !DILocalVariable(name: "data", arg: 5, scope: !19441, file: !3, line: 1203, type: !647)
!19451 = !DILocation(line: 1203, column: 76, scope: !19441)
!19452 = !DILocation(line: 1205, column: 27, scope: !19441)
!19453 = !DILocation(line: 1205, column: 31, scope: !19441)
!19454 = !DILocation(line: 1205, column: 38, scope: !19441)
!19455 = !DILocation(line: 1205, column: 46, scope: !19441)
!19456 = !DILocation(line: 1205, column: 52, scope: !19441)
!19457 = !DILocation(line: 1205, column: 9, scope: !19441)
!19458 = !DILocation(line: 1205, column: 2, scope: !19441)
!19459 = distinct !DISubprogram(name: "__bitrev16", scope: !19418, file: !19418, line: 21, type: !19460, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19460 = !DISubroutineType(types: !19461)
!19461 = !{!1115, !1115}
!19462 = !DILocalVariable(name: "x", arg: 1, scope: !19459, file: !19418, line: 21, type: !1115)
!19463 = !DILocation(line: 21, column: 34, scope: !19459)
!19464 = !DILocation(line: 23, column: 20, scope: !19459)
!19465 = !DILocation(line: 23, column: 22, scope: !19459)
!19466 = !DILocation(line: 23, column: 10, scope: !19459)
!19467 = !DILocation(line: 23, column: 30, scope: !19459)
!19468 = !DILocation(line: 23, column: 48, scope: !19459)
!19469 = !DILocation(line: 23, column: 50, scope: !19459)
!19470 = !DILocation(line: 23, column: 38, scope: !19459)
!19471 = !DILocation(line: 23, column: 36, scope: !19459)
!19472 = !DILocation(line: 23, column: 9, scope: !19459)
!19473 = !DILocation(line: 23, column: 2, scope: !19459)
!19474 = distinct !DISubprogram(name: "__bitrev8", scope: !19418, file: !19418, line: 16, type: !19475, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19475 = !DISubroutineType(types: !19476)
!19476 = !{!1474, !1474}
!19477 = !DILocalVariable(name: "byte", arg: 1, scope: !19474, file: !19418, line: 16, type: !1474)
!19478 = !DILocation(line: 16, column: 31, scope: !19474)
!19479 = !DILocation(line: 18, column: 24, scope: !19474)
!19480 = !DILocation(line: 18, column: 9, scope: !19474)
!19481 = !DILocation(line: 18, column: 2, scope: !19474)
!19482 = distinct !DISubprogram(name: "__arch_swab32", scope: !19483, file: !19483, line: 8, type: !19434, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19483 = !DIFile(filename: "./arch/x86/include/uapi/asm/swab.h", directory: "/home/lizy2001/genbc/linux")
!19484 = !DILocalVariable(name: "val", arg: 1, scope: !19482, file: !19483, line: 8, type: !545)
!19485 = !DILocation(line: 8, column: 61, scope: !19482)
!19486 = !DILocation(line: 10, column: 38, scope: !19482)
!19487 = !DILocation(line: 10, column: 2, scope: !19482)
!19488 = !{i32 550153}
!19489 = !DILocation(line: 11, column: 9, scope: !19482)
!19490 = !DILocation(line: 11, column: 2, scope: !19482)
!19491 = distinct !DISubprogram(name: "test_and_set_bit", scope: !12354, file: !12354, line: 68, type: !18366, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19492 = !DILocalVariable(name: "nr", arg: 1, scope: !19493, file: !12360, line: 136, type: !590)
!19493 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !12360, file: !12360, line: 136, type: !18366, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19494 = !DILocation(line: 136, column: 28, scope: !19493, inlinedAt: !19495)
!19495 = distinct !DILocation(line: 71, column: 9, scope: !19491)
!19496 = !DILocalVariable(name: "addr", arg: 2, scope: !19493, file: !12360, line: 136, type: !12357)
!19497 = !DILocation(line: 136, column: 56, scope: !19493, inlinedAt: !19495)
!19498 = !DILocalVariable(name: "c", scope: !19499, file: !12360, line: 138, type: !617)
!19499 = distinct !DILexicalBlock(scope: !19493, file: !12360, line: 138, column: 9)
!19500 = !DILocation(line: 138, column: 9, scope: !19499, inlinedAt: !19495)
!19501 = !DILocation(line: 99, column: 79, scope: !15954, inlinedAt: !19502)
!19502 = distinct !DILocation(line: 70, column: 2, scope: !19491)
!19503 = !DILocation(line: 99, column: 89, scope: !15954, inlinedAt: !19502)
!19504 = !DILocalVariable(name: "nr", arg: 1, scope: !19491, file: !12354, line: 68, type: !590)
!19505 = !DILocation(line: 68, column: 42, scope: !19491)
!19506 = !DILocalVariable(name: "addr", arg: 2, scope: !19491, file: !12354, line: 68, type: !12357)
!19507 = !DILocation(line: 68, column: 70, scope: !19491)
!19508 = !DILocation(line: 70, column: 31, scope: !19491)
!19509 = !DILocation(line: 70, column: 38, scope: !19491)
!19510 = !DILocation(line: 70, column: 36, scope: !19491)
!19511 = !DILocation(line: 101, column: 20, scope: !15954, inlinedAt: !19502)
!19512 = !DILocation(line: 101, column: 23, scope: !15954, inlinedAt: !19502)
!19513 = !DILocation(line: 101, column: 2, scope: !15954, inlinedAt: !19502)
!19514 = !DILocation(line: 102, column: 2, scope: !15954, inlinedAt: !19502)
!19515 = !DILocation(line: 71, column: 31, scope: !19491)
!19516 = !DILocation(line: 71, column: 35, scope: !19491)
!19517 = !{i32 -2147017806, i32 -2147017710}
!19518 = !DILocation(line: 71, column: 2, scope: !19491)
!19519 = distinct !DISubprogram(name: "rtl8152_request_firmware", scope: !3, file: !3, line: 4093, type: !10384, scopeLine: 4094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19520 = !DILocalVariable(name: "tp", arg: 1, scope: !19519, file: !3, line: 4093, type: !10280)
!19521 = !DILocation(line: 4093, column: 51, scope: !19519)
!19522 = !DILocalVariable(name: "rtl_fw", scope: !19519, file: !3, line: 4095, type: !12086)
!19523 = !DILocation(line: 4095, column: 17, scope: !19519)
!19524 = !DILocation(line: 4095, column: 27, scope: !19519)
!19525 = !DILocation(line: 4095, column: 31, scope: !19519)
!19526 = !DILocalVariable(name: "rc", scope: !19519, file: !3, line: 4096, type: !590)
!19527 = !DILocation(line: 4096, column: 7, scope: !19519)
!19528 = !DILocation(line: 4098, column: 6, scope: !19529)
!19529 = distinct !DILexicalBlock(scope: !19519, file: !3, line: 4098, column: 6)
!19530 = !DILocation(line: 4098, column: 14, scope: !19529)
!19531 = !DILocation(line: 4098, column: 17, scope: !19529)
!19532 = !DILocation(line: 4098, column: 21, scope: !19529)
!19533 = !DILocation(line: 4098, column: 29, scope: !19529)
!19534 = !DILocation(line: 4098, column: 6, scope: !19519)
!19535 = !DILocation(line: 4099, column: 3, scope: !19536)
!19536 = distinct !DILexicalBlock(scope: !19529, file: !3, line: 4098, column: 38)
!19537 = !DILocation(line: 4100, column: 6, scope: !19536)
!19538 = !DILocation(line: 4101, column: 3, scope: !19536)
!19539 = !DILocation(line: 4104, column: 25, scope: !19519)
!19540 = !DILocation(line: 4104, column: 33, scope: !19519)
!19541 = !DILocation(line: 4104, column: 37, scope: !19519)
!19542 = !DILocation(line: 4104, column: 45, scope: !19519)
!19543 = !DILocation(line: 4104, column: 55, scope: !19519)
!19544 = !DILocation(line: 4104, column: 59, scope: !19519)
!19545 = !DILocation(line: 4104, column: 65, scope: !19519)
!19546 = !DILocation(line: 4104, column: 7, scope: !19519)
!19547 = !DILocation(line: 4104, column: 5, scope: !19519)
!19548 = !DILocation(line: 4105, column: 6, scope: !19549)
!19549 = distinct !DILexicalBlock(scope: !19519, file: !3, line: 4105, column: 6)
!19550 = !DILocation(line: 4105, column: 9, scope: !19549)
!19551 = !DILocation(line: 4105, column: 6, scope: !19519)
!19552 = !DILocation(line: 4106, column: 3, scope: !19549)
!19553 = !DILocation(line: 4108, column: 30, scope: !19519)
!19554 = !DILocation(line: 4108, column: 34, scope: !19519)
!19555 = !DILocation(line: 4108, column: 7, scope: !19519)
!19556 = !DILocation(line: 4108, column: 5, scope: !19519)
!19557 = !DILocation(line: 4109, column: 6, scope: !19558)
!19558 = distinct !DILexicalBlock(scope: !19519, file: !3, line: 4109, column: 6)
!19559 = !DILocation(line: 4109, column: 9, scope: !19558)
!19560 = !DILocation(line: 4109, column: 6, scope: !19519)
!19561 = !DILocation(line: 4110, column: 20, scope: !19558)
!19562 = !DILocation(line: 4110, column: 28, scope: !19558)
!19563 = !DILocation(line: 4110, column: 3, scope: !19558)
!19564 = !DILocation(line: 4109, column: 11, scope: !19558)
!19565 = !DILabel(scope: !19519, name: "result", file: !3, line: 4112)
!19566 = !DILocation(line: 4112, column: 1, scope: !19519)
!19567 = !DILocation(line: 4113, column: 6, scope: !19568)
!19568 = distinct !DILexicalBlock(scope: !19519, file: !3, line: 4113, column: 6)
!19569 = !DILocation(line: 4113, column: 6, scope: !19519)
!19570 = !DILocation(line: 4114, column: 24, scope: !19571)
!19571 = distinct !DILexicalBlock(scope: !19568, file: !3, line: 4113, column: 10)
!19572 = !DILocation(line: 4114, column: 16, scope: !19571)
!19573 = !DILocation(line: 4114, column: 3, scope: !19571)
!19574 = !DILocation(line: 4114, column: 11, scope: !19571)
!19575 = !DILocation(line: 4114, column: 14, scope: !19571)
!19576 = !DILocation(line: 4116, column: 3, scope: !19571)
!19577 = !DILocation(line: 4119, column: 2, scope: !19571)
!19578 = !DILocation(line: 4121, column: 9, scope: !19519)
!19579 = !DILocation(line: 4121, column: 2, scope: !19519)
!19580 = distinct !DISubprogram(name: "rtl8152_set_speed", scope: !3, file: !3, line: 4817, type: !19581, scopeLine: 4819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19581 = !DISubroutineType(types: !19582)
!19582 = !{!72, !10280, !1474, !784, !1474, !784}
!19583 = !DILocalVariable(name: "tp", arg: 1, scope: !19580, file: !3, line: 4817, type: !10280)
!19584 = !DILocation(line: 4817, column: 44, scope: !19580)
!19585 = !DILocalVariable(name: "autoneg", arg: 2, scope: !19580, file: !3, line: 4817, type: !1474)
!19586 = !DILocation(line: 4817, column: 51, scope: !19580)
!19587 = !DILocalVariable(name: "speed", arg: 3, scope: !19580, file: !3, line: 4817, type: !784)
!19588 = !DILocation(line: 4817, column: 64, scope: !19580)
!19589 = !DILocalVariable(name: "duplex", arg: 4, scope: !19580, file: !3, line: 4817, type: !1474)
!19590 = !DILocation(line: 4817, column: 74, scope: !19580)
!19591 = !DILocalVariable(name: "advertising", arg: 5, scope: !19580, file: !3, line: 4818, type: !784)
!19592 = !DILocation(line: 4818, column: 13, scope: !19580)
!19593 = !DILocalVariable(name: "bmcr", scope: !19580, file: !3, line: 4820, type: !1115)
!19594 = !DILocation(line: 4820, column: 6, scope: !19580)
!19595 = !DILocalVariable(name: "ret", scope: !19580, file: !3, line: 4821, type: !72)
!19596 = !DILocation(line: 4821, column: 6, scope: !19580)
!19597 = !DILocation(line: 4823, column: 6, scope: !19598)
!19598 = distinct !DILexicalBlock(scope: !19580, file: !3, line: 4823, column: 6)
!19599 = !DILocation(line: 4823, column: 14, scope: !19598)
!19600 = !DILocation(line: 4823, column: 6, scope: !19580)
!19601 = !DILocation(line: 4824, column: 7, scope: !19602)
!19602 = distinct !DILexicalBlock(scope: !19603, file: !3, line: 4824, column: 7)
!19603 = distinct !DILexicalBlock(scope: !19598, file: !3, line: 4823, column: 34)
!19604 = !DILocation(line: 4824, column: 14, scope: !19602)
!19605 = !DILocation(line: 4824, column: 29, scope: !19602)
!19606 = !DILocation(line: 4824, column: 32, scope: !19602)
!19607 = !DILocation(line: 4824, column: 39, scope: !19602)
!19608 = !DILocation(line: 4824, column: 7, scope: !19603)
!19609 = !DILocation(line: 4825, column: 4, scope: !19602)
!19610 = !DILocation(line: 4827, column: 11, scope: !19603)
!19611 = !DILocation(line: 4827, column: 3, scope: !19603)
!19612 = !DILocation(line: 4829, column: 9, scope: !19613)
!19613 = distinct !DILexicalBlock(scope: !19603, file: !3, line: 4827, column: 18)
!19614 = !DILocation(line: 4830, column: 8, scope: !19615)
!19615 = distinct !DILexicalBlock(scope: !19613, file: !3, line: 4830, column: 8)
!19616 = !DILocation(line: 4830, column: 15, scope: !19615)
!19617 = !DILocation(line: 4830, column: 8, scope: !19613)
!19618 = !DILocation(line: 4831, column: 10, scope: !19619)
!19619 = distinct !DILexicalBlock(scope: !19615, file: !3, line: 4830, column: 31)
!19620 = !DILocation(line: 4832, column: 5, scope: !19619)
!19621 = !DILocation(line: 4832, column: 9, scope: !19619)
!19622 = !DILocation(line: 4832, column: 18, scope: !19619)
!19623 = !DILocation(line: 4832, column: 31, scope: !19619)
!19624 = !DILocation(line: 4833, column: 4, scope: !19619)
!19625 = !DILocation(line: 4834, column: 5, scope: !19626)
!19626 = distinct !DILexicalBlock(scope: !19615, file: !3, line: 4833, column: 11)
!19627 = !DILocation(line: 4834, column: 9, scope: !19626)
!19628 = !DILocation(line: 4834, column: 18, scope: !19626)
!19629 = !DILocation(line: 4834, column: 31, scope: !19626)
!19630 = !DILocation(line: 4836, column: 4, scope: !19613)
!19631 = !DILocation(line: 4838, column: 9, scope: !19613)
!19632 = !DILocation(line: 4839, column: 8, scope: !19633)
!19633 = distinct !DILexicalBlock(scope: !19613, file: !3, line: 4839, column: 8)
!19634 = !DILocation(line: 4839, column: 15, scope: !19633)
!19635 = !DILocation(line: 4839, column: 8, scope: !19613)
!19636 = !DILocation(line: 4840, column: 10, scope: !19637)
!19637 = distinct !DILexicalBlock(scope: !19633, file: !3, line: 4839, column: 31)
!19638 = !DILocation(line: 4841, column: 5, scope: !19637)
!19639 = !DILocation(line: 4841, column: 9, scope: !19637)
!19640 = !DILocation(line: 4841, column: 18, scope: !19637)
!19641 = !DILocation(line: 4841, column: 31, scope: !19637)
!19642 = !DILocation(line: 4842, column: 4, scope: !19637)
!19643 = !DILocation(line: 4843, column: 5, scope: !19644)
!19644 = distinct !DILexicalBlock(scope: !19633, file: !3, line: 4842, column: 11)
!19645 = !DILocation(line: 4843, column: 9, scope: !19644)
!19646 = !DILocation(line: 4843, column: 18, scope: !19644)
!19647 = !DILocation(line: 4843, column: 31, scope: !19644)
!19648 = !DILocation(line: 4845, column: 4, scope: !19613)
!19649 = !DILocation(line: 4847, column: 8, scope: !19650)
!19650 = distinct !DILexicalBlock(scope: !19613, file: !3, line: 4847, column: 8)
!19651 = !DILocation(line: 4847, column: 12, scope: !19650)
!19652 = !DILocation(line: 4847, column: 16, scope: !19650)
!19653 = !DILocation(line: 4847, column: 8, scope: !19613)
!19654 = !DILocation(line: 4848, column: 10, scope: !19655)
!19655 = distinct !DILexicalBlock(scope: !19650, file: !3, line: 4847, column: 31)
!19656 = !DILocation(line: 4849, column: 5, scope: !19655)
!19657 = !DILocation(line: 4849, column: 9, scope: !19655)
!19658 = !DILocation(line: 4849, column: 18, scope: !19655)
!19659 = !DILocation(line: 4849, column: 31, scope: !19655)
!19660 = !DILocation(line: 4850, column: 5, scope: !19655)
!19661 = !DILocation(line: 4854, column: 8, scope: !19613)
!19662 = !DILocation(line: 4855, column: 4, scope: !19613)
!19663 = !DILocation(line: 4858, column: 7, scope: !19664)
!19664 = distinct !DILexicalBlock(scope: !19603, file: !3, line: 4858, column: 7)
!19665 = !DILocation(line: 4858, column: 14, scope: !19664)
!19666 = !DILocation(line: 4858, column: 7, scope: !19603)
!19667 = !DILocation(line: 4859, column: 4, scope: !19664)
!19668 = !DILocation(line: 4859, column: 8, scope: !19664)
!19669 = !DILocation(line: 4859, column: 12, scope: !19664)
!19670 = !DILocation(line: 4859, column: 24, scope: !19664)
!19671 = !DILocation(line: 4861, column: 4, scope: !19664)
!19672 = !DILocation(line: 4861, column: 8, scope: !19664)
!19673 = !DILocation(line: 4861, column: 12, scope: !19664)
!19674 = !DILocation(line: 4861, column: 24, scope: !19664)
!19675 = !DILocation(line: 4863, column: 3, scope: !19603)
!19676 = !DILocation(line: 4863, column: 7, scope: !19603)
!19677 = !DILocation(line: 4863, column: 11, scope: !19603)
!19678 = !DILocation(line: 4863, column: 23, scope: !19603)
!19679 = !DILocation(line: 4864, column: 2, scope: !19603)
!19680 = !DILocalVariable(name: "anar", scope: !19681, file: !3, line: 4865, type: !1115)
!19681 = distinct !DILexicalBlock(scope: !19598, file: !3, line: 4864, column: 9)
!19682 = !DILocation(line: 4865, column: 7, scope: !19681)
!19683 = !DILocalVariable(name: "tmp1", scope: !19681, file: !3, line: 4865, type: !1115)
!19684 = !DILocation(line: 4865, column: 13, scope: !19681)
!19685 = !DILocalVariable(name: "support", scope: !19681, file: !3, line: 4866, type: !784)
!19686 = !DILocation(line: 4866, column: 7, scope: !19681)
!19687 = !DILocation(line: 4868, column: 11, scope: !19681)
!19688 = !DILocation(line: 4871, column: 7, scope: !19689)
!19689 = distinct !DILexicalBlock(scope: !19681, file: !3, line: 4871, column: 7)
!19690 = !DILocation(line: 4871, column: 11, scope: !19689)
!19691 = !DILocation(line: 4871, column: 15, scope: !19689)
!19692 = !DILocation(line: 4871, column: 7, scope: !19681)
!19693 = !DILocation(line: 4872, column: 12, scope: !19689)
!19694 = !DILocation(line: 4872, column: 4, scope: !19689)
!19695 = !DILocation(line: 4874, column: 9, scope: !19696)
!19696 = distinct !DILexicalBlock(scope: !19681, file: !3, line: 4874, column: 7)
!19697 = !DILocation(line: 4874, column: 23, scope: !19696)
!19698 = !DILocation(line: 4874, column: 21, scope: !19696)
!19699 = !DILocation(line: 4874, column: 7, scope: !19681)
!19700 = !DILocation(line: 4875, column: 4, scope: !19696)
!19701 = !DILocation(line: 4877, column: 26, scope: !19681)
!19702 = !DILocation(line: 4877, column: 10, scope: !19681)
!19703 = !DILocation(line: 4877, column: 8, scope: !19681)
!19704 = !DILocation(line: 4878, column: 10, scope: !19681)
!19705 = !DILocation(line: 4878, column: 15, scope: !19681)
!19706 = !DILocation(line: 4878, column: 8, scope: !19681)
!19707 = !DILocation(line: 4880, column: 7, scope: !19708)
!19708 = distinct !DILexicalBlock(scope: !19681, file: !3, line: 4880, column: 7)
!19709 = !DILocation(line: 4880, column: 19, scope: !19708)
!19710 = !DILocation(line: 4880, column: 7, scope: !19681)
!19711 = !DILocation(line: 4881, column: 9, scope: !19712)
!19712 = distinct !DILexicalBlock(scope: !19708, file: !3, line: 4880, column: 45)
!19713 = !DILocation(line: 4882, column: 4, scope: !19712)
!19714 = !DILocation(line: 4882, column: 8, scope: !19712)
!19715 = !DILocation(line: 4882, column: 17, scope: !19712)
!19716 = !DILocation(line: 4882, column: 30, scope: !19712)
!19717 = !DILocation(line: 4883, column: 3, scope: !19712)
!19718 = !DILocation(line: 4884, column: 7, scope: !19719)
!19719 = distinct !DILexicalBlock(scope: !19681, file: !3, line: 4884, column: 7)
!19720 = !DILocation(line: 4884, column: 19, scope: !19719)
!19721 = !DILocation(line: 4884, column: 7, scope: !19681)
!19722 = !DILocation(line: 4885, column: 9, scope: !19723)
!19723 = distinct !DILexicalBlock(scope: !19719, file: !3, line: 4884, column: 45)
!19724 = !DILocation(line: 4886, column: 4, scope: !19723)
!19725 = !DILocation(line: 4886, column: 8, scope: !19723)
!19726 = !DILocation(line: 4886, column: 17, scope: !19723)
!19727 = !DILocation(line: 4886, column: 30, scope: !19723)
!19728 = !DILocation(line: 4887, column: 3, scope: !19723)
!19729 = !DILocation(line: 4889, column: 7, scope: !19730)
!19730 = distinct !DILexicalBlock(scope: !19681, file: !3, line: 4889, column: 7)
!19731 = !DILocation(line: 4889, column: 19, scope: !19730)
!19732 = !DILocation(line: 4889, column: 7, scope: !19681)
!19733 = !DILocation(line: 4890, column: 9, scope: !19734)
!19734 = distinct !DILexicalBlock(scope: !19730, file: !3, line: 4889, column: 46)
!19735 = !DILocation(line: 4891, column: 4, scope: !19734)
!19736 = !DILocation(line: 4891, column: 8, scope: !19734)
!19737 = !DILocation(line: 4891, column: 17, scope: !19734)
!19738 = !DILocation(line: 4891, column: 30, scope: !19734)
!19739 = !DILocation(line: 4892, column: 3, scope: !19734)
!19740 = !DILocation(line: 4893, column: 7, scope: !19741)
!19741 = distinct !DILexicalBlock(scope: !19681, file: !3, line: 4893, column: 7)
!19742 = !DILocation(line: 4893, column: 19, scope: !19741)
!19743 = !DILocation(line: 4893, column: 7, scope: !19681)
!19744 = !DILocation(line: 4894, column: 9, scope: !19745)
!19745 = distinct !DILexicalBlock(scope: !19741, file: !3, line: 4893, column: 46)
!19746 = !DILocation(line: 4895, column: 4, scope: !19745)
!19747 = !DILocation(line: 4895, column: 8, scope: !19745)
!19748 = !DILocation(line: 4895, column: 17, scope: !19745)
!19749 = !DILocation(line: 4895, column: 30, scope: !19745)
!19750 = !DILocation(line: 4896, column: 3, scope: !19745)
!19751 = !DILocation(line: 4898, column: 7, scope: !19752)
!19752 = distinct !DILexicalBlock(scope: !19681, file: !3, line: 4898, column: 7)
!19753 = !DILocation(line: 4898, column: 15, scope: !19752)
!19754 = !DILocation(line: 4898, column: 12, scope: !19752)
!19755 = !DILocation(line: 4898, column: 7, scope: !19681)
!19756 = !DILocation(line: 4899, column: 21, scope: !19757)
!19757 = distinct !DILexicalBlock(scope: !19752, file: !3, line: 4898, column: 21)
!19758 = !DILocation(line: 4899, column: 40, scope: !19757)
!19759 = !DILocation(line: 4899, column: 4, scope: !19757)
!19760 = !DILocation(line: 4900, column: 26, scope: !19757)
!19761 = !DILocation(line: 4900, column: 4, scope: !19757)
!19762 = !DILocation(line: 4900, column: 8, scope: !19757)
!19763 = !DILocation(line: 4900, column: 12, scope: !19757)
!19764 = !DILocation(line: 4900, column: 24, scope: !19757)
!19765 = !DILocation(line: 4901, column: 3, scope: !19757)
!19766 = !DILocation(line: 4903, column: 7, scope: !19767)
!19767 = distinct !DILexicalBlock(scope: !19681, file: !3, line: 4903, column: 7)
!19768 = !DILocation(line: 4903, column: 11, scope: !19767)
!19769 = !DILocation(line: 4903, column: 15, scope: !19767)
!19770 = !DILocation(line: 4903, column: 7, scope: !19681)
!19771 = !DILocalVariable(name: "gbcr", scope: !19772, file: !3, line: 4904, type: !1115)
!19772 = distinct !DILexicalBlock(scope: !19767, file: !3, line: 4903, column: 30)
!19773 = !DILocation(line: 4904, column: 8, scope: !19772)
!19774 = !DILocation(line: 4906, column: 27, scope: !19772)
!19775 = !DILocation(line: 4906, column: 11, scope: !19772)
!19776 = !DILocation(line: 4906, column: 9, scope: !19772)
!19777 = !DILocation(line: 4907, column: 11, scope: !19772)
!19778 = !DILocation(line: 4907, column: 16, scope: !19772)
!19779 = !DILocation(line: 4907, column: 9, scope: !19772)
!19780 = !DILocation(line: 4910, column: 8, scope: !19781)
!19781 = distinct !DILexicalBlock(scope: !19772, file: !3, line: 4910, column: 8)
!19782 = !DILocation(line: 4910, column: 20, scope: !19781)
!19783 = !DILocation(line: 4910, column: 8, scope: !19772)
!19784 = !DILocation(line: 4911, column: 10, scope: !19785)
!19785 = distinct !DILexicalBlock(scope: !19781, file: !3, line: 4910, column: 48)
!19786 = !DILocation(line: 4912, column: 5, scope: !19785)
!19787 = !DILocation(line: 4912, column: 9, scope: !19785)
!19788 = !DILocation(line: 4912, column: 18, scope: !19785)
!19789 = !DILocation(line: 4912, column: 31, scope: !19785)
!19790 = !DILocation(line: 4913, column: 4, scope: !19785)
!19791 = !DILocation(line: 4915, column: 8, scope: !19792)
!19792 = distinct !DILexicalBlock(scope: !19772, file: !3, line: 4915, column: 8)
!19793 = !DILocation(line: 4915, column: 16, scope: !19792)
!19794 = !DILocation(line: 4915, column: 13, scope: !19792)
!19795 = !DILocation(line: 4915, column: 8, scope: !19772)
!19796 = !DILocation(line: 4916, column: 22, scope: !19792)
!19797 = !DILocation(line: 4916, column: 40, scope: !19792)
!19798 = !DILocation(line: 4916, column: 5, scope: !19792)
!19799 = !DILocation(line: 4917, column: 3, scope: !19772)
!19800 = !DILocation(line: 4919, column: 8, scope: !19681)
!19801 = !DILocation(line: 4921, column: 3, scope: !19681)
!19802 = !DILocation(line: 4921, column: 7, scope: !19681)
!19803 = !DILocation(line: 4921, column: 11, scope: !19681)
!19804 = !DILocation(line: 4921, column: 23, scope: !19681)
!19805 = !DILocation(line: 4924, column: 37, scope: !19806)
!19806 = distinct !DILexicalBlock(scope: !19580, file: !3, line: 4924, column: 6)
!19807 = !DILocation(line: 4924, column: 41, scope: !19806)
!19808 = !DILocation(line: 4924, column: 6, scope: !19806)
!19809 = !DILocation(line: 4924, column: 6, scope: !19580)
!19810 = !DILocation(line: 4925, column: 8, scope: !19806)
!19811 = !DILocation(line: 4925, column: 3, scope: !19806)
!19812 = !DILocation(line: 4927, column: 19, scope: !19580)
!19813 = !DILocation(line: 4927, column: 33, scope: !19580)
!19814 = !DILocation(line: 4927, column: 2, scope: !19580)
!19815 = !DILocation(line: 4929, column: 6, scope: !19816)
!19816 = distinct !DILexicalBlock(scope: !19580, file: !3, line: 4929, column: 6)
!19817 = !DILocation(line: 4929, column: 11, scope: !19816)
!19818 = !DILocation(line: 4929, column: 6, scope: !19580)
!19819 = !DILocalVariable(name: "i", scope: !19820, file: !3, line: 4930, type: !72)
!19820 = distinct !DILexicalBlock(scope: !19816, file: !3, line: 4929, column: 25)
!19821 = !DILocation(line: 4930, column: 7, scope: !19820)
!19822 = !DILocation(line: 4932, column: 10, scope: !19823)
!19823 = distinct !DILexicalBlock(scope: !19820, file: !3, line: 4932, column: 3)
!19824 = !DILocation(line: 4932, column: 8, scope: !19823)
!19825 = !DILocation(line: 4932, column: 15, scope: !19826)
!19826 = distinct !DILexicalBlock(scope: !19823, file: !3, line: 4932, column: 3)
!19827 = !DILocation(line: 4932, column: 17, scope: !19826)
!19828 = !DILocation(line: 4932, column: 3, scope: !19823)
!19829 = !DILocation(line: 4933, column: 4, scope: !19830)
!19830 = distinct !DILexicalBlock(scope: !19826, file: !3, line: 4932, column: 28)
!19831 = !DILocation(line: 4934, column: 25, scope: !19832)
!19832 = distinct !DILexicalBlock(scope: !19830, file: !3, line: 4934, column: 8)
!19833 = !DILocation(line: 4934, column: 9, scope: !19832)
!19834 = !DILocation(line: 4934, column: 39, scope: !19832)
!19835 = !DILocation(line: 4934, column: 53, scope: !19832)
!19836 = !DILocation(line: 4934, column: 8, scope: !19830)
!19837 = !DILocation(line: 4935, column: 5, scope: !19832)
!19838 = !DILocation(line: 4936, column: 3, scope: !19830)
!19839 = !DILocation(line: 4932, column: 24, scope: !19826)
!19840 = !DILocation(line: 4932, column: 3, scope: !19826)
!19841 = distinct !{!19841, !19828, !19842}
!19842 = !DILocation(line: 4936, column: 3, scope: !19823)
!19843 = !DILocation(line: 4937, column: 2, scope: !19820)
!19844 = !DILocation(line: 4929, column: 13, scope: !19816)
!19845 = !DILabel(scope: !19580, name: "out", file: !3, line: 4939)
!19846 = !DILocation(line: 4939, column: 1, scope: !19580)
!19847 = !DILocation(line: 4940, column: 9, scope: !19580)
!19848 = !DILocation(line: 4940, column: 2, scope: !19580)
!19849 = !DILocation(line: 4941, column: 1, scope: !19580)
!19850 = distinct !DISubprogram(name: "rtl8152_check_firmware", scope: !3, file: !3, line: 3796, type: !19851, scopeLine: 3797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!19851 = !DISubroutineType(types: !19852)
!19852 = !{!590, !10280, !12086}
!19853 = !DILocalVariable(name: "tp", arg: 1, scope: !19850, file: !3, line: 3796, type: !10280)
!19854 = !DILocation(line: 3796, column: 50, scope: !19850)
!19855 = !DILocalVariable(name: "rtl_fw", arg: 2, scope: !19850, file: !3, line: 3796, type: !12086)
!19856 = !DILocation(line: 3796, column: 69, scope: !19850)
!19857 = !DILocalVariable(name: "fw", scope: !19850, file: !3, line: 3798, type: !10426)
!19858 = !DILocation(line: 3798, column: 25, scope: !19850)
!19859 = !DILocation(line: 3798, column: 30, scope: !19850)
!19860 = !DILocation(line: 3798, column: 38, scope: !19850)
!19861 = !DILocalVariable(name: "fw_hdr", scope: !19850, file: !3, line: 3799, type: !10468)
!19862 = !DILocation(line: 3799, column: 20, scope: !19850)
!19863 = !DILocation(line: 3799, column: 49, scope: !19850)
!19864 = !DILocation(line: 3799, column: 53, scope: !19850)
!19865 = !DILocation(line: 3799, column: 29, scope: !19850)
!19866 = !DILocalVariable(name: "pla", scope: !19850, file: !3, line: 3800, type: !10481)
!19867 = !DILocation(line: 3800, column: 17, scope: !19850)
!19868 = !DILocalVariable(name: "usb", scope: !19850, file: !3, line: 3800, type: !10481)
!19869 = !DILocation(line: 3800, column: 30, scope: !19850)
!19870 = !DILocalVariable(name: "start", scope: !19850, file: !3, line: 3801, type: !10499)
!19871 = !DILocation(line: 3801, column: 27, scope: !19850)
!19872 = !DILocalVariable(name: "phy_nc", scope: !19850, file: !3, line: 3802, type: !10506)
!19873 = !DILocation(line: 3802, column: 20, scope: !19850)
!19874 = !DILocalVariable(name: "stop", scope: !19850, file: !3, line: 3803, type: !10480)
!19875 = !DILocation(line: 3803, column: 19, scope: !19850)
!19876 = !DILocalVariable(name: "ret", scope: !19850, file: !3, line: 3804, type: !590)
!19877 = !DILocation(line: 3804, column: 7, scope: !19850)
!19878 = !DILocalVariable(name: "i", scope: !19850, file: !3, line: 3805, type: !72)
!19879 = !DILocation(line: 3805, column: 6, scope: !19850)
!19880 = !DILocation(line: 3807, column: 6, scope: !19881)
!19881 = distinct !DILexicalBlock(scope: !19850, file: !3, line: 3807, column: 6)
!19882 = !DILocation(line: 3807, column: 10, scope: !19881)
!19883 = !DILocation(line: 3807, column: 15, scope: !19881)
!19884 = !DILocation(line: 3807, column: 6, scope: !19850)
!19885 = !DILocation(line: 3808, column: 3, scope: !19886)
!19886 = distinct !DILexicalBlock(scope: !19881, file: !3, line: 3807, column: 34)
!19887 = !DILocation(line: 3809, column: 3, scope: !19886)
!19888 = !DILocation(line: 3812, column: 35, scope: !19850)
!19889 = !DILocation(line: 3812, column: 39, scope: !19850)
!19890 = !DILocation(line: 3812, column: 47, scope: !19850)
!19891 = !DILocation(line: 3812, column: 51, scope: !19850)
!19892 = !DILocation(line: 3812, column: 8, scope: !19850)
!19893 = !DILocation(line: 3812, column: 6, scope: !19850)
!19894 = !DILocation(line: 3813, column: 6, scope: !19895)
!19895 = distinct !DILexicalBlock(scope: !19850, file: !3, line: 3813, column: 6)
!19896 = !DILocation(line: 3813, column: 6, scope: !19850)
!19897 = !DILocation(line: 3814, column: 3, scope: !19895)
!19898 = !DILocation(line: 3816, column: 6, scope: !19850)
!19899 = !DILocation(line: 3818, column: 9, scope: !19900)
!19900 = distinct !DILexicalBlock(scope: !19850, file: !3, line: 3818, column: 2)
!19901 = !DILocation(line: 3818, column: 7, scope: !19900)
!19902 = !DILocation(line: 3818, column: 28, scope: !19903)
!19903 = distinct !DILexicalBlock(scope: !19900, file: !3, line: 3818, column: 2)
!19904 = !DILocation(line: 3818, column: 32, scope: !19903)
!19905 = !DILocation(line: 3818, column: 36, scope: !19903)
!19906 = !DILocation(line: 3818, column: 30, scope: !19903)
!19907 = !DILocation(line: 3818, column: 2, scope: !19900)
!19908 = !DILocalVariable(name: "block", scope: !19909, file: !3, line: 3819, type: !10480)
!19909 = distinct !DILexicalBlock(scope: !19903, file: !3, line: 3818, column: 43)
!19910 = !DILocation(line: 3819, column: 20, scope: !19909)
!19911 = !DILocation(line: 3819, column: 48, scope: !19909)
!19912 = !DILocation(line: 3819, column: 52, scope: !19909)
!19913 = !DILocation(line: 3819, column: 57, scope: !19909)
!19914 = !DILocation(line: 3819, column: 28, scope: !19909)
!19915 = !DILocalVariable(name: "type", scope: !19909, file: !3, line: 3820, type: !784)
!19916 = !DILocation(line: 3820, column: 7, scope: !19909)
!19917 = !DILocation(line: 3822, column: 8, scope: !19918)
!19918 = distinct !DILexicalBlock(scope: !19909, file: !3, line: 3822, column: 7)
!19919 = !DILocation(line: 3822, column: 10, scope: !19918)
!19920 = !DILocation(line: 3822, column: 30, scope: !19918)
!19921 = !DILocation(line: 3822, column: 34, scope: !19918)
!19922 = !DILocation(line: 3822, column: 28, scope: !19918)
!19923 = !DILocation(line: 3822, column: 7, scope: !19909)
!19924 = !DILocation(line: 3823, column: 4, scope: !19918)
!19925 = !DILocation(line: 3825, column: 10, scope: !19909)
!19926 = !DILocation(line: 3825, column: 8, scope: !19909)
!19927 = !DILocation(line: 3826, column: 11, scope: !19909)
!19928 = !DILocation(line: 3826, column: 3, scope: !19909)
!19929 = !DILocation(line: 3828, column: 8, scope: !19930)
!19930 = distinct !DILexicalBlock(scope: !19931, file: !3, line: 3828, column: 8)
!19931 = distinct !DILexicalBlock(scope: !19909, file: !3, line: 3826, column: 17)
!19932 = !DILocation(line: 3828, column: 37, scope: !19930)
!19933 = !DILocation(line: 3828, column: 8, scope: !19931)
!19934 = !DILocation(line: 3829, column: 5, scope: !19930)
!19935 = !DILocation(line: 3830, column: 4, scope: !19931)
!19936 = !DILocation(line: 3832, column: 8, scope: !19937)
!19937 = distinct !DILexicalBlock(scope: !19931, file: !3, line: 3832, column: 8)
!19938 = !DILocation(line: 3832, column: 8, scope: !19931)
!19939 = !DILocation(line: 3833, column: 5, scope: !19940)
!19940 = distinct !DILexicalBlock(scope: !19937, file: !3, line: 3832, column: 13)
!19941 = !DILocation(line: 3835, column: 5, scope: !19940)
!19942 = !DILocation(line: 3838, column: 27, scope: !19931)
!19943 = !DILocation(line: 3838, column: 10, scope: !19931)
!19944 = !DILocation(line: 3838, column: 8, scope: !19931)
!19945 = !DILocation(line: 3839, column: 30, scope: !19946)
!19946 = distinct !DILexicalBlock(scope: !19931, file: !3, line: 3839, column: 8)
!19947 = !DILocation(line: 3839, column: 34, scope: !19946)
!19948 = !DILocation(line: 3839, column: 9, scope: !19946)
!19949 = !DILocation(line: 3839, column: 8, scope: !19931)
!19950 = !DILocation(line: 3840, column: 5, scope: !19951)
!19951 = distinct !DILexicalBlock(scope: !19946, file: !3, line: 3839, column: 40)
!19952 = !DILocation(line: 3842, column: 5, scope: !19951)
!19953 = !DILocation(line: 3844, column: 4, scope: !19931)
!19954 = !DILocation(line: 3846, column: 8, scope: !19955)
!19955 = distinct !DILexicalBlock(scope: !19931, file: !3, line: 3846, column: 8)
!19956 = !DILocation(line: 3846, column: 8, scope: !19931)
!19957 = !DILocation(line: 3847, column: 5, scope: !19958)
!19958 = distinct !DILexicalBlock(scope: !19955, file: !3, line: 3846, column: 13)
!19959 = !DILocation(line: 3849, column: 5, scope: !19958)
!19960 = !DILocation(line: 3852, column: 27, scope: !19931)
!19961 = !DILocation(line: 3852, column: 10, scope: !19931)
!19962 = !DILocation(line: 3852, column: 8, scope: !19931)
!19963 = !DILocation(line: 3853, column: 30, scope: !19964)
!19964 = distinct !DILexicalBlock(scope: !19931, file: !3, line: 3853, column: 8)
!19965 = !DILocation(line: 3853, column: 34, scope: !19964)
!19966 = !DILocation(line: 3853, column: 9, scope: !19964)
!19967 = !DILocation(line: 3853, column: 8, scope: !19931)
!19968 = !DILocation(line: 3854, column: 5, scope: !19969)
!19969 = distinct !DILexicalBlock(scope: !19964, file: !3, line: 3853, column: 40)
!19970 = !DILocation(line: 3856, column: 5, scope: !19969)
!19971 = !DILocation(line: 3858, column: 4, scope: !19931)
!19972 = !DILocation(line: 3860, column: 8, scope: !19973)
!19973 = distinct !DILexicalBlock(scope: !19931, file: !3, line: 3860, column: 8)
!19974 = !DILocation(line: 3860, column: 14, scope: !19973)
!19975 = !DILocation(line: 3860, column: 17, scope: !19973)
!19976 = !DILocation(line: 3860, column: 24, scope: !19973)
!19977 = !DILocation(line: 3860, column: 27, scope: !19973)
!19978 = !DILocation(line: 3860, column: 8, scope: !19931)
!19979 = !DILocation(line: 3861, column: 5, scope: !19980)
!19980 = distinct !DILexicalBlock(scope: !19973, file: !3, line: 3860, column: 33)
!19981 = !DILocation(line: 3863, column: 5, scope: !19980)
!19982 = !DILocation(line: 3866, column: 8, scope: !19983)
!19983 = distinct !DILexicalBlock(scope: !19931, file: !3, line: 3866, column: 8)
!19984 = !DILocation(line: 3866, column: 37, scope: !19983)
!19985 = !DILocation(line: 3866, column: 8, scope: !19931)
!19986 = !DILocation(line: 3867, column: 5, scope: !19987)
!19987 = distinct !DILexicalBlock(scope: !19983, file: !3, line: 3866, column: 56)
!19988 = !DILocation(line: 3869, column: 5, scope: !19987)
!19989 = !DILocation(line: 3872, column: 39, scope: !19931)
!19990 = !DILocation(line: 3872, column: 12, scope: !19931)
!19991 = !DILocation(line: 3872, column: 10, scope: !19931)
!19992 = !DILocation(line: 3873, column: 4, scope: !19931)
!19993 = !DILocation(line: 3875, column: 8, scope: !19994)
!19994 = distinct !DILexicalBlock(scope: !19931, file: !3, line: 3875, column: 8)
!19995 = !DILocation(line: 3875, column: 13, scope: !19994)
!19996 = !DILocation(line: 3875, column: 17, scope: !19994)
!19997 = !DILocation(line: 3875, column: 8, scope: !19931)
!19998 = !DILocation(line: 3876, column: 5, scope: !19999)
!19999 = distinct !DILexicalBlock(scope: !19994, file: !3, line: 3875, column: 24)
!20000 = !DILocation(line: 3878, column: 5, scope: !19999)
!20001 = !DILocation(line: 3881, column: 8, scope: !20002)
!20002 = distinct !DILexicalBlock(scope: !19931, file: !3, line: 3881, column: 8)
!20003 = !DILocation(line: 3881, column: 37, scope: !20002)
!20004 = !DILocation(line: 3881, column: 8, scope: !19931)
!20005 = !DILocation(line: 3882, column: 5, scope: !20006)
!20006 = distinct !DILexicalBlock(scope: !20002, file: !3, line: 3881, column: 56)
!20007 = !DILocation(line: 3884, column: 5, scope: !20006)
!20008 = !DILocation(line: 3887, column: 11, scope: !19931)
!20009 = !DILocation(line: 3887, column: 9, scope: !19931)
!20010 = !DILocation(line: 3888, column: 4, scope: !19931)
!20011 = !DILocation(line: 3890, column: 9, scope: !20012)
!20012 = distinct !DILexicalBlock(scope: !19931, file: !3, line: 3890, column: 8)
!20013 = !DILocation(line: 3890, column: 15, scope: !20012)
!20014 = !DILocation(line: 3890, column: 18, scope: !20012)
!20015 = !DILocation(line: 3890, column: 8, scope: !19931)
!20016 = !DILocation(line: 3891, column: 5, scope: !20017)
!20017 = distinct !DILexicalBlock(scope: !20012, file: !3, line: 3890, column: 24)
!20018 = !DILocation(line: 3893, column: 5, scope: !20017)
!20019 = !DILocation(line: 3896, column: 8, scope: !20020)
!20020 = distinct !DILexicalBlock(scope: !19931, file: !3, line: 3896, column: 8)
!20021 = !DILocation(line: 3896, column: 8, scope: !19931)
!20022 = !DILocation(line: 3897, column: 5, scope: !20023)
!20023 = distinct !DILexicalBlock(scope: !20020, file: !3, line: 3896, column: 16)
!20024 = !DILocation(line: 3899, column: 5, scope: !20023)
!20025 = !DILocation(line: 3902, column: 33, scope: !19931)
!20026 = !DILocation(line: 3902, column: 13, scope: !19931)
!20027 = !DILocation(line: 3902, column: 11, scope: !19931)
!20028 = !DILocation(line: 3903, column: 33, scope: !20029)
!20029 = distinct !DILexicalBlock(scope: !19931, file: !3, line: 3903, column: 8)
!20030 = !DILocation(line: 3903, column: 37, scope: !20029)
!20031 = !DILocation(line: 3903, column: 9, scope: !20029)
!20032 = !DILocation(line: 3903, column: 8, scope: !19931)
!20033 = !DILocation(line: 3904, column: 5, scope: !20034)
!20034 = distinct !DILexicalBlock(scope: !20029, file: !3, line: 3903, column: 46)
!20035 = !DILocation(line: 3906, column: 5, scope: !20034)
!20036 = !DILocation(line: 3909, column: 4, scope: !19931)
!20037 = !DILocation(line: 3911, column: 4, scope: !19931)
!20038 = !DILocation(line: 3913, column: 4, scope: !19931)
!20039 = !DILocation(line: 3917, column: 8, scope: !19909)
!20040 = !DILocation(line: 3917, column: 5, scope: !19909)
!20041 = !DILocation(line: 3818, column: 2, scope: !19903)
!20042 = distinct !{!20042, !19907, !20043}
!20043 = !DILocation(line: 3918, column: 2, scope: !19900)
!20044 = !DILabel(scope: !19850, name: "fw_end", file: !3, line: 3920)
!20045 = !DILocation(line: 3920, column: 1, scope: !19850)
!20046 = !DILocation(line: 3921, column: 7, scope: !20047)
!20047 = distinct !DILexicalBlock(scope: !19850, file: !3, line: 3921, column: 6)
!20048 = !DILocation(line: 3921, column: 14, scope: !20047)
!20049 = !DILocation(line: 3921, column: 17, scope: !20047)
!20050 = !DILocation(line: 3921, column: 24, scope: !20047)
!20051 = !DILocation(line: 3921, column: 28, scope: !20047)
!20052 = !DILocation(line: 3921, column: 6, scope: !19850)
!20053 = !DILocation(line: 3922, column: 3, scope: !20054)
!20054 = distinct !DILexicalBlock(scope: !20047, file: !3, line: 3921, column: 34)
!20055 = !DILocation(line: 3923, column: 3, scope: !20054)
!20056 = !DILocation(line: 3926, column: 2, scope: !19850)
!20057 = !DILabel(scope: !19850, name: "fail", file: !3, line: 3927)
!20058 = !DILocation(line: 3927, column: 1, scope: !19850)
!20059 = !DILocation(line: 3928, column: 9, scope: !19850)
!20060 = !DILocation(line: 3928, column: 2, scope: !19850)
!20061 = !DILocation(line: 3929, column: 1, scope: !19850)
!20062 = distinct !DISubprogram(name: "ERR_PTR", scope: !16945, file: !16945, line: 24, type: !20063, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!20063 = !DISubroutineType(types: !20064)
!20064 = !{!647, !590}
!20065 = !DILocalVariable(name: "error", arg: 1, scope: !20062, file: !16945, line: 24, type: !590)
!20066 = !DILocation(line: 24, column: 48, scope: !20062)
!20067 = !DILocation(line: 26, column: 18, scope: !20062)
!20068 = !DILocation(line: 26, column: 9, scope: !20062)
!20069 = !DILocation(line: 26, column: 2, scope: !20062)
!20070 = distinct !DISubprogram(name: "rtl8152_fw_verify_checksum", scope: !3, file: !3, line: 3749, type: !20071, scopeLine: 3751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!20071 = !DISubroutineType(types: !20072)
!20072 = !{!590, !10280, !10468, !671}
!20073 = !DILocation(line: 445, column: 72, scope: !11595, inlinedAt: !20074)
!20074 = distinct !DILocation(line: 552, column: 10, scope: !11600, inlinedAt: !20075)
!20075 = distinct !DILocation(line: 3772, column: 10, scope: !20070)
!20076 = !DILocation(line: 446, column: 9, scope: !11595, inlinedAt: !20074)
!20077 = !DILocation(line: 446, column: 23, scope: !11595, inlinedAt: !20074)
!20078 = !DILocation(line: 448, column: 8, scope: !11595, inlinedAt: !20074)
!20079 = !DILocation(line: 318, column: 67, scope: !11613, inlinedAt: !20080)
!20080 = distinct !DILocation(line: 553, column: 20, scope: !11600, inlinedAt: !20075)
!20081 = !DILocation(line: 346, column: 58, scope: !11619, inlinedAt: !20082)
!20082 = distinct !DILocation(line: 547, column: 11, scope: !11600, inlinedAt: !20075)
!20083 = !DILocation(line: 472, column: 28, scope: !11625, inlinedAt: !20084)
!20084 = distinct !DILocation(line: 481, column: 9, scope: !11630, inlinedAt: !20085)
!20085 = distinct !DILocation(line: 545, column: 11, scope: !11632, inlinedAt: !20075)
!20086 = !DILocation(line: 472, column: 40, scope: !11625, inlinedAt: !20084)
!20087 = !DILocation(line: 472, column: 60, scope: !11625, inlinedAt: !20084)
!20088 = !DILocation(line: 478, column: 51, scope: !11630, inlinedAt: !20085)
!20089 = !DILocation(line: 478, column: 63, scope: !11630, inlinedAt: !20085)
!20090 = !DILocation(line: 480, column: 15, scope: !11630, inlinedAt: !20085)
!20091 = !DILocation(line: 538, column: 45, scope: !11602, inlinedAt: !20075)
!20092 = !DILocation(line: 538, column: 57, scope: !11602, inlinedAt: !20075)
!20093 = !DILocation(line: 542, column: 16, scope: !11600, inlinedAt: !20075)
!20094 = !DILocalVariable(name: "tp", arg: 1, scope: !20070, file: !3, line: 3749, type: !10280)
!20095 = !DILocation(line: 3749, column: 54, scope: !20070)
!20096 = !DILocalVariable(name: "fw_hdr", arg: 2, scope: !20070, file: !3, line: 3750, type: !10468)
!20097 = !DILocation(line: 3750, column: 30, scope: !20070)
!20098 = !DILocalVariable(name: "size", arg: 3, scope: !20070, file: !3, line: 3750, type: !671)
!20099 = !DILocation(line: 3750, column: 45, scope: !20070)
!20100 = !DILocalVariable(name: "checksum", scope: !20070, file: !3, line: 3752, type: !792)
!20101 = !DILocation(line: 3752, column: 16, scope: !20070)
!20102 = !DILocalVariable(name: "alg", scope: !20070, file: !3, line: 3753, type: !10554)
!20103 = !DILocation(line: 3753, column: 23, scope: !20070)
!20104 = !DILocalVariable(name: "sdesc", scope: !20070, file: !3, line: 3754, type: !10550)
!20105 = !DILocation(line: 3754, column: 21, scope: !20070)
!20106 = !DILocalVariable(name: "len", scope: !20070, file: !3, line: 3755, type: !671)
!20107 = !DILocation(line: 3755, column: 9, scope: !20070)
!20108 = !DILocalVariable(name: "rc", scope: !20070, file: !3, line: 3756, type: !590)
!20109 = !DILocation(line: 3756, column: 7, scope: !20070)
!20110 = !DILocation(line: 3758, column: 8, scope: !20070)
!20111 = !DILocation(line: 3758, column: 6, scope: !20070)
!20112 = !DILocation(line: 3759, column: 13, scope: !20113)
!20113 = distinct !DILexicalBlock(scope: !20070, file: !3, line: 3759, column: 6)
!20114 = !DILocation(line: 3759, column: 6, scope: !20113)
!20115 = !DILocation(line: 3759, column: 6, scope: !20070)
!20116 = !DILocation(line: 3760, column: 16, scope: !20117)
!20117 = distinct !DILexicalBlock(scope: !20113, file: !3, line: 3759, column: 19)
!20118 = !DILocation(line: 3760, column: 8, scope: !20117)
!20119 = !DILocation(line: 3760, column: 6, scope: !20117)
!20120 = !DILocation(line: 3761, column: 3, scope: !20117)
!20121 = !DILocation(line: 3764, column: 30, scope: !20122)
!20122 = distinct !DILexicalBlock(scope: !20070, file: !3, line: 3764, column: 6)
!20123 = !DILocation(line: 3764, column: 6, scope: !20122)
!20124 = !DILocation(line: 3764, column: 35, scope: !20122)
!20125 = !DILocation(line: 3764, column: 6, scope: !20070)
!20126 = !DILocation(line: 3765, column: 6, scope: !20127)
!20127 = distinct !DILexicalBlock(scope: !20122, file: !3, line: 3764, column: 64)
!20128 = !DILocation(line: 3766, column: 3, scope: !20127)
!20129 = !DILocation(line: 3768, column: 3, scope: !20127)
!20130 = !DILocation(line: 3771, column: 47, scope: !20070)
!20131 = !DILocation(line: 3771, column: 25, scope: !20070)
!20132 = !DILocation(line: 3771, column: 23, scope: !20070)
!20133 = !DILocation(line: 3771, column: 6, scope: !20070)
!20134 = !DILocation(line: 3772, column: 18, scope: !20070)
!20135 = !DILocation(line: 540, column: 27, scope: !11601, inlinedAt: !20075)
!20136 = !DILocation(line: 540, column: 6, scope: !11601, inlinedAt: !20075)
!20137 = !DILocation(line: 540, column: 6, scope: !11602, inlinedAt: !20075)
!20138 = !DILocation(line: 544, column: 7, scope: !11632, inlinedAt: !20075)
!20139 = !DILocation(line: 544, column: 12, scope: !11632, inlinedAt: !20075)
!20140 = !DILocation(line: 544, column: 7, scope: !11600, inlinedAt: !20075)
!20141 = !DILocation(line: 545, column: 25, scope: !11632, inlinedAt: !20075)
!20142 = !DILocation(line: 545, column: 31, scope: !11632, inlinedAt: !20075)
!20143 = !DILocation(line: 480, column: 33, scope: !11630, inlinedAt: !20085)
!20144 = !DILocation(line: 480, column: 23, scope: !11630, inlinedAt: !20085)
!20145 = !DILocation(line: 481, column: 29, scope: !11630, inlinedAt: !20085)
!20146 = !DILocation(line: 481, column: 35, scope: !11630, inlinedAt: !20085)
!20147 = !DILocation(line: 481, column: 42, scope: !11630, inlinedAt: !20085)
!20148 = !DILocation(line: 474, column: 23, scope: !11625, inlinedAt: !20084)
!20149 = !DILocation(line: 474, column: 29, scope: !11625, inlinedAt: !20084)
!20150 = !DILocation(line: 474, column: 36, scope: !11625, inlinedAt: !20084)
!20151 = !DILocation(line: 474, column: 9, scope: !11625, inlinedAt: !20084)
!20152 = !DILocation(line: 545, column: 4, scope: !11632, inlinedAt: !20075)
!20153 = !DILocation(line: 547, column: 25, scope: !11600, inlinedAt: !20075)
!20154 = !DILocation(line: 348, column: 7, scope: !11684, inlinedAt: !20082)
!20155 = !DILocation(line: 348, column: 6, scope: !11619, inlinedAt: !20082)
!20156 = !DILocation(line: 349, column: 3, scope: !11684, inlinedAt: !20082)
!20157 = !DILocation(line: 351, column: 6, scope: !11688, inlinedAt: !20082)
!20158 = !DILocation(line: 351, column: 11, scope: !11688, inlinedAt: !20082)
!20159 = !DILocation(line: 351, column: 6, scope: !11619, inlinedAt: !20082)
!20160 = !DILocation(line: 352, column: 3, scope: !11688, inlinedAt: !20082)
!20161 = !DILocation(line: 354, column: 32, scope: !11693, inlinedAt: !20082)
!20162 = !DILocation(line: 354, column: 37, scope: !11693, inlinedAt: !20082)
!20163 = !DILocation(line: 354, column: 42, scope: !11693, inlinedAt: !20082)
!20164 = !DILocation(line: 354, column: 45, scope: !11693, inlinedAt: !20082)
!20165 = !DILocation(line: 354, column: 50, scope: !11693, inlinedAt: !20082)
!20166 = !DILocation(line: 354, column: 6, scope: !11619, inlinedAt: !20082)
!20167 = !DILocation(line: 355, column: 3, scope: !11693, inlinedAt: !20082)
!20168 = !DILocation(line: 356, column: 32, scope: !11701, inlinedAt: !20082)
!20169 = !DILocation(line: 356, column: 37, scope: !11701, inlinedAt: !20082)
!20170 = !DILocation(line: 356, column: 43, scope: !11701, inlinedAt: !20082)
!20171 = !DILocation(line: 356, column: 46, scope: !11701, inlinedAt: !20082)
!20172 = !DILocation(line: 356, column: 51, scope: !11701, inlinedAt: !20082)
!20173 = !DILocation(line: 356, column: 6, scope: !11619, inlinedAt: !20082)
!20174 = !DILocation(line: 357, column: 3, scope: !11701, inlinedAt: !20082)
!20175 = !DILocation(line: 358, column: 6, scope: !11709, inlinedAt: !20082)
!20176 = !DILocation(line: 358, column: 11, scope: !11709, inlinedAt: !20082)
!20177 = !DILocation(line: 358, column: 6, scope: !11619, inlinedAt: !20082)
!20178 = !DILocation(line: 358, column: 26, scope: !11709, inlinedAt: !20082)
!20179 = !DILocation(line: 359, column: 6, scope: !11714, inlinedAt: !20082)
!20180 = !DILocation(line: 359, column: 11, scope: !11714, inlinedAt: !20082)
!20181 = !DILocation(line: 359, column: 6, scope: !11619, inlinedAt: !20082)
!20182 = !DILocation(line: 359, column: 26, scope: !11714, inlinedAt: !20082)
!20183 = !DILocation(line: 360, column: 6, scope: !11719, inlinedAt: !20082)
!20184 = !DILocation(line: 360, column: 11, scope: !11719, inlinedAt: !20082)
!20185 = !DILocation(line: 360, column: 6, scope: !11619, inlinedAt: !20082)
!20186 = !DILocation(line: 360, column: 26, scope: !11719, inlinedAt: !20082)
!20187 = !DILocation(line: 361, column: 6, scope: !11724, inlinedAt: !20082)
!20188 = !DILocation(line: 361, column: 11, scope: !11724, inlinedAt: !20082)
!20189 = !DILocation(line: 361, column: 6, scope: !11619, inlinedAt: !20082)
!20190 = !DILocation(line: 361, column: 26, scope: !11724, inlinedAt: !20082)
!20191 = !DILocation(line: 362, column: 6, scope: !11729, inlinedAt: !20082)
!20192 = !DILocation(line: 362, column: 11, scope: !11729, inlinedAt: !20082)
!20193 = !DILocation(line: 362, column: 6, scope: !11619, inlinedAt: !20082)
!20194 = !DILocation(line: 362, column: 26, scope: !11729, inlinedAt: !20082)
!20195 = !DILocation(line: 363, column: 6, scope: !11734, inlinedAt: !20082)
!20196 = !DILocation(line: 363, column: 11, scope: !11734, inlinedAt: !20082)
!20197 = !DILocation(line: 363, column: 6, scope: !11619, inlinedAt: !20082)
!20198 = !DILocation(line: 363, column: 26, scope: !11734, inlinedAt: !20082)
!20199 = !DILocation(line: 364, column: 6, scope: !11739, inlinedAt: !20082)
!20200 = !DILocation(line: 364, column: 11, scope: !11739, inlinedAt: !20082)
!20201 = !DILocation(line: 364, column: 6, scope: !11619, inlinedAt: !20082)
!20202 = !DILocation(line: 364, column: 26, scope: !11739, inlinedAt: !20082)
!20203 = !DILocation(line: 365, column: 6, scope: !11744, inlinedAt: !20082)
!20204 = !DILocation(line: 365, column: 11, scope: !11744, inlinedAt: !20082)
!20205 = !DILocation(line: 365, column: 6, scope: !11619, inlinedAt: !20082)
!20206 = !DILocation(line: 365, column: 26, scope: !11744, inlinedAt: !20082)
!20207 = !DILocation(line: 366, column: 6, scope: !11749, inlinedAt: !20082)
!20208 = !DILocation(line: 366, column: 11, scope: !11749, inlinedAt: !20082)
!20209 = !DILocation(line: 366, column: 6, scope: !11619, inlinedAt: !20082)
!20210 = !DILocation(line: 366, column: 26, scope: !11749, inlinedAt: !20082)
!20211 = !DILocation(line: 367, column: 6, scope: !11754, inlinedAt: !20082)
!20212 = !DILocation(line: 367, column: 11, scope: !11754, inlinedAt: !20082)
!20213 = !DILocation(line: 367, column: 6, scope: !11619, inlinedAt: !20082)
!20214 = !DILocation(line: 367, column: 26, scope: !11754, inlinedAt: !20082)
!20215 = !DILocation(line: 368, column: 6, scope: !11759, inlinedAt: !20082)
!20216 = !DILocation(line: 368, column: 11, scope: !11759, inlinedAt: !20082)
!20217 = !DILocation(line: 368, column: 6, scope: !11619, inlinedAt: !20082)
!20218 = !DILocation(line: 368, column: 26, scope: !11759, inlinedAt: !20082)
!20219 = !DILocation(line: 369, column: 6, scope: !11764, inlinedAt: !20082)
!20220 = !DILocation(line: 369, column: 11, scope: !11764, inlinedAt: !20082)
!20221 = !DILocation(line: 369, column: 6, scope: !11619, inlinedAt: !20082)
!20222 = !DILocation(line: 369, column: 26, scope: !11764, inlinedAt: !20082)
!20223 = !DILocation(line: 370, column: 6, scope: !11769, inlinedAt: !20082)
!20224 = !DILocation(line: 370, column: 11, scope: !11769, inlinedAt: !20082)
!20225 = !DILocation(line: 370, column: 6, scope: !11619, inlinedAt: !20082)
!20226 = !DILocation(line: 370, column: 26, scope: !11769, inlinedAt: !20082)
!20227 = !DILocation(line: 371, column: 6, scope: !11774, inlinedAt: !20082)
!20228 = !DILocation(line: 371, column: 11, scope: !11774, inlinedAt: !20082)
!20229 = !DILocation(line: 371, column: 6, scope: !11619, inlinedAt: !20082)
!20230 = !DILocation(line: 371, column: 26, scope: !11774, inlinedAt: !20082)
!20231 = !DILocation(line: 372, column: 6, scope: !11779, inlinedAt: !20082)
!20232 = !DILocation(line: 372, column: 11, scope: !11779, inlinedAt: !20082)
!20233 = !DILocation(line: 372, column: 6, scope: !11619, inlinedAt: !20082)
!20234 = !DILocation(line: 372, column: 26, scope: !11779, inlinedAt: !20082)
!20235 = !DILocation(line: 373, column: 6, scope: !11784, inlinedAt: !20082)
!20236 = !DILocation(line: 373, column: 11, scope: !11784, inlinedAt: !20082)
!20237 = !DILocation(line: 373, column: 6, scope: !11619, inlinedAt: !20082)
!20238 = !DILocation(line: 373, column: 26, scope: !11784, inlinedAt: !20082)
!20239 = !DILocation(line: 374, column: 6, scope: !11789, inlinedAt: !20082)
!20240 = !DILocation(line: 374, column: 11, scope: !11789, inlinedAt: !20082)
!20241 = !DILocation(line: 374, column: 6, scope: !11619, inlinedAt: !20082)
!20242 = !DILocation(line: 374, column: 26, scope: !11789, inlinedAt: !20082)
!20243 = !DILocation(line: 375, column: 6, scope: !11794, inlinedAt: !20082)
!20244 = !DILocation(line: 375, column: 11, scope: !11794, inlinedAt: !20082)
!20245 = !DILocation(line: 375, column: 6, scope: !11619, inlinedAt: !20082)
!20246 = !DILocation(line: 375, column: 27, scope: !11794, inlinedAt: !20082)
!20247 = !DILocation(line: 376, column: 6, scope: !11799, inlinedAt: !20082)
!20248 = !DILocation(line: 376, column: 11, scope: !11799, inlinedAt: !20082)
!20249 = !DILocation(line: 376, column: 6, scope: !11619, inlinedAt: !20082)
!20250 = !DILocation(line: 376, column: 32, scope: !11799, inlinedAt: !20082)
!20251 = !DILocation(line: 377, column: 6, scope: !11804, inlinedAt: !20082)
!20252 = !DILocation(line: 377, column: 11, scope: !11804, inlinedAt: !20082)
!20253 = !DILocation(line: 377, column: 6, scope: !11619, inlinedAt: !20082)
!20254 = !DILocation(line: 377, column: 32, scope: !11804, inlinedAt: !20082)
!20255 = !DILocation(line: 378, column: 6, scope: !11809, inlinedAt: !20082)
!20256 = !DILocation(line: 378, column: 11, scope: !11809, inlinedAt: !20082)
!20257 = !DILocation(line: 378, column: 6, scope: !11619, inlinedAt: !20082)
!20258 = !DILocation(line: 378, column: 32, scope: !11809, inlinedAt: !20082)
!20259 = !DILocation(line: 379, column: 6, scope: !11814, inlinedAt: !20082)
!20260 = !DILocation(line: 379, column: 11, scope: !11814, inlinedAt: !20082)
!20261 = !DILocation(line: 379, column: 6, scope: !11619, inlinedAt: !20082)
!20262 = !DILocation(line: 379, column: 33, scope: !11814, inlinedAt: !20082)
!20263 = !DILocation(line: 380, column: 6, scope: !11819, inlinedAt: !20082)
!20264 = !DILocation(line: 380, column: 11, scope: !11819, inlinedAt: !20082)
!20265 = !DILocation(line: 380, column: 6, scope: !11619, inlinedAt: !20082)
!20266 = !DILocation(line: 380, column: 33, scope: !11819, inlinedAt: !20082)
!20267 = !DILocation(line: 381, column: 6, scope: !11824, inlinedAt: !20082)
!20268 = !DILocation(line: 381, column: 11, scope: !11824, inlinedAt: !20082)
!20269 = !DILocation(line: 381, column: 6, scope: !11619, inlinedAt: !20082)
!20270 = !DILocation(line: 381, column: 33, scope: !11824, inlinedAt: !20082)
!20271 = !DILocation(line: 382, column: 2, scope: !11829, inlinedAt: !20082)
!20272 = !DILocation(line: 382, column: 2, scope: !11833, inlinedAt: !20082)
!20273 = !DILocation(line: 382, column: 2, scope: !11834, inlinedAt: !20082)
!20274 = !DILocation(line: 386, column: 1, scope: !11619, inlinedAt: !20082)
!20275 = !DILocation(line: 547, column: 9, scope: !11600, inlinedAt: !20075)
!20276 = !DILocation(line: 549, column: 8, scope: !11840, inlinedAt: !20075)
!20277 = !DILocation(line: 549, column: 7, scope: !11600, inlinedAt: !20075)
!20278 = !DILocation(line: 550, column: 4, scope: !11840, inlinedAt: !20075)
!20279 = !DILocation(line: 553, column: 33, scope: !11600, inlinedAt: !20075)
!20280 = !DILocation(line: 325, column: 6, scope: !11845, inlinedAt: !20080)
!20281 = !DILocation(line: 325, column: 6, scope: !11613, inlinedAt: !20080)
!20282 = !DILocation(line: 326, column: 3, scope: !11845, inlinedAt: !20080)
!20283 = !DILocation(line: 332, column: 9, scope: !11613, inlinedAt: !20080)
!20284 = !DILocation(line: 332, column: 15, scope: !11613, inlinedAt: !20080)
!20285 = !DILocation(line: 332, column: 2, scope: !11613, inlinedAt: !20080)
!20286 = !DILocation(line: 336, column: 1, scope: !11613, inlinedAt: !20080)
!20287 = !DILocation(line: 553, column: 5, scope: !11600, inlinedAt: !20075)
!20288 = !DILocation(line: 553, column: 41, scope: !11600, inlinedAt: !20075)
!20289 = !DILocation(line: 554, column: 5, scope: !11600, inlinedAt: !20075)
!20290 = !DILocation(line: 554, column: 12, scope: !11600, inlinedAt: !20075)
!20291 = !DILocation(line: 448, column: 31, scope: !11595, inlinedAt: !20074)
!20292 = !DILocation(line: 448, column: 34, scope: !11595, inlinedAt: !20074)
!20293 = !DILocation(line: 448, column: 14, scope: !11595, inlinedAt: !20074)
!20294 = !DILocation(line: 450, column: 22, scope: !11595, inlinedAt: !20074)
!20295 = !DILocation(line: 450, column: 25, scope: !11595, inlinedAt: !20074)
!20296 = !DILocation(line: 450, column: 30, scope: !11595, inlinedAt: !20074)
!20297 = !DILocation(line: 450, column: 36, scope: !11595, inlinedAt: !20074)
!20298 = !DILocation(line: 450, column: 8, scope: !11595, inlinedAt: !20074)
!20299 = !DILocation(line: 450, column: 6, scope: !11595, inlinedAt: !20074)
!20300 = !DILocation(line: 451, column: 9, scope: !11595, inlinedAt: !20074)
!20301 = !DILocation(line: 552, column: 3, scope: !11600, inlinedAt: !20075)
!20302 = !DILocation(line: 557, column: 19, scope: !11602, inlinedAt: !20075)
!20303 = !DILocation(line: 557, column: 25, scope: !11602, inlinedAt: !20075)
!20304 = !DILocation(line: 557, column: 9, scope: !11602, inlinedAt: !20075)
!20305 = !DILocation(line: 557, column: 2, scope: !11602, inlinedAt: !20075)
!20306 = !DILocation(line: 558, column: 1, scope: !11602, inlinedAt: !20075)
!20307 = !DILocation(line: 3772, column: 10, scope: !20070)
!20308 = !DILocation(line: 3772, column: 8, scope: !20070)
!20309 = !DILocation(line: 3773, column: 7, scope: !20310)
!20310 = distinct !DILexicalBlock(scope: !20070, file: !3, line: 3773, column: 6)
!20311 = !DILocation(line: 3773, column: 6, scope: !20070)
!20312 = !DILocation(line: 3774, column: 6, scope: !20313)
!20313 = distinct !DILexicalBlock(scope: !20310, file: !3, line: 3773, column: 14)
!20314 = !DILocation(line: 3775, column: 3, scope: !20313)
!20315 = !DILocation(line: 3777, column: 15, scope: !20070)
!20316 = !DILocation(line: 3777, column: 2, scope: !20070)
!20317 = !DILocation(line: 3777, column: 9, scope: !20070)
!20318 = !DILocation(line: 3777, column: 13, scope: !20070)
!20319 = !DILocation(line: 3779, column: 8, scope: !20070)
!20320 = !DILocation(line: 3779, column: 13, scope: !20070)
!20321 = !DILocation(line: 3779, column: 6, scope: !20070)
!20322 = !DILocation(line: 3780, column: 27, scope: !20070)
!20323 = !DILocation(line: 3780, column: 34, scope: !20070)
!20324 = !DILocation(line: 3780, column: 42, scope: !20070)
!20325 = !DILocation(line: 3780, column: 51, scope: !20070)
!20326 = !DILocation(line: 3780, column: 56, scope: !20070)
!20327 = !DILocation(line: 3780, column: 7, scope: !20070)
!20328 = !DILocation(line: 3780, column: 5, scope: !20070)
!20329 = !DILocation(line: 3781, column: 8, scope: !20070)
!20330 = !DILocation(line: 3781, column: 2, scope: !20070)
!20331 = !DILocation(line: 3782, column: 6, scope: !20332)
!20332 = distinct !DILexicalBlock(scope: !20070, file: !3, line: 3782, column: 6)
!20333 = !DILocation(line: 3782, column: 6, scope: !20070)
!20334 = !DILocation(line: 3783, column: 3, scope: !20332)
!20335 = !DILocation(line: 3785, column: 13, scope: !20336)
!20336 = distinct !DILexicalBlock(scope: !20070, file: !3, line: 3785, column: 6)
!20337 = !DILocation(line: 3785, column: 21, scope: !20336)
!20338 = !DILocation(line: 3785, column: 31, scope: !20336)
!20339 = !DILocation(line: 3785, column: 6, scope: !20336)
!20340 = !DILocation(line: 3785, column: 6, scope: !20070)
!20341 = !DILocation(line: 3786, column: 3, scope: !20342)
!20342 = distinct !DILexicalBlock(scope: !20336, file: !3, line: 3785, column: 68)
!20343 = !DILocation(line: 3787, column: 6, scope: !20342)
!20344 = !DILocation(line: 3788, column: 2, scope: !20342)
!20345 = !DILocation(line: 3785, column: 65, scope: !20336)
!20346 = !DILabel(scope: !20070, name: "free_shash", file: !3, line: 3790)
!20347 = !DILocation(line: 3790, column: 1, scope: !20070)
!20348 = !DILocation(line: 3791, column: 20, scope: !20070)
!20349 = !DILocation(line: 3791, column: 2, scope: !20070)
!20350 = !DILabel(scope: !20070, name: "out", file: !3, line: 3792)
!20351 = !DILocation(line: 3792, column: 1, scope: !20070)
!20352 = !DILocation(line: 3793, column: 9, scope: !20070)
!20353 = !DILocation(line: 3793, column: 2, scope: !20070)
!20354 = distinct !DISubprogram(name: "rtl8152_is_fw_mac_ok", scope: !3, file: !3, line: 3625, type: !20355, scopeLine: 3626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!20355 = !DISubroutineType(types: !20356)
!20356 = !{!617, !10280, !10481}
!20357 = !DILocalVariable(name: "tp", arg: 1, scope: !20354, file: !3, line: 3625, type: !10280)
!20358 = !DILocation(line: 3625, column: 48, scope: !20354)
!20359 = !DILocalVariable(name: "mac", arg: 2, scope: !20354, file: !3, line: 3625, type: !10481)
!20360 = !DILocation(line: 3625, column: 67, scope: !20354)
!20361 = !DILocalVariable(name: "fw_reg", scope: !20354, file: !3, line: 3627, type: !1115)
!20362 = !DILocation(line: 3627, column: 6, scope: !20354)
!20363 = !DILocalVariable(name: "bp_ba_addr", scope: !20354, file: !3, line: 3627, type: !1115)
!20364 = !DILocation(line: 3627, column: 14, scope: !20354)
!20365 = !DILocalVariable(name: "bp_en_addr", scope: !20354, file: !3, line: 3627, type: !1115)
!20366 = !DILocation(line: 3627, column: 26, scope: !20354)
!20367 = !DILocalVariable(name: "bp_start", scope: !20354, file: !3, line: 3627, type: !1115)
!20368 = !DILocation(line: 3627, column: 38, scope: !20354)
!20369 = !DILocalVariable(name: "fw_offset", scope: !20354, file: !3, line: 3627, type: !1115)
!20370 = !DILocation(line: 3627, column: 48, scope: !20354)
!20371 = !DILocalVariable(name: "rc", scope: !20354, file: !3, line: 3628, type: !617)
!20372 = !DILocation(line: 3628, column: 7, scope: !20354)
!20373 = !DILocalVariable(name: "length", scope: !20354, file: !3, line: 3629, type: !784)
!20374 = !DILocation(line: 3629, column: 6, scope: !20354)
!20375 = !DILocalVariable(name: "type", scope: !20354, file: !3, line: 3629, type: !784)
!20376 = !DILocation(line: 3629, column: 14, scope: !20354)
!20377 = !DILocalVariable(name: "i", scope: !20354, file: !3, line: 3630, type: !72)
!20378 = !DILocation(line: 3630, column: 6, scope: !20354)
!20379 = !DILocalVariable(name: "max_bp", scope: !20354, file: !3, line: 3630, type: !72)
!20380 = !DILocation(line: 3630, column: 9, scope: !20354)
!20381 = !DILocation(line: 3632, column: 9, scope: !20354)
!20382 = !DILocation(line: 3632, column: 7, scope: !20354)
!20383 = !DILocation(line: 3633, column: 6, scope: !20384)
!20384 = distinct !DILexicalBlock(scope: !20354, file: !3, line: 3633, column: 6)
!20385 = !DILocation(line: 3633, column: 11, scope: !20384)
!20386 = !DILocation(line: 3633, column: 6, scope: !20354)
!20387 = !DILocation(line: 3634, column: 11, scope: !20388)
!20388 = distinct !DILexicalBlock(scope: !20384, file: !3, line: 3633, column: 26)
!20389 = !DILocation(line: 3634, column: 15, scope: !20388)
!20390 = !DILocation(line: 3634, column: 3, scope: !20388)
!20391 = !DILocation(line: 3638, column: 11, scope: !20392)
!20392 = distinct !DILexicalBlock(scope: !20388, file: !3, line: 3634, column: 24)
!20393 = !DILocation(line: 3639, column: 15, scope: !20392)
!20394 = !DILocation(line: 3640, column: 15, scope: !20392)
!20395 = !DILocation(line: 3641, column: 13, scope: !20392)
!20396 = !DILocation(line: 3642, column: 11, scope: !20392)
!20397 = !DILocation(line: 3643, column: 4, scope: !20392)
!20398 = !DILocation(line: 3650, column: 11, scope: !20392)
!20399 = !DILocation(line: 3651, column: 15, scope: !20392)
!20400 = !DILocation(line: 3652, column: 15, scope: !20392)
!20401 = !DILocation(line: 3653, column: 13, scope: !20392)
!20402 = !DILocation(line: 3654, column: 11, scope: !20392)
!20403 = !DILocation(line: 3655, column: 4, scope: !20392)
!20404 = !DILocation(line: 3657, column: 4, scope: !20392)
!20405 = !DILocation(line: 3659, column: 2, scope: !20388)
!20406 = !DILocation(line: 3659, column: 13, scope: !20407)
!20407 = distinct !DILexicalBlock(scope: !20384, file: !3, line: 3659, column: 13)
!20408 = !DILocation(line: 3659, column: 18, scope: !20407)
!20409 = !DILocation(line: 3659, column: 13, scope: !20384)
!20410 = !DILocation(line: 3660, column: 11, scope: !20411)
!20411 = distinct !DILexicalBlock(scope: !20407, file: !3, line: 3659, column: 33)
!20412 = !DILocation(line: 3660, column: 15, scope: !20411)
!20413 = !DILocation(line: 3660, column: 3, scope: !20411)
!20414 = !DILocation(line: 3665, column: 11, scope: !20415)
!20415 = distinct !DILexicalBlock(scope: !20411, file: !3, line: 3660, column: 24)
!20416 = !DILocation(line: 3666, column: 15, scope: !20415)
!20417 = !DILocation(line: 3667, column: 15, scope: !20415)
!20418 = !DILocation(line: 3668, column: 13, scope: !20415)
!20419 = !DILocation(line: 3669, column: 11, scope: !20415)
!20420 = !DILocation(line: 3670, column: 4, scope: !20415)
!20421 = !DILocation(line: 3673, column: 11, scope: !20415)
!20422 = !DILocation(line: 3674, column: 15, scope: !20415)
!20423 = !DILocation(line: 3675, column: 15, scope: !20415)
!20424 = !DILocation(line: 3676, column: 13, scope: !20415)
!20425 = !DILocation(line: 3677, column: 11, scope: !20415)
!20426 = !DILocation(line: 3678, column: 4, scope: !20415)
!20427 = !DILocation(line: 3683, column: 4, scope: !20415)
!20428 = !DILocation(line: 3685, column: 2, scope: !20411)
!20429 = !DILocation(line: 3686, column: 3, scope: !20430)
!20430 = distinct !DILexicalBlock(scope: !20407, file: !3, line: 3685, column: 9)
!20431 = !DILocation(line: 3689, column: 14, scope: !20354)
!20432 = !DILocation(line: 3689, column: 12, scope: !20354)
!20433 = !DILocation(line: 3690, column: 6, scope: !20434)
!20434 = distinct !DILexicalBlock(scope: !20354, file: !3, line: 3690, column: 6)
!20435 = !DILocation(line: 3690, column: 16, scope: !20434)
!20436 = !DILocation(line: 3690, column: 6, scope: !20354)
!20437 = !DILocation(line: 3691, column: 3, scope: !20438)
!20438 = distinct !DILexicalBlock(scope: !20434, file: !3, line: 3690, column: 32)
!20439 = !DILocation(line: 3692, column: 3, scope: !20438)
!20440 = !DILocation(line: 3695, column: 11, scope: !20354)
!20441 = !DILocation(line: 3695, column: 9, scope: !20354)
!20442 = !DILocation(line: 3696, column: 6, scope: !20443)
!20443 = distinct !DILexicalBlock(scope: !20354, file: !3, line: 3696, column: 6)
!20444 = !DILocation(line: 3696, column: 15, scope: !20443)
!20445 = !DILocation(line: 3696, column: 13, scope: !20443)
!20446 = !DILocation(line: 3696, column: 6, scope: !20354)
!20447 = !DILocation(line: 3697, column: 3, scope: !20448)
!20448 = distinct !DILexicalBlock(scope: !20443, file: !3, line: 3696, column: 26)
!20449 = !DILocation(line: 3698, column: 3, scope: !20448)
!20450 = !DILocation(line: 3701, column: 12, scope: !20354)
!20451 = !DILocation(line: 3701, column: 9, scope: !20354)
!20452 = !DILocation(line: 3702, column: 6, scope: !20453)
!20453 = distinct !DILexicalBlock(scope: !20354, file: !3, line: 3702, column: 6)
!20454 = !DILocation(line: 3702, column: 13, scope: !20453)
!20455 = !DILocation(line: 3702, column: 17, scope: !20453)
!20456 = !DILocation(line: 3702, column: 21, scope: !20453)
!20457 = !DILocation(line: 3702, column: 28, scope: !20453)
!20458 = !DILocation(line: 3702, column: 6, scope: !20354)
!20459 = !DILocation(line: 3703, column: 3, scope: !20460)
!20460 = distinct !DILexicalBlock(scope: !20453, file: !3, line: 3702, column: 34)
!20461 = !DILocation(line: 3704, column: 3, scope: !20460)
!20462 = !DILocation(line: 3707, column: 6, scope: !20463)
!20463 = distinct !DILexicalBlock(scope: !20354, file: !3, line: 3707, column: 6)
!20464 = !DILocation(line: 3707, column: 36, scope: !20463)
!20465 = !DILocation(line: 3707, column: 33, scope: !20463)
!20466 = !DILocation(line: 3707, column: 6, scope: !20354)
!20467 = !DILocation(line: 3708, column: 3, scope: !20468)
!20468 = distinct !DILexicalBlock(scope: !20463, file: !3, line: 3707, column: 44)
!20469 = !DILocation(line: 3709, column: 3, scope: !20468)
!20470 = !DILocation(line: 3712, column: 6, scope: !20471)
!20471 = distinct !DILexicalBlock(scope: !20354, file: !3, line: 3712, column: 6)
!20472 = !DILocation(line: 3712, column: 40, scope: !20471)
!20473 = !DILocation(line: 3712, column: 37, scope: !20471)
!20474 = !DILocation(line: 3712, column: 6, scope: !20354)
!20475 = !DILocation(line: 3713, column: 3, scope: !20476)
!20476 = distinct !DILexicalBlock(scope: !20471, file: !3, line: 3712, column: 52)
!20477 = !DILocation(line: 3714, column: 3, scope: !20476)
!20478 = !DILocation(line: 3717, column: 6, scope: !20479)
!20479 = distinct !DILexicalBlock(scope: !20354, file: !3, line: 3717, column: 6)
!20480 = !DILocation(line: 3717, column: 40, scope: !20479)
!20481 = !DILocation(line: 3717, column: 37, scope: !20479)
!20482 = !DILocation(line: 3717, column: 6, scope: !20354)
!20483 = !DILocation(line: 3718, column: 3, scope: !20484)
!20484 = distinct !DILexicalBlock(scope: !20479, file: !3, line: 3717, column: 52)
!20485 = !DILocation(line: 3719, column: 3, scope: !20484)
!20486 = !DILocation(line: 3722, column: 6, scope: !20487)
!20487 = distinct !DILexicalBlock(scope: !20354, file: !3, line: 3722, column: 6)
!20488 = !DILocation(line: 3722, column: 38, scope: !20487)
!20489 = !DILocation(line: 3722, column: 35, scope: !20487)
!20490 = !DILocation(line: 3722, column: 6, scope: !20354)
!20491 = !DILocation(line: 3723, column: 3, scope: !20492)
!20492 = distinct !DILexicalBlock(scope: !20487, file: !3, line: 3722, column: 48)
!20493 = !DILocation(line: 3725, column: 3, scope: !20492)
!20494 = !DILocation(line: 3728, column: 6, scope: !20495)
!20495 = distinct !DILexicalBlock(scope: !20354, file: !3, line: 3728, column: 6)
!20496 = !DILocation(line: 3728, column: 35, scope: !20495)
!20497 = !DILocation(line: 3728, column: 33, scope: !20495)
!20498 = !DILocation(line: 3728, column: 6, scope: !20354)
!20499 = !DILocation(line: 3729, column: 3, scope: !20500)
!20500 = distinct !DILexicalBlock(scope: !20495, file: !3, line: 3728, column: 43)
!20501 = !DILocation(line: 3730, column: 3, scope: !20500)
!20502 = !DILocation(line: 3733, column: 11, scope: !20503)
!20503 = distinct !DILexicalBlock(scope: !20354, file: !3, line: 3733, column: 2)
!20504 = !DILocation(line: 3733, column: 9, scope: !20503)
!20505 = !DILocation(line: 3733, column: 7, scope: !20503)
!20506 = !DILocation(line: 3733, column: 39, scope: !20507)
!20507 = distinct !DILexicalBlock(scope: !20503, file: !3, line: 3733, column: 2)
!20508 = !DILocation(line: 3733, column: 43, scope: !20507)
!20509 = !DILocation(line: 3733, column: 41, scope: !20507)
!20510 = !DILocation(line: 3733, column: 2, scope: !20503)
!20511 = !DILocation(line: 3734, column: 7, scope: !20512)
!20512 = distinct !DILexicalBlock(scope: !20513, file: !3, line: 3734, column: 7)
!20513 = distinct !DILexicalBlock(scope: !20507, file: !3, line: 3733, column: 56)
!20514 = !DILocation(line: 3734, column: 12, scope: !20512)
!20515 = !DILocation(line: 3734, column: 15, scope: !20512)
!20516 = !DILocation(line: 3734, column: 7, scope: !20513)
!20517 = !DILocation(line: 3735, column: 4, scope: !20518)
!20518 = distinct !DILexicalBlock(scope: !20512, file: !3, line: 3734, column: 19)
!20519 = !DILocation(line: 3736, column: 4, scope: !20518)
!20520 = !DILocation(line: 3738, column: 2, scope: !20513)
!20521 = !DILocation(line: 3733, column: 52, scope: !20507)
!20522 = !DILocation(line: 3733, column: 2, scope: !20507)
!20523 = distinct !{!20523, !20510, !20524}
!20524 = !DILocation(line: 3738, column: 2, scope: !20503)
!20525 = !DILocation(line: 3740, column: 5, scope: !20354)
!20526 = !DILocation(line: 3740, column: 2, scope: !20354)
!20527 = !DILabel(scope: !20354, name: "out", file: !3, line: 3741)
!20528 = !DILocation(line: 3741, column: 1, scope: !20354)
!20529 = !DILocation(line: 3742, column: 9, scope: !20354)
!20530 = !DILocation(line: 3742, column: 2, scope: !20354)
!20531 = distinct !DISubprogram(name: "rtl8152_is_fw_phy_nc_ok", scope: !3, file: !3, line: 3549, type: !20532, scopeLine: 3550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!20532 = !DISubroutineType(types: !20533)
!20533 = !{!617, !10280, !10506}
!20534 = !DILocalVariable(name: "tp", arg: 1, scope: !20531, file: !3, line: 3549, type: !10280)
!20535 = !DILocation(line: 3549, column: 51, scope: !20531)
!20536 = !DILocalVariable(name: "phy", arg: 2, scope: !20531, file: !3, line: 3549, type: !10506)
!20537 = !DILocation(line: 3549, column: 73, scope: !20531)
!20538 = !DILocalVariable(name: "length", scope: !20531, file: !3, line: 3551, type: !784)
!20539 = !DILocation(line: 3551, column: 6, scope: !20531)
!20540 = !DILocalVariable(name: "fw_offset", scope: !20531, file: !3, line: 3552, type: !1115)
!20541 = !DILocation(line: 3552, column: 6, scope: !20531)
!20542 = !DILocalVariable(name: "fw_reg", scope: !20531, file: !3, line: 3552, type: !1115)
!20543 = !DILocation(line: 3552, column: 17, scope: !20531)
!20544 = !DILocalVariable(name: "ba_reg", scope: !20531, file: !3, line: 3552, type: !1115)
!20545 = !DILocation(line: 3552, column: 25, scope: !20531)
!20546 = !DILocalVariable(name: "patch_en_addr", scope: !20531, file: !3, line: 3552, type: !1115)
!20547 = !DILocation(line: 3552, column: 33, scope: !20531)
!20548 = !DILocalVariable(name: "mode_reg", scope: !20531, file: !3, line: 3552, type: !1115)
!20549 = !DILocation(line: 3552, column: 48, scope: !20531)
!20550 = !DILocalVariable(name: "bp_start", scope: !20531, file: !3, line: 3552, type: !1115)
!20551 = !DILocation(line: 3552, column: 58, scope: !20531)
!20552 = !DILocalVariable(name: "rc", scope: !20531, file: !3, line: 3553, type: !617)
!20553 = !DILocation(line: 3553, column: 7, scope: !20531)
!20554 = !DILocation(line: 3555, column: 10, scope: !20531)
!20555 = !DILocation(line: 3555, column: 14, scope: !20531)
!20556 = !DILocation(line: 3555, column: 2, scope: !20531)
!20557 = !DILocation(line: 3559, column: 10, scope: !20558)
!20558 = distinct !DILexicalBlock(scope: !20531, file: !3, line: 3555, column: 23)
!20559 = !DILocation(line: 3560, column: 10, scope: !20558)
!20560 = !DILocation(line: 3561, column: 17, scope: !20558)
!20561 = !DILocation(line: 3562, column: 12, scope: !20558)
!20562 = !DILocation(line: 3563, column: 12, scope: !20558)
!20563 = !DILocation(line: 3564, column: 3, scope: !20558)
!20564 = !DILocation(line: 3566, column: 3, scope: !20558)
!20565 = !DILocation(line: 3569, column: 14, scope: !20531)
!20566 = !DILocation(line: 3569, column: 12, scope: !20531)
!20567 = !DILocation(line: 3570, column: 6, scope: !20568)
!20568 = distinct !DILexicalBlock(scope: !20531, file: !3, line: 3570, column: 6)
!20569 = !DILocation(line: 3570, column: 16, scope: !20568)
!20570 = !DILocation(line: 3570, column: 6, scope: !20531)
!20571 = !DILocation(line: 3571, column: 3, scope: !20572)
!20572 = distinct !DILexicalBlock(scope: !20568, file: !3, line: 3570, column: 32)
!20573 = !DILocation(line: 3572, column: 3, scope: !20572)
!20574 = !DILocation(line: 3575, column: 11, scope: !20531)
!20575 = !DILocation(line: 3575, column: 9, scope: !20531)
!20576 = !DILocation(line: 3576, column: 6, scope: !20577)
!20577 = distinct !DILexicalBlock(scope: !20531, file: !3, line: 3576, column: 6)
!20578 = !DILocation(line: 3576, column: 15, scope: !20577)
!20579 = !DILocation(line: 3576, column: 13, scope: !20577)
!20580 = !DILocation(line: 3576, column: 6, scope: !20531)
!20581 = !DILocation(line: 3577, column: 3, scope: !20582)
!20582 = distinct !DILexicalBlock(scope: !20577, file: !3, line: 3576, column: 26)
!20583 = !DILocation(line: 3578, column: 3, scope: !20582)
!20584 = !DILocation(line: 3581, column: 12, scope: !20531)
!20585 = !DILocation(line: 3581, column: 9, scope: !20531)
!20586 = !DILocation(line: 3582, column: 7, scope: !20587)
!20587 = distinct !DILexicalBlock(scope: !20531, file: !3, line: 3582, column: 6)
!20588 = !DILocation(line: 3582, column: 14, scope: !20587)
!20589 = !DILocation(line: 3582, column: 18, scope: !20587)
!20590 = !DILocation(line: 3582, column: 25, scope: !20587)
!20591 = !DILocation(line: 3582, column: 6, scope: !20531)
!20592 = !DILocation(line: 3583, column: 3, scope: !20593)
!20593 = distinct !DILexicalBlock(scope: !20587, file: !3, line: 3582, column: 31)
!20594 = !DILocation(line: 3584, column: 3, scope: !20593)
!20595 = !DILocation(line: 3587, column: 6, scope: !20596)
!20596 = distinct !DILexicalBlock(scope: !20531, file: !3, line: 3587, column: 6)
!20597 = !DILocation(line: 3587, column: 36, scope: !20596)
!20598 = !DILocation(line: 3587, column: 33, scope: !20596)
!20599 = !DILocation(line: 3587, column: 6, scope: !20531)
!20600 = !DILocation(line: 3588, column: 3, scope: !20601)
!20601 = distinct !DILexicalBlock(scope: !20596, file: !3, line: 3587, column: 44)
!20602 = !DILocation(line: 3589, column: 3, scope: !20601)
!20603 = !DILocation(line: 3592, column: 6, scope: !20604)
!20604 = distinct !DILexicalBlock(scope: !20531, file: !3, line: 3592, column: 6)
!20605 = !DILocation(line: 3592, column: 36, scope: !20604)
!20606 = !DILocation(line: 3592, column: 33, scope: !20604)
!20607 = !DILocation(line: 3592, column: 6, scope: !20531)
!20608 = !DILocation(line: 3593, column: 3, scope: !20609)
!20609 = distinct !DILexicalBlock(scope: !20604, file: !3, line: 3592, column: 44)
!20610 = !DILocation(line: 3594, column: 3, scope: !20609)
!20611 = !DILocation(line: 3597, column: 6, scope: !20612)
!20612 = distinct !DILexicalBlock(scope: !20531, file: !3, line: 3597, column: 6)
!20613 = !DILocation(line: 3597, column: 43, scope: !20612)
!20614 = !DILocation(line: 3597, column: 40, scope: !20612)
!20615 = !DILocation(line: 3597, column: 6, scope: !20531)
!20616 = !DILocation(line: 3598, column: 3, scope: !20617)
!20617 = distinct !DILexicalBlock(scope: !20612, file: !3, line: 3597, column: 58)
!20618 = !DILocation(line: 3600, column: 3, scope: !20617)
!20619 = !DILocation(line: 3603, column: 6, scope: !20620)
!20620 = distinct !DILexicalBlock(scope: !20531, file: !3, line: 3603, column: 6)
!20621 = !DILocation(line: 3603, column: 38, scope: !20620)
!20622 = !DILocation(line: 3603, column: 35, scope: !20620)
!20623 = !DILocation(line: 3603, column: 6, scope: !20531)
!20624 = !DILocation(line: 3604, column: 3, scope: !20625)
!20625 = distinct !DILexicalBlock(scope: !20620, file: !3, line: 3603, column: 48)
!20626 = !DILocation(line: 3606, column: 3, scope: !20625)
!20627 = !DILocation(line: 3609, column: 6, scope: !20628)
!20628 = distinct !DILexicalBlock(scope: !20531, file: !3, line: 3609, column: 6)
!20629 = !DILocation(line: 3609, column: 38, scope: !20628)
!20630 = !DILocation(line: 3609, column: 35, scope: !20628)
!20631 = !DILocation(line: 3609, column: 6, scope: !20531)
!20632 = !DILocation(line: 3610, column: 3, scope: !20633)
!20633 = distinct !DILexicalBlock(scope: !20628, file: !3, line: 3609, column: 48)
!20634 = !DILocation(line: 3612, column: 3, scope: !20633)
!20635 = !DILocation(line: 3615, column: 6, scope: !20636)
!20636 = distinct !DILexicalBlock(scope: !20531, file: !3, line: 3615, column: 6)
!20637 = !DILocation(line: 3615, column: 33, scope: !20636)
!20638 = !DILocation(line: 3615, column: 6, scope: !20531)
!20639 = !DILocation(line: 3616, column: 3, scope: !20640)
!20640 = distinct !DILexicalBlock(scope: !20636, file: !3, line: 3615, column: 38)
!20641 = !DILocation(line: 3617, column: 3, scope: !20640)
!20642 = !DILocation(line: 3620, column: 5, scope: !20531)
!20643 = !DILocation(line: 3620, column: 2, scope: !20531)
!20644 = !DILabel(scope: !20531, name: "out", file: !3, line: 3621)
!20645 = !DILocation(line: 3621, column: 1, scope: !20531)
!20646 = !DILocation(line: 3622, column: 9, scope: !20531)
!20647 = !DILocation(line: 3622, column: 2, scope: !20531)
!20648 = distinct !DISubprogram(name: "IS_ERR", scope: !16945, file: !16945, line: 34, type: !16946, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!20649 = !DILocalVariable(name: "ptr", arg: 1, scope: !20648, file: !16945, line: 34, type: !2340)
!20650 = !DILocation(line: 34, column: 60, scope: !20648)
!20651 = !DILocation(line: 36, column: 9, scope: !20648)
!20652 = !DILocation(line: 36, column: 2, scope: !20648)
!20653 = distinct !DISubprogram(name: "PTR_ERR", scope: !16945, file: !16945, line: 29, type: !20654, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!20654 = !DISubroutineType(types: !20655)
!20655 = !{!590, !2340}
!20656 = !DILocalVariable(name: "ptr", arg: 1, scope: !20653, file: !16945, line: 29, type: !2340)
!20657 = !DILocation(line: 29, column: 61, scope: !20653)
!20658 = !DILocation(line: 31, column: 16, scope: !20653)
!20659 = !DILocation(line: 31, column: 9, scope: !20653)
!20660 = !DILocation(line: 31, column: 2, scope: !20653)
!20661 = distinct !DISubprogram(name: "crypto_shash_digestsize", scope: !10544, file: !10544, line: 782, type: !20662, scopeLine: 783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!20662 = !DISubroutineType(types: !20663)
!20663 = !{!7, !10554}
!20664 = !DILocalVariable(name: "tfm", arg: 1, scope: !20661, file: !10544, line: 782, type: !10554)
!20665 = !DILocation(line: 782, column: 73, scope: !20661)
!20666 = !DILocation(line: 784, column: 26, scope: !20661)
!20667 = !DILocation(line: 784, column: 9, scope: !20661)
!20668 = !DILocation(line: 784, column: 32, scope: !20661)
!20669 = !DILocation(line: 784, column: 2, scope: !20661)
!20670 = distinct !DISubprogram(name: "crypto_shash_descsize", scope: !10544, file: !10544, line: 822, type: !20662, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!20671 = !DILocalVariable(name: "tfm", arg: 1, scope: !20670, file: !10544, line: 822, type: !10554)
!20672 = !DILocation(line: 822, column: 71, scope: !20670)
!20673 = !DILocation(line: 824, column: 9, scope: !20670)
!20674 = !DILocation(line: 824, column: 14, scope: !20670)
!20675 = !DILocation(line: 824, column: 2, scope: !20670)
!20676 = distinct !DISubprogram(name: "crypto_free_shash", scope: !10544, file: !10544, line: 728, type: !10656, scopeLine: 729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!20677 = !DILocalVariable(name: "tfm", arg: 1, scope: !20676, file: !10544, line: 728, type: !10554)
!20678 = !DILocation(line: 728, column: 59, scope: !20676)
!20679 = !DILocation(line: 730, column: 21, scope: !20676)
!20680 = !DILocation(line: 730, column: 43, scope: !20676)
!20681 = !DILocation(line: 730, column: 26, scope: !20676)
!20682 = !DILocation(line: 730, column: 2, scope: !20676)
!20683 = !DILocation(line: 731, column: 1, scope: !20676)
!20684 = distinct !DISubprogram(name: "crypto_shash_alg", scope: !10544, file: !10544, line: 768, type: !20685, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!20685 = !DISubroutineType(types: !20686)
!20686 = !{!10542, !10554}
!20687 = !DILocalVariable(name: "tfm", arg: 1, scope: !20684, file: !10544, line: 768, type: !10554)
!20688 = !DILocation(line: 768, column: 71, scope: !20684)
!20689 = !DILocation(line: 770, column: 45, scope: !20684)
!20690 = !DILocation(line: 770, column: 28, scope: !20684)
!20691 = !DILocation(line: 770, column: 51, scope: !20684)
!20692 = !DILocation(line: 770, column: 9, scope: !20684)
!20693 = !DILocation(line: 770, column: 2, scope: !20684)
!20694 = distinct !DISubprogram(name: "__crypto_shash_alg", scope: !10544, file: !10544, line: 763, type: !20695, scopeLine: 764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!20695 = !DISubroutineType(types: !20696)
!20696 = !{!10542, !10570}
!20697 = !DILocalVariable(name: "alg", arg: 1, scope: !20694, file: !10544, line: 763, type: !10570)
!20698 = !DILocation(line: 763, column: 71, scope: !20694)
!20699 = !DILocalVariable(name: "__mptr", scope: !20700, file: !10544, line: 765, type: !647)
!20700 = distinct !DILexicalBlock(scope: !20694, file: !10544, line: 765, column: 9)
!20701 = !DILocation(line: 765, column: 9, scope: !20700)
!20702 = !DILocation(line: 765, column: 9, scope: !20703)
!20703 = distinct !DILexicalBlock(scope: !20700, file: !10544, line: 765, column: 9)
!20704 = !DILocation(line: 765, column: 2, scope: !20694)
!20705 = distinct !DISubprogram(name: "crypto_shash_tfm", scope: !10544, file: !10544, line: 719, type: !20706, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!20706 = !DISubroutineType(types: !20707)
!20707 = !{!10568, !10554}
!20708 = !DILocalVariable(name: "tfm", arg: 1, scope: !20705, file: !10544, line: 719, type: !10554)
!20709 = !DILocation(line: 719, column: 72, scope: !20705)
!20710 = !DILocation(line: 721, column: 10, scope: !20705)
!20711 = !DILocation(line: 721, column: 15, scope: !20705)
!20712 = !DILocation(line: 721, column: 2, scope: !20705)
!20713 = distinct !DISubprogram(name: "tx_bottom", scope: !3, file: !3, line: 2376, type: !10380, scopeLine: 2377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!20714 = !DILocation(line: 407, column: 64, scope: !15429, inlinedAt: !20715)
!20715 = distinct !DILocation(line: 2408, column: 4, scope: !20716)
!20716 = distinct !DILexicalBlock(scope: !20717, file: !3, line: 2398, column: 10)
!20717 = distinct !DILexicalBlock(scope: !20718, file: !3, line: 2395, column: 7)
!20718 = distinct !DILexicalBlock(scope: !20713, file: !3, line: 2380, column: 5)
!20719 = !DILocation(line: 407, column: 84, scope: !15429, inlinedAt: !20715)
!20720 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !20721)
!20721 = distinct !DILocation(line: 2406, column: 4, scope: !20722)
!20722 = distinct !DILexicalBlock(scope: !20723, file: !3, line: 2406, column: 4)
!20723 = distinct !DILexicalBlock(scope: !20724, file: !3, line: 2406, column: 4)
!20724 = distinct !DILexicalBlock(scope: !20725, file: !3, line: 2406, column: 4)
!20725 = distinct !DILexicalBlock(scope: !20726, file: !3, line: 2406, column: 4)
!20726 = distinct !DILexicalBlock(scope: !20716, file: !3, line: 2406, column: 4)
!20727 = !DILocalVariable(name: "tp", arg: 1, scope: !20713, file: !3, line: 2376, type: !10280)
!20728 = !DILocation(line: 2376, column: 37, scope: !20713)
!20729 = !DILocalVariable(name: "res", scope: !20713, file: !3, line: 2378, type: !72)
!20730 = !DILocation(line: 2378, column: 6, scope: !20713)
!20731 = !DILocation(line: 2380, column: 2, scope: !20713)
!20732 = !DILocalVariable(name: "netdev", scope: !20718, file: !3, line: 2381, type: !372)
!20733 = !DILocation(line: 2381, column: 22, scope: !20718)
!20734 = !DILocation(line: 2381, column: 31, scope: !20718)
!20735 = !DILocation(line: 2381, column: 35, scope: !20718)
!20736 = !DILocalVariable(name: "agg", scope: !20718, file: !3, line: 2382, type: !10662)
!20737 = !DILocation(line: 2382, column: 18, scope: !20718)
!20738 = !DILocation(line: 2384, column: 24, scope: !20739)
!20739 = distinct !DILexicalBlock(scope: !20718, file: !3, line: 2384, column: 7)
!20740 = !DILocation(line: 2384, column: 28, scope: !20739)
!20741 = !DILocation(line: 2384, column: 7, scope: !20739)
!20742 = !DILocation(line: 2384, column: 7, scope: !20718)
!20743 = !DILocation(line: 2385, column: 4, scope: !20739)
!20744 = !DILocation(line: 2387, column: 26, scope: !20718)
!20745 = !DILocation(line: 2387, column: 9, scope: !20718)
!20746 = !DILocation(line: 2387, column: 7, scope: !20718)
!20747 = !DILocation(line: 2388, column: 8, scope: !20748)
!20748 = distinct !DILexicalBlock(scope: !20718, file: !3, line: 2388, column: 7)
!20749 = !DILocation(line: 2388, column: 7, scope: !20718)
!20750 = !DILocation(line: 2389, column: 4, scope: !20748)
!20751 = !DILocation(line: 2391, column: 27, scope: !20718)
!20752 = !DILocation(line: 2391, column: 31, scope: !20718)
!20753 = !DILocation(line: 2391, column: 9, scope: !20718)
!20754 = !DILocation(line: 2391, column: 7, scope: !20718)
!20755 = !DILocation(line: 2392, column: 8, scope: !20756)
!20756 = distinct !DILexicalBlock(scope: !20718, file: !3, line: 2392, column: 7)
!20757 = !DILocation(line: 2392, column: 7, scope: !20718)
!20758 = !DILocation(line: 2393, column: 4, scope: !20756)
!20759 = !DILocation(line: 2395, column: 7, scope: !20717)
!20760 = !DILocation(line: 2395, column: 11, scope: !20717)
!20761 = !DILocation(line: 2395, column: 7, scope: !20718)
!20762 = !DILocation(line: 2396, column: 19, scope: !20763)
!20763 = distinct !DILexicalBlock(scope: !20717, file: !3, line: 2395, column: 23)
!20764 = !DILocation(line: 2396, column: 4, scope: !20763)
!20765 = !DILocation(line: 2397, column: 24, scope: !20763)
!20766 = !DILocation(line: 2397, column: 4, scope: !20763)
!20767 = !DILocation(line: 2398, column: 3, scope: !20763)
!20768 = !DILocalVariable(name: "stats", scope: !20716, file: !3, line: 2399, type: !7813)
!20769 = !DILocation(line: 2399, column: 29, scope: !20716)
!20770 = !DILocation(line: 2399, column: 38, scope: !20716)
!20771 = !DILocation(line: 2399, column: 46, scope: !20716)
!20772 = !DILocalVariable(name: "flags", scope: !20716, file: !3, line: 2400, type: !394)
!20773 = !DILocation(line: 2400, column: 18, scope: !20716)
!20774 = !DILocation(line: 2402, column: 4, scope: !20716)
!20775 = !DILocation(line: 2402, column: 4, scope: !20776)
!20776 = distinct !DILexicalBlock(scope: !20777, file: !3, line: 2402, column: 4)
!20777 = distinct !DILexicalBlock(scope: !20716, file: !3, line: 2402, column: 4)
!20778 = !DILocation(line: 2402, column: 4, scope: !20777)
!20779 = !DILocation(line: 2404, column: 25, scope: !20716)
!20780 = !DILocation(line: 2404, column: 30, scope: !20716)
!20781 = !DILocation(line: 2404, column: 4, scope: !20716)
!20782 = !DILocation(line: 2404, column: 11, scope: !20716)
!20783 = !DILocation(line: 2404, column: 22, scope: !20716)
!20784 = !DILocation(line: 2406, column: 4, scope: !20716)
!20785 = !DILocation(line: 2406, column: 4, scope: !20726)
!20786 = !DILocalVariable(name: "__dummy", scope: !20787, file: !3, line: 2406, type: !394)
!20787 = distinct !DILexicalBlock(scope: !20725, file: !3, line: 2406, column: 4)
!20788 = !DILocation(line: 2406, column: 4, scope: !20787)
!20789 = !DILocalVariable(name: "__dummy2", scope: !20787, file: !3, line: 2406, type: !394)
!20790 = !DILocation(line: 2406, column: 4, scope: !20725)
!20791 = !DILocation(line: 2406, column: 4, scope: !20724)
!20792 = !DILocation(line: 2406, column: 4, scope: !20793)
!20793 = distinct !DILexicalBlock(scope: !20724, file: !3, line: 2406, column: 4)
!20794 = !DILocalVariable(name: "__dummy", scope: !20795, file: !3, line: 2406, type: !394)
!20795 = distinct !DILexicalBlock(scope: !20796, file: !3, line: 2406, column: 4)
!20796 = distinct !DILexicalBlock(scope: !20793, file: !3, line: 2406, column: 4)
!20797 = !DILocation(line: 2406, column: 4, scope: !20795)
!20798 = !DILocalVariable(name: "__dummy2", scope: !20795, file: !3, line: 2406, type: !394)
!20799 = !DILocation(line: 2406, column: 4, scope: !20796)
!20800 = !DILocation(line: 2406, column: 4, scope: !20723)
!20801 = !{i32 -2137060556}
!20802 = !DILocation(line: 2406, column: 4, scope: !20722)
!20803 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !20721)
!20804 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !20721)
!20805 = !DILocation(line: 2407, column: 19, scope: !20716)
!20806 = !DILocation(line: 2407, column: 24, scope: !20716)
!20807 = !DILocation(line: 2407, column: 31, scope: !20716)
!20808 = !DILocation(line: 2407, column: 35, scope: !20716)
!20809 = !DILocation(line: 2407, column: 4, scope: !20716)
!20810 = !DILocation(line: 2408, column: 28, scope: !20716)
!20811 = !DILocation(line: 2408, column: 32, scope: !20716)
!20812 = !DILocation(line: 2408, column: 41, scope: !20716)
!20813 = !DILocation(line: 409, column: 2, scope: !15498, inlinedAt: !20715)
!20814 = !DILocation(line: 409, column: 2, scope: !15503, inlinedAt: !20715)
!20815 = !DILocation(line: 409, column: 2, scope: !15504, inlinedAt: !20715)
!20816 = !DILocation(line: 409, column: 2, scope: !15511, inlinedAt: !20715)
!20817 = !DILocation(line: 409, column: 2, scope: !15514, inlinedAt: !20715)
!20818 = !DILocation(line: 2410, column: 2, scope: !20718)
!20819 = !DILocation(line: 2410, column: 11, scope: !20713)
!20820 = !DILocation(line: 2410, column: 15, scope: !20713)
!20821 = distinct !{!20821, !20731, !20822}
!20822 = !DILocation(line: 2410, column: 19, scope: !20713)
!20823 = !DILocation(line: 2411, column: 1, scope: !20713)
!20824 = distinct !DISubprogram(name: "r8152_get_tx_agg", scope: !3, file: !3, line: 1893, type: !20825, scopeLine: 1894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!20825 = !DISubroutineType(types: !20826)
!20826 = !{!10662, !10280}
!20827 = !DILocation(line: 407, column: 64, scope: !15429, inlinedAt: !20828)
!20828 = distinct !DILocation(line: 1909, column: 2, scope: !20824)
!20829 = !DILocation(line: 407, column: 84, scope: !15429, inlinedAt: !20828)
!20830 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !20831)
!20831 = distinct !DILocation(line: 1901, column: 2, scope: !20832)
!20832 = distinct !DILexicalBlock(scope: !20833, file: !3, line: 1901, column: 2)
!20833 = distinct !DILexicalBlock(scope: !20834, file: !3, line: 1901, column: 2)
!20834 = distinct !DILexicalBlock(scope: !20835, file: !3, line: 1901, column: 2)
!20835 = distinct !DILexicalBlock(scope: !20836, file: !3, line: 1901, column: 2)
!20836 = distinct !DILexicalBlock(scope: !20824, file: !3, line: 1901, column: 2)
!20837 = !DILocalVariable(name: "tp", arg: 1, scope: !20824, file: !3, line: 1893, type: !10280)
!20838 = !DILocation(line: 1893, column: 54, scope: !20824)
!20839 = !DILocalVariable(name: "agg", scope: !20824, file: !3, line: 1895, type: !10662)
!20840 = !DILocation(line: 1895, column: 17, scope: !20824)
!20841 = !DILocalVariable(name: "flags", scope: !20824, file: !3, line: 1896, type: !394)
!20842 = !DILocation(line: 1896, column: 16, scope: !20824)
!20843 = !DILocation(line: 1898, column: 18, scope: !20844)
!20844 = distinct !DILexicalBlock(scope: !20824, file: !3, line: 1898, column: 6)
!20845 = !DILocation(line: 1898, column: 22, scope: !20844)
!20846 = !DILocation(line: 1898, column: 6, scope: !20844)
!20847 = !DILocation(line: 1898, column: 6, scope: !20824)
!20848 = !DILocation(line: 1899, column: 3, scope: !20844)
!20849 = !DILocation(line: 1901, column: 2, scope: !20824)
!20850 = !DILocation(line: 1901, column: 2, scope: !20836)
!20851 = !DILocalVariable(name: "__dummy", scope: !20852, file: !3, line: 1901, type: !394)
!20852 = distinct !DILexicalBlock(scope: !20835, file: !3, line: 1901, column: 2)
!20853 = !DILocation(line: 1901, column: 2, scope: !20852)
!20854 = !DILocalVariable(name: "__dummy2", scope: !20852, file: !3, line: 1901, type: !394)
!20855 = !DILocation(line: 1901, column: 2, scope: !20835)
!20856 = !DILocation(line: 1901, column: 2, scope: !20834)
!20857 = !DILocation(line: 1901, column: 2, scope: !20858)
!20858 = distinct !DILexicalBlock(scope: !20834, file: !3, line: 1901, column: 2)
!20859 = !DILocalVariable(name: "__dummy", scope: !20860, file: !3, line: 1901, type: !394)
!20860 = distinct !DILexicalBlock(scope: !20861, file: !3, line: 1901, column: 2)
!20861 = distinct !DILexicalBlock(scope: !20858, file: !3, line: 1901, column: 2)
!20862 = !DILocation(line: 1901, column: 2, scope: !20860)
!20863 = !DILocalVariable(name: "__dummy2", scope: !20860, file: !3, line: 1901, type: !394)
!20864 = !DILocation(line: 1901, column: 2, scope: !20861)
!20865 = !DILocation(line: 1901, column: 2, scope: !20833)
!20866 = !{i32 -2137090306}
!20867 = !DILocation(line: 1901, column: 2, scope: !20832)
!20868 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !20831)
!20869 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !20831)
!20870 = !DILocation(line: 1902, column: 19, scope: !20871)
!20871 = distinct !DILexicalBlock(scope: !20824, file: !3, line: 1902, column: 6)
!20872 = !DILocation(line: 1902, column: 23, scope: !20871)
!20873 = !DILocation(line: 1902, column: 7, scope: !20871)
!20874 = !DILocation(line: 1902, column: 6, scope: !20824)
!20875 = !DILocalVariable(name: "cursor", scope: !20876, file: !3, line: 1903, type: !369)
!20876 = distinct !DILexicalBlock(scope: !20871, file: !3, line: 1902, column: 33)
!20877 = !DILocation(line: 1903, column: 21, scope: !20876)
!20878 = !DILocation(line: 1905, column: 12, scope: !20876)
!20879 = !DILocation(line: 1905, column: 16, scope: !20876)
!20880 = !DILocation(line: 1905, column: 24, scope: !20876)
!20881 = !DILocation(line: 1905, column: 10, scope: !20876)
!20882 = !DILocation(line: 1906, column: 17, scope: !20876)
!20883 = !DILocation(line: 1906, column: 3, scope: !20876)
!20884 = !DILocalVariable(name: "__mptr", scope: !20885, file: !3, line: 1907, type: !647)
!20885 = distinct !DILexicalBlock(scope: !20876, file: !3, line: 1907, column: 9)
!20886 = !DILocation(line: 1907, column: 9, scope: !20885)
!20887 = !DILocation(line: 1907, column: 9, scope: !20888)
!20888 = distinct !DILexicalBlock(scope: !20885, file: !3, line: 1907, column: 9)
!20889 = !DILocation(line: 1907, column: 7, scope: !20876)
!20890 = !DILocation(line: 1908, column: 2, scope: !20876)
!20891 = !DILocation(line: 1909, column: 26, scope: !20824)
!20892 = !DILocation(line: 1909, column: 30, scope: !20824)
!20893 = !DILocation(line: 1909, column: 39, scope: !20824)
!20894 = !DILocation(line: 409, column: 2, scope: !15498, inlinedAt: !20828)
!20895 = !DILocation(line: 409, column: 2, scope: !15503, inlinedAt: !20828)
!20896 = !DILocation(line: 409, column: 2, scope: !15504, inlinedAt: !20828)
!20897 = !DILocation(line: 409, column: 2, scope: !15511, inlinedAt: !20828)
!20898 = !DILocation(line: 409, column: 2, scope: !15514, inlinedAt: !20828)
!20899 = !DILocation(line: 1911, column: 9, scope: !20824)
!20900 = !DILocation(line: 1911, column: 2, scope: !20824)
!20901 = !DILocation(line: 1912, column: 1, scope: !20824)
!20902 = distinct !DISubprogram(name: "r8152_tx_agg_fill", scope: !3, file: !3, line: 2059, type: !20903, scopeLine: 2060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!20903 = !DISubroutineType(types: !20904)
!20904 = !{!72, !10280, !10662}
!20905 = !DILocalVariable(name: "lock", arg: 1, scope: !20906, file: !15430, line: 392, type: !4233)
!20906 = distinct !DISubprogram(name: "spin_unlock", scope: !15430, file: !15430, line: 392, type: !15666, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!20907 = !DILocation(line: 392, column: 53, scope: !20906, inlinedAt: !20908)
!20908 = distinct !DILocation(line: 2131, column: 3, scope: !20909)
!20909 = distinct !DILexicalBlock(scope: !20910, file: !3, line: 2128, column: 35)
!20910 = distinct !DILexicalBlock(scope: !20902, file: !3, line: 2128, column: 6)
!20911 = !DILocalVariable(name: "lock", arg: 1, scope: !20912, file: !15430, line: 352, type: !4233)
!20912 = distinct !DISubprogram(name: "spin_lock", scope: !15430, file: !15430, line: 352, type: !15666, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!20913 = !DILocation(line: 352, column: 51, scope: !20912, inlinedAt: !20914)
!20914 = distinct !DILocation(line: 2129, column: 3, scope: !20909)
!20915 = !DILocation(line: 392, column: 53, scope: !20906, inlinedAt: !20916)
!20916 = distinct !DILocation(line: 2068, column: 2, scope: !20902)
!20917 = !DILocation(line: 352, column: 51, scope: !20912, inlinedAt: !20918)
!20918 = distinct !DILocation(line: 2066, column: 2, scope: !20902)
!20919 = !DILocalVariable(name: "tp", arg: 1, scope: !20902, file: !3, line: 2059, type: !10280)
!20920 = !DILocation(line: 2059, column: 44, scope: !20902)
!20921 = !DILocalVariable(name: "agg", arg: 2, scope: !20902, file: !3, line: 2059, type: !10662)
!20922 = !DILocation(line: 2059, column: 63, scope: !20902)
!20923 = !DILocalVariable(name: "skb_head", scope: !20902, file: !3, line: 2061, type: !2905)
!20924 = !DILocation(line: 2061, column: 22, scope: !20902)
!20925 = !DILocalVariable(name: "tx_queue", scope: !20902, file: !3, line: 2061, type: !15396)
!20926 = !DILocation(line: 2061, column: 33, scope: !20902)
!20927 = !DILocation(line: 2061, column: 45, scope: !20902)
!20928 = !DILocation(line: 2061, column: 49, scope: !20902)
!20929 = !DILocalVariable(name: "remain", scope: !20902, file: !3, line: 2062, type: !72)
!20930 = !DILocation(line: 2062, column: 6, scope: !20902)
!20931 = !DILocalVariable(name: "ret", scope: !20902, file: !3, line: 2062, type: !72)
!20932 = !DILocation(line: 2062, column: 14, scope: !20902)
!20933 = !DILocalVariable(name: "tx_data", scope: !20902, file: !3, line: 2063, type: !7823)
!20934 = !DILocation(line: 2063, column: 6, scope: !20902)
!20935 = !DILocation(line: 2065, column: 2, scope: !20902)
!20936 = !DILocation(line: 2066, column: 13, scope: !20902)
!20937 = !DILocation(line: 2066, column: 23, scope: !20902)
!20938 = !DILocation(line: 354, column: 2, scope: !20939, inlinedAt: !20918)
!20939 = distinct !DILexicalBlock(scope: !20912, file: !15430, line: 354, column: 2)
!20940 = !{i32 -2145305243}
!20941 = !DILocation(line: 354, column: 2, scope: !20942, inlinedAt: !20918)
!20942 = distinct !DILexicalBlock(scope: !20939, file: !15430, line: 354, column: 2)
!20943 = !DILocation(line: 2067, column: 24, scope: !20902)
!20944 = !DILocation(line: 2067, column: 2, scope: !20902)
!20945 = !DILocation(line: 2068, column: 15, scope: !20902)
!20946 = !DILocation(line: 2068, column: 25, scope: !20902)
!20947 = !DILocation(line: 394, column: 2, scope: !20948, inlinedAt: !20916)
!20948 = distinct !DILexicalBlock(scope: !20906, file: !15430, line: 394, column: 2)
!20949 = !{i32 -2145302882}
!20950 = !DILocation(line: 394, column: 2, scope: !20951, inlinedAt: !20916)
!20951 = distinct !DILexicalBlock(scope: !20948, file: !15430, line: 394, column: 2)
!20952 = !DILocation(line: 2070, column: 12, scope: !20902)
!20953 = !DILocation(line: 2070, column: 17, scope: !20902)
!20954 = !DILocation(line: 2070, column: 10, scope: !20902)
!20955 = !DILocation(line: 2071, column: 2, scope: !20902)
!20956 = !DILocation(line: 2071, column: 7, scope: !20902)
!20957 = !DILocation(line: 2071, column: 15, scope: !20902)
!20958 = !DILocation(line: 2072, column: 2, scope: !20902)
!20959 = !DILocation(line: 2072, column: 7, scope: !20902)
!20960 = !DILocation(line: 2072, column: 15, scope: !20902)
!20961 = !DILocation(line: 2073, column: 11, scope: !20902)
!20962 = !DILocation(line: 2073, column: 9, scope: !20902)
!20963 = !DILocation(line: 2075, column: 2, scope: !20902)
!20964 = !DILocation(line: 2075, column: 9, scope: !20902)
!20965 = !DILocation(line: 2075, column: 16, scope: !20902)
!20966 = !DILocalVariable(name: "tx_desc", scope: !20967, file: !3, line: 2076, type: !10663)
!20967 = distinct !DILexicalBlock(scope: !20902, file: !3, line: 2075, column: 54)
!20968 = !DILocation(line: 2076, column: 19, scope: !20967)
!20969 = !DILocalVariable(name: "skb", scope: !20967, file: !3, line: 2077, type: !497)
!20970 = !DILocation(line: 2077, column: 19, scope: !20967)
!20971 = !DILocalVariable(name: "len", scope: !20967, file: !3, line: 2078, type: !7)
!20972 = !DILocation(line: 2078, column: 16, scope: !20967)
!20973 = !DILocalVariable(name: "offset", scope: !20967, file: !3, line: 2079, type: !784)
!20974 = !DILocation(line: 2079, column: 7, scope: !20967)
!20975 = !DILocation(line: 2081, column: 9, scope: !20967)
!20976 = !DILocation(line: 2081, column: 7, scope: !20967)
!20977 = !DILocation(line: 2082, column: 8, scope: !20978)
!20978 = distinct !DILexicalBlock(scope: !20967, file: !3, line: 2082, column: 7)
!20979 = !DILocation(line: 2082, column: 7, scope: !20967)
!20980 = !DILocation(line: 2083, column: 4, scope: !20978)
!20981 = !DILocation(line: 2085, column: 9, scope: !20967)
!20982 = !DILocation(line: 2085, column: 14, scope: !20967)
!20983 = !DILocation(line: 2085, column: 18, scope: !20967)
!20984 = !DILocation(line: 2085, column: 7, scope: !20967)
!20985 = !DILocation(line: 2087, column: 7, scope: !20986)
!20986 = distinct !DILexicalBlock(scope: !20967, file: !3, line: 2087, column: 7)
!20987 = !DILocation(line: 2087, column: 13, scope: !20986)
!20988 = !DILocation(line: 2087, column: 11, scope: !20986)
!20989 = !DILocation(line: 2087, column: 7, scope: !20967)
!20990 = !DILocation(line: 2088, column: 32, scope: !20991)
!20991 = distinct !DILexicalBlock(scope: !20986, file: !3, line: 2087, column: 21)
!20992 = !DILocation(line: 2088, column: 4, scope: !20991)
!20993 = !DILocation(line: 2089, column: 4, scope: !20991)
!20994 = !DILocation(line: 2092, column: 26, scope: !20967)
!20995 = !DILocation(line: 2092, column: 13, scope: !20967)
!20996 = !DILocation(line: 2092, column: 11, scope: !20967)
!20997 = !DILocation(line: 2093, column: 31, scope: !20967)
!20998 = !DILocation(line: 2093, column: 13, scope: !20967)
!20999 = !DILocation(line: 2093, column: 11, scope: !20967)
!21000 = !DILocation(line: 2095, column: 38, scope: !20967)
!21001 = !DILocation(line: 2095, column: 17, scope: !20967)
!21002 = !DILocation(line: 2095, column: 10, scope: !20967)
!21003 = !DILocation(line: 2097, column: 21, scope: !21004)
!21004 = distinct !DILexicalBlock(scope: !20967, file: !3, line: 2097, column: 7)
!21005 = !DILocation(line: 2097, column: 25, scope: !21004)
!21006 = !DILocation(line: 2097, column: 34, scope: !21004)
!21007 = !DILocation(line: 2097, column: 39, scope: !21004)
!21008 = !DILocation(line: 2097, column: 44, scope: !21004)
!21009 = !DILocation(line: 2097, column: 49, scope: !21004)
!21010 = !DILocation(line: 2097, column: 7, scope: !21004)
!21011 = !DILocation(line: 2097, column: 7, scope: !20967)
!21012 = !DILocation(line: 2098, column: 26, scope: !21013)
!21013 = distinct !DILexicalBlock(scope: !21004, file: !3, line: 2097, column: 58)
!21014 = !DILocation(line: 2098, column: 30, scope: !21013)
!21015 = !DILocation(line: 2098, column: 4, scope: !21013)
!21016 = !DILocation(line: 2099, column: 4, scope: !21013)
!21017 = distinct !{!21017, !20963, !21018}
!21018 = !DILocation(line: 2126, column: 2, scope: !20902)
!21019 = !DILocation(line: 2102, column: 19, scope: !20967)
!21020 = !DILocation(line: 2102, column: 28, scope: !20967)
!21021 = !DILocation(line: 2102, column: 3, scope: !20967)
!21022 = !DILocation(line: 2104, column: 11, scope: !20967)
!21023 = !DILocation(line: 2106, column: 9, scope: !20967)
!21024 = !DILocation(line: 2106, column: 14, scope: !20967)
!21025 = !DILocation(line: 2106, column: 7, scope: !20967)
!21026 = !DILocation(line: 2107, column: 21, scope: !21027)
!21027 = distinct !DILexicalBlock(scope: !20967, file: !3, line: 2107, column: 7)
!21028 = !DILocation(line: 2107, column: 29, scope: !21027)
!21029 = !DILocation(line: 2107, column: 38, scope: !21027)
!21030 = !DILocation(line: 2107, column: 7, scope: !21027)
!21031 = !DILocation(line: 2107, column: 43, scope: !21027)
!21032 = !DILocation(line: 2107, column: 7, scope: !20967)
!21033 = !DILocalVariable(name: "stats", scope: !21034, file: !3, line: 2108, type: !7813)
!21034 = distinct !DILexicalBlock(scope: !21027, file: !3, line: 2107, column: 48)
!21035 = !DILocation(line: 2108, column: 29, scope: !21034)
!21036 = !DILocation(line: 2108, column: 38, scope: !21034)
!21037 = !DILocation(line: 2108, column: 42, scope: !21034)
!21038 = !DILocation(line: 2108, column: 50, scope: !21034)
!21039 = !DILocation(line: 2110, column: 4, scope: !21034)
!21040 = !DILocation(line: 2110, column: 11, scope: !21034)
!21041 = !DILocation(line: 2110, column: 21, scope: !21034)
!21042 = !DILocation(line: 2111, column: 22, scope: !21034)
!21043 = !DILocation(line: 2111, column: 4, scope: !21034)
!21044 = !DILocation(line: 2112, column: 12, scope: !21034)
!21045 = !DILocation(line: 2113, column: 4, scope: !21034)
!21046 = !DILocation(line: 2116, column: 14, scope: !20967)
!21047 = !DILocation(line: 2116, column: 11, scope: !20967)
!21048 = !DILocation(line: 2117, column: 19, scope: !20967)
!21049 = !DILocation(line: 2117, column: 3, scope: !20967)
!21050 = !DILocation(line: 2117, column: 8, scope: !20967)
!21051 = !DILocation(line: 2117, column: 16, scope: !20967)
!21052 = !DILocation(line: 2118, column: 19, scope: !20967)
!21053 = !DILocation(line: 2118, column: 36, scope: !20967)
!21054 = !DILocation(line: 2118, column: 3, scope: !20967)
!21055 = !DILocation(line: 2118, column: 8, scope: !20967)
!21056 = !DILocation(line: 2118, column: 16, scope: !20967)
!21057 = !DILocation(line: 2120, column: 21, scope: !20967)
!21058 = !DILocation(line: 2120, column: 3, scope: !20967)
!21059 = !DILocation(line: 2122, column: 12, scope: !20967)
!21060 = !DILocation(line: 2122, column: 44, scope: !20967)
!21061 = !DILocation(line: 2122, column: 31, scope: !20967)
!21062 = !DILocation(line: 2122, column: 55, scope: !20967)
!21063 = !DILocation(line: 2122, column: 60, scope: !20967)
!21064 = !DILocation(line: 2122, column: 53, scope: !20967)
!21065 = !DILocation(line: 2122, column: 25, scope: !20967)
!21066 = !DILocation(line: 2122, column: 23, scope: !20967)
!21067 = !DILocation(line: 2122, column: 10, scope: !20967)
!21068 = !DILocation(line: 2124, column: 37, scope: !21069)
!21069 = distinct !DILexicalBlock(scope: !20967, file: !3, line: 2124, column: 7)
!21070 = !DILocation(line: 2124, column: 41, scope: !21069)
!21071 = !DILocation(line: 2124, column: 7, scope: !21069)
!21072 = !DILocation(line: 2124, column: 7, scope: !20967)
!21073 = !DILocation(line: 2125, column: 4, scope: !21069)
!21074 = !DILocation(line: 2128, column: 7, scope: !20910)
!21075 = !DILocation(line: 2128, column: 6, scope: !20902)
!21076 = !DILocation(line: 2129, column: 14, scope: !20909)
!21077 = !DILocation(line: 2129, column: 24, scope: !20909)
!21078 = !DILocation(line: 354, column: 2, scope: !20939, inlinedAt: !20914)
!21079 = !DILocation(line: 354, column: 2, scope: !20942, inlinedAt: !20914)
!21080 = !DILocation(line: 2130, column: 31, scope: !20909)
!21081 = !DILocation(line: 2130, column: 3, scope: !20909)
!21082 = !DILocation(line: 2131, column: 16, scope: !20909)
!21083 = !DILocation(line: 2131, column: 26, scope: !20909)
!21084 = !DILocation(line: 394, column: 2, scope: !20948, inlinedAt: !20908)
!21085 = !DILocation(line: 394, column: 2, scope: !20951, inlinedAt: !20908)
!21086 = !DILocation(line: 2132, column: 2, scope: !20909)
!21087 = !DILocation(line: 2134, column: 16, scope: !20902)
!21088 = !DILocation(line: 2134, column: 20, scope: !20902)
!21089 = !DILocation(line: 2134, column: 2, scope: !20902)
!21090 = !DILocation(line: 2136, column: 26, scope: !21091)
!21091 = distinct !DILexicalBlock(scope: !20902, file: !3, line: 2136, column: 6)
!21092 = !DILocation(line: 2136, column: 30, scope: !21091)
!21093 = !DILocation(line: 2136, column: 6, scope: !21091)
!21094 = !DILocation(line: 2136, column: 38, scope: !21091)
!21095 = !DILocation(line: 2137, column: 21, scope: !21091)
!21096 = !DILocation(line: 2137, column: 25, scope: !21091)
!21097 = !DILocation(line: 2137, column: 6, scope: !21091)
!21098 = !DILocation(line: 2137, column: 37, scope: !21091)
!21099 = !DILocation(line: 2137, column: 41, scope: !21091)
!21100 = !DILocation(line: 2137, column: 35, scope: !21091)
!21101 = !DILocation(line: 2136, column: 6, scope: !20902)
!21102 = !DILocation(line: 2138, column: 20, scope: !21091)
!21103 = !DILocation(line: 2138, column: 24, scope: !21091)
!21104 = !DILocation(line: 2138, column: 3, scope: !21091)
!21105 = !DILocation(line: 2140, column: 18, scope: !20902)
!21106 = !DILocation(line: 2140, column: 22, scope: !20902)
!21107 = !DILocation(line: 2140, column: 2, scope: !20902)
!21108 = !DILocation(line: 2142, column: 39, scope: !20902)
!21109 = !DILocation(line: 2142, column: 43, scope: !20902)
!21110 = !DILocation(line: 2142, column: 8, scope: !20902)
!21111 = !DILocation(line: 2142, column: 6, scope: !20902)
!21112 = !DILocation(line: 2143, column: 6, scope: !21113)
!21113 = distinct !DILexicalBlock(scope: !20902, file: !3, line: 2143, column: 6)
!21114 = !DILocation(line: 2143, column: 10, scope: !21113)
!21115 = !DILocation(line: 2143, column: 6, scope: !20902)
!21116 = !DILocation(line: 2144, column: 3, scope: !21113)
!21117 = !DILocation(line: 2146, column: 20, scope: !20902)
!21118 = !DILocation(line: 2146, column: 25, scope: !20902)
!21119 = !DILocation(line: 2146, column: 30, scope: !20902)
!21120 = !DILocation(line: 2146, column: 34, scope: !20902)
!21121 = !DILocation(line: 2146, column: 40, scope: !20902)
!21122 = !DILocation(line: 2147, column: 6, scope: !20902)
!21123 = !DILocation(line: 2147, column: 11, scope: !20902)
!21124 = !DILocation(line: 2147, column: 23, scope: !20902)
!21125 = !DILocation(line: 2147, column: 39, scope: !20902)
!21126 = !DILocation(line: 2147, column: 44, scope: !20902)
!21127 = !DILocation(line: 2147, column: 31, scope: !20902)
!21128 = !DILocation(line: 2147, column: 17, scope: !20902)
!21129 = !DILocation(line: 2148, column: 43, scope: !20902)
!21130 = !DILocation(line: 2146, column: 2, scope: !20902)
!21131 = !DILocation(line: 2150, column: 23, scope: !20902)
!21132 = !DILocation(line: 2150, column: 28, scope: !20902)
!21133 = !DILocation(line: 2150, column: 8, scope: !20902)
!21134 = !DILocation(line: 2150, column: 6, scope: !20902)
!21135 = !DILocation(line: 2151, column: 6, scope: !21136)
!21136 = distinct !DILexicalBlock(scope: !20902, file: !3, line: 2151, column: 6)
!21137 = !DILocation(line: 2151, column: 10, scope: !21136)
!21138 = !DILocation(line: 2151, column: 6, scope: !20902)
!21139 = !DILocation(line: 2152, column: 34, scope: !21136)
!21140 = !DILocation(line: 2152, column: 38, scope: !21136)
!21141 = !DILocation(line: 2152, column: 3, scope: !21136)
!21142 = !DILocation(line: 2151, column: 12, scope: !21136)
!21143 = !DILabel(scope: !20902, name: "out_tx_fill", file: !3, line: 2154)
!21144 = !DILocation(line: 2154, column: 1, scope: !20902)
!21145 = !DILocation(line: 2155, column: 9, scope: !20902)
!21146 = !DILocation(line: 2155, column: 2, scope: !20902)
!21147 = distinct !DISubprogram(name: "list_del_init", scope: !12142, file: !12142, line: 202, type: !12143, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21148 = !DILocalVariable(name: "entry", arg: 1, scope: !21147, file: !12142, line: 202, type: !369)
!21149 = !DILocation(line: 202, column: 52, scope: !21147)
!21150 = !DILocation(line: 204, column: 19, scope: !21147)
!21151 = !DILocation(line: 204, column: 2, scope: !21147)
!21152 = !DILocation(line: 205, column: 17, scope: !21147)
!21153 = !DILocation(line: 205, column: 2, scope: !21147)
!21154 = !DILocation(line: 206, column: 1, scope: !21147)
!21155 = distinct !DISubprogram(name: "__skb_queue_head", scope: !499, file: !499, line: 2029, type: !21156, scopeLine: 2031, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21156 = !DISubroutineType(types: !21157)
!21157 = !{null, !15396, !497}
!21158 = !DILocalVariable(name: "list", arg: 1, scope: !21155, file: !499, line: 2029, type: !15396)
!21159 = !DILocation(line: 2029, column: 58, scope: !21155)
!21160 = !DILocalVariable(name: "newsk", arg: 2, scope: !21155, file: !499, line: 2030, type: !497)
!21161 = !DILocation(line: 2030, column: 25, scope: !21155)
!21162 = !DILocation(line: 2032, column: 20, scope: !21155)
!21163 = !DILocation(line: 2032, column: 44, scope: !21155)
!21164 = !DILocation(line: 2032, column: 26, scope: !21155)
!21165 = !DILocation(line: 2032, column: 50, scope: !21155)
!21166 = !DILocation(line: 2032, column: 2, scope: !21155)
!21167 = !DILocation(line: 2033, column: 1, scope: !21155)
!21168 = distinct !DISubprogram(name: "tx_agg_align", scope: !3, file: !3, line: 1730, type: !21169, scopeLine: 1731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21169 = !DISubroutineType(types: !21170)
!21170 = !{!647, !647}
!21171 = !DILocalVariable(name: "data", arg: 1, scope: !21168, file: !3, line: 1730, type: !647)
!21172 = !DILocation(line: 1730, column: 40, scope: !21168)
!21173 = !DILocation(line: 1732, column: 17, scope: !21168)
!21174 = !DILocation(line: 1732, column: 9, scope: !21168)
!21175 = !DILocation(line: 1732, column: 2, scope: !21168)
!21176 = distinct !DISubprogram(name: "skb_transport_offset", scope: !499, file: !499, line: 2604, type: !21177, scopeLine: 2605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21177 = !DISubroutineType(types: !21178)
!21178 = !{!72, !8817}
!21179 = !DILocalVariable(name: "skb", arg: 1, scope: !21176, file: !499, line: 2604, type: !8817)
!21180 = !DILocation(line: 2604, column: 62, scope: !21176)
!21181 = !DILocation(line: 2606, column: 30, scope: !21176)
!21182 = !DILocation(line: 2606, column: 9, scope: !21176)
!21183 = !DILocation(line: 2606, column: 37, scope: !21176)
!21184 = !DILocation(line: 2606, column: 42, scope: !21176)
!21185 = !DILocation(line: 2606, column: 35, scope: !21176)
!21186 = !DILocation(line: 2606, column: 2, scope: !21176)
!21187 = distinct !DISubprogram(name: "r8152_tx_csum", scope: !3, file: !3, line: 1974, type: !21188, scopeLine: 1976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21188 = !DISubroutineType(types: !21189)
!21189 = !{!72, !10280, !10663, !497, !784, !784}
!21190 = !DILocalVariable(name: "tp", arg: 1, scope: !21187, file: !3, line: 1974, type: !10280)
!21191 = !DILocation(line: 1974, column: 40, scope: !21187)
!21192 = !DILocalVariable(name: "desc", arg: 2, scope: !21187, file: !3, line: 1974, type: !10663)
!21193 = !DILocation(line: 1974, column: 60, scope: !21187)
!21194 = !DILocalVariable(name: "skb", arg: 3, scope: !21187, file: !3, line: 1975, type: !497)
!21195 = !DILocation(line: 1975, column: 21, scope: !21187)
!21196 = !DILocalVariable(name: "len", arg: 4, scope: !21187, file: !3, line: 1975, type: !784)
!21197 = !DILocation(line: 1975, column: 30, scope: !21187)
!21198 = !DILocalVariable(name: "transport_offset", arg: 5, scope: !21187, file: !3, line: 1975, type: !784)
!21199 = !DILocation(line: 1975, column: 39, scope: !21187)
!21200 = !DILocalVariable(name: "mss", scope: !21187, file: !3, line: 1977, type: !784)
!21201 = !DILocation(line: 1977, column: 6, scope: !21187)
!21202 = !DILocation(line: 1977, column: 12, scope: !21187)
!21203 = !DILocation(line: 1977, column: 29, scope: !21187)
!21204 = !DILocalVariable(name: "opts1", scope: !21187, file: !3, line: 1978, type: !784)
!21205 = !DILocation(line: 1978, column: 6, scope: !21187)
!21206 = !DILocalVariable(name: "opts2", scope: !21187, file: !3, line: 1978, type: !784)
!21207 = !DILocation(line: 1978, column: 13, scope: !21187)
!21208 = !DILocalVariable(name: "ret", scope: !21187, file: !3, line: 1979, type: !72)
!21209 = !DILocation(line: 1979, column: 6, scope: !21187)
!21210 = !DILocalVariable(name: "__ret_warn_on", scope: !21211, file: !3, line: 1981, type: !72)
!21211 = distinct !DILexicalBlock(scope: !21187, file: !3, line: 1981, column: 2)
!21212 = !DILocation(line: 1981, column: 2, scope: !21211)
!21213 = !DILocation(line: 1981, column: 2, scope: !21214)
!21214 = distinct !DILexicalBlock(scope: !21211, file: !3, line: 1981, column: 2)
!21215 = !DILocation(line: 1981, column: 2, scope: !21216)
!21216 = distinct !DILexicalBlock(scope: !21214, file: !3, line: 1981, column: 2)
!21217 = !DILocation(line: 1981, column: 2, scope: !21218)
!21218 = distinct !DILexicalBlock(scope: !21216, file: !3, line: 1981, column: 2)
!21219 = !DILocation(line: 1981, column: 2, scope: !21220)
!21220 = distinct !DILexicalBlock(scope: !21216, file: !3, line: 1981, column: 2)
!21221 = !{i32 -2137085873, i32 -2137085844, i32 -2137085798, i32 -2137085740, i32 -2137085686, i32 -2137085632, i32 -2137085577, i32 -2137085546}
!21222 = !DILocation(line: 1981, column: 2, scope: !21223)
!21223 = distinct !DILexicalBlock(scope: !21216, file: !3, line: 1981, column: 2)
!21224 = !{i32 -2137085129, i32 -2137085122, i32 -2137085070, i32 -2137085039, i32 -2137085009}
!21225 = !DILocation(line: 1981, column: 2, scope: !21226)
!21226 = distinct !DILexicalBlock(scope: !21216, file: !3, line: 1981, column: 2)
!21227 = !DILocation(line: 1983, column: 10, scope: !21187)
!21228 = !DILocation(line: 1983, column: 14, scope: !21187)
!21229 = !DILocation(line: 1983, column: 22, scope: !21187)
!21230 = !DILocation(line: 1983, column: 8, scope: !21187)
!21231 = !DILocation(line: 1985, column: 6, scope: !21232)
!21232 = distinct !DILexicalBlock(scope: !21187, file: !3, line: 1985, column: 6)
!21233 = !DILocation(line: 1985, column: 6, scope: !21187)
!21234 = !DILocation(line: 1986, column: 7, scope: !21235)
!21235 = distinct !DILexicalBlock(scope: !21236, file: !3, line: 1986, column: 7)
!21236 = distinct !DILexicalBlock(scope: !21232, file: !3, line: 1985, column: 11)
!21237 = !DILocation(line: 1986, column: 24, scope: !21235)
!21238 = !DILocation(line: 1986, column: 7, scope: !21236)
!21239 = !DILocation(line: 1987, column: 4, scope: !21240)
!21240 = distinct !DILexicalBlock(scope: !21235, file: !3, line: 1986, column: 39)
!21241 = !DILocation(line: 1987, column: 4, scope: !21242)
!21242 = distinct !DILexicalBlock(scope: !21243, file: !3, line: 1987, column: 4)
!21243 = distinct !DILexicalBlock(scope: !21240, file: !3, line: 1987, column: 4)
!21244 = !DILocation(line: 1987, column: 4, scope: !21243)
!21245 = !DILocation(line: 1990, column: 8, scope: !21240)
!21246 = !DILocation(line: 1991, column: 4, scope: !21240)
!21247 = !DILocation(line: 1994, column: 29, scope: !21236)
!21248 = !DILocation(line: 1994, column: 11, scope: !21236)
!21249 = !DILocation(line: 1994, column: 3, scope: !21236)
!21250 = !DILocation(line: 1996, column: 10, scope: !21251)
!21251 = distinct !DILexicalBlock(scope: !21236, file: !3, line: 1994, column: 35)
!21252 = !DILocation(line: 1997, column: 4, scope: !21251)
!21253 = !DILocation(line: 2000, column: 21, scope: !21254)
!21254 = distinct !DILexicalBlock(scope: !21251, file: !3, line: 2000, column: 8)
!21255 = !DILocation(line: 2000, column: 8, scope: !21254)
!21256 = !DILocation(line: 2000, column: 8, scope: !21251)
!21257 = !DILocation(line: 2001, column: 9, scope: !21258)
!21258 = distinct !DILexicalBlock(scope: !21254, file: !3, line: 2000, column: 30)
!21259 = !DILocation(line: 2002, column: 5, scope: !21258)
!21260 = !DILocation(line: 2004, column: 25, scope: !21251)
!21261 = !DILocation(line: 2004, column: 4, scope: !21251)
!21262 = !DILocation(line: 2005, column: 10, scope: !21251)
!21263 = !DILocation(line: 2006, column: 4, scope: !21251)
!21264 = !DILocalVariable(name: "__ret_warn_on", scope: !21265, file: !3, line: 2009, type: !72)
!21265 = distinct !DILexicalBlock(scope: !21251, file: !3, line: 2009, column: 4)
!21266 = !DILocation(line: 2009, column: 4, scope: !21265)
!21267 = !DILocation(line: 2009, column: 4, scope: !21268)
!21268 = distinct !DILexicalBlock(scope: !21265, file: !3, line: 2009, column: 4)
!21269 = !DILocation(line: 2009, column: 4, scope: !21270)
!21270 = distinct !DILexicalBlock(scope: !21268, file: !3, line: 2009, column: 4)
!21271 = !DILocation(line: 2009, column: 4, scope: !21272)
!21272 = distinct !DILexicalBlock(scope: !21270, file: !3, line: 2009, column: 4)
!21273 = !DILocation(line: 2009, column: 4, scope: !21274)
!21274 = distinct !DILexicalBlock(scope: !21270, file: !3, line: 2009, column: 4)
!21275 = !{i32 -2137082902, i32 -2137082873, i32 -2137082827, i32 -2137082769, i32 -2137082715, i32 -2137082661, i32 -2137082606, i32 -2137082575}
!21276 = !DILocation(line: 2009, column: 4, scope: !21277)
!21277 = distinct !DILexicalBlock(scope: !21270, file: !3, line: 2009, column: 4)
!21278 = !{i32 -2137082158, i32 -2137082151, i32 -2137082099, i32 -2137082068, i32 -2137082038}
!21279 = !DILocation(line: 2009, column: 4, scope: !21280)
!21280 = distinct !DILexicalBlock(scope: !21270, file: !3, line: 2009, column: 4)
!21281 = !DILocation(line: 2010, column: 4, scope: !21251)
!21282 = !DILocation(line: 2013, column: 12, scope: !21236)
!21283 = !DILocation(line: 2013, column: 29, scope: !21236)
!21284 = !DILocation(line: 2013, column: 9, scope: !21236)
!21285 = !DILocalVariable(name: "__UNIQUE_ID___x567", scope: !21286, file: !3, line: 2014, type: !784)
!21286 = distinct !DILexicalBlock(scope: !21236, file: !3, line: 2014, column: 12)
!21287 = !DILocation(line: 2014, column: 12, scope: !21286)
!21288 = !DILocalVariable(name: "__UNIQUE_ID___y568", scope: !21286, file: !3, line: 2014, type: !7)
!21289 = !DILocation(line: 2014, column: 30, scope: !21236)
!21290 = !DILocation(line: 2014, column: 9, scope: !21236)
!21291 = !DILocation(line: 2015, column: 2, scope: !21236)
!21292 = !DILocation(line: 2015, column: 13, scope: !21293)
!21293 = distinct !DILexicalBlock(scope: !21232, file: !3, line: 2015, column: 13)
!21294 = !DILocation(line: 2015, column: 18, scope: !21293)
!21295 = !DILocation(line: 2015, column: 28, scope: !21293)
!21296 = !DILocation(line: 2015, column: 13, scope: !21232)
!21297 = !DILocalVariable(name: "ip_protocol", scope: !21298, file: !3, line: 2016, type: !1474)
!21298 = distinct !DILexicalBlock(scope: !21293, file: !3, line: 2015, column: 49)
!21299 = !DILocation(line: 2016, column: 6, scope: !21298)
!21300 = !DILocation(line: 2018, column: 7, scope: !21301)
!21301 = distinct !DILexicalBlock(scope: !21298, file: !3, line: 2018, column: 7)
!21302 = !DILocation(line: 2018, column: 24, scope: !21301)
!21303 = !DILocation(line: 2018, column: 7, scope: !21298)
!21304 = !DILocation(line: 2019, column: 4, scope: !21305)
!21305 = distinct !DILexicalBlock(scope: !21301, file: !3, line: 2018, column: 37)
!21306 = !DILocation(line: 2019, column: 4, scope: !21307)
!21307 = distinct !DILexicalBlock(scope: !21308, file: !3, line: 2019, column: 4)
!21308 = distinct !DILexicalBlock(scope: !21305, file: !3, line: 2019, column: 4)
!21309 = !DILocation(line: 2019, column: 4, scope: !21308)
!21310 = !DILocation(line: 2022, column: 8, scope: !21305)
!21311 = !DILocation(line: 2023, column: 4, scope: !21305)
!21312 = !DILocation(line: 2026, column: 29, scope: !21298)
!21313 = !DILocation(line: 2026, column: 11, scope: !21298)
!21314 = !DILocation(line: 2026, column: 3, scope: !21298)
!21315 = !DILocation(line: 2028, column: 10, scope: !21316)
!21316 = distinct !DILexicalBlock(scope: !21298, file: !3, line: 2026, column: 35)
!21317 = !DILocation(line: 2029, column: 25, scope: !21316)
!21318 = !DILocation(line: 2029, column: 18, scope: !21316)
!21319 = !DILocation(line: 2029, column: 31, scope: !21316)
!21320 = !DILocation(line: 2029, column: 16, scope: !21316)
!21321 = !DILocation(line: 2030, column: 4, scope: !21316)
!21322 = !DILocation(line: 2033, column: 10, scope: !21316)
!21323 = !DILocation(line: 2034, column: 27, scope: !21316)
!21324 = !DILocation(line: 2034, column: 18, scope: !21316)
!21325 = !DILocation(line: 2034, column: 33, scope: !21316)
!21326 = !DILocation(line: 2034, column: 16, scope: !21316)
!21327 = !DILocation(line: 2035, column: 4, scope: !21316)
!21328 = !DILocation(line: 2038, column: 16, scope: !21316)
!21329 = !DILocation(line: 2039, column: 4, scope: !21316)
!21330 = !DILocation(line: 2042, column: 7, scope: !21331)
!21331 = distinct !DILexicalBlock(scope: !21298, file: !3, line: 2042, column: 7)
!21332 = !DILocation(line: 2042, column: 19, scope: !21331)
!21333 = !DILocation(line: 2042, column: 7, scope: !21298)
!21334 = !DILocation(line: 2043, column: 10, scope: !21331)
!21335 = !DILocation(line: 2043, column: 4, scope: !21331)
!21336 = !DILocation(line: 2044, column: 12, scope: !21337)
!21337 = distinct !DILexicalBlock(scope: !21331, file: !3, line: 2044, column: 12)
!21338 = !DILocation(line: 2044, column: 24, scope: !21337)
!21339 = !DILocation(line: 2044, column: 12, scope: !21331)
!21340 = !DILocation(line: 2045, column: 10, scope: !21337)
!21341 = !DILocation(line: 2045, column: 4, scope: !21337)
!21342 = !DILocalVariable(name: "__ret_warn_on", scope: !21343, file: !3, line: 2047, type: !72)
!21343 = distinct !DILexicalBlock(scope: !21337, file: !3, line: 2047, column: 4)
!21344 = !DILocation(line: 2047, column: 4, scope: !21343)
!21345 = !DILocation(line: 2047, column: 4, scope: !21346)
!21346 = distinct !DILexicalBlock(scope: !21343, file: !3, line: 2047, column: 4)
!21347 = !DILocation(line: 2047, column: 4, scope: !21348)
!21348 = distinct !DILexicalBlock(scope: !21346, file: !3, line: 2047, column: 4)
!21349 = !DILocation(line: 2047, column: 4, scope: !21350)
!21350 = distinct !DILexicalBlock(scope: !21348, file: !3, line: 2047, column: 4)
!21351 = !DILocation(line: 2047, column: 4, scope: !21352)
!21352 = distinct !DILexicalBlock(scope: !21348, file: !3, line: 2047, column: 4)
!21353 = !{i32 -2137078602, i32 -2137078573, i32 -2137078527, i32 -2137078469, i32 -2137078415, i32 -2137078361, i32 -2137078306, i32 -2137078275}
!21354 = !DILocation(line: 2047, column: 4, scope: !21355)
!21355 = distinct !DILexicalBlock(scope: !21348, file: !3, line: 2047, column: 4)
!21356 = !{i32 -2137077858, i32 -2137077851, i32 -2137077799, i32 -2137077768, i32 -2137077738}
!21357 = !DILocation(line: 2047, column: 4, scope: !21358)
!21358 = distinct !DILexicalBlock(scope: !21348, file: !3, line: 2047, column: 4)
!21359 = !DILocation(line: 2049, column: 12, scope: !21298)
!21360 = !DILocation(line: 2049, column: 29, scope: !21298)
!21361 = !DILocation(line: 2049, column: 9, scope: !21298)
!21362 = !DILocation(line: 2050, column: 2, scope: !21298)
!21363 = !DILocation(line: 2052, column: 16, scope: !21187)
!21364 = !DILocation(line: 2052, column: 2, scope: !21187)
!21365 = !DILocation(line: 2052, column: 8, scope: !21187)
!21366 = !DILocation(line: 2052, column: 14, scope: !21187)
!21367 = !DILocation(line: 2053, column: 16, scope: !21187)
!21368 = !DILocation(line: 2053, column: 2, scope: !21187)
!21369 = !DILocation(line: 2053, column: 8, scope: !21187)
!21370 = !DILocation(line: 2053, column: 14, scope: !21187)
!21371 = !DILabel(scope: !21187, name: "unavailable", file: !3, line: 2055)
!21372 = !DILocation(line: 2055, column: 1, scope: !21187)
!21373 = !DILocation(line: 2056, column: 9, scope: !21187)
!21374 = !DILocation(line: 2056, column: 2, scope: !21187)
!21375 = distinct !DISubprogram(name: "r8152_csum_workaround", scope: !3, file: !3, line: 1918, type: !21376, scopeLine: 1920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21376 = !DISubroutineType(types: !21377)
!21377 = !{null, !10280, !497, !15396}
!21378 = !DILocalVariable(name: "tp", arg: 1, scope: !21375, file: !3, line: 1918, type: !10280)
!21379 = !DILocation(line: 1918, column: 49, scope: !21375)
!21380 = !DILocalVariable(name: "skb", arg: 2, scope: !21375, file: !3, line: 1918, type: !497)
!21381 = !DILocation(line: 1918, column: 69, scope: !21375)
!21382 = !DILocalVariable(name: "list", arg: 3, scope: !21375, file: !3, line: 1919, type: !15396)
!21383 = !DILocation(line: 1919, column: 28, scope: !21375)
!21384 = !DILocation(line: 1921, column: 6, scope: !21385)
!21385 = distinct !DILexicalBlock(scope: !21375, file: !3, line: 1921, column: 6)
!21386 = !DILocation(line: 1921, column: 23, scope: !21385)
!21387 = !DILocation(line: 1921, column: 6, scope: !21375)
!21388 = !DILocalVariable(name: "features", scope: !21389, file: !3, line: 1922, type: !411)
!21389 = distinct !DILexicalBlock(scope: !21385, file: !3, line: 1921, column: 33)
!21390 = !DILocation(line: 1922, column: 21, scope: !21389)
!21391 = !DILocation(line: 1922, column: 32, scope: !21389)
!21392 = !DILocation(line: 1922, column: 36, scope: !21389)
!21393 = !DILocation(line: 1922, column: 44, scope: !21389)
!21394 = !DILocalVariable(name: "segs", scope: !21389, file: !3, line: 1923, type: !497)
!21395 = !DILocation(line: 1923, column: 19, scope: !21389)
!21396 = !DILocalVariable(name: "seg", scope: !21389, file: !3, line: 1923, type: !497)
!21397 = !DILocation(line: 1923, column: 26, scope: !21389)
!21398 = !DILocalVariable(name: "next", scope: !21389, file: !3, line: 1923, type: !497)
!21399 = !DILocation(line: 1923, column: 32, scope: !21389)
!21400 = !DILocalVariable(name: "seg_list", scope: !21389, file: !3, line: 1924, type: !2905)
!21401 = !DILocation(line: 1924, column: 23, scope: !21389)
!21402 = !DILocation(line: 1926, column: 12, scope: !21389)
!21403 = !DILocation(line: 1927, column: 26, scope: !21389)
!21404 = !DILocation(line: 1927, column: 31, scope: !21389)
!21405 = !DILocation(line: 1927, column: 10, scope: !21389)
!21406 = !DILocation(line: 1927, column: 8, scope: !21389)
!21407 = !DILocation(line: 1928, column: 14, scope: !21408)
!21408 = distinct !DILexicalBlock(scope: !21389, file: !3, line: 1928, column: 7)
!21409 = !DILocation(line: 1928, column: 7, scope: !21408)
!21410 = !DILocation(line: 1928, column: 20, scope: !21408)
!21411 = !DILocation(line: 1928, column: 24, scope: !21408)
!21412 = !DILocation(line: 1928, column: 7, scope: !21389)
!21413 = !DILocation(line: 1929, column: 4, scope: !21408)
!21414 = !DILocation(line: 1931, column: 3, scope: !21389)
!21415 = !DILocation(line: 1933, column: 3, scope: !21416)
!21416 = distinct !DILexicalBlock(scope: !21389, file: !3, line: 1933, column: 3)
!21417 = !DILocation(line: 1933, column: 3, scope: !21418)
!21418 = distinct !DILexicalBlock(scope: !21416, file: !3, line: 1933, column: 3)
!21419 = !DILocation(line: 1934, column: 25, scope: !21420)
!21420 = distinct !DILexicalBlock(scope: !21418, file: !3, line: 1933, column: 39)
!21421 = !DILocation(line: 1934, column: 4, scope: !21420)
!21422 = !DILocation(line: 1935, column: 32, scope: !21420)
!21423 = !DILocation(line: 1935, column: 4, scope: !21420)
!21424 = !DILocation(line: 1936, column: 3, scope: !21420)
!21425 = distinct !{!21425, !21415, !21426}
!21426 = !DILocation(line: 1936, column: 3, scope: !21416)
!21427 = !DILocation(line: 1938, column: 31, scope: !21389)
!21428 = !DILocation(line: 1938, column: 3, scope: !21389)
!21429 = !DILocation(line: 1939, column: 3, scope: !21389)
!21430 = !DILocation(line: 1940, column: 2, scope: !21389)
!21431 = !DILocation(line: 1940, column: 13, scope: !21432)
!21432 = distinct !DILexicalBlock(scope: !21385, file: !3, line: 1940, column: 13)
!21433 = !DILocation(line: 1940, column: 18, scope: !21432)
!21434 = !DILocation(line: 1940, column: 28, scope: !21432)
!21435 = !DILocation(line: 1940, column: 13, scope: !21385)
!21436 = !DILocation(line: 1941, column: 25, scope: !21437)
!21437 = distinct !DILexicalBlock(scope: !21438, file: !3, line: 1941, column: 7)
!21438 = distinct !DILexicalBlock(scope: !21432, file: !3, line: 1940, column: 49)
!21439 = !DILocation(line: 1941, column: 7, scope: !21437)
!21440 = !DILocation(line: 1941, column: 30, scope: !21437)
!21441 = !DILocation(line: 1941, column: 7, scope: !21438)
!21442 = !DILocation(line: 1942, column: 4, scope: !21437)
!21443 = !DILocation(line: 1944, column: 20, scope: !21438)
!21444 = !DILocation(line: 1944, column: 26, scope: !21438)
!21445 = !DILocation(line: 1944, column: 3, scope: !21438)
!21446 = !DILocation(line: 1945, column: 2, scope: !21438)
!21447 = !DILocalVariable(name: "stats", scope: !21448, file: !3, line: 1946, type: !7813)
!21448 = distinct !DILexicalBlock(scope: !21432, file: !3, line: 1945, column: 9)
!21449 = !DILocation(line: 1946, column: 28, scope: !21448)
!21450 = !DILocation(line: 1946, column: 3, scope: !21448)
!21451 = !DILabel(scope: !21448, name: "drop", file: !3, line: 1948)
!21452 = !DILocation(line: 1948, column: 1, scope: !21448)
!21453 = !DILocation(line: 1949, column: 12, scope: !21448)
!21454 = !DILocation(line: 1949, column: 16, scope: !21448)
!21455 = !DILocation(line: 1949, column: 24, scope: !21448)
!21456 = !DILocation(line: 1949, column: 9, scope: !21448)
!21457 = !DILocation(line: 1950, column: 3, scope: !21448)
!21458 = !DILocation(line: 1950, column: 10, scope: !21448)
!21459 = !DILocation(line: 1950, column: 20, scope: !21448)
!21460 = !DILocation(line: 1951, column: 3, scope: !21448)
!21461 = !DILocation(line: 1953, column: 1, scope: !21375)
!21462 = distinct !DISubprogram(name: "rtl_tx_vlan_tag", scope: !3, file: !3, line: 1955, type: !21463, scopeLine: 1956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21463 = !DISubroutineType(types: !21464)
!21464 = !{null, !10663, !497}
!21465 = !DILocalVariable(name: "desc", arg: 1, scope: !21462, file: !3, line: 1955, type: !10663)
!21466 = !DILocation(line: 1955, column: 52, scope: !21462)
!21467 = !DILocalVariable(name: "skb", arg: 2, scope: !21462, file: !3, line: 1955, type: !497)
!21468 = !DILocation(line: 1955, column: 74, scope: !21462)
!21469 = !DILocation(line: 1957, column: 6, scope: !21470)
!21470 = distinct !DILexicalBlock(scope: !21462, file: !3, line: 1957, column: 6)
!21471 = !DILocation(line: 1957, column: 6, scope: !21462)
!21472 = !DILocalVariable(name: "opts2", scope: !21473, file: !3, line: 1958, type: !784)
!21473 = distinct !DILexicalBlock(scope: !21470, file: !3, line: 1957, column: 33)
!21474 = !DILocation(line: 1958, column: 7, scope: !21473)
!21475 = !DILocation(line: 1960, column: 25, scope: !21473)
!21476 = !DILocation(line: 1960, column: 23, scope: !21473)
!21477 = !DILocation(line: 1960, column: 11, scope: !21473)
!21478 = !DILocation(line: 1960, column: 9, scope: !21473)
!21479 = !DILocation(line: 1961, column: 18, scope: !21473)
!21480 = !DILocation(line: 1961, column: 3, scope: !21473)
!21481 = !DILocation(line: 1961, column: 9, scope: !21473)
!21482 = !DILocation(line: 1961, column: 15, scope: !21473)
!21483 = !DILocation(line: 1962, column: 2, scope: !21473)
!21484 = !DILocation(line: 1963, column: 1, scope: !21462)
!21485 = distinct !DISubprogram(name: "dev_kfree_skb_any", scope: !71, file: !71, line: 3817, type: !2793, scopeLine: 3818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21486 = !DILocalVariable(name: "skb", arg: 1, scope: !21485, file: !71, line: 3817, type: !497)
!21487 = !DILocation(line: 3817, column: 54, scope: !21485)
!21488 = !DILocation(line: 3819, column: 22, scope: !21485)
!21489 = !DILocation(line: 3819, column: 2, scope: !21485)
!21490 = !DILocation(line: 3820, column: 1, scope: !21485)
!21491 = distinct !DISubprogram(name: "skb_end_pointer", scope: !499, file: !499, line: 1404, type: !21492, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21492 = !DISubroutineType(types: !21493)
!21493 = !{!6907, !8817}
!21494 = !DILocalVariable(name: "skb", arg: 1, scope: !21491, file: !499, line: 1404, type: !8817)
!21495 = !DILocation(line: 1404, column: 68, scope: !21491)
!21496 = !DILocation(line: 1406, column: 9, scope: !21491)
!21497 = !DILocation(line: 1406, column: 14, scope: !21491)
!21498 = !DILocation(line: 1406, column: 21, scope: !21491)
!21499 = !DILocation(line: 1406, column: 26, scope: !21491)
!21500 = !DILocation(line: 1406, column: 19, scope: !21491)
!21501 = !DILocation(line: 1406, column: 2, scope: !21491)
!21502 = distinct !DISubprogram(name: "skb_queue_splice", scope: !499, file: !499, line: 1933, type: !21503, scopeLine: 1935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21503 = !DISubroutineType(types: !21504)
!21504 = !{null, !15638, !15396}
!21505 = !DILocalVariable(name: "list", arg: 1, scope: !21502, file: !499, line: 1933, type: !15638)
!21506 = !DILocation(line: 1933, column: 64, scope: !21502)
!21507 = !DILocalVariable(name: "head", arg: 2, scope: !21502, file: !499, line: 1934, type: !15396)
!21508 = !DILocation(line: 1934, column: 30, scope: !21502)
!21509 = !DILocation(line: 1936, column: 23, scope: !21510)
!21510 = distinct !DILexicalBlock(scope: !21502, file: !499, line: 1936, column: 6)
!21511 = !DILocation(line: 1936, column: 7, scope: !21510)
!21512 = !DILocation(line: 1936, column: 6, scope: !21502)
!21513 = !DILocation(line: 1937, column: 22, scope: !21514)
!21514 = distinct !DILexicalBlock(scope: !21510, file: !499, line: 1936, column: 30)
!21515 = !DILocation(line: 1937, column: 47, scope: !21514)
!21516 = !DILocation(line: 1937, column: 28, scope: !21514)
!21517 = !DILocation(line: 1937, column: 53, scope: !21514)
!21518 = !DILocation(line: 1937, column: 59, scope: !21514)
!21519 = !DILocation(line: 1937, column: 3, scope: !21514)
!21520 = !DILocation(line: 1938, column: 17, scope: !21514)
!21521 = !DILocation(line: 1938, column: 23, scope: !21514)
!21522 = !DILocation(line: 1938, column: 3, scope: !21514)
!21523 = !DILocation(line: 1938, column: 9, scope: !21514)
!21524 = !DILocation(line: 1938, column: 14, scope: !21514)
!21525 = !DILocation(line: 1939, column: 2, scope: !21514)
!21526 = !DILocation(line: 1940, column: 1, scope: !21502)
!21527 = distinct !DISubprogram(name: "netif_tx_lock", scope: !71, file: !71, line: 4237, type: !488, scopeLine: 4238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21528 = !DILocation(line: 352, column: 51, scope: !20912, inlinedAt: !21529)
!21529 = distinct !DILocation(line: 4242, column: 2, scope: !21527)
!21530 = !DILocalVariable(name: "dev", arg: 1, scope: !21527, file: !71, line: 4237, type: !372)
!21531 = !DILocation(line: 4237, column: 53, scope: !21527)
!21532 = !DILocalVariable(name: "i", scope: !21527, file: !71, line: 4239, type: !7)
!21533 = !DILocation(line: 4239, column: 15, scope: !21527)
!21534 = !DILocalVariable(name: "cpu", scope: !21527, file: !71, line: 4240, type: !72)
!21535 = !DILocation(line: 4240, column: 6, scope: !21527)
!21536 = !DILocation(line: 4242, column: 13, scope: !21527)
!21537 = !DILocation(line: 4242, column: 18, scope: !21527)
!21538 = !DILocation(line: 354, column: 2, scope: !20939, inlinedAt: !21529)
!21539 = !DILocation(line: 354, column: 2, scope: !20942, inlinedAt: !21529)
!21540 = !DILocation(line: 4243, column: 6, scope: !21527)
!21541 = !DILocation(line: 4244, column: 9, scope: !21542)
!21542 = distinct !DILexicalBlock(scope: !21527, file: !71, line: 4244, column: 2)
!21543 = !DILocation(line: 4244, column: 7, scope: !21542)
!21544 = !DILocation(line: 4244, column: 14, scope: !21545)
!21545 = distinct !DILexicalBlock(scope: !21542, file: !71, line: 4244, column: 2)
!21546 = !DILocation(line: 4244, column: 18, scope: !21545)
!21547 = !DILocation(line: 4244, column: 23, scope: !21545)
!21548 = !DILocation(line: 4244, column: 16, scope: !21545)
!21549 = !DILocation(line: 4244, column: 2, scope: !21542)
!21550 = !DILocalVariable(name: "txq", scope: !21551, file: !71, line: 4245, type: !8914)
!21551 = distinct !DILexicalBlock(scope: !21545, file: !71, line: 4244, column: 43)
!21552 = !DILocation(line: 4245, column: 24, scope: !21551)
!21553 = !DILocation(line: 4245, column: 50, scope: !21551)
!21554 = !DILocation(line: 4245, column: 55, scope: !21551)
!21555 = !DILocation(line: 4245, column: 30, scope: !21551)
!21556 = !DILocation(line: 4253, column: 19, scope: !21551)
!21557 = !DILocation(line: 4253, column: 24, scope: !21551)
!21558 = !DILocation(line: 4253, column: 3, scope: !21551)
!21559 = !DILocation(line: 4254, column: 34, scope: !21551)
!21560 = !DILocation(line: 4254, column: 39, scope: !21551)
!21561 = !DILocation(line: 4254, column: 3, scope: !21551)
!21562 = !DILocation(line: 4255, column: 21, scope: !21551)
!21563 = !DILocation(line: 4255, column: 3, scope: !21551)
!21564 = !DILocation(line: 4256, column: 2, scope: !21551)
!21565 = !DILocation(line: 4244, column: 39, scope: !21545)
!21566 = !DILocation(line: 4244, column: 2, scope: !21545)
!21567 = distinct !{!21567, !21549, !21568}
!21568 = !DILocation(line: 4256, column: 2, scope: !21542)
!21569 = !DILocation(line: 4257, column: 1, scope: !21527)
!21570 = distinct !DISubprogram(name: "netif_tx_unlock", scope: !71, file: !71, line: 4265, type: !488, scopeLine: 4266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21571 = !DILocation(line: 392, column: 53, scope: !20906, inlinedAt: !21572)
!21572 = distinct !DILocation(line: 4279, column: 2, scope: !21570)
!21573 = !DILocalVariable(name: "dev", arg: 1, scope: !21570, file: !71, line: 4265, type: !372)
!21574 = !DILocation(line: 4265, column: 55, scope: !21570)
!21575 = !DILocalVariable(name: "i", scope: !21570, file: !71, line: 4267, type: !7)
!21576 = !DILocation(line: 4267, column: 15, scope: !21570)
!21577 = !DILocation(line: 4269, column: 9, scope: !21578)
!21578 = distinct !DILexicalBlock(scope: !21570, file: !71, line: 4269, column: 2)
!21579 = !DILocation(line: 4269, column: 7, scope: !21578)
!21580 = !DILocation(line: 4269, column: 14, scope: !21581)
!21581 = distinct !DILexicalBlock(scope: !21578, file: !71, line: 4269, column: 2)
!21582 = !DILocation(line: 4269, column: 18, scope: !21581)
!21583 = !DILocation(line: 4269, column: 23, scope: !21581)
!21584 = !DILocation(line: 4269, column: 16, scope: !21581)
!21585 = !DILocation(line: 4269, column: 2, scope: !21578)
!21586 = !DILocalVariable(name: "txq", scope: !21587, file: !71, line: 4270, type: !8914)
!21587 = distinct !DILexicalBlock(scope: !21581, file: !71, line: 4269, column: 43)
!21588 = !DILocation(line: 4270, column: 24, scope: !21587)
!21589 = !DILocation(line: 4270, column: 50, scope: !21587)
!21590 = !DILocation(line: 4270, column: 55, scope: !21587)
!21591 = !DILocation(line: 4270, column: 30, scope: !21587)
!21592 = !DILocation(line: 4276, column: 36, scope: !21587)
!21593 = !DILocation(line: 4276, column: 41, scope: !21587)
!21594 = !DILocation(line: 4276, column: 3, scope: !21587)
!21595 = !DILocation(line: 4277, column: 24, scope: !21587)
!21596 = !DILocation(line: 4277, column: 3, scope: !21587)
!21597 = !DILocation(line: 4278, column: 2, scope: !21587)
!21598 = !DILocation(line: 4269, column: 39, scope: !21581)
!21599 = !DILocation(line: 4269, column: 2, scope: !21581)
!21600 = distinct !{!21600, !21585, !21601}
!21601 = !DILocation(line: 4278, column: 2, scope: !21578)
!21602 = !DILocation(line: 4279, column: 15, scope: !21570)
!21603 = !DILocation(line: 4279, column: 20, scope: !21570)
!21604 = !DILocation(line: 394, column: 2, scope: !20948, inlinedAt: !21572)
!21605 = !DILocation(line: 394, column: 2, scope: !20951, inlinedAt: !21572)
!21606 = !DILocation(line: 4280, column: 1, scope: !21570)
!21607 = distinct !DISubprogram(name: "write_bulk_callback", scope: !3, file: !3, line: 1615, type: !10269, scopeLine: 1616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21608 = !DILocation(line: 407, column: 64, scope: !15429, inlinedAt: !21609)
!21609 = distinct !DILocation(line: 1645, column: 2, scope: !21607)
!21610 = !DILocation(line: 407, column: 84, scope: !15429, inlinedAt: !21609)
!21611 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !21612)
!21612 = distinct !DILocation(line: 1643, column: 2, scope: !21613)
!21613 = distinct !DILexicalBlock(scope: !21614, file: !3, line: 1643, column: 2)
!21614 = distinct !DILexicalBlock(scope: !21615, file: !3, line: 1643, column: 2)
!21615 = distinct !DILexicalBlock(scope: !21616, file: !3, line: 1643, column: 2)
!21616 = distinct !DILexicalBlock(scope: !21617, file: !3, line: 1643, column: 2)
!21617 = distinct !DILexicalBlock(scope: !21607, file: !3, line: 1643, column: 2)
!21618 = !DILocalVariable(name: "urb", arg: 1, scope: !21607, file: !3, line: 1615, type: !10218)
!21619 = !DILocation(line: 1615, column: 45, scope: !21607)
!21620 = !DILocalVariable(name: "stats", scope: !21607, file: !3, line: 1617, type: !7813)
!21621 = !DILocation(line: 1617, column: 27, scope: !21607)
!21622 = !DILocalVariable(name: "netdev", scope: !21607, file: !3, line: 1618, type: !372)
!21623 = !DILocation(line: 1618, column: 21, scope: !21607)
!21624 = !DILocalVariable(name: "agg", scope: !21607, file: !3, line: 1619, type: !10662)
!21625 = !DILocation(line: 1619, column: 17, scope: !21607)
!21626 = !DILocalVariable(name: "tp", scope: !21607, file: !3, line: 1620, type: !10280)
!21627 = !DILocation(line: 1620, column: 16, scope: !21607)
!21628 = !DILocalVariable(name: "flags", scope: !21607, file: !3, line: 1621, type: !394)
!21629 = !DILocation(line: 1621, column: 16, scope: !21607)
!21630 = !DILocalVariable(name: "status", scope: !21607, file: !3, line: 1622, type: !72)
!21631 = !DILocation(line: 1622, column: 6, scope: !21607)
!21632 = !DILocation(line: 1622, column: 15, scope: !21607)
!21633 = !DILocation(line: 1622, column: 20, scope: !21607)
!21634 = !DILocation(line: 1624, column: 8, scope: !21607)
!21635 = !DILocation(line: 1624, column: 13, scope: !21607)
!21636 = !DILocation(line: 1624, column: 6, scope: !21607)
!21637 = !DILocation(line: 1625, column: 7, scope: !21638)
!21638 = distinct !DILexicalBlock(scope: !21607, file: !3, line: 1625, column: 6)
!21639 = !DILocation(line: 1625, column: 6, scope: !21607)
!21640 = !DILocation(line: 1626, column: 3, scope: !21638)
!21641 = !DILocation(line: 1628, column: 7, scope: !21607)
!21642 = !DILocation(line: 1628, column: 12, scope: !21607)
!21643 = !DILocation(line: 1628, column: 5, scope: !21607)
!21644 = !DILocation(line: 1629, column: 7, scope: !21645)
!21645 = distinct !DILexicalBlock(scope: !21607, file: !3, line: 1629, column: 6)
!21646 = !DILocation(line: 1629, column: 6, scope: !21607)
!21647 = !DILocation(line: 1630, column: 3, scope: !21645)
!21648 = !DILocation(line: 1632, column: 11, scope: !21607)
!21649 = !DILocation(line: 1632, column: 15, scope: !21607)
!21650 = !DILocation(line: 1632, column: 9, scope: !21607)
!21651 = !DILocation(line: 1633, column: 11, scope: !21607)
!21652 = !DILocation(line: 1633, column: 19, scope: !21607)
!21653 = !DILocation(line: 1633, column: 8, scope: !21607)
!21654 = !DILocation(line: 1634, column: 6, scope: !21655)
!21655 = distinct !DILexicalBlock(scope: !21607, file: !3, line: 1634, column: 6)
!21656 = !DILocation(line: 1634, column: 6, scope: !21607)
!21657 = !DILocation(line: 1635, column: 7, scope: !21658)
!21658 = distinct !DILexicalBlock(scope: !21659, file: !3, line: 1635, column: 7)
!21659 = distinct !DILexicalBlock(scope: !21655, file: !3, line: 1634, column: 14)
!21660 = !DILocation(line: 1635, column: 7, scope: !21659)
!21661 = !DILocation(line: 1636, column: 16, scope: !21658)
!21662 = !DILocation(line: 1636, column: 42, scope: !21658)
!21663 = !DILocation(line: 1636, column: 4, scope: !21658)
!21664 = !DILocation(line: 1637, column: 23, scope: !21659)
!21665 = !DILocation(line: 1637, column: 28, scope: !21659)
!21666 = !DILocation(line: 1637, column: 3, scope: !21659)
!21667 = !DILocation(line: 1637, column: 10, scope: !21659)
!21668 = !DILocation(line: 1637, column: 20, scope: !21659)
!21669 = !DILocation(line: 1638, column: 2, scope: !21659)
!21670 = !DILocation(line: 1639, column: 24, scope: !21671)
!21671 = distinct !DILexicalBlock(scope: !21655, file: !3, line: 1638, column: 9)
!21672 = !DILocation(line: 1639, column: 29, scope: !21671)
!21673 = !DILocation(line: 1639, column: 3, scope: !21671)
!21674 = !DILocation(line: 1639, column: 10, scope: !21671)
!21675 = !DILocation(line: 1639, column: 21, scope: !21671)
!21676 = !DILocation(line: 1640, column: 22, scope: !21671)
!21677 = !DILocation(line: 1640, column: 27, scope: !21671)
!21678 = !DILocation(line: 1640, column: 3, scope: !21671)
!21679 = !DILocation(line: 1640, column: 10, scope: !21671)
!21680 = !DILocation(line: 1640, column: 19, scope: !21671)
!21681 = !DILocation(line: 1643, column: 2, scope: !21607)
!21682 = !DILocation(line: 1643, column: 2, scope: !21617)
!21683 = !DILocalVariable(name: "__dummy", scope: !21684, file: !3, line: 1643, type: !394)
!21684 = distinct !DILexicalBlock(scope: !21616, file: !3, line: 1643, column: 2)
!21685 = !DILocation(line: 1643, column: 2, scope: !21684)
!21686 = !DILocalVariable(name: "__dummy2", scope: !21684, file: !3, line: 1643, type: !394)
!21687 = !DILocation(line: 1643, column: 2, scope: !21616)
!21688 = !DILocation(line: 1643, column: 2, scope: !21615)
!21689 = !DILocation(line: 1643, column: 2, scope: !21690)
!21690 = distinct !DILexicalBlock(scope: !21615, file: !3, line: 1643, column: 2)
!21691 = !DILocalVariable(name: "__dummy", scope: !21692, file: !3, line: 1643, type: !394)
!21692 = distinct !DILexicalBlock(scope: !21693, file: !3, line: 1643, column: 2)
!21693 = distinct !DILexicalBlock(scope: !21690, file: !3, line: 1643, column: 2)
!21694 = !DILocation(line: 1643, column: 2, scope: !21692)
!21695 = !DILocalVariable(name: "__dummy2", scope: !21692, file: !3, line: 1643, type: !394)
!21696 = !DILocation(line: 1643, column: 2, scope: !21693)
!21697 = !DILocation(line: 1643, column: 2, scope: !21614)
!21698 = !{i32 -2137106042}
!21699 = !DILocation(line: 1643, column: 2, scope: !21613)
!21700 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !21612)
!21701 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !21612)
!21702 = !DILocation(line: 1644, column: 17, scope: !21607)
!21703 = !DILocation(line: 1644, column: 22, scope: !21607)
!21704 = !DILocation(line: 1644, column: 29, scope: !21607)
!21705 = !DILocation(line: 1644, column: 33, scope: !21607)
!21706 = !DILocation(line: 1644, column: 2, scope: !21607)
!21707 = !DILocation(line: 1645, column: 26, scope: !21607)
!21708 = !DILocation(line: 1645, column: 30, scope: !21607)
!21709 = !DILocation(line: 1645, column: 39, scope: !21607)
!21710 = !DILocation(line: 409, column: 2, scope: !15498, inlinedAt: !21609)
!21711 = !DILocation(line: 409, column: 2, scope: !15503, inlinedAt: !21609)
!21712 = !DILocation(line: 409, column: 2, scope: !15504, inlinedAt: !21609)
!21713 = !DILocation(line: 409, column: 2, scope: !15511, inlinedAt: !21609)
!21714 = !DILocation(line: 409, column: 2, scope: !15514, inlinedAt: !21609)
!21715 = !DILocation(line: 1647, column: 33, scope: !21607)
!21716 = !DILocation(line: 1647, column: 37, scope: !21607)
!21717 = !DILocation(line: 1647, column: 2, scope: !21607)
!21718 = !DILocation(line: 1649, column: 24, scope: !21719)
!21719 = distinct !DILexicalBlock(scope: !21607, file: !3, line: 1649, column: 6)
!21720 = !DILocation(line: 1649, column: 7, scope: !21719)
!21721 = !DILocation(line: 1649, column: 6, scope: !21607)
!21722 = !DILocation(line: 1650, column: 3, scope: !21719)
!21723 = !DILocation(line: 1652, column: 30, scope: !21724)
!21724 = distinct !DILexicalBlock(scope: !21607, file: !3, line: 1652, column: 6)
!21725 = !DILocation(line: 1652, column: 34, scope: !21724)
!21726 = !DILocation(line: 1652, column: 7, scope: !21724)
!21727 = !DILocation(line: 1652, column: 6, scope: !21607)
!21728 = !DILocation(line: 1653, column: 3, scope: !21724)
!21729 = !DILocation(line: 1655, column: 32, scope: !21730)
!21730 = distinct !DILexicalBlock(scope: !21607, file: !3, line: 1655, column: 6)
!21731 = !DILocation(line: 1655, column: 36, scope: !21730)
!21732 = !DILocation(line: 1655, column: 6, scope: !21730)
!21733 = !DILocation(line: 1655, column: 6, scope: !21607)
!21734 = !DILocation(line: 1656, column: 3, scope: !21730)
!21735 = !DILocation(line: 1658, column: 24, scope: !21736)
!21736 = distinct !DILexicalBlock(scope: !21607, file: !3, line: 1658, column: 6)
!21737 = !DILocation(line: 1658, column: 28, scope: !21736)
!21738 = !DILocation(line: 1658, column: 7, scope: !21736)
!21739 = !DILocation(line: 1658, column: 6, scope: !21607)
!21740 = !DILocation(line: 1659, column: 21, scope: !21736)
!21741 = !DILocation(line: 1659, column: 25, scope: !21736)
!21742 = !DILocation(line: 1659, column: 3, scope: !21736)
!21743 = !DILocation(line: 1660, column: 1, scope: !21607)
!21744 = distinct !DISubprogram(name: "__skb_queue_after", scope: !499, file: !499, line: 2002, type: !21745, scopeLine: 2005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21745 = !DISubroutineType(types: !21746)
!21746 = !{null, !15396, !497, !497}
!21747 = !DILocalVariable(name: "list", arg: 1, scope: !21744, file: !499, line: 2002, type: !15396)
!21748 = !DILocation(line: 2002, column: 59, scope: !21744)
!21749 = !DILocalVariable(name: "prev", arg: 2, scope: !21744, file: !499, line: 2003, type: !497)
!21750 = !DILocation(line: 2003, column: 26, scope: !21744)
!21751 = !DILocalVariable(name: "newsk", arg: 3, scope: !21744, file: !499, line: 2004, type: !497)
!21752 = !DILocation(line: 2004, column: 26, scope: !21744)
!21753 = !DILocation(line: 2006, column: 15, scope: !21744)
!21754 = !DILocation(line: 2006, column: 22, scope: !21744)
!21755 = !DILocation(line: 2006, column: 28, scope: !21744)
!21756 = !DILocation(line: 2006, column: 34, scope: !21744)
!21757 = !DILocation(line: 2006, column: 40, scope: !21744)
!21758 = !DILocation(line: 2006, column: 2, scope: !21744)
!21759 = !DILocation(line: 2007, column: 1, scope: !21744)
!21760 = distinct !DISubprogram(name: "__skb_insert", scope: !499, file: !499, line: 1900, type: !21761, scopeLine: 1903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21761 = !DISubroutineType(types: !21762)
!21762 = !{null, !497, !497, !497, !15396}
!21763 = !DILocalVariable(name: "newsk", arg: 1, scope: !21760, file: !499, line: 1900, type: !497)
!21764 = !DILocation(line: 1900, column: 49, scope: !21760)
!21765 = !DILocalVariable(name: "prev", arg: 2, scope: !21760, file: !499, line: 1901, type: !497)
!21766 = !DILocation(line: 1901, column: 21, scope: !21760)
!21767 = !DILocalVariable(name: "next", arg: 3, scope: !21760, file: !499, line: 1901, type: !497)
!21768 = !DILocation(line: 1901, column: 43, scope: !21760)
!21769 = !DILocalVariable(name: "list", arg: 4, scope: !21760, file: !499, line: 1902, type: !15396)
!21770 = !DILocation(line: 1902, column: 26, scope: !21760)
!21771 = !DILocation(line: 1907, column: 2, scope: !21760)
!21772 = !DILocation(line: 1907, column: 2, scope: !21773)
!21773 = distinct !DILexicalBlock(scope: !21760, file: !499, line: 1907, column: 2)
!21774 = !DILocation(line: 1907, column: 2, scope: !21775)
!21775 = distinct !DILexicalBlock(scope: !21773, file: !499, line: 1907, column: 2)
!21776 = !DILocation(line: 1907, column: 2, scope: !21777)
!21777 = distinct !DILexicalBlock(scope: !21773, file: !499, line: 1907, column: 2)
!21778 = !DILocation(line: 1908, column: 2, scope: !21760)
!21779 = !DILocation(line: 1908, column: 2, scope: !21780)
!21780 = distinct !DILexicalBlock(scope: !21760, file: !499, line: 1908, column: 2)
!21781 = !DILocation(line: 1908, column: 2, scope: !21782)
!21782 = distinct !DILexicalBlock(scope: !21780, file: !499, line: 1908, column: 2)
!21783 = !DILocation(line: 1908, column: 2, scope: !21784)
!21784 = distinct !DILexicalBlock(scope: !21780, file: !499, line: 1908, column: 2)
!21785 = !DILocation(line: 1909, column: 2, scope: !21760)
!21786 = !DILocation(line: 1909, column: 2, scope: !21787)
!21787 = distinct !DILexicalBlock(scope: !21760, file: !499, line: 1909, column: 2)
!21788 = !DILocation(line: 1909, column: 2, scope: !21789)
!21789 = distinct !DILexicalBlock(scope: !21787, file: !499, line: 1909, column: 2)
!21790 = !DILocation(line: 1909, column: 2, scope: !21791)
!21791 = distinct !DILexicalBlock(scope: !21787, file: !499, line: 1909, column: 2)
!21792 = !DILocation(line: 1910, column: 2, scope: !21760)
!21793 = !DILocation(line: 1910, column: 2, scope: !21794)
!21794 = distinct !DILexicalBlock(scope: !21760, file: !499, line: 1910, column: 2)
!21795 = !DILocation(line: 1910, column: 2, scope: !21796)
!21796 = distinct !DILexicalBlock(scope: !21794, file: !499, line: 1910, column: 2)
!21797 = !DILocation(line: 1910, column: 2, scope: !21798)
!21798 = distinct !DILexicalBlock(scope: !21794, file: !499, line: 1910, column: 2)
!21799 = !DILocation(line: 1911, column: 2, scope: !21760)
!21800 = !DILocation(line: 1911, column: 8, scope: !21760)
!21801 = !DILocation(line: 1911, column: 12, scope: !21760)
!21802 = !DILocation(line: 1912, column: 1, scope: !21760)
!21803 = distinct !DISubprogram(name: "skb_transport_header", scope: !499, file: !499, line: 2498, type: !21492, scopeLine: 2499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21804 = !DILocalVariable(name: "skb", arg: 1, scope: !21803, file: !499, line: 2498, type: !8817)
!21805 = !DILocation(line: 2498, column: 73, scope: !21803)
!21806 = !DILocation(line: 2500, column: 9, scope: !21803)
!21807 = !DILocation(line: 2500, column: 14, scope: !21803)
!21808 = !DILocation(line: 2500, column: 21, scope: !21803)
!21809 = !DILocation(line: 2500, column: 26, scope: !21803)
!21810 = !DILocation(line: 2500, column: 19, scope: !21803)
!21811 = !DILocation(line: 2500, column: 2, scope: !21803)
!21812 = distinct !DISubprogram(name: "vlan_get_protocol", scope: !21813, file: !21813, line: 624, type: !8834, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21813 = !DIFile(filename: "./include/linux/if_vlan.h", directory: "/home/lizy2001/genbc/linux")
!21814 = !DILocalVariable(name: "skb", arg: 1, scope: !21812, file: !21813, line: 624, type: !8817)
!21815 = !DILocation(line: 624, column: 62, scope: !21812)
!21816 = !DILocation(line: 626, column: 29, scope: !21812)
!21817 = !DILocation(line: 626, column: 34, scope: !21812)
!21818 = !DILocation(line: 626, column: 39, scope: !21812)
!21819 = !DILocation(line: 626, column: 9, scope: !21812)
!21820 = !DILocation(line: 626, column: 2, scope: !21812)
!21821 = distinct !DISubprogram(name: "skb_cow_head", scope: !499, file: !499, line: 3197, type: !21822, scopeLine: 3198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21822 = !DISubroutineType(types: !21823)
!21823 = !{!72, !497, !7}
!21824 = !DILocalVariable(name: "skb", arg: 1, scope: !21821, file: !499, line: 3197, type: !497)
!21825 = !DILocation(line: 3197, column: 48, scope: !21821)
!21826 = !DILocalVariable(name: "headroom", arg: 2, scope: !21821, file: !499, line: 3197, type: !7)
!21827 = !DILocation(line: 3197, column: 66, scope: !21821)
!21828 = !DILocation(line: 3199, column: 19, scope: !21821)
!21829 = !DILocation(line: 3199, column: 24, scope: !21821)
!21830 = !DILocation(line: 3199, column: 52, scope: !21821)
!21831 = !DILocation(line: 3199, column: 34, scope: !21821)
!21832 = !DILocation(line: 3199, column: 9, scope: !21821)
!21833 = !DILocation(line: 3199, column: 2, scope: !21821)
!21834 = distinct !DISubprogram(name: "tcp_v6_gso_csum_prep", scope: !21835, file: !21835, line: 79, type: !2793, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21835 = !DIFile(filename: "./include/net/ip6_checksum.h", directory: "/home/lizy2001/genbc/linux")
!21836 = !DILocalVariable(name: "skb", arg: 1, scope: !21834, file: !21835, line: 79, type: !497)
!21837 = !DILocation(line: 79, column: 57, scope: !21834)
!21838 = !DILocalVariable(name: "ipv6h", scope: !21834, file: !21835, line: 81, type: !10729)
!21839 = !DILocation(line: 81, column: 18, scope: !21834)
!21840 = !DILocation(line: 81, column: 35, scope: !21834)
!21841 = !DILocation(line: 81, column: 26, scope: !21834)
!21842 = !DILocalVariable(name: "th", scope: !21834, file: !21835, line: 82, type: !10692)
!21843 = !DILocation(line: 82, column: 17, scope: !21834)
!21844 = !DILocation(line: 82, column: 30, scope: !21834)
!21845 = !DILocation(line: 82, column: 22, scope: !21834)
!21846 = !DILocation(line: 84, column: 2, scope: !21834)
!21847 = !DILocation(line: 84, column: 9, scope: !21834)
!21848 = !DILocation(line: 84, column: 21, scope: !21834)
!21849 = !DILocation(line: 85, column: 32, scope: !21834)
!21850 = !DILocation(line: 85, column: 39, scope: !21834)
!21851 = !DILocation(line: 85, column: 47, scope: !21834)
!21852 = !DILocation(line: 85, column: 54, scope: !21834)
!21853 = !DILocation(line: 85, column: 15, scope: !21834)
!21854 = !DILocation(line: 85, column: 14, scope: !21834)
!21855 = !DILocation(line: 85, column: 2, scope: !21834)
!21856 = !DILocation(line: 85, column: 6, scope: !21834)
!21857 = !DILocation(line: 85, column: 12, scope: !21834)
!21858 = !DILocation(line: 86, column: 1, scope: !21834)
!21859 = distinct !DISubprogram(name: "ip_hdr", scope: !21860, file: !21860, line: 19, type: !21861, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21860 = !DIFile(filename: "./include/linux/ip.h", directory: "/home/lizy2001/genbc/linux")
!21861 = !DISubroutineType(types: !21862)
!21862 = !{!10714, !8817}
!21863 = !DILocalVariable(name: "skb", arg: 1, scope: !21859, file: !21860, line: 19, type: !8817)
!21864 = !DILocation(line: 19, column: 58, scope: !21859)
!21865 = !DILocation(line: 21, column: 44, scope: !21859)
!21866 = !DILocation(line: 21, column: 25, scope: !21859)
!21867 = !DILocation(line: 21, column: 9, scope: !21859)
!21868 = !DILocation(line: 21, column: 2, scope: !21859)
!21869 = distinct !DISubprogram(name: "ipv6_hdr", scope: !2653, file: !2653, line: 93, type: !21870, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21870 = !DISubroutineType(types: !21871)
!21871 = !{!10729, !8817}
!21872 = !DILocalVariable(name: "skb", arg: 1, scope: !21869, file: !2653, line: 93, type: !8817)
!21873 = !DILocation(line: 93, column: 62, scope: !21869)
!21874 = !DILocation(line: 95, column: 46, scope: !21869)
!21875 = !DILocation(line: 95, column: 27, scope: !21869)
!21876 = !DILocation(line: 95, column: 9, scope: !21869)
!21877 = !DILocation(line: 95, column: 2, scope: !21869)
!21878 = distinct !DISubprogram(name: "__vlan_get_protocol", scope: !21813, file: !21813, line: 582, type: !21879, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21879 = !DISubroutineType(types: !21880)
!21880 = !{!566, !8817, !566, !616}
!21881 = !DILocalVariable(name: "skb", arg: 1, scope: !21878, file: !21813, line: 582, type: !8817)
!21882 = !DILocation(line: 582, column: 64, scope: !21878)
!21883 = !DILocalVariable(name: "type", arg: 2, scope: !21878, file: !21813, line: 582, type: !566)
!21884 = !DILocation(line: 582, column: 76, scope: !21878)
!21885 = !DILocalVariable(name: "depth", arg: 3, scope: !21878, file: !21813, line: 583, type: !616)
!21886 = !DILocation(line: 583, column: 12, scope: !21878)
!21887 = !DILocalVariable(name: "vlan_depth", scope: !21878, file: !21813, line: 585, type: !7)
!21888 = !DILocation(line: 585, column: 15, scope: !21878)
!21889 = !DILocation(line: 585, column: 28, scope: !21878)
!21890 = !DILocation(line: 585, column: 33, scope: !21878)
!21891 = !DILocalVariable(name: "parse_depth", scope: !21878, file: !21813, line: 585, type: !7)
!21892 = !DILocation(line: 585, column: 42, scope: !21878)
!21893 = !DILocation(line: 591, column: 20, scope: !21894)
!21894 = distinct !DILexicalBlock(scope: !21878, file: !21813, line: 591, column: 6)
!21895 = !DILocation(line: 591, column: 6, scope: !21894)
!21896 = !DILocation(line: 591, column: 6, scope: !21878)
!21897 = !DILocation(line: 592, column: 7, scope: !21898)
!21898 = distinct !DILexicalBlock(scope: !21899, file: !21813, line: 592, column: 7)
!21899 = distinct !DILexicalBlock(scope: !21894, file: !21813, line: 591, column: 27)
!21900 = !DILocation(line: 592, column: 7, scope: !21899)
!21901 = !DILocalVariable(name: "__ret_warn_on", scope: !21902, file: !21813, line: 593, type: !72)
!21902 = distinct !DILexicalBlock(scope: !21903, file: !21813, line: 593, column: 8)
!21903 = distinct !DILexicalBlock(scope: !21904, file: !21813, line: 593, column: 8)
!21904 = distinct !DILexicalBlock(scope: !21898, file: !21813, line: 592, column: 19)
!21905 = !DILocation(line: 593, column: 8, scope: !21902)
!21906 = !DILocation(line: 593, column: 8, scope: !21907)
!21907 = distinct !DILexicalBlock(scope: !21902, file: !21813, line: 593, column: 8)
!21908 = !DILocation(line: 593, column: 8, scope: !21909)
!21909 = distinct !DILexicalBlock(scope: !21907, file: !21813, line: 593, column: 8)
!21910 = !DILocation(line: 593, column: 8, scope: !21911)
!21911 = distinct !DILexicalBlock(scope: !21909, file: !21813, line: 593, column: 8)
!21912 = !DILocation(line: 593, column: 8, scope: !21913)
!21913 = distinct !DILexicalBlock(scope: !21909, file: !21813, line: 593, column: 8)
!21914 = !{i32 -2139699452, i32 -2139699423, i32 -2139699377, i32 -2139699319, i32 -2139699265, i32 -2139699211, i32 -2139699156, i32 -2139699125}
!21915 = !DILocation(line: 593, column: 8, scope: !21916)
!21916 = distinct !DILexicalBlock(scope: !21909, file: !21813, line: 593, column: 8)
!21917 = !{i32 -2139698720, i32 -2139698713, i32 -2139698661, i32 -2139698630, i32 -2139698600}
!21918 = !DILocation(line: 593, column: 8, scope: !21919)
!21919 = distinct !DILexicalBlock(scope: !21909, file: !21813, line: 593, column: 8)
!21920 = !DILocation(line: 593, column: 8, scope: !21903)
!21921 = !DILocation(line: 593, column: 8, scope: !21904)
!21922 = !DILocation(line: 594, column: 5, scope: !21903)
!21923 = !DILocation(line: 595, column: 15, scope: !21904)
!21924 = !DILocation(line: 596, column: 3, scope: !21904)
!21925 = !DILocation(line: 597, column: 15, scope: !21926)
!21926 = distinct !DILexicalBlock(scope: !21898, file: !21813, line: 596, column: 10)
!21927 = !DILocation(line: 599, column: 3, scope: !21899)
!21928 = !DILocalVariable(name: "vhdr", scope: !21929, file: !21813, line: 600, type: !21930)
!21929 = distinct !DILexicalBlock(scope: !21899, file: !21813, line: 599, column: 6)
!21930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_hdr", file: !21813, line: 35, size: 32, elements: !21931)
!21931 = !{!21932, !21933}
!21932 = !DIDerivedType(tag: DW_TAG_member, name: "h_vlan_TCI", scope: !21930, file: !21813, line: 36, baseType: !566, size: 16)
!21933 = !DIDerivedType(tag: DW_TAG_member, name: "h_vlan_encapsulated_proto", scope: !21930, file: !21813, line: 37, baseType: !566, size: 16, offset: 16)
!21934 = !DILocation(line: 600, column: 20, scope: !21929)
!21935 = !DILocalVariable(name: "vh", scope: !21929, file: !21813, line: 600, type: !21936)
!21936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21930, size: 64)
!21937 = !DILocation(line: 600, column: 27, scope: !21929)
!21938 = !DILocation(line: 602, column: 28, scope: !21929)
!21939 = !DILocation(line: 602, column: 33, scope: !21929)
!21940 = !DILocation(line: 602, column: 59, scope: !21929)
!21941 = !DILocation(line: 602, column: 9, scope: !21929)
!21942 = !DILocation(line: 602, column: 7, scope: !21929)
!21943 = !DILocation(line: 603, column: 8, scope: !21944)
!21944 = distinct !DILexicalBlock(scope: !21929, file: !21813, line: 603, column: 8)
!21945 = !DILocation(line: 603, column: 8, scope: !21929)
!21946 = !DILocation(line: 604, column: 5, scope: !21944)
!21947 = !DILocation(line: 606, column: 11, scope: !21929)
!21948 = !DILocation(line: 606, column: 15, scope: !21929)
!21949 = !DILocation(line: 606, column: 9, scope: !21929)
!21950 = !DILocation(line: 607, column: 15, scope: !21929)
!21951 = !DILocation(line: 608, column: 3, scope: !21929)
!21952 = !DILocation(line: 608, column: 26, scope: !21899)
!21953 = !DILocation(line: 608, column: 12, scope: !21899)
!21954 = distinct !{!21954, !21927, !21955}
!21955 = !DILocation(line: 608, column: 31, scope: !21899)
!21956 = !DILocation(line: 609, column: 2, scope: !21899)
!21957 = !DILocation(line: 611, column: 6, scope: !21958)
!21958 = distinct !DILexicalBlock(scope: !21878, file: !21813, line: 611, column: 6)
!21959 = !DILocation(line: 611, column: 6, scope: !21878)
!21960 = !DILocation(line: 612, column: 12, scope: !21958)
!21961 = !DILocation(line: 612, column: 4, scope: !21958)
!21962 = !DILocation(line: 612, column: 10, scope: !21958)
!21963 = !DILocation(line: 612, column: 3, scope: !21958)
!21964 = !DILocation(line: 614, column: 9, scope: !21878)
!21965 = !DILocation(line: 614, column: 2, scope: !21878)
!21966 = !DILocation(line: 615, column: 1, scope: !21878)
!21967 = distinct !DISubprogram(name: "eth_type_vlan", scope: !21813, file: !21813, line: 302, type: !21968, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21968 = !DISubroutineType(types: !21969)
!21969 = !{!617, !566}
!21970 = !DILocalVariable(name: "ethertype", arg: 1, scope: !21967, file: !21813, line: 302, type: !566)
!21971 = !DILocation(line: 302, column: 41, scope: !21967)
!21972 = !DILocation(line: 304, column: 10, scope: !21967)
!21973 = !DILocation(line: 304, column: 2, scope: !21967)
!21974 = !DILocation(line: 307, column: 3, scope: !21975)
!21975 = distinct !DILexicalBlock(scope: !21967, file: !21813, line: 304, column: 21)
!21976 = !DILocation(line: 309, column: 3, scope: !21975)
!21977 = !DILocation(line: 311, column: 1, scope: !21967)
!21978 = distinct !DISubprogram(name: "skb_header_pointer", scope: !499, file: !499, line: 3625, type: !21979, scopeLine: 3626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!21979 = !DISubroutineType(types: !21980)
!21980 = !{!647, !8817, !72, !72, !647}
!21981 = !DILocalVariable(name: "skb", arg: 1, scope: !21978, file: !499, line: 3625, type: !8817)
!21982 = !DILocation(line: 3625, column: 42, scope: !21978)
!21983 = !DILocalVariable(name: "offset", arg: 2, scope: !21978, file: !499, line: 3625, type: !72)
!21984 = !DILocation(line: 3625, column: 51, scope: !21978)
!21985 = !DILocalVariable(name: "len", arg: 3, scope: !21978, file: !499, line: 3625, type: !72)
!21986 = !DILocation(line: 3625, column: 63, scope: !21978)
!21987 = !DILocalVariable(name: "buffer", arg: 4, scope: !21978, file: !499, line: 3625, type: !647)
!21988 = !DILocation(line: 3625, column: 74, scope: !21978)
!21989 = !DILocation(line: 3627, column: 30, scope: !21978)
!21990 = !DILocation(line: 3627, column: 35, scope: !21978)
!21991 = !DILocation(line: 3627, column: 43, scope: !21978)
!21992 = !DILocation(line: 3627, column: 48, scope: !21978)
!21993 = !DILocation(line: 3627, column: 53, scope: !21978)
!21994 = !DILocation(line: 3628, column: 21, scope: !21978)
!21995 = !DILocation(line: 3628, column: 9, scope: !21978)
!21996 = !DILocation(line: 3628, column: 27, scope: !21978)
!21997 = !DILocation(line: 3627, column: 9, scope: !21978)
!21998 = !DILocation(line: 3627, column: 2, scope: !21978)
!21999 = distinct !DISubprogram(name: "__skb_header_pointer", scope: !499, file: !499, line: 3611, type: !22000, scopeLine: 3613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22000 = !DISubroutineType(types: !22001)
!22001 = !{!647, !8817, !72, !72, !647, !72, !647}
!22002 = !DILocalVariable(name: "skb", arg: 1, scope: !21999, file: !499, line: 3611, type: !8817)
!22003 = !DILocation(line: 3611, column: 44, scope: !21999)
!22004 = !DILocalVariable(name: "offset", arg: 2, scope: !21999, file: !499, line: 3611, type: !72)
!22005 = !DILocation(line: 3611, column: 53, scope: !21999)
!22006 = !DILocalVariable(name: "len", arg: 3, scope: !21999, file: !499, line: 3612, type: !72)
!22007 = !DILocation(line: 3612, column: 12, scope: !21999)
!22008 = !DILocalVariable(name: "data", arg: 4, scope: !21999, file: !499, line: 3612, type: !647)
!22009 = !DILocation(line: 3612, column: 23, scope: !21999)
!22010 = !DILocalVariable(name: "hlen", arg: 5, scope: !21999, file: !499, line: 3612, type: !72)
!22011 = !DILocation(line: 3612, column: 33, scope: !21999)
!22012 = !DILocalVariable(name: "buffer", arg: 6, scope: !21999, file: !499, line: 3612, type: !647)
!22013 = !DILocation(line: 3612, column: 45, scope: !21999)
!22014 = !DILocation(line: 3614, column: 6, scope: !22015)
!22015 = distinct !DILexicalBlock(scope: !21999, file: !499, line: 3614, column: 6)
!22016 = !DILocation(line: 3614, column: 13, scope: !22015)
!22017 = !DILocation(line: 3614, column: 11, scope: !22015)
!22018 = !DILocation(line: 3614, column: 23, scope: !22015)
!22019 = !DILocation(line: 3614, column: 20, scope: !22015)
!22020 = !DILocation(line: 3614, column: 6, scope: !21999)
!22021 = !DILocation(line: 3615, column: 10, scope: !22015)
!22022 = !DILocation(line: 3615, column: 17, scope: !22015)
!22023 = !DILocation(line: 3615, column: 15, scope: !22015)
!22024 = !DILocation(line: 3615, column: 3, scope: !22015)
!22025 = !DILocation(line: 3617, column: 7, scope: !22026)
!22026 = distinct !DILexicalBlock(scope: !21999, file: !499, line: 3617, column: 6)
!22027 = !DILocation(line: 3617, column: 11, scope: !22026)
!22028 = !DILocation(line: 3618, column: 20, scope: !22026)
!22029 = !DILocation(line: 3618, column: 25, scope: !22026)
!22030 = !DILocation(line: 3618, column: 33, scope: !22026)
!22031 = !DILocation(line: 3618, column: 41, scope: !22026)
!22032 = !DILocation(line: 3618, column: 6, scope: !22026)
!22033 = !DILocation(line: 3618, column: 46, scope: !22026)
!22034 = !DILocation(line: 3617, column: 6, scope: !21999)
!22035 = !DILocation(line: 3619, column: 3, scope: !22026)
!22036 = !DILocation(line: 3621, column: 9, scope: !21999)
!22037 = !DILocation(line: 3621, column: 2, scope: !21999)
!22038 = !DILocation(line: 3622, column: 1, scope: !21999)
!22039 = distinct !DISubprogram(name: "skb_headlen", scope: !499, file: !499, line: 2110, type: !22040, scopeLine: 2111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22040 = !DISubroutineType(types: !22041)
!22041 = !{!7, !8817}
!22042 = !DILocalVariable(name: "skb", arg: 1, scope: !22039, file: !499, line: 2110, type: !8817)
!22043 = !DILocation(line: 2110, column: 62, scope: !22039)
!22044 = !DILocation(line: 2112, column: 9, scope: !22039)
!22045 = !DILocation(line: 2112, column: 14, scope: !22039)
!22046 = !DILocation(line: 2112, column: 20, scope: !22039)
!22047 = !DILocation(line: 2112, column: 25, scope: !22039)
!22048 = !DILocation(line: 2112, column: 18, scope: !22039)
!22049 = !DILocation(line: 2112, column: 2, scope: !22039)
!22050 = distinct !DISubprogram(name: "__skb_cow", scope: !499, file: !499, line: 3156, type: !22051, scopeLine: 3158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22051 = !DISubroutineType(types: !22052)
!22052 = !{!72, !497, !7, !72}
!22053 = !DILocalVariable(name: "skb", arg: 1, scope: !22050, file: !499, line: 3156, type: !497)
!22054 = !DILocation(line: 3156, column: 45, scope: !22050)
!22055 = !DILocalVariable(name: "headroom", arg: 2, scope: !22050, file: !499, line: 3156, type: !7)
!22056 = !DILocation(line: 3156, column: 63, scope: !22050)
!22057 = !DILocalVariable(name: "cloned", arg: 3, scope: !22050, file: !499, line: 3157, type: !72)
!22058 = !DILocation(line: 3157, column: 12, scope: !22050)
!22059 = !DILocalVariable(name: "delta", scope: !22050, file: !499, line: 3159, type: !72)
!22060 = !DILocation(line: 3159, column: 6, scope: !22050)
!22061 = !DILocation(line: 3161, column: 6, scope: !22062)
!22062 = distinct !DILexicalBlock(scope: !22050, file: !499, line: 3161, column: 6)
!22063 = !DILocation(line: 3161, column: 30, scope: !22062)
!22064 = !DILocation(line: 3161, column: 17, scope: !22062)
!22065 = !DILocation(line: 3161, column: 15, scope: !22062)
!22066 = !DILocation(line: 3161, column: 6, scope: !22050)
!22067 = !DILocation(line: 3162, column: 11, scope: !22062)
!22068 = !DILocation(line: 3162, column: 35, scope: !22062)
!22069 = !DILocation(line: 3162, column: 22, scope: !22062)
!22070 = !DILocation(line: 3162, column: 20, scope: !22062)
!22071 = !DILocation(line: 3162, column: 9, scope: !22062)
!22072 = !DILocation(line: 3162, column: 3, scope: !22062)
!22073 = !DILocation(line: 3164, column: 6, scope: !22074)
!22074 = distinct !DILexicalBlock(scope: !22050, file: !499, line: 3164, column: 6)
!22075 = !DILocation(line: 3164, column: 12, scope: !22074)
!22076 = !DILocation(line: 3164, column: 15, scope: !22074)
!22077 = !DILocation(line: 3164, column: 6, scope: !22050)
!22078 = !DILocation(line: 3165, column: 27, scope: !22074)
!22079 = !DILocation(line: 3165, column: 32, scope: !22074)
!22080 = !DILocation(line: 3165, column: 10, scope: !22074)
!22081 = !DILocation(line: 3165, column: 3, scope: !22074)
!22082 = !DILocation(line: 3167, column: 2, scope: !22050)
!22083 = !DILocation(line: 3168, column: 1, scope: !22050)
!22084 = distinct !DISubprogram(name: "skb_header_cloned", scope: !499, file: !499, line: 1649, type: !21177, scopeLine: 1650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22085 = !DILocation(line: 23, column: 61, scope: !15912, inlinedAt: !22086)
!22086 = distinct !DILocation(line: 28, column: 9, scope: !15920, inlinedAt: !22087)
!22087 = distinct !DILocation(line: 1656, column: 12, scope: !22084)
!22088 = !DILocation(line: 69, column: 73, scope: !14190, inlinedAt: !22089)
!22089 = distinct !DILocation(line: 27, column: 2, scope: !15920, inlinedAt: !22087)
!22090 = !DILocation(line: 69, column: 83, scope: !14190, inlinedAt: !22089)
!22091 = !DILocation(line: 25, column: 29, scope: !15920, inlinedAt: !22087)
!22092 = !DILocalVariable(name: "skb", arg: 1, scope: !22084, file: !499, line: 1649, type: !8817)
!22093 = !DILocation(line: 1649, column: 59, scope: !22084)
!22094 = !DILocalVariable(name: "dataref", scope: !22084, file: !499, line: 1651, type: !72)
!22095 = !DILocation(line: 1651, column: 6, scope: !22084)
!22096 = !DILocation(line: 1653, column: 7, scope: !22097)
!22097 = distinct !DILexicalBlock(scope: !22084, file: !499, line: 1653, column: 6)
!22098 = !DILocation(line: 1653, column: 12, scope: !22097)
!22099 = !DILocation(line: 1653, column: 6, scope: !22084)
!22100 = !DILocation(line: 1654, column: 3, scope: !22097)
!22101 = !DILocation(line: 1656, column: 25, scope: !22084)
!22102 = !DILocation(line: 1656, column: 42, scope: !22084)
!22103 = !DILocation(line: 27, column: 25, scope: !15920, inlinedAt: !22087)
!22104 = !DILocation(line: 71, column: 19, scope: !14190, inlinedAt: !22089)
!22105 = !DILocation(line: 71, column: 22, scope: !14190, inlinedAt: !22089)
!22106 = !DILocation(line: 71, column: 2, scope: !14190, inlinedAt: !22089)
!22107 = !DILocation(line: 72, column: 2, scope: !14190, inlinedAt: !22089)
!22108 = !DILocation(line: 28, column: 26, scope: !15920, inlinedAt: !22087)
!22109 = !DILocation(line: 29, column: 9, scope: !15912, inlinedAt: !22086)
!22110 = !DILocation(line: 1656, column: 10, scope: !22084)
!22111 = !DILocation(line: 1657, column: 13, scope: !22084)
!22112 = !DILocation(line: 1657, column: 21, scope: !22084)
!22113 = !DILocation(line: 1657, column: 44, scope: !22084)
!22114 = !DILocation(line: 1657, column: 52, scope: !22084)
!22115 = !DILocation(line: 1657, column: 41, scope: !22084)
!22116 = !DILocation(line: 1657, column: 10, scope: !22084)
!22117 = !DILocation(line: 1658, column: 9, scope: !22084)
!22118 = !DILocation(line: 1658, column: 17, scope: !22084)
!22119 = !DILocation(line: 1658, column: 2, scope: !22084)
!22120 = !DILocation(line: 1659, column: 1, scope: !22084)
!22121 = distinct !DISubprogram(name: "skb_headroom", scope: !499, file: !499, line: 2339, type: !22040, scopeLine: 2340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22122 = !DILocalVariable(name: "skb", arg: 1, scope: !22121, file: !499, line: 2339, type: !8817)
!22123 = !DILocation(line: 2339, column: 63, scope: !22121)
!22124 = !DILocation(line: 2341, column: 9, scope: !22121)
!22125 = !DILocation(line: 2341, column: 14, scope: !22121)
!22126 = !DILocation(line: 2341, column: 21, scope: !22121)
!22127 = !DILocation(line: 2341, column: 26, scope: !22121)
!22128 = !DILocation(line: 2341, column: 19, scope: !22121)
!22129 = !DILocation(line: 2341, column: 2, scope: !22121)
!22130 = distinct !DISubprogram(name: "tcp_hdr", scope: !22131, file: !22131, line: 24, type: !22132, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22131 = !DIFile(filename: "./include/linux/tcp.h", directory: "/home/lizy2001/genbc/linux")
!22132 = !DISubroutineType(types: !22133)
!22133 = !{!10692, !8817}
!22134 = !DILocalVariable(name: "skb", arg: 1, scope: !22130, file: !22131, line: 24, type: !8817)
!22135 = !DILocation(line: 24, column: 60, scope: !22130)
!22136 = !DILocation(line: 26, column: 47, scope: !22130)
!22137 = !DILocation(line: 26, column: 26, scope: !22130)
!22138 = !DILocation(line: 26, column: 9, scope: !22130)
!22139 = !DILocation(line: 26, column: 2, scope: !22130)
!22140 = distinct !DISubprogram(name: "tcp_v6_check", scope: !21835, file: !21835, line: 54, type: !22141, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22141 = !DISubroutineType(types: !22142)
!22142 = !{!10712, !72, !22143, !22143, !7582}
!22143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22144, size: 64)
!22144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2300)
!22145 = !DILocalVariable(name: "len", arg: 1, scope: !22140, file: !21835, line: 54, type: !72)
!22146 = !DILocation(line: 54, column: 44, scope: !22140)
!22147 = !DILocalVariable(name: "saddr", arg: 2, scope: !22140, file: !21835, line: 55, type: !22143)
!22148 = !DILocation(line: 55, column: 31, scope: !22140)
!22149 = !DILocalVariable(name: "daddr", arg: 3, scope: !22140, file: !21835, line: 56, type: !22143)
!22150 = !DILocation(line: 56, column: 31, scope: !22140)
!22151 = !DILocalVariable(name: "base", arg: 4, scope: !22140, file: !21835, line: 57, type: !7582)
!22152 = !DILocation(line: 57, column: 15, scope: !22140)
!22153 = !DILocation(line: 59, column: 25, scope: !22140)
!22154 = !DILocation(line: 59, column: 32, scope: !22140)
!22155 = !DILocation(line: 59, column: 39, scope: !22140)
!22156 = !DILocation(line: 59, column: 57, scope: !22140)
!22157 = !DILocation(line: 59, column: 9, scope: !22140)
!22158 = !DILocation(line: 59, column: 2, scope: !22140)
!22159 = distinct !DISubprogram(name: "skb_network_header", scope: !499, file: !499, line: 2515, type: !21492, scopeLine: 2516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22160 = !DILocalVariable(name: "skb", arg: 1, scope: !22159, file: !499, line: 2515, type: !8817)
!22161 = !DILocation(line: 2515, column: 71, scope: !22159)
!22162 = !DILocation(line: 2517, column: 9, scope: !22159)
!22163 = !DILocation(line: 2517, column: 14, scope: !22159)
!22164 = !DILocation(line: 2517, column: 21, scope: !22159)
!22165 = !DILocation(line: 2517, column: 26, scope: !22159)
!22166 = !DILocation(line: 2517, column: 19, scope: !22159)
!22167 = !DILocation(line: 2517, column: 2, scope: !22159)
!22168 = distinct !DISubprogram(name: "skb_gso_segment", scope: !71, file: !71, line: 4683, type: !22169, scopeLine: 4684, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22169 = !DISubroutineType(types: !22170)
!22170 = !{!497, !497, !411}
!22171 = !DILocalVariable(name: "skb", arg: 1, scope: !22168, file: !71, line: 4683, type: !497)
!22172 = !DILocation(line: 4683, column: 49, scope: !22168)
!22173 = !DILocalVariable(name: "features", arg: 2, scope: !22168, file: !71, line: 4683, type: !411)
!22174 = !DILocation(line: 4683, column: 72, scope: !22168)
!22175 = !DILocation(line: 4685, column: 27, scope: !22168)
!22176 = !DILocation(line: 4685, column: 32, scope: !22168)
!22177 = !DILocation(line: 4685, column: 9, scope: !22168)
!22178 = !DILocation(line: 4685, column: 2, scope: !22168)
!22179 = distinct !DISubprogram(name: "skb_mark_not_on_list", scope: !499, file: !499, line: 1499, type: !2793, scopeLine: 1500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22180 = !DILocalVariable(name: "skb", arg: 1, scope: !22179, file: !499, line: 1499, type: !497)
!22181 = !DILocation(line: 1499, column: 57, scope: !22179)
!22182 = !DILocation(line: 1501, column: 2, scope: !22179)
!22183 = !DILocation(line: 1501, column: 7, scope: !22179)
!22184 = !DILocation(line: 1501, column: 12, scope: !22179)
!22185 = !DILocation(line: 1502, column: 1, scope: !22179)
!22186 = distinct !DISubprogram(name: "__skb_queue_tail", scope: !499, file: !499, line: 2046, type: !21156, scopeLine: 2048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22187 = !DILocalVariable(name: "list", arg: 1, scope: !22186, file: !499, line: 2046, type: !15396)
!22188 = !DILocation(line: 2046, column: 58, scope: !22186)
!22189 = !DILocalVariable(name: "newsk", arg: 2, scope: !22186, file: !499, line: 2047, type: !497)
!22190 = !DILocation(line: 2047, column: 24, scope: !22186)
!22191 = !DILocation(line: 2049, column: 21, scope: !22186)
!22192 = !DILocation(line: 2049, column: 45, scope: !22186)
!22193 = !DILocation(line: 2049, column: 27, scope: !22186)
!22194 = !DILocation(line: 2049, column: 51, scope: !22186)
!22195 = !DILocation(line: 2049, column: 2, scope: !22186)
!22196 = !DILocation(line: 2050, column: 1, scope: !22186)
!22197 = distinct !DISubprogram(name: "__skb_queue_before", scope: !499, file: !499, line: 2012, type: !21745, scopeLine: 2015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22198 = !DILocalVariable(name: "list", arg: 1, scope: !22197, file: !499, line: 2012, type: !15396)
!22199 = !DILocation(line: 2012, column: 60, scope: !22197)
!22200 = !DILocalVariable(name: "next", arg: 2, scope: !22197, file: !499, line: 2013, type: !497)
!22201 = !DILocation(line: 2013, column: 27, scope: !22197)
!22202 = !DILocalVariable(name: "newsk", arg: 3, scope: !22197, file: !499, line: 2014, type: !497)
!22203 = !DILocation(line: 2014, column: 27, scope: !22197)
!22204 = !DILocation(line: 2016, column: 15, scope: !22197)
!22205 = !DILocation(line: 2016, column: 22, scope: !22197)
!22206 = !DILocation(line: 2016, column: 28, scope: !22197)
!22207 = !DILocation(line: 2016, column: 34, scope: !22197)
!22208 = !DILocation(line: 2016, column: 40, scope: !22197)
!22209 = !DILocation(line: 2016, column: 2, scope: !22197)
!22210 = !DILocation(line: 2017, column: 1, scope: !22197)
!22211 = distinct !DISubprogram(name: "__fswab16", scope: !19433, file: !19433, line: 48, type: !22212, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22212 = !DISubroutineType(types: !22213)
!22213 = !{!553, !553}
!22214 = !DILocalVariable(name: "val", arg: 1, scope: !22211, file: !19433, line: 48, type: !553)
!22215 = !DILocation(line: 48, column: 57, scope: !22211)
!22216 = !DILocation(line: 53, column: 9, scope: !22211)
!22217 = !DILocation(line: 53, column: 2, scope: !22211)
!22218 = distinct !DISubprogram(name: "__netif_tx_lock", scope: !71, file: !71, line: 4173, type: !22219, scopeLine: 4174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22219 = !DISubroutineType(types: !22220)
!22220 = !{null, !8914, !72}
!22221 = !DILocation(line: 352, column: 51, scope: !20912, inlinedAt: !22222)
!22222 = distinct !DILocation(line: 4175, column: 2, scope: !22218)
!22223 = !DILocalVariable(name: "txq", arg: 1, scope: !22218, file: !71, line: 4173, type: !8914)
!22224 = !DILocation(line: 4173, column: 57, scope: !22218)
!22225 = !DILocalVariable(name: "cpu", arg: 2, scope: !22218, file: !71, line: 4173, type: !72)
!22226 = !DILocation(line: 4173, column: 66, scope: !22218)
!22227 = !DILocation(line: 4175, column: 13, scope: !22218)
!22228 = !DILocation(line: 4175, column: 18, scope: !22218)
!22229 = !DILocation(line: 354, column: 2, scope: !20939, inlinedAt: !22222)
!22230 = !DILocation(line: 354, column: 2, scope: !20942, inlinedAt: !22222)
!22231 = !DILocation(line: 4176, column: 25, scope: !22218)
!22232 = !DILocation(line: 4176, column: 2, scope: !22218)
!22233 = !DILocation(line: 4176, column: 7, scope: !22218)
!22234 = !DILocation(line: 4176, column: 23, scope: !22218)
!22235 = !DILocation(line: 4177, column: 1, scope: !22218)
!22236 = distinct !DISubprogram(name: "__netif_tx_unlock", scope: !71, file: !71, line: 4204, type: !18627, scopeLine: 4205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22237 = !DILocation(line: 392, column: 53, scope: !20906, inlinedAt: !22238)
!22238 = distinct !DILocation(line: 4207, column: 2, scope: !22236)
!22239 = !DILocalVariable(name: "txq", arg: 1, scope: !22236, file: !71, line: 4204, type: !8914)
!22240 = !DILocation(line: 4204, column: 59, scope: !22236)
!22241 = !DILocation(line: 4206, column: 2, scope: !22236)
!22242 = !DILocation(line: 4206, column: 7, scope: !22236)
!22243 = !DILocation(line: 4206, column: 23, scope: !22236)
!22244 = !DILocation(line: 4207, column: 15, scope: !22236)
!22245 = !DILocation(line: 4207, column: 20, scope: !22236)
!22246 = !DILocation(line: 394, column: 2, scope: !20948, inlinedAt: !22238)
!22247 = !DILocation(line: 394, column: 2, scope: !20951, inlinedAt: !22238)
!22248 = !DILocation(line: 4208, column: 1, scope: !22236)
!22249 = distinct !DISubprogram(name: "tasklet_disable_nosync", scope: !9833, file: !9833, line: 695, type: !10372, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22250 = !DILocalVariable(name: "v", arg: 1, scope: !22251, file: !15913, line: 93, type: !15948)
!22251 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !15913, file: !15913, line: 93, type: !15946, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22252 = !DILocation(line: 93, column: 55, scope: !22251, inlinedAt: !22253)
!22253 = distinct !DILocation(line: 241, column: 2, scope: !22254, inlinedAt: !22255)
!22254 = distinct !DISubprogram(name: "atomic_inc", scope: !15921, file: !15921, line: 238, type: !15946, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22255 = distinct !DILocation(line: 697, column: 2, scope: !22249)
!22256 = !DILocation(line: 99, column: 79, scope: !15954, inlinedAt: !22257)
!22257 = distinct !DILocation(line: 240, column: 2, scope: !22254, inlinedAt: !22255)
!22258 = !DILocation(line: 99, column: 89, scope: !15954, inlinedAt: !22257)
!22259 = !DILocalVariable(name: "v", arg: 1, scope: !22254, file: !15921, line: 238, type: !15948)
!22260 = !DILocation(line: 238, column: 22, scope: !22254, inlinedAt: !22255)
!22261 = !DILocalVariable(name: "t", arg: 1, scope: !22249, file: !9833, line: 695, type: !10359)
!22262 = !DILocation(line: 695, column: 66, scope: !22249)
!22263 = !DILocation(line: 697, column: 14, scope: !22249)
!22264 = !DILocation(line: 697, column: 17, scope: !22249)
!22265 = !DILocation(line: 240, column: 31, scope: !22254, inlinedAt: !22255)
!22266 = !DILocation(line: 101, column: 20, scope: !15954, inlinedAt: !22257)
!22267 = !DILocation(line: 101, column: 23, scope: !15954, inlinedAt: !22257)
!22268 = !DILocation(line: 101, column: 2, scope: !15954, inlinedAt: !22257)
!22269 = !DILocation(line: 102, column: 2, scope: !15954, inlinedAt: !22257)
!22270 = !DILocation(line: 241, column: 18, scope: !22254, inlinedAt: !22255)
!22271 = !DILocation(line: 96, column: 16, scope: !22251, inlinedAt: !22253)
!22272 = !DILocation(line: 96, column: 19, scope: !22251, inlinedAt: !22253)
!22273 = !DILocation(line: 95, column: 2, scope: !22251, inlinedAt: !22253)
!22274 = !{i32 -2146468881}
!22275 = !DILocation(line: 698, column: 2, scope: !22249)
!22276 = !{i32 -2140640351}
!22277 = !DILocation(line: 699, column: 1, scope: !22249)
!22278 = distinct !DISubprogram(name: "rtl8152_open", scope: !3, file: !3, line: 5233, type: !484, scopeLine: 5234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22279 = !DILocalVariable(name: "netdev", arg: 1, scope: !22278, file: !3, line: 5233, type: !372)
!22280 = !DILocation(line: 5233, column: 44, scope: !22278)
!22281 = !DILocalVariable(name: "tp", scope: !22278, file: !3, line: 5235, type: !10280)
!22282 = !DILocation(line: 5235, column: 16, scope: !22278)
!22283 = !DILocation(line: 5235, column: 33, scope: !22278)
!22284 = !DILocation(line: 5235, column: 21, scope: !22278)
!22285 = !DILocalVariable(name: "res", scope: !22278, file: !3, line: 5236, type: !72)
!22286 = !DILocation(line: 5236, column: 6, scope: !22278)
!22287 = !DILocation(line: 5238, column: 17, scope: !22288)
!22288 = distinct !DILexicalBlock(scope: !22278, file: !3, line: 5238, column: 6)
!22289 = !DILocation(line: 5238, column: 21, scope: !22288)
!22290 = !DILocation(line: 5238, column: 33, scope: !22288)
!22291 = !DILocation(line: 5238, column: 6, scope: !22288)
!22292 = !DILocation(line: 5238, column: 39, scope: !22288)
!22293 = !DILocation(line: 5238, column: 6, scope: !22278)
!22294 = !DILocation(line: 5239, column: 29, scope: !22295)
!22295 = distinct !DILexicalBlock(scope: !22288, file: !3, line: 5238, column: 60)
!22296 = !DILocation(line: 5239, column: 33, scope: !22295)
!22297 = !DILocation(line: 5239, column: 3, scope: !22295)
!22298 = !DILocation(line: 5240, column: 27, scope: !22295)
!22299 = !DILocation(line: 5240, column: 31, scope: !22295)
!22300 = !DILocation(line: 5240, column: 43, scope: !22295)
!22301 = !DILocation(line: 5240, column: 3, scope: !22295)
!22302 = !DILocation(line: 5241, column: 2, scope: !22295)
!22303 = !DILocation(line: 5243, column: 22, scope: !22278)
!22304 = !DILocation(line: 5243, column: 8, scope: !22278)
!22305 = !DILocation(line: 5243, column: 6, scope: !22278)
!22306 = !DILocation(line: 5244, column: 6, scope: !22307)
!22307 = distinct !DILexicalBlock(scope: !22278, file: !3, line: 5244, column: 6)
!22308 = !DILocation(line: 5244, column: 6, scope: !22278)
!22309 = !DILocation(line: 5245, column: 3, scope: !22307)
!22310 = !DILocation(line: 5247, column: 33, scope: !22278)
!22311 = !DILocation(line: 5247, column: 37, scope: !22278)
!22312 = !DILocation(line: 5247, column: 8, scope: !22278)
!22313 = !DILocation(line: 5247, column: 6, scope: !22278)
!22314 = !DILocation(line: 5248, column: 6, scope: !22315)
!22315 = distinct !DILexicalBlock(scope: !22278, file: !3, line: 5248, column: 6)
!22316 = !DILocation(line: 5248, column: 10, scope: !22315)
!22317 = !DILocation(line: 5248, column: 6, scope: !22278)
!22318 = !DILocation(line: 5249, column: 3, scope: !22315)
!22319 = !DILocation(line: 5251, column: 14, scope: !22278)
!22320 = !DILocation(line: 5251, column: 18, scope: !22278)
!22321 = !DILocation(line: 5251, column: 2, scope: !22278)
!22322 = !DILocation(line: 5253, column: 2, scope: !22278)
!22323 = !DILocation(line: 5253, column: 6, scope: !22278)
!22324 = !DILocation(line: 5253, column: 14, scope: !22278)
!22325 = !DILocation(line: 5253, column: 17, scope: !22278)
!22326 = !DILocation(line: 5255, column: 20, scope: !22278)
!22327 = !DILocation(line: 5255, column: 2, scope: !22278)
!22328 = !DILocation(line: 5256, column: 20, scope: !22278)
!22329 = !DILocation(line: 5256, column: 2, scope: !22278)
!22330 = !DILocation(line: 5257, column: 24, scope: !22278)
!22331 = !DILocation(line: 5257, column: 28, scope: !22278)
!22332 = !DILocation(line: 5257, column: 2, scope: !22278)
!22333 = !DILocation(line: 5259, column: 23, scope: !22278)
!22334 = !DILocation(line: 5259, column: 27, scope: !22278)
!22335 = !DILocation(line: 5259, column: 8, scope: !22278)
!22336 = !DILocation(line: 5259, column: 6, scope: !22278)
!22337 = !DILocation(line: 5260, column: 6, scope: !22338)
!22338 = distinct !DILexicalBlock(scope: !22278, file: !3, line: 5260, column: 6)
!22339 = !DILocation(line: 5260, column: 6, scope: !22278)
!22340 = !DILocation(line: 5261, column: 7, scope: !22341)
!22341 = distinct !DILexicalBlock(scope: !22342, file: !3, line: 5261, column: 7)
!22342 = distinct !DILexicalBlock(scope: !22338, file: !3, line: 5260, column: 11)
!22343 = !DILocation(line: 5261, column: 11, scope: !22341)
!22344 = !DILocation(line: 5261, column: 7, scope: !22342)
!22345 = !DILocation(line: 5262, column: 24, scope: !22341)
!22346 = !DILocation(line: 5262, column: 28, scope: !22341)
!22347 = !DILocation(line: 5262, column: 4, scope: !22341)
!22348 = !DILocation(line: 5263, column: 3, scope: !22342)
!22349 = !DILocation(line: 5263, column: 3, scope: !22350)
!22350 = distinct !DILexicalBlock(scope: !22351, file: !3, line: 5263, column: 3)
!22351 = distinct !DILexicalBlock(scope: !22342, file: !3, line: 5263, column: 3)
!22352 = !DILocation(line: 5263, column: 3, scope: !22351)
!22353 = !DILocation(line: 5265, column: 3, scope: !22342)
!22354 = !DILocation(line: 5267, column: 15, scope: !22278)
!22355 = !DILocation(line: 5267, column: 19, scope: !22278)
!22356 = !DILocation(line: 5267, column: 2, scope: !22278)
!22357 = !DILocation(line: 5268, column: 18, scope: !22278)
!22358 = !DILocation(line: 5268, column: 22, scope: !22278)
!22359 = !DILocation(line: 5268, column: 2, scope: !22278)
!22360 = !DILocation(line: 5270, column: 16, scope: !22278)
!22361 = !DILocation(line: 5270, column: 20, scope: !22278)
!22362 = !DILocation(line: 5270, column: 2, scope: !22278)
!22363 = !DILocation(line: 5272, column: 27, scope: !22278)
!22364 = !DILocation(line: 5272, column: 31, scope: !22278)
!22365 = !DILocation(line: 5272, column: 2, scope: !22278)
!22366 = !DILocation(line: 5274, column: 2, scope: !22278)
!22367 = !DILocation(line: 5274, column: 6, scope: !22278)
!22368 = !DILocation(line: 5274, column: 18, scope: !22278)
!22369 = !DILocation(line: 5274, column: 32, scope: !22278)
!22370 = !DILocation(line: 5275, column: 24, scope: !22278)
!22371 = !DILocation(line: 5275, column: 28, scope: !22278)
!22372 = !DILocation(line: 5275, column: 2, scope: !22278)
!22373 = !DILocation(line: 5277, column: 2, scope: !22278)
!22374 = !DILabel(scope: !22278, name: "out_unlock", file: !3, line: 5279)
!22375 = !DILocation(line: 5279, column: 1, scope: !22278)
!22376 = !DILocation(line: 5280, column: 16, scope: !22278)
!22377 = !DILocation(line: 5280, column: 20, scope: !22278)
!22378 = !DILocation(line: 5280, column: 2, scope: !22278)
!22379 = !DILocation(line: 5281, column: 27, scope: !22278)
!22380 = !DILocation(line: 5281, column: 31, scope: !22278)
!22381 = !DILocation(line: 5281, column: 2, scope: !22278)
!22382 = !DILabel(scope: !22278, name: "out_free", file: !3, line: 5282)
!22383 = !DILocation(line: 5282, column: 1, scope: !22278)
!22384 = !DILocation(line: 5283, column: 15, scope: !22278)
!22385 = !DILocation(line: 5283, column: 2, scope: !22278)
!22386 = !DILabel(scope: !22278, name: "out", file: !3, line: 5284)
!22387 = !DILocation(line: 5284, column: 1, scope: !22278)
!22388 = !DILocation(line: 5285, column: 9, scope: !22278)
!22389 = !DILocation(line: 5285, column: 2, scope: !22278)
!22390 = !DILocation(line: 5286, column: 1, scope: !22278)
!22391 = distinct !DISubprogram(name: "rtl8152_close", scope: !3, file: !3, line: 5288, type: !484, scopeLine: 5289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22392 = !DILocalVariable(name: "netdev", arg: 1, scope: !22391, file: !3, line: 5288, type: !372)
!22393 = !DILocation(line: 5288, column: 45, scope: !22391)
!22394 = !DILocalVariable(name: "tp", scope: !22391, file: !3, line: 5290, type: !10280)
!22395 = !DILocation(line: 5290, column: 16, scope: !22391)
!22396 = !DILocation(line: 5290, column: 33, scope: !22391)
!22397 = !DILocation(line: 5290, column: 21, scope: !22391)
!22398 = !DILocalVariable(name: "res", scope: !22391, file: !3, line: 5291, type: !72)
!22399 = !DILocation(line: 5291, column: 6, scope: !22391)
!22400 = !DILocation(line: 5294, column: 26, scope: !22391)
!22401 = !DILocation(line: 5294, column: 30, scope: !22391)
!22402 = !DILocation(line: 5294, column: 2, scope: !22391)
!22403 = !DILocation(line: 5296, column: 19, scope: !22391)
!22404 = !DILocation(line: 5296, column: 23, scope: !22391)
!22405 = !DILocation(line: 5296, column: 2, scope: !22391)
!22406 = !DILocation(line: 5297, column: 26, scope: !22391)
!22407 = !DILocation(line: 5297, column: 30, scope: !22391)
!22408 = !DILocation(line: 5297, column: 2, scope: !22391)
!22409 = !DILocation(line: 5298, column: 15, scope: !22391)
!22410 = !DILocation(line: 5298, column: 19, scope: !22391)
!22411 = !DILocation(line: 5298, column: 2, scope: !22391)
!22412 = !DILocation(line: 5299, column: 28, scope: !22391)
!22413 = !DILocation(line: 5299, column: 32, scope: !22391)
!22414 = !DILocation(line: 5299, column: 2, scope: !22391)
!22415 = !DILocation(line: 5300, column: 16, scope: !22391)
!22416 = !DILocation(line: 5300, column: 20, scope: !22391)
!22417 = !DILocation(line: 5300, column: 2, scope: !22391)
!22418 = !DILocation(line: 5301, column: 19, scope: !22391)
!22419 = !DILocation(line: 5301, column: 2, scope: !22391)
!22420 = !DILocation(line: 5303, column: 33, scope: !22391)
!22421 = !DILocation(line: 5303, column: 37, scope: !22391)
!22422 = !DILocation(line: 5303, column: 8, scope: !22391)
!22423 = !DILocation(line: 5303, column: 6, scope: !22391)
!22424 = !DILocation(line: 5304, column: 6, scope: !22425)
!22425 = distinct !DILexicalBlock(scope: !22391, file: !3, line: 5304, column: 6)
!22426 = !DILocation(line: 5304, column: 10, scope: !22425)
!22427 = !DILocation(line: 5304, column: 14, scope: !22425)
!22428 = !DILocation(line: 5304, column: 43, scope: !22425)
!22429 = !DILocation(line: 5304, column: 47, scope: !22425)
!22430 = !DILocation(line: 5304, column: 17, scope: !22425)
!22431 = !DILocation(line: 5304, column: 6, scope: !22391)
!22432 = !DILocation(line: 5305, column: 22, scope: !22433)
!22433 = distinct !DILexicalBlock(scope: !22425, file: !3, line: 5304, column: 55)
!22434 = !DILocation(line: 5305, column: 3, scope: !22433)
!22435 = !DILocation(line: 5306, column: 15, scope: !22433)
!22436 = !DILocation(line: 5306, column: 3, scope: !22433)
!22437 = !DILocation(line: 5307, column: 2, scope: !22433)
!22438 = !DILocation(line: 5308, column: 15, scope: !22439)
!22439 = distinct !DILexicalBlock(scope: !22425, file: !3, line: 5307, column: 9)
!22440 = !DILocation(line: 5308, column: 19, scope: !22439)
!22441 = !DILocation(line: 5308, column: 3, scope: !22439)
!22442 = !DILocation(line: 5310, column: 3, scope: !22439)
!22443 = !DILocation(line: 5310, column: 7, scope: !22439)
!22444 = !DILocation(line: 5310, column: 15, scope: !22439)
!22445 = !DILocation(line: 5310, column: 20, scope: !22439)
!22446 = !DILocation(line: 5312, column: 17, scope: !22439)
!22447 = !DILocation(line: 5312, column: 21, scope: !22439)
!22448 = !DILocation(line: 5312, column: 3, scope: !22439)
!22449 = !DILocation(line: 5314, column: 28, scope: !22439)
!22450 = !DILocation(line: 5314, column: 32, scope: !22439)
!22451 = !DILocation(line: 5314, column: 3, scope: !22439)
!22452 = !DILocation(line: 5317, column: 15, scope: !22391)
!22453 = !DILocation(line: 5317, column: 2, scope: !22391)
!22454 = !DILocation(line: 5319, column: 9, scope: !22391)
!22455 = !DILocation(line: 5319, column: 2, scope: !22391)
!22456 = distinct !DISubprogram(name: "rtl8152_start_xmit", scope: !3, file: !3, line: 2589, type: !494, scopeLine: 2591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22457 = !DILocalVariable(name: "skb", arg: 1, scope: !22456, file: !3, line: 2589, type: !497)
!22458 = !DILocation(line: 2589, column: 55, scope: !22456)
!22459 = !DILocalVariable(name: "netdev", arg: 2, scope: !22456, file: !3, line: 2590, type: !372)
!22460 = !DILocation(line: 2590, column: 30, scope: !22456)
!22461 = !DILocalVariable(name: "tp", scope: !22456, file: !3, line: 2592, type: !10280)
!22462 = !DILocation(line: 2592, column: 16, scope: !22456)
!22463 = !DILocation(line: 2592, column: 33, scope: !22456)
!22464 = !DILocation(line: 2592, column: 21, scope: !22456)
!22465 = !DILocation(line: 2594, column: 19, scope: !22456)
!22466 = !DILocation(line: 2594, column: 2, scope: !22456)
!22467 = !DILocation(line: 2596, column: 18, scope: !22456)
!22468 = !DILocation(line: 2596, column: 22, scope: !22456)
!22469 = !DILocation(line: 2596, column: 32, scope: !22456)
!22470 = !DILocation(line: 2596, column: 2, scope: !22456)
!22471 = !DILocation(line: 2598, column: 19, scope: !22472)
!22472 = distinct !DILexicalBlock(scope: !22456, file: !3, line: 2598, column: 6)
!22473 = !DILocation(line: 2598, column: 23, scope: !22472)
!22474 = !DILocation(line: 2598, column: 7, scope: !22472)
!22475 = !DILocation(line: 2598, column: 6, scope: !22456)
!22476 = !DILocation(line: 2599, column: 36, scope: !22477)
!22477 = distinct !DILexicalBlock(scope: !22478, file: !3, line: 2599, column: 7)
!22478 = distinct !DILexicalBlock(scope: !22472, file: !3, line: 2598, column: 33)
!22479 = !DILocation(line: 2599, column: 40, scope: !22477)
!22480 = !DILocation(line: 2599, column: 7, scope: !22477)
!22481 = !DILocation(line: 2599, column: 7, scope: !22478)
!22482 = !DILocation(line: 2600, column: 31, scope: !22483)
!22483 = distinct !DILexicalBlock(scope: !22477, file: !3, line: 2599, column: 48)
!22484 = !DILocation(line: 2600, column: 35, scope: !22483)
!22485 = !DILocation(line: 2600, column: 4, scope: !22483)
!22486 = !DILocation(line: 2601, column: 27, scope: !22483)
!22487 = !DILocation(line: 2601, column: 31, scope: !22483)
!22488 = !DILocation(line: 2601, column: 4, scope: !22483)
!22489 = !DILocation(line: 2602, column: 3, scope: !22483)
!22490 = !DILocation(line: 2603, column: 23, scope: !22491)
!22491 = distinct !DILexicalBlock(scope: !22477, file: !3, line: 2602, column: 10)
!22492 = !DILocation(line: 2603, column: 27, scope: !22491)
!22493 = !DILocation(line: 2603, column: 4, scope: !22491)
!22494 = !DILocation(line: 2604, column: 22, scope: !22491)
!22495 = !DILocation(line: 2604, column: 26, scope: !22491)
!22496 = !DILocation(line: 2604, column: 4, scope: !22491)
!22497 = !DILocation(line: 2606, column: 2, scope: !22478)
!22498 = !DILocation(line: 2606, column: 28, scope: !22499)
!22499 = distinct !DILexicalBlock(scope: !22472, file: !3, line: 2606, column: 13)
!22500 = !DILocation(line: 2606, column: 32, scope: !22499)
!22501 = !DILocation(line: 2606, column: 13, scope: !22499)
!22502 = !DILocation(line: 2606, column: 44, scope: !22499)
!22503 = !DILocation(line: 2606, column: 48, scope: !22499)
!22504 = !DILocation(line: 2606, column: 42, scope: !22499)
!22505 = !DILocation(line: 2606, column: 13, scope: !22472)
!22506 = !DILocation(line: 2607, column: 20, scope: !22507)
!22507 = distinct !DILexicalBlock(scope: !22499, file: !3, line: 2606, column: 57)
!22508 = !DILocation(line: 2607, column: 3, scope: !22507)
!22509 = !DILocation(line: 2608, column: 2, scope: !22507)
!22510 = !DILocation(line: 2610, column: 2, scope: !22456)
!22511 = distinct !DISubprogram(name: "rtl8152_features_check", scope: !3, file: !3, line: 2574, type: !7625, scopeLine: 2576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22512 = !DILocalVariable(name: "skb", arg: 1, scope: !22511, file: !3, line: 2574, type: !497)
!22513 = !DILocation(line: 2574, column: 40, scope: !22511)
!22514 = !DILocalVariable(name: "dev", arg: 2, scope: !22511, file: !3, line: 2574, type: !372)
!22515 = !DILocation(line: 2574, column: 64, scope: !22511)
!22516 = !DILocalVariable(name: "features", arg: 3, scope: !22511, file: !3, line: 2575, type: !411)
!22517 = !DILocation(line: 2575, column: 28, scope: !22511)
!22518 = !DILocalVariable(name: "mss", scope: !22511, file: !3, line: 2577, type: !784)
!22519 = !DILocation(line: 2577, column: 6, scope: !22511)
!22520 = !DILocation(line: 2577, column: 12, scope: !22511)
!22521 = !DILocation(line: 2577, column: 29, scope: !22511)
!22522 = !DILocalVariable(name: "max_offset", scope: !22511, file: !3, line: 2578, type: !72)
!22523 = !DILocation(line: 2578, column: 6, scope: !22511)
!22524 = !DILocation(line: 2578, column: 19, scope: !22511)
!22525 = !DILocalVariable(name: "offset", scope: !22511, file: !3, line: 2579, type: !72)
!22526 = !DILocation(line: 2579, column: 6, scope: !22511)
!22527 = !DILocation(line: 2579, column: 36, scope: !22511)
!22528 = !DILocation(line: 2579, column: 15, scope: !22511)
!22529 = !DILocation(line: 2581, column: 7, scope: !22530)
!22530 = distinct !DILexicalBlock(scope: !22511, file: !3, line: 2581, column: 6)
!22531 = !DILocation(line: 2581, column: 11, scope: !22530)
!22532 = !DILocation(line: 2581, column: 14, scope: !22530)
!22533 = !DILocation(line: 2581, column: 19, scope: !22530)
!22534 = !DILocation(line: 2581, column: 29, scope: !22530)
!22535 = !DILocation(line: 2581, column: 50, scope: !22530)
!22536 = !DILocation(line: 2581, column: 53, scope: !22530)
!22537 = !DILocation(line: 2581, column: 62, scope: !22530)
!22538 = !DILocation(line: 2581, column: 60, scope: !22530)
!22539 = !DILocation(line: 2581, column: 6, scope: !22511)
!22540 = !DILocation(line: 2582, column: 12, scope: !22530)
!22541 = !DILocation(line: 2582, column: 3, scope: !22530)
!22542 = !DILocation(line: 2583, column: 12, scope: !22543)
!22543 = distinct !DILexicalBlock(scope: !22530, file: !3, line: 2583, column: 11)
!22544 = !DILocation(line: 2583, column: 17, scope: !22543)
!22545 = !DILocation(line: 2583, column: 21, scope: !22543)
!22546 = !DILocation(line: 2583, column: 49, scope: !22543)
!22547 = !DILocation(line: 2583, column: 47, scope: !22543)
!22548 = !DILocation(line: 2583, column: 11, scope: !22530)
!22549 = !DILocation(line: 2584, column: 12, scope: !22543)
!22550 = !DILocation(line: 2584, column: 3, scope: !22543)
!22551 = !DILocation(line: 2586, column: 9, scope: !22511)
!22552 = !DILocation(line: 2586, column: 2, scope: !22511)
!22553 = distinct !DISubprogram(name: "rtl8152_set_rx_mode", scope: !3, file: !3, line: 2518, type: !488, scopeLine: 2519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22554 = !DILocalVariable(name: "netdev", arg: 1, scope: !22553, file: !3, line: 2518, type: !372)
!22555 = !DILocation(line: 2518, column: 52, scope: !22553)
!22556 = !DILocalVariable(name: "tp", scope: !22553, file: !3, line: 2520, type: !10280)
!22557 = !DILocation(line: 2520, column: 16, scope: !22553)
!22558 = !DILocation(line: 2520, column: 33, scope: !22553)
!22559 = !DILocation(line: 2520, column: 21, scope: !22553)
!22560 = !DILocation(line: 2522, column: 23, scope: !22561)
!22561 = distinct !DILexicalBlock(scope: !22553, file: !3, line: 2522, column: 6)
!22562 = !DILocation(line: 2522, column: 6, scope: !22561)
!22563 = !DILocation(line: 2522, column: 6, scope: !22553)
!22564 = !DILocation(line: 2523, column: 33, scope: !22565)
!22565 = distinct !DILexicalBlock(scope: !22561, file: !3, line: 2522, column: 32)
!22566 = !DILocation(line: 2523, column: 37, scope: !22565)
!22567 = !DILocation(line: 2523, column: 3, scope: !22565)
!22568 = !DILocation(line: 2524, column: 26, scope: !22565)
!22569 = !DILocation(line: 2524, column: 30, scope: !22565)
!22570 = !DILocation(line: 2524, column: 3, scope: !22565)
!22571 = !DILocation(line: 2525, column: 2, scope: !22565)
!22572 = !DILocation(line: 2526, column: 1, scope: !22553)
!22573 = distinct !DISubprogram(name: "rtl8152_set_mac_address", scope: !3, file: !3, line: 1391, type: !7638, scopeLine: 1392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22574 = !DILocalVariable(name: "netdev", arg: 1, scope: !22573, file: !3, line: 1391, type: !372)
!22575 = !DILocation(line: 1391, column: 55, scope: !22573)
!22576 = !DILocalVariable(name: "p", arg: 2, scope: !22573, file: !3, line: 1391, type: !647)
!22577 = !DILocation(line: 1391, column: 69, scope: !22573)
!22578 = !DILocalVariable(name: "tp", scope: !22573, file: !3, line: 1393, type: !10280)
!22579 = !DILocation(line: 1393, column: 16, scope: !22573)
!22580 = !DILocation(line: 1393, column: 33, scope: !22573)
!22581 = !DILocation(line: 1393, column: 21, scope: !22573)
!22582 = !DILocalVariable(name: "addr", scope: !22573, file: !3, line: 1394, type: !595)
!22583 = !DILocation(line: 1394, column: 19, scope: !22573)
!22584 = !DILocation(line: 1394, column: 26, scope: !22573)
!22585 = !DILocalVariable(name: "ret", scope: !22573, file: !3, line: 1395, type: !72)
!22586 = !DILocation(line: 1395, column: 6, scope: !22573)
!22587 = !DILocation(line: 1397, column: 27, scope: !22588)
!22588 = distinct !DILexicalBlock(scope: !22573, file: !3, line: 1397, column: 6)
!22589 = !DILocation(line: 1397, column: 33, scope: !22588)
!22590 = !DILocation(line: 1397, column: 7, scope: !22588)
!22591 = !DILocation(line: 1397, column: 6, scope: !22573)
!22592 = !DILocation(line: 1398, column: 3, scope: !22588)
!22593 = !DILocation(line: 1400, column: 33, scope: !22573)
!22594 = !DILocation(line: 1400, column: 37, scope: !22573)
!22595 = !DILocation(line: 1400, column: 8, scope: !22573)
!22596 = !DILocation(line: 1400, column: 6, scope: !22573)
!22597 = !DILocation(line: 1401, column: 6, scope: !22598)
!22598 = distinct !DILexicalBlock(scope: !22573, file: !3, line: 1401, column: 6)
!22599 = !DILocation(line: 1401, column: 10, scope: !22598)
!22600 = !DILocation(line: 1401, column: 6, scope: !22573)
!22601 = !DILocation(line: 1402, column: 3, scope: !22598)
!22602 = !DILocation(line: 1404, column: 14, scope: !22573)
!22603 = !DILocation(line: 1404, column: 18, scope: !22573)
!22604 = !DILocation(line: 1404, column: 2, scope: !22573)
!22605 = !DILocation(line: 1406, column: 9, scope: !22573)
!22606 = !DILocation(line: 1406, column: 17, scope: !22573)
!22607 = !DILocation(line: 1406, column: 27, scope: !22573)
!22608 = !DILocation(line: 1406, column: 33, scope: !22573)
!22609 = !DILocation(line: 1406, column: 2, scope: !22573)
!22610 = !DILocation(line: 1406, column: 42, scope: !22573)
!22611 = !DILocation(line: 1406, column: 50, scope: !22573)
!22612 = !DILocation(line: 1408, column: 17, scope: !22573)
!22613 = !DILocation(line: 1408, column: 2, scope: !22573)
!22614 = !DILocation(line: 1409, column: 16, scope: !22573)
!22615 = !DILocation(line: 1409, column: 51, scope: !22573)
!22616 = !DILocation(line: 1409, column: 57, scope: !22573)
!22617 = !DILocation(line: 1409, column: 2, scope: !22573)
!22618 = !DILocation(line: 1410, column: 17, scope: !22573)
!22619 = !DILocation(line: 1410, column: 2, scope: !22573)
!22620 = !DILocation(line: 1412, column: 16, scope: !22573)
!22621 = !DILocation(line: 1412, column: 20, scope: !22573)
!22622 = !DILocation(line: 1412, column: 2, scope: !22573)
!22623 = !DILocation(line: 1414, column: 27, scope: !22573)
!22624 = !DILocation(line: 1414, column: 31, scope: !22573)
!22625 = !DILocation(line: 1414, column: 2, scope: !22573)
!22626 = !DILabel(scope: !22573, name: "out1", file: !3, line: 1415)
!22627 = !DILocation(line: 1415, column: 1, scope: !22573)
!22628 = !DILocation(line: 1416, column: 9, scope: !22573)
!22629 = !DILocation(line: 1416, column: 2, scope: !22573)
!22630 = distinct !DISubprogram(name: "rtl8152_ioctl", scope: !3, file: !3, line: 6383, type: !7643, scopeLine: 6384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22631 = !DILocalVariable(name: "netdev", arg: 1, scope: !22630, file: !3, line: 6383, type: !372)
!22632 = !DILocation(line: 6383, column: 45, scope: !22630)
!22633 = !DILocalVariable(name: "rq", arg: 2, scope: !22630, file: !3, line: 6383, type: !7645)
!22634 = !DILocation(line: 6383, column: 67, scope: !22630)
!22635 = !DILocalVariable(name: "cmd", arg: 3, scope: !22630, file: !3, line: 6383, type: !72)
!22636 = !DILocation(line: 6383, column: 75, scope: !22630)
!22637 = !DILocalVariable(name: "tp", scope: !22630, file: !3, line: 6385, type: !10280)
!22638 = !DILocation(line: 6385, column: 16, scope: !22630)
!22639 = !DILocation(line: 6385, column: 33, scope: !22630)
!22640 = !DILocation(line: 6385, column: 21, scope: !22630)
!22641 = !DILocalVariable(name: "data", scope: !22630, file: !3, line: 6386, type: !10745)
!22642 = !DILocation(line: 6386, column: 25, scope: !22630)
!22643 = !DILocation(line: 6386, column: 39, scope: !22630)
!22644 = !DILocation(line: 6386, column: 32, scope: !22630)
!22645 = !DILocalVariable(name: "res", scope: !22630, file: !3, line: 6387, type: !72)
!22646 = !DILocation(line: 6387, column: 6, scope: !22630)
!22647 = !DILocation(line: 6389, column: 32, scope: !22648)
!22648 = distinct !DILexicalBlock(scope: !22630, file: !3, line: 6389, column: 6)
!22649 = !DILocation(line: 6389, column: 36, scope: !22648)
!22650 = !DILocation(line: 6389, column: 6, scope: !22648)
!22651 = !DILocation(line: 6389, column: 6, scope: !22630)
!22652 = !DILocation(line: 6390, column: 3, scope: !22648)
!22653 = !DILocation(line: 6392, column: 33, scope: !22630)
!22654 = !DILocation(line: 6392, column: 37, scope: !22630)
!22655 = !DILocation(line: 6392, column: 8, scope: !22630)
!22656 = !DILocation(line: 6392, column: 6, scope: !22630)
!22657 = !DILocation(line: 6393, column: 6, scope: !22658)
!22658 = distinct !DILexicalBlock(scope: !22630, file: !3, line: 6393, column: 6)
!22659 = !DILocation(line: 6393, column: 10, scope: !22658)
!22660 = !DILocation(line: 6393, column: 6, scope: !22630)
!22661 = !DILocation(line: 6394, column: 3, scope: !22658)
!22662 = !DILocation(line: 6396, column: 10, scope: !22630)
!22663 = !DILocation(line: 6396, column: 2, scope: !22630)
!22664 = !DILocation(line: 6398, column: 3, scope: !22665)
!22665 = distinct !DILexicalBlock(scope: !22630, file: !3, line: 6396, column: 15)
!22666 = !DILocation(line: 6398, column: 9, scope: !22665)
!22667 = !DILocation(line: 6398, column: 16, scope: !22665)
!22668 = !DILocation(line: 6399, column: 3, scope: !22665)
!22669 = !DILocation(line: 6402, column: 15, scope: !22665)
!22670 = !DILocation(line: 6402, column: 19, scope: !22665)
!22671 = !DILocation(line: 6402, column: 3, scope: !22665)
!22672 = !DILocation(line: 6403, column: 35, scope: !22665)
!22673 = !DILocation(line: 6403, column: 39, scope: !22665)
!22674 = !DILocation(line: 6403, column: 45, scope: !22665)
!22675 = !DILocation(line: 6403, column: 19, scope: !22665)
!22676 = !DILocation(line: 6403, column: 3, scope: !22665)
!22677 = !DILocation(line: 6403, column: 9, scope: !22665)
!22678 = !DILocation(line: 6403, column: 17, scope: !22665)
!22679 = !DILocation(line: 6404, column: 17, scope: !22665)
!22680 = !DILocation(line: 6404, column: 21, scope: !22665)
!22681 = !DILocation(line: 6404, column: 3, scope: !22665)
!22682 = !DILocation(line: 6405, column: 3, scope: !22665)
!22683 = !DILocation(line: 6408, column: 8, scope: !22684)
!22684 = distinct !DILexicalBlock(scope: !22665, file: !3, line: 6408, column: 7)
!22685 = !DILocation(line: 6408, column: 7, scope: !22665)
!22686 = !DILocation(line: 6409, column: 8, scope: !22687)
!22687 = distinct !DILexicalBlock(scope: !22684, file: !3, line: 6408, column: 32)
!22688 = !DILocation(line: 6410, column: 4, scope: !22687)
!22689 = !DILocation(line: 6412, column: 15, scope: !22665)
!22690 = !DILocation(line: 6412, column: 19, scope: !22665)
!22691 = !DILocation(line: 6412, column: 3, scope: !22665)
!22692 = !DILocation(line: 6413, column: 20, scope: !22665)
!22693 = !DILocation(line: 6413, column: 24, scope: !22665)
!22694 = !DILocation(line: 6413, column: 30, scope: !22665)
!22695 = !DILocation(line: 6413, column: 39, scope: !22665)
!22696 = !DILocation(line: 6413, column: 45, scope: !22665)
!22697 = !DILocation(line: 6413, column: 3, scope: !22665)
!22698 = !DILocation(line: 6414, column: 17, scope: !22665)
!22699 = !DILocation(line: 6414, column: 21, scope: !22665)
!22700 = !DILocation(line: 6414, column: 3, scope: !22665)
!22701 = !DILocation(line: 6415, column: 3, scope: !22665)
!22702 = !DILocation(line: 6418, column: 7, scope: !22665)
!22703 = !DILocation(line: 6419, column: 2, scope: !22665)
!22704 = !DILocation(line: 6421, column: 27, scope: !22630)
!22705 = !DILocation(line: 6421, column: 31, scope: !22630)
!22706 = !DILocation(line: 6421, column: 2, scope: !22630)
!22707 = !DILabel(scope: !22630, name: "out", file: !3, line: 6423)
!22708 = !DILocation(line: 6423, column: 1, scope: !22630)
!22709 = !DILocation(line: 6424, column: 9, scope: !22630)
!22710 = !DILocation(line: 6424, column: 2, scope: !22630)
!22711 = !DILocation(line: 6425, column: 1, scope: !22630)
!22712 = distinct !DISubprogram(name: "rtl8152_change_mtu", scope: !3, file: !3, line: 6427, type: !7759, scopeLine: 6428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22713 = !DILocalVariable(name: "dev", arg: 1, scope: !22712, file: !3, line: 6427, type: !372)
!22714 = !DILocation(line: 6427, column: 50, scope: !22712)
!22715 = !DILocalVariable(name: "new_mtu", arg: 2, scope: !22712, file: !3, line: 6427, type: !72)
!22716 = !DILocation(line: 6427, column: 59, scope: !22712)
!22717 = !DILocalVariable(name: "tp", scope: !22712, file: !3, line: 6429, type: !10280)
!22718 = !DILocation(line: 6429, column: 16, scope: !22712)
!22719 = !DILocation(line: 6429, column: 33, scope: !22712)
!22720 = !DILocation(line: 6429, column: 21, scope: !22712)
!22721 = !DILocalVariable(name: "ret", scope: !22712, file: !3, line: 6430, type: !72)
!22722 = !DILocation(line: 6430, column: 6, scope: !22712)
!22723 = !DILocation(line: 6432, column: 10, scope: !22712)
!22724 = !DILocation(line: 6432, column: 14, scope: !22712)
!22725 = !DILocation(line: 6432, column: 2, scope: !22712)
!22726 = !DILocation(line: 6436, column: 14, scope: !22727)
!22727 = distinct !DILexicalBlock(scope: !22712, file: !3, line: 6432, column: 23)
!22728 = !DILocation(line: 6436, column: 3, scope: !22727)
!22729 = !DILocation(line: 6436, column: 8, scope: !22727)
!22730 = !DILocation(line: 6436, column: 12, scope: !22727)
!22731 = !DILocation(line: 6437, column: 3, scope: !22727)
!22732 = !DILocation(line: 6439, column: 3, scope: !22727)
!22733 = !DILocation(line: 6442, column: 33, scope: !22712)
!22734 = !DILocation(line: 6442, column: 37, scope: !22712)
!22735 = !DILocation(line: 6442, column: 8, scope: !22712)
!22736 = !DILocation(line: 6442, column: 6, scope: !22712)
!22737 = !DILocation(line: 6443, column: 6, scope: !22738)
!22738 = distinct !DILexicalBlock(scope: !22712, file: !3, line: 6443, column: 6)
!22739 = !DILocation(line: 6443, column: 10, scope: !22738)
!22740 = !DILocation(line: 6443, column: 6, scope: !22712)
!22741 = !DILocation(line: 6444, column: 10, scope: !22738)
!22742 = !DILocation(line: 6444, column: 3, scope: !22738)
!22743 = !DILocation(line: 6446, column: 14, scope: !22712)
!22744 = !DILocation(line: 6446, column: 18, scope: !22712)
!22745 = !DILocation(line: 6446, column: 2, scope: !22712)
!22746 = !DILocation(line: 6448, column: 13, scope: !22712)
!22747 = !DILocation(line: 6448, column: 2, scope: !22712)
!22748 = !DILocation(line: 6448, column: 7, scope: !22712)
!22749 = !DILocation(line: 6448, column: 11, scope: !22712)
!22750 = !DILocation(line: 6450, column: 20, scope: !22751)
!22751 = distinct !DILexicalBlock(scope: !22712, file: !3, line: 6450, column: 6)
!22752 = !DILocation(line: 6450, column: 6, scope: !22751)
!22753 = !DILocation(line: 6450, column: 6, scope: !22712)
!22754 = !DILocalVariable(name: "rms", scope: !22755, file: !3, line: 6451, type: !784)
!22755 = distinct !DILexicalBlock(scope: !22751, file: !3, line: 6450, column: 26)
!22756 = !DILocation(line: 6451, column: 7, scope: !22755)
!22757 = !DILocation(line: 6451, column: 13, scope: !22755)
!22758 = !DILocation(line: 6451, column: 21, scope: !22755)
!22759 = !DILocation(line: 6451, column: 37, scope: !22755)
!22760 = !DILocation(line: 6453, column: 18, scope: !22755)
!22761 = !DILocation(line: 6453, column: 45, scope: !22755)
!22762 = !DILocation(line: 6453, column: 3, scope: !22755)
!22763 = !DILocation(line: 6455, column: 24, scope: !22764)
!22764 = distinct !DILexicalBlock(scope: !22755, file: !3, line: 6455, column: 7)
!22765 = !DILocation(line: 6455, column: 7, scope: !22764)
!22766 = !DILocation(line: 6455, column: 7, scope: !22755)
!22767 = !DILocation(line: 6456, column: 28, scope: !22764)
!22768 = !DILocation(line: 6456, column: 4, scope: !22764)
!22769 = !DILocation(line: 6457, column: 2, scope: !22755)
!22770 = !DILocation(line: 6459, column: 16, scope: !22712)
!22771 = !DILocation(line: 6459, column: 20, scope: !22712)
!22772 = !DILocation(line: 6459, column: 2, scope: !22712)
!22773 = !DILocation(line: 6461, column: 27, scope: !22712)
!22774 = !DILocation(line: 6461, column: 31, scope: !22712)
!22775 = !DILocation(line: 6461, column: 2, scope: !22712)
!22776 = !DILocation(line: 6463, column: 9, scope: !22712)
!22777 = !DILocation(line: 6463, column: 2, scope: !22712)
!22778 = !DILocation(line: 6464, column: 1, scope: !22712)
!22779 = distinct !DISubprogram(name: "rtl8152_tx_timeout", scope: !3, file: !3, line: 2509, type: !7767, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22780 = !DILocalVariable(name: "netdev", arg: 1, scope: !22779, file: !3, line: 2509, type: !372)
!22781 = !DILocation(line: 2509, column: 51, scope: !22779)
!22782 = !DILocalVariable(name: "txqueue", arg: 2, scope: !22779, file: !3, line: 2509, type: !7)
!22783 = !DILocation(line: 2509, column: 72, scope: !22779)
!22784 = !DILocalVariable(name: "tp", scope: !22779, file: !3, line: 2511, type: !10280)
!22785 = !DILocation(line: 2511, column: 16, scope: !22779)
!22786 = !DILocation(line: 2511, column: 33, scope: !22779)
!22787 = !DILocation(line: 2511, column: 21, scope: !22779)
!22788 = !DILocation(line: 2513, column: 2, scope: !22779)
!22789 = !DILocation(line: 2513, column: 2, scope: !22790)
!22790 = distinct !DILexicalBlock(scope: !22791, file: !3, line: 2513, column: 2)
!22791 = distinct !DILexicalBlock(scope: !22779, file: !3, line: 2513, column: 2)
!22792 = !DILocation(line: 2513, column: 2, scope: !22791)
!22793 = !DILocation(line: 2515, column: 25, scope: !22779)
!22794 = !DILocation(line: 2515, column: 29, scope: !22779)
!22795 = !DILocation(line: 2515, column: 2, scope: !22779)
!22796 = !DILocation(line: 2516, column: 1, scope: !22779)
!22797 = distinct !DISubprogram(name: "rtl8152_set_features", scope: !3, file: !3, line: 2946, type: !7922, scopeLine: 2948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22798 = !DILocalVariable(name: "dev", arg: 1, scope: !22797, file: !3, line: 2946, type: !372)
!22799 = !DILocation(line: 2946, column: 52, scope: !22797)
!22800 = !DILocalVariable(name: "features", arg: 2, scope: !22797, file: !3, line: 2947, type: !411)
!22801 = !DILocation(line: 2947, column: 23, scope: !22797)
!22802 = !DILocalVariable(name: "changed", scope: !22797, file: !3, line: 2949, type: !411)
!22803 = !DILocation(line: 2949, column: 20, scope: !22797)
!22804 = !DILocation(line: 2949, column: 30, scope: !22797)
!22805 = !DILocation(line: 2949, column: 41, scope: !22797)
!22806 = !DILocation(line: 2949, column: 46, scope: !22797)
!22807 = !DILocation(line: 2949, column: 39, scope: !22797)
!22808 = !DILocalVariable(name: "tp", scope: !22797, file: !3, line: 2950, type: !10280)
!22809 = !DILocation(line: 2950, column: 16, scope: !22797)
!22810 = !DILocation(line: 2950, column: 33, scope: !22797)
!22811 = !DILocation(line: 2950, column: 21, scope: !22797)
!22812 = !DILocalVariable(name: "ret", scope: !22797, file: !3, line: 2951, type: !72)
!22813 = !DILocation(line: 2951, column: 6, scope: !22797)
!22814 = !DILocation(line: 2953, column: 33, scope: !22797)
!22815 = !DILocation(line: 2953, column: 37, scope: !22797)
!22816 = !DILocation(line: 2953, column: 8, scope: !22797)
!22817 = !DILocation(line: 2953, column: 6, scope: !22797)
!22818 = !DILocation(line: 2954, column: 6, scope: !22819)
!22819 = distinct !DILexicalBlock(scope: !22797, file: !3, line: 2954, column: 6)
!22820 = !DILocation(line: 2954, column: 10, scope: !22819)
!22821 = !DILocation(line: 2954, column: 6, scope: !22797)
!22822 = !DILocation(line: 2955, column: 3, scope: !22819)
!22823 = !DILocation(line: 2957, column: 14, scope: !22797)
!22824 = !DILocation(line: 2957, column: 18, scope: !22797)
!22825 = !DILocation(line: 2957, column: 2, scope: !22797)
!22826 = !DILocation(line: 2959, column: 6, scope: !22827)
!22827 = distinct !DILexicalBlock(scope: !22797, file: !3, line: 2959, column: 6)
!22828 = !DILocation(line: 2959, column: 14, scope: !22827)
!22829 = !DILocation(line: 2959, column: 6, scope: !22797)
!22830 = !DILocation(line: 2960, column: 7, scope: !22831)
!22831 = distinct !DILexicalBlock(scope: !22832, file: !3, line: 2960, column: 7)
!22832 = distinct !DILexicalBlock(scope: !22827, file: !3, line: 2959, column: 41)
!22833 = !DILocation(line: 2960, column: 16, scope: !22831)
!22834 = !DILocation(line: 2960, column: 7, scope: !22832)
!22835 = !DILocation(line: 2961, column: 19, scope: !22831)
!22836 = !DILocation(line: 2961, column: 4, scope: !22831)
!22837 = !DILocation(line: 2963, column: 19, scope: !22831)
!22838 = !DILocation(line: 2963, column: 4, scope: !22831)
!22839 = !DILocation(line: 2964, column: 2, scope: !22832)
!22840 = !DILocation(line: 2966, column: 16, scope: !22797)
!22841 = !DILocation(line: 2966, column: 20, scope: !22797)
!22842 = !DILocation(line: 2966, column: 2, scope: !22797)
!22843 = !DILocation(line: 2968, column: 27, scope: !22797)
!22844 = !DILocation(line: 2968, column: 31, scope: !22797)
!22845 = !DILocation(line: 2968, column: 2, scope: !22797)
!22846 = !DILabel(scope: !22797, name: "out", file: !3, line: 2970)
!22847 = !DILocation(line: 2970, column: 1, scope: !22797)
!22848 = !DILocation(line: 2971, column: 9, scope: !22797)
!22849 = !DILocation(line: 2971, column: 2, scope: !22797)
!22850 = distinct !DISubprogram(name: "alloc_all_mem", scope: !3, file: !3, line: 1818, type: !10384, scopeLine: 1819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22851 = !DILocation(line: 445, column: 72, scope: !11595, inlinedAt: !22852)
!22852 = distinct !DILocation(line: 552, column: 10, scope: !11600, inlinedAt: !22853)
!22853 = distinct !DILocation(line: 1877, column: 18, scope: !22850)
!22854 = !DILocation(line: 446, column: 9, scope: !11595, inlinedAt: !22852)
!22855 = !DILocation(line: 446, column: 23, scope: !11595, inlinedAt: !22852)
!22856 = !DILocation(line: 448, column: 8, scope: !11595, inlinedAt: !22852)
!22857 = !DILocation(line: 318, column: 67, scope: !11613, inlinedAt: !22858)
!22858 = distinct !DILocation(line: 553, column: 20, scope: !11600, inlinedAt: !22853)
!22859 = !DILocation(line: 346, column: 58, scope: !11619, inlinedAt: !22860)
!22860 = distinct !DILocation(line: 547, column: 11, scope: !11600, inlinedAt: !22853)
!22861 = !DILocation(line: 472, column: 28, scope: !11625, inlinedAt: !22862)
!22862 = distinct !DILocation(line: 481, column: 9, scope: !11630, inlinedAt: !22863)
!22863 = distinct !DILocation(line: 545, column: 11, scope: !11632, inlinedAt: !22853)
!22864 = !DILocation(line: 472, column: 40, scope: !11625, inlinedAt: !22862)
!22865 = !DILocation(line: 472, column: 60, scope: !11625, inlinedAt: !22862)
!22866 = !DILocation(line: 478, column: 51, scope: !11630, inlinedAt: !22863)
!22867 = !DILocation(line: 478, column: 63, scope: !11630, inlinedAt: !22863)
!22868 = !DILocation(line: 480, column: 15, scope: !11630, inlinedAt: !22863)
!22869 = !DILocation(line: 538, column: 45, scope: !11602, inlinedAt: !22853)
!22870 = !DILocation(line: 538, column: 57, scope: !11602, inlinedAt: !22853)
!22871 = !DILocation(line: 542, column: 16, scope: !11600, inlinedAt: !22853)
!22872 = !DILocalVariable(name: "size", arg: 1, scope: !22873, file: !9681, line: 416, type: !671)
!22873 = distinct !DISubprogram(name: "__kmalloc_node", scope: !9681, file: !9681, line: 416, type: !22874, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22874 = !DISubroutineType(types: !22875)
!22875 = !{!647, !671, !2067, !72}
!22876 = !DILocation(line: 416, column: 52, scope: !22873, inlinedAt: !22877)
!22877 = distinct !DILocation(line: 575, column: 9, scope: !22878, inlinedAt: !22879)
!22878 = distinct !DISubprogram(name: "kmalloc_node", scope: !9681, file: !9681, line: 560, type: !22874, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22879 = distinct !DILocation(line: 1852, column: 10, scope: !22880)
!22880 = distinct !DILexicalBlock(scope: !22881, file: !3, line: 1850, column: 33)
!22881 = distinct !DILexicalBlock(scope: !22882, file: !3, line: 1850, column: 7)
!22882 = distinct !DILexicalBlock(scope: !22883, file: !3, line: 1842, column: 39)
!22883 = distinct !DILexicalBlock(scope: !22884, file: !3, line: 1842, column: 2)
!22884 = distinct !DILexicalBlock(scope: !22850, file: !3, line: 1842, column: 2)
!22885 = !DILocalVariable(name: "flags", arg: 2, scope: !22873, file: !9681, line: 416, type: !2067)
!22886 = !DILocation(line: 416, column: 64, scope: !22873, inlinedAt: !22877)
!22887 = !DILocalVariable(name: "node", arg: 3, scope: !22873, file: !9681, line: 416, type: !72)
!22888 = !DILocation(line: 416, column: 75, scope: !22873, inlinedAt: !22877)
!22889 = !DILocalVariable(name: "s", arg: 1, scope: !22890, file: !9681, line: 421, type: !2348)
!22890 = distinct !DISubprogram(name: "kmem_cache_alloc_node", scope: !9681, file: !9681, line: 421, type: !22891, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22891 = !DISubroutineType(types: !22892)
!22892 = !{!647, !2348, !2067, !72}
!22893 = !DILocation(line: 421, column: 71, scope: !22890, inlinedAt: !22894)
!22894 = distinct !DILocation(line: 459, column: 14, scope: !22895, inlinedAt: !22898)
!22895 = distinct !DISubprogram(name: "kmem_cache_alloc_node_trace", scope: !9681, file: !9681, line: 455, type: !22896, scopeLine: 458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22896 = !DISubroutineType(types: !22897)
!22897 = !{!647, !2348, !2067, !72, !671}
!22898 = distinct !DILocation(line: 570, column: 10, scope: !22899, inlinedAt: !22879)
!22899 = distinct !DILexicalBlock(scope: !22900, file: !9681, line: 564, column: 35)
!22900 = distinct !DILexicalBlock(scope: !22878, file: !9681, line: 563, column: 6)
!22901 = !DILocalVariable(name: "flags", arg: 2, scope: !22890, file: !9681, line: 421, type: !2067)
!22902 = !DILocation(line: 421, column: 80, scope: !22890, inlinedAt: !22894)
!22903 = !DILocalVariable(name: "node", arg: 3, scope: !22890, file: !9681, line: 421, type: !72)
!22904 = !DILocation(line: 421, column: 91, scope: !22890, inlinedAt: !22894)
!22905 = !DILocalVariable(name: "s", arg: 1, scope: !22895, file: !9681, line: 455, type: !2348)
!22906 = !DILocation(line: 455, column: 48, scope: !22895, inlinedAt: !22898)
!22907 = !DILocalVariable(name: "gfpflags", arg: 2, scope: !22895, file: !9681, line: 456, type: !2067)
!22908 = !DILocation(line: 456, column: 16, scope: !22895, inlinedAt: !22898)
!22909 = !DILocalVariable(name: "node", arg: 3, scope: !22895, file: !9681, line: 457, type: !72)
!22910 = !DILocation(line: 457, column: 14, scope: !22895, inlinedAt: !22898)
!22911 = !DILocalVariable(name: "size", arg: 4, scope: !22895, file: !9681, line: 457, type: !671)
!22912 = !DILocation(line: 457, column: 27, scope: !22895, inlinedAt: !22898)
!22913 = !DILocalVariable(name: "ret", scope: !22895, file: !9681, line: 459, type: !647)
!22914 = !DILocation(line: 459, column: 8, scope: !22895, inlinedAt: !22898)
!22915 = !DILocation(line: 318, column: 67, scope: !11613, inlinedAt: !22916)
!22916 = distinct !DILocation(line: 571, column: 20, scope: !22899, inlinedAt: !22879)
!22917 = !DILocation(line: 346, column: 58, scope: !11619, inlinedAt: !22918)
!22918 = distinct !DILocation(line: 565, column: 20, scope: !22899, inlinedAt: !22879)
!22919 = !DILocalVariable(name: "size", arg: 1, scope: !22878, file: !9681, line: 560, type: !671)
!22920 = !DILocation(line: 560, column: 50, scope: !22878, inlinedAt: !22879)
!22921 = !DILocalVariable(name: "flags", arg: 2, scope: !22878, file: !9681, line: 560, type: !2067)
!22922 = !DILocation(line: 560, column: 62, scope: !22878, inlinedAt: !22879)
!22923 = !DILocalVariable(name: "node", arg: 3, scope: !22878, file: !9681, line: 560, type: !72)
!22924 = !DILocation(line: 560, column: 73, scope: !22878, inlinedAt: !22879)
!22925 = !DILocalVariable(name: "i", scope: !22899, file: !9681, line: 565, type: !7)
!22926 = !DILocation(line: 565, column: 16, scope: !22899, inlinedAt: !22879)
!22927 = !DILocation(line: 416, column: 52, scope: !22873, inlinedAt: !22928)
!22928 = distinct !DILocation(line: 575, column: 9, scope: !22878, inlinedAt: !22929)
!22929 = distinct !DILocation(line: 1846, column: 9, scope: !22882)
!22930 = !DILocation(line: 416, column: 64, scope: !22873, inlinedAt: !22928)
!22931 = !DILocation(line: 416, column: 75, scope: !22873, inlinedAt: !22928)
!22932 = !DILocation(line: 421, column: 71, scope: !22890, inlinedAt: !22933)
!22933 = distinct !DILocation(line: 459, column: 14, scope: !22895, inlinedAt: !22934)
!22934 = distinct !DILocation(line: 570, column: 10, scope: !22899, inlinedAt: !22929)
!22935 = !DILocation(line: 421, column: 80, scope: !22890, inlinedAt: !22933)
!22936 = !DILocation(line: 421, column: 91, scope: !22890, inlinedAt: !22933)
!22937 = !DILocation(line: 455, column: 48, scope: !22895, inlinedAt: !22934)
!22938 = !DILocation(line: 456, column: 16, scope: !22895, inlinedAt: !22934)
!22939 = !DILocation(line: 457, column: 14, scope: !22895, inlinedAt: !22934)
!22940 = !DILocation(line: 457, column: 27, scope: !22895, inlinedAt: !22934)
!22941 = !DILocation(line: 459, column: 8, scope: !22895, inlinedAt: !22934)
!22942 = !DILocation(line: 318, column: 67, scope: !11613, inlinedAt: !22943)
!22943 = distinct !DILocation(line: 571, column: 20, scope: !22899, inlinedAt: !22929)
!22944 = !DILocation(line: 346, column: 58, scope: !11619, inlinedAt: !22945)
!22945 = distinct !DILocation(line: 565, column: 20, scope: !22899, inlinedAt: !22929)
!22946 = !DILocation(line: 560, column: 50, scope: !22878, inlinedAt: !22929)
!22947 = !DILocation(line: 560, column: 62, scope: !22878, inlinedAt: !22929)
!22948 = !DILocation(line: 560, column: 73, scope: !22878, inlinedAt: !22929)
!22949 = !DILocation(line: 565, column: 16, scope: !22899, inlinedAt: !22929)
!22950 = !DILocalVariable(name: "v", arg: 1, scope: !22951, file: !15913, line: 39, type: !15948)
!22951 = distinct !DISubprogram(name: "arch_atomic_set", scope: !15913, file: !15913, line: 39, type: !22952, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22952 = !DISubroutineType(types: !22953)
!22953 = !{null, !15948, !72}
!22954 = !DILocation(line: 39, column: 55, scope: !22951, inlinedAt: !22955)
!22955 = distinct !DILocation(line: 46, column: 2, scope: !22956, inlinedAt: !22957)
!22956 = distinct !DISubprogram(name: "atomic_set", scope: !15921, file: !15921, line: 43, type: !22952, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!22957 = distinct !DILocation(line: 1835, column: 2, scope: !22850)
!22958 = !DILocalVariable(name: "i", arg: 2, scope: !22951, file: !15913, line: 39, type: !72)
!22959 = !DILocation(line: 39, column: 62, scope: !22951, inlinedAt: !22955)
!22960 = !DILocation(line: 84, column: 74, scope: !12366, inlinedAt: !22961)
!22961 = distinct !DILocation(line: 45, column: 2, scope: !22956, inlinedAt: !22957)
!22962 = !DILocation(line: 84, column: 84, scope: !12366, inlinedAt: !22961)
!22963 = !DILocalVariable(name: "v", arg: 1, scope: !22956, file: !15921, line: 43, type: !15948)
!22964 = !DILocation(line: 43, column: 22, scope: !22956, inlinedAt: !22957)
!22965 = !DILocalVariable(name: "i", arg: 2, scope: !22956, file: !15921, line: 43, type: !72)
!22966 = !DILocation(line: 43, column: 29, scope: !22956, inlinedAt: !22957)
!22967 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !22968)
!22968 = distinct !DILocation(line: 1829, column: 2, scope: !22969)
!22969 = distinct !DILexicalBlock(scope: !22850, file: !3, line: 1829, column: 2)
!22970 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !22971)
!22971 = distinct !DILocation(line: 1828, column: 2, scope: !22972)
!22972 = distinct !DILexicalBlock(scope: !22850, file: !3, line: 1828, column: 2)
!22973 = !DILocalVariable(name: "tp", arg: 1, scope: !22850, file: !3, line: 1818, type: !10280)
!22974 = !DILocation(line: 1818, column: 40, scope: !22850)
!22975 = !DILocalVariable(name: "netdev", scope: !22850, file: !3, line: 1820, type: !372)
!22976 = !DILocation(line: 1820, column: 21, scope: !22850)
!22977 = !DILocation(line: 1820, column: 30, scope: !22850)
!22978 = !DILocation(line: 1820, column: 34, scope: !22850)
!22979 = !DILocalVariable(name: "intf", scope: !22850, file: !3, line: 1821, type: !10100)
!22980 = !DILocation(line: 1821, column: 24, scope: !22850)
!22981 = !DILocation(line: 1821, column: 31, scope: !22850)
!22982 = !DILocation(line: 1821, column: 35, scope: !22850)
!22983 = !DILocalVariable(name: "alt", scope: !22850, file: !3, line: 1822, type: !10104)
!22984 = !DILocation(line: 1822, column: 29, scope: !22850)
!22985 = !DILocation(line: 1822, column: 35, scope: !22850)
!22986 = !DILocation(line: 1822, column: 41, scope: !22850)
!22987 = !DILocalVariable(name: "ep_intr", scope: !22850, file: !3, line: 1823, type: !10122)
!22988 = !DILocation(line: 1823, column: 28, scope: !22850)
!22989 = !DILocation(line: 1823, column: 38, scope: !22850)
!22990 = !DILocation(line: 1823, column: 43, scope: !22850)
!22991 = !DILocation(line: 1823, column: 52, scope: !22850)
!22992 = !DILocalVariable(name: "node", scope: !22850, file: !3, line: 1824, type: !72)
!22993 = !DILocation(line: 1824, column: 6, scope: !22850)
!22994 = !DILocalVariable(name: "i", scope: !22850, file: !3, line: 1824, type: !72)
!22995 = !DILocation(line: 1824, column: 12, scope: !22850)
!22996 = !DILocation(line: 1826, column: 9, scope: !22850)
!22997 = !DILocation(line: 1826, column: 17, scope: !22850)
!22998 = !DILocation(line: 1826, column: 21, scope: !22850)
!22999 = !DILocation(line: 1826, column: 42, scope: !22850)
!23000 = !DILocation(line: 1826, column: 50, scope: !22850)
!23001 = !DILocation(line: 1826, column: 54, scope: !22850)
!23002 = !DILocation(line: 1826, column: 30, scope: !22850)
!23003 = !DILocation(line: 1826, column: 7, scope: !22850)
!23004 = !DILocation(line: 1828, column: 2, scope: !22850)
!23005 = !DILocation(line: 1828, column: 2, scope: !22972)
!23006 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !22971)
!23007 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !22971)
!23008 = !DILocation(line: 1829, column: 2, scope: !22850)
!23009 = !DILocation(line: 1829, column: 2, scope: !22969)
!23010 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !22968)
!23011 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !22968)
!23012 = !DILocation(line: 1830, column: 18, scope: !22850)
!23013 = !DILocation(line: 1830, column: 22, scope: !22850)
!23014 = !DILocation(line: 1830, column: 2, scope: !22850)
!23015 = !DILocation(line: 1831, column: 18, scope: !22850)
!23016 = !DILocation(line: 1831, column: 22, scope: !22850)
!23017 = !DILocation(line: 1831, column: 2, scope: !22850)
!23018 = !DILocation(line: 1832, column: 18, scope: !22850)
!23019 = !DILocation(line: 1832, column: 22, scope: !22850)
!23020 = !DILocation(line: 1832, column: 2, scope: !22850)
!23021 = !DILocation(line: 1833, column: 23, scope: !22850)
!23022 = !DILocation(line: 1833, column: 27, scope: !22850)
!23023 = !DILocation(line: 1833, column: 2, scope: !22850)
!23024 = !DILocation(line: 1834, column: 23, scope: !22850)
!23025 = !DILocation(line: 1834, column: 27, scope: !22850)
!23026 = !DILocation(line: 1834, column: 2, scope: !22850)
!23027 = !DILocation(line: 1835, column: 14, scope: !22850)
!23028 = !DILocation(line: 1835, column: 18, scope: !22850)
!23029 = !DILocation(line: 45, column: 26, scope: !22956, inlinedAt: !22957)
!23030 = !DILocation(line: 86, column: 20, scope: !12366, inlinedAt: !22961)
!23031 = !DILocation(line: 86, column: 23, scope: !12366, inlinedAt: !22961)
!23032 = !DILocation(line: 86, column: 2, scope: !12366, inlinedAt: !22961)
!23033 = !DILocation(line: 87, column: 2, scope: !12366, inlinedAt: !22961)
!23034 = !DILocation(line: 46, column: 18, scope: !22956, inlinedAt: !22957)
!23035 = !DILocation(line: 46, column: 21, scope: !22956, inlinedAt: !22957)
!23036 = !DILocation(line: 41, column: 2, scope: !23037, inlinedAt: !22955)
!23037 = distinct !DILexicalBlock(scope: !22951, file: !15913, line: 41, column: 2)
!23038 = !DILocation(line: 1837, column: 9, scope: !23039)
!23039 = distinct !DILexicalBlock(scope: !22850, file: !3, line: 1837, column: 2)
!23040 = !DILocation(line: 1837, column: 7, scope: !23039)
!23041 = !DILocation(line: 1837, column: 14, scope: !23042)
!23042 = distinct !DILexicalBlock(scope: !23039, file: !3, line: 1837, column: 2)
!23043 = !DILocation(line: 1837, column: 16, scope: !23042)
!23044 = !DILocation(line: 1837, column: 2, scope: !23039)
!23045 = !DILocation(line: 1838, column: 21, scope: !23046)
!23046 = distinct !DILexicalBlock(scope: !23047, file: !3, line: 1838, column: 7)
!23047 = distinct !DILexicalBlock(scope: !23042, file: !3, line: 1837, column: 39)
!23048 = !DILocation(line: 1838, column: 8, scope: !23046)
!23049 = !DILocation(line: 1838, column: 7, scope: !23047)
!23050 = !DILocation(line: 1839, column: 4, scope: !23046)
!23051 = !DILocation(line: 1840, column: 2, scope: !23047)
!23052 = !DILocation(line: 1837, column: 35, scope: !23042)
!23053 = !DILocation(line: 1837, column: 2, scope: !23042)
!23054 = distinct !{!23054, !23044, !23055}
!23055 = !DILocation(line: 1840, column: 2, scope: !23039)
!23056 = !DILocation(line: 1842, column: 9, scope: !22884)
!23057 = !DILocation(line: 1842, column: 7, scope: !22884)
!23058 = !DILocation(line: 1842, column: 14, scope: !22883)
!23059 = !DILocation(line: 1842, column: 16, scope: !22883)
!23060 = !DILocation(line: 1842, column: 2, scope: !22884)
!23061 = !DILocalVariable(name: "urb", scope: !22882, file: !3, line: 1843, type: !10218)
!23062 = !DILocation(line: 1843, column: 15, scope: !22882)
!23063 = !DILocalVariable(name: "buf", scope: !22882, file: !3, line: 1844, type: !7823)
!23064 = !DILocation(line: 1844, column: 7, scope: !22882)
!23065 = !DILocation(line: 1846, column: 22, scope: !22882)
!23066 = !DILocation(line: 1846, column: 46, scope: !22882)
!23067 = !DILocation(line: 563, column: 27, scope: !22900, inlinedAt: !22929)
!23068 = !DILocation(line: 563, column: 6, scope: !22900, inlinedAt: !22929)
!23069 = !DILocation(line: 563, column: 33, scope: !22900, inlinedAt: !22929)
!23070 = !DILocation(line: 564, column: 3, scope: !22900, inlinedAt: !22929)
!23071 = !DILocation(line: 564, column: 8, scope: !22900, inlinedAt: !22929)
!23072 = !DILocation(line: 563, column: 6, scope: !22878, inlinedAt: !22929)
!23073 = !DILocation(line: 565, column: 34, scope: !22899, inlinedAt: !22929)
!23074 = !DILocation(line: 348, column: 7, scope: !11684, inlinedAt: !22945)
!23075 = !DILocation(line: 348, column: 6, scope: !11619, inlinedAt: !22945)
!23076 = !DILocation(line: 349, column: 3, scope: !11684, inlinedAt: !22945)
!23077 = !DILocation(line: 351, column: 6, scope: !11688, inlinedAt: !22945)
!23078 = !DILocation(line: 351, column: 11, scope: !11688, inlinedAt: !22945)
!23079 = !DILocation(line: 351, column: 6, scope: !11619, inlinedAt: !22945)
!23080 = !DILocation(line: 352, column: 3, scope: !11688, inlinedAt: !22945)
!23081 = !DILocation(line: 354, column: 32, scope: !11693, inlinedAt: !22945)
!23082 = !DILocation(line: 354, column: 37, scope: !11693, inlinedAt: !22945)
!23083 = !DILocation(line: 354, column: 42, scope: !11693, inlinedAt: !22945)
!23084 = !DILocation(line: 354, column: 45, scope: !11693, inlinedAt: !22945)
!23085 = !DILocation(line: 354, column: 50, scope: !11693, inlinedAt: !22945)
!23086 = !DILocation(line: 354, column: 6, scope: !11619, inlinedAt: !22945)
!23087 = !DILocation(line: 355, column: 3, scope: !11693, inlinedAt: !22945)
!23088 = !DILocation(line: 356, column: 32, scope: !11701, inlinedAt: !22945)
!23089 = !DILocation(line: 356, column: 37, scope: !11701, inlinedAt: !22945)
!23090 = !DILocation(line: 356, column: 43, scope: !11701, inlinedAt: !22945)
!23091 = !DILocation(line: 356, column: 46, scope: !11701, inlinedAt: !22945)
!23092 = !DILocation(line: 356, column: 51, scope: !11701, inlinedAt: !22945)
!23093 = !DILocation(line: 356, column: 6, scope: !11619, inlinedAt: !22945)
!23094 = !DILocation(line: 357, column: 3, scope: !11701, inlinedAt: !22945)
!23095 = !DILocation(line: 358, column: 6, scope: !11709, inlinedAt: !22945)
!23096 = !DILocation(line: 358, column: 11, scope: !11709, inlinedAt: !22945)
!23097 = !DILocation(line: 358, column: 6, scope: !11619, inlinedAt: !22945)
!23098 = !DILocation(line: 358, column: 26, scope: !11709, inlinedAt: !22945)
!23099 = !DILocation(line: 359, column: 6, scope: !11714, inlinedAt: !22945)
!23100 = !DILocation(line: 359, column: 11, scope: !11714, inlinedAt: !22945)
!23101 = !DILocation(line: 359, column: 6, scope: !11619, inlinedAt: !22945)
!23102 = !DILocation(line: 359, column: 26, scope: !11714, inlinedAt: !22945)
!23103 = !DILocation(line: 360, column: 6, scope: !11719, inlinedAt: !22945)
!23104 = !DILocation(line: 360, column: 11, scope: !11719, inlinedAt: !22945)
!23105 = !DILocation(line: 360, column: 6, scope: !11619, inlinedAt: !22945)
!23106 = !DILocation(line: 360, column: 26, scope: !11719, inlinedAt: !22945)
!23107 = !DILocation(line: 361, column: 6, scope: !11724, inlinedAt: !22945)
!23108 = !DILocation(line: 361, column: 11, scope: !11724, inlinedAt: !22945)
!23109 = !DILocation(line: 361, column: 6, scope: !11619, inlinedAt: !22945)
!23110 = !DILocation(line: 361, column: 26, scope: !11724, inlinedAt: !22945)
!23111 = !DILocation(line: 362, column: 6, scope: !11729, inlinedAt: !22945)
!23112 = !DILocation(line: 362, column: 11, scope: !11729, inlinedAt: !22945)
!23113 = !DILocation(line: 362, column: 6, scope: !11619, inlinedAt: !22945)
!23114 = !DILocation(line: 362, column: 26, scope: !11729, inlinedAt: !22945)
!23115 = !DILocation(line: 363, column: 6, scope: !11734, inlinedAt: !22945)
!23116 = !DILocation(line: 363, column: 11, scope: !11734, inlinedAt: !22945)
!23117 = !DILocation(line: 363, column: 6, scope: !11619, inlinedAt: !22945)
!23118 = !DILocation(line: 363, column: 26, scope: !11734, inlinedAt: !22945)
!23119 = !DILocation(line: 364, column: 6, scope: !11739, inlinedAt: !22945)
!23120 = !DILocation(line: 364, column: 11, scope: !11739, inlinedAt: !22945)
!23121 = !DILocation(line: 364, column: 6, scope: !11619, inlinedAt: !22945)
!23122 = !DILocation(line: 364, column: 26, scope: !11739, inlinedAt: !22945)
!23123 = !DILocation(line: 365, column: 6, scope: !11744, inlinedAt: !22945)
!23124 = !DILocation(line: 365, column: 11, scope: !11744, inlinedAt: !22945)
!23125 = !DILocation(line: 365, column: 6, scope: !11619, inlinedAt: !22945)
!23126 = !DILocation(line: 365, column: 26, scope: !11744, inlinedAt: !22945)
!23127 = !DILocation(line: 366, column: 6, scope: !11749, inlinedAt: !22945)
!23128 = !DILocation(line: 366, column: 11, scope: !11749, inlinedAt: !22945)
!23129 = !DILocation(line: 366, column: 6, scope: !11619, inlinedAt: !22945)
!23130 = !DILocation(line: 366, column: 26, scope: !11749, inlinedAt: !22945)
!23131 = !DILocation(line: 367, column: 6, scope: !11754, inlinedAt: !22945)
!23132 = !DILocation(line: 367, column: 11, scope: !11754, inlinedAt: !22945)
!23133 = !DILocation(line: 367, column: 6, scope: !11619, inlinedAt: !22945)
!23134 = !DILocation(line: 367, column: 26, scope: !11754, inlinedAt: !22945)
!23135 = !DILocation(line: 368, column: 6, scope: !11759, inlinedAt: !22945)
!23136 = !DILocation(line: 368, column: 11, scope: !11759, inlinedAt: !22945)
!23137 = !DILocation(line: 368, column: 6, scope: !11619, inlinedAt: !22945)
!23138 = !DILocation(line: 368, column: 26, scope: !11759, inlinedAt: !22945)
!23139 = !DILocation(line: 369, column: 6, scope: !11764, inlinedAt: !22945)
!23140 = !DILocation(line: 369, column: 11, scope: !11764, inlinedAt: !22945)
!23141 = !DILocation(line: 369, column: 6, scope: !11619, inlinedAt: !22945)
!23142 = !DILocation(line: 369, column: 26, scope: !11764, inlinedAt: !22945)
!23143 = !DILocation(line: 370, column: 6, scope: !11769, inlinedAt: !22945)
!23144 = !DILocation(line: 370, column: 11, scope: !11769, inlinedAt: !22945)
!23145 = !DILocation(line: 370, column: 6, scope: !11619, inlinedAt: !22945)
!23146 = !DILocation(line: 370, column: 26, scope: !11769, inlinedAt: !22945)
!23147 = !DILocation(line: 371, column: 6, scope: !11774, inlinedAt: !22945)
!23148 = !DILocation(line: 371, column: 11, scope: !11774, inlinedAt: !22945)
!23149 = !DILocation(line: 371, column: 6, scope: !11619, inlinedAt: !22945)
!23150 = !DILocation(line: 371, column: 26, scope: !11774, inlinedAt: !22945)
!23151 = !DILocation(line: 372, column: 6, scope: !11779, inlinedAt: !22945)
!23152 = !DILocation(line: 372, column: 11, scope: !11779, inlinedAt: !22945)
!23153 = !DILocation(line: 372, column: 6, scope: !11619, inlinedAt: !22945)
!23154 = !DILocation(line: 372, column: 26, scope: !11779, inlinedAt: !22945)
!23155 = !DILocation(line: 373, column: 6, scope: !11784, inlinedAt: !22945)
!23156 = !DILocation(line: 373, column: 11, scope: !11784, inlinedAt: !22945)
!23157 = !DILocation(line: 373, column: 6, scope: !11619, inlinedAt: !22945)
!23158 = !DILocation(line: 373, column: 26, scope: !11784, inlinedAt: !22945)
!23159 = !DILocation(line: 374, column: 6, scope: !11789, inlinedAt: !22945)
!23160 = !DILocation(line: 374, column: 11, scope: !11789, inlinedAt: !22945)
!23161 = !DILocation(line: 374, column: 6, scope: !11619, inlinedAt: !22945)
!23162 = !DILocation(line: 374, column: 26, scope: !11789, inlinedAt: !22945)
!23163 = !DILocation(line: 375, column: 6, scope: !11794, inlinedAt: !22945)
!23164 = !DILocation(line: 375, column: 11, scope: !11794, inlinedAt: !22945)
!23165 = !DILocation(line: 375, column: 6, scope: !11619, inlinedAt: !22945)
!23166 = !DILocation(line: 375, column: 27, scope: !11794, inlinedAt: !22945)
!23167 = !DILocation(line: 376, column: 6, scope: !11799, inlinedAt: !22945)
!23168 = !DILocation(line: 376, column: 11, scope: !11799, inlinedAt: !22945)
!23169 = !DILocation(line: 376, column: 6, scope: !11619, inlinedAt: !22945)
!23170 = !DILocation(line: 376, column: 32, scope: !11799, inlinedAt: !22945)
!23171 = !DILocation(line: 377, column: 6, scope: !11804, inlinedAt: !22945)
!23172 = !DILocation(line: 377, column: 11, scope: !11804, inlinedAt: !22945)
!23173 = !DILocation(line: 377, column: 6, scope: !11619, inlinedAt: !22945)
!23174 = !DILocation(line: 377, column: 32, scope: !11804, inlinedAt: !22945)
!23175 = !DILocation(line: 378, column: 6, scope: !11809, inlinedAt: !22945)
!23176 = !DILocation(line: 378, column: 11, scope: !11809, inlinedAt: !22945)
!23177 = !DILocation(line: 378, column: 6, scope: !11619, inlinedAt: !22945)
!23178 = !DILocation(line: 378, column: 32, scope: !11809, inlinedAt: !22945)
!23179 = !DILocation(line: 379, column: 6, scope: !11814, inlinedAt: !22945)
!23180 = !DILocation(line: 379, column: 11, scope: !11814, inlinedAt: !22945)
!23181 = !DILocation(line: 379, column: 6, scope: !11619, inlinedAt: !22945)
!23182 = !DILocation(line: 379, column: 33, scope: !11814, inlinedAt: !22945)
!23183 = !DILocation(line: 380, column: 6, scope: !11819, inlinedAt: !22945)
!23184 = !DILocation(line: 380, column: 11, scope: !11819, inlinedAt: !22945)
!23185 = !DILocation(line: 380, column: 6, scope: !11619, inlinedAt: !22945)
!23186 = !DILocation(line: 380, column: 33, scope: !11819, inlinedAt: !22945)
!23187 = !DILocation(line: 381, column: 6, scope: !11824, inlinedAt: !22945)
!23188 = !DILocation(line: 381, column: 11, scope: !11824, inlinedAt: !22945)
!23189 = !DILocation(line: 381, column: 6, scope: !11619, inlinedAt: !22945)
!23190 = !DILocation(line: 381, column: 33, scope: !11824, inlinedAt: !22945)
!23191 = !DILocation(line: 382, column: 2, scope: !11829, inlinedAt: !22945)
!23192 = !DILocation(line: 382, column: 2, scope: !11833, inlinedAt: !22945)
!23193 = !DILocation(line: 382, column: 2, scope: !11834, inlinedAt: !22945)
!23194 = !DILocation(line: 386, column: 1, scope: !11619, inlinedAt: !22945)
!23195 = !DILocation(line: 567, column: 8, scope: !23196, inlinedAt: !22929)
!23196 = distinct !DILexicalBlock(scope: !22899, file: !9681, line: 567, column: 7)
!23197 = !DILocation(line: 567, column: 7, scope: !22899, inlinedAt: !22929)
!23198 = !DILocation(line: 568, column: 4, scope: !23196, inlinedAt: !22929)
!23199 = !DILocation(line: 571, column: 33, scope: !22899, inlinedAt: !22929)
!23200 = !DILocation(line: 325, column: 6, scope: !11845, inlinedAt: !22943)
!23201 = !DILocation(line: 325, column: 6, scope: !11613, inlinedAt: !22943)
!23202 = !DILocation(line: 326, column: 3, scope: !11845, inlinedAt: !22943)
!23203 = !DILocation(line: 332, column: 9, scope: !11613, inlinedAt: !22943)
!23204 = !DILocation(line: 332, column: 15, scope: !11613, inlinedAt: !22943)
!23205 = !DILocation(line: 332, column: 2, scope: !11613, inlinedAt: !22943)
!23206 = !DILocation(line: 336, column: 1, scope: !11613, inlinedAt: !22943)
!23207 = !DILocation(line: 571, column: 5, scope: !22899, inlinedAt: !22929)
!23208 = !DILocation(line: 571, column: 41, scope: !22899, inlinedAt: !22929)
!23209 = !DILocation(line: 572, column: 7, scope: !22899, inlinedAt: !22929)
!23210 = !DILocation(line: 572, column: 14, scope: !22899, inlinedAt: !22929)
!23211 = !DILocation(line: 572, column: 20, scope: !22899, inlinedAt: !22929)
!23212 = !DILocation(line: 459, column: 36, scope: !22895, inlinedAt: !22934)
!23213 = !DILocation(line: 459, column: 39, scope: !22895, inlinedAt: !22934)
!23214 = !DILocation(line: 459, column: 49, scope: !22895, inlinedAt: !22934)
!23215 = !DILocation(line: 423, column: 26, scope: !22890, inlinedAt: !22933)
!23216 = !DILocation(line: 423, column: 29, scope: !22890, inlinedAt: !22933)
!23217 = !DILocation(line: 423, column: 9, scope: !22890, inlinedAt: !22933)
!23218 = !DILocation(line: 461, column: 22, scope: !22895, inlinedAt: !22934)
!23219 = !DILocation(line: 461, column: 25, scope: !22895, inlinedAt: !22934)
!23220 = !DILocation(line: 461, column: 30, scope: !22895, inlinedAt: !22934)
!23221 = !DILocation(line: 461, column: 36, scope: !22895, inlinedAt: !22934)
!23222 = !DILocation(line: 461, column: 8, scope: !22895, inlinedAt: !22934)
!23223 = !DILocation(line: 461, column: 6, scope: !22895, inlinedAt: !22934)
!23224 = !DILocation(line: 462, column: 9, scope: !22895, inlinedAt: !22934)
!23225 = !DILocation(line: 570, column: 3, scope: !22899, inlinedAt: !22929)
!23226 = !DILocation(line: 575, column: 24, scope: !22878, inlinedAt: !22929)
!23227 = !DILocation(line: 575, column: 30, scope: !22878, inlinedAt: !22929)
!23228 = !DILocation(line: 575, column: 37, scope: !22878, inlinedAt: !22929)
!23229 = !DILocation(line: 418, column: 19, scope: !22873, inlinedAt: !22928)
!23230 = !DILocation(line: 418, column: 25, scope: !22873, inlinedAt: !22928)
!23231 = !DILocation(line: 418, column: 9, scope: !22873, inlinedAt: !22928)
!23232 = !DILocation(line: 575, column: 2, scope: !22878, inlinedAt: !22929)
!23233 = !DILocation(line: 576, column: 1, scope: !22878, inlinedAt: !22929)
!23234 = !DILocation(line: 1846, column: 7, scope: !22882)
!23235 = !DILocation(line: 1847, column: 8, scope: !23236)
!23236 = distinct !DILexicalBlock(scope: !22882, file: !3, line: 1847, column: 7)
!23237 = !DILocation(line: 1847, column: 7, scope: !22882)
!23238 = !DILocation(line: 1848, column: 4, scope: !23236)
!23239 = !DILocation(line: 1850, column: 7, scope: !22881)
!23240 = !DILocation(line: 1850, column: 27, scope: !22881)
!23241 = !DILocation(line: 1850, column: 14, scope: !22881)
!23242 = !DILocation(line: 1850, column: 11, scope: !22881)
!23243 = !DILocation(line: 1850, column: 7, scope: !22882)
!23244 = !DILocation(line: 1851, column: 10, scope: !22880)
!23245 = !DILocation(line: 1851, column: 4, scope: !22880)
!23246 = !DILocation(line: 1852, column: 23, scope: !22880)
!23247 = !DILocation(line: 1852, column: 34, scope: !22880)
!23248 = !DILocation(line: 1853, column: 9, scope: !22880)
!23249 = !DILocation(line: 563, column: 27, scope: !22900, inlinedAt: !22879)
!23250 = !DILocation(line: 563, column: 6, scope: !22900, inlinedAt: !22879)
!23251 = !DILocation(line: 563, column: 33, scope: !22900, inlinedAt: !22879)
!23252 = !DILocation(line: 564, column: 3, scope: !22900, inlinedAt: !22879)
!23253 = !DILocation(line: 564, column: 8, scope: !22900, inlinedAt: !22879)
!23254 = !DILocation(line: 563, column: 6, scope: !22878, inlinedAt: !22879)
!23255 = !DILocation(line: 565, column: 34, scope: !22899, inlinedAt: !22879)
!23256 = !DILocation(line: 348, column: 7, scope: !11684, inlinedAt: !22918)
!23257 = !DILocation(line: 348, column: 6, scope: !11619, inlinedAt: !22918)
!23258 = !DILocation(line: 349, column: 3, scope: !11684, inlinedAt: !22918)
!23259 = !DILocation(line: 351, column: 6, scope: !11688, inlinedAt: !22918)
!23260 = !DILocation(line: 351, column: 11, scope: !11688, inlinedAt: !22918)
!23261 = !DILocation(line: 351, column: 6, scope: !11619, inlinedAt: !22918)
!23262 = !DILocation(line: 352, column: 3, scope: !11688, inlinedAt: !22918)
!23263 = !DILocation(line: 354, column: 32, scope: !11693, inlinedAt: !22918)
!23264 = !DILocation(line: 354, column: 37, scope: !11693, inlinedAt: !22918)
!23265 = !DILocation(line: 354, column: 42, scope: !11693, inlinedAt: !22918)
!23266 = !DILocation(line: 354, column: 45, scope: !11693, inlinedAt: !22918)
!23267 = !DILocation(line: 354, column: 50, scope: !11693, inlinedAt: !22918)
!23268 = !DILocation(line: 354, column: 6, scope: !11619, inlinedAt: !22918)
!23269 = !DILocation(line: 355, column: 3, scope: !11693, inlinedAt: !22918)
!23270 = !DILocation(line: 356, column: 32, scope: !11701, inlinedAt: !22918)
!23271 = !DILocation(line: 356, column: 37, scope: !11701, inlinedAt: !22918)
!23272 = !DILocation(line: 356, column: 43, scope: !11701, inlinedAt: !22918)
!23273 = !DILocation(line: 356, column: 46, scope: !11701, inlinedAt: !22918)
!23274 = !DILocation(line: 356, column: 51, scope: !11701, inlinedAt: !22918)
!23275 = !DILocation(line: 356, column: 6, scope: !11619, inlinedAt: !22918)
!23276 = !DILocation(line: 357, column: 3, scope: !11701, inlinedAt: !22918)
!23277 = !DILocation(line: 358, column: 6, scope: !11709, inlinedAt: !22918)
!23278 = !DILocation(line: 358, column: 11, scope: !11709, inlinedAt: !22918)
!23279 = !DILocation(line: 358, column: 6, scope: !11619, inlinedAt: !22918)
!23280 = !DILocation(line: 358, column: 26, scope: !11709, inlinedAt: !22918)
!23281 = !DILocation(line: 359, column: 6, scope: !11714, inlinedAt: !22918)
!23282 = !DILocation(line: 359, column: 11, scope: !11714, inlinedAt: !22918)
!23283 = !DILocation(line: 359, column: 6, scope: !11619, inlinedAt: !22918)
!23284 = !DILocation(line: 359, column: 26, scope: !11714, inlinedAt: !22918)
!23285 = !DILocation(line: 360, column: 6, scope: !11719, inlinedAt: !22918)
!23286 = !DILocation(line: 360, column: 11, scope: !11719, inlinedAt: !22918)
!23287 = !DILocation(line: 360, column: 6, scope: !11619, inlinedAt: !22918)
!23288 = !DILocation(line: 360, column: 26, scope: !11719, inlinedAt: !22918)
!23289 = !DILocation(line: 361, column: 6, scope: !11724, inlinedAt: !22918)
!23290 = !DILocation(line: 361, column: 11, scope: !11724, inlinedAt: !22918)
!23291 = !DILocation(line: 361, column: 6, scope: !11619, inlinedAt: !22918)
!23292 = !DILocation(line: 361, column: 26, scope: !11724, inlinedAt: !22918)
!23293 = !DILocation(line: 362, column: 6, scope: !11729, inlinedAt: !22918)
!23294 = !DILocation(line: 362, column: 11, scope: !11729, inlinedAt: !22918)
!23295 = !DILocation(line: 362, column: 6, scope: !11619, inlinedAt: !22918)
!23296 = !DILocation(line: 362, column: 26, scope: !11729, inlinedAt: !22918)
!23297 = !DILocation(line: 363, column: 6, scope: !11734, inlinedAt: !22918)
!23298 = !DILocation(line: 363, column: 11, scope: !11734, inlinedAt: !22918)
!23299 = !DILocation(line: 363, column: 6, scope: !11619, inlinedAt: !22918)
!23300 = !DILocation(line: 363, column: 26, scope: !11734, inlinedAt: !22918)
!23301 = !DILocation(line: 364, column: 6, scope: !11739, inlinedAt: !22918)
!23302 = !DILocation(line: 364, column: 11, scope: !11739, inlinedAt: !22918)
!23303 = !DILocation(line: 364, column: 6, scope: !11619, inlinedAt: !22918)
!23304 = !DILocation(line: 364, column: 26, scope: !11739, inlinedAt: !22918)
!23305 = !DILocation(line: 365, column: 6, scope: !11744, inlinedAt: !22918)
!23306 = !DILocation(line: 365, column: 11, scope: !11744, inlinedAt: !22918)
!23307 = !DILocation(line: 365, column: 6, scope: !11619, inlinedAt: !22918)
!23308 = !DILocation(line: 365, column: 26, scope: !11744, inlinedAt: !22918)
!23309 = !DILocation(line: 366, column: 6, scope: !11749, inlinedAt: !22918)
!23310 = !DILocation(line: 366, column: 11, scope: !11749, inlinedAt: !22918)
!23311 = !DILocation(line: 366, column: 6, scope: !11619, inlinedAt: !22918)
!23312 = !DILocation(line: 366, column: 26, scope: !11749, inlinedAt: !22918)
!23313 = !DILocation(line: 367, column: 6, scope: !11754, inlinedAt: !22918)
!23314 = !DILocation(line: 367, column: 11, scope: !11754, inlinedAt: !22918)
!23315 = !DILocation(line: 367, column: 6, scope: !11619, inlinedAt: !22918)
!23316 = !DILocation(line: 367, column: 26, scope: !11754, inlinedAt: !22918)
!23317 = !DILocation(line: 368, column: 6, scope: !11759, inlinedAt: !22918)
!23318 = !DILocation(line: 368, column: 11, scope: !11759, inlinedAt: !22918)
!23319 = !DILocation(line: 368, column: 6, scope: !11619, inlinedAt: !22918)
!23320 = !DILocation(line: 368, column: 26, scope: !11759, inlinedAt: !22918)
!23321 = !DILocation(line: 369, column: 6, scope: !11764, inlinedAt: !22918)
!23322 = !DILocation(line: 369, column: 11, scope: !11764, inlinedAt: !22918)
!23323 = !DILocation(line: 369, column: 6, scope: !11619, inlinedAt: !22918)
!23324 = !DILocation(line: 369, column: 26, scope: !11764, inlinedAt: !22918)
!23325 = !DILocation(line: 370, column: 6, scope: !11769, inlinedAt: !22918)
!23326 = !DILocation(line: 370, column: 11, scope: !11769, inlinedAt: !22918)
!23327 = !DILocation(line: 370, column: 6, scope: !11619, inlinedAt: !22918)
!23328 = !DILocation(line: 370, column: 26, scope: !11769, inlinedAt: !22918)
!23329 = !DILocation(line: 371, column: 6, scope: !11774, inlinedAt: !22918)
!23330 = !DILocation(line: 371, column: 11, scope: !11774, inlinedAt: !22918)
!23331 = !DILocation(line: 371, column: 6, scope: !11619, inlinedAt: !22918)
!23332 = !DILocation(line: 371, column: 26, scope: !11774, inlinedAt: !22918)
!23333 = !DILocation(line: 372, column: 6, scope: !11779, inlinedAt: !22918)
!23334 = !DILocation(line: 372, column: 11, scope: !11779, inlinedAt: !22918)
!23335 = !DILocation(line: 372, column: 6, scope: !11619, inlinedAt: !22918)
!23336 = !DILocation(line: 372, column: 26, scope: !11779, inlinedAt: !22918)
!23337 = !DILocation(line: 373, column: 6, scope: !11784, inlinedAt: !22918)
!23338 = !DILocation(line: 373, column: 11, scope: !11784, inlinedAt: !22918)
!23339 = !DILocation(line: 373, column: 6, scope: !11619, inlinedAt: !22918)
!23340 = !DILocation(line: 373, column: 26, scope: !11784, inlinedAt: !22918)
!23341 = !DILocation(line: 374, column: 6, scope: !11789, inlinedAt: !22918)
!23342 = !DILocation(line: 374, column: 11, scope: !11789, inlinedAt: !22918)
!23343 = !DILocation(line: 374, column: 6, scope: !11619, inlinedAt: !22918)
!23344 = !DILocation(line: 374, column: 26, scope: !11789, inlinedAt: !22918)
!23345 = !DILocation(line: 375, column: 6, scope: !11794, inlinedAt: !22918)
!23346 = !DILocation(line: 375, column: 11, scope: !11794, inlinedAt: !22918)
!23347 = !DILocation(line: 375, column: 6, scope: !11619, inlinedAt: !22918)
!23348 = !DILocation(line: 375, column: 27, scope: !11794, inlinedAt: !22918)
!23349 = !DILocation(line: 376, column: 6, scope: !11799, inlinedAt: !22918)
!23350 = !DILocation(line: 376, column: 11, scope: !11799, inlinedAt: !22918)
!23351 = !DILocation(line: 376, column: 6, scope: !11619, inlinedAt: !22918)
!23352 = !DILocation(line: 376, column: 32, scope: !11799, inlinedAt: !22918)
!23353 = !DILocation(line: 377, column: 6, scope: !11804, inlinedAt: !22918)
!23354 = !DILocation(line: 377, column: 11, scope: !11804, inlinedAt: !22918)
!23355 = !DILocation(line: 377, column: 6, scope: !11619, inlinedAt: !22918)
!23356 = !DILocation(line: 377, column: 32, scope: !11804, inlinedAt: !22918)
!23357 = !DILocation(line: 378, column: 6, scope: !11809, inlinedAt: !22918)
!23358 = !DILocation(line: 378, column: 11, scope: !11809, inlinedAt: !22918)
!23359 = !DILocation(line: 378, column: 6, scope: !11619, inlinedAt: !22918)
!23360 = !DILocation(line: 378, column: 32, scope: !11809, inlinedAt: !22918)
!23361 = !DILocation(line: 379, column: 6, scope: !11814, inlinedAt: !22918)
!23362 = !DILocation(line: 379, column: 11, scope: !11814, inlinedAt: !22918)
!23363 = !DILocation(line: 379, column: 6, scope: !11619, inlinedAt: !22918)
!23364 = !DILocation(line: 379, column: 33, scope: !11814, inlinedAt: !22918)
!23365 = !DILocation(line: 380, column: 6, scope: !11819, inlinedAt: !22918)
!23366 = !DILocation(line: 380, column: 11, scope: !11819, inlinedAt: !22918)
!23367 = !DILocation(line: 380, column: 6, scope: !11619, inlinedAt: !22918)
!23368 = !DILocation(line: 380, column: 33, scope: !11819, inlinedAt: !22918)
!23369 = !DILocation(line: 381, column: 6, scope: !11824, inlinedAt: !22918)
!23370 = !DILocation(line: 381, column: 11, scope: !11824, inlinedAt: !22918)
!23371 = !DILocation(line: 381, column: 6, scope: !11619, inlinedAt: !22918)
!23372 = !DILocation(line: 381, column: 33, scope: !11824, inlinedAt: !22918)
!23373 = !DILocation(line: 382, column: 2, scope: !11829, inlinedAt: !22918)
!23374 = !DILocation(line: 382, column: 2, scope: !11833, inlinedAt: !22918)
!23375 = !DILocation(line: 382, column: 2, scope: !11834, inlinedAt: !22918)
!23376 = !DILocation(line: 386, column: 1, scope: !11619, inlinedAt: !22918)
!23377 = !DILocation(line: 567, column: 8, scope: !23196, inlinedAt: !22879)
!23378 = !DILocation(line: 567, column: 7, scope: !22899, inlinedAt: !22879)
!23379 = !DILocation(line: 568, column: 4, scope: !23196, inlinedAt: !22879)
!23380 = !DILocation(line: 571, column: 33, scope: !22899, inlinedAt: !22879)
!23381 = !DILocation(line: 325, column: 6, scope: !11845, inlinedAt: !22916)
!23382 = !DILocation(line: 325, column: 6, scope: !11613, inlinedAt: !22916)
!23383 = !DILocation(line: 326, column: 3, scope: !11845, inlinedAt: !22916)
!23384 = !DILocation(line: 332, column: 9, scope: !11613, inlinedAt: !22916)
!23385 = !DILocation(line: 332, column: 15, scope: !11613, inlinedAt: !22916)
!23386 = !DILocation(line: 332, column: 2, scope: !11613, inlinedAt: !22916)
!23387 = !DILocation(line: 336, column: 1, scope: !11613, inlinedAt: !22916)
!23388 = !DILocation(line: 571, column: 5, scope: !22899, inlinedAt: !22879)
!23389 = !DILocation(line: 571, column: 41, scope: !22899, inlinedAt: !22879)
!23390 = !DILocation(line: 572, column: 7, scope: !22899, inlinedAt: !22879)
!23391 = !DILocation(line: 572, column: 14, scope: !22899, inlinedAt: !22879)
!23392 = !DILocation(line: 572, column: 20, scope: !22899, inlinedAt: !22879)
!23393 = !DILocation(line: 459, column: 36, scope: !22895, inlinedAt: !22898)
!23394 = !DILocation(line: 459, column: 39, scope: !22895, inlinedAt: !22898)
!23395 = !DILocation(line: 459, column: 49, scope: !22895, inlinedAt: !22898)
!23396 = !DILocation(line: 423, column: 26, scope: !22890, inlinedAt: !22894)
!23397 = !DILocation(line: 423, column: 29, scope: !22890, inlinedAt: !22894)
!23398 = !DILocation(line: 423, column: 9, scope: !22890, inlinedAt: !22894)
!23399 = !DILocation(line: 461, column: 22, scope: !22895, inlinedAt: !22898)
!23400 = !DILocation(line: 461, column: 25, scope: !22895, inlinedAt: !22898)
!23401 = !DILocation(line: 461, column: 30, scope: !22895, inlinedAt: !22898)
!23402 = !DILocation(line: 461, column: 36, scope: !22895, inlinedAt: !22898)
!23403 = !DILocation(line: 461, column: 8, scope: !22895, inlinedAt: !22898)
!23404 = !DILocation(line: 461, column: 6, scope: !22895, inlinedAt: !22898)
!23405 = !DILocation(line: 462, column: 9, scope: !22895, inlinedAt: !22898)
!23406 = !DILocation(line: 570, column: 3, scope: !22899, inlinedAt: !22879)
!23407 = !DILocation(line: 575, column: 24, scope: !22878, inlinedAt: !22879)
!23408 = !DILocation(line: 575, column: 30, scope: !22878, inlinedAt: !22879)
!23409 = !DILocation(line: 575, column: 37, scope: !22878, inlinedAt: !22879)
!23410 = !DILocation(line: 418, column: 19, scope: !22873, inlinedAt: !22877)
!23411 = !DILocation(line: 418, column: 25, scope: !22873, inlinedAt: !22877)
!23412 = !DILocation(line: 418, column: 9, scope: !22873, inlinedAt: !22877)
!23413 = !DILocation(line: 575, column: 2, scope: !22878, inlinedAt: !22879)
!23414 = !DILocation(line: 576, column: 1, scope: !22878, inlinedAt: !22879)
!23415 = !DILocation(line: 1852, column: 8, scope: !22880)
!23416 = !DILocation(line: 1854, column: 9, scope: !23417)
!23417 = distinct !DILexicalBlock(scope: !22880, file: !3, line: 1854, column: 8)
!23418 = !DILocation(line: 1854, column: 8, scope: !22880)
!23419 = !DILocation(line: 1855, column: 5, scope: !23417)
!23420 = !DILocation(line: 1856, column: 3, scope: !22880)
!23421 = !DILocation(line: 1858, column: 9, scope: !22882)
!23422 = !DILocation(line: 1858, column: 7, scope: !22882)
!23423 = !DILocation(line: 1859, column: 8, scope: !23424)
!23424 = distinct !DILexicalBlock(scope: !22882, file: !3, line: 1859, column: 7)
!23425 = !DILocation(line: 1859, column: 7, scope: !22882)
!23426 = !DILocation(line: 1860, column: 10, scope: !23427)
!23427 = distinct !DILexicalBlock(scope: !23424, file: !3, line: 1859, column: 13)
!23428 = !DILocation(line: 1860, column: 4, scope: !23427)
!23429 = !DILocation(line: 1861, column: 4, scope: !23427)
!23430 = !DILocation(line: 1864, column: 19, scope: !22882)
!23431 = !DILocation(line: 1864, column: 23, scope: !22882)
!23432 = !DILocation(line: 1864, column: 31, scope: !22882)
!23433 = !DILocation(line: 1864, column: 34, scope: !22882)
!23434 = !DILocation(line: 1864, column: 3, scope: !22882)
!23435 = !DILocation(line: 1865, column: 28, scope: !22882)
!23436 = !DILocation(line: 1865, column: 3, scope: !22882)
!23437 = !DILocation(line: 1865, column: 7, scope: !22882)
!23438 = !DILocation(line: 1865, column: 15, scope: !22882)
!23439 = !DILocation(line: 1865, column: 18, scope: !22882)
!23440 = !DILocation(line: 1865, column: 26, scope: !22882)
!23441 = !DILocation(line: 1866, column: 24, scope: !22882)
!23442 = !DILocation(line: 1866, column: 3, scope: !22882)
!23443 = !DILocation(line: 1866, column: 7, scope: !22882)
!23444 = !DILocation(line: 1866, column: 15, scope: !22882)
!23445 = !DILocation(line: 1866, column: 18, scope: !22882)
!23446 = !DILocation(line: 1866, column: 22, scope: !22882)
!23447 = !DILocation(line: 1867, column: 27, scope: !22882)
!23448 = !DILocation(line: 1867, column: 3, scope: !22882)
!23449 = !DILocation(line: 1867, column: 7, scope: !22882)
!23450 = !DILocation(line: 1867, column: 15, scope: !22882)
!23451 = !DILocation(line: 1867, column: 18, scope: !22882)
!23452 = !DILocation(line: 1867, column: 25, scope: !22882)
!23453 = !DILocation(line: 1868, column: 38, scope: !22882)
!23454 = !DILocation(line: 1868, column: 25, scope: !22882)
!23455 = !DILocation(line: 1868, column: 3, scope: !22882)
!23456 = !DILocation(line: 1868, column: 7, scope: !22882)
!23457 = !DILocation(line: 1868, column: 15, scope: !22882)
!23458 = !DILocation(line: 1868, column: 18, scope: !22882)
!23459 = !DILocation(line: 1868, column: 23, scope: !22882)
!23460 = !DILocation(line: 1870, column: 18, scope: !22882)
!23461 = !DILocation(line: 1870, column: 22, scope: !22882)
!23462 = !DILocation(line: 1870, column: 30, scope: !22882)
!23463 = !DILocation(line: 1870, column: 33, scope: !22882)
!23464 = !DILocation(line: 1870, column: 40, scope: !22882)
!23465 = !DILocation(line: 1870, column: 44, scope: !22882)
!23466 = !DILocation(line: 1870, column: 3, scope: !22882)
!23467 = !DILocation(line: 1871, column: 2, scope: !22882)
!23468 = !DILocation(line: 1842, column: 35, scope: !22883)
!23469 = !DILocation(line: 1842, column: 2, scope: !22883)
!23470 = distinct !{!23470, !23060, !23471}
!23471 = !DILocation(line: 1871, column: 2, scope: !22884)
!23472 = !DILocation(line: 1873, column: 17, scope: !22850)
!23473 = !DILocation(line: 1873, column: 2, scope: !22850)
!23474 = !DILocation(line: 1873, column: 6, scope: !22850)
!23475 = !DILocation(line: 1873, column: 15, scope: !22850)
!23476 = !DILocation(line: 1874, column: 7, scope: !23477)
!23477 = distinct !DILexicalBlock(scope: !22850, file: !3, line: 1874, column: 6)
!23478 = !DILocation(line: 1874, column: 11, scope: !23477)
!23479 = !DILocation(line: 1874, column: 6, scope: !22850)
!23480 = !DILocation(line: 1875, column: 3, scope: !23477)
!23481 = !DILocation(line: 540, column: 27, scope: !11601, inlinedAt: !22853)
!23482 = !DILocation(line: 540, column: 6, scope: !11601, inlinedAt: !22853)
!23483 = !DILocation(line: 540, column: 6, scope: !11602, inlinedAt: !22853)
!23484 = !DILocation(line: 544, column: 7, scope: !11632, inlinedAt: !22853)
!23485 = !DILocation(line: 544, column: 12, scope: !11632, inlinedAt: !22853)
!23486 = !DILocation(line: 544, column: 7, scope: !11600, inlinedAt: !22853)
!23487 = !DILocation(line: 545, column: 25, scope: !11632, inlinedAt: !22853)
!23488 = !DILocation(line: 545, column: 31, scope: !11632, inlinedAt: !22853)
!23489 = !DILocation(line: 480, column: 33, scope: !11630, inlinedAt: !22863)
!23490 = !DILocation(line: 480, column: 23, scope: !11630, inlinedAt: !22863)
!23491 = !DILocation(line: 481, column: 29, scope: !11630, inlinedAt: !22863)
!23492 = !DILocation(line: 481, column: 35, scope: !11630, inlinedAt: !22863)
!23493 = !DILocation(line: 481, column: 42, scope: !11630, inlinedAt: !22863)
!23494 = !DILocation(line: 474, column: 23, scope: !11625, inlinedAt: !22862)
!23495 = !DILocation(line: 474, column: 29, scope: !11625, inlinedAt: !22862)
!23496 = !DILocation(line: 474, column: 36, scope: !11625, inlinedAt: !22862)
!23497 = !DILocation(line: 474, column: 9, scope: !11625, inlinedAt: !22862)
!23498 = !DILocation(line: 545, column: 4, scope: !11632, inlinedAt: !22853)
!23499 = !DILocation(line: 547, column: 25, scope: !11600, inlinedAt: !22853)
!23500 = !DILocation(line: 348, column: 7, scope: !11684, inlinedAt: !22860)
!23501 = !DILocation(line: 348, column: 6, scope: !11619, inlinedAt: !22860)
!23502 = !DILocation(line: 349, column: 3, scope: !11684, inlinedAt: !22860)
!23503 = !DILocation(line: 351, column: 6, scope: !11688, inlinedAt: !22860)
!23504 = !DILocation(line: 351, column: 11, scope: !11688, inlinedAt: !22860)
!23505 = !DILocation(line: 351, column: 6, scope: !11619, inlinedAt: !22860)
!23506 = !DILocation(line: 352, column: 3, scope: !11688, inlinedAt: !22860)
!23507 = !DILocation(line: 354, column: 32, scope: !11693, inlinedAt: !22860)
!23508 = !DILocation(line: 354, column: 37, scope: !11693, inlinedAt: !22860)
!23509 = !DILocation(line: 354, column: 42, scope: !11693, inlinedAt: !22860)
!23510 = !DILocation(line: 354, column: 45, scope: !11693, inlinedAt: !22860)
!23511 = !DILocation(line: 354, column: 50, scope: !11693, inlinedAt: !22860)
!23512 = !DILocation(line: 354, column: 6, scope: !11619, inlinedAt: !22860)
!23513 = !DILocation(line: 355, column: 3, scope: !11693, inlinedAt: !22860)
!23514 = !DILocation(line: 356, column: 32, scope: !11701, inlinedAt: !22860)
!23515 = !DILocation(line: 356, column: 37, scope: !11701, inlinedAt: !22860)
!23516 = !DILocation(line: 356, column: 43, scope: !11701, inlinedAt: !22860)
!23517 = !DILocation(line: 356, column: 46, scope: !11701, inlinedAt: !22860)
!23518 = !DILocation(line: 356, column: 51, scope: !11701, inlinedAt: !22860)
!23519 = !DILocation(line: 356, column: 6, scope: !11619, inlinedAt: !22860)
!23520 = !DILocation(line: 357, column: 3, scope: !11701, inlinedAt: !22860)
!23521 = !DILocation(line: 358, column: 6, scope: !11709, inlinedAt: !22860)
!23522 = !DILocation(line: 358, column: 11, scope: !11709, inlinedAt: !22860)
!23523 = !DILocation(line: 358, column: 6, scope: !11619, inlinedAt: !22860)
!23524 = !DILocation(line: 358, column: 26, scope: !11709, inlinedAt: !22860)
!23525 = !DILocation(line: 359, column: 6, scope: !11714, inlinedAt: !22860)
!23526 = !DILocation(line: 359, column: 11, scope: !11714, inlinedAt: !22860)
!23527 = !DILocation(line: 359, column: 6, scope: !11619, inlinedAt: !22860)
!23528 = !DILocation(line: 359, column: 26, scope: !11714, inlinedAt: !22860)
!23529 = !DILocation(line: 360, column: 6, scope: !11719, inlinedAt: !22860)
!23530 = !DILocation(line: 360, column: 11, scope: !11719, inlinedAt: !22860)
!23531 = !DILocation(line: 360, column: 6, scope: !11619, inlinedAt: !22860)
!23532 = !DILocation(line: 360, column: 26, scope: !11719, inlinedAt: !22860)
!23533 = !DILocation(line: 361, column: 6, scope: !11724, inlinedAt: !22860)
!23534 = !DILocation(line: 361, column: 11, scope: !11724, inlinedAt: !22860)
!23535 = !DILocation(line: 361, column: 6, scope: !11619, inlinedAt: !22860)
!23536 = !DILocation(line: 361, column: 26, scope: !11724, inlinedAt: !22860)
!23537 = !DILocation(line: 362, column: 6, scope: !11729, inlinedAt: !22860)
!23538 = !DILocation(line: 362, column: 11, scope: !11729, inlinedAt: !22860)
!23539 = !DILocation(line: 362, column: 6, scope: !11619, inlinedAt: !22860)
!23540 = !DILocation(line: 362, column: 26, scope: !11729, inlinedAt: !22860)
!23541 = !DILocation(line: 363, column: 6, scope: !11734, inlinedAt: !22860)
!23542 = !DILocation(line: 363, column: 11, scope: !11734, inlinedAt: !22860)
!23543 = !DILocation(line: 363, column: 6, scope: !11619, inlinedAt: !22860)
!23544 = !DILocation(line: 363, column: 26, scope: !11734, inlinedAt: !22860)
!23545 = !DILocation(line: 364, column: 6, scope: !11739, inlinedAt: !22860)
!23546 = !DILocation(line: 364, column: 11, scope: !11739, inlinedAt: !22860)
!23547 = !DILocation(line: 364, column: 6, scope: !11619, inlinedAt: !22860)
!23548 = !DILocation(line: 364, column: 26, scope: !11739, inlinedAt: !22860)
!23549 = !DILocation(line: 365, column: 6, scope: !11744, inlinedAt: !22860)
!23550 = !DILocation(line: 365, column: 11, scope: !11744, inlinedAt: !22860)
!23551 = !DILocation(line: 365, column: 6, scope: !11619, inlinedAt: !22860)
!23552 = !DILocation(line: 365, column: 26, scope: !11744, inlinedAt: !22860)
!23553 = !DILocation(line: 366, column: 6, scope: !11749, inlinedAt: !22860)
!23554 = !DILocation(line: 366, column: 11, scope: !11749, inlinedAt: !22860)
!23555 = !DILocation(line: 366, column: 6, scope: !11619, inlinedAt: !22860)
!23556 = !DILocation(line: 366, column: 26, scope: !11749, inlinedAt: !22860)
!23557 = !DILocation(line: 367, column: 6, scope: !11754, inlinedAt: !22860)
!23558 = !DILocation(line: 367, column: 11, scope: !11754, inlinedAt: !22860)
!23559 = !DILocation(line: 367, column: 6, scope: !11619, inlinedAt: !22860)
!23560 = !DILocation(line: 367, column: 26, scope: !11754, inlinedAt: !22860)
!23561 = !DILocation(line: 368, column: 6, scope: !11759, inlinedAt: !22860)
!23562 = !DILocation(line: 368, column: 11, scope: !11759, inlinedAt: !22860)
!23563 = !DILocation(line: 368, column: 6, scope: !11619, inlinedAt: !22860)
!23564 = !DILocation(line: 368, column: 26, scope: !11759, inlinedAt: !22860)
!23565 = !DILocation(line: 369, column: 6, scope: !11764, inlinedAt: !22860)
!23566 = !DILocation(line: 369, column: 11, scope: !11764, inlinedAt: !22860)
!23567 = !DILocation(line: 369, column: 6, scope: !11619, inlinedAt: !22860)
!23568 = !DILocation(line: 369, column: 26, scope: !11764, inlinedAt: !22860)
!23569 = !DILocation(line: 370, column: 6, scope: !11769, inlinedAt: !22860)
!23570 = !DILocation(line: 370, column: 11, scope: !11769, inlinedAt: !22860)
!23571 = !DILocation(line: 370, column: 6, scope: !11619, inlinedAt: !22860)
!23572 = !DILocation(line: 370, column: 26, scope: !11769, inlinedAt: !22860)
!23573 = !DILocation(line: 371, column: 6, scope: !11774, inlinedAt: !22860)
!23574 = !DILocation(line: 371, column: 11, scope: !11774, inlinedAt: !22860)
!23575 = !DILocation(line: 371, column: 6, scope: !11619, inlinedAt: !22860)
!23576 = !DILocation(line: 371, column: 26, scope: !11774, inlinedAt: !22860)
!23577 = !DILocation(line: 372, column: 6, scope: !11779, inlinedAt: !22860)
!23578 = !DILocation(line: 372, column: 11, scope: !11779, inlinedAt: !22860)
!23579 = !DILocation(line: 372, column: 6, scope: !11619, inlinedAt: !22860)
!23580 = !DILocation(line: 372, column: 26, scope: !11779, inlinedAt: !22860)
!23581 = !DILocation(line: 373, column: 6, scope: !11784, inlinedAt: !22860)
!23582 = !DILocation(line: 373, column: 11, scope: !11784, inlinedAt: !22860)
!23583 = !DILocation(line: 373, column: 6, scope: !11619, inlinedAt: !22860)
!23584 = !DILocation(line: 373, column: 26, scope: !11784, inlinedAt: !22860)
!23585 = !DILocation(line: 374, column: 6, scope: !11789, inlinedAt: !22860)
!23586 = !DILocation(line: 374, column: 11, scope: !11789, inlinedAt: !22860)
!23587 = !DILocation(line: 374, column: 6, scope: !11619, inlinedAt: !22860)
!23588 = !DILocation(line: 374, column: 26, scope: !11789, inlinedAt: !22860)
!23589 = !DILocation(line: 375, column: 6, scope: !11794, inlinedAt: !22860)
!23590 = !DILocation(line: 375, column: 11, scope: !11794, inlinedAt: !22860)
!23591 = !DILocation(line: 375, column: 6, scope: !11619, inlinedAt: !22860)
!23592 = !DILocation(line: 375, column: 27, scope: !11794, inlinedAt: !22860)
!23593 = !DILocation(line: 376, column: 6, scope: !11799, inlinedAt: !22860)
!23594 = !DILocation(line: 376, column: 11, scope: !11799, inlinedAt: !22860)
!23595 = !DILocation(line: 376, column: 6, scope: !11619, inlinedAt: !22860)
!23596 = !DILocation(line: 376, column: 32, scope: !11799, inlinedAt: !22860)
!23597 = !DILocation(line: 377, column: 6, scope: !11804, inlinedAt: !22860)
!23598 = !DILocation(line: 377, column: 11, scope: !11804, inlinedAt: !22860)
!23599 = !DILocation(line: 377, column: 6, scope: !11619, inlinedAt: !22860)
!23600 = !DILocation(line: 377, column: 32, scope: !11804, inlinedAt: !22860)
!23601 = !DILocation(line: 378, column: 6, scope: !11809, inlinedAt: !22860)
!23602 = !DILocation(line: 378, column: 11, scope: !11809, inlinedAt: !22860)
!23603 = !DILocation(line: 378, column: 6, scope: !11619, inlinedAt: !22860)
!23604 = !DILocation(line: 378, column: 32, scope: !11809, inlinedAt: !22860)
!23605 = !DILocation(line: 379, column: 6, scope: !11814, inlinedAt: !22860)
!23606 = !DILocation(line: 379, column: 11, scope: !11814, inlinedAt: !22860)
!23607 = !DILocation(line: 379, column: 6, scope: !11619, inlinedAt: !22860)
!23608 = !DILocation(line: 379, column: 33, scope: !11814, inlinedAt: !22860)
!23609 = !DILocation(line: 380, column: 6, scope: !11819, inlinedAt: !22860)
!23610 = !DILocation(line: 380, column: 11, scope: !11819, inlinedAt: !22860)
!23611 = !DILocation(line: 380, column: 6, scope: !11619, inlinedAt: !22860)
!23612 = !DILocation(line: 380, column: 33, scope: !11819, inlinedAt: !22860)
!23613 = !DILocation(line: 381, column: 6, scope: !11824, inlinedAt: !22860)
!23614 = !DILocation(line: 381, column: 11, scope: !11824, inlinedAt: !22860)
!23615 = !DILocation(line: 381, column: 6, scope: !11619, inlinedAt: !22860)
!23616 = !DILocation(line: 381, column: 33, scope: !11824, inlinedAt: !22860)
!23617 = !DILocation(line: 382, column: 2, scope: !11829, inlinedAt: !22860)
!23618 = !DILocation(line: 382, column: 2, scope: !11833, inlinedAt: !22860)
!23619 = !DILocation(line: 382, column: 2, scope: !11834, inlinedAt: !22860)
!23620 = !DILocation(line: 386, column: 1, scope: !11619, inlinedAt: !22860)
!23621 = !DILocation(line: 547, column: 9, scope: !11600, inlinedAt: !22853)
!23622 = !DILocation(line: 549, column: 8, scope: !11840, inlinedAt: !22853)
!23623 = !DILocation(line: 549, column: 7, scope: !11600, inlinedAt: !22853)
!23624 = !DILocation(line: 550, column: 4, scope: !11840, inlinedAt: !22853)
!23625 = !DILocation(line: 553, column: 33, scope: !11600, inlinedAt: !22853)
!23626 = !DILocation(line: 325, column: 6, scope: !11845, inlinedAt: !22858)
!23627 = !DILocation(line: 325, column: 6, scope: !11613, inlinedAt: !22858)
!23628 = !DILocation(line: 326, column: 3, scope: !11845, inlinedAt: !22858)
!23629 = !DILocation(line: 332, column: 9, scope: !11613, inlinedAt: !22858)
!23630 = !DILocation(line: 332, column: 15, scope: !11613, inlinedAt: !22858)
!23631 = !DILocation(line: 332, column: 2, scope: !11613, inlinedAt: !22858)
!23632 = !DILocation(line: 336, column: 1, scope: !11613, inlinedAt: !22858)
!23633 = !DILocation(line: 553, column: 5, scope: !11600, inlinedAt: !22853)
!23634 = !DILocation(line: 553, column: 41, scope: !11600, inlinedAt: !22853)
!23635 = !DILocation(line: 554, column: 5, scope: !11600, inlinedAt: !22853)
!23636 = !DILocation(line: 554, column: 12, scope: !11600, inlinedAt: !22853)
!23637 = !DILocation(line: 448, column: 31, scope: !11595, inlinedAt: !22852)
!23638 = !DILocation(line: 448, column: 34, scope: !11595, inlinedAt: !22852)
!23639 = !DILocation(line: 448, column: 14, scope: !11595, inlinedAt: !22852)
!23640 = !DILocation(line: 450, column: 22, scope: !11595, inlinedAt: !22852)
!23641 = !DILocation(line: 450, column: 25, scope: !11595, inlinedAt: !22852)
!23642 = !DILocation(line: 450, column: 30, scope: !11595, inlinedAt: !22852)
!23643 = !DILocation(line: 450, column: 36, scope: !11595, inlinedAt: !22852)
!23644 = !DILocation(line: 450, column: 8, scope: !11595, inlinedAt: !22852)
!23645 = !DILocation(line: 450, column: 6, scope: !11595, inlinedAt: !22852)
!23646 = !DILocation(line: 451, column: 9, scope: !11595, inlinedAt: !22852)
!23647 = !DILocation(line: 552, column: 3, scope: !11600, inlinedAt: !22853)
!23648 = !DILocation(line: 557, column: 19, scope: !11602, inlinedAt: !22853)
!23649 = !DILocation(line: 557, column: 25, scope: !11602, inlinedAt: !22853)
!23650 = !DILocation(line: 557, column: 9, scope: !11602, inlinedAt: !22853)
!23651 = !DILocation(line: 557, column: 2, scope: !11602, inlinedAt: !22853)
!23652 = !DILocation(line: 558, column: 1, scope: !11602, inlinedAt: !22853)
!23653 = !DILocation(line: 1877, column: 2, scope: !22850)
!23654 = !DILocation(line: 1877, column: 6, scope: !22850)
!23655 = !DILocation(line: 1877, column: 16, scope: !22850)
!23656 = !DILocation(line: 1878, column: 7, scope: !23657)
!23657 = distinct !DILexicalBlock(scope: !22850, file: !3, line: 1878, column: 6)
!23658 = !DILocation(line: 1878, column: 11, scope: !23657)
!23659 = !DILocation(line: 1878, column: 6, scope: !22850)
!23660 = !DILocation(line: 1879, column: 3, scope: !23657)
!23661 = !DILocation(line: 1881, column: 27, scope: !22850)
!23662 = !DILocation(line: 1881, column: 36, scope: !22850)
!23663 = !DILocation(line: 1881, column: 41, scope: !22850)
!23664 = !DILocation(line: 1881, column: 22, scope: !22850)
!23665 = !DILocation(line: 1881, column: 2, scope: !22850)
!23666 = !DILocation(line: 1881, column: 6, scope: !22850)
!23667 = !DILocation(line: 1881, column: 20, scope: !22850)
!23668 = !DILocation(line: 1882, column: 19, scope: !22850)
!23669 = !DILocation(line: 1882, column: 23, scope: !22850)
!23670 = !DILocation(line: 1882, column: 33, scope: !22850)
!23671 = !DILocation(line: 1882, column: 37, scope: !22850)
!23672 = !DILocation(line: 1882, column: 43, scope: !22850)
!23673 = !DILocation(line: 1883, column: 5, scope: !22850)
!23674 = !DILocation(line: 1883, column: 9, scope: !22850)
!23675 = !DILocation(line: 1884, column: 5, scope: !22850)
!23676 = !DILocation(line: 1884, column: 9, scope: !22850)
!23677 = !DILocation(line: 1884, column: 13, scope: !22850)
!23678 = !DILocation(line: 1882, column: 2, scope: !22850)
!23679 = !DILocation(line: 1886, column: 2, scope: !22850)
!23680 = !DILabel(scope: !22850, name: "err1", file: !3, line: 1888)
!23681 = !DILocation(line: 1888, column: 1, scope: !22850)
!23682 = !DILocation(line: 1889, column: 15, scope: !22850)
!23683 = !DILocation(line: 1889, column: 2, scope: !22850)
!23684 = !DILocation(line: 1890, column: 2, scope: !22850)
!23685 = !DILocation(line: 1891, column: 1, scope: !22850)
!23686 = distinct !DISubprogram(name: "netif_start_queue", scope: !71, file: !71, line: 3285, type: !488, scopeLine: 3286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!23687 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !23688, file: !71, line: 3274, type: !8914)
!23688 = distinct !DISubprogram(name: "netif_tx_start_queue", scope: !71, file: !71, line: 3274, type: !18627, scopeLine: 3275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!23689 = !DILocation(line: 3274, column: 71, scope: !23688, inlinedAt: !23690)
!23690 = distinct !DILocation(line: 3287, column: 2, scope: !23686)
!23691 = !DILocalVariable(name: "dev", arg: 1, scope: !23686, file: !71, line: 3285, type: !372)
!23692 = !DILocation(line: 3285, column: 57, scope: !23686)
!23693 = !DILocation(line: 3287, column: 43, scope: !23686)
!23694 = !DILocation(line: 3287, column: 23, scope: !23686)
!23695 = !DILocation(line: 3276, column: 37, scope: !23688, inlinedAt: !23690)
!23696 = !DILocation(line: 3276, column: 48, scope: !23688, inlinedAt: !23690)
!23697 = !DILocation(line: 3276, column: 2, scope: !23688, inlinedAt: !23690)
!23698 = !DILocation(line: 3288, column: 1, scope: !23686)
!23699 = distinct !DISubprogram(name: "rtl_notifier", scope: !3, file: !3, line: 5207, type: !2098, scopeLine: 5209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!23700 = !DILocalVariable(name: "nb", arg: 1, scope: !23699, file: !3, line: 5207, type: !2092)
!23701 = !DILocation(line: 5207, column: 48, scope: !23699)
!23702 = !DILocalVariable(name: "action", arg: 2, scope: !23699, file: !3, line: 5207, type: !394)
!23703 = !DILocation(line: 5207, column: 66, scope: !23699)
!23704 = !DILocalVariable(name: "data", arg: 3, scope: !23699, file: !3, line: 5208, type: !647)
!23705 = !DILocation(line: 5208, column: 10, scope: !23699)
!23706 = !DILocalVariable(name: "tp", scope: !23699, file: !3, line: 5210, type: !10280)
!23707 = !DILocation(line: 5210, column: 16, scope: !23699)
!23708 = !DILocalVariable(name: "__mptr", scope: !23709, file: !3, line: 5210, type: !647)
!23709 = distinct !DILexicalBlock(scope: !23699, file: !3, line: 5210, column: 21)
!23710 = !DILocation(line: 5210, column: 21, scope: !23709)
!23711 = !DILocation(line: 5210, column: 21, scope: !23712)
!23712 = distinct !DILexicalBlock(scope: !23709, file: !3, line: 5210, column: 21)
!23713 = !DILocation(line: 5212, column: 10, scope: !23699)
!23714 = !DILocation(line: 5212, column: 2, scope: !23699)
!23715 = !DILocation(line: 5215, column: 28, scope: !23716)
!23716 = distinct !DILexicalBlock(scope: !23699, file: !3, line: 5212, column: 18)
!23717 = !DILocation(line: 5215, column: 32, scope: !23716)
!23718 = !DILocation(line: 5215, column: 3, scope: !23716)
!23719 = !DILocation(line: 5216, column: 3, scope: !23716)
!23720 = !DILocation(line: 5220, column: 28, scope: !23716)
!23721 = !DILocation(line: 5220, column: 32, scope: !23716)
!23722 = !DILocation(line: 5220, column: 3, scope: !23716)
!23723 = !DILocation(line: 5221, column: 3, scope: !23716)
!23724 = !DILocation(line: 5226, column: 3, scope: !23716)
!23725 = !DILocation(line: 5229, column: 2, scope: !23699)
!23726 = distinct !DISubprogram(name: "free_all_mem", scope: !3, file: !3, line: 1787, type: !10380, scopeLine: 1788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!23727 = !DILocation(line: 23, column: 61, scope: !15912, inlinedAt: !23728)
!23728 = distinct !DILocation(line: 28, column: 9, scope: !15920, inlinedAt: !23729)
!23729 = distinct !DILocation(line: 1800, column: 2, scope: !23730)
!23730 = distinct !DILexicalBlock(scope: !23726, file: !3, line: 1800, column: 2)
!23731 = !DILocation(line: 69, column: 73, scope: !14190, inlinedAt: !23732)
!23732 = distinct !DILocation(line: 27, column: 2, scope: !15920, inlinedAt: !23729)
!23733 = !DILocation(line: 69, column: 83, scope: !14190, inlinedAt: !23732)
!23734 = !DILocation(line: 25, column: 29, scope: !15920, inlinedAt: !23729)
!23735 = !DILocation(line: 407, column: 64, scope: !15429, inlinedAt: !23736)
!23736 = distinct !DILocation(line: 1798, column: 2, scope: !23726)
!23737 = !DILocation(line: 407, column: 84, scope: !15429, inlinedAt: !23736)
!23738 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !23739)
!23739 = distinct !DILocation(line: 1793, column: 2, scope: !23740)
!23740 = distinct !DILexicalBlock(scope: !23741, file: !3, line: 1793, column: 2)
!23741 = distinct !DILexicalBlock(scope: !23742, file: !3, line: 1793, column: 2)
!23742 = distinct !DILexicalBlock(scope: !23743, file: !3, line: 1793, column: 2)
!23743 = distinct !DILexicalBlock(scope: !23744, file: !3, line: 1793, column: 2)
!23744 = distinct !DILexicalBlock(scope: !23726, file: !3, line: 1793, column: 2)
!23745 = !DILocalVariable(name: "tp", arg: 1, scope: !23726, file: !3, line: 1787, type: !10280)
!23746 = !DILocation(line: 1787, column: 40, scope: !23726)
!23747 = !DILocalVariable(name: "agg", scope: !23726, file: !3, line: 1789, type: !10212)
!23748 = !DILocation(line: 1789, column: 17, scope: !23726)
!23749 = !DILocalVariable(name: "agg_next", scope: !23726, file: !3, line: 1789, type: !10212)
!23750 = !DILocation(line: 1789, column: 23, scope: !23726)
!23751 = !DILocalVariable(name: "flags", scope: !23726, file: !3, line: 1790, type: !394)
!23752 = !DILocation(line: 1790, column: 16, scope: !23726)
!23753 = !DILocalVariable(name: "i", scope: !23726, file: !3, line: 1791, type: !72)
!23754 = !DILocation(line: 1791, column: 6, scope: !23726)
!23755 = !DILocation(line: 1793, column: 2, scope: !23726)
!23756 = !DILocation(line: 1793, column: 2, scope: !23744)
!23757 = !DILocalVariable(name: "__dummy", scope: !23758, file: !3, line: 1793, type: !394)
!23758 = distinct !DILexicalBlock(scope: !23743, file: !3, line: 1793, column: 2)
!23759 = !DILocation(line: 1793, column: 2, scope: !23758)
!23760 = !DILocalVariable(name: "__dummy2", scope: !23758, file: !3, line: 1793, type: !394)
!23761 = !DILocation(line: 1793, column: 2, scope: !23743)
!23762 = !DILocation(line: 1793, column: 2, scope: !23742)
!23763 = !DILocation(line: 1793, column: 2, scope: !23764)
!23764 = distinct !DILexicalBlock(scope: !23742, file: !3, line: 1793, column: 2)
!23765 = !DILocalVariable(name: "__dummy", scope: !23766, file: !3, line: 1793, type: !394)
!23766 = distinct !DILexicalBlock(scope: !23767, file: !3, line: 1793, column: 2)
!23767 = distinct !DILexicalBlock(scope: !23764, file: !3, line: 1793, column: 2)
!23768 = !DILocation(line: 1793, column: 2, scope: !23766)
!23769 = !DILocalVariable(name: "__dummy2", scope: !23766, file: !3, line: 1793, type: !394)
!23770 = !DILocation(line: 1793, column: 2, scope: !23767)
!23771 = !DILocation(line: 1793, column: 2, scope: !23741)
!23772 = !{i32 -2137100949}
!23773 = !DILocation(line: 1793, column: 2, scope: !23740)
!23774 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !23739)
!23775 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !23739)
!23776 = !DILocalVariable(name: "__mptr", scope: !23777, file: !3, line: 1795, type: !647)
!23777 = distinct !DILexicalBlock(scope: !23778, file: !3, line: 1795, column: 2)
!23778 = distinct !DILexicalBlock(scope: !23726, file: !3, line: 1795, column: 2)
!23779 = !DILocation(line: 1795, column: 2, scope: !23777)
!23780 = !DILocation(line: 1795, column: 2, scope: !23781)
!23781 = distinct !DILexicalBlock(scope: !23777, file: !3, line: 1795, column: 2)
!23782 = !DILocation(line: 1795, column: 2, scope: !23778)
!23783 = !DILocalVariable(name: "__mptr", scope: !23784, file: !3, line: 1795, type: !647)
!23784 = distinct !DILexicalBlock(scope: !23778, file: !3, line: 1795, column: 2)
!23785 = !DILocation(line: 1795, column: 2, scope: !23784)
!23786 = !DILocation(line: 1795, column: 2, scope: !23787)
!23787 = distinct !DILexicalBlock(scope: !23784, file: !3, line: 1795, column: 2)
!23788 = !DILocation(line: 1795, column: 2, scope: !23789)
!23789 = distinct !DILexicalBlock(scope: !23778, file: !3, line: 1795, column: 2)
!23790 = !DILocation(line: 1796, column: 15, scope: !23789)
!23791 = !DILocation(line: 1796, column: 19, scope: !23789)
!23792 = !DILocation(line: 1796, column: 3, scope: !23789)
!23793 = !DILocalVariable(name: "__mptr", scope: !23794, file: !3, line: 1795, type: !647)
!23794 = distinct !DILexicalBlock(scope: !23789, file: !3, line: 1795, column: 2)
!23795 = !DILocation(line: 1795, column: 2, scope: !23794)
!23796 = !DILocation(line: 1795, column: 2, scope: !23797)
!23797 = distinct !DILexicalBlock(scope: !23794, file: !3, line: 1795, column: 2)
!23798 = distinct !{!23798, !23782, !23799}
!23799 = !DILocation(line: 1796, column: 22, scope: !23778)
!23800 = !DILocation(line: 1798, column: 26, scope: !23726)
!23801 = !DILocation(line: 1798, column: 30, scope: !23726)
!23802 = !DILocation(line: 1798, column: 39, scope: !23726)
!23803 = !DILocation(line: 409, column: 2, scope: !15498, inlinedAt: !23736)
!23804 = !DILocation(line: 409, column: 2, scope: !15503, inlinedAt: !23736)
!23805 = !DILocation(line: 409, column: 2, scope: !15504, inlinedAt: !23736)
!23806 = !DILocation(line: 409, column: 2, scope: !15511, inlinedAt: !23736)
!23807 = !DILocation(line: 409, column: 2, scope: !15514, inlinedAt: !23736)
!23808 = !DILocalVariable(name: "__ret_warn_on", scope: !23730, file: !3, line: 1800, type: !72)
!23809 = !DILocation(line: 1800, column: 2, scope: !23730)
!23810 = !DILocation(line: 27, column: 25, scope: !15920, inlinedAt: !23729)
!23811 = !DILocation(line: 71, column: 19, scope: !14190, inlinedAt: !23732)
!23812 = !DILocation(line: 71, column: 22, scope: !14190, inlinedAt: !23732)
!23813 = !DILocation(line: 71, column: 2, scope: !14190, inlinedAt: !23732)
!23814 = !DILocation(line: 72, column: 2, scope: !14190, inlinedAt: !23732)
!23815 = !DILocation(line: 28, column: 26, scope: !15920, inlinedAt: !23729)
!23816 = !DILocation(line: 29, column: 9, scope: !15912, inlinedAt: !23728)
!23817 = !DILocation(line: 1800, column: 2, scope: !23818)
!23818 = distinct !DILexicalBlock(scope: !23730, file: !3, line: 1800, column: 2)
!23819 = !DILocation(line: 1800, column: 2, scope: !23820)
!23820 = distinct !DILexicalBlock(scope: !23818, file: !3, line: 1800, column: 2)
!23821 = !DILocation(line: 1800, column: 2, scope: !23822)
!23822 = distinct !DILexicalBlock(scope: !23820, file: !3, line: 1800, column: 2)
!23823 = !DILocation(line: 1800, column: 2, scope: !23824)
!23824 = distinct !DILexicalBlock(scope: !23820, file: !3, line: 1800, column: 2)
!23825 = !{i32 -2137094233, i32 -2137094204, i32 -2137094158, i32 -2137094100, i32 -2137094046, i32 -2137093992, i32 -2137093937, i32 -2137093906}
!23826 = !DILocation(line: 1800, column: 2, scope: !23827)
!23827 = distinct !DILexicalBlock(scope: !23820, file: !3, line: 1800, column: 2)
!23828 = !{i32 -2137093500, i32 -2137093493, i32 -2137093441, i32 -2137093410, i32 -2137093380}
!23829 = !DILocation(line: 1800, column: 2, scope: !23830)
!23830 = distinct !DILexicalBlock(scope: !23820, file: !3, line: 1800, column: 2)
!23831 = !DILocation(line: 1802, column: 9, scope: !23832)
!23832 = distinct !DILexicalBlock(scope: !23726, file: !3, line: 1802, column: 2)
!23833 = !DILocation(line: 1802, column: 7, scope: !23832)
!23834 = !DILocation(line: 1802, column: 14, scope: !23835)
!23835 = distinct !DILexicalBlock(scope: !23832, file: !3, line: 1802, column: 2)
!23836 = !DILocation(line: 1802, column: 16, scope: !23835)
!23837 = !DILocation(line: 1802, column: 2, scope: !23832)
!23838 = !DILocation(line: 1803, column: 16, scope: !23839)
!23839 = distinct !DILexicalBlock(scope: !23835, file: !3, line: 1802, column: 39)
!23840 = !DILocation(line: 1803, column: 20, scope: !23839)
!23841 = !DILocation(line: 1803, column: 28, scope: !23839)
!23842 = !DILocation(line: 1803, column: 31, scope: !23839)
!23843 = !DILocation(line: 1803, column: 3, scope: !23839)
!23844 = !DILocation(line: 1804, column: 3, scope: !23839)
!23845 = !DILocation(line: 1804, column: 7, scope: !23839)
!23846 = !DILocation(line: 1804, column: 15, scope: !23839)
!23847 = !DILocation(line: 1804, column: 18, scope: !23839)
!23848 = !DILocation(line: 1804, column: 22, scope: !23839)
!23849 = !DILocation(line: 1806, column: 9, scope: !23839)
!23850 = !DILocation(line: 1806, column: 13, scope: !23839)
!23851 = !DILocation(line: 1806, column: 21, scope: !23839)
!23852 = !DILocation(line: 1806, column: 24, scope: !23839)
!23853 = !DILocation(line: 1806, column: 3, scope: !23839)
!23854 = !DILocation(line: 1807, column: 3, scope: !23839)
!23855 = !DILocation(line: 1807, column: 7, scope: !23839)
!23856 = !DILocation(line: 1807, column: 15, scope: !23839)
!23857 = !DILocation(line: 1807, column: 18, scope: !23839)
!23858 = !DILocation(line: 1807, column: 25, scope: !23839)
!23859 = !DILocation(line: 1808, column: 3, scope: !23839)
!23860 = !DILocation(line: 1808, column: 7, scope: !23839)
!23861 = !DILocation(line: 1808, column: 15, scope: !23839)
!23862 = !DILocation(line: 1808, column: 18, scope: !23839)
!23863 = !DILocation(line: 1808, column: 23, scope: !23839)
!23864 = !DILocation(line: 1809, column: 2, scope: !23839)
!23865 = !DILocation(line: 1802, column: 35, scope: !23835)
!23866 = !DILocation(line: 1802, column: 2, scope: !23835)
!23867 = distinct !{!23867, !23837, !23868}
!23868 = !DILocation(line: 1809, column: 2, scope: !23832)
!23869 = !DILocation(line: 1811, column: 15, scope: !23726)
!23870 = !DILocation(line: 1811, column: 19, scope: !23726)
!23871 = !DILocation(line: 1811, column: 2, scope: !23726)
!23872 = !DILocation(line: 1812, column: 2, scope: !23726)
!23873 = !DILocation(line: 1812, column: 6, scope: !23726)
!23874 = !DILocation(line: 1812, column: 15, scope: !23726)
!23875 = !DILocation(line: 1814, column: 8, scope: !23726)
!23876 = !DILocation(line: 1814, column: 12, scope: !23726)
!23877 = !DILocation(line: 1814, column: 2, scope: !23726)
!23878 = !DILocation(line: 1815, column: 2, scope: !23726)
!23879 = !DILocation(line: 1815, column: 6, scope: !23726)
!23880 = !DILocation(line: 1815, column: 16, scope: !23726)
!23881 = !DILocation(line: 1816, column: 1, scope: !23726)
!23882 = distinct !DISubprogram(name: "dev_to_node", scope: !25, file: !25, line: 630, type: !4340, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!23883 = !DILocalVariable(name: "dev", arg: 1, scope: !23882, file: !25, line: 630, type: !4308)
!23884 = !DILocation(line: 630, column: 46, scope: !23882)
!23885 = !DILocation(line: 632, column: 2, scope: !23882)
!23886 = distinct !DISubprogram(name: "skb_queue_head_init", scope: !499, file: !499, line: 1881, type: !15649, scopeLine: 1882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!23887 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !23888)
!23888 = distinct !DILocation(line: 1883, column: 2, scope: !23889)
!23889 = distinct !DILexicalBlock(scope: !23886, file: !499, line: 1883, column: 2)
!23890 = !DILocalVariable(name: "list", arg: 1, scope: !23886, file: !499, line: 1881, type: !15396)
!23891 = !DILocation(line: 1881, column: 61, scope: !23886)
!23892 = !DILocation(line: 1883, column: 2, scope: !23886)
!23893 = !DILocation(line: 1883, column: 2, scope: !23889)
!23894 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !23888)
!23895 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !23888)
!23896 = !DILocation(line: 1884, column: 24, scope: !23886)
!23897 = !DILocation(line: 1884, column: 2, scope: !23886)
!23898 = !DILocation(line: 1885, column: 1, scope: !23886)
!23899 = distinct !DISubprogram(name: "alloc_rx_agg", scope: !3, file: !3, line: 1746, type: !23900, scopeLine: 1747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!23900 = !DISubroutineType(types: !23901)
!23901 = !{!10212, !10280, !2067}
!23902 = !DILocation(line: 93, column: 55, scope: !22251, inlinedAt: !23903)
!23903 = distinct !DILocation(line: 241, column: 2, scope: !22254, inlinedAt: !23904)
!23904 = distinct !DILocation(line: 1776, column: 2, scope: !23899)
!23905 = !DILocation(line: 99, column: 79, scope: !15954, inlinedAt: !23906)
!23906 = distinct !DILocation(line: 240, column: 2, scope: !22254, inlinedAt: !23904)
!23907 = !DILocation(line: 99, column: 89, scope: !15954, inlinedAt: !23906)
!23908 = !DILocation(line: 238, column: 22, scope: !22254, inlinedAt: !23904)
!23909 = !DILocation(line: 407, column: 64, scope: !15429, inlinedAt: !23910)
!23910 = distinct !DILocation(line: 1774, column: 2, scope: !23899)
!23911 = !DILocation(line: 407, column: 84, scope: !15429, inlinedAt: !23910)
!23912 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !23913)
!23913 = distinct !DILocation(line: 1772, column: 2, scope: !23914)
!23914 = distinct !DILexicalBlock(scope: !23915, file: !3, line: 1772, column: 2)
!23915 = distinct !DILexicalBlock(scope: !23916, file: !3, line: 1772, column: 2)
!23916 = distinct !DILexicalBlock(scope: !23917, file: !3, line: 1772, column: 2)
!23917 = distinct !DILexicalBlock(scope: !23918, file: !3, line: 1772, column: 2)
!23918 = distinct !DILexicalBlock(scope: !23899, file: !3, line: 1772, column: 2)
!23919 = !DILocalVariable(name: "page", arg: 1, scope: !23920, file: !227, line: 1514, type: !23923)
!23920 = distinct !DISubprogram(name: "lowmem_page_address", scope: !227, file: !227, line: 1514, type: !23921, scopeLine: 1515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!23921 = !DISubroutineType(types: !23922)
!23922 = !{!647, !23923}
!23923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23924, size: 64)
!23924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !702)
!23925 = !DILocation(line: 1514, column: 69, scope: !23920, inlinedAt: !23926)
!23926 = distinct !DILocation(line: 1762, column: 19, scope: !23899)
!23927 = !DILocation(line: 416, column: 52, scope: !22873, inlinedAt: !23928)
!23928 = distinct !DILocation(line: 575, column: 9, scope: !22878, inlinedAt: !23929)
!23929 = distinct !DILocation(line: 1754, column: 11, scope: !23899)
!23930 = !DILocation(line: 416, column: 64, scope: !22873, inlinedAt: !23928)
!23931 = !DILocation(line: 416, column: 75, scope: !22873, inlinedAt: !23928)
!23932 = !DILocation(line: 421, column: 71, scope: !22890, inlinedAt: !23933)
!23933 = distinct !DILocation(line: 459, column: 14, scope: !22895, inlinedAt: !23934)
!23934 = distinct !DILocation(line: 570, column: 10, scope: !22899, inlinedAt: !23929)
!23935 = !DILocation(line: 421, column: 80, scope: !22890, inlinedAt: !23933)
!23936 = !DILocation(line: 421, column: 91, scope: !22890, inlinedAt: !23933)
!23937 = !DILocation(line: 455, column: 48, scope: !22895, inlinedAt: !23934)
!23938 = !DILocation(line: 456, column: 16, scope: !22895, inlinedAt: !23934)
!23939 = !DILocation(line: 457, column: 14, scope: !22895, inlinedAt: !23934)
!23940 = !DILocation(line: 457, column: 27, scope: !22895, inlinedAt: !23934)
!23941 = !DILocation(line: 459, column: 8, scope: !22895, inlinedAt: !23934)
!23942 = !DILocation(line: 318, column: 67, scope: !11613, inlinedAt: !23943)
!23943 = distinct !DILocation(line: 571, column: 20, scope: !22899, inlinedAt: !23929)
!23944 = !DILocation(line: 346, column: 58, scope: !11619, inlinedAt: !23945)
!23945 = distinct !DILocation(line: 565, column: 20, scope: !22899, inlinedAt: !23929)
!23946 = !DILocation(line: 560, column: 50, scope: !22878, inlinedAt: !23929)
!23947 = !DILocation(line: 560, column: 62, scope: !22878, inlinedAt: !23929)
!23948 = !DILocation(line: 560, column: 73, scope: !22878, inlinedAt: !23929)
!23949 = !DILocation(line: 565, column: 16, scope: !22899, inlinedAt: !23929)
!23950 = !DILocalVariable(name: "tp", arg: 1, scope: !23899, file: !3, line: 1746, type: !10280)
!23951 = !DILocation(line: 1746, column: 50, scope: !23899)
!23952 = !DILocalVariable(name: "mflags", arg: 2, scope: !23899, file: !3, line: 1746, type: !2067)
!23953 = !DILocation(line: 1746, column: 60, scope: !23899)
!23954 = !DILocalVariable(name: "netdev", scope: !23899, file: !3, line: 1748, type: !372)
!23955 = !DILocation(line: 1748, column: 21, scope: !23899)
!23956 = !DILocation(line: 1748, column: 30, scope: !23899)
!23957 = !DILocation(line: 1748, column: 34, scope: !23899)
!23958 = !DILocalVariable(name: "node", scope: !23899, file: !3, line: 1749, type: !72)
!23959 = !DILocation(line: 1749, column: 6, scope: !23899)
!23960 = !DILocation(line: 1749, column: 13, scope: !23899)
!23961 = !DILocation(line: 1749, column: 21, scope: !23899)
!23962 = !DILocation(line: 1749, column: 25, scope: !23899)
!23963 = !DILocation(line: 1749, column: 46, scope: !23899)
!23964 = !DILocation(line: 1749, column: 54, scope: !23899)
!23965 = !DILocation(line: 1749, column: 58, scope: !23899)
!23966 = !DILocation(line: 1749, column: 34, scope: !23899)
!23967 = !DILocalVariable(name: "order", scope: !23899, file: !3, line: 1750, type: !7)
!23968 = !DILocation(line: 1750, column: 15, scope: !23899)
!23969 = !DILocation(line: 1750, column: 33, scope: !23899)
!23970 = !DILocation(line: 1750, column: 37, scope: !23899)
!23971 = !DILocation(line: 1750, column: 23, scope: !23899)
!23972 = !DILocalVariable(name: "rx_agg", scope: !23899, file: !3, line: 1751, type: !10212)
!23973 = !DILocation(line: 1751, column: 17, scope: !23899)
!23974 = !DILocalVariable(name: "flags", scope: !23899, file: !3, line: 1752, type: !394)
!23975 = !DILocation(line: 1752, column: 16, scope: !23899)
!23976 = !DILocation(line: 1754, column: 41, scope: !23899)
!23977 = !DILocation(line: 1754, column: 49, scope: !23899)
!23978 = !DILocation(line: 563, column: 27, scope: !22900, inlinedAt: !23929)
!23979 = !DILocation(line: 563, column: 6, scope: !22900, inlinedAt: !23929)
!23980 = !DILocation(line: 563, column: 33, scope: !22900, inlinedAt: !23929)
!23981 = !DILocation(line: 564, column: 3, scope: !22900, inlinedAt: !23929)
!23982 = !DILocation(line: 564, column: 8, scope: !22900, inlinedAt: !23929)
!23983 = !DILocation(line: 563, column: 6, scope: !22878, inlinedAt: !23929)
!23984 = !DILocation(line: 565, column: 34, scope: !22899, inlinedAt: !23929)
!23985 = !DILocation(line: 348, column: 7, scope: !11684, inlinedAt: !23945)
!23986 = !DILocation(line: 348, column: 6, scope: !11619, inlinedAt: !23945)
!23987 = !DILocation(line: 349, column: 3, scope: !11684, inlinedAt: !23945)
!23988 = !DILocation(line: 351, column: 6, scope: !11688, inlinedAt: !23945)
!23989 = !DILocation(line: 351, column: 11, scope: !11688, inlinedAt: !23945)
!23990 = !DILocation(line: 351, column: 6, scope: !11619, inlinedAt: !23945)
!23991 = !DILocation(line: 352, column: 3, scope: !11688, inlinedAt: !23945)
!23992 = !DILocation(line: 354, column: 32, scope: !11693, inlinedAt: !23945)
!23993 = !DILocation(line: 354, column: 37, scope: !11693, inlinedAt: !23945)
!23994 = !DILocation(line: 354, column: 42, scope: !11693, inlinedAt: !23945)
!23995 = !DILocation(line: 354, column: 45, scope: !11693, inlinedAt: !23945)
!23996 = !DILocation(line: 354, column: 50, scope: !11693, inlinedAt: !23945)
!23997 = !DILocation(line: 354, column: 6, scope: !11619, inlinedAt: !23945)
!23998 = !DILocation(line: 355, column: 3, scope: !11693, inlinedAt: !23945)
!23999 = !DILocation(line: 356, column: 32, scope: !11701, inlinedAt: !23945)
!24000 = !DILocation(line: 356, column: 37, scope: !11701, inlinedAt: !23945)
!24001 = !DILocation(line: 356, column: 43, scope: !11701, inlinedAt: !23945)
!24002 = !DILocation(line: 356, column: 46, scope: !11701, inlinedAt: !23945)
!24003 = !DILocation(line: 356, column: 51, scope: !11701, inlinedAt: !23945)
!24004 = !DILocation(line: 356, column: 6, scope: !11619, inlinedAt: !23945)
!24005 = !DILocation(line: 357, column: 3, scope: !11701, inlinedAt: !23945)
!24006 = !DILocation(line: 358, column: 6, scope: !11709, inlinedAt: !23945)
!24007 = !DILocation(line: 358, column: 11, scope: !11709, inlinedAt: !23945)
!24008 = !DILocation(line: 358, column: 6, scope: !11619, inlinedAt: !23945)
!24009 = !DILocation(line: 358, column: 26, scope: !11709, inlinedAt: !23945)
!24010 = !DILocation(line: 359, column: 6, scope: !11714, inlinedAt: !23945)
!24011 = !DILocation(line: 359, column: 11, scope: !11714, inlinedAt: !23945)
!24012 = !DILocation(line: 359, column: 6, scope: !11619, inlinedAt: !23945)
!24013 = !DILocation(line: 359, column: 26, scope: !11714, inlinedAt: !23945)
!24014 = !DILocation(line: 360, column: 6, scope: !11719, inlinedAt: !23945)
!24015 = !DILocation(line: 360, column: 11, scope: !11719, inlinedAt: !23945)
!24016 = !DILocation(line: 360, column: 6, scope: !11619, inlinedAt: !23945)
!24017 = !DILocation(line: 360, column: 26, scope: !11719, inlinedAt: !23945)
!24018 = !DILocation(line: 361, column: 6, scope: !11724, inlinedAt: !23945)
!24019 = !DILocation(line: 361, column: 11, scope: !11724, inlinedAt: !23945)
!24020 = !DILocation(line: 361, column: 6, scope: !11619, inlinedAt: !23945)
!24021 = !DILocation(line: 361, column: 26, scope: !11724, inlinedAt: !23945)
!24022 = !DILocation(line: 362, column: 6, scope: !11729, inlinedAt: !23945)
!24023 = !DILocation(line: 362, column: 11, scope: !11729, inlinedAt: !23945)
!24024 = !DILocation(line: 362, column: 6, scope: !11619, inlinedAt: !23945)
!24025 = !DILocation(line: 362, column: 26, scope: !11729, inlinedAt: !23945)
!24026 = !DILocation(line: 363, column: 6, scope: !11734, inlinedAt: !23945)
!24027 = !DILocation(line: 363, column: 11, scope: !11734, inlinedAt: !23945)
!24028 = !DILocation(line: 363, column: 6, scope: !11619, inlinedAt: !23945)
!24029 = !DILocation(line: 363, column: 26, scope: !11734, inlinedAt: !23945)
!24030 = !DILocation(line: 364, column: 6, scope: !11739, inlinedAt: !23945)
!24031 = !DILocation(line: 364, column: 11, scope: !11739, inlinedAt: !23945)
!24032 = !DILocation(line: 364, column: 6, scope: !11619, inlinedAt: !23945)
!24033 = !DILocation(line: 364, column: 26, scope: !11739, inlinedAt: !23945)
!24034 = !DILocation(line: 365, column: 6, scope: !11744, inlinedAt: !23945)
!24035 = !DILocation(line: 365, column: 11, scope: !11744, inlinedAt: !23945)
!24036 = !DILocation(line: 365, column: 6, scope: !11619, inlinedAt: !23945)
!24037 = !DILocation(line: 365, column: 26, scope: !11744, inlinedAt: !23945)
!24038 = !DILocation(line: 366, column: 6, scope: !11749, inlinedAt: !23945)
!24039 = !DILocation(line: 366, column: 11, scope: !11749, inlinedAt: !23945)
!24040 = !DILocation(line: 366, column: 6, scope: !11619, inlinedAt: !23945)
!24041 = !DILocation(line: 366, column: 26, scope: !11749, inlinedAt: !23945)
!24042 = !DILocation(line: 367, column: 6, scope: !11754, inlinedAt: !23945)
!24043 = !DILocation(line: 367, column: 11, scope: !11754, inlinedAt: !23945)
!24044 = !DILocation(line: 367, column: 6, scope: !11619, inlinedAt: !23945)
!24045 = !DILocation(line: 367, column: 26, scope: !11754, inlinedAt: !23945)
!24046 = !DILocation(line: 368, column: 6, scope: !11759, inlinedAt: !23945)
!24047 = !DILocation(line: 368, column: 11, scope: !11759, inlinedAt: !23945)
!24048 = !DILocation(line: 368, column: 6, scope: !11619, inlinedAt: !23945)
!24049 = !DILocation(line: 368, column: 26, scope: !11759, inlinedAt: !23945)
!24050 = !DILocation(line: 369, column: 6, scope: !11764, inlinedAt: !23945)
!24051 = !DILocation(line: 369, column: 11, scope: !11764, inlinedAt: !23945)
!24052 = !DILocation(line: 369, column: 6, scope: !11619, inlinedAt: !23945)
!24053 = !DILocation(line: 369, column: 26, scope: !11764, inlinedAt: !23945)
!24054 = !DILocation(line: 370, column: 6, scope: !11769, inlinedAt: !23945)
!24055 = !DILocation(line: 370, column: 11, scope: !11769, inlinedAt: !23945)
!24056 = !DILocation(line: 370, column: 6, scope: !11619, inlinedAt: !23945)
!24057 = !DILocation(line: 370, column: 26, scope: !11769, inlinedAt: !23945)
!24058 = !DILocation(line: 371, column: 6, scope: !11774, inlinedAt: !23945)
!24059 = !DILocation(line: 371, column: 11, scope: !11774, inlinedAt: !23945)
!24060 = !DILocation(line: 371, column: 6, scope: !11619, inlinedAt: !23945)
!24061 = !DILocation(line: 371, column: 26, scope: !11774, inlinedAt: !23945)
!24062 = !DILocation(line: 372, column: 6, scope: !11779, inlinedAt: !23945)
!24063 = !DILocation(line: 372, column: 11, scope: !11779, inlinedAt: !23945)
!24064 = !DILocation(line: 372, column: 6, scope: !11619, inlinedAt: !23945)
!24065 = !DILocation(line: 372, column: 26, scope: !11779, inlinedAt: !23945)
!24066 = !DILocation(line: 373, column: 6, scope: !11784, inlinedAt: !23945)
!24067 = !DILocation(line: 373, column: 11, scope: !11784, inlinedAt: !23945)
!24068 = !DILocation(line: 373, column: 6, scope: !11619, inlinedAt: !23945)
!24069 = !DILocation(line: 373, column: 26, scope: !11784, inlinedAt: !23945)
!24070 = !DILocation(line: 374, column: 6, scope: !11789, inlinedAt: !23945)
!24071 = !DILocation(line: 374, column: 11, scope: !11789, inlinedAt: !23945)
!24072 = !DILocation(line: 374, column: 6, scope: !11619, inlinedAt: !23945)
!24073 = !DILocation(line: 374, column: 26, scope: !11789, inlinedAt: !23945)
!24074 = !DILocation(line: 375, column: 6, scope: !11794, inlinedAt: !23945)
!24075 = !DILocation(line: 375, column: 11, scope: !11794, inlinedAt: !23945)
!24076 = !DILocation(line: 375, column: 6, scope: !11619, inlinedAt: !23945)
!24077 = !DILocation(line: 375, column: 27, scope: !11794, inlinedAt: !23945)
!24078 = !DILocation(line: 376, column: 6, scope: !11799, inlinedAt: !23945)
!24079 = !DILocation(line: 376, column: 11, scope: !11799, inlinedAt: !23945)
!24080 = !DILocation(line: 376, column: 6, scope: !11619, inlinedAt: !23945)
!24081 = !DILocation(line: 376, column: 32, scope: !11799, inlinedAt: !23945)
!24082 = !DILocation(line: 377, column: 6, scope: !11804, inlinedAt: !23945)
!24083 = !DILocation(line: 377, column: 11, scope: !11804, inlinedAt: !23945)
!24084 = !DILocation(line: 377, column: 6, scope: !11619, inlinedAt: !23945)
!24085 = !DILocation(line: 377, column: 32, scope: !11804, inlinedAt: !23945)
!24086 = !DILocation(line: 378, column: 6, scope: !11809, inlinedAt: !23945)
!24087 = !DILocation(line: 378, column: 11, scope: !11809, inlinedAt: !23945)
!24088 = !DILocation(line: 378, column: 6, scope: !11619, inlinedAt: !23945)
!24089 = !DILocation(line: 378, column: 32, scope: !11809, inlinedAt: !23945)
!24090 = !DILocation(line: 379, column: 6, scope: !11814, inlinedAt: !23945)
!24091 = !DILocation(line: 379, column: 11, scope: !11814, inlinedAt: !23945)
!24092 = !DILocation(line: 379, column: 6, scope: !11619, inlinedAt: !23945)
!24093 = !DILocation(line: 379, column: 33, scope: !11814, inlinedAt: !23945)
!24094 = !DILocation(line: 380, column: 6, scope: !11819, inlinedAt: !23945)
!24095 = !DILocation(line: 380, column: 11, scope: !11819, inlinedAt: !23945)
!24096 = !DILocation(line: 380, column: 6, scope: !11619, inlinedAt: !23945)
!24097 = !DILocation(line: 380, column: 33, scope: !11819, inlinedAt: !23945)
!24098 = !DILocation(line: 381, column: 6, scope: !11824, inlinedAt: !23945)
!24099 = !DILocation(line: 381, column: 11, scope: !11824, inlinedAt: !23945)
!24100 = !DILocation(line: 381, column: 6, scope: !11619, inlinedAt: !23945)
!24101 = !DILocation(line: 381, column: 33, scope: !11824, inlinedAt: !23945)
!24102 = !DILocation(line: 382, column: 2, scope: !11829, inlinedAt: !23945)
!24103 = !DILocation(line: 382, column: 2, scope: !11833, inlinedAt: !23945)
!24104 = !DILocation(line: 382, column: 2, scope: !11834, inlinedAt: !23945)
!24105 = !DILocation(line: 386, column: 1, scope: !11619, inlinedAt: !23945)
!24106 = !DILocation(line: 567, column: 8, scope: !23196, inlinedAt: !23929)
!24107 = !DILocation(line: 567, column: 7, scope: !22899, inlinedAt: !23929)
!24108 = !DILocation(line: 568, column: 4, scope: !23196, inlinedAt: !23929)
!24109 = !DILocation(line: 571, column: 33, scope: !22899, inlinedAt: !23929)
!24110 = !DILocation(line: 325, column: 6, scope: !11845, inlinedAt: !23943)
!24111 = !DILocation(line: 325, column: 6, scope: !11613, inlinedAt: !23943)
!24112 = !DILocation(line: 326, column: 3, scope: !11845, inlinedAt: !23943)
!24113 = !DILocation(line: 332, column: 9, scope: !11613, inlinedAt: !23943)
!24114 = !DILocation(line: 332, column: 15, scope: !11613, inlinedAt: !23943)
!24115 = !DILocation(line: 332, column: 2, scope: !11613, inlinedAt: !23943)
!24116 = !DILocation(line: 336, column: 1, scope: !11613, inlinedAt: !23943)
!24117 = !DILocation(line: 571, column: 5, scope: !22899, inlinedAt: !23929)
!24118 = !DILocation(line: 571, column: 41, scope: !22899, inlinedAt: !23929)
!24119 = !DILocation(line: 572, column: 7, scope: !22899, inlinedAt: !23929)
!24120 = !DILocation(line: 572, column: 14, scope: !22899, inlinedAt: !23929)
!24121 = !DILocation(line: 572, column: 20, scope: !22899, inlinedAt: !23929)
!24122 = !DILocation(line: 459, column: 36, scope: !22895, inlinedAt: !23934)
!24123 = !DILocation(line: 459, column: 39, scope: !22895, inlinedAt: !23934)
!24124 = !DILocation(line: 459, column: 49, scope: !22895, inlinedAt: !23934)
!24125 = !DILocation(line: 423, column: 26, scope: !22890, inlinedAt: !23933)
!24126 = !DILocation(line: 423, column: 29, scope: !22890, inlinedAt: !23933)
!24127 = !DILocation(line: 423, column: 9, scope: !22890, inlinedAt: !23933)
!24128 = !DILocation(line: 461, column: 22, scope: !22895, inlinedAt: !23934)
!24129 = !DILocation(line: 461, column: 25, scope: !22895, inlinedAt: !23934)
!24130 = !DILocation(line: 461, column: 30, scope: !22895, inlinedAt: !23934)
!24131 = !DILocation(line: 461, column: 36, scope: !22895, inlinedAt: !23934)
!24132 = !DILocation(line: 461, column: 8, scope: !22895, inlinedAt: !23934)
!24133 = !DILocation(line: 461, column: 6, scope: !22895, inlinedAt: !23934)
!24134 = !DILocation(line: 462, column: 9, scope: !22895, inlinedAt: !23934)
!24135 = !DILocation(line: 570, column: 3, scope: !22899, inlinedAt: !23929)
!24136 = !DILocation(line: 575, column: 24, scope: !22878, inlinedAt: !23929)
!24137 = !DILocation(line: 575, column: 30, scope: !22878, inlinedAt: !23929)
!24138 = !DILocation(line: 575, column: 37, scope: !22878, inlinedAt: !23929)
!24139 = !DILocation(line: 418, column: 19, scope: !22873, inlinedAt: !23928)
!24140 = !DILocation(line: 418, column: 25, scope: !22873, inlinedAt: !23928)
!24141 = !DILocation(line: 418, column: 9, scope: !22873, inlinedAt: !23928)
!24142 = !DILocation(line: 575, column: 2, scope: !22878, inlinedAt: !23929)
!24143 = !DILocation(line: 576, column: 1, scope: !22878, inlinedAt: !23929)
!24144 = !DILocation(line: 1754, column: 11, scope: !23899)
!24145 = !DILocation(line: 1754, column: 9, scope: !23899)
!24146 = !DILocation(line: 1755, column: 7, scope: !24147)
!24147 = distinct !DILexicalBlock(scope: !23899, file: !3, line: 1755, column: 6)
!24148 = !DILocation(line: 1755, column: 6, scope: !23899)
!24149 = !DILocation(line: 1756, column: 3, scope: !24147)
!24150 = !DILocation(line: 1758, column: 29, scope: !23899)
!24151 = !DILocation(line: 1758, column: 36, scope: !23899)
!24152 = !DILocation(line: 1758, column: 50, scope: !23899)
!24153 = !DILocation(line: 1758, column: 17, scope: !23899)
!24154 = !DILocation(line: 1758, column: 2, scope: !23899)
!24155 = !DILocation(line: 1758, column: 10, scope: !23899)
!24156 = !DILocation(line: 1758, column: 15, scope: !23899)
!24157 = !DILocation(line: 1759, column: 7, scope: !24158)
!24158 = distinct !DILexicalBlock(scope: !23899, file: !3, line: 1759, column: 6)
!24159 = !DILocation(line: 1759, column: 15, scope: !24158)
!24160 = !DILocation(line: 1759, column: 6, scope: !23899)
!24161 = !DILocation(line: 1760, column: 3, scope: !24158)
!24162 = !DILocation(line: 1762, column: 19, scope: !23899)
!24163 = !DILocation(line: 1516, column: 9, scope: !23920, inlinedAt: !23926)
!24164 = !DILocation(line: 1762, column: 2, scope: !23899)
!24165 = !DILocation(line: 1762, column: 10, scope: !23899)
!24166 = !DILocation(line: 1762, column: 17, scope: !23899)
!24167 = !DILocation(line: 1764, column: 33, scope: !23899)
!24168 = !DILocation(line: 1764, column: 16, scope: !23899)
!24169 = !DILocation(line: 1764, column: 2, scope: !23899)
!24170 = !DILocation(line: 1764, column: 10, scope: !23899)
!24171 = !DILocation(line: 1764, column: 14, scope: !23899)
!24172 = !DILocation(line: 1765, column: 7, scope: !24173)
!24173 = distinct !DILexicalBlock(scope: !23899, file: !3, line: 1765, column: 6)
!24174 = !DILocation(line: 1765, column: 15, scope: !24173)
!24175 = !DILocation(line: 1765, column: 6, scope: !23899)
!24176 = !DILocation(line: 1766, column: 3, scope: !24173)
!24177 = !DILocation(line: 1768, column: 20, scope: !23899)
!24178 = !DILocation(line: 1768, column: 2, scope: !23899)
!24179 = !DILocation(line: 1768, column: 10, scope: !23899)
!24180 = !DILocation(line: 1768, column: 18, scope: !23899)
!24181 = !DILocation(line: 1770, column: 18, scope: !23899)
!24182 = !DILocation(line: 1770, column: 26, scope: !23899)
!24183 = !DILocation(line: 1770, column: 2, scope: !23899)
!24184 = !DILocation(line: 1771, column: 18, scope: !23899)
!24185 = !DILocation(line: 1771, column: 26, scope: !23899)
!24186 = !DILocation(line: 1771, column: 2, scope: !23899)
!24187 = !DILocation(line: 1772, column: 2, scope: !23899)
!24188 = !DILocation(line: 1772, column: 2, scope: !23918)
!24189 = !DILocalVariable(name: "__dummy", scope: !24190, file: !3, line: 1772, type: !394)
!24190 = distinct !DILexicalBlock(scope: !23917, file: !3, line: 1772, column: 2)
!24191 = !DILocation(line: 1772, column: 2, scope: !24190)
!24192 = !DILocalVariable(name: "__dummy2", scope: !24190, file: !3, line: 1772, type: !394)
!24193 = !DILocation(line: 1772, column: 2, scope: !23917)
!24194 = !DILocation(line: 1772, column: 2, scope: !23916)
!24195 = !DILocation(line: 1772, column: 2, scope: !24196)
!24196 = distinct !DILexicalBlock(scope: !23916, file: !3, line: 1772, column: 2)
!24197 = !DILocalVariable(name: "__dummy", scope: !24198, file: !3, line: 1772, type: !394)
!24198 = distinct !DILexicalBlock(scope: !24199, file: !3, line: 1772, column: 2)
!24199 = distinct !DILexicalBlock(scope: !24196, file: !3, line: 1772, column: 2)
!24200 = !DILocation(line: 1772, column: 2, scope: !24198)
!24201 = !DILocalVariable(name: "__dummy2", scope: !24198, file: !3, line: 1772, type: !394)
!24202 = !DILocation(line: 1772, column: 2, scope: !24199)
!24203 = !DILocation(line: 1772, column: 2, scope: !23915)
!24204 = !{i32 -2137101998}
!24205 = !DILocation(line: 1772, column: 2, scope: !23914)
!24206 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !23913)
!24207 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !23913)
!24208 = !DILocation(line: 1773, column: 17, scope: !23899)
!24209 = !DILocation(line: 1773, column: 25, scope: !23899)
!24210 = !DILocation(line: 1773, column: 37, scope: !23899)
!24211 = !DILocation(line: 1773, column: 41, scope: !23899)
!24212 = !DILocation(line: 1773, column: 2, scope: !23899)
!24213 = !DILocation(line: 1774, column: 26, scope: !23899)
!24214 = !DILocation(line: 1774, column: 30, scope: !23899)
!24215 = !DILocation(line: 1774, column: 39, scope: !23899)
!24216 = !DILocation(line: 409, column: 2, scope: !15498, inlinedAt: !23910)
!24217 = !DILocation(line: 409, column: 2, scope: !15503, inlinedAt: !23910)
!24218 = !DILocation(line: 409, column: 2, scope: !15504, inlinedAt: !23910)
!24219 = !DILocation(line: 409, column: 2, scope: !15511, inlinedAt: !23910)
!24220 = !DILocation(line: 409, column: 2, scope: !15514, inlinedAt: !23910)
!24221 = !DILocation(line: 1776, column: 14, scope: !23899)
!24222 = !DILocation(line: 1776, column: 18, scope: !23899)
!24223 = !DILocation(line: 240, column: 31, scope: !22254, inlinedAt: !23904)
!24224 = !DILocation(line: 101, column: 20, scope: !15954, inlinedAt: !23906)
!24225 = !DILocation(line: 101, column: 23, scope: !15954, inlinedAt: !23906)
!24226 = !DILocation(line: 101, column: 2, scope: !15954, inlinedAt: !23906)
!24227 = !DILocation(line: 102, column: 2, scope: !15954, inlinedAt: !23906)
!24228 = !DILocation(line: 241, column: 18, scope: !22254, inlinedAt: !23904)
!24229 = !DILocation(line: 96, column: 16, scope: !22251, inlinedAt: !23903)
!24230 = !DILocation(line: 96, column: 19, scope: !22251, inlinedAt: !23903)
!24231 = !DILocation(line: 95, column: 2, scope: !22251, inlinedAt: !23903)
!24232 = !DILocation(line: 1778, column: 9, scope: !23899)
!24233 = !DILocation(line: 1778, column: 2, scope: !23899)
!24234 = !DILabel(scope: !23899, name: "free_buf", file: !3, line: 1780)
!24235 = !DILocation(line: 1780, column: 1, scope: !23899)
!24236 = !DILocation(line: 1781, column: 15, scope: !23899)
!24237 = !DILocation(line: 1781, column: 23, scope: !23899)
!24238 = !DILocation(line: 1781, column: 29, scope: !23899)
!24239 = !DILocation(line: 1781, column: 2, scope: !23899)
!24240 = !DILabel(scope: !23899, name: "free_rx", file: !3, line: 1782)
!24241 = !DILocation(line: 1782, column: 1, scope: !23899)
!24242 = !DILocation(line: 1783, column: 8, scope: !23899)
!24243 = !DILocation(line: 1783, column: 2, scope: !23899)
!24244 = !DILocation(line: 1784, column: 2, scope: !23899)
!24245 = !DILocation(line: 1785, column: 1, scope: !23899)
!24246 = distinct !DISubprogram(name: "usb_fill_int_urb", scope: !9505, file: !9505, line: 1688, type: !24247, scopeLine: 1696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24247 = !DISubroutineType(types: !24248)
!24248 = !{null, !10218, !9907, !7, !647, !72, !10267, !647, !72}
!24249 = !DILocalVariable(name: "urb", arg: 1, scope: !24246, file: !9505, line: 1688, type: !10218)
!24250 = !DILocation(line: 1688, column: 49, scope: !24246)
!24251 = !DILocalVariable(name: "dev", arg: 2, scope: !24246, file: !9505, line: 1689, type: !9907)
!24252 = !DILocation(line: 1689, column: 28, scope: !24246)
!24253 = !DILocalVariable(name: "pipe", arg: 3, scope: !24246, file: !9505, line: 1690, type: !7)
!24254 = !DILocation(line: 1690, column: 22, scope: !24246)
!24255 = !DILocalVariable(name: "transfer_buffer", arg: 4, scope: !24246, file: !9505, line: 1691, type: !647)
!24256 = !DILocation(line: 1691, column: 15, scope: !24246)
!24257 = !DILocalVariable(name: "buffer_length", arg: 5, scope: !24246, file: !9505, line: 1692, type: !72)
!24258 = !DILocation(line: 1692, column: 13, scope: !24246)
!24259 = !DILocalVariable(name: "complete_fn", arg: 6, scope: !24246, file: !9505, line: 1693, type: !10267)
!24260 = !DILocation(line: 1693, column: 24, scope: !24246)
!24261 = !DILocalVariable(name: "context", arg: 7, scope: !24246, file: !9505, line: 1694, type: !647)
!24262 = !DILocation(line: 1694, column: 15, scope: !24246)
!24263 = !DILocalVariable(name: "interval", arg: 8, scope: !24246, file: !9505, line: 1695, type: !72)
!24264 = !DILocation(line: 1695, column: 13, scope: !24246)
!24265 = !DILocation(line: 1697, column: 13, scope: !24246)
!24266 = !DILocation(line: 1697, column: 2, scope: !24246)
!24267 = !DILocation(line: 1697, column: 7, scope: !24246)
!24268 = !DILocation(line: 1697, column: 11, scope: !24246)
!24269 = !DILocation(line: 1698, column: 14, scope: !24246)
!24270 = !DILocation(line: 1698, column: 2, scope: !24246)
!24271 = !DILocation(line: 1698, column: 7, scope: !24246)
!24272 = !DILocation(line: 1698, column: 12, scope: !24246)
!24273 = !DILocation(line: 1699, column: 25, scope: !24246)
!24274 = !DILocation(line: 1699, column: 2, scope: !24246)
!24275 = !DILocation(line: 1699, column: 7, scope: !24246)
!24276 = !DILocation(line: 1699, column: 23, scope: !24246)
!24277 = !DILocation(line: 1700, column: 32, scope: !24246)
!24278 = !DILocation(line: 1700, column: 2, scope: !24246)
!24279 = !DILocation(line: 1700, column: 7, scope: !24246)
!24280 = !DILocation(line: 1700, column: 30, scope: !24246)
!24281 = !DILocation(line: 1701, column: 18, scope: !24246)
!24282 = !DILocation(line: 1701, column: 2, scope: !24246)
!24283 = !DILocation(line: 1701, column: 7, scope: !24246)
!24284 = !DILocation(line: 1701, column: 16, scope: !24246)
!24285 = !DILocation(line: 1702, column: 17, scope: !24246)
!24286 = !DILocation(line: 1702, column: 2, scope: !24246)
!24287 = !DILocation(line: 1702, column: 7, scope: !24246)
!24288 = !DILocation(line: 1702, column: 15, scope: !24246)
!24289 = !DILocation(line: 1704, column: 6, scope: !24290)
!24290 = distinct !DILexicalBlock(scope: !24246, file: !9505, line: 1704, column: 6)
!24291 = !DILocation(line: 1704, column: 11, scope: !24290)
!24292 = !DILocation(line: 1704, column: 17, scope: !24290)
!24293 = !DILocation(line: 1704, column: 35, scope: !24290)
!24294 = !DILocation(line: 1704, column: 38, scope: !24290)
!24295 = !DILocation(line: 1704, column: 43, scope: !24290)
!24296 = !DILocation(line: 1704, column: 49, scope: !24290)
!24297 = !DILocation(line: 1704, column: 6, scope: !24246)
!24298 = !DILocalVariable(name: "__UNIQUE_ID___x320", scope: !24299, file: !9505, line: 1706, type: !72)
!24299 = distinct !DILexicalBlock(scope: !24300, file: !9505, line: 1706, column: 14)
!24300 = distinct !DILexicalBlock(scope: !24290, file: !9505, line: 1704, column: 69)
!24301 = !DILocation(line: 1706, column: 14, scope: !24299)
!24302 = !DILocalVariable(name: "__UNIQUE_ID___x318", scope: !24303, file: !9505, line: 1706, type: !72)
!24303 = distinct !DILexicalBlock(scope: !24299, file: !9505, line: 1706, column: 14)
!24304 = !DILocation(line: 1706, column: 14, scope: !24303)
!24305 = !DILocalVariable(name: "__UNIQUE_ID___y319", scope: !24303, file: !9505, line: 1706, type: !72)
!24306 = !DILocalVariable(name: "__UNIQUE_ID___y321", scope: !24299, file: !9505, line: 1706, type: !72)
!24307 = !DILocation(line: 1706, column: 12, scope: !24300)
!24308 = !DILocation(line: 1708, column: 25, scope: !24300)
!24309 = !DILocation(line: 1708, column: 34, scope: !24300)
!24310 = !DILocation(line: 1708, column: 21, scope: !24300)
!24311 = !DILocation(line: 1708, column: 3, scope: !24300)
!24312 = !DILocation(line: 1708, column: 8, scope: !24300)
!24313 = !DILocation(line: 1708, column: 17, scope: !24300)
!24314 = !DILocation(line: 1709, column: 2, scope: !24300)
!24315 = !DILocation(line: 1710, column: 19, scope: !24316)
!24316 = distinct !DILexicalBlock(scope: !24290, file: !9505, line: 1709, column: 9)
!24317 = !DILocation(line: 1710, column: 3, scope: !24316)
!24318 = !DILocation(line: 1710, column: 8, scope: !24316)
!24319 = !DILocation(line: 1710, column: 17, scope: !24316)
!24320 = !DILocation(line: 1713, column: 2, scope: !24246)
!24321 = !DILocation(line: 1713, column: 7, scope: !24246)
!24322 = !DILocation(line: 1713, column: 19, scope: !24246)
!24323 = !DILocation(line: 1714, column: 1, scope: !24246)
!24324 = distinct !DISubprogram(name: "intr_callback", scope: !3, file: !3, line: 1662, type: !10269, scopeLine: 1663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24325 = !DILocalVariable(name: "urb", arg: 1, scope: !24324, file: !3, line: 1662, type: !10218)
!24326 = !DILocation(line: 1662, column: 39, scope: !24324)
!24327 = !DILocalVariable(name: "tp", scope: !24324, file: !3, line: 1664, type: !10280)
!24328 = !DILocation(line: 1664, column: 16, scope: !24324)
!24329 = !DILocalVariable(name: "d", scope: !24324, file: !3, line: 1665, type: !10525)
!24330 = !DILocation(line: 1665, column: 10, scope: !24324)
!24331 = !DILocalVariable(name: "status", scope: !24324, file: !3, line: 1666, type: !72)
!24332 = !DILocation(line: 1666, column: 6, scope: !24324)
!24333 = !DILocation(line: 1666, column: 15, scope: !24324)
!24334 = !DILocation(line: 1666, column: 20, scope: !24324)
!24335 = !DILocalVariable(name: "res", scope: !24324, file: !3, line: 1667, type: !72)
!24336 = !DILocation(line: 1667, column: 6, scope: !24324)
!24337 = !DILocation(line: 1669, column: 7, scope: !24324)
!24338 = !DILocation(line: 1669, column: 12, scope: !24324)
!24339 = !DILocation(line: 1669, column: 5, scope: !24324)
!24340 = !DILocation(line: 1670, column: 7, scope: !24341)
!24341 = distinct !DILexicalBlock(scope: !24324, file: !3, line: 1670, column: 6)
!24342 = !DILocation(line: 1670, column: 6, scope: !24324)
!24343 = !DILocation(line: 1671, column: 3, scope: !24341)
!24344 = !DILocation(line: 1673, column: 30, scope: !24345)
!24345 = distinct !DILexicalBlock(scope: !24324, file: !3, line: 1673, column: 6)
!24346 = !DILocation(line: 1673, column: 34, scope: !24345)
!24347 = !DILocation(line: 1673, column: 7, scope: !24345)
!24348 = !DILocation(line: 1673, column: 6, scope: !24324)
!24349 = !DILocation(line: 1674, column: 3, scope: !24345)
!24350 = !DILocation(line: 1676, column: 32, scope: !24351)
!24351 = distinct !DILexicalBlock(scope: !24324, file: !3, line: 1676, column: 6)
!24352 = !DILocation(line: 1676, column: 36, scope: !24351)
!24353 = !DILocation(line: 1676, column: 6, scope: !24351)
!24354 = !DILocation(line: 1676, column: 6, scope: !24324)
!24355 = !DILocation(line: 1677, column: 3, scope: !24351)
!24356 = !DILocation(line: 1679, column: 10, scope: !24324)
!24357 = !DILocation(line: 1679, column: 2, scope: !24324)
!24358 = !DILocation(line: 1681, column: 3, scope: !24359)
!24359 = distinct !DILexicalBlock(scope: !24324, file: !3, line: 1679, column: 18)
!24360 = !DILocation(line: 1684, column: 23, scope: !24359)
!24361 = !DILocation(line: 1684, column: 27, scope: !24359)
!24362 = !DILocation(line: 1684, column: 3, scope: !24359)
!24363 = !DILocation(line: 1688, column: 3, scope: !24359)
!24364 = !DILocation(line: 1688, column: 3, scope: !24365)
!24365 = distinct !DILexicalBlock(scope: !24366, file: !3, line: 1688, column: 3)
!24366 = distinct !DILexicalBlock(scope: !24359, file: !3, line: 1688, column: 3)
!24367 = !DILocation(line: 1688, column: 3, scope: !24366)
!24368 = !DILocation(line: 1690, column: 3, scope: !24359)
!24369 = !DILocation(line: 1692, column: 3, scope: !24359)
!24370 = !DILocation(line: 1692, column: 3, scope: !24371)
!24371 = distinct !DILexicalBlock(scope: !24372, file: !3, line: 1692, column: 3)
!24372 = distinct !DILexicalBlock(scope: !24359, file: !3, line: 1692, column: 3)
!24373 = !DILocation(line: 1692, column: 3, scope: !24372)
!24374 = !DILocation(line: 1693, column: 3, scope: !24359)
!24375 = !DILocation(line: 1696, column: 3, scope: !24359)
!24376 = !DILocation(line: 1696, column: 3, scope: !24377)
!24377 = distinct !DILexicalBlock(scope: !24378, file: !3, line: 1696, column: 3)
!24378 = distinct !DILexicalBlock(scope: !24359, file: !3, line: 1696, column: 3)
!24379 = !DILocation(line: 1696, column: 3, scope: !24378)
!24380 = !DILocation(line: 1697, column: 3, scope: !24359)
!24381 = !DILocation(line: 1700, column: 6, scope: !24324)
!24382 = !DILocation(line: 1700, column: 11, scope: !24324)
!24383 = !DILocation(line: 1700, column: 4, scope: !24324)
!24384 = !DILocation(line: 1701, column: 18, scope: !24385)
!24385 = distinct !DILexicalBlock(scope: !24324, file: !3, line: 1701, column: 6)
!24386 = !DILocation(line: 1701, column: 16, scope: !24385)
!24387 = !DILocation(line: 1701, column: 6, scope: !24324)
!24388 = !DILocation(line: 1702, column: 25, scope: !24389)
!24389 = distinct !DILexicalBlock(scope: !24390, file: !3, line: 1702, column: 7)
!24390 = distinct !DILexicalBlock(scope: !24385, file: !3, line: 1701, column: 39)
!24391 = !DILocation(line: 1702, column: 29, scope: !24389)
!24392 = !DILocation(line: 1702, column: 8, scope: !24389)
!24393 = !DILocation(line: 1702, column: 7, scope: !24390)
!24394 = !DILocation(line: 1703, column: 31, scope: !24395)
!24395 = distinct !DILexicalBlock(scope: !24389, file: !3, line: 1702, column: 38)
!24396 = !DILocation(line: 1703, column: 35, scope: !24395)
!24397 = !DILocation(line: 1703, column: 4, scope: !24395)
!24398 = !DILocation(line: 1704, column: 27, scope: !24395)
!24399 = !DILocation(line: 1704, column: 31, scope: !24395)
!24400 = !DILocation(line: 1704, column: 4, scope: !24395)
!24401 = !DILocation(line: 1705, column: 3, scope: !24395)
!24402 = !DILocation(line: 1706, column: 2, scope: !24390)
!24403 = !DILocation(line: 1707, column: 24, scope: !24404)
!24404 = distinct !DILexicalBlock(scope: !24405, file: !3, line: 1707, column: 7)
!24405 = distinct !DILexicalBlock(scope: !24385, file: !3, line: 1706, column: 9)
!24406 = !DILocation(line: 1707, column: 28, scope: !24404)
!24407 = !DILocation(line: 1707, column: 7, scope: !24404)
!24408 = !DILocation(line: 1707, column: 7, scope: !24405)
!24409 = !DILocation(line: 1708, column: 21, scope: !24410)
!24410 = distinct !DILexicalBlock(scope: !24404, file: !3, line: 1707, column: 37)
!24411 = !DILocation(line: 1708, column: 25, scope: !24410)
!24412 = !DILocation(line: 1708, column: 4, scope: !24410)
!24413 = !DILocation(line: 1709, column: 31, scope: !24410)
!24414 = !DILocation(line: 1709, column: 35, scope: !24410)
!24415 = !DILocation(line: 1709, column: 4, scope: !24410)
!24416 = !DILocation(line: 1710, column: 27, scope: !24410)
!24417 = !DILocation(line: 1710, column: 31, scope: !24410)
!24418 = !DILocation(line: 1710, column: 4, scope: !24410)
!24419 = !DILocation(line: 1711, column: 3, scope: !24410)
!24420 = !DILabel(scope: !24324, name: "resubmit", file: !3, line: 1714)
!24421 = !DILocation(line: 1714, column: 1, scope: !24324)
!24422 = !DILocation(line: 1715, column: 23, scope: !24324)
!24423 = !DILocation(line: 1715, column: 8, scope: !24324)
!24424 = !DILocation(line: 1715, column: 6, scope: !24324)
!24425 = !DILocation(line: 1716, column: 6, scope: !24426)
!24426 = distinct !DILexicalBlock(scope: !24324, file: !3, line: 1716, column: 6)
!24427 = !DILocation(line: 1716, column: 10, scope: !24426)
!24428 = !DILocation(line: 1716, column: 6, scope: !24324)
!24429 = !DILocation(line: 1717, column: 18, scope: !24430)
!24430 = distinct !DILexicalBlock(scope: !24426, file: !3, line: 1716, column: 22)
!24431 = !DILocation(line: 1717, column: 3, scope: !24430)
!24432 = !DILocation(line: 1718, column: 23, scope: !24430)
!24433 = !DILocation(line: 1718, column: 27, scope: !24430)
!24434 = !DILocation(line: 1718, column: 3, scope: !24430)
!24435 = !DILocation(line: 1719, column: 2, scope: !24430)
!24436 = !DILocation(line: 1719, column: 13, scope: !24437)
!24437 = distinct !DILexicalBlock(scope: !24426, file: !3, line: 1719, column: 13)
!24438 = !DILocation(line: 1719, column: 13, scope: !24426)
!24439 = !DILocation(line: 1720, column: 3, scope: !24440)
!24440 = distinct !DILexicalBlock(scope: !24437, file: !3, line: 1719, column: 18)
!24441 = !DILocation(line: 1720, column: 3, scope: !24442)
!24442 = distinct !DILexicalBlock(scope: !24443, file: !3, line: 1720, column: 3)
!24443 = distinct !DILexicalBlock(scope: !24440, file: !3, line: 1720, column: 3)
!24444 = !DILocation(line: 1720, column: 3, scope: !24443)
!24445 = !DILocation(line: 1722, column: 2, scope: !24440)
!24446 = !DILocation(line: 1723, column: 1, scope: !24324)
!24447 = distinct !DISubprogram(name: "alloc_pages", scope: !24448, file: !24448, line: 555, type: !24449, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24448 = !DIFile(filename: "./include/linux/gfp.h", directory: "/home/lizy2001/genbc/linux")
!24449 = !DISubroutineType(types: !24450)
!24450 = !{!701, !2067, !7}
!24451 = !DILocalVariable(name: "gfp_mask", arg: 1, scope: !24447, file: !24448, line: 555, type: !2067)
!24452 = !DILocation(line: 555, column: 46, scope: !24447)
!24453 = !DILocalVariable(name: "order", arg: 2, scope: !24447, file: !24448, line: 555, type: !7)
!24454 = !DILocation(line: 555, column: 69, scope: !24447)
!24455 = !DILocation(line: 557, column: 26, scope: !24447)
!24456 = !DILocation(line: 557, column: 42, scope: !24447)
!24457 = !DILocation(line: 557, column: 52, scope: !24447)
!24458 = !DILocation(line: 557, column: 9, scope: !24447)
!24459 = !DILocation(line: 557, column: 2, scope: !24447)
!24460 = distinct !DISubprogram(name: "alloc_pages_node", scope: !24448, file: !24448, line: 532, type: !24461, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24461 = !DISubroutineType(types: !24462)
!24462 = !{!701, !72, !2067, !7}
!24463 = !DILocalVariable(name: "nid", arg: 1, scope: !24460, file: !24448, line: 532, type: !72)
!24464 = !DILocation(line: 532, column: 49, scope: !24460)
!24465 = !DILocalVariable(name: "gfp_mask", arg: 2, scope: !24460, file: !24448, line: 532, type: !2067)
!24466 = !DILocation(line: 532, column: 60, scope: !24460)
!24467 = !DILocalVariable(name: "order", arg: 3, scope: !24460, file: !24448, line: 533, type: !7)
!24468 = !DILocation(line: 533, column: 20, scope: !24460)
!24469 = !DILocation(line: 535, column: 6, scope: !24470)
!24470 = distinct !DILexicalBlock(scope: !24460, file: !24448, line: 535, column: 6)
!24471 = !DILocation(line: 535, column: 10, scope: !24470)
!24472 = !DILocation(line: 535, column: 6, scope: !24460)
!24473 = !DILocation(line: 536, column: 9, scope: !24470)
!24474 = !DILocation(line: 536, column: 7, scope: !24470)
!24475 = !DILocation(line: 536, column: 3, scope: !24470)
!24476 = !DILocation(line: 538, column: 28, scope: !24460)
!24477 = !DILocation(line: 538, column: 33, scope: !24460)
!24478 = !DILocation(line: 538, column: 43, scope: !24460)
!24479 = !DILocation(line: 538, column: 9, scope: !24460)
!24480 = !DILocation(line: 538, column: 2, scope: !24460)
!24481 = distinct !DISubprogram(name: "numa_node_id", scope: !24482, file: !24482, line: 85, type: !10988, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24482 = !DIFile(filename: "./arch/x86/include/asm/topology.h", directory: "/home/lizy2001/genbc/linux")
!24483 = !DILocation(line: 87, column: 2, scope: !24481)
!24484 = distinct !DISubprogram(name: "numa_mem_id", scope: !24485, file: !24485, line: 167, type: !10988, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24485 = !DIFile(filename: "./include/linux/topology.h", directory: "/home/lizy2001/genbc/linux")
!24486 = !DILocation(line: 169, column: 9, scope: !24484)
!24487 = !DILocation(line: 169, column: 2, scope: !24484)
!24488 = distinct !DISubprogram(name: "__alloc_pages_node", scope: !24448, file: !24448, line: 519, type: !24461, scopeLine: 520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24489 = !DILocalVariable(name: "nid", arg: 1, scope: !24488, file: !24448, line: 519, type: !72)
!24490 = !DILocation(line: 519, column: 24, scope: !24488)
!24491 = !DILocalVariable(name: "gfp_mask", arg: 2, scope: !24488, file: !24448, line: 519, type: !2067)
!24492 = !DILocation(line: 519, column: 35, scope: !24488)
!24493 = !DILocalVariable(name: "order", arg: 3, scope: !24488, file: !24448, line: 519, type: !7)
!24494 = !DILocation(line: 519, column: 58, scope: !24488)
!24495 = !DILocation(line: 524, column: 23, scope: !24488)
!24496 = !DILocation(line: 524, column: 33, scope: !24488)
!24497 = !DILocation(line: 524, column: 40, scope: !24488)
!24498 = !DILocation(line: 524, column: 9, scope: !24488)
!24499 = !DILocation(line: 524, column: 2, scope: !24488)
!24500 = distinct !DISubprogram(name: "__alloc_pages", scope: !24448, file: !24448, line: 509, type: !24501, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24501 = !DISubroutineType(types: !24502)
!24502 = !{!701, !2067, !7, !72}
!24503 = !DILocalVariable(name: "gfp_mask", arg: 1, scope: !24500, file: !24448, line: 509, type: !2067)
!24504 = !DILocation(line: 509, column: 21, scope: !24500)
!24505 = !DILocalVariable(name: "order", arg: 2, scope: !24500, file: !24448, line: 509, type: !7)
!24506 = !DILocation(line: 509, column: 44, scope: !24500)
!24507 = !DILocalVariable(name: "preferred_nid", arg: 3, scope: !24500, file: !24448, line: 509, type: !72)
!24508 = !DILocation(line: 509, column: 55, scope: !24500)
!24509 = !DILocation(line: 511, column: 32, scope: !24500)
!24510 = !DILocation(line: 511, column: 42, scope: !24500)
!24511 = !DILocation(line: 511, column: 49, scope: !24500)
!24512 = !DILocation(line: 511, column: 9, scope: !24500)
!24513 = !DILocation(line: 511, column: 2, scope: !24500)
!24514 = distinct !DISubprogram(name: "skb_tx_timestamp", scope: !499, file: !499, line: 3876, type: !2793, scopeLine: 3877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24515 = !DILocalVariable(name: "skb", arg: 1, scope: !24514, file: !499, line: 3876, type: !497)
!24516 = !DILocation(line: 3876, column: 53, scope: !24514)
!24517 = !DILocation(line: 3878, column: 25, scope: !24514)
!24518 = !DILocation(line: 3878, column: 2, scope: !24514)
!24519 = !DILocation(line: 3879, column: 6, scope: !24520)
!24520 = distinct !DILexicalBlock(scope: !24514, file: !499, line: 3879, column: 6)
!24521 = !DILocation(line: 3879, column: 23, scope: !24520)
!24522 = !DILocation(line: 3879, column: 32, scope: !24520)
!24523 = !DILocation(line: 3879, column: 6, scope: !24514)
!24524 = !DILocation(line: 3880, column: 17, scope: !24520)
!24525 = !DILocation(line: 3880, column: 3, scope: !24520)
!24526 = !DILocation(line: 3881, column: 1, scope: !24514)
!24527 = distinct !DISubprogram(name: "skb_clone_tx_timestamp", scope: !499, file: !499, line: 3820, type: !2793, scopeLine: 3821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24528 = !DILocalVariable(name: "skb", arg: 1, scope: !24527, file: !499, line: 3820, type: !497)
!24529 = !DILocation(line: 3820, column: 59, scope: !24527)
!24530 = !DILocation(line: 3822, column: 1, scope: !24527)
!24531 = distinct !DISubprogram(name: "is_valid_ether_addr", scope: !24532, file: !24532, line: 191, type: !24533, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24532 = !DIFile(filename: "./include/linux/etherdevice.h", directory: "/home/lizy2001/genbc/linux")
!24533 = !DISubroutineType(types: !24534)
!24534 = !{!617, !8489}
!24535 = !DILocalVariable(name: "addr", arg: 1, scope: !24531, file: !24532, line: 191, type: !8489)
!24536 = !DILocation(line: 191, column: 50, scope: !24531)
!24537 = !DILocation(line: 195, column: 34, scope: !24531)
!24538 = !DILocation(line: 195, column: 10, scope: !24531)
!24539 = !DILocation(line: 195, column: 40, scope: !24531)
!24540 = !DILocation(line: 195, column: 63, scope: !24531)
!24541 = !DILocation(line: 195, column: 44, scope: !24531)
!24542 = !DILocation(line: 195, column: 43, scope: !24531)
!24543 = !DILocation(line: 0, scope: !24531)
!24544 = !DILocation(line: 195, column: 2, scope: !24531)
!24545 = distinct !DISubprogram(name: "is_multicast_ether_addr", scope: !24532, file: !24532, line: 116, type: !24533, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24546 = !DILocalVariable(name: "addr", arg: 1, scope: !24545, file: !24532, line: 116, type: !8489)
!24547 = !DILocation(line: 116, column: 54, scope: !24545)
!24548 = !DILocalVariable(name: "a", scope: !24545, file: !24532, line: 119, type: !784)
!24549 = !DILocation(line: 119, column: 6, scope: !24545)
!24550 = !DILocation(line: 119, column: 24, scope: !24545)
!24551 = !DILocation(line: 119, column: 10, scope: !24545)
!24552 = !DILocation(line: 126, column: 16, scope: !24545)
!24553 = !DILocation(line: 126, column: 14, scope: !24545)
!24554 = !DILocation(line: 126, column: 9, scope: !24545)
!24555 = !DILocation(line: 126, column: 2, scope: !24545)
!24556 = distinct !DISubprogram(name: "is_zero_ether_addr", scope: !24532, file: !24532, line: 98, type: !24533, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24557 = !DILocalVariable(name: "addr", arg: 1, scope: !24556, file: !24532, line: 98, type: !8489)
!24558 = !DILocation(line: 98, column: 49, scope: !24556)
!24559 = !DILocation(line: 101, column: 25, scope: !24556)
!24560 = !DILocation(line: 101, column: 11, scope: !24556)
!24561 = !DILocation(line: 101, column: 49, scope: !24556)
!24562 = !DILocation(line: 101, column: 54, scope: !24556)
!24563 = !DILocation(line: 101, column: 34, scope: !24556)
!24564 = !DILocation(line: 101, column: 33, scope: !24556)
!24565 = !DILocation(line: 101, column: 31, scope: !24556)
!24566 = !DILocation(line: 101, column: 61, scope: !24556)
!24567 = !DILocation(line: 101, column: 2, scope: !24556)
!24568 = distinct !DISubprogram(name: "if_mii", scope: !10338, file: !10338, line: 51, type: !24569, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24569 = !DISubroutineType(types: !24570)
!24570 = !{!10745, !7645}
!24571 = !DILocalVariable(name: "rq", arg: 1, scope: !24568, file: !10338, line: 51, type: !7645)
!24572 = !DILocation(line: 51, column: 59, scope: !24568)
!24573 = !DILocation(line: 53, column: 36, scope: !24568)
!24574 = !DILocation(line: 53, column: 40, scope: !24568)
!24575 = !DILocation(line: 53, column: 9, scope: !24568)
!24576 = !DILocation(line: 53, column: 2, scope: !24568)
!24577 = distinct !DISubprogram(name: "rtl8152_get_drvinfo", scope: !3, file: !3, line: 5929, type: !8158, scopeLine: 5931, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24578 = !DILocalVariable(name: "netdev", arg: 1, scope: !24577, file: !3, line: 5929, type: !372)
!24579 = !DILocation(line: 5929, column: 52, scope: !24577)
!24580 = !DILocalVariable(name: "info", arg: 2, scope: !24577, file: !3, line: 5930, type: !8160)
!24581 = !DILocation(line: 5930, column: 29, scope: !24577)
!24582 = !DILocalVariable(name: "tp", scope: !24577, file: !3, line: 5932, type: !10280)
!24583 = !DILocation(line: 5932, column: 16, scope: !24577)
!24584 = !DILocation(line: 5932, column: 33, scope: !24577)
!24585 = !DILocation(line: 5932, column: 21, scope: !24577)
!24586 = !DILocation(line: 5934, column: 10, scope: !24577)
!24587 = !DILocation(line: 5934, column: 16, scope: !24577)
!24588 = !DILocation(line: 5934, column: 2, scope: !24577)
!24589 = !DILocation(line: 5935, column: 10, scope: !24577)
!24590 = !DILocation(line: 5935, column: 16, scope: !24577)
!24591 = !DILocation(line: 5935, column: 2, scope: !24577)
!24592 = !DILocation(line: 5936, column: 16, scope: !24577)
!24593 = !DILocation(line: 5936, column: 20, scope: !24577)
!24594 = !DILocation(line: 5936, column: 26, scope: !24577)
!24595 = !DILocation(line: 5936, column: 32, scope: !24577)
!24596 = !DILocation(line: 5936, column: 2, scope: !24577)
!24597 = !DILocation(line: 5937, column: 22, scope: !24598)
!24598 = distinct !DILexicalBlock(scope: !24577, file: !3, line: 5937, column: 6)
!24599 = !DILocation(line: 5937, column: 26, scope: !24598)
!24600 = !DILocation(line: 5937, column: 33, scope: !24598)
!24601 = !DILocation(line: 5937, column: 7, scope: !24598)
!24602 = !DILocation(line: 5937, column: 6, scope: !24577)
!24603 = !DILocation(line: 5938, column: 11, scope: !24598)
!24604 = !DILocation(line: 5938, column: 17, scope: !24598)
!24605 = !DILocation(line: 5938, column: 29, scope: !24598)
!24606 = !DILocation(line: 5938, column: 33, scope: !24598)
!24607 = !DILocation(line: 5938, column: 40, scope: !24598)
!24608 = !DILocation(line: 5938, column: 3, scope: !24598)
!24609 = !DILocation(line: 5940, column: 1, scope: !24577)
!24610 = distinct !DISubprogram(name: "rtl8152_get_wol", scope: !3, file: !3, line: 5867, type: !8190, scopeLine: 5868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24611 = !DILocalVariable(name: "dev", arg: 1, scope: !24610, file: !3, line: 5867, type: !372)
!24612 = !DILocation(line: 5867, column: 48, scope: !24610)
!24613 = !DILocalVariable(name: "wol", arg: 2, scope: !24610, file: !3, line: 5867, type: !8192)
!24614 = !DILocation(line: 5867, column: 77, scope: !24610)
!24615 = !DILocalVariable(name: "tp", scope: !24610, file: !3, line: 5869, type: !10280)
!24616 = !DILocation(line: 5869, column: 16, scope: !24610)
!24617 = !DILocation(line: 5869, column: 33, scope: !24610)
!24618 = !DILocation(line: 5869, column: 21, scope: !24610)
!24619 = !DILocation(line: 5871, column: 31, scope: !24620)
!24620 = distinct !DILexicalBlock(scope: !24610, file: !3, line: 5871, column: 6)
!24621 = !DILocation(line: 5871, column: 35, scope: !24620)
!24622 = !DILocation(line: 5871, column: 6, scope: !24620)
!24623 = !DILocation(line: 5871, column: 41, scope: !24620)
!24624 = !DILocation(line: 5871, column: 6, scope: !24610)
!24625 = !DILocation(line: 5872, column: 3, scope: !24620)
!24626 = !DILocation(line: 5874, column: 22, scope: !24627)
!24627 = distinct !DILexicalBlock(scope: !24610, file: !3, line: 5874, column: 6)
!24628 = !DILocation(line: 5874, column: 7, scope: !24627)
!24629 = !DILocation(line: 5874, column: 6, scope: !24610)
!24630 = !DILocation(line: 5875, column: 3, scope: !24631)
!24631 = distinct !DILexicalBlock(scope: !24627, file: !3, line: 5874, column: 27)
!24632 = !DILocation(line: 5875, column: 8, scope: !24631)
!24633 = !DILocation(line: 5875, column: 18, scope: !24631)
!24634 = !DILocation(line: 5876, column: 3, scope: !24631)
!24635 = !DILocation(line: 5876, column: 8, scope: !24631)
!24636 = !DILocation(line: 5876, column: 16, scope: !24631)
!24637 = !DILocation(line: 5877, column: 2, scope: !24631)
!24638 = !DILocation(line: 5878, column: 15, scope: !24639)
!24639 = distinct !DILexicalBlock(scope: !24627, file: !3, line: 5877, column: 9)
!24640 = !DILocation(line: 5878, column: 19, scope: !24639)
!24641 = !DILocation(line: 5878, column: 3, scope: !24639)
!24642 = !DILocation(line: 5879, column: 3, scope: !24639)
!24643 = !DILocation(line: 5879, column: 8, scope: !24639)
!24644 = !DILocation(line: 5879, column: 18, scope: !24639)
!24645 = !DILocation(line: 5880, column: 32, scope: !24639)
!24646 = !DILocation(line: 5880, column: 18, scope: !24639)
!24647 = !DILocation(line: 5880, column: 3, scope: !24639)
!24648 = !DILocation(line: 5880, column: 8, scope: !24639)
!24649 = !DILocation(line: 5880, column: 16, scope: !24639)
!24650 = !DILocation(line: 5881, column: 17, scope: !24639)
!24651 = !DILocation(line: 5881, column: 21, scope: !24639)
!24652 = !DILocation(line: 5881, column: 3, scope: !24639)
!24653 = !DILocation(line: 5884, column: 27, scope: !24610)
!24654 = !DILocation(line: 5884, column: 31, scope: !24610)
!24655 = !DILocation(line: 5884, column: 2, scope: !24610)
!24656 = !DILocation(line: 5885, column: 1, scope: !24610)
!24657 = distinct !DISubprogram(name: "rtl8152_set_wol", scope: !3, file: !3, line: 5887, type: !8202, scopeLine: 5888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24658 = !DILocalVariable(name: "dev", arg: 1, scope: !24657, file: !3, line: 5887, type: !372)
!24659 = !DILocation(line: 5887, column: 47, scope: !24657)
!24660 = !DILocalVariable(name: "wol", arg: 2, scope: !24657, file: !3, line: 5887, type: !8192)
!24661 = !DILocation(line: 5887, column: 76, scope: !24657)
!24662 = !DILocalVariable(name: "tp", scope: !24657, file: !3, line: 5889, type: !10280)
!24663 = !DILocation(line: 5889, column: 16, scope: !24657)
!24664 = !DILocation(line: 5889, column: 33, scope: !24657)
!24665 = !DILocation(line: 5889, column: 21, scope: !24657)
!24666 = !DILocalVariable(name: "ret", scope: !24657, file: !3, line: 5890, type: !72)
!24667 = !DILocation(line: 5890, column: 6, scope: !24657)
!24668 = !DILocation(line: 5892, column: 22, scope: !24669)
!24669 = distinct !DILexicalBlock(scope: !24657, file: !3, line: 5892, column: 6)
!24670 = !DILocation(line: 5892, column: 7, scope: !24669)
!24671 = !DILocation(line: 5892, column: 6, scope: !24657)
!24672 = !DILocation(line: 5893, column: 3, scope: !24669)
!24673 = !DILocation(line: 5895, column: 6, scope: !24674)
!24674 = distinct !DILexicalBlock(scope: !24657, file: !3, line: 5895, column: 6)
!24675 = !DILocation(line: 5895, column: 11, scope: !24674)
!24676 = !DILocation(line: 5895, column: 19, scope: !24674)
!24677 = !DILocation(line: 5895, column: 6, scope: !24657)
!24678 = !DILocation(line: 5896, column: 3, scope: !24674)
!24679 = !DILocation(line: 5898, column: 33, scope: !24657)
!24680 = !DILocation(line: 5898, column: 37, scope: !24657)
!24681 = !DILocation(line: 5898, column: 8, scope: !24657)
!24682 = !DILocation(line: 5898, column: 6, scope: !24657)
!24683 = !DILocation(line: 5899, column: 6, scope: !24684)
!24684 = distinct !DILexicalBlock(scope: !24657, file: !3, line: 5899, column: 6)
!24685 = !DILocation(line: 5899, column: 10, scope: !24684)
!24686 = !DILocation(line: 5899, column: 6, scope: !24657)
!24687 = !DILocation(line: 5900, column: 3, scope: !24684)
!24688 = !DILocation(line: 5902, column: 14, scope: !24657)
!24689 = !DILocation(line: 5902, column: 18, scope: !24657)
!24690 = !DILocation(line: 5902, column: 2, scope: !24657)
!24691 = !DILocation(line: 5904, column: 16, scope: !24657)
!24692 = !DILocation(line: 5904, column: 20, scope: !24657)
!24693 = !DILocation(line: 5904, column: 25, scope: !24657)
!24694 = !DILocation(line: 5904, column: 2, scope: !24657)
!24695 = !DILocation(line: 5905, column: 22, scope: !24657)
!24696 = !DILocation(line: 5905, column: 27, scope: !24657)
!24697 = !DILocation(line: 5905, column: 35, scope: !24657)
!24698 = !DILocation(line: 5905, column: 2, scope: !24657)
!24699 = !DILocation(line: 5905, column: 6, scope: !24657)
!24700 = !DILocation(line: 5905, column: 20, scope: !24657)
!24701 = !DILocation(line: 5907, column: 16, scope: !24657)
!24702 = !DILocation(line: 5907, column: 20, scope: !24657)
!24703 = !DILocation(line: 5907, column: 2, scope: !24657)
!24704 = !DILocation(line: 5909, column: 27, scope: !24657)
!24705 = !DILocation(line: 5909, column: 31, scope: !24657)
!24706 = !DILocation(line: 5909, column: 2, scope: !24657)
!24707 = !DILabel(scope: !24657, name: "out_set_wol", file: !3, line: 5911)
!24708 = !DILocation(line: 5911, column: 1, scope: !24657)
!24709 = !DILocation(line: 5912, column: 9, scope: !24657)
!24710 = !DILocation(line: 5912, column: 2, scope: !24657)
!24711 = !DILocation(line: 5913, column: 1, scope: !24657)
!24712 = distinct !DISubprogram(name: "rtl8152_get_msglevel", scope: !3, file: !3, line: 5915, type: !8206, scopeLine: 5916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24713 = !DILocalVariable(name: "dev", arg: 1, scope: !24712, file: !3, line: 5915, type: !372)
!24714 = !DILocation(line: 5915, column: 52, scope: !24712)
!24715 = !DILocalVariable(name: "tp", scope: !24712, file: !3, line: 5917, type: !10280)
!24716 = !DILocation(line: 5917, column: 16, scope: !24712)
!24717 = !DILocation(line: 5917, column: 33, scope: !24712)
!24718 = !DILocation(line: 5917, column: 21, scope: !24712)
!24719 = !DILocation(line: 5919, column: 9, scope: !24712)
!24720 = !DILocation(line: 5919, column: 13, scope: !24712)
!24721 = !DILocation(line: 5919, column: 2, scope: !24712)
!24722 = distinct !DISubprogram(name: "rtl8152_set_msglevel", scope: !3, file: !3, line: 5922, type: !8210, scopeLine: 5923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24723 = !DILocalVariable(name: "dev", arg: 1, scope: !24722, file: !3, line: 5922, type: !372)
!24724 = !DILocation(line: 5922, column: 53, scope: !24722)
!24725 = !DILocalVariable(name: "value", arg: 2, scope: !24722, file: !3, line: 5922, type: !784)
!24726 = !DILocation(line: 5922, column: 62, scope: !24722)
!24727 = !DILocalVariable(name: "tp", scope: !24722, file: !3, line: 5924, type: !10280)
!24728 = !DILocation(line: 5924, column: 16, scope: !24722)
!24729 = !DILocation(line: 5924, column: 33, scope: !24722)
!24730 = !DILocation(line: 5924, column: 21, scope: !24722)
!24731 = !DILocation(line: 5926, column: 19, scope: !24722)
!24732 = !DILocation(line: 5926, column: 2, scope: !24722)
!24733 = !DILocation(line: 5926, column: 6, scope: !24722)
!24734 = !DILocation(line: 5926, column: 17, scope: !24722)
!24735 = !DILocation(line: 5927, column: 1, scope: !24722)
!24736 = distinct !DISubprogram(name: "rtl8152_nway_reset", scope: !3, file: !3, line: 6189, type: !484, scopeLine: 6190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24737 = !DILocalVariable(name: "dev", arg: 1, scope: !24736, file: !3, line: 6189, type: !372)
!24738 = !DILocation(line: 6189, column: 50, scope: !24736)
!24739 = !DILocalVariable(name: "tp", scope: !24736, file: !3, line: 6191, type: !10280)
!24740 = !DILocation(line: 6191, column: 16, scope: !24736)
!24741 = !DILocation(line: 6191, column: 33, scope: !24736)
!24742 = !DILocation(line: 6191, column: 21, scope: !24736)
!24743 = !DILocalVariable(name: "ret", scope: !24736, file: !3, line: 6192, type: !72)
!24744 = !DILocation(line: 6192, column: 6, scope: !24736)
!24745 = !DILocation(line: 6194, column: 33, scope: !24736)
!24746 = !DILocation(line: 6194, column: 37, scope: !24736)
!24747 = !DILocation(line: 6194, column: 8, scope: !24736)
!24748 = !DILocation(line: 6194, column: 6, scope: !24736)
!24749 = !DILocation(line: 6195, column: 6, scope: !24750)
!24750 = distinct !DILexicalBlock(scope: !24736, file: !3, line: 6195, column: 6)
!24751 = !DILocation(line: 6195, column: 10, scope: !24750)
!24752 = !DILocation(line: 6195, column: 6, scope: !24736)
!24753 = !DILocation(line: 6196, column: 3, scope: !24750)
!24754 = !DILocation(line: 6198, column: 14, scope: !24736)
!24755 = !DILocation(line: 6198, column: 18, scope: !24736)
!24756 = !DILocation(line: 6198, column: 2, scope: !24736)
!24757 = !DILocation(line: 6200, column: 26, scope: !24736)
!24758 = !DILocation(line: 6200, column: 30, scope: !24736)
!24759 = !DILocation(line: 6200, column: 8, scope: !24736)
!24760 = !DILocation(line: 6200, column: 6, scope: !24736)
!24761 = !DILocation(line: 6202, column: 16, scope: !24736)
!24762 = !DILocation(line: 6202, column: 20, scope: !24736)
!24763 = !DILocation(line: 6202, column: 2, scope: !24736)
!24764 = !DILocation(line: 6204, column: 27, scope: !24736)
!24765 = !DILocation(line: 6204, column: 31, scope: !24736)
!24766 = !DILocation(line: 6204, column: 2, scope: !24736)
!24767 = !DILabel(scope: !24736, name: "out", file: !3, line: 6206)
!24768 = !DILocation(line: 6206, column: 1, scope: !24736)
!24769 = !DILocation(line: 6207, column: 9, scope: !24736)
!24770 = !DILocation(line: 6207, column: 2, scope: !24736)
!24771 = distinct !DISubprogram(name: "rtl8152_get_coalesce", scope: !3, file: !3, line: 6210, type: !8247, scopeLine: 6212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24772 = !DILocalVariable(name: "netdev", arg: 1, scope: !24771, file: !3, line: 6210, type: !372)
!24773 = !DILocation(line: 6210, column: 52, scope: !24771)
!24774 = !DILocalVariable(name: "coalesce", arg: 2, scope: !24771, file: !3, line: 6211, type: !8249)
!24775 = !DILocation(line: 6211, column: 30, scope: !24771)
!24776 = !DILocalVariable(name: "tp", scope: !24771, file: !3, line: 6213, type: !10280)
!24777 = !DILocation(line: 6213, column: 16, scope: !24771)
!24778 = !DILocation(line: 6213, column: 33, scope: !24771)
!24779 = !DILocation(line: 6213, column: 21, scope: !24771)
!24780 = !DILocation(line: 6215, column: 10, scope: !24771)
!24781 = !DILocation(line: 6215, column: 14, scope: !24771)
!24782 = !DILocation(line: 6215, column: 2, scope: !24771)
!24783 = !DILocation(line: 6219, column: 3, scope: !24784)
!24784 = distinct !DILexicalBlock(scope: !24771, file: !3, line: 6215, column: 23)
!24785 = !DILocation(line: 6221, column: 3, scope: !24784)
!24786 = !DILocation(line: 6224, column: 32, scope: !24771)
!24787 = !DILocation(line: 6224, column: 36, scope: !24771)
!24788 = !DILocation(line: 6224, column: 2, scope: !24771)
!24789 = !DILocation(line: 6224, column: 12, scope: !24771)
!24790 = !DILocation(line: 6224, column: 30, scope: !24771)
!24791 = !DILocation(line: 6226, column: 2, scope: !24771)
!24792 = !DILocation(line: 6227, column: 1, scope: !24771)
!24793 = distinct !DISubprogram(name: "rtl8152_set_coalesce", scope: !3, file: !3, line: 6229, type: !8247, scopeLine: 6231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24794 = !DILocalVariable(name: "netdev", arg: 1, scope: !24793, file: !3, line: 6229, type: !372)
!24795 = !DILocation(line: 6229, column: 52, scope: !24793)
!24796 = !DILocalVariable(name: "coalesce", arg: 2, scope: !24793, file: !3, line: 6230, type: !8249)
!24797 = !DILocation(line: 6230, column: 30, scope: !24793)
!24798 = !DILocalVariable(name: "tp", scope: !24793, file: !3, line: 6232, type: !10280)
!24799 = !DILocation(line: 6232, column: 16, scope: !24793)
!24800 = !DILocation(line: 6232, column: 33, scope: !24793)
!24801 = !DILocation(line: 6232, column: 21, scope: !24793)
!24802 = !DILocalVariable(name: "ret", scope: !24793, file: !3, line: 6233, type: !72)
!24803 = !DILocation(line: 6233, column: 6, scope: !24793)
!24804 = !DILocation(line: 6235, column: 10, scope: !24793)
!24805 = !DILocation(line: 6235, column: 14, scope: !24793)
!24806 = !DILocation(line: 6235, column: 2, scope: !24793)
!24807 = !DILocation(line: 6239, column: 3, scope: !24808)
!24808 = distinct !DILexicalBlock(scope: !24793, file: !3, line: 6235, column: 23)
!24809 = !DILocation(line: 6241, column: 3, scope: !24808)
!24810 = !DILocation(line: 6244, column: 6, scope: !24811)
!24811 = distinct !DILexicalBlock(scope: !24793, file: !3, line: 6244, column: 6)
!24812 = !DILocation(line: 6244, column: 16, scope: !24811)
!24813 = !DILocation(line: 6244, column: 34, scope: !24811)
!24814 = !DILocation(line: 6244, column: 6, scope: !24793)
!24815 = !DILocation(line: 6245, column: 3, scope: !24811)
!24816 = !DILocation(line: 6247, column: 33, scope: !24793)
!24817 = !DILocation(line: 6247, column: 37, scope: !24793)
!24818 = !DILocation(line: 6247, column: 8, scope: !24793)
!24819 = !DILocation(line: 6247, column: 6, scope: !24793)
!24820 = !DILocation(line: 6248, column: 6, scope: !24821)
!24821 = distinct !DILexicalBlock(scope: !24793, file: !3, line: 6248, column: 6)
!24822 = !DILocation(line: 6248, column: 10, scope: !24821)
!24823 = !DILocation(line: 6248, column: 6, scope: !24793)
!24824 = !DILocation(line: 6249, column: 10, scope: !24821)
!24825 = !DILocation(line: 6249, column: 3, scope: !24821)
!24826 = !DILocation(line: 6251, column: 14, scope: !24793)
!24827 = !DILocation(line: 6251, column: 18, scope: !24793)
!24828 = !DILocation(line: 6251, column: 2, scope: !24793)
!24829 = !DILocation(line: 6253, column: 6, scope: !24830)
!24830 = distinct !DILexicalBlock(scope: !24793, file: !3, line: 6253, column: 6)
!24831 = !DILocation(line: 6253, column: 10, scope: !24830)
!24832 = !DILocation(line: 6253, column: 22, scope: !24830)
!24833 = !DILocation(line: 6253, column: 32, scope: !24830)
!24834 = !DILocation(line: 6253, column: 19, scope: !24830)
!24835 = !DILocation(line: 6253, column: 6, scope: !24793)
!24836 = !DILocation(line: 6254, column: 18, scope: !24837)
!24837 = distinct !DILexicalBlock(scope: !24830, file: !3, line: 6253, column: 51)
!24838 = !DILocation(line: 6254, column: 28, scope: !24837)
!24839 = !DILocation(line: 6254, column: 3, scope: !24837)
!24840 = !DILocation(line: 6254, column: 7, scope: !24837)
!24841 = !DILocation(line: 6254, column: 16, scope: !24837)
!24842 = !DILocation(line: 6256, column: 21, scope: !24843)
!24843 = distinct !DILexicalBlock(scope: !24837, file: !3, line: 6256, column: 7)
!24844 = !DILocation(line: 6256, column: 7, scope: !24843)
!24845 = !DILocation(line: 6256, column: 29, scope: !24843)
!24846 = !DILocation(line: 6256, column: 49, scope: !24843)
!24847 = !DILocation(line: 6256, column: 32, scope: !24843)
!24848 = !DILocation(line: 6256, column: 7, scope: !24837)
!24849 = !DILocation(line: 6257, column: 21, scope: !24850)
!24850 = distinct !DILexicalBlock(scope: !24843, file: !3, line: 6256, column: 58)
!24851 = !DILocation(line: 6257, column: 4, scope: !24850)
!24852 = !DILocation(line: 6258, column: 18, scope: !24850)
!24853 = !DILocation(line: 6258, column: 22, scope: !24850)
!24854 = !DILocation(line: 6258, column: 4, scope: !24850)
!24855 = !DILocation(line: 6259, column: 4, scope: !24850)
!24856 = !DILocation(line: 6259, column: 8, scope: !24850)
!24857 = !DILocation(line: 6259, column: 16, scope: !24850)
!24858 = !DILocation(line: 6259, column: 24, scope: !24850)
!24859 = !DILocation(line: 6260, column: 4, scope: !24850)
!24860 = !DILocation(line: 6260, column: 8, scope: !24850)
!24861 = !DILocation(line: 6260, column: 16, scope: !24850)
!24862 = !DILocation(line: 6260, column: 23, scope: !24850)
!24863 = !DILocation(line: 6261, column: 17, scope: !24850)
!24864 = !DILocation(line: 6261, column: 4, scope: !24850)
!24865 = !DILocation(line: 6262, column: 36, scope: !24850)
!24866 = !DILocation(line: 6262, column: 40, scope: !24850)
!24867 = !DILocation(line: 6262, column: 4, scope: !24850)
!24868 = !DILocation(line: 6263, column: 25, scope: !24850)
!24869 = !DILocation(line: 6263, column: 4, scope: !24850)
!24870 = !DILocation(line: 6264, column: 17, scope: !24850)
!24871 = !DILocation(line: 6264, column: 21, scope: !24850)
!24872 = !DILocation(line: 6264, column: 4, scope: !24850)
!24873 = !DILocation(line: 6265, column: 21, scope: !24850)
!24874 = !DILocation(line: 6265, column: 4, scope: !24850)
!24875 = !DILocation(line: 6266, column: 3, scope: !24850)
!24876 = !DILocation(line: 6267, column: 2, scope: !24837)
!24877 = !DILocation(line: 6269, column: 16, scope: !24793)
!24878 = !DILocation(line: 6269, column: 20, scope: !24793)
!24879 = !DILocation(line: 6269, column: 2, scope: !24793)
!24880 = !DILocation(line: 6271, column: 27, scope: !24793)
!24881 = !DILocation(line: 6271, column: 31, scope: !24793)
!24882 = !DILocation(line: 6271, column: 2, scope: !24793)
!24883 = !DILocation(line: 6273, column: 9, scope: !24793)
!24884 = !DILocation(line: 6273, column: 2, scope: !24793)
!24885 = !DILocation(line: 6274, column: 1, scope: !24793)
!24886 = distinct !DISubprogram(name: "rtl8152_get_ringparam", scope: !3, file: !3, line: 6327, type: !8278, scopeLine: 6329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24887 = !DILocalVariable(name: "netdev", arg: 1, scope: !24886, file: !3, line: 6327, type: !372)
!24888 = !DILocation(line: 6327, column: 54, scope: !24886)
!24889 = !DILocalVariable(name: "ring", arg: 2, scope: !24886, file: !3, line: 6328, type: !8280)
!24890 = !DILocation(line: 6328, column: 33, scope: !24886)
!24891 = !DILocalVariable(name: "tp", scope: !24886, file: !3, line: 6330, type: !10280)
!24892 = !DILocation(line: 6330, column: 16, scope: !24886)
!24893 = !DILocation(line: 6330, column: 33, scope: !24886)
!24894 = !DILocation(line: 6330, column: 21, scope: !24886)
!24895 = !DILocation(line: 6332, column: 2, scope: !24886)
!24896 = !DILocation(line: 6332, column: 8, scope: !24886)
!24897 = !DILocation(line: 6332, column: 23, scope: !24886)
!24898 = !DILocation(line: 6333, column: 21, scope: !24886)
!24899 = !DILocation(line: 6333, column: 25, scope: !24886)
!24900 = !DILocation(line: 6333, column: 2, scope: !24886)
!24901 = !DILocation(line: 6333, column: 8, scope: !24886)
!24902 = !DILocation(line: 6333, column: 19, scope: !24886)
!24903 = !DILocation(line: 6334, column: 1, scope: !24886)
!24904 = distinct !DISubprogram(name: "rtl8152_set_ringparam", scope: !3, file: !3, line: 6336, type: !8294, scopeLine: 6338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24905 = !DILocalVariable(name: "netdev", arg: 1, scope: !24904, file: !3, line: 6336, type: !372)
!24906 = !DILocation(line: 6336, column: 53, scope: !24904)
!24907 = !DILocalVariable(name: "ring", arg: 2, scope: !24904, file: !3, line: 6337, type: !8280)
!24908 = !DILocation(line: 6337, column: 32, scope: !24904)
!24909 = !DILocalVariable(name: "tp", scope: !24904, file: !3, line: 6339, type: !10280)
!24910 = !DILocation(line: 6339, column: 16, scope: !24904)
!24911 = !DILocation(line: 6339, column: 33, scope: !24904)
!24912 = !DILocation(line: 6339, column: 21, scope: !24904)
!24913 = !DILocation(line: 6341, column: 6, scope: !24914)
!24914 = distinct !DILexicalBlock(scope: !24904, file: !3, line: 6341, column: 6)
!24915 = !DILocation(line: 6341, column: 12, scope: !24914)
!24916 = !DILocation(line: 6341, column: 23, scope: !24914)
!24917 = !DILocation(line: 6341, column: 6, scope: !24904)
!24918 = !DILocation(line: 6342, column: 3, scope: !24914)
!24919 = !DILocation(line: 6344, column: 6, scope: !24920)
!24920 = distinct !DILexicalBlock(scope: !24904, file: !3, line: 6344, column: 6)
!24921 = !DILocation(line: 6344, column: 10, scope: !24920)
!24922 = !DILocation(line: 6344, column: 24, scope: !24920)
!24923 = !DILocation(line: 6344, column: 30, scope: !24920)
!24924 = !DILocation(line: 6344, column: 21, scope: !24920)
!24925 = !DILocation(line: 6344, column: 6, scope: !24904)
!24926 = !DILocation(line: 6345, column: 7, scope: !24927)
!24927 = distinct !DILexicalBlock(scope: !24928, file: !3, line: 6345, column: 7)
!24928 = distinct !DILexicalBlock(scope: !24920, file: !3, line: 6344, column: 42)
!24929 = !DILocation(line: 6345, column: 15, scope: !24927)
!24930 = !DILocation(line: 6345, column: 21, scope: !24927)
!24931 = !DILocation(line: 6345, column: 7, scope: !24928)
!24932 = !DILocation(line: 6346, column: 16, scope: !24933)
!24933 = distinct !DILexicalBlock(scope: !24927, file: !3, line: 6345, column: 31)
!24934 = !DILocation(line: 6346, column: 20, scope: !24933)
!24935 = !DILocation(line: 6346, column: 4, scope: !24933)
!24936 = !DILocation(line: 6347, column: 18, scope: !24933)
!24937 = !DILocation(line: 6347, column: 22, scope: !24933)
!24938 = !DILocation(line: 6347, column: 4, scope: !24933)
!24939 = !DILocation(line: 6348, column: 21, scope: !24933)
!24940 = !DILocation(line: 6348, column: 27, scope: !24933)
!24941 = !DILocation(line: 6348, column: 4, scope: !24933)
!24942 = !DILocation(line: 6348, column: 8, scope: !24933)
!24943 = !DILocation(line: 6348, column: 19, scope: !24933)
!24944 = !DILocation(line: 6349, column: 17, scope: !24933)
!24945 = !DILocation(line: 6349, column: 21, scope: !24933)
!24946 = !DILocation(line: 6349, column: 4, scope: !24933)
!24947 = !DILocation(line: 6350, column: 18, scope: !24933)
!24948 = !DILocation(line: 6350, column: 22, scope: !24933)
!24949 = !DILocation(line: 6350, column: 4, scope: !24933)
!24950 = !DILocation(line: 6351, column: 3, scope: !24933)
!24951 = !DILocation(line: 6352, column: 21, scope: !24952)
!24952 = distinct !DILexicalBlock(scope: !24927, file: !3, line: 6351, column: 10)
!24953 = !DILocation(line: 6352, column: 27, scope: !24952)
!24954 = !DILocation(line: 6352, column: 4, scope: !24952)
!24955 = !DILocation(line: 6352, column: 8, scope: !24952)
!24956 = !DILocation(line: 6352, column: 19, scope: !24952)
!24957 = !DILocation(line: 6354, column: 2, scope: !24928)
!24958 = !DILocation(line: 6356, column: 2, scope: !24904)
!24959 = !DILocation(line: 6357, column: 1, scope: !24904)
!24960 = distinct !DISubprogram(name: "rtl8152_get_strings", scope: !3, file: !3, line: 6076, type: !8335, scopeLine: 6077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24961 = !DILocalVariable(name: "dev", arg: 1, scope: !24960, file: !3, line: 6076, type: !372)
!24962 = !DILocation(line: 6076, column: 52, scope: !24960)
!24963 = !DILocalVariable(name: "stringset", arg: 2, scope: !24960, file: !3, line: 6076, type: !784)
!24964 = !DILocation(line: 6076, column: 61, scope: !24960)
!24965 = !DILocalVariable(name: "data", arg: 3, scope: !24960, file: !3, line: 6076, type: !7823)
!24966 = !DILocation(line: 6076, column: 76, scope: !24960)
!24967 = !DILocation(line: 6078, column: 10, scope: !24960)
!24968 = !DILocation(line: 6078, column: 2, scope: !24960)
!24969 = !DILocation(line: 6080, column: 10, scope: !24970)
!24970 = distinct !DILexicalBlock(scope: !24960, file: !3, line: 6078, column: 21)
!24971 = !DILocation(line: 6080, column: 3, scope: !24970)
!24972 = !DILocation(line: 6081, column: 3, scope: !24970)
!24973 = !DILocation(line: 6083, column: 1, scope: !24960)
!24974 = distinct !DISubprogram(name: "rtl8152_get_ethtool_stats", scope: !3, file: !3, line: 6048, type: !8343, scopeLine: 6050, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!24975 = !DILocalVariable(name: "dev", arg: 1, scope: !24974, file: !3, line: 6048, type: !372)
!24976 = !DILocation(line: 6048, column: 58, scope: !24974)
!24977 = !DILocalVariable(name: "stats", arg: 2, scope: !24974, file: !3, line: 6049, type: !8345)
!24978 = !DILocation(line: 6049, column: 33, scope: !24974)
!24979 = !DILocalVariable(name: "data", arg: 3, scope: !24974, file: !3, line: 6049, type: !3481)
!24980 = !DILocation(line: 6049, column: 45, scope: !24974)
!24981 = !DILocalVariable(name: "tp", scope: !24974, file: !3, line: 6051, type: !10280)
!24982 = !DILocation(line: 6051, column: 16, scope: !24974)
!24983 = !DILocation(line: 6051, column: 33, scope: !24974)
!24984 = !DILocation(line: 6051, column: 21, scope: !24974)
!24985 = !DILocalVariable(name: "tally", scope: !24974, file: !3, line: 6052, type: !24986)
!24986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tally_counter", file: !3, line: 707, size: 512, elements: !24987)
!24987 = !{!24988, !24989, !24990, !24991, !24992, !24993, !24994, !24995, !24996, !24997, !24998, !24999, !25000}
!24988 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !24986, file: !3, line: 708, baseType: !10753, size: 64)
!24989 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !24986, file: !3, line: 709, baseType: !10753, size: 64, offset: 64)
!24990 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !24986, file: !3, line: 710, baseType: !10753, size: 64, offset: 128)
!24991 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !24986, file: !3, line: 711, baseType: !9980, size: 32, offset: 192)
!24992 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed", scope: !24986, file: !3, line: 712, baseType: !9906, size: 16, offset: 224)
!24993 = !DIDerivedType(tag: DW_TAG_member, name: "align_errors", scope: !24986, file: !3, line: 713, baseType: !9906, size: 16, offset: 240)
!24994 = !DIDerivedType(tag: DW_TAG_member, name: "tx_one_collision", scope: !24986, file: !3, line: 714, baseType: !9980, size: 32, offset: 256)
!24995 = !DIDerivedType(tag: DW_TAG_member, name: "tx_multi_collision", scope: !24986, file: !3, line: 715, baseType: !9980, size: 32, offset: 288)
!24996 = !DIDerivedType(tag: DW_TAG_member, name: "rx_unicast", scope: !24986, file: !3, line: 716, baseType: !10753, size: 64, offset: 320)
!24997 = !DIDerivedType(tag: DW_TAG_member, name: "rx_broadcast", scope: !24986, file: !3, line: 717, baseType: !10753, size: 64, offset: 384)
!24998 = !DIDerivedType(tag: DW_TAG_member, name: "rx_multicast", scope: !24986, file: !3, line: 718, baseType: !9980, size: 32, offset: 448)
!24999 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted", scope: !24986, file: !3, line: 719, baseType: !9906, size: 16, offset: 480)
!25000 = !DIDerivedType(tag: DW_TAG_member, name: "tx_underrun", scope: !24986, file: !3, line: 720, baseType: !9906, size: 16, offset: 496)
!25001 = !DILocation(line: 6052, column: 23, scope: !24974)
!25002 = !DILocation(line: 6054, column: 31, scope: !25003)
!25003 = distinct !DILexicalBlock(scope: !24974, file: !3, line: 6054, column: 6)
!25004 = !DILocation(line: 6054, column: 35, scope: !25003)
!25005 = !DILocation(line: 6054, column: 6, scope: !25003)
!25006 = !DILocation(line: 6054, column: 41, scope: !25003)
!25007 = !DILocation(line: 6054, column: 6, scope: !24974)
!25008 = !DILocation(line: 6055, column: 3, scope: !25003)
!25009 = !DILocation(line: 6057, column: 19, scope: !24974)
!25010 = !DILocation(line: 6057, column: 52, scope: !24974)
!25011 = !DILocation(line: 6057, column: 2, scope: !24974)
!25012 = !DILocation(line: 6059, column: 27, scope: !24974)
!25013 = !DILocation(line: 6059, column: 31, scope: !24974)
!25014 = !DILocation(line: 6059, column: 2, scope: !24974)
!25015 = !DILocation(line: 6061, column: 12, scope: !24974)
!25016 = !DILocation(line: 6061, column: 2, scope: !24974)
!25017 = !DILocation(line: 6061, column: 10, scope: !24974)
!25018 = !DILocation(line: 6062, column: 12, scope: !24974)
!25019 = !DILocation(line: 6062, column: 2, scope: !24974)
!25020 = !DILocation(line: 6062, column: 10, scope: !24974)
!25021 = !DILocation(line: 6063, column: 12, scope: !24974)
!25022 = !DILocation(line: 6063, column: 2, scope: !24974)
!25023 = !DILocation(line: 6063, column: 10, scope: !24974)
!25024 = !DILocation(line: 6064, column: 12, scope: !24974)
!25025 = !DILocation(line: 6064, column: 2, scope: !24974)
!25026 = !DILocation(line: 6064, column: 10, scope: !24974)
!25027 = !DILocation(line: 6065, column: 12, scope: !24974)
!25028 = !DILocation(line: 6065, column: 2, scope: !24974)
!25029 = !DILocation(line: 6065, column: 10, scope: !24974)
!25030 = !DILocation(line: 6066, column: 12, scope: !24974)
!25031 = !DILocation(line: 6066, column: 2, scope: !24974)
!25032 = !DILocation(line: 6066, column: 10, scope: !24974)
!25033 = !DILocation(line: 6067, column: 12, scope: !24974)
!25034 = !DILocation(line: 6067, column: 2, scope: !24974)
!25035 = !DILocation(line: 6067, column: 10, scope: !24974)
!25036 = !DILocation(line: 6068, column: 12, scope: !24974)
!25037 = !DILocation(line: 6068, column: 2, scope: !24974)
!25038 = !DILocation(line: 6068, column: 10, scope: !24974)
!25039 = !DILocation(line: 6069, column: 12, scope: !24974)
!25040 = !DILocation(line: 6069, column: 2, scope: !24974)
!25041 = !DILocation(line: 6069, column: 10, scope: !24974)
!25042 = !DILocation(line: 6070, column: 12, scope: !24974)
!25043 = !DILocation(line: 6070, column: 2, scope: !24974)
!25044 = !DILocation(line: 6070, column: 10, scope: !24974)
!25045 = !DILocation(line: 6071, column: 13, scope: !24974)
!25046 = !DILocation(line: 6071, column: 2, scope: !24974)
!25047 = !DILocation(line: 6071, column: 11, scope: !24974)
!25048 = !DILocation(line: 6072, column: 13, scope: !24974)
!25049 = !DILocation(line: 6072, column: 2, scope: !24974)
!25050 = !DILocation(line: 6072, column: 11, scope: !24974)
!25051 = !DILocation(line: 6073, column: 13, scope: !24974)
!25052 = !DILocation(line: 6073, column: 2, scope: !24974)
!25053 = !DILocation(line: 6073, column: 11, scope: !24974)
!25054 = !DILocation(line: 6074, column: 1, scope: !24974)
!25055 = distinct !DISubprogram(name: "rtl8152_get_sset_count", scope: !3, file: !3, line: 6038, type: !7759, scopeLine: 6039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!25056 = !DILocalVariable(name: "dev", arg: 1, scope: !25055, file: !3, line: 6038, type: !372)
!25057 = !DILocation(line: 6038, column: 54, scope: !25055)
!25058 = !DILocalVariable(name: "sset", arg: 2, scope: !25055, file: !3, line: 6038, type: !72)
!25059 = !DILocation(line: 6038, column: 63, scope: !25055)
!25060 = !DILocation(line: 6040, column: 10, scope: !25055)
!25061 = !DILocation(line: 6040, column: 2, scope: !25055)
!25062 = !DILocation(line: 6042, column: 3, scope: !25063)
!25063 = distinct !DILexicalBlock(scope: !25055, file: !3, line: 6040, column: 16)
!25064 = !DILocation(line: 6044, column: 3, scope: !25063)
!25065 = !DILocation(line: 6046, column: 1, scope: !25055)
!25066 = distinct !DISubprogram(name: "rtl_ethtool_get_eee", scope: !3, file: !3, line: 6144, type: !8566, scopeLine: 6145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!25067 = !DILocalVariable(name: "net", arg: 1, scope: !25066, file: !3, line: 6144, type: !372)
!25068 = !DILocation(line: 6144, column: 40, scope: !25066)
!25069 = !DILocalVariable(name: "edata", arg: 2, scope: !25066, file: !3, line: 6144, type: !8568)
!25070 = !DILocation(line: 6144, column: 65, scope: !25066)
!25071 = !DILocalVariable(name: "tp", scope: !25066, file: !3, line: 6146, type: !10280)
!25072 = !DILocation(line: 6146, column: 16, scope: !25066)
!25073 = !DILocation(line: 6146, column: 33, scope: !25066)
!25074 = !DILocation(line: 6146, column: 21, scope: !25066)
!25075 = !DILocalVariable(name: "ret", scope: !25066, file: !3, line: 6147, type: !72)
!25076 = !DILocation(line: 6147, column: 6, scope: !25066)
!25077 = !DILocation(line: 6149, column: 33, scope: !25066)
!25078 = !DILocation(line: 6149, column: 37, scope: !25066)
!25079 = !DILocation(line: 6149, column: 8, scope: !25066)
!25080 = !DILocation(line: 6149, column: 6, scope: !25066)
!25081 = !DILocation(line: 6150, column: 6, scope: !25082)
!25082 = distinct !DILexicalBlock(scope: !25066, file: !3, line: 6150, column: 6)
!25083 = !DILocation(line: 6150, column: 10, scope: !25082)
!25084 = !DILocation(line: 6150, column: 6, scope: !25066)
!25085 = !DILocation(line: 6151, column: 3, scope: !25082)
!25086 = !DILocation(line: 6153, column: 14, scope: !25066)
!25087 = !DILocation(line: 6153, column: 18, scope: !25066)
!25088 = !DILocation(line: 6153, column: 2, scope: !25066)
!25089 = !DILocation(line: 6155, column: 8, scope: !25066)
!25090 = !DILocation(line: 6155, column: 12, scope: !25066)
!25091 = !DILocation(line: 6155, column: 20, scope: !25066)
!25092 = !DILocation(line: 6155, column: 28, scope: !25066)
!25093 = !DILocation(line: 6155, column: 32, scope: !25066)
!25094 = !DILocation(line: 6155, column: 6, scope: !25066)
!25095 = !DILocation(line: 6157, column: 16, scope: !25066)
!25096 = !DILocation(line: 6157, column: 20, scope: !25066)
!25097 = !DILocation(line: 6157, column: 2, scope: !25066)
!25098 = !DILocation(line: 6159, column: 27, scope: !25066)
!25099 = !DILocation(line: 6159, column: 31, scope: !25066)
!25100 = !DILocation(line: 6159, column: 2, scope: !25066)
!25101 = !DILabel(scope: !25066, name: "out", file: !3, line: 6161)
!25102 = !DILocation(line: 6161, column: 1, scope: !25066)
!25103 = !DILocation(line: 6162, column: 9, scope: !25066)
!25104 = !DILocation(line: 6162, column: 2, scope: !25066)
!25105 = distinct !DISubprogram(name: "rtl_ethtool_set_eee", scope: !3, file: !3, line: 6166, type: !8566, scopeLine: 6167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!25106 = !DILocalVariable(name: "net", arg: 1, scope: !25105, file: !3, line: 6166, type: !372)
!25107 = !DILocation(line: 6166, column: 40, scope: !25105)
!25108 = !DILocalVariable(name: "edata", arg: 2, scope: !25105, file: !3, line: 6166, type: !8568)
!25109 = !DILocation(line: 6166, column: 65, scope: !25105)
!25110 = !DILocalVariable(name: "tp", scope: !25105, file: !3, line: 6168, type: !10280)
!25111 = !DILocation(line: 6168, column: 16, scope: !25105)
!25112 = !DILocation(line: 6168, column: 33, scope: !25105)
!25113 = !DILocation(line: 6168, column: 21, scope: !25105)
!25114 = !DILocalVariable(name: "ret", scope: !25105, file: !3, line: 6169, type: !72)
!25115 = !DILocation(line: 6169, column: 6, scope: !25105)
!25116 = !DILocation(line: 6171, column: 33, scope: !25105)
!25117 = !DILocation(line: 6171, column: 37, scope: !25105)
!25118 = !DILocation(line: 6171, column: 8, scope: !25105)
!25119 = !DILocation(line: 6171, column: 6, scope: !25105)
!25120 = !DILocation(line: 6172, column: 6, scope: !25121)
!25121 = distinct !DILexicalBlock(scope: !25105, file: !3, line: 6172, column: 6)
!25122 = !DILocation(line: 6172, column: 10, scope: !25121)
!25123 = !DILocation(line: 6172, column: 6, scope: !25105)
!25124 = !DILocation(line: 6173, column: 3, scope: !25121)
!25125 = !DILocation(line: 6175, column: 14, scope: !25105)
!25126 = !DILocation(line: 6175, column: 18, scope: !25105)
!25127 = !DILocation(line: 6175, column: 2, scope: !25105)
!25128 = !DILocation(line: 6177, column: 8, scope: !25105)
!25129 = !DILocation(line: 6177, column: 12, scope: !25105)
!25130 = !DILocation(line: 6177, column: 20, scope: !25105)
!25131 = !DILocation(line: 6177, column: 28, scope: !25105)
!25132 = !DILocation(line: 6177, column: 32, scope: !25105)
!25133 = !DILocation(line: 6177, column: 6, scope: !25105)
!25134 = !DILocation(line: 6178, column: 7, scope: !25135)
!25135 = distinct !DILexicalBlock(scope: !25105, file: !3, line: 6178, column: 6)
!25136 = !DILocation(line: 6178, column: 6, scope: !25105)
!25137 = !DILocation(line: 6179, column: 27, scope: !25135)
!25138 = !DILocation(line: 6179, column: 31, scope: !25135)
!25139 = !DILocation(line: 6179, column: 9, scope: !25135)
!25140 = !DILocation(line: 6179, column: 7, scope: !25135)
!25141 = !DILocation(line: 6179, column: 3, scope: !25135)
!25142 = !DILocation(line: 6181, column: 16, scope: !25105)
!25143 = !DILocation(line: 6181, column: 20, scope: !25105)
!25144 = !DILocation(line: 6181, column: 2, scope: !25105)
!25145 = !DILocation(line: 6183, column: 27, scope: !25105)
!25146 = !DILocation(line: 6183, column: 31, scope: !25105)
!25147 = !DILocation(line: 6183, column: 2, scope: !25105)
!25148 = !DILabel(scope: !25105, name: "out", file: !3, line: 6185)
!25149 = !DILocation(line: 6185, column: 1, scope: !25105)
!25150 = !DILocation(line: 6186, column: 9, scope: !25105)
!25151 = !DILocation(line: 6186, column: 2, scope: !25105)
!25152 = distinct !DISubprogram(name: "rtl8152_get_tunable", scope: !3, file: !3, line: 6276, type: !8583, scopeLine: 6278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!25153 = !DILocalVariable(name: "netdev", arg: 1, scope: !25152, file: !3, line: 6276, type: !372)
!25154 = !DILocation(line: 6276, column: 51, scope: !25152)
!25155 = !DILocalVariable(name: "tunable", arg: 2, scope: !25152, file: !3, line: 6277, type: !8585)
!25156 = !DILocation(line: 6277, column: 41, scope: !25152)
!25157 = !DILocalVariable(name: "d", arg: 3, scope: !25152, file: !3, line: 6277, type: !647)
!25158 = !DILocation(line: 6277, column: 56, scope: !25152)
!25159 = !DILocalVariable(name: "tp", scope: !25152, file: !3, line: 6279, type: !10280)
!25160 = !DILocation(line: 6279, column: 16, scope: !25152)
!25161 = !DILocation(line: 6279, column: 33, scope: !25152)
!25162 = !DILocation(line: 6279, column: 21, scope: !25152)
!25163 = !DILocation(line: 6281, column: 10, scope: !25152)
!25164 = !DILocation(line: 6281, column: 19, scope: !25152)
!25165 = !DILocation(line: 6281, column: 2, scope: !25152)
!25166 = !DILocation(line: 6283, column: 15, scope: !25167)
!25167 = distinct !DILexicalBlock(scope: !25152, file: !3, line: 6281, column: 23)
!25168 = !DILocation(line: 6283, column: 19, scope: !25167)
!25169 = !DILocation(line: 6283, column: 11, scope: !25167)
!25170 = !DILocation(line: 6283, column: 4, scope: !25167)
!25171 = !DILocation(line: 6283, column: 13, scope: !25167)
!25172 = !DILocation(line: 6284, column: 3, scope: !25167)
!25173 = !DILocation(line: 6286, column: 3, scope: !25167)
!25174 = !DILocation(line: 6289, column: 2, scope: !25152)
!25175 = !DILocation(line: 6290, column: 1, scope: !25152)
!25176 = distinct !DISubprogram(name: "rtl8152_set_tunable", scope: !3, file: !3, line: 6292, type: !8597, scopeLine: 6295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!25177 = !DILocalVariable(name: "netdev", arg: 1, scope: !25176, file: !3, line: 6292, type: !372)
!25178 = !DILocation(line: 6292, column: 51, scope: !25176)
!25179 = !DILocalVariable(name: "tunable", arg: 2, scope: !25176, file: !3, line: 6293, type: !8585)
!25180 = !DILocation(line: 6293, column: 41, scope: !25176)
!25181 = !DILocalVariable(name: "d", arg: 3, scope: !25176, file: !3, line: 6294, type: !2340)
!25182 = !DILocation(line: 6294, column: 23, scope: !25176)
!25183 = !DILocalVariable(name: "tp", scope: !25176, file: !3, line: 6296, type: !10280)
!25184 = !DILocation(line: 6296, column: 16, scope: !25176)
!25185 = !DILocation(line: 6296, column: 33, scope: !25176)
!25186 = !DILocation(line: 6296, column: 21, scope: !25176)
!25187 = !DILocalVariable(name: "val", scope: !25176, file: !3, line: 6297, type: !784)
!25188 = !DILocation(line: 6297, column: 6, scope: !25176)
!25189 = !DILocation(line: 6299, column: 10, scope: !25176)
!25190 = !DILocation(line: 6299, column: 19, scope: !25176)
!25191 = !DILocation(line: 6299, column: 2, scope: !25176)
!25192 = !DILocation(line: 6301, column: 17, scope: !25193)
!25193 = distinct !DILexicalBlock(scope: !25176, file: !3, line: 6299, column: 23)
!25194 = !DILocation(line: 6301, column: 10, scope: !25193)
!25195 = !DILocation(line: 6301, column: 9, scope: !25193)
!25196 = !DILocation(line: 6301, column: 7, scope: !25193)
!25197 = !DILocation(line: 6302, column: 7, scope: !25198)
!25198 = distinct !DILexicalBlock(scope: !25193, file: !3, line: 6302, column: 7)
!25199 = !DILocation(line: 6302, column: 11, scope: !25198)
!25200 = !DILocation(line: 6302, column: 7, scope: !25193)
!25201 = !DILocation(line: 6303, column: 4, scope: !25202)
!25202 = distinct !DILexicalBlock(scope: !25198, file: !3, line: 6302, column: 23)
!25203 = !DILocation(line: 6303, column: 4, scope: !25204)
!25204 = distinct !DILexicalBlock(scope: !25205, file: !3, line: 6303, column: 4)
!25205 = distinct !DILexicalBlock(scope: !25202, file: !3, line: 6303, column: 4)
!25206 = !DILocation(line: 6303, column: 4, scope: !25205)
!25207 = !DILocation(line: 6305, column: 4, scope: !25202)
!25208 = !DILocation(line: 6308, column: 7, scope: !25209)
!25209 = distinct !DILexicalBlock(scope: !25193, file: !3, line: 6308, column: 7)
!25210 = !DILocation(line: 6308, column: 11, scope: !25209)
!25211 = !DILocation(line: 6308, column: 27, scope: !25209)
!25212 = !DILocation(line: 6308, column: 24, scope: !25209)
!25213 = !DILocation(line: 6308, column: 7, scope: !25193)
!25214 = !DILocation(line: 6309, column: 8, scope: !25215)
!25215 = distinct !DILexicalBlock(scope: !25216, file: !3, line: 6309, column: 8)
!25216 = distinct !DILexicalBlock(scope: !25209, file: !3, line: 6308, column: 32)
!25217 = !DILocation(line: 6309, column: 16, scope: !25215)
!25218 = !DILocation(line: 6309, column: 22, scope: !25215)
!25219 = !DILocation(line: 6309, column: 8, scope: !25216)
!25220 = !DILocation(line: 6310, column: 17, scope: !25221)
!25221 = distinct !DILexicalBlock(scope: !25215, file: !3, line: 6309, column: 32)
!25222 = !DILocation(line: 6310, column: 21, scope: !25221)
!25223 = !DILocation(line: 6310, column: 5, scope: !25221)
!25224 = !DILocation(line: 6311, column: 19, scope: !25221)
!25225 = !DILocation(line: 6311, column: 23, scope: !25221)
!25226 = !DILocation(line: 6311, column: 5, scope: !25221)
!25227 = !DILocation(line: 6312, column: 24, scope: !25221)
!25228 = !DILocation(line: 6312, column: 5, scope: !25221)
!25229 = !DILocation(line: 6312, column: 9, scope: !25221)
!25230 = !DILocation(line: 6312, column: 22, scope: !25221)
!25231 = !DILocation(line: 6313, column: 18, scope: !25221)
!25232 = !DILocation(line: 6313, column: 22, scope: !25221)
!25233 = !DILocation(line: 6313, column: 5, scope: !25221)
!25234 = !DILocation(line: 6314, column: 19, scope: !25221)
!25235 = !DILocation(line: 6314, column: 23, scope: !25221)
!25236 = !DILocation(line: 6314, column: 5, scope: !25221)
!25237 = !DILocation(line: 6315, column: 4, scope: !25221)
!25238 = !DILocation(line: 6316, column: 24, scope: !25239)
!25239 = distinct !DILexicalBlock(scope: !25215, file: !3, line: 6315, column: 11)
!25240 = !DILocation(line: 6316, column: 5, scope: !25239)
!25241 = !DILocation(line: 6316, column: 9, scope: !25239)
!25242 = !DILocation(line: 6316, column: 22, scope: !25239)
!25243 = !DILocation(line: 6318, column: 3, scope: !25216)
!25244 = !DILocation(line: 6319, column: 3, scope: !25193)
!25245 = !DILocation(line: 6321, column: 3, scope: !25193)
!25246 = !DILocation(line: 6324, column: 2, scope: !25176)
!25247 = !DILocation(line: 6325, column: 1, scope: !25176)
!25248 = distinct !DISubprogram(name: "rtl8152_get_link_ksettings", scope: !3, file: !3, line: 5943, type: !8606, scopeLine: 5945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!25249 = !DILocalVariable(name: "netdev", arg: 1, scope: !25248, file: !3, line: 5943, type: !372)
!25250 = !DILocation(line: 5943, column: 51, scope: !25248)
!25251 = !DILocalVariable(name: "cmd", arg: 2, scope: !25248, file: !3, line: 5944, type: !8608)
!25252 = !DILocation(line: 5944, column: 42, scope: !25248)
!25253 = !DILocalVariable(name: "tp", scope: !25248, file: !3, line: 5946, type: !10280)
!25254 = !DILocation(line: 5946, column: 16, scope: !25248)
!25255 = !DILocation(line: 5946, column: 33, scope: !25248)
!25256 = !DILocation(line: 5946, column: 21, scope: !25248)
!25257 = !DILocalVariable(name: "ret", scope: !25248, file: !3, line: 5947, type: !72)
!25258 = !DILocation(line: 5947, column: 6, scope: !25248)
!25259 = !DILocation(line: 5949, column: 7, scope: !25260)
!25260 = distinct !DILexicalBlock(scope: !25248, file: !3, line: 5949, column: 6)
!25261 = !DILocation(line: 5949, column: 11, scope: !25260)
!25262 = !DILocation(line: 5949, column: 15, scope: !25260)
!25263 = !DILocation(line: 5949, column: 6, scope: !25248)
!25264 = !DILocation(line: 5950, column: 3, scope: !25260)
!25265 = !DILocation(line: 5952, column: 33, scope: !25248)
!25266 = !DILocation(line: 5952, column: 37, scope: !25248)
!25267 = !DILocation(line: 5952, column: 8, scope: !25248)
!25268 = !DILocation(line: 5952, column: 6, scope: !25248)
!25269 = !DILocation(line: 5953, column: 6, scope: !25270)
!25270 = distinct !DILexicalBlock(scope: !25248, file: !3, line: 5953, column: 6)
!25271 = !DILocation(line: 5953, column: 10, scope: !25270)
!25272 = !DILocation(line: 5953, column: 6, scope: !25248)
!25273 = !DILocation(line: 5954, column: 3, scope: !25270)
!25274 = !DILocation(line: 5956, column: 14, scope: !25248)
!25275 = !DILocation(line: 5956, column: 18, scope: !25248)
!25276 = !DILocation(line: 5956, column: 2, scope: !25248)
!25277 = !DILocation(line: 5958, column: 34, scope: !25248)
!25278 = !DILocation(line: 5958, column: 38, scope: !25248)
!25279 = !DILocation(line: 5958, column: 43, scope: !25248)
!25280 = !DILocation(line: 5958, column: 2, scope: !25248)
!25281 = !DILocation(line: 5960, column: 16, scope: !25248)
!25282 = !DILocation(line: 5960, column: 20, scope: !25248)
!25283 = !DILocation(line: 5960, column: 2, scope: !25248)
!25284 = !DILocation(line: 5962, column: 27, scope: !25248)
!25285 = !DILocation(line: 5962, column: 31, scope: !25248)
!25286 = !DILocation(line: 5962, column: 2, scope: !25248)
!25287 = !DILabel(scope: !25248, name: "out", file: !3, line: 5964)
!25288 = !DILocation(line: 5964, column: 1, scope: !25248)
!25289 = !DILocation(line: 5965, column: 9, scope: !25248)
!25290 = !DILocation(line: 5965, column: 2, scope: !25248)
!25291 = !DILocation(line: 5966, column: 1, scope: !25248)
!25292 = distinct !DISubprogram(name: "rtl8152_set_link_ksettings", scope: !3, file: !3, line: 5968, type: !8644, scopeLine: 5970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!25293 = !DILocalVariable(name: "dev", arg: 1, scope: !25292, file: !3, line: 5968, type: !372)
!25294 = !DILocation(line: 5968, column: 58, scope: !25292)
!25295 = !DILocalVariable(name: "cmd", arg: 2, scope: !25292, file: !3, line: 5969, type: !8646)
!25296 = !DILocation(line: 5969, column: 48, scope: !25292)
!25297 = !DILocalVariable(name: "tp", scope: !25292, file: !3, line: 5971, type: !10280)
!25298 = !DILocation(line: 5971, column: 16, scope: !25292)
!25299 = !DILocation(line: 5971, column: 33, scope: !25292)
!25300 = !DILocation(line: 5971, column: 21, scope: !25292)
!25301 = !DILocalVariable(name: "advertising", scope: !25292, file: !3, line: 5972, type: !784)
!25302 = !DILocation(line: 5972, column: 6, scope: !25292)
!25303 = !DILocalVariable(name: "ret", scope: !25292, file: !3, line: 5973, type: !72)
!25304 = !DILocation(line: 5973, column: 6, scope: !25292)
!25305 = !DILocation(line: 5975, column: 33, scope: !25292)
!25306 = !DILocation(line: 5975, column: 37, scope: !25292)
!25307 = !DILocation(line: 5975, column: 8, scope: !25292)
!25308 = !DILocation(line: 5975, column: 6, scope: !25292)
!25309 = !DILocation(line: 5976, column: 6, scope: !25310)
!25310 = distinct !DILexicalBlock(scope: !25292, file: !3, line: 5976, column: 6)
!25311 = !DILocation(line: 5976, column: 10, scope: !25310)
!25312 = !DILocation(line: 5976, column: 6, scope: !25292)
!25313 = !DILocation(line: 5977, column: 3, scope: !25310)
!25314 = !DILocation(line: 5980, column: 8, scope: !25315)
!25315 = distinct !DILexicalBlock(scope: !25292, file: !3, line: 5979, column: 6)
!25316 = !DILocation(line: 5980, column: 13, scope: !25315)
!25317 = !DILocation(line: 5980, column: 24, scope: !25315)
!25318 = !DILocation(line: 5979, column: 6, scope: !25315)
!25319 = !DILocation(line: 5979, column: 6, scope: !25292)
!25320 = !DILocation(line: 5981, column: 15, scope: !25315)
!25321 = !DILocation(line: 5981, column: 3, scope: !25315)
!25322 = !DILocation(line: 5984, column: 8, scope: !25323)
!25323 = distinct !DILexicalBlock(scope: !25292, file: !3, line: 5983, column: 6)
!25324 = !DILocation(line: 5984, column: 13, scope: !25323)
!25325 = !DILocation(line: 5984, column: 24, scope: !25323)
!25326 = !DILocation(line: 5983, column: 6, scope: !25323)
!25327 = !DILocation(line: 5983, column: 6, scope: !25292)
!25328 = !DILocation(line: 5985, column: 15, scope: !25323)
!25329 = !DILocation(line: 5985, column: 3, scope: !25323)
!25330 = !DILocation(line: 5988, column: 8, scope: !25331)
!25331 = distinct !DILexicalBlock(scope: !25292, file: !3, line: 5987, column: 6)
!25332 = !DILocation(line: 5988, column: 13, scope: !25331)
!25333 = !DILocation(line: 5988, column: 24, scope: !25331)
!25334 = !DILocation(line: 5987, column: 6, scope: !25331)
!25335 = !DILocation(line: 5987, column: 6, scope: !25292)
!25336 = !DILocation(line: 5989, column: 15, scope: !25331)
!25337 = !DILocation(line: 5989, column: 3, scope: !25331)
!25338 = !DILocation(line: 5992, column: 8, scope: !25339)
!25339 = distinct !DILexicalBlock(scope: !25292, file: !3, line: 5991, column: 6)
!25340 = !DILocation(line: 5992, column: 13, scope: !25339)
!25341 = !DILocation(line: 5992, column: 24, scope: !25339)
!25342 = !DILocation(line: 5991, column: 6, scope: !25339)
!25343 = !DILocation(line: 5991, column: 6, scope: !25292)
!25344 = !DILocation(line: 5993, column: 15, scope: !25339)
!25345 = !DILocation(line: 5993, column: 3, scope: !25339)
!25346 = !DILocation(line: 5996, column: 8, scope: !25347)
!25347 = distinct !DILexicalBlock(scope: !25292, file: !3, line: 5995, column: 6)
!25348 = !DILocation(line: 5996, column: 13, scope: !25347)
!25349 = !DILocation(line: 5996, column: 24, scope: !25347)
!25350 = !DILocation(line: 5995, column: 6, scope: !25347)
!25351 = !DILocation(line: 5995, column: 6, scope: !25292)
!25352 = !DILocation(line: 5997, column: 15, scope: !25347)
!25353 = !DILocation(line: 5997, column: 3, scope: !25347)
!25354 = !DILocation(line: 6000, column: 8, scope: !25355)
!25355 = distinct !DILexicalBlock(scope: !25292, file: !3, line: 5999, column: 6)
!25356 = !DILocation(line: 6000, column: 13, scope: !25355)
!25357 = !DILocation(line: 6000, column: 24, scope: !25355)
!25358 = !DILocation(line: 5999, column: 6, scope: !25355)
!25359 = !DILocation(line: 5999, column: 6, scope: !25292)
!25360 = !DILocation(line: 6001, column: 15, scope: !25355)
!25361 = !DILocation(line: 6001, column: 3, scope: !25355)
!25362 = !DILocation(line: 6003, column: 14, scope: !25292)
!25363 = !DILocation(line: 6003, column: 18, scope: !25292)
!25364 = !DILocation(line: 6003, column: 2, scope: !25292)
!25365 = !DILocation(line: 6005, column: 26, scope: !25292)
!25366 = !DILocation(line: 6005, column: 30, scope: !25292)
!25367 = !DILocation(line: 6005, column: 35, scope: !25292)
!25368 = !DILocation(line: 6005, column: 40, scope: !25292)
!25369 = !DILocation(line: 6005, column: 49, scope: !25292)
!25370 = !DILocation(line: 6005, column: 54, scope: !25292)
!25371 = !DILocation(line: 6005, column: 59, scope: !25292)
!25372 = !DILocation(line: 6006, column: 5, scope: !25292)
!25373 = !DILocation(line: 6006, column: 10, scope: !25292)
!25374 = !DILocation(line: 6006, column: 15, scope: !25292)
!25375 = !DILocation(line: 6006, column: 23, scope: !25292)
!25376 = !DILocation(line: 6005, column: 8, scope: !25292)
!25377 = !DILocation(line: 6005, column: 6, scope: !25292)
!25378 = !DILocation(line: 6007, column: 7, scope: !25379)
!25379 = distinct !DILexicalBlock(scope: !25292, file: !3, line: 6007, column: 6)
!25380 = !DILocation(line: 6007, column: 6, scope: !25292)
!25381 = !DILocation(line: 6008, column: 17, scope: !25382)
!25382 = distinct !DILexicalBlock(scope: !25379, file: !3, line: 6007, column: 12)
!25383 = !DILocation(line: 6008, column: 22, scope: !25382)
!25384 = !DILocation(line: 6008, column: 27, scope: !25382)
!25385 = !DILocation(line: 6008, column: 3, scope: !25382)
!25386 = !DILocation(line: 6008, column: 7, scope: !25382)
!25387 = !DILocation(line: 6008, column: 15, scope: !25382)
!25388 = !DILocation(line: 6009, column: 15, scope: !25382)
!25389 = !DILocation(line: 6009, column: 20, scope: !25382)
!25390 = !DILocation(line: 6009, column: 25, scope: !25382)
!25391 = !DILocation(line: 6009, column: 3, scope: !25382)
!25392 = !DILocation(line: 6009, column: 7, scope: !25382)
!25393 = !DILocation(line: 6009, column: 13, scope: !25382)
!25394 = !DILocation(line: 6010, column: 16, scope: !25382)
!25395 = !DILocation(line: 6010, column: 21, scope: !25382)
!25396 = !DILocation(line: 6010, column: 26, scope: !25382)
!25397 = !DILocation(line: 6010, column: 3, scope: !25382)
!25398 = !DILocation(line: 6010, column: 7, scope: !25382)
!25399 = !DILocation(line: 6010, column: 14, scope: !25382)
!25400 = !DILocation(line: 6011, column: 21, scope: !25382)
!25401 = !DILocation(line: 6011, column: 3, scope: !25382)
!25402 = !DILocation(line: 6011, column: 7, scope: !25382)
!25403 = !DILocation(line: 6011, column: 19, scope: !25382)
!25404 = !DILocation(line: 6012, column: 2, scope: !25382)
!25405 = !DILocation(line: 6014, column: 16, scope: !25292)
!25406 = !DILocation(line: 6014, column: 20, scope: !25292)
!25407 = !DILocation(line: 6014, column: 2, scope: !25292)
!25408 = !DILocation(line: 6016, column: 27, scope: !25292)
!25409 = !DILocation(line: 6016, column: 31, scope: !25292)
!25410 = !DILocation(line: 6016, column: 2, scope: !25292)
!25411 = !DILabel(scope: !25292, name: "out", file: !3, line: 6018)
!25412 = !DILocation(line: 6018, column: 1, scope: !25292)
!25413 = !DILocation(line: 6019, column: 9, scope: !25292)
!25414 = !DILocation(line: 6019, column: 2, scope: !25292)
!25415 = distinct !DISubprogram(name: "usb_make_path", scope: !9505, file: !9505, line: 912, type: !25416, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!25416 = !DISubroutineType(types: !25417)
!25417 = !{!72, !9907, !654, !671}
!25418 = !DILocalVariable(name: "dev", arg: 1, scope: !25415, file: !9505, line: 912, type: !9907)
!25419 = !DILocation(line: 912, column: 52, scope: !25415)
!25420 = !DILocalVariable(name: "buf", arg: 2, scope: !25415, file: !9505, line: 912, type: !654)
!25421 = !DILocation(line: 912, column: 63, scope: !25415)
!25422 = !DILocalVariable(name: "size", arg: 3, scope: !25415, file: !9505, line: 912, type: !671)
!25423 = !DILocation(line: 912, column: 75, scope: !25415)
!25424 = !DILocalVariable(name: "actual", scope: !25415, file: !9505, line: 914, type: !72)
!25425 = !DILocation(line: 914, column: 6, scope: !25415)
!25426 = !DILocation(line: 915, column: 20, scope: !25415)
!25427 = !DILocation(line: 915, column: 25, scope: !25415)
!25428 = !DILocation(line: 915, column: 44, scope: !25415)
!25429 = !DILocation(line: 915, column: 49, scope: !25415)
!25430 = !DILocation(line: 915, column: 54, scope: !25415)
!25431 = !DILocation(line: 916, column: 6, scope: !25415)
!25432 = !DILocation(line: 916, column: 11, scope: !25415)
!25433 = !DILocation(line: 915, column: 11, scope: !25415)
!25434 = !DILocation(line: 915, column: 9, scope: !25415)
!25435 = !DILocation(line: 917, column: 10, scope: !25415)
!25436 = !DILocation(line: 917, column: 25, scope: !25415)
!25437 = !DILocation(line: 917, column: 20, scope: !25415)
!25438 = !DILocation(line: 917, column: 17, scope: !25415)
!25439 = !DILocation(line: 917, column: 9, scope: !25415)
!25440 = !DILocation(line: 917, column: 38, scope: !25415)
!25441 = !DILocation(line: 917, column: 2, scope: !25415)
!25442 = distinct !DISubprogram(name: "determine_ethernet_addr", scope: !3, file: !3, line: 1500, type: !25443, scopeLine: 1501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!25443 = !DISubroutineType(types: !25444)
!25444 = !{!72, !10280, !595}
!25445 = !DILocalVariable(name: "tp", arg: 1, scope: !25442, file: !3, line: 1500, type: !10280)
!25446 = !DILocation(line: 1500, column: 50, scope: !25442)
!25447 = !DILocalVariable(name: "sa", arg: 2, scope: !25442, file: !3, line: 1500, type: !595)
!25448 = !DILocation(line: 1500, column: 71, scope: !25442)
!25449 = !DILocalVariable(name: "dev", scope: !25442, file: !3, line: 1502, type: !372)
!25450 = !DILocation(line: 1502, column: 21, scope: !25442)
!25451 = !DILocation(line: 1502, column: 27, scope: !25442)
!25452 = !DILocation(line: 1502, column: 31, scope: !25442)
!25453 = !DILocalVariable(name: "ret", scope: !25442, file: !3, line: 1503, type: !72)
!25454 = !DILocation(line: 1503, column: 6, scope: !25442)
!25455 = !DILocation(line: 1505, column: 18, scope: !25442)
!25456 = !DILocation(line: 1505, column: 23, scope: !25442)
!25457 = !DILocation(line: 1505, column: 2, scope: !25442)
!25458 = !DILocation(line: 1505, column: 6, scope: !25442)
!25459 = !DILocation(line: 1505, column: 16, scope: !25442)
!25460 = !DILocation(line: 1507, column: 38, scope: !25442)
!25461 = !DILocation(line: 1507, column: 42, scope: !25442)
!25462 = !DILocation(line: 1507, column: 48, scope: !25442)
!25463 = !DILocation(line: 1507, column: 53, scope: !25442)
!25464 = !DILocation(line: 1507, column: 57, scope: !25442)
!25465 = !DILocation(line: 1507, column: 8, scope: !25442)
!25466 = !DILocation(line: 1507, column: 6, scope: !25442)
!25467 = !DILocation(line: 1508, column: 6, scope: !25468)
!25468 = distinct !DILexicalBlock(scope: !25442, file: !3, line: 1508, column: 6)
!25469 = !DILocation(line: 1508, column: 10, scope: !25468)
!25470 = !DILocation(line: 1508, column: 6, scope: !25442)
!25471 = !DILocation(line: 1509, column: 7, scope: !25472)
!25472 = distinct !DILexicalBlock(scope: !25473, file: !3, line: 1509, column: 7)
!25473 = distinct !DILexicalBlock(scope: !25468, file: !3, line: 1508, column: 15)
!25474 = !DILocation(line: 1509, column: 11, scope: !25472)
!25475 = !DILocation(line: 1509, column: 19, scope: !25472)
!25476 = !DILocation(line: 1509, column: 7, scope: !25473)
!25477 = !DILocation(line: 1510, column: 23, scope: !25478)
!25478 = distinct !DILexicalBlock(scope: !25472, file: !3, line: 1509, column: 34)
!25479 = !DILocation(line: 1510, column: 39, scope: !25478)
!25480 = !DILocation(line: 1510, column: 43, scope: !25478)
!25481 = !DILocation(line: 1510, column: 10, scope: !25478)
!25482 = !DILocation(line: 1510, column: 8, scope: !25478)
!25483 = !DILocation(line: 1511, column: 3, scope: !25478)
!25484 = !DILocation(line: 1515, column: 40, scope: !25485)
!25485 = distinct !DILexicalBlock(scope: !25472, file: !3, line: 1511, column: 10)
!25486 = !DILocation(line: 1515, column: 44, scope: !25485)
!25487 = !DILocation(line: 1515, column: 10, scope: !25485)
!25488 = !DILocation(line: 1515, column: 8, scope: !25485)
!25489 = !DILocation(line: 1516, column: 8, scope: !25490)
!25490 = distinct !DILexicalBlock(scope: !25485, file: !3, line: 1516, column: 8)
!25491 = !DILocation(line: 1516, column: 12, scope: !25490)
!25492 = !DILocation(line: 1516, column: 8, scope: !25485)
!25493 = !DILocation(line: 1517, column: 24, scope: !25490)
!25494 = !DILocation(line: 1518, column: 10, scope: !25490)
!25495 = !DILocation(line: 1518, column: 14, scope: !25490)
!25496 = !DILocation(line: 1517, column: 11, scope: !25490)
!25497 = !DILocation(line: 1517, column: 9, scope: !25490)
!25498 = !DILocation(line: 1517, column: 5, scope: !25490)
!25499 = !DILocation(line: 1520, column: 2, scope: !25473)
!25500 = !DILocation(line: 1522, column: 6, scope: !25501)
!25501 = distinct !DILexicalBlock(scope: !25442, file: !3, line: 1522, column: 6)
!25502 = !DILocation(line: 1522, column: 10, scope: !25501)
!25503 = !DILocation(line: 1522, column: 6, scope: !25442)
!25504 = !DILocation(line: 1523, column: 3, scope: !25505)
!25505 = distinct !DILexicalBlock(scope: !25501, file: !3, line: 1522, column: 15)
!25506 = !DILocation(line: 1523, column: 3, scope: !25507)
!25507 = distinct !DILexicalBlock(scope: !25508, file: !3, line: 1523, column: 3)
!25508 = distinct !DILexicalBlock(scope: !25505, file: !3, line: 1523, column: 3)
!25509 = !DILocation(line: 1523, column: 3, scope: !25508)
!25510 = !DILocation(line: 1524, column: 2, scope: !25505)
!25511 = !DILocation(line: 1524, column: 34, scope: !25512)
!25512 = distinct !DILexicalBlock(scope: !25501, file: !3, line: 1524, column: 13)
!25513 = !DILocation(line: 1524, column: 38, scope: !25512)
!25514 = !DILocation(line: 1524, column: 14, scope: !25512)
!25515 = !DILocation(line: 1524, column: 13, scope: !25501)
!25516 = !DILocation(line: 1525, column: 3, scope: !25517)
!25517 = distinct !DILexicalBlock(scope: !25512, file: !3, line: 1524, column: 48)
!25518 = !DILocation(line: 1525, column: 3, scope: !25519)
!25519 = distinct !DILexicalBlock(scope: !25520, file: !3, line: 1525, column: 3)
!25520 = distinct !DILexicalBlock(scope: !25517, file: !3, line: 1525, column: 3)
!25521 = !DILocation(line: 1525, column: 3, scope: !25520)
!25522 = !DILocation(line: 1527, column: 22, scope: !25517)
!25523 = !DILocation(line: 1527, column: 3, scope: !25517)
!25524 = !DILocation(line: 1528, column: 19, scope: !25517)
!25525 = !DILocation(line: 1528, column: 23, scope: !25517)
!25526 = !DILocation(line: 1528, column: 32, scope: !25517)
!25527 = !DILocation(line: 1528, column: 37, scope: !25517)
!25528 = !DILocation(line: 1528, column: 3, scope: !25517)
!25529 = !DILocation(line: 1529, column: 3, scope: !25517)
!25530 = !DILocation(line: 1529, column: 3, scope: !25531)
!25531 = distinct !DILexicalBlock(scope: !25532, file: !3, line: 1529, column: 3)
!25532 = distinct !DILexicalBlock(scope: !25517, file: !3, line: 1529, column: 3)
!25533 = !DILocation(line: 1529, column: 3, scope: !25532)
!25534 = !DILocation(line: 1531, column: 3, scope: !25517)
!25535 = !DILocation(line: 1534, column: 9, scope: !25442)
!25536 = !DILocation(line: 1534, column: 2, scope: !25442)
!25537 = !DILocation(line: 1535, column: 1, scope: !25442)
!25538 = distinct !DISubprogram(name: "ether_addr_copy", scope: !24532, file: !24532, line: 287, type: !25539, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!25539 = !DISubroutineType(types: !25540)
!25540 = !{null, !7823, !8489}
!25541 = !DILocalVariable(name: "dst", arg: 1, scope: !25538, file: !24532, line: 287, type: !7823)
!25542 = !DILocation(line: 287, column: 40, scope: !25538)
!25543 = !DILocalVariable(name: "src", arg: 2, scope: !25538, file: !24532, line: 287, type: !8489)
!25544 = !DILocation(line: 287, column: 55, scope: !25538)
!25545 = !DILocation(line: 290, column: 30, scope: !25538)
!25546 = !DILocation(line: 290, column: 16, scope: !25538)
!25547 = !DILocation(line: 290, column: 10, scope: !25538)
!25548 = !DILocation(line: 290, column: 2, scope: !25538)
!25549 = !DILocation(line: 290, column: 14, scope: !25538)
!25550 = !DILocation(line: 291, column: 37, scope: !25538)
!25551 = !DILocation(line: 291, column: 41, scope: !25538)
!25552 = !DILocation(line: 291, column: 22, scope: !25538)
!25553 = !DILocation(line: 291, column: 11, scope: !25538)
!25554 = !DILocation(line: 291, column: 15, scope: !25538)
!25555 = !DILocation(line: 291, column: 2, scope: !25538)
!25556 = !DILocation(line: 291, column: 20, scope: !25538)
!25557 = !DILocation(line: 300, column: 1, scope: !25538)
!25558 = distinct !DISubprogram(name: "pla_ocp_read", scope: !3, file: !3, line: 1197, type: !25559, scopeLine: 1198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!25559 = !DISubroutineType(types: !25560)
!25560 = !{!72, !10280, !1115, !1115, !647}
!25561 = !DILocalVariable(name: "tp", arg: 1, scope: !25558, file: !3, line: 1197, type: !10280)
!25562 = !DILocation(line: 1197, column: 32, scope: !25558)
!25563 = !DILocalVariable(name: "index", arg: 2, scope: !25558, file: !3, line: 1197, type: !1115)
!25564 = !DILocation(line: 1197, column: 40, scope: !25558)
!25565 = !DILocalVariable(name: "size", arg: 3, scope: !25558, file: !3, line: 1197, type: !1115)
!25566 = !DILocation(line: 1197, column: 51, scope: !25558)
!25567 = !DILocalVariable(name: "data", arg: 4, scope: !25558, file: !3, line: 1197, type: !647)
!25568 = !DILocation(line: 1197, column: 63, scope: !25558)
!25569 = !DILocation(line: 1199, column: 26, scope: !25558)
!25570 = !DILocation(line: 1199, column: 30, scope: !25558)
!25571 = !DILocation(line: 1199, column: 37, scope: !25558)
!25572 = !DILocation(line: 1199, column: 43, scope: !25558)
!25573 = !DILocation(line: 1199, column: 9, scope: !25558)
!25574 = !DILocation(line: 1199, column: 2, scope: !25558)
!25575 = distinct !DISubprogram(name: "vendor_mac_passthru_addr_read", scope: !3, file: !3, line: 1423, type: !25443, scopeLine: 1424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!25576 = !DILocalVariable(name: "tp", arg: 1, scope: !25575, file: !3, line: 1423, type: !10280)
!25577 = !DILocation(line: 1423, column: 56, scope: !25575)
!25578 = !DILocalVariable(name: "sa", arg: 2, scope: !25575, file: !3, line: 1423, type: !595)
!25579 = !DILocation(line: 1423, column: 77, scope: !25575)
!25580 = !DILocalVariable(name: "status", scope: !25575, file: !3, line: 1425, type: !25581)
!25581 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_status", file: !10756, line: 421, baseType: !784)
!25582 = !DILocation(line: 1425, column: 14, scope: !25575)
!25583 = !DILocalVariable(name: "buffer", scope: !25575, file: !3, line: 1426, type: !25584)
!25584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_buffer", file: !10756, line: 969, size: 128, elements: !25585)
!25585 = !{!25586, !25588}
!25586 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !25584, file: !10756, line: 970, baseType: !25587, size: 64)
!25587 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_size", file: !10756, line: 127, baseType: !413)
!25588 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !25584, file: !10756, line: 971, baseType: !647, size: 64, offset: 64)
!25589 = !DILocation(line: 1426, column: 21, scope: !25575)
!25590 = !DILocalVariable(name: "obj", scope: !25575, file: !3, line: 1427, type: !10754)
!25591 = !DILocation(line: 1427, column: 21, scope: !25575)
!25592 = !DILocalVariable(name: "ret", scope: !25575, file: !3, line: 1428, type: !72)
!25593 = !DILocation(line: 1428, column: 6, scope: !25575)
!25594 = !DILocalVariable(name: "ocp_data", scope: !25575, file: !3, line: 1429, type: !784)
!25595 = !DILocation(line: 1429, column: 6, scope: !25575)
!25596 = !DILocalVariable(name: "buf", scope: !25575, file: !3, line: 1430, type: !8434)
!25597 = !DILocation(line: 1430, column: 16, scope: !25575)
!25598 = !DILocalVariable(name: "mac_obj_name", scope: !25575, file: !3, line: 1431, type: !654)
!25599 = !DILocation(line: 1431, column: 8, scope: !25575)
!25600 = !DILocalVariable(name: "mac_obj_type", scope: !25575, file: !3, line: 1432, type: !10759)
!25601 = !DILocation(line: 1432, column: 19, scope: !25575)
!25602 = !DILocalVariable(name: "mac_strlen", scope: !25575, file: !3, line: 1433, type: !72)
!25603 = !DILocation(line: 1433, column: 6, scope: !25575)
!25604 = !DILocation(line: 1435, column: 36, scope: !25605)
!25605 = distinct !DILexicalBlock(scope: !25575, file: !3, line: 1435, column: 6)
!25606 = !DILocation(line: 1435, column: 40, scope: !25605)
!25607 = !DILocation(line: 1435, column: 6, scope: !25605)
!25608 = !DILocation(line: 1435, column: 6, scope: !25575)
!25609 = !DILocation(line: 1436, column: 16, scope: !25610)
!25610 = distinct !DILexicalBlock(scope: !25605, file: !3, line: 1435, column: 48)
!25611 = !DILocation(line: 1437, column: 16, scope: !25610)
!25612 = !DILocation(line: 1438, column: 14, scope: !25610)
!25613 = !DILocation(line: 1439, column: 2, scope: !25610)
!25614 = !DILocation(line: 1441, column: 28, scope: !25615)
!25615 = distinct !DILexicalBlock(scope: !25605, file: !3, line: 1439, column: 9)
!25616 = !DILocation(line: 1441, column: 14, scope: !25615)
!25617 = !DILocation(line: 1441, column: 12, scope: !25615)
!25618 = !DILocation(line: 1442, column: 8, scope: !25619)
!25619 = distinct !DILexicalBlock(scope: !25615, file: !3, line: 1442, column: 7)
!25620 = !DILocation(line: 1442, column: 17, scope: !25619)
!25621 = !DILocation(line: 1442, column: 28, scope: !25619)
!25622 = !DILocation(line: 1442, column: 7, scope: !25615)
!25623 = !DILocation(line: 1444, column: 29, scope: !25624)
!25624 = distinct !DILexicalBlock(scope: !25619, file: !3, line: 1442, column: 39)
!25625 = !DILocation(line: 1444, column: 15, scope: !25624)
!25626 = !DILocation(line: 1444, column: 13, scope: !25624)
!25627 = !DILocation(line: 1445, column: 9, scope: !25628)
!25628 = distinct !DILexicalBlock(scope: !25624, file: !3, line: 1445, column: 8)
!25629 = !DILocation(line: 1445, column: 18, scope: !25628)
!25630 = !DILocation(line: 1445, column: 36, scope: !25628)
!25631 = !DILocation(line: 1445, column: 8, scope: !25624)
!25632 = !DILocation(line: 1446, column: 5, scope: !25633)
!25633 = distinct !DILexicalBlock(scope: !25634, file: !3, line: 1446, column: 5)
!25634 = distinct !DILexicalBlock(scope: !25635, file: !3, line: 1446, column: 5)
!25635 = distinct !DILexicalBlock(scope: !25628, file: !3, line: 1445, column: 42)
!25636 = !DILocation(line: 1446, column: 5, scope: !25634)
!25637 = !DILocation(line: 1448, column: 5, scope: !25635)
!25638 = !DILocation(line: 1450, column: 3, scope: !25624)
!25639 = !DILocation(line: 1452, column: 29, scope: !25640)
!25640 = distinct !DILexicalBlock(scope: !25619, file: !3, line: 1450, column: 10)
!25641 = !DILocation(line: 1452, column: 15, scope: !25640)
!25642 = !DILocation(line: 1452, column: 13, scope: !25640)
!25643 = !DILocation(line: 1453, column: 9, scope: !25644)
!25644 = distinct !DILexicalBlock(scope: !25640, file: !3, line: 1453, column: 8)
!25645 = !DILocation(line: 1453, column: 18, scope: !25644)
!25646 = !DILocation(line: 1453, column: 30, scope: !25644)
!25647 = !DILocation(line: 1453, column: 35, scope: !25644)
!25648 = !DILocation(line: 1453, column: 39, scope: !25644)
!25649 = !DILocation(line: 1453, column: 48, scope: !25644)
!25650 = !DILocation(line: 1453, column: 59, scope: !25644)
!25651 = !DILocation(line: 1453, column: 8, scope: !25640)
!25652 = !DILocation(line: 1454, column: 5, scope: !25653)
!25653 = distinct !DILexicalBlock(scope: !25654, file: !3, line: 1454, column: 5)
!25654 = distinct !DILexicalBlock(scope: !25655, file: !3, line: 1454, column: 5)
!25655 = distinct !DILexicalBlock(scope: !25644, file: !3, line: 1453, column: 65)
!25656 = !DILocation(line: 1454, column: 5, scope: !25654)
!25657 = !DILocation(line: 1456, column: 5, scope: !25655)
!25658 = !DILocation(line: 1460, column: 16, scope: !25615)
!25659 = !DILocation(line: 1461, column: 16, scope: !25615)
!25660 = !DILocation(line: 1462, column: 14, scope: !25615)
!25661 = !DILocation(line: 1466, column: 38, scope: !25575)
!25662 = !DILocation(line: 1466, column: 11, scope: !25575)
!25663 = !DILocation(line: 1466, column: 9, scope: !25575)
!25664 = !DILocation(line: 1467, column: 36, scope: !25575)
!25665 = !DILocation(line: 1467, column: 8, scope: !25575)
!25666 = !DILocation(line: 1467, column: 6, scope: !25575)
!25667 = !DILocation(line: 1468, column: 7, scope: !25668)
!25668 = distinct !DILexicalBlock(scope: !25575, file: !3, line: 1468, column: 6)
!25669 = !DILocation(line: 1468, column: 6, scope: !25575)
!25670 = !DILocation(line: 1469, column: 3, scope: !25668)
!25671 = !DILocation(line: 1470, column: 6, scope: !25672)
!25672 = distinct !DILexicalBlock(scope: !25575, file: !3, line: 1470, column: 6)
!25673 = !DILocation(line: 1470, column: 11, scope: !25672)
!25674 = !DILocation(line: 1470, column: 19, scope: !25672)
!25675 = !DILocation(line: 1470, column: 16, scope: !25672)
!25676 = !DILocation(line: 1470, column: 32, scope: !25672)
!25677 = !DILocation(line: 1470, column: 35, scope: !25672)
!25678 = !DILocation(line: 1470, column: 40, scope: !25672)
!25679 = !DILocation(line: 1470, column: 47, scope: !25672)
!25680 = !DILocation(line: 1470, column: 57, scope: !25672)
!25681 = !DILocation(line: 1470, column: 54, scope: !25672)
!25682 = !DILocation(line: 1470, column: 6, scope: !25575)
!25683 = !DILocation(line: 1471, column: 3, scope: !25684)
!25684 = distinct !DILexicalBlock(scope: !25672, file: !3, line: 1470, column: 69)
!25685 = !DILocation(line: 1471, column: 3, scope: !25686)
!25686 = distinct !DILexicalBlock(scope: !25687, file: !3, line: 1471, column: 3)
!25687 = distinct !DILexicalBlock(scope: !25684, file: !3, line: 1471, column: 3)
!25688 = !DILocation(line: 1471, column: 3, scope: !25687)
!25689 = !DILocation(line: 1474, column: 3, scope: !25684)
!25690 = !DILocation(line: 1477, column: 14, scope: !25691)
!25691 = distinct !DILexicalBlock(scope: !25575, file: !3, line: 1477, column: 6)
!25692 = !DILocation(line: 1477, column: 19, scope: !25691)
!25693 = !DILocation(line: 1477, column: 26, scope: !25691)
!25694 = !DILocation(line: 1477, column: 6, scope: !25691)
!25695 = !DILocation(line: 1477, column: 51, scope: !25691)
!25696 = !DILocation(line: 1477, column: 56, scope: !25691)
!25697 = !DILocation(line: 1478, column: 14, scope: !25691)
!25698 = !DILocation(line: 1478, column: 19, scope: !25691)
!25699 = !DILocation(line: 1478, column: 26, scope: !25691)
!25700 = !DILocation(line: 1478, column: 34, scope: !25691)
!25701 = !DILocation(line: 1478, column: 6, scope: !25691)
!25702 = !DILocation(line: 1478, column: 50, scope: !25691)
!25703 = !DILocation(line: 1477, column: 6, scope: !25575)
!25704 = !DILocation(line: 1479, column: 3, scope: !25705)
!25705 = distinct !DILexicalBlock(scope: !25691, file: !3, line: 1478, column: 56)
!25706 = !DILocation(line: 1479, column: 3, scope: !25707)
!25707 = distinct !DILexicalBlock(scope: !25708, file: !3, line: 1479, column: 3)
!25708 = distinct !DILexicalBlock(scope: !25705, file: !3, line: 1479, column: 3)
!25709 = !DILocation(line: 1479, column: 3, scope: !25708)
!25710 = !DILocation(line: 1481, column: 3, scope: !25705)
!25711 = !DILocation(line: 1483, column: 16, scope: !25575)
!25712 = !DILocation(line: 1483, column: 21, scope: !25575)
!25713 = !DILocation(line: 1483, column: 26, scope: !25575)
!25714 = !DILocation(line: 1483, column: 33, scope: !25575)
!25715 = !DILocation(line: 1483, column: 41, scope: !25575)
!25716 = !DILocation(line: 1483, column: 8, scope: !25575)
!25717 = !DILocation(line: 1483, column: 6, scope: !25575)
!25718 = !DILocation(line: 1484, column: 8, scope: !25719)
!25719 = distinct !DILexicalBlock(scope: !25575, file: !3, line: 1484, column: 6)
!25720 = !DILocation(line: 1484, column: 12, scope: !25719)
!25721 = !DILocation(line: 1484, column: 17, scope: !25719)
!25722 = !DILocation(line: 1484, column: 40, scope: !25719)
!25723 = !DILocation(line: 1484, column: 20, scope: !25719)
!25724 = !DILocation(line: 1484, column: 6, scope: !25575)
!25725 = !DILocation(line: 1485, column: 3, scope: !25726)
!25726 = distinct !DILexicalBlock(scope: !25719, file: !3, line: 1484, column: 47)
!25727 = !DILocation(line: 1485, column: 3, scope: !25728)
!25728 = distinct !DILexicalBlock(scope: !25729, file: !3, line: 1485, column: 3)
!25729 = distinct !DILexicalBlock(scope: !25726, file: !3, line: 1485, column: 3)
!25730 = !DILocation(line: 1485, column: 3, scope: !25729)
!25731 = !DILocation(line: 1488, column: 7, scope: !25726)
!25732 = !DILocation(line: 1489, column: 3, scope: !25726)
!25733 = !DILocation(line: 1491, column: 9, scope: !25575)
!25734 = !DILocation(line: 1491, column: 13, scope: !25575)
!25735 = !DILocation(line: 1491, column: 2, scope: !25575)
!25736 = !DILocation(line: 1492, column: 2, scope: !25575)
!25737 = !DILocation(line: 1492, column: 2, scope: !25738)
!25738 = distinct !DILexicalBlock(scope: !25739, file: !3, line: 1492, column: 2)
!25739 = distinct !DILexicalBlock(scope: !25575, file: !3, line: 1492, column: 2)
!25740 = !DILocation(line: 1492, column: 2, scope: !25739)
!25741 = !DILabel(scope: !25575, name: "amacout", file: !3, line: 1495)
!25742 = !DILocation(line: 1495, column: 1, scope: !25575)
!25743 = !DILocation(line: 1496, column: 8, scope: !25575)
!25744 = !DILocation(line: 1496, column: 2, scope: !25575)
!25745 = !DILocation(line: 1497, column: 9, scope: !25575)
!25746 = !DILocation(line: 1497, column: 2, scope: !25575)
!25747 = !DILocation(line: 1498, column: 1, scope: !25575)
!25748 = distinct !DISubprogram(name: "eth_hw_addr_random", scope: !24532, file: !24532, line: 263, type: !488, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!25749 = !DILocalVariable(name: "dev", arg: 1, scope: !25748, file: !24532, line: 263, type: !372)
!25750 = !DILocation(line: 263, column: 58, scope: !25748)
!25751 = !DILocation(line: 265, column: 2, scope: !25748)
!25752 = !DILocation(line: 265, column: 7, scope: !25748)
!25753 = !DILocation(line: 265, column: 24, scope: !25748)
!25754 = !DILocation(line: 266, column: 18, scope: !25748)
!25755 = !DILocation(line: 266, column: 23, scope: !25748)
!25756 = !DILocation(line: 266, column: 2, scope: !25748)
!25757 = !DILocation(line: 267, column: 1, scope: !25748)
!25758 = distinct !DISubprogram(name: "eth_random_addr", scope: !24532, file: !24532, line: 223, type: !25759, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!25759 = !DISubroutineType(types: !25760)
!25760 = !{null, !7823}
!25761 = !DILocalVariable(name: "addr", arg: 1, scope: !25758, file: !24532, line: 223, type: !7823)
!25762 = !DILocation(line: 223, column: 40, scope: !25758)
!25763 = !DILocation(line: 225, column: 19, scope: !25758)
!25764 = !DILocation(line: 225, column: 2, scope: !25758)
!25765 = !DILocation(line: 226, column: 2, scope: !25758)
!25766 = !DILocation(line: 226, column: 10, scope: !25758)
!25767 = !DILocation(line: 227, column: 2, scope: !25758)
!25768 = !DILocation(line: 227, column: 10, scope: !25758)
!25769 = !DILocation(line: 228, column: 1, scope: !25758)
!25770 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !25, file: !25, line: 660, type: !25771, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!25771 = !DISubroutineType(types: !25772)
!25772 = !{null, !4308, !647}
!25773 = !DILocalVariable(name: "dev", arg: 1, scope: !25770, file: !25, line: 660, type: !4308)
!25774 = !DILocation(line: 660, column: 51, scope: !25770)
!25775 = !DILocalVariable(name: "data", arg: 2, scope: !25770, file: !25, line: 660, type: !647)
!25776 = !DILocation(line: 660, column: 62, scope: !25770)
!25777 = !DILocation(line: 662, column: 21, scope: !25770)
!25778 = !DILocation(line: 662, column: 2, scope: !25770)
!25779 = !DILocation(line: 662, column: 7, scope: !25770)
!25780 = !DILocation(line: 662, column: 19, scope: !25770)
!25781 = !DILocation(line: 663, column: 1, scope: !25770)
!25782 = distinct !DISubprogram(name: "rx_bottom", scope: !3, file: !3, line: 2227, type: !25783, scopeLine: 2228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!25783 = !DISubroutineType(types: !25784)
!25784 = !{!72, !10280, !72}
!25785 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !25786)
!25786 = distinct !DILocation(line: 2367, column: 3, scope: !25787)
!25787 = distinct !DILexicalBlock(scope: !25788, file: !3, line: 2367, column: 3)
!25788 = distinct !DILexicalBlock(scope: !25789, file: !3, line: 2367, column: 3)
!25789 = distinct !DILexicalBlock(scope: !25790, file: !3, line: 2367, column: 3)
!25790 = distinct !DILexicalBlock(scope: !25791, file: !3, line: 2367, column: 3)
!25791 = distinct !DILexicalBlock(scope: !25792, file: !3, line: 2367, column: 3)
!25792 = distinct !DILexicalBlock(scope: !25793, file: !3, line: 2366, column: 30)
!25793 = distinct !DILexicalBlock(scope: !25782, file: !3, line: 2366, column: 6)
!25794 = !DILocation(line: 407, column: 64, scope: !15429, inlinedAt: !25795)
!25795 = distinct !DILocation(line: 2354, column: 4, scope: !25796)
!25796 = distinct !DILexicalBlock(scope: !25797, file: !3, line: 2345, column: 17)
!25797 = distinct !DILexicalBlock(scope: !25798, file: !3, line: 2345, column: 7)
!25798 = distinct !DILexicalBlock(scope: !25799, file: !3, line: 2260, column: 46)
!25799 = distinct !DILexicalBlock(scope: !25800, file: !3, line: 2260, column: 2)
!25800 = distinct !DILexicalBlock(scope: !25782, file: !3, line: 2260, column: 2)
!25801 = !DILocation(line: 407, column: 84, scope: !15429, inlinedAt: !25795)
!25802 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !25803)
!25803 = distinct !DILocation(line: 2346, column: 4, scope: !25804)
!25804 = distinct !DILexicalBlock(scope: !25805, file: !3, line: 2346, column: 4)
!25805 = distinct !DILexicalBlock(scope: !25806, file: !3, line: 2346, column: 4)
!25806 = distinct !DILexicalBlock(scope: !25807, file: !3, line: 2346, column: 4)
!25807 = distinct !DILexicalBlock(scope: !25808, file: !3, line: 2346, column: 4)
!25808 = distinct !DILexicalBlock(scope: !25796, file: !3, line: 2346, column: 4)
!25809 = !DILocation(line: 407, column: 64, scope: !15429, inlinedAt: !25810)
!25810 = distinct !DILocation(line: 2258, column: 2, scope: !25782)
!25811 = !DILocation(line: 407, column: 84, scope: !15429, inlinedAt: !25810)
!25812 = !DILocation(line: 407, column: 64, scope: !15429, inlinedAt: !25813)
!25813 = distinct !DILocation(line: 2369, column: 3, scope: !25792)
!25814 = !DILocation(line: 407, column: 84, scope: !15429, inlinedAt: !25813)
!25815 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !25816)
!25816 = distinct !DILocation(line: 2256, column: 2, scope: !25817)
!25817 = distinct !DILexicalBlock(scope: !25818, file: !3, line: 2256, column: 2)
!25818 = distinct !DILexicalBlock(scope: !25819, file: !3, line: 2256, column: 2)
!25819 = distinct !DILexicalBlock(scope: !25820, file: !3, line: 2256, column: 2)
!25820 = distinct !DILexicalBlock(scope: !25821, file: !3, line: 2256, column: 2)
!25821 = distinct !DILexicalBlock(scope: !25782, file: !3, line: 2256, column: 2)
!25822 = !DILocalVariable(name: "tp", arg: 1, scope: !25782, file: !3, line: 2227, type: !10280)
!25823 = !DILocation(line: 2227, column: 36, scope: !25782)
!25824 = !DILocalVariable(name: "budget", arg: 2, scope: !25782, file: !3, line: 2227, type: !72)
!25825 = !DILocation(line: 2227, column: 44, scope: !25782)
!25826 = !DILocalVariable(name: "flags", scope: !25782, file: !3, line: 2229, type: !394)
!25827 = !DILocation(line: 2229, column: 16, scope: !25782)
!25828 = !DILocalVariable(name: "cursor", scope: !25782, file: !3, line: 2230, type: !369)
!25829 = !DILocation(line: 2230, column: 20, scope: !25782)
!25830 = !DILocalVariable(name: "next", scope: !25782, file: !3, line: 2230, type: !369)
!25831 = !DILocation(line: 2230, column: 29, scope: !25782)
!25832 = !DILocalVariable(name: "rx_queue", scope: !25782, file: !3, line: 2230, type: !366)
!25833 = !DILocation(line: 2230, column: 35, scope: !25782)
!25834 = !DILocalVariable(name: "ret", scope: !25782, file: !3, line: 2231, type: !72)
!25835 = !DILocation(line: 2231, column: 6, scope: !25782)
!25836 = !DILocalVariable(name: "work_done", scope: !25782, file: !3, line: 2231, type: !72)
!25837 = !DILocation(line: 2231, column: 15, scope: !25782)
!25838 = !DILocalVariable(name: "napi", scope: !25782, file: !3, line: 2232, type: !10297)
!25839 = !DILocation(line: 2232, column: 22, scope: !25782)
!25840 = !DILocation(line: 2232, column: 30, scope: !25782)
!25841 = !DILocation(line: 2232, column: 34, scope: !25782)
!25842 = !DILocation(line: 2234, column: 24, scope: !25843)
!25843 = distinct !DILexicalBlock(scope: !25782, file: !3, line: 2234, column: 6)
!25844 = !DILocation(line: 2234, column: 28, scope: !25843)
!25845 = !DILocation(line: 2234, column: 7, scope: !25843)
!25846 = !DILocation(line: 2234, column: 6, scope: !25782)
!25847 = !DILocation(line: 2235, column: 3, scope: !25848)
!25848 = distinct !DILexicalBlock(scope: !25843, file: !3, line: 2234, column: 39)
!25849 = !DILocation(line: 2235, column: 10, scope: !25848)
!25850 = !DILocation(line: 2235, column: 22, scope: !25848)
!25851 = !DILocation(line: 2235, column: 20, scope: !25848)
!25852 = !DILocalVariable(name: "skb", scope: !25853, file: !3, line: 2236, type: !497)
!25853 = distinct !DILexicalBlock(scope: !25848, file: !3, line: 2235, column: 30)
!25854 = !DILocation(line: 2236, column: 20, scope: !25853)
!25855 = !DILocation(line: 2236, column: 41, scope: !25853)
!25856 = !DILocation(line: 2236, column: 45, scope: !25853)
!25857 = !DILocation(line: 2236, column: 26, scope: !25853)
!25858 = !DILocalVariable(name: "netdev", scope: !25853, file: !3, line: 2237, type: !372)
!25859 = !DILocation(line: 2237, column: 23, scope: !25853)
!25860 = !DILocation(line: 2237, column: 32, scope: !25853)
!25861 = !DILocation(line: 2237, column: 36, scope: !25853)
!25862 = !DILocalVariable(name: "stats", scope: !25853, file: !3, line: 2238, type: !7813)
!25863 = !DILocation(line: 2238, column: 29, scope: !25853)
!25864 = !DILocation(line: 2238, column: 38, scope: !25853)
!25865 = !DILocation(line: 2238, column: 46, scope: !25853)
!25866 = !DILocalVariable(name: "pkt_len", scope: !25853, file: !3, line: 2239, type: !7)
!25867 = !DILocation(line: 2239, column: 17, scope: !25853)
!25868 = !DILocation(line: 2241, column: 9, scope: !25869)
!25869 = distinct !DILexicalBlock(scope: !25853, file: !3, line: 2241, column: 8)
!25870 = !DILocation(line: 2241, column: 8, scope: !25853)
!25871 = !DILocation(line: 2242, column: 5, scope: !25869)
!25872 = !DILocation(line: 2244, column: 14, scope: !25853)
!25873 = !DILocation(line: 2244, column: 19, scope: !25853)
!25874 = !DILocation(line: 2244, column: 12, scope: !25853)
!25875 = !DILocation(line: 2245, column: 21, scope: !25853)
!25876 = !DILocation(line: 2245, column: 27, scope: !25853)
!25877 = !DILocation(line: 2245, column: 4, scope: !25853)
!25878 = !DILocation(line: 2246, column: 13, scope: !25853)
!25879 = !DILocation(line: 2247, column: 4, scope: !25853)
!25880 = !DILocation(line: 2247, column: 11, scope: !25853)
!25881 = !DILocation(line: 2247, column: 21, scope: !25853)
!25882 = !DILocation(line: 2248, column: 23, scope: !25853)
!25883 = !DILocation(line: 2248, column: 4, scope: !25853)
!25884 = !DILocation(line: 2248, column: 11, scope: !25853)
!25885 = !DILocation(line: 2248, column: 20, scope: !25853)
!25886 = distinct !{!25886, !25847, !25887}
!25887 = !DILocation(line: 2249, column: 3, scope: !25848)
!25888 = !DILocation(line: 2250, column: 2, scope: !25848)
!25889 = !DILocation(line: 2252, column: 18, scope: !25890)
!25890 = distinct !DILexicalBlock(scope: !25782, file: !3, line: 2252, column: 6)
!25891 = !DILocation(line: 2252, column: 22, scope: !25890)
!25892 = !DILocation(line: 2252, column: 6, scope: !25890)
!25893 = !DILocation(line: 2252, column: 6, scope: !25782)
!25894 = !DILocation(line: 2253, column: 3, scope: !25890)
!25895 = !DILocation(line: 2255, column: 2, scope: !25782)
!25896 = !DILocation(line: 2256, column: 2, scope: !25782)
!25897 = !DILocation(line: 2256, column: 2, scope: !25821)
!25898 = !DILocalVariable(name: "__dummy", scope: !25899, file: !3, line: 2256, type: !394)
!25899 = distinct !DILexicalBlock(scope: !25820, file: !3, line: 2256, column: 2)
!25900 = !DILocation(line: 2256, column: 2, scope: !25899)
!25901 = !DILocalVariable(name: "__dummy2", scope: !25899, file: !3, line: 2256, type: !394)
!25902 = !DILocation(line: 2256, column: 2, scope: !25820)
!25903 = !DILocation(line: 2256, column: 2, scope: !25819)
!25904 = !DILocation(line: 2256, column: 2, scope: !25905)
!25905 = distinct !DILexicalBlock(scope: !25819, file: !3, line: 2256, column: 2)
!25906 = !DILocalVariable(name: "__dummy", scope: !25907, file: !3, line: 2256, type: !394)
!25907 = distinct !DILexicalBlock(scope: !25908, file: !3, line: 2256, column: 2)
!25908 = distinct !DILexicalBlock(scope: !25905, file: !3, line: 2256, column: 2)
!25909 = !DILocation(line: 2256, column: 2, scope: !25907)
!25910 = !DILocalVariable(name: "__dummy2", scope: !25907, file: !3, line: 2256, type: !394)
!25911 = !DILocation(line: 2256, column: 2, scope: !25908)
!25912 = !DILocation(line: 2256, column: 2, scope: !25818)
!25913 = !{i32 -2137068025}
!25914 = !DILocation(line: 2256, column: 2, scope: !25817)
!25915 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !25816)
!25916 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !25816)
!25917 = !DILocation(line: 2257, column: 20, scope: !25782)
!25918 = !DILocation(line: 2257, column: 24, scope: !25782)
!25919 = !DILocation(line: 2257, column: 2, scope: !25782)
!25920 = !DILocation(line: 2258, column: 26, scope: !25782)
!25921 = !DILocation(line: 2258, column: 30, scope: !25782)
!25922 = !DILocation(line: 2258, column: 39, scope: !25782)
!25923 = !DILocation(line: 409, column: 2, scope: !15498, inlinedAt: !25810)
!25924 = !DILocation(line: 409, column: 2, scope: !15503, inlinedAt: !25810)
!25925 = !DILocation(line: 409, column: 2, scope: !15504, inlinedAt: !25810)
!25926 = !DILocation(line: 409, column: 2, scope: !15511, inlinedAt: !25810)
!25927 = !DILocation(line: 409, column: 2, scope: !15514, inlinedAt: !25810)
!25928 = !DILocation(line: 2260, column: 2, scope: !25800)
!25929 = !DILocation(line: 2260, column: 2, scope: !25799)
!25930 = !DILocalVariable(name: "rx_desc", scope: !25798, file: !3, line: 2261, type: !10805)
!25931 = !DILocation(line: 2261, column: 19, scope: !25798)
!25932 = !DILocalVariable(name: "agg", scope: !25798, file: !3, line: 2262, type: !10212)
!25933 = !DILocation(line: 2262, column: 18, scope: !25798)
!25934 = !DILocalVariable(name: "agg_free", scope: !25798, file: !3, line: 2262, type: !10212)
!25935 = !DILocation(line: 2262, column: 24, scope: !25798)
!25936 = !DILocalVariable(name: "len_used", scope: !25798, file: !3, line: 2263, type: !72)
!25937 = !DILocation(line: 2263, column: 7, scope: !25798)
!25938 = !DILocalVariable(name: "urb", scope: !25798, file: !3, line: 2264, type: !10218)
!25939 = !DILocation(line: 2264, column: 15, scope: !25798)
!25940 = !DILocalVariable(name: "rx_data", scope: !25798, file: !3, line: 2265, type: !7823)
!25941 = !DILocation(line: 2265, column: 7, scope: !25798)
!25942 = !DILocation(line: 2267, column: 17, scope: !25798)
!25943 = !DILocation(line: 2267, column: 3, scope: !25798)
!25944 = !DILocalVariable(name: "__mptr", scope: !25945, file: !3, line: 2269, type: !647)
!25945 = distinct !DILexicalBlock(scope: !25798, file: !3, line: 2269, column: 9)
!25946 = !DILocation(line: 2269, column: 9, scope: !25945)
!25947 = !DILocation(line: 2269, column: 9, scope: !25948)
!25948 = distinct !DILexicalBlock(scope: !25945, file: !3, line: 2269, column: 9)
!25949 = !DILocation(line: 2269, column: 7, scope: !25798)
!25950 = !DILocation(line: 2270, column: 9, scope: !25798)
!25951 = !DILocation(line: 2270, column: 14, scope: !25798)
!25952 = !DILocation(line: 2270, column: 7, scope: !25798)
!25953 = !DILocation(line: 2271, column: 7, scope: !25954)
!25954 = distinct !DILexicalBlock(scope: !25798, file: !3, line: 2271, column: 7)
!25955 = !DILocation(line: 2271, column: 12, scope: !25954)
!25956 = !DILocation(line: 2271, column: 26, scope: !25954)
!25957 = !DILocation(line: 2271, column: 7, scope: !25798)
!25958 = !DILocation(line: 2272, column: 4, scope: !25954)
!25959 = !DILocation(line: 2274, column: 30, scope: !25798)
!25960 = !DILocation(line: 2274, column: 14, scope: !25798)
!25961 = !DILocation(line: 2274, column: 12, scope: !25798)
!25962 = !DILocation(line: 2276, column: 13, scope: !25798)
!25963 = !DILocation(line: 2276, column: 18, scope: !25798)
!25964 = !DILocation(line: 2276, column: 11, scope: !25798)
!25965 = !DILocation(line: 2277, column: 13, scope: !25798)
!25966 = !DILocation(line: 2277, column: 18, scope: !25798)
!25967 = !DILocation(line: 2277, column: 11, scope: !25798)
!25968 = !DILocation(line: 2278, column: 12, scope: !25798)
!25969 = !DILocation(line: 2280, column: 3, scope: !25798)
!25970 = !DILocation(line: 2280, column: 10, scope: !25798)
!25971 = !DILocation(line: 2280, column: 15, scope: !25798)
!25972 = !DILocation(line: 2280, column: 31, scope: !25798)
!25973 = !DILocation(line: 2280, column: 29, scope: !25798)
!25974 = !DILocalVariable(name: "netdev", scope: !25975, file: !3, line: 2281, type: !372)
!25975 = distinct !DILexicalBlock(scope: !25798, file: !3, line: 2280, column: 41)
!25976 = !DILocation(line: 2281, column: 23, scope: !25975)
!25977 = !DILocation(line: 2281, column: 32, scope: !25975)
!25978 = !DILocation(line: 2281, column: 36, scope: !25975)
!25979 = !DILocalVariable(name: "stats", scope: !25975, file: !3, line: 2282, type: !7813)
!25980 = !DILocation(line: 2282, column: 29, scope: !25975)
!25981 = !DILocation(line: 2282, column: 38, scope: !25975)
!25982 = !DILocation(line: 2282, column: 46, scope: !25975)
!25983 = !DILocalVariable(name: "pkt_len", scope: !25975, file: !3, line: 2283, type: !7)
!25984 = !DILocation(line: 2283, column: 17, scope: !25975)
!25985 = !DILocalVariable(name: "rx_frag_head_sz", scope: !25975, file: !3, line: 2283, type: !7)
!25986 = !DILocation(line: 2283, column: 26, scope: !25975)
!25987 = !DILocalVariable(name: "skb", scope: !25975, file: !3, line: 2284, type: !497)
!25988 = !DILocation(line: 2284, column: 20, scope: !25975)
!25989 = !DILocation(line: 2287, column: 8, scope: !25990)
!25990 = distinct !DILexicalBlock(scope: !25975, file: !3, line: 2287, column: 8)
!25991 = !DILocation(line: 2287, column: 8, scope: !25975)
!25992 = !DILocation(line: 2288, column: 5, scope: !25990)
!25993 = !DILocation(line: 2290, column: 14, scope: !25975)
!25994 = !DILocation(line: 2290, column: 42, scope: !25975)
!25995 = !DILocation(line: 2290, column: 12, scope: !25975)
!25996 = !DILocation(line: 2291, column: 8, scope: !25997)
!25997 = distinct !DILexicalBlock(scope: !25975, file: !3, line: 2291, column: 8)
!25998 = !DILocation(line: 2291, column: 16, scope: !25997)
!25999 = !DILocation(line: 2291, column: 8, scope: !25975)
!26000 = !DILocation(line: 2292, column: 5, scope: !25997)
!26001 = !DILocation(line: 2294, column: 16, scope: !25975)
!26002 = !DILocation(line: 2294, column: 13, scope: !25975)
!26003 = !DILocation(line: 2295, column: 8, scope: !26004)
!26004 = distinct !DILexicalBlock(scope: !25975, file: !3, line: 2295, column: 8)
!26005 = !DILocation(line: 2295, column: 13, scope: !26004)
!26006 = !DILocation(line: 2295, column: 29, scope: !26004)
!26007 = !DILocation(line: 2295, column: 27, scope: !26004)
!26008 = !DILocation(line: 2295, column: 8, scope: !25975)
!26009 = !DILocation(line: 2296, column: 5, scope: !26004)
!26010 = !DILocation(line: 2298, column: 12, scope: !25975)
!26011 = !DILocation(line: 2299, column: 12, scope: !25975)
!26012 = !DILocation(line: 2301, column: 9, scope: !26013)
!26013 = distinct !DILexicalBlock(scope: !25975, file: !3, line: 2301, column: 8)
!26014 = !DILocation(line: 2301, column: 18, scope: !26013)
!26015 = !DILocation(line: 2301, column: 21, scope: !26013)
!26016 = !DILocation(line: 2301, column: 25, scope: !26013)
!26017 = !DILocation(line: 2301, column: 40, scope: !26013)
!26018 = !DILocation(line: 2301, column: 38, scope: !26013)
!26019 = !DILocation(line: 2301, column: 8, scope: !25975)
!26020 = !DILocation(line: 2302, column: 23, scope: !26013)
!26021 = !DILocation(line: 2302, column: 21, scope: !26013)
!26022 = !DILocation(line: 2302, column: 5, scope: !26013)
!26023 = !DILocation(line: 2304, column: 23, scope: !26013)
!26024 = !DILocation(line: 2304, column: 27, scope: !26013)
!26025 = !DILocation(line: 2304, column: 21, scope: !26013)
!26026 = !DILocation(line: 2306, column: 25, scope: !25975)
!26027 = !DILocation(line: 2306, column: 31, scope: !25975)
!26028 = !DILocation(line: 2306, column: 10, scope: !25975)
!26029 = !DILocation(line: 2306, column: 8, scope: !25975)
!26030 = !DILocation(line: 2307, column: 9, scope: !26031)
!26031 = distinct !DILexicalBlock(scope: !25975, file: !3, line: 2307, column: 8)
!26032 = !DILocation(line: 2307, column: 8, scope: !25975)
!26033 = !DILocation(line: 2308, column: 5, scope: !26034)
!26034 = distinct !DILexicalBlock(scope: !26031, file: !3, line: 2307, column: 14)
!26035 = !DILocation(line: 2308, column: 12, scope: !26034)
!26036 = !DILocation(line: 2308, column: 22, scope: !26034)
!26037 = !DILocation(line: 2309, column: 5, scope: !26034)
!26038 = !DILocation(line: 2312, column: 35, scope: !25975)
!26039 = !DILocation(line: 2312, column: 39, scope: !25975)
!26040 = !DILocation(line: 2312, column: 21, scope: !25975)
!26041 = !DILocation(line: 2312, column: 4, scope: !25975)
!26042 = !DILocation(line: 2312, column: 9, scope: !25975)
!26043 = !DILocation(line: 2312, column: 19, scope: !25975)
!26044 = !DILocation(line: 2313, column: 11, scope: !25975)
!26045 = !DILocation(line: 2313, column: 16, scope: !25975)
!26046 = !DILocation(line: 2313, column: 22, scope: !25975)
!26047 = !DILocation(line: 2313, column: 31, scope: !25975)
!26048 = !DILocation(line: 2313, column: 4, scope: !25975)
!26049 = !DILocation(line: 2314, column: 12, scope: !25975)
!26050 = !DILocation(line: 2314, column: 17, scope: !25975)
!26051 = !DILocation(line: 2314, column: 4, scope: !25975)
!26052 = !DILocation(line: 2315, column: 15, scope: !25975)
!26053 = !DILocation(line: 2315, column: 12, scope: !25975)
!26054 = !DILocation(line: 2316, column: 15, scope: !25975)
!26055 = !DILocation(line: 2316, column: 12, scope: !25975)
!26056 = !DILocation(line: 2317, column: 8, scope: !26057)
!26057 = distinct !DILexicalBlock(scope: !25975, file: !3, line: 2317, column: 8)
!26058 = !DILocation(line: 2317, column: 8, scope: !25975)
!26059 = !DILocation(line: 2318, column: 21, scope: !26060)
!26060 = distinct !DILexicalBlock(scope: !26057, file: !3, line: 2317, column: 17)
!26061 = !DILocation(line: 2318, column: 29, scope: !26060)
!26062 = !DILocation(line: 2318, column: 34, scope: !26060)
!26063 = !DILocation(line: 2319, column: 18, scope: !26060)
!26064 = !DILocation(line: 2319, column: 23, scope: !26060)
!26065 = !DILocation(line: 2319, column: 7, scope: !26060)
!26066 = !DILocation(line: 2320, column: 7, scope: !26060)
!26067 = !DILocation(line: 2321, column: 7, scope: !26060)
!26068 = !DILocation(line: 2318, column: 5, scope: !26060)
!26069 = !DILocation(line: 2322, column: 14, scope: !26060)
!26070 = !DILocation(line: 2322, column: 19, scope: !26060)
!26071 = !DILocation(line: 2322, column: 5, scope: !26060)
!26072 = !DILocation(line: 2323, column: 4, scope: !26060)
!26073 = !DILocation(line: 2325, column: 35, scope: !25975)
!26074 = !DILocation(line: 2325, column: 40, scope: !25975)
!26075 = !DILocation(line: 2325, column: 20, scope: !25975)
!26076 = !DILocation(line: 2325, column: 4, scope: !25975)
!26077 = !DILocation(line: 2325, column: 9, scope: !25975)
!26078 = !DILocation(line: 2325, column: 18, scope: !25975)
!26079 = !DILocation(line: 2326, column: 20, scope: !25975)
!26080 = !DILocation(line: 2326, column: 29, scope: !25975)
!26081 = !DILocation(line: 2326, column: 4, scope: !25975)
!26082 = !DILocation(line: 2327, column: 8, scope: !26083)
!26083 = distinct !DILexicalBlock(scope: !25975, file: !3, line: 2327, column: 8)
!26084 = !DILocation(line: 2327, column: 20, scope: !26083)
!26085 = !DILocation(line: 2327, column: 18, scope: !26083)
!26086 = !DILocation(line: 2327, column: 8, scope: !25975)
!26087 = !DILocation(line: 2328, column: 14, scope: !26088)
!26088 = distinct !DILexicalBlock(scope: !26083, file: !3, line: 2327, column: 28)
!26089 = !DILocation(line: 2329, column: 5, scope: !26088)
!26090 = !DILocation(line: 2329, column: 12, scope: !26088)
!26091 = !DILocation(line: 2329, column: 22, scope: !26088)
!26092 = !DILocation(line: 2330, column: 24, scope: !26088)
!26093 = !DILocation(line: 2330, column: 29, scope: !26088)
!26094 = !DILocation(line: 2330, column: 5, scope: !26088)
!26095 = !DILocation(line: 2330, column: 12, scope: !26088)
!26096 = !DILocation(line: 2330, column: 21, scope: !26088)
!26097 = !DILocation(line: 2331, column: 22, scope: !26088)
!26098 = !DILocation(line: 2331, column: 28, scope: !26088)
!26099 = !DILocation(line: 2331, column: 5, scope: !26088)
!26100 = !DILocation(line: 2332, column: 4, scope: !26088)
!26101 = !DILocation(line: 2333, column: 23, scope: !26102)
!26102 = distinct !DILexicalBlock(scope: !26083, file: !3, line: 2332, column: 11)
!26103 = !DILocation(line: 2333, column: 27, scope: !26102)
!26104 = !DILocation(line: 2333, column: 37, scope: !26102)
!26105 = !DILocation(line: 2333, column: 5, scope: !26102)
!26106 = !DILabel(scope: !25975, name: "find_next_rx", file: !3, line: 2336)
!26107 = !DILocation(line: 2336, column: 1, scope: !25975)
!26108 = !DILocation(line: 2337, column: 27, scope: !25975)
!26109 = !DILocation(line: 2337, column: 37, scope: !25975)
!26110 = !DILocation(line: 2337, column: 35, scope: !25975)
!26111 = !DILocation(line: 2337, column: 45, scope: !25975)
!26112 = !DILocation(line: 2337, column: 14, scope: !25975)
!26113 = !DILocation(line: 2337, column: 12, scope: !25975)
!26114 = !DILocation(line: 2338, column: 32, scope: !25975)
!26115 = !DILocation(line: 2338, column: 14, scope: !25975)
!26116 = !DILocation(line: 2338, column: 12, scope: !25975)
!26117 = !DILocation(line: 2339, column: 26, scope: !25975)
!26118 = !DILocation(line: 2339, column: 31, scope: !25975)
!26119 = !DILocation(line: 2339, column: 15, scope: !25975)
!26120 = !DILocation(line: 2339, column: 13, scope: !25975)
!26121 = !DILocation(line: 2340, column: 13, scope: !25975)
!26122 = distinct !{!26122, !25969, !26123}
!26123 = !DILocation(line: 2341, column: 3, scope: !25798)
!26124 = !DILocalVariable(name: "__ret_warn_on", scope: !26125, file: !3, line: 2343, type: !72)
!26125 = distinct !DILexicalBlock(scope: !25798, file: !3, line: 2343, column: 3)
!26126 = !DILocation(line: 2343, column: 3, scope: !26125)
!26127 = !DILocation(line: 0, scope: !26125)
!26128 = !DILocation(line: 2343, column: 3, scope: !26129)
!26129 = distinct !DILexicalBlock(scope: !26125, file: !3, line: 2343, column: 3)
!26130 = !DILocation(line: 2343, column: 3, scope: !26131)
!26131 = distinct !DILexicalBlock(scope: !26129, file: !3, line: 2343, column: 3)
!26132 = !DILocation(line: 2343, column: 3, scope: !26133)
!26133 = distinct !DILexicalBlock(scope: !26131, file: !3, line: 2343, column: 3)
!26134 = !DILocation(line: 2343, column: 3, scope: !26135)
!26135 = distinct !DILexicalBlock(scope: !26131, file: !3, line: 2343, column: 3)
!26136 = !{i32 -2137065054, i32 -2137065025, i32 -2137064979, i32 -2137064921, i32 -2137064867, i32 -2137064813, i32 -2137064758, i32 -2137064727}
!26137 = !DILocation(line: 2343, column: 3, scope: !26138)
!26138 = distinct !DILexicalBlock(scope: !26131, file: !3, line: 2343, column: 3)
!26139 = !{i32 -2137064321, i32 -2137064314, i32 -2137064262, i32 -2137064231, i32 -2137064201}
!26140 = !DILocation(line: 2343, column: 3, scope: !26141)
!26141 = distinct !DILexicalBlock(scope: !26131, file: !3, line: 2343, column: 3)
!26142 = !DILocation(line: 2345, column: 7, scope: !25797)
!26143 = !DILocation(line: 2345, column: 7, scope: !25798)
!26144 = !DILocation(line: 2346, column: 4, scope: !25796)
!26145 = !DILocation(line: 2346, column: 4, scope: !25808)
!26146 = !DILocalVariable(name: "__dummy", scope: !26147, file: !3, line: 2346, type: !394)
!26147 = distinct !DILexicalBlock(scope: !25807, file: !3, line: 2346, column: 4)
!26148 = !DILocation(line: 2346, column: 4, scope: !26147)
!26149 = !DILocalVariable(name: "__dummy2", scope: !26147, file: !3, line: 2346, type: !394)
!26150 = !DILocation(line: 2346, column: 4, scope: !25807)
!26151 = !DILocation(line: 2346, column: 4, scope: !25806)
!26152 = !DILocation(line: 2346, column: 4, scope: !26153)
!26153 = distinct !DILexicalBlock(scope: !25806, file: !3, line: 2346, column: 4)
!26154 = !DILocalVariable(name: "__dummy", scope: !26155, file: !3, line: 2346, type: !394)
!26155 = distinct !DILexicalBlock(scope: !26156, file: !3, line: 2346, column: 4)
!26156 = distinct !DILexicalBlock(scope: !26153, file: !3, line: 2346, column: 4)
!26157 = !DILocation(line: 2346, column: 4, scope: !26155)
!26158 = !DILocalVariable(name: "__dummy2", scope: !26155, file: !3, line: 2346, type: !394)
!26159 = !DILocation(line: 2346, column: 4, scope: !26156)
!26160 = !DILocation(line: 2346, column: 4, scope: !25805)
!26161 = !{i32 -2137063215}
!26162 = !DILocation(line: 2346, column: 4, scope: !25804)
!26163 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !25803)
!26164 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !25803)
!26165 = !DILocation(line: 2347, column: 19, scope: !26166)
!26166 = distinct !DILexicalBlock(scope: !25796, file: !3, line: 2347, column: 8)
!26167 = !DILocation(line: 2347, column: 24, scope: !26166)
!26168 = !DILocation(line: 2347, column: 8, scope: !26166)
!26169 = !DILocation(line: 2347, column: 30, scope: !26166)
!26170 = !DILocation(line: 2347, column: 8, scope: !25796)
!26171 = !DILocation(line: 2348, column: 15, scope: !26172)
!26172 = distinct !DILexicalBlock(scope: !26166, file: !3, line: 2347, column: 36)
!26173 = !DILocation(line: 2348, column: 25, scope: !26172)
!26174 = !DILocation(line: 2348, column: 32, scope: !26172)
!26175 = !DILocation(line: 2348, column: 36, scope: !26172)
!26176 = !DILocation(line: 2348, column: 5, scope: !26172)
!26177 = !DILocation(line: 2349, column: 4, scope: !26172)
!26178 = !DILocation(line: 2350, column: 20, scope: !26179)
!26179 = distinct !DILexicalBlock(scope: !26166, file: !3, line: 2349, column: 11)
!26180 = !DILocation(line: 2350, column: 25, scope: !26179)
!26181 = !DILocation(line: 2350, column: 32, scope: !26179)
!26182 = !DILocation(line: 2350, column: 36, scope: !26179)
!26183 = !DILocation(line: 2350, column: 5, scope: !26179)
!26184 = !DILocation(line: 2351, column: 11, scope: !26179)
!26185 = !DILocation(line: 2351, column: 9, scope: !26179)
!26186 = !DILocation(line: 2352, column: 11, scope: !26179)
!26187 = !DILocation(line: 2352, column: 16, scope: !26179)
!26188 = !DILocation(line: 2352, column: 9, scope: !26179)
!26189 = !DILocation(line: 2354, column: 28, scope: !25796)
!26190 = !DILocation(line: 2354, column: 32, scope: !25796)
!26191 = !DILocation(line: 2354, column: 41, scope: !25796)
!26192 = !DILocation(line: 409, column: 2, scope: !15498, inlinedAt: !25795)
!26193 = !DILocation(line: 409, column: 2, scope: !15503, inlinedAt: !25795)
!26194 = !DILocation(line: 409, column: 2, scope: !15504, inlinedAt: !25795)
!26195 = !DILocation(line: 409, column: 2, scope: !15511, inlinedAt: !25795)
!26196 = !DILocation(line: 409, column: 2, scope: !15514, inlinedAt: !25795)
!26197 = !DILocation(line: 2355, column: 3, scope: !25796)
!26198 = !DILabel(scope: !25798, name: "submit", file: !3, line: 2357)
!26199 = !DILocation(line: 2357, column: 1, scope: !25798)
!26200 = !DILocation(line: 2358, column: 8, scope: !26201)
!26201 = distinct !DILexicalBlock(scope: !25798, file: !3, line: 2358, column: 7)
!26202 = !DILocation(line: 2358, column: 7, scope: !25798)
!26203 = !DILocation(line: 2359, column: 26, scope: !26204)
!26204 = distinct !DILexicalBlock(scope: !26201, file: !3, line: 2358, column: 13)
!26205 = !DILocation(line: 2359, column: 30, scope: !26204)
!26206 = !DILocation(line: 2359, column: 10, scope: !26204)
!26207 = !DILocation(line: 2359, column: 8, scope: !26204)
!26208 = !DILocation(line: 2360, column: 3, scope: !26204)
!26209 = !DILocation(line: 2361, column: 4, scope: !26210)
!26210 = distinct !DILexicalBlock(scope: !26201, file: !3, line: 2360, column: 10)
!26211 = !DILocation(line: 2361, column: 9, scope: !26210)
!26212 = !DILocation(line: 2361, column: 23, scope: !26210)
!26213 = !DILocation(line: 2362, column: 19, scope: !26210)
!26214 = !DILocation(line: 2362, column: 24, scope: !26210)
!26215 = !DILocation(line: 2362, column: 30, scope: !26210)
!26216 = !DILocation(line: 2362, column: 4, scope: !26210)
!26217 = !DILocation(line: 2364, column: 2, scope: !25798)
!26218 = distinct !{!26218, !25928, !26219}
!26219 = !DILocation(line: 2364, column: 2, scope: !25800)
!26220 = !DILocation(line: 2366, column: 7, scope: !25793)
!26221 = !DILocation(line: 2366, column: 6, scope: !25782)
!26222 = !DILocation(line: 2367, column: 3, scope: !25792)
!26223 = !DILocation(line: 2367, column: 3, scope: !25791)
!26224 = !DILocalVariable(name: "__dummy", scope: !26225, file: !3, line: 2367, type: !394)
!26225 = distinct !DILexicalBlock(scope: !25790, file: !3, line: 2367, column: 3)
!26226 = !DILocation(line: 2367, column: 3, scope: !26225)
!26227 = !DILocalVariable(name: "__dummy2", scope: !26225, file: !3, line: 2367, type: !394)
!26228 = !DILocation(line: 2367, column: 3, scope: !25790)
!26229 = !DILocation(line: 2367, column: 3, scope: !25789)
!26230 = !DILocation(line: 2367, column: 3, scope: !26231)
!26231 = distinct !DILexicalBlock(scope: !25789, file: !3, line: 2367, column: 3)
!26232 = !DILocalVariable(name: "__dummy", scope: !26233, file: !3, line: 2367, type: !394)
!26233 = distinct !DILexicalBlock(scope: !26234, file: !3, line: 2367, column: 3)
!26234 = distinct !DILexicalBlock(scope: !26231, file: !3, line: 2367, column: 3)
!26235 = !DILocation(line: 2367, column: 3, scope: !26233)
!26236 = !DILocalVariable(name: "__dummy2", scope: !26233, file: !3, line: 2367, type: !394)
!26237 = !DILocation(line: 2367, column: 3, scope: !26234)
!26238 = !DILocation(line: 2367, column: 3, scope: !25788)
!26239 = !{i32 -2137062023}
!26240 = !DILocation(line: 2367, column: 3, scope: !25787)
!26241 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !25786)
!26242 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !25786)
!26243 = !DILocation(line: 2368, column: 32, scope: !25792)
!26244 = !DILocation(line: 2368, column: 36, scope: !25792)
!26245 = !DILocation(line: 2368, column: 3, scope: !25792)
!26246 = !DILocation(line: 2369, column: 27, scope: !25792)
!26247 = !DILocation(line: 2369, column: 31, scope: !25792)
!26248 = !DILocation(line: 2369, column: 40, scope: !25792)
!26249 = !DILocation(line: 409, column: 2, scope: !15498, inlinedAt: !25813)
!26250 = !DILocation(line: 409, column: 2, scope: !15503, inlinedAt: !25813)
!26251 = !DILocation(line: 409, column: 2, scope: !15504, inlinedAt: !25813)
!26252 = !DILocation(line: 409, column: 2, scope: !15511, inlinedAt: !25813)
!26253 = !DILocation(line: 409, column: 2, scope: !15514, inlinedAt: !25813)
!26254 = !DILocation(line: 2370, column: 2, scope: !25792)
!26255 = !DILocation(line: 2366, column: 27, scope: !25793)
!26256 = !DILabel(scope: !25782, name: "out1", file: !3, line: 2372)
!26257 = !DILocation(line: 2372, column: 1, scope: !25782)
!26258 = !DILocation(line: 2373, column: 9, scope: !25782)
!26259 = !DILocation(line: 2373, column: 2, scope: !25782)
!26260 = distinct !DISubprogram(name: "rtl_get_free_rx", scope: !3, file: !3, line: 2197, type: !23900, scopeLine: 2198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26261 = !DILocation(line: 23, column: 61, scope: !15912, inlinedAt: !26262)
!26262 = distinct !DILocation(line: 28, column: 9, scope: !15920, inlinedAt: !26263)
!26263 = distinct !DILocation(line: 2221, column: 19, scope: !26264)
!26264 = distinct !DILexicalBlock(scope: !26260, file: !3, line: 2221, column: 6)
!26265 = !DILocation(line: 69, column: 73, scope: !14190, inlinedAt: !26266)
!26266 = distinct !DILocation(line: 27, column: 2, scope: !15920, inlinedAt: !26263)
!26267 = !DILocation(line: 69, column: 83, scope: !14190, inlinedAt: !26266)
!26268 = !DILocation(line: 25, column: 29, scope: !15920, inlinedAt: !26263)
!26269 = !DILocation(line: 407, column: 64, scope: !15429, inlinedAt: !26270)
!26270 = distinct !DILocation(line: 2219, column: 2, scope: !26260)
!26271 = !DILocation(line: 407, column: 84, scope: !15429, inlinedAt: !26270)
!26272 = !DILocation(line: 327, column: 67, scope: !15438, inlinedAt: !26273)
!26273 = distinct !DILocation(line: 2202, column: 2, scope: !26274)
!26274 = distinct !DILexicalBlock(scope: !26275, file: !3, line: 2202, column: 2)
!26275 = distinct !DILexicalBlock(scope: !26276, file: !3, line: 2202, column: 2)
!26276 = distinct !DILexicalBlock(scope: !26277, file: !3, line: 2202, column: 2)
!26277 = distinct !DILexicalBlock(scope: !26278, file: !3, line: 2202, column: 2)
!26278 = distinct !DILexicalBlock(scope: !26260, file: !3, line: 2202, column: 2)
!26279 = !DILocalVariable(name: "tp", arg: 1, scope: !26260, file: !3, line: 2197, type: !10280)
!26280 = !DILocation(line: 2197, column: 53, scope: !26260)
!26281 = !DILocalVariable(name: "mflags", arg: 2, scope: !26260, file: !3, line: 2197, type: !2067)
!26282 = !DILocation(line: 2197, column: 63, scope: !26260)
!26283 = !DILocalVariable(name: "agg", scope: !26260, file: !3, line: 2199, type: !10212)
!26284 = !DILocation(line: 2199, column: 17, scope: !26260)
!26285 = !DILocalVariable(name: "agg_next", scope: !26260, file: !3, line: 2199, type: !10212)
!26286 = !DILocation(line: 2199, column: 23, scope: !26260)
!26287 = !DILocalVariable(name: "agg_free", scope: !26260, file: !3, line: 2199, type: !10212)
!26288 = !DILocation(line: 2199, column: 34, scope: !26260)
!26289 = !DILocalVariable(name: "flags", scope: !26260, file: !3, line: 2200, type: !394)
!26290 = !DILocation(line: 2200, column: 16, scope: !26260)
!26291 = !DILocation(line: 2202, column: 2, scope: !26260)
!26292 = !DILocation(line: 2202, column: 2, scope: !26278)
!26293 = !DILocalVariable(name: "__dummy", scope: !26294, file: !3, line: 2202, type: !394)
!26294 = distinct !DILexicalBlock(scope: !26277, file: !3, line: 2202, column: 2)
!26295 = !DILocation(line: 2202, column: 2, scope: !26294)
!26296 = !DILocalVariable(name: "__dummy2", scope: !26294, file: !3, line: 2202, type: !394)
!26297 = !DILocation(line: 2202, column: 2, scope: !26277)
!26298 = !DILocation(line: 2202, column: 2, scope: !26276)
!26299 = !DILocation(line: 2202, column: 2, scope: !26300)
!26300 = distinct !DILexicalBlock(scope: !26276, file: !3, line: 2202, column: 2)
!26301 = !DILocalVariable(name: "__dummy", scope: !26302, file: !3, line: 2202, type: !394)
!26302 = distinct !DILexicalBlock(scope: !26303, file: !3, line: 2202, column: 2)
!26303 = distinct !DILexicalBlock(scope: !26300, file: !3, line: 2202, column: 2)
!26304 = !DILocation(line: 2202, column: 2, scope: !26302)
!26305 = !DILocalVariable(name: "__dummy2", scope: !26302, file: !3, line: 2202, type: !394)
!26306 = !DILocation(line: 2202, column: 2, scope: !26303)
!26307 = !DILocation(line: 2202, column: 2, scope: !26275)
!26308 = !{i32 -2137074823}
!26309 = !DILocation(line: 2202, column: 2, scope: !26274)
!26310 = !DILocation(line: 329, column: 10, scope: !15438, inlinedAt: !26273)
!26311 = !DILocation(line: 329, column: 16, scope: !15438, inlinedAt: !26273)
!26312 = !DILocalVariable(name: "__mptr", scope: !26313, file: !3, line: 2204, type: !647)
!26313 = distinct !DILexicalBlock(scope: !26314, file: !3, line: 2204, column: 2)
!26314 = distinct !DILexicalBlock(scope: !26260, file: !3, line: 2204, column: 2)
!26315 = !DILocation(line: 2204, column: 2, scope: !26313)
!26316 = !DILocation(line: 2204, column: 2, scope: !26317)
!26317 = distinct !DILexicalBlock(scope: !26313, file: !3, line: 2204, column: 2)
!26318 = !DILocation(line: 2204, column: 2, scope: !26314)
!26319 = !DILocalVariable(name: "__mptr", scope: !26320, file: !3, line: 2204, type: !647)
!26320 = distinct !DILexicalBlock(scope: !26314, file: !3, line: 2204, column: 2)
!26321 = !DILocation(line: 2204, column: 2, scope: !26320)
!26322 = !DILocation(line: 2204, column: 2, scope: !26323)
!26323 = distinct !DILexicalBlock(scope: !26320, file: !3, line: 2204, column: 2)
!26324 = !DILocation(line: 2204, column: 2, scope: !26325)
!26325 = distinct !DILexicalBlock(scope: !26314, file: !3, line: 2204, column: 2)
!26326 = !DILocation(line: 2205, column: 18, scope: !26327)
!26327 = distinct !DILexicalBlock(scope: !26328, file: !3, line: 2205, column: 7)
!26328 = distinct !DILexicalBlock(scope: !26325, file: !3, line: 2204, column: 62)
!26329 = !DILocation(line: 2205, column: 23, scope: !26327)
!26330 = !DILocation(line: 2205, column: 7, scope: !26327)
!26331 = !DILocation(line: 2205, column: 29, scope: !26327)
!26332 = !DILocation(line: 2205, column: 7, scope: !26328)
!26333 = !DILocation(line: 2206, column: 9, scope: !26334)
!26334 = distinct !DILexicalBlock(scope: !26335, file: !3, line: 2206, column: 8)
!26335 = distinct !DILexicalBlock(scope: !26327, file: !3, line: 2205, column: 35)
!26336 = !DILocation(line: 2206, column: 8, scope: !26335)
!26337 = !DILocation(line: 2207, column: 20, scope: !26338)
!26338 = distinct !DILexicalBlock(scope: !26334, file: !3, line: 2206, column: 19)
!26339 = !DILocation(line: 2207, column: 25, scope: !26338)
!26340 = !DILocation(line: 2207, column: 5, scope: !26338)
!26341 = !DILocation(line: 2208, column: 16, scope: !26338)
!26342 = !DILocation(line: 2208, column: 14, scope: !26338)
!26343 = !DILocation(line: 2209, column: 5, scope: !26338)
!26344 = !DILocation(line: 2211, column: 24, scope: !26345)
!26345 = distinct !DILexicalBlock(scope: !26335, file: !3, line: 2211, column: 8)
!26346 = !DILocation(line: 2211, column: 8, scope: !26345)
!26347 = !DILocation(line: 2211, column: 8, scope: !26335)
!26348 = !DILocation(line: 2212, column: 20, scope: !26349)
!26349 = distinct !DILexicalBlock(scope: !26345, file: !3, line: 2211, column: 29)
!26350 = !DILocation(line: 2212, column: 25, scope: !26349)
!26351 = !DILocation(line: 2212, column: 5, scope: !26349)
!26352 = !DILocation(line: 2213, column: 17, scope: !26349)
!26353 = !DILocation(line: 2213, column: 21, scope: !26349)
!26354 = !DILocation(line: 2213, column: 5, scope: !26349)
!26355 = !DILocation(line: 2214, column: 4, scope: !26349)
!26356 = !DILocation(line: 2215, column: 4, scope: !26335)
!26357 = !DILocation(line: 2217, column: 2, scope: !26328)
!26358 = !DILocalVariable(name: "__mptr", scope: !26359, file: !3, line: 2204, type: !647)
!26359 = distinct !DILexicalBlock(scope: !26325, file: !3, line: 2204, column: 2)
!26360 = !DILocation(line: 2204, column: 2, scope: !26359)
!26361 = !DILocation(line: 2204, column: 2, scope: !26362)
!26362 = distinct !DILexicalBlock(scope: !26359, file: !3, line: 2204, column: 2)
!26363 = distinct !{!26363, !26318, !26364}
!26364 = !DILocation(line: 2217, column: 2, scope: !26314)
!26365 = !DILocation(line: 2219, column: 26, scope: !26260)
!26366 = !DILocation(line: 2219, column: 30, scope: !26260)
!26367 = !DILocation(line: 2219, column: 39, scope: !26260)
!26368 = !DILocation(line: 409, column: 2, scope: !15498, inlinedAt: !26270)
!26369 = !DILocation(line: 409, column: 2, scope: !15503, inlinedAt: !26270)
!26370 = !DILocation(line: 409, column: 2, scope: !15504, inlinedAt: !26270)
!26371 = !DILocation(line: 409, column: 2, scope: !15511, inlinedAt: !26270)
!26372 = !DILocation(line: 409, column: 2, scope: !15514, inlinedAt: !26270)
!26373 = !DILocation(line: 2221, column: 7, scope: !26264)
!26374 = !DILocation(line: 2221, column: 16, scope: !26264)
!26375 = !DILocation(line: 2221, column: 32, scope: !26264)
!26376 = !DILocation(line: 2221, column: 36, scope: !26264)
!26377 = !DILocation(line: 27, column: 25, scope: !15920, inlinedAt: !26263)
!26378 = !DILocation(line: 71, column: 19, scope: !14190, inlinedAt: !26266)
!26379 = !DILocation(line: 71, column: 22, scope: !14190, inlinedAt: !26266)
!26380 = !DILocation(line: 71, column: 2, scope: !14190, inlinedAt: !26266)
!26381 = !DILocation(line: 72, column: 2, scope: !14190, inlinedAt: !26266)
!26382 = !DILocation(line: 28, column: 26, scope: !15920, inlinedAt: !26263)
!26383 = !DILocation(line: 29, column: 9, scope: !15912, inlinedAt: !26262)
!26384 = !DILocation(line: 2221, column: 48, scope: !26264)
!26385 = !DILocation(line: 2221, column: 52, scope: !26264)
!26386 = !DILocation(line: 2221, column: 46, scope: !26264)
!26387 = !DILocation(line: 2221, column: 6, scope: !26260)
!26388 = !DILocation(line: 2222, column: 27, scope: !26264)
!26389 = !DILocation(line: 2222, column: 31, scope: !26264)
!26390 = !DILocation(line: 2222, column: 14, scope: !26264)
!26391 = !DILocation(line: 2222, column: 12, scope: !26264)
!26392 = !DILocation(line: 2222, column: 3, scope: !26264)
!26393 = !DILocation(line: 2224, column: 9, scope: !26260)
!26394 = !DILocation(line: 2224, column: 2, scope: !26260)
!26395 = distinct !DISubprogram(name: "napi_alloc_skb", scope: !499, file: !499, line: 2867, type: !26396, scopeLine: 2869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26396 = !DISubroutineType(types: !26397)
!26397 = !{!497, !10297, !7}
!26398 = !DILocalVariable(name: "napi", arg: 1, scope: !26395, file: !499, line: 2867, type: !10297)
!26399 = !DILocation(line: 2867, column: 66, scope: !26395)
!26400 = !DILocalVariable(name: "length", arg: 2, scope: !26395, file: !499, line: 2868, type: !7)
!26401 = !DILocation(line: 2868, column: 24, scope: !26395)
!26402 = !DILocation(line: 2870, column: 26, scope: !26395)
!26403 = !DILocation(line: 2870, column: 32, scope: !26395)
!26404 = !DILocation(line: 2870, column: 9, scope: !26395)
!26405 = !DILocation(line: 2870, column: 2, scope: !26395)
!26406 = distinct !DISubprogram(name: "r8152_rx_csum", scope: !3, file: !3, line: 2158, type: !26407, scopeLine: 2159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26407 = !DISubroutineType(types: !26408)
!26408 = !{!1474, !10280, !10805}
!26409 = !DILocalVariable(name: "tp", arg: 1, scope: !26406, file: !3, line: 2158, type: !10280)
!26410 = !DILocation(line: 2158, column: 39, scope: !26406)
!26411 = !DILocalVariable(name: "rx_desc", arg: 2, scope: !26406, file: !3, line: 2158, type: !10805)
!26412 = !DILocation(line: 2158, column: 59, scope: !26406)
!26413 = !DILocalVariable(name: "checksum", scope: !26406, file: !3, line: 2160, type: !1474)
!26414 = !DILocation(line: 2160, column: 5, scope: !26406)
!26415 = !DILocalVariable(name: "opts2", scope: !26406, file: !3, line: 2161, type: !784)
!26416 = !DILocation(line: 2161, column: 6, scope: !26406)
!26417 = !DILocalVariable(name: "opts3", scope: !26406, file: !3, line: 2161, type: !784)
!26418 = !DILocation(line: 2161, column: 13, scope: !26406)
!26419 = !DILocation(line: 2163, column: 8, scope: !26420)
!26420 = distinct !DILexicalBlock(scope: !26406, file: !3, line: 2163, column: 6)
!26421 = !DILocation(line: 2163, column: 12, scope: !26420)
!26422 = !DILocation(line: 2163, column: 20, scope: !26420)
!26423 = !DILocation(line: 2163, column: 29, scope: !26420)
!26424 = !DILocation(line: 2163, column: 6, scope: !26406)
!26425 = !DILocation(line: 2164, column: 3, scope: !26420)
!26426 = !DILocation(line: 2166, column: 10, scope: !26406)
!26427 = !DILocation(line: 2166, column: 8, scope: !26406)
!26428 = !DILocation(line: 2167, column: 10, scope: !26406)
!26429 = !DILocation(line: 2167, column: 8, scope: !26406)
!26430 = !DILocation(line: 2169, column: 6, scope: !26431)
!26431 = distinct !DILexicalBlock(scope: !26406, file: !3, line: 2169, column: 6)
!26432 = !DILocation(line: 2169, column: 12, scope: !26431)
!26433 = !DILocation(line: 2169, column: 6, scope: !26406)
!26434 = !DILocation(line: 2170, column: 7, scope: !26435)
!26435 = distinct !DILexicalBlock(scope: !26436, file: !3, line: 2170, column: 7)
!26436 = distinct !DILexicalBlock(scope: !26431, file: !3, line: 2169, column: 26)
!26437 = !DILocation(line: 2170, column: 13, scope: !26435)
!26438 = !DILocation(line: 2170, column: 7, scope: !26436)
!26439 = !DILocation(line: 2171, column: 13, scope: !26435)
!26440 = !DILocation(line: 2171, column: 4, scope: !26435)
!26441 = !DILocation(line: 2172, column: 13, scope: !26442)
!26442 = distinct !DILexicalBlock(scope: !26435, file: !3, line: 2172, column: 12)
!26443 = !DILocation(line: 2172, column: 19, scope: !26442)
!26444 = !DILocation(line: 2172, column: 32, scope: !26442)
!26445 = !DILocation(line: 2172, column: 37, scope: !26442)
!26446 = !DILocation(line: 2172, column: 43, scope: !26442)
!26447 = !DILocation(line: 2172, column: 12, scope: !26435)
!26448 = !DILocation(line: 2173, column: 13, scope: !26442)
!26449 = !DILocation(line: 2173, column: 4, scope: !26442)
!26450 = !DILocation(line: 2174, column: 13, scope: !26451)
!26451 = distinct !DILexicalBlock(scope: !26442, file: !3, line: 2174, column: 12)
!26452 = !DILocation(line: 2174, column: 19, scope: !26451)
!26453 = !DILocation(line: 2174, column: 32, scope: !26451)
!26454 = !DILocation(line: 2174, column: 37, scope: !26451)
!26455 = !DILocation(line: 2174, column: 43, scope: !26451)
!26456 = !DILocation(line: 2174, column: 12, scope: !26442)
!26457 = !DILocation(line: 2175, column: 13, scope: !26451)
!26458 = !DILocation(line: 2175, column: 4, scope: !26451)
!26459 = !DILocation(line: 2176, column: 2, scope: !26436)
!26460 = !DILocation(line: 2176, column: 13, scope: !26461)
!26461 = distinct !DILexicalBlock(scope: !26431, file: !3, line: 2176, column: 13)
!26462 = !DILocation(line: 2176, column: 19, scope: !26461)
!26463 = !DILocation(line: 2176, column: 13, scope: !26431)
!26464 = !DILocation(line: 2177, column: 8, scope: !26465)
!26465 = distinct !DILexicalBlock(scope: !26466, file: !3, line: 2177, column: 7)
!26466 = distinct !DILexicalBlock(scope: !26461, file: !3, line: 2176, column: 33)
!26467 = !DILocation(line: 2177, column: 14, scope: !26465)
!26468 = !DILocation(line: 2177, column: 27, scope: !26465)
!26469 = !DILocation(line: 2177, column: 32, scope: !26465)
!26470 = !DILocation(line: 2177, column: 38, scope: !26465)
!26471 = !DILocation(line: 2177, column: 7, scope: !26466)
!26472 = !DILocation(line: 2178, column: 13, scope: !26465)
!26473 = !DILocation(line: 2178, column: 4, scope: !26465)
!26474 = !DILocation(line: 2179, column: 13, scope: !26475)
!26475 = distinct !DILexicalBlock(scope: !26465, file: !3, line: 2179, column: 12)
!26476 = !DILocation(line: 2179, column: 19, scope: !26475)
!26477 = !DILocation(line: 2179, column: 32, scope: !26475)
!26478 = !DILocation(line: 2179, column: 37, scope: !26475)
!26479 = !DILocation(line: 2179, column: 43, scope: !26475)
!26480 = !DILocation(line: 2179, column: 12, scope: !26465)
!26481 = !DILocation(line: 2180, column: 13, scope: !26475)
!26482 = !DILocation(line: 2180, column: 4, scope: !26475)
!26483 = !DILocation(line: 2181, column: 2, scope: !26466)
!26484 = !DILocation(line: 2169, column: 14, scope: !26431)
!26485 = !DILabel(scope: !26406, name: "return_result", file: !3, line: 2183)
!26486 = !DILocation(line: 2183, column: 1, scope: !26406)
!26487 = !DILocation(line: 2184, column: 9, scope: !26406)
!26488 = !DILocation(line: 2184, column: 2, scope: !26406)
!26489 = distinct !DISubprogram(name: "agg_offset", scope: !3, file: !3, line: 2192, type: !26490, scopeLine: 2193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26490 = !DISubroutineType(types: !26491)
!26491 = !{!72, !10212, !647}
!26492 = !DILocalVariable(name: "agg", arg: 1, scope: !26489, file: !3, line: 2192, type: !10212)
!26493 = !DILocation(line: 2192, column: 45, scope: !26489)
!26494 = !DILocalVariable(name: "addr", arg: 2, scope: !26489, file: !3, line: 2192, type: !647)
!26495 = !DILocation(line: 2192, column: 56, scope: !26489)
!26496 = !DILocation(line: 2194, column: 15, scope: !26489)
!26497 = !DILocation(line: 2194, column: 22, scope: !26489)
!26498 = !DILocation(line: 2194, column: 27, scope: !26489)
!26499 = !DILocation(line: 2194, column: 20, scope: !26489)
!26500 = !DILocation(line: 2194, column: 9, scope: !26489)
!26501 = !DILocation(line: 2194, column: 2, scope: !26489)
!26502 = distinct !DISubprogram(name: "get_page", scope: !227, file: !227, line: 1156, type: !6859, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26503 = !DILocalVariable(name: "page", arg: 1, scope: !26502, file: !227, line: 1156, type: !701)
!26504 = !DILocation(line: 1156, column: 42, scope: !26502)
!26505 = !DILocation(line: 1158, column: 23, scope: !26502)
!26506 = !DILocation(line: 1158, column: 9, scope: !26502)
!26507 = !DILocation(line: 1158, column: 7, scope: !26502)
!26508 = !DILocation(line: 1164, column: 15, scope: !26502)
!26509 = !DILocation(line: 1164, column: 2, scope: !26502)
!26510 = !DILocation(line: 1165, column: 1, scope: !26502)
!26511 = distinct !DISubprogram(name: "rtl_rx_vlan_tag", scope: !3, file: !3, line: 1965, type: !26512, scopeLine: 1966, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26512 = !DISubroutineType(types: !26513)
!26513 = !{null, !10805, !497}
!26514 = !DILocalVariable(name: "desc", arg: 1, scope: !26511, file: !3, line: 1965, type: !10805)
!26515 = !DILocation(line: 1965, column: 52, scope: !26511)
!26516 = !DILocalVariable(name: "skb", arg: 2, scope: !26511, file: !3, line: 1965, type: !497)
!26517 = !DILocation(line: 1965, column: 74, scope: !26511)
!26518 = !DILocalVariable(name: "opts2", scope: !26511, file: !3, line: 1967, type: !784)
!26519 = !DILocation(line: 1967, column: 6, scope: !26511)
!26520 = !DILocation(line: 1967, column: 14, scope: !26511)
!26521 = !DILocation(line: 1969, column: 6, scope: !26522)
!26522 = distinct !DILexicalBlock(scope: !26511, file: !3, line: 1969, column: 6)
!26523 = !DILocation(line: 1969, column: 12, scope: !26522)
!26524 = !DILocation(line: 1969, column: 6, scope: !26511)
!26525 = !DILocation(line: 1970, column: 26, scope: !26522)
!26526 = !DILocation(line: 1971, column: 12, scope: !26522)
!26527 = !DILocation(line: 1970, column: 3, scope: !26522)
!26528 = !DILocation(line: 1972, column: 1, scope: !26511)
!26529 = distinct !DISubprogram(name: "rx_agg_align", scope: !3, file: !3, line: 1725, type: !21169, scopeLine: 1726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26530 = !DILocalVariable(name: "data", arg: 1, scope: !26529, file: !3, line: 1725, type: !647)
!26531 = !DILocation(line: 1725, column: 40, scope: !26529)
!26532 = !DILocation(line: 1727, column: 17, scope: !26529)
!26533 = !DILocation(line: 1727, column: 9, scope: !26529)
!26534 = !DILocation(line: 1727, column: 2, scope: !26529)
!26535 = distinct !DISubprogram(name: "list_add", scope: !12142, file: !12142, line: 84, type: !15889, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26536 = !DILocalVariable(name: "new", arg: 1, scope: !26535, file: !12142, line: 84, type: !369)
!26537 = !DILocation(line: 84, column: 47, scope: !26535)
!26538 = !DILocalVariable(name: "head", arg: 2, scope: !26535, file: !12142, line: 84, type: !369)
!26539 = !DILocation(line: 84, column: 70, scope: !26535)
!26540 = !DILocation(line: 86, column: 13, scope: !26535)
!26541 = !DILocation(line: 86, column: 18, scope: !26535)
!26542 = !DILocation(line: 86, column: 24, scope: !26535)
!26543 = !DILocation(line: 86, column: 30, scope: !26535)
!26544 = !DILocation(line: 86, column: 2, scope: !26535)
!26545 = !DILocation(line: 87, column: 1, scope: !26535)
!26546 = distinct !DISubprogram(name: "list_splice_tail", scope: !12142, file: !12142, line: 464, type: !15889, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26547 = !DILocalVariable(name: "list", arg: 1, scope: !26546, file: !12142, line: 464, type: !369)
!26548 = !DILocation(line: 464, column: 55, scope: !26546)
!26549 = !DILocalVariable(name: "head", arg: 2, scope: !26546, file: !12142, line: 465, type: !369)
!26550 = !DILocation(line: 465, column: 23, scope: !26546)
!26551 = !DILocation(line: 467, column: 18, scope: !26552)
!26552 = distinct !DILexicalBlock(scope: !26546, file: !12142, line: 467, column: 6)
!26553 = !DILocation(line: 467, column: 7, scope: !26552)
!26554 = !DILocation(line: 467, column: 6, scope: !26546)
!26555 = !DILocation(line: 468, column: 17, scope: !26552)
!26556 = !DILocation(line: 468, column: 23, scope: !26552)
!26557 = !DILocation(line: 468, column: 29, scope: !26552)
!26558 = !DILocation(line: 468, column: 35, scope: !26552)
!26559 = !DILocation(line: 468, column: 3, scope: !26552)
!26560 = !DILocation(line: 469, column: 1, scope: !26546)
!26561 = distinct !DISubprogram(name: "rx_count_exceed", scope: !3, file: !3, line: 2187, type: !10397, scopeLine: 2188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26562 = !DILocation(line: 23, column: 61, scope: !15912, inlinedAt: !26563)
!26563 = distinct !DILocation(line: 28, column: 9, scope: !15920, inlinedAt: !26564)
!26564 = distinct !DILocation(line: 2189, column: 9, scope: !26561)
!26565 = !DILocation(line: 69, column: 73, scope: !14190, inlinedAt: !26566)
!26566 = distinct !DILocation(line: 27, column: 2, scope: !15920, inlinedAt: !26564)
!26567 = !DILocation(line: 69, column: 83, scope: !14190, inlinedAt: !26566)
!26568 = !DILocation(line: 25, column: 29, scope: !15920, inlinedAt: !26564)
!26569 = !DILocalVariable(name: "tp", arg: 1, scope: !26561, file: !3, line: 2187, type: !10280)
!26570 = !DILocation(line: 2187, column: 50, scope: !26561)
!26571 = !DILocation(line: 2189, column: 22, scope: !26561)
!26572 = !DILocation(line: 2189, column: 26, scope: !26561)
!26573 = !DILocation(line: 27, column: 25, scope: !15920, inlinedAt: !26564)
!26574 = !DILocation(line: 71, column: 19, scope: !14190, inlinedAt: !26566)
!26575 = !DILocation(line: 71, column: 22, scope: !14190, inlinedAt: !26566)
!26576 = !DILocation(line: 71, column: 2, scope: !14190, inlinedAt: !26566)
!26577 = !DILocation(line: 72, column: 2, scope: !14190, inlinedAt: !26566)
!26578 = !DILocation(line: 28, column: 26, scope: !15920, inlinedAt: !26564)
!26579 = !DILocation(line: 29, column: 9, scope: !15912, inlinedAt: !26563)
!26580 = !DILocation(line: 2189, column: 36, scope: !26561)
!26581 = !DILocation(line: 2189, column: 2, scope: !26561)
!26582 = distinct !DISubprogram(name: "page_ref_inc", scope: !15910, file: !15910, line: 114, type: !6859, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26583 = !DILocation(line: 93, column: 55, scope: !22251, inlinedAt: !26584)
!26584 = distinct !DILocation(line: 241, column: 2, scope: !22254, inlinedAt: !26585)
!26585 = distinct !DILocation(line: 116, column: 2, scope: !26582)
!26586 = !DILocation(line: 99, column: 79, scope: !15954, inlinedAt: !26587)
!26587 = distinct !DILocation(line: 240, column: 2, scope: !22254, inlinedAt: !26585)
!26588 = !DILocation(line: 99, column: 89, scope: !15954, inlinedAt: !26587)
!26589 = !DILocation(line: 238, column: 22, scope: !22254, inlinedAt: !26585)
!26590 = !DILocalVariable(name: "page", arg: 1, scope: !26582, file: !15910, line: 114, type: !701)
!26591 = !DILocation(line: 114, column: 46, scope: !26582)
!26592 = !DILocation(line: 116, column: 14, scope: !26582)
!26593 = !DILocation(line: 116, column: 20, scope: !26582)
!26594 = !DILocation(line: 240, column: 31, scope: !22254, inlinedAt: !26585)
!26595 = !DILocation(line: 101, column: 20, scope: !15954, inlinedAt: !26587)
!26596 = !DILocation(line: 101, column: 23, scope: !15954, inlinedAt: !26587)
!26597 = !DILocation(line: 101, column: 2, scope: !15954, inlinedAt: !26587)
!26598 = !DILocation(line: 102, column: 2, scope: !15954, inlinedAt: !26587)
!26599 = !DILocation(line: 241, column: 18, scope: !22254, inlinedAt: !26585)
!26600 = !DILocation(line: 96, column: 16, scope: !22251, inlinedAt: !26584)
!26601 = !DILocation(line: 96, column: 19, scope: !22251, inlinedAt: !26584)
!26602 = !DILocation(line: 95, column: 2, scope: !22251, inlinedAt: !26584)
!26603 = !DILocation(line: 119, column: 1, scope: !26582)
!26604 = distinct !DISubprogram(name: "__vlan_hwaccel_put_tag", scope: !21813, file: !21813, line: 512, type: !26605, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26605 = !DISubroutineType(types: !26606)
!26606 = !{null, !497, !566, !1115}
!26607 = !DILocalVariable(name: "skb", arg: 1, scope: !26604, file: !21813, line: 512, type: !497)
!26608 = !DILocation(line: 512, column: 59, scope: !26604)
!26609 = !DILocalVariable(name: "vlan_proto", arg: 2, scope: !26604, file: !21813, line: 513, type: !566)
!26610 = !DILocation(line: 513, column: 15, scope: !26604)
!26611 = !DILocalVariable(name: "vlan_tci", arg: 3, scope: !26604, file: !21813, line: 513, type: !1115)
!26612 = !DILocation(line: 513, column: 31, scope: !26604)
!26613 = !DILocation(line: 515, column: 20, scope: !26604)
!26614 = !DILocation(line: 515, column: 2, scope: !26604)
!26615 = !DILocation(line: 515, column: 7, scope: !26604)
!26616 = !DILocation(line: 515, column: 18, scope: !26604)
!26617 = !DILocation(line: 516, column: 18, scope: !26604)
!26618 = !DILocation(line: 516, column: 2, scope: !26604)
!26619 = !DILocation(line: 516, column: 7, scope: !26604)
!26620 = !DILocation(line: 516, column: 16, scope: !26604)
!26621 = !DILocation(line: 517, column: 2, scope: !26604)
!26622 = !DILocation(line: 517, column: 7, scope: !26604)
!26623 = !DILocation(line: 517, column: 20, scope: !26604)
!26624 = !DILocation(line: 518, column: 1, scope: !26604)
!26625 = distinct !DISubprogram(name: "usb_get_intfdata", scope: !9505, file: !9505, line: 263, type: !26626, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26626 = !DISubroutineType(types: !26627)
!26627 = !{!647, !10100}
!26628 = !DILocalVariable(name: "intf", arg: 1, scope: !26625, file: !9505, line: 263, type: !10100)
!26629 = !DILocation(line: 263, column: 60, scope: !26625)
!26630 = !DILocation(line: 265, column: 26, scope: !26625)
!26631 = !DILocation(line: 265, column: 32, scope: !26625)
!26632 = !DILocation(line: 265, column: 9, scope: !26625)
!26633 = !DILocation(line: 265, column: 2, scope: !26625)
!26634 = distinct !DISubprogram(name: "rtl8152_release_firmware", scope: !3, file: !3, line: 4083, type: !10380, scopeLine: 4084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26635 = !DILocalVariable(name: "tp", arg: 1, scope: !26634, file: !3, line: 4083, type: !10280)
!26636 = !DILocation(line: 4083, column: 52, scope: !26634)
!26637 = !DILocalVariable(name: "rtl_fw", scope: !26634, file: !3, line: 4085, type: !12086)
!26638 = !DILocation(line: 4085, column: 17, scope: !26634)
!26639 = !DILocation(line: 4085, column: 27, scope: !26634)
!26640 = !DILocation(line: 4085, column: 31, scope: !26634)
!26641 = !DILocation(line: 4087, column: 22, scope: !26642)
!26642 = distinct !DILexicalBlock(scope: !26634, file: !3, line: 4087, column: 6)
!26643 = !DILocation(line: 4087, column: 30, scope: !26642)
!26644 = !DILocation(line: 4087, column: 7, scope: !26642)
!26645 = !DILocation(line: 4087, column: 6, scope: !26634)
!26646 = !DILocation(line: 4088, column: 20, scope: !26647)
!26647 = distinct !DILexicalBlock(scope: !26642, file: !3, line: 4087, column: 35)
!26648 = !DILocation(line: 4088, column: 28, scope: !26647)
!26649 = !DILocation(line: 4088, column: 3, scope: !26647)
!26650 = !DILocation(line: 4089, column: 3, scope: !26647)
!26651 = !DILocation(line: 4089, column: 11, scope: !26647)
!26652 = !DILocation(line: 4089, column: 14, scope: !26647)
!26653 = !DILocation(line: 4090, column: 2, scope: !26647)
!26654 = !DILocation(line: 4091, column: 1, scope: !26634)
!26655 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !25, file: !25, line: 655, type: !26656, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26656 = !DISubroutineType(types: !26657)
!26657 = !{!647, !4622}
!26658 = !DILocalVariable(name: "dev", arg: 1, scope: !26655, file: !25, line: 655, type: !4622)
!26659 = !DILocation(line: 655, column: 58, scope: !26655)
!26660 = !DILocation(line: 657, column: 9, scope: !26655)
!26661 = !DILocation(line: 657, column: 14, scope: !26655)
!26662 = !DILocation(line: 657, column: 2, scope: !26655)
!26663 = distinct !DISubprogram(name: "rtl8152_runtime_suspend", scope: !3, file: !3, line: 5745, type: !10384, scopeLine: 5746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26664 = !DILocalVariable(name: "tp", arg: 1, scope: !26663, file: !3, line: 5745, type: !10280)
!26665 = !DILocation(line: 5745, column: 50, scope: !26663)
!26666 = !DILocalVariable(name: "netdev", scope: !26663, file: !3, line: 5747, type: !372)
!26667 = !DILocation(line: 5747, column: 21, scope: !26663)
!26668 = !DILocation(line: 5747, column: 30, scope: !26663)
!26669 = !DILocation(line: 5747, column: 34, scope: !26663)
!26670 = !DILocalVariable(name: "ret", scope: !26663, file: !3, line: 5748, type: !72)
!26671 = !DILocation(line: 5748, column: 6, scope: !26663)
!26672 = !DILocation(line: 5750, column: 30, scope: !26663)
!26673 = !DILocation(line: 5750, column: 34, scope: !26663)
!26674 = !DILocation(line: 5750, column: 2, scope: !26663)
!26675 = !DILocation(line: 5751, column: 2, scope: !26663)
!26676 = !{i32 -2136982538}
!26677 = !DILocation(line: 5753, column: 20, scope: !26678)
!26678 = distinct !DILexicalBlock(scope: !26663, file: !3, line: 5753, column: 6)
!26679 = !DILocation(line: 5753, column: 6, scope: !26678)
!26680 = !DILocation(line: 5753, column: 28, scope: !26678)
!26681 = !DILocation(line: 5753, column: 54, scope: !26678)
!26682 = !DILocation(line: 5753, column: 58, scope: !26678)
!26683 = !DILocation(line: 5753, column: 31, scope: !26678)
!26684 = !DILocation(line: 5753, column: 6, scope: !26663)
!26685 = !DILocalVariable(name: "rcr", scope: !26686, file: !3, line: 5754, type: !784)
!26686 = distinct !DILexicalBlock(scope: !26678, file: !3, line: 5753, column: 66)
!26687 = !DILocation(line: 5754, column: 7, scope: !26686)
!26688 = !DILocation(line: 5756, column: 24, scope: !26689)
!26689 = distinct !DILexicalBlock(scope: !26686, file: !3, line: 5756, column: 7)
!26690 = !DILocation(line: 5756, column: 7, scope: !26689)
!26691 = !DILocation(line: 5756, column: 7, scope: !26686)
!26692 = !DILocalVariable(name: "ocp_data", scope: !26693, file: !3, line: 5757, type: !784)
!26693 = distinct !DILexicalBlock(scope: !26689, file: !3, line: 5756, column: 33)
!26694 = !DILocation(line: 5757, column: 8, scope: !26693)
!26695 = !DILocation(line: 5759, column: 25, scope: !26693)
!26696 = !DILocation(line: 5759, column: 10, scope: !26693)
!26697 = !DILocation(line: 5759, column: 8, scope: !26693)
!26698 = !DILocation(line: 5760, column: 15, scope: !26693)
!26699 = !DILocation(line: 5760, column: 19, scope: !26693)
!26700 = !DILocation(line: 5760, column: 13, scope: !26693)
!26701 = !DILocation(line: 5761, column: 20, scope: !26693)
!26702 = !DILocation(line: 5761, column: 47, scope: !26693)
!26703 = !DILocation(line: 5761, column: 4, scope: !26693)
!26704 = !DILocation(line: 5762, column: 18, scope: !26693)
!26705 = !DILocation(line: 5762, column: 4, scope: !26693)
!26706 = !DILocation(line: 5763, column: 29, scope: !26693)
!26707 = !DILocation(line: 5763, column: 15, scope: !26693)
!26708 = !DILocation(line: 5763, column: 13, scope: !26693)
!26709 = !DILocation(line: 5765, column: 10, scope: !26710)
!26710 = distinct !DILexicalBlock(scope: !26693, file: !3, line: 5765, column: 8)
!26711 = !DILocation(line: 5765, column: 19, scope: !26710)
!26712 = !DILocation(line: 5765, column: 8, scope: !26693)
!26713 = !DILocation(line: 5766, column: 19, scope: !26714)
!26714 = distinct !DILexicalBlock(scope: !26710, file: !3, line: 5765, column: 36)
!26715 = !DILocation(line: 5766, column: 5, scope: !26714)
!26716 = !DILocation(line: 5767, column: 21, scope: !26714)
!26717 = !DILocation(line: 5767, column: 48, scope: !26714)
!26718 = !DILocation(line: 5767, column: 5, scope: !26714)
!26719 = !DILocation(line: 5768, column: 35, scope: !26714)
!26720 = !DILocation(line: 5768, column: 39, scope: !26714)
!26721 = !DILocation(line: 5768, column: 5, scope: !26714)
!26722 = !DILocation(line: 5769, column: 5, scope: !26714)
!26723 = !{i32 -2136982347}
!26724 = !DILocation(line: 5770, column: 9, scope: !26714)
!26725 = !DILocation(line: 5771, column: 5, scope: !26714)
!26726 = !DILocation(line: 5773, column: 3, scope: !26693)
!26727 = !DILocation(line: 5775, column: 27, scope: !26686)
!26728 = !DILocation(line: 5775, column: 31, scope: !26686)
!26729 = !DILocation(line: 5775, column: 3, scope: !26686)
!26730 = !DILocation(line: 5776, column: 16, scope: !26686)
!26731 = !DILocation(line: 5776, column: 20, scope: !26686)
!26732 = !DILocation(line: 5776, column: 3, scope: !26686)
!26733 = !DILocation(line: 5778, column: 3, scope: !26686)
!26734 = !DILocation(line: 5778, column: 7, scope: !26686)
!26735 = !DILocation(line: 5778, column: 15, scope: !26686)
!26736 = !DILocation(line: 5778, column: 30, scope: !26686)
!26737 = !DILocation(line: 5780, column: 24, scope: !26738)
!26738 = distinct !DILexicalBlock(scope: !26686, file: !3, line: 5780, column: 7)
!26739 = !DILocation(line: 5780, column: 7, scope: !26738)
!26740 = !DILocation(line: 5780, column: 7, scope: !26686)
!26741 = !DILocalVariable(name: "napi", scope: !26742, file: !3, line: 5781, type: !10297)
!26742 = distinct !DILexicalBlock(scope: !26738, file: !3, line: 5780, column: 33)
!26743 = !DILocation(line: 5781, column: 24, scope: !26742)
!26744 = !DILocation(line: 5781, column: 32, scope: !26742)
!26745 = !DILocation(line: 5781, column: 36, scope: !26742)
!26746 = !DILocation(line: 5783, column: 17, scope: !26742)
!26747 = !DILocation(line: 5783, column: 4, scope: !26742)
!26748 = !DILocation(line: 5784, column: 16, scope: !26742)
!26749 = !DILocation(line: 5784, column: 4, scope: !26742)
!26750 = !DILocation(line: 5785, column: 18, scope: !26742)
!26751 = !DILocation(line: 5785, column: 4, scope: !26742)
!26752 = !DILocation(line: 5786, column: 20, scope: !26742)
!26753 = !DILocation(line: 5786, column: 47, scope: !26742)
!26754 = !DILocation(line: 5786, column: 4, scope: !26742)
!26755 = !DILocation(line: 5787, column: 16, scope: !26742)
!26756 = !DILocation(line: 5787, column: 4, scope: !26742)
!26757 = !DILocation(line: 5788, column: 3, scope: !26742)
!26758 = !DILocation(line: 5790, column: 25, scope: !26759)
!26759 = distinct !DILexicalBlock(scope: !26686, file: !3, line: 5790, column: 7)
!26760 = !DILocation(line: 5790, column: 7, scope: !26759)
!26761 = !DILocation(line: 5790, column: 7, scope: !26686)
!26762 = !DILocation(line: 5791, column: 27, scope: !26763)
!26763 = distinct !DILexicalBlock(scope: !26759, file: !3, line: 5790, column: 30)
!26764 = !DILocation(line: 5791, column: 4, scope: !26763)
!26765 = !DILocation(line: 5792, column: 8, scope: !26763)
!26766 = !DILocation(line: 5793, column: 3, scope: !26763)
!26767 = !DILocation(line: 5794, column: 2, scope: !26686)
!26768 = !DILocation(line: 5753, column: 63, scope: !26678)
!26769 = !DILabel(scope: !26663, name: "out1", file: !3, line: 5796)
!26770 = !DILocation(line: 5796, column: 1, scope: !26663)
!26771 = !DILocation(line: 5797, column: 9, scope: !26663)
!26772 = !DILocation(line: 5797, column: 2, scope: !26663)
!26773 = distinct !DISubprogram(name: "rtl8152_system_suspend", scope: !3, file: !3, line: 5800, type: !10384, scopeLine: 5801, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26774 = !DILocalVariable(name: "tp", arg: 1, scope: !26773, file: !3, line: 5800, type: !10280)
!26775 = !DILocation(line: 5800, column: 49, scope: !26773)
!26776 = !DILocalVariable(name: "netdev", scope: !26773, file: !3, line: 5802, type: !372)
!26777 = !DILocation(line: 5802, column: 21, scope: !26773)
!26778 = !DILocation(line: 5802, column: 30, scope: !26773)
!26779 = !DILocation(line: 5802, column: 34, scope: !26773)
!26780 = !DILocation(line: 5804, column: 22, scope: !26773)
!26781 = !DILocation(line: 5804, column: 2, scope: !26773)
!26782 = !DILocation(line: 5806, column: 20, scope: !26783)
!26783 = distinct !DILexicalBlock(scope: !26773, file: !3, line: 5806, column: 6)
!26784 = !DILocation(line: 5806, column: 6, scope: !26783)
!26785 = !DILocation(line: 5806, column: 28, scope: !26783)
!26786 = !DILocation(line: 5806, column: 54, scope: !26783)
!26787 = !DILocation(line: 5806, column: 58, scope: !26783)
!26788 = !DILocation(line: 5806, column: 31, scope: !26783)
!26789 = !DILocation(line: 5806, column: 6, scope: !26773)
!26790 = !DILocalVariable(name: "napi", scope: !26791, file: !3, line: 5807, type: !10297)
!26791 = distinct !DILexicalBlock(scope: !26783, file: !3, line: 5806, column: 66)
!26792 = !DILocation(line: 5807, column: 23, scope: !26791)
!26793 = !DILocation(line: 5807, column: 31, scope: !26791)
!26794 = !DILocation(line: 5807, column: 35, scope: !26791)
!26795 = !DILocation(line: 5809, column: 27, scope: !26791)
!26796 = !DILocation(line: 5809, column: 31, scope: !26791)
!26797 = !DILocation(line: 5809, column: 3, scope: !26791)
!26798 = !DILocation(line: 5810, column: 16, scope: !26791)
!26799 = !DILocation(line: 5810, column: 20, scope: !26791)
!26800 = !DILocation(line: 5810, column: 3, scope: !26791)
!26801 = !DILocation(line: 5811, column: 20, scope: !26791)
!26802 = !DILocation(line: 5811, column: 24, scope: !26791)
!26803 = !DILocation(line: 5811, column: 3, scope: !26791)
!26804 = !DILocation(line: 5812, column: 16, scope: !26791)
!26805 = !DILocation(line: 5812, column: 3, scope: !26791)
!26806 = !DILocation(line: 5813, column: 29, scope: !26791)
!26807 = !DILocation(line: 5813, column: 33, scope: !26791)
!26808 = !DILocation(line: 5813, column: 3, scope: !26791)
!26809 = !DILocation(line: 5814, column: 3, scope: !26791)
!26810 = !DILocation(line: 5814, column: 7, scope: !26791)
!26811 = !DILocation(line: 5814, column: 15, scope: !26791)
!26812 = !DILocation(line: 5814, column: 20, scope: !26791)
!26813 = !DILocation(line: 5815, column: 15, scope: !26791)
!26814 = !DILocation(line: 5815, column: 3, scope: !26791)
!26815 = !DILocation(line: 5816, column: 19, scope: !26791)
!26816 = !DILocation(line: 5816, column: 23, scope: !26791)
!26817 = !DILocation(line: 5816, column: 3, scope: !26791)
!26818 = !DILocation(line: 5817, column: 2, scope: !26791)
!26819 = !DILocation(line: 5819, column: 2, scope: !26773)
!26820 = distinct !DISubprogram(name: "delay_autosuspend", scope: !3, file: !3, line: 5667, type: !10397, scopeLine: 5668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26821 = !DILocalVariable(name: "tp", arg: 1, scope: !26820, file: !3, line: 5667, type: !10280)
!26822 = !DILocation(line: 5667, column: 45, scope: !26820)
!26823 = !DILocalVariable(name: "sw_linking", scope: !26820, file: !3, line: 5669, type: !617)
!26824 = !DILocation(line: 5669, column: 7, scope: !26820)
!26825 = !DILocation(line: 5669, column: 39, scope: !26820)
!26826 = !DILocation(line: 5669, column: 43, scope: !26820)
!26827 = !DILocation(line: 5669, column: 22, scope: !26820)
!26828 = !DILocation(line: 5669, column: 21, scope: !26820)
!26829 = !DILocation(line: 5669, column: 20, scope: !26820)
!26830 = !DILocalVariable(name: "hw_linking", scope: !26820, file: !3, line: 5670, type: !617)
!26831 = !DILocation(line: 5670, column: 7, scope: !26820)
!26832 = !DILocation(line: 5670, column: 41, scope: !26820)
!26833 = !DILocation(line: 5670, column: 23, scope: !26820)
!26834 = !DILocation(line: 5670, column: 45, scope: !26820)
!26835 = !DILocation(line: 5670, column: 21, scope: !26820)
!26836 = !DILocation(line: 5670, column: 20, scope: !26820)
!26837 = !DILocation(line: 5676, column: 17, scope: !26838)
!26838 = distinct !DILexicalBlock(scope: !26820, file: !3, line: 5676, column: 6)
!26839 = !DILocation(line: 5676, column: 21, scope: !26838)
!26840 = !DILocation(line: 5676, column: 30, scope: !26838)
!26841 = !DILocation(line: 5676, column: 6, scope: !26838)
!26842 = !DILocation(line: 5676, column: 36, scope: !26838)
!26843 = !DILocation(line: 5676, column: 39, scope: !26838)
!26844 = !DILocation(line: 5676, column: 53, scope: !26838)
!26845 = !DILocation(line: 5676, column: 50, scope: !26838)
!26846 = !DILocation(line: 5676, column: 6, scope: !26820)
!26847 = !DILocation(line: 5677, column: 3, scope: !26838)
!26848 = !DILocation(line: 5682, column: 7, scope: !26849)
!26849 = distinct !DILexicalBlock(scope: !26820, file: !3, line: 5682, column: 6)
!26850 = !DILocation(line: 5682, column: 18, scope: !26849)
!26851 = !DILocation(line: 5682, column: 21, scope: !26849)
!26852 = !DILocation(line: 5682, column: 25, scope: !26849)
!26853 = !DILocation(line: 5682, column: 33, scope: !26849)
!26854 = !DILocation(line: 5682, column: 41, scope: !26849)
!26855 = !DILocation(line: 5682, column: 6, scope: !26820)
!26856 = !DILocation(line: 5683, column: 3, scope: !26849)
!26857 = !DILocation(line: 5684, column: 29, scope: !26858)
!26858 = distinct !DILexicalBlock(scope: !26849, file: !3, line: 5684, column: 11)
!26859 = !DILocation(line: 5684, column: 33, scope: !26858)
!26860 = !DILocation(line: 5684, column: 12, scope: !26858)
!26861 = !DILocation(line: 5684, column: 11, scope: !26849)
!26862 = !DILocation(line: 5685, column: 3, scope: !26858)
!26863 = !DILocation(line: 5687, column: 3, scope: !26858)
!26864 = !DILocation(line: 5688, column: 1, scope: !26820)
!26865 = distinct !DISubprogram(name: "rtl8152_runtime_resume", scope: !3, file: !3, line: 5690, type: !10384, scopeLine: 5691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26866 = !DILocalVariable(name: "tp", arg: 1, scope: !26865, file: !3, line: 5690, type: !10280)
!26867 = !DILocation(line: 5690, column: 49, scope: !26865)
!26868 = !DILocalVariable(name: "netdev", scope: !26865, file: !3, line: 5692, type: !372)
!26869 = !DILocation(line: 5692, column: 21, scope: !26865)
!26870 = !DILocation(line: 5692, column: 30, scope: !26865)
!26871 = !DILocation(line: 5692, column: 34, scope: !26865)
!26872 = !DILocation(line: 5694, column: 20, scope: !26873)
!26873 = distinct !DILexicalBlock(scope: !26865, file: !3, line: 5694, column: 6)
!26874 = !DILocation(line: 5694, column: 6, scope: !26873)
!26875 = !DILocation(line: 5694, column: 28, scope: !26873)
!26876 = !DILocation(line: 5694, column: 31, scope: !26873)
!26877 = !DILocation(line: 5694, column: 39, scope: !26873)
!26878 = !DILocation(line: 5694, column: 45, scope: !26873)
!26879 = !DILocation(line: 5694, column: 6, scope: !26865)
!26880 = !DILocalVariable(name: "napi", scope: !26881, file: !3, line: 5695, type: !10297)
!26881 = distinct !DILexicalBlock(scope: !26873, file: !3, line: 5694, column: 55)
!26882 = !DILocation(line: 5695, column: 23, scope: !26881)
!26883 = !DILocation(line: 5695, column: 31, scope: !26881)
!26884 = !DILocation(line: 5695, column: 35, scope: !26881)
!26885 = !DILocation(line: 5697, column: 3, scope: !26881)
!26886 = !DILocation(line: 5697, column: 7, scope: !26881)
!26887 = !DILocation(line: 5697, column: 15, scope: !26881)
!26888 = !DILocation(line: 5697, column: 30, scope: !26881)
!26889 = !DILocation(line: 5698, column: 16, scope: !26881)
!26890 = !DILocation(line: 5698, column: 3, scope: !26881)
!26891 = !DILocation(line: 5699, column: 25, scope: !26881)
!26892 = !DILocation(line: 5699, column: 29, scope: !26881)
!26893 = !DILocation(line: 5699, column: 3, scope: !26881)
!26894 = !DILocation(line: 5701, column: 24, scope: !26895)
!26895 = distinct !DILexicalBlock(scope: !26881, file: !3, line: 5701, column: 7)
!26896 = !DILocation(line: 5701, column: 7, scope: !26895)
!26897 = !DILocation(line: 5701, column: 7, scope: !26881)
!26898 = !DILocation(line: 5702, column: 26, scope: !26899)
!26899 = distinct !DILexicalBlock(scope: !26900, file: !3, line: 5702, column: 8)
!26900 = distinct !DILexicalBlock(scope: !26895, file: !3, line: 5701, column: 33)
!26901 = !DILocation(line: 5702, column: 8, scope: !26899)
!26902 = !DILocation(line: 5702, column: 30, scope: !26899)
!26903 = !DILocation(line: 5702, column: 8, scope: !26900)
!26904 = !DILocation(line: 5703, column: 18, scope: !26905)
!26905 = distinct !DILexicalBlock(scope: !26899, file: !3, line: 5702, column: 45)
!26906 = !DILocation(line: 5703, column: 5, scope: !26905)
!26907 = !DILocation(line: 5704, column: 4, scope: !26905)
!26908 = !DILocation(line: 5705, column: 23, scope: !26909)
!26909 = distinct !DILexicalBlock(scope: !26899, file: !3, line: 5704, column: 11)
!26910 = !DILocation(line: 5705, column: 5, scope: !26909)
!26911 = !DILocation(line: 5706, column: 5, scope: !26909)
!26912 = !DILocation(line: 5706, column: 9, scope: !26909)
!26913 = !DILocation(line: 5706, column: 17, scope: !26909)
!26914 = !DILocation(line: 5706, column: 25, scope: !26909)
!26915 = !DILocation(line: 5707, column: 5, scope: !26909)
!26916 = !DILocation(line: 5707, column: 5, scope: !26917)
!26917 = distinct !DILexicalBlock(scope: !26918, file: !3, line: 5707, column: 5)
!26918 = distinct !DILexicalBlock(scope: !26909, file: !3, line: 5707, column: 5)
!26919 = !DILocation(line: 5707, column: 5, scope: !26918)
!26920 = !DILocation(line: 5709, column: 3, scope: !26900)
!26921 = !DILocation(line: 5711, column: 15, scope: !26881)
!26922 = !DILocation(line: 5711, column: 3, scope: !26881)
!26923 = !DILocation(line: 5712, column: 33, scope: !26881)
!26924 = !DILocation(line: 5712, column: 37, scope: !26881)
!26925 = !DILocation(line: 5712, column: 3, scope: !26881)
!26926 = !DILocation(line: 5713, column: 3, scope: !26881)
!26927 = !{i32 -2136982786}
!26928 = !DILocation(line: 5715, column: 20, scope: !26929)
!26929 = distinct !DILexicalBlock(scope: !26881, file: !3, line: 5715, column: 7)
!26930 = !DILocation(line: 5715, column: 24, scope: !26929)
!26931 = !DILocation(line: 5715, column: 8, scope: !26929)
!26932 = !DILocation(line: 5715, column: 7, scope: !26881)
!26933 = !DILocation(line: 5716, column: 19, scope: !26929)
!26934 = !DILocation(line: 5716, column: 23, scope: !26929)
!26935 = !DILocation(line: 5716, column: 4, scope: !26929)
!26936 = !DILocation(line: 5718, column: 18, scope: !26881)
!26937 = !DILocation(line: 5718, column: 22, scope: !26881)
!26938 = !DILocation(line: 5718, column: 3, scope: !26881)
!26939 = !DILocation(line: 5719, column: 2, scope: !26881)
!26940 = !DILocation(line: 5720, column: 7, scope: !26941)
!26941 = distinct !DILexicalBlock(scope: !26942, file: !3, line: 5720, column: 7)
!26942 = distinct !DILexicalBlock(scope: !26873, file: !3, line: 5719, column: 9)
!26943 = !DILocation(line: 5720, column: 15, scope: !26941)
!26944 = !DILocation(line: 5720, column: 21, scope: !26941)
!26945 = !DILocation(line: 5720, column: 7, scope: !26942)
!26946 = !DILocation(line: 5721, column: 4, scope: !26941)
!26947 = !DILocation(line: 5721, column: 8, scope: !26941)
!26948 = !DILocation(line: 5721, column: 16, scope: !26941)
!26949 = !DILocation(line: 5721, column: 31, scope: !26941)
!26950 = !DILocation(line: 5723, column: 33, scope: !26942)
!26951 = !DILocation(line: 5723, column: 37, scope: !26942)
!26952 = !DILocation(line: 5723, column: 3, scope: !26942)
!26953 = !DILocation(line: 5726, column: 2, scope: !26865)
!26954 = distinct !DISubprogram(name: "rtl8152_system_resume", scope: !3, file: !3, line: 5729, type: !10384, scopeLine: 5730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !820)
!26955 = !DILocalVariable(name: "tp", arg: 1, scope: !26954, file: !3, line: 5729, type: !10280)
!26956 = !DILocation(line: 5729, column: 48, scope: !26954)
!26957 = !DILocalVariable(name: "netdev", scope: !26954, file: !3, line: 5731, type: !372)
!26958 = !DILocation(line: 5731, column: 21, scope: !26954)
!26959 = !DILocation(line: 5731, column: 30, scope: !26954)
!26960 = !DILocation(line: 5731, column: 34, scope: !26954)
!26961 = !DILocation(line: 5733, column: 22, scope: !26954)
!26962 = !DILocation(line: 5733, column: 2, scope: !26954)
!26963 = !DILocation(line: 5735, column: 20, scope: !26964)
!26964 = distinct !DILexicalBlock(scope: !26954, file: !3, line: 5735, column: 6)
!26965 = !DILocation(line: 5735, column: 6, scope: !26964)
!26966 = !DILocation(line: 5735, column: 28, scope: !26964)
!26967 = !DILocation(line: 5735, column: 32, scope: !26964)
!26968 = !DILocation(line: 5735, column: 40, scope: !26964)
!26969 = !DILocation(line: 5735, column: 46, scope: !26964)
!26970 = !DILocation(line: 5735, column: 6, scope: !26954)
!26971 = !DILocation(line: 5736, column: 3, scope: !26972)
!26972 = distinct !DILexicalBlock(scope: !26964, file: !3, line: 5735, column: 57)
!26973 = !DILocation(line: 5736, column: 7, scope: !26972)
!26974 = !DILocation(line: 5736, column: 15, scope: !26972)
!26975 = !DILocation(line: 5736, column: 18, scope: !26972)
!26976 = !DILocation(line: 5737, column: 21, scope: !26972)
!26977 = !DILocation(line: 5737, column: 3, scope: !26972)
!26978 = !DILocation(line: 5738, column: 25, scope: !26972)
!26979 = !DILocation(line: 5738, column: 29, scope: !26972)
!26980 = !DILocation(line: 5738, column: 3, scope: !26972)
!26981 = !DILocation(line: 5739, column: 18, scope: !26972)
!26982 = !DILocation(line: 5739, column: 22, scope: !26972)
!26983 = !DILocation(line: 5739, column: 3, scope: !26972)
!26984 = !DILocation(line: 5740, column: 2, scope: !26972)
!26985 = !DILocation(line: 5742, column: 2, scope: !26954)
